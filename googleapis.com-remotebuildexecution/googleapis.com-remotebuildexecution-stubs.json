{
  "mappings" : [ {
    "id" : "8ed41805-2460-4a61-bb39-eb9501b10279",
    "name" : "Creates a new worker pool with a specified size and configuration. Returns a lon...",
    "request" : {
      "urlPath" : "/v1alpha/8wzdh8379edwt2ks0nwph6bmiwmpa0ehlfrooxdlghi2nlc9ihbdyrcsm8pvz6a67p5a5v6xt49e0roiahyrgwuvmbadpdbwjn294kag9kd24psnya2f5tdrvpxxk5f4olino24tntngi9kvalqwq65br6h4jv5d3yctqbilkyqy41tioefoboi3c1ufchd0izo/workerpools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Beverley Walker\",\n  \"error\" : {\n    \"code\" : 964753026,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Esse possimus praesentium. Temporibus eos cumque quod. Sunt ea exercitationem quo architecto et est. Qui officiis aperiam in.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ed41805-2460-4a61-bb39-eb9501b10279",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:40.944726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "784e2a44-2b4e-4d93-b2a8-44985c4890ee",
    "name" : "Lists worker pools in an instance.",
    "request" : {
      "urlPath" : "/v1alpha/j565dg31sljw07yz0qo0l0jd8biqztsten0ltsy7ztqhd7w8z10g44sfxix4nlfom5um5hmf3k91fxh55o54q0xnadebpzv8rpjr518rexi423ta72n9psqf88jg69s3a6ct/workerpools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"workerCount\" : \"8hzyfgoklneg4p9kkzxso6dfyygajetf0ecedmypsmyjrcxcgwend3kp8u8tajjics0hvo\",\n    \"hostOs\" : \"o7x0xa0ievutxeno6poz2rvyiiexczqovaonjq9jg7stkcyn7ku1z5f9isukf3clii9f4q5y7b37o5s7e6uyu73poshaiizbue2zeox03xh65tdie52ykipqmoxbny7owmxbow\",\n    \"channel\" : \"hhl5rvzcx8d5jvyvfzvspsutfpw5cp3bdr1dcor09z262rgbid7baizrsdpaq7gvfubtxce1g\",\n    \"name\" : \"John Koch\",\n    \"state\" : \"UPDATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"8hdqs4bkw5ihk18g7ykuqzsv4p89jygv7otjck4k72ijuiy6sl2mwieqh6jw4zi68qphau7gou50nx61xg30is07w2urytdx6cndy54vwqpbqaggmkeac9gq2ks3pzgid0ltnyhufir8d2pol14mfmcy2ffi5ineuv4z\",\n      \"minSize\" : \"xpw6etv4ri5hr1uypco5lzol634jyxif5qfksya4bfw776nb62nr8dhimfcgrwuzzmz619a7xwt8ee7li1pw4ihpnmz15pvnzh8ugq3zutn20vdreleovr4qxamav9khsfiblr55tmgz54y\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"faxoio5y4ba3ufodbtg1gmyh44kazfuttnkpo8dazuu5z9opc9s0ncjy2ta01k0lesv8iox9l3bdf2d11plmfjj1eii6db93kqkrubh87loyswj2ey47pehpyn1or0trpgirloeughu2o6ib3zxji7tm9nv\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"06ylgd0envj663txb0yifr6vf838ouhyvxlj3658mym7bzh\",\n        \"acceleratorCount\" : \"ah5pcebugw2i\"\n      },\n      \"maxConcurrentActions\" : \"7lavzjc6wxuuqie5gzxk9hb6t1lknbwxwgtfqp3ls59oaw199fa9doznnjpb2r35y2phs7mu9e76en1dh16maepy5zdc4eh6oktf66gn4j6ranm1bgpk1a1mifcr801ichjregukt57hrg6qo1rrk4eczsggixvxbamei3jfj022jb37obzjx80irtrbqxkt0rdvhx8\",\n      \"networkAccess\" : \"qcz877dj42f02gv7lsjq9oiivku7p291vg22r5ol0959zj9yzp5hozcfjhadw3gjr3s\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/leemunroe/128.jpg\",\n      \"minCpuPlatform\" : \"r6eokykhszhnq85ndg8skx5yzqans67okrskl298pkh5dtu2rp2vusexl0clzirzua63tk4q4j2305nexmxj2ik8rap00n5851gs2ndjm145xoj53t27j8dkts0th807y29se8s36h\",\n      \"reserved\" : false,\n      \"diskType\" : \"vduhbhnzbbmhx4nq7u6jhprswnox6anmuqze3iu5pn4d0scnx2yc749mrkyyto5vwndwkfgkyw0roxp2nw7onpkbnb0ynlh17zin1dw1iyd3dvt0t8qbeobkcw5qcxfrwzcz6bn39xzdcrhwv9wd7tvxe11fldie4vmkopxu74ilkb1mdsnynhgd\",\n      \"machineType\" : \"nh5rxovgtlnl2cqj2rwj9gnyfxouvcvy1lvi4gdhnz7i71xivnukn0gt1gabt14gdpbvac2yfvx8ob4nmcs6uhakf9dxadz7t47nokyicy9xpi7b024dith2pkze53smtnt500etvz2af2\",\n      \"diskSizeGb\" : \"zxf39gr94lgg8m8ufkmg0nu8tbixqg04tsj1btwsrugegzobqp1y17feo0ep963eale0ltd5p495k0ctyminno\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"si2m3mpqnxow0qdzvgsun55ybp7vrbw0a2zm17o5eect41lrzc4gg0qt8rdru8dy20zgjc5uhfblyobwc6d3sk6p9\",\n    \"hostOs\" : \"czfmiyf0lalu9dlarw9vg3e0xrwc4vy3v9wl4y37hh7jp67c19pft7geb9\",\n    \"channel\" : \"wnrgc6fe5lmir80kxq6yuhb53kooxi0ttksw5jjq1jq26h308svnace9hor2pttd48u71prmlb1jakr5khk11esfbs7vtt6d5q3aesbfb8fd7ll0f8lapvovq0oedoizvoxxv08cgn\",\n    \"name\" : \"Jocelyn Kshlerin\",\n    \"state\" : \"DELETING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"b1pzx3vtua7zqs9695cy5dtcqoa25lbbh0mf2fvrxg392e\",\n      \"minSize\" : \"5crbk9w129rnpsm36kddub8n0tplnt578r62agxxg2tgju8cmzxfcpor\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"aunmyf3vg0f6jrwv45okwzrou14w3h8uzrjuhho65iw9xbngq2p9430ic6n6vkg7vpkdn2zb8ybs3h93ziz08a1vqznkg1\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"v31z1ssgleuxnomqezphvv7brqfqoq3r8qgxmxbs7zaocgqu2nxhrkxdoe7uhxrso314mzda0j0puab5z3lwobsdnv5hkfdvbvlglxqcqua0oeudhjd1viwm0u8w2e8tt1a8k99dz9fxnci9gopyzjognikj\",\n        \"acceleratorCount\" : \"1al6xx29ma29ywc6b4ui53xomdwocn9odwj2t09rgmcdn4gwcx572rpeeef0dai409wd7527ntts9ensfa0tp954uxulu4w9882r1r504w0sta9jkoqsf34x59ms2nbrcq1kgaab1vxwndjs4rso8wkivjyxvug053v4omi7dlxgmh3jm7lxgpwyg7r9y5hfd2lug3z\"\n      },\n      \"maxConcurrentActions\" : \"kfl9z56tehsfxer2atj8wk603zuj6b9ul4w87bs1tijzmsagus65yl1utbzjlih4yeskcv0plrpo0182kxw9q6fs7\",\n      \"networkAccess\" : \"mbc07rndpyyfyh4wgqx5vua0o3yuuogpl0seqcop2qfeorpda46xwkhi3mtx52zl6fvl1t5ytk1imx3mw88kt866g3jce2502um9a4b9c7f1johsajkev5pbepbnx1ymgh\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/loganjlambert/128.jpg\",\n      \"minCpuPlatform\" : \"3x6fixjoyk6pnufvwpdd6f9l10x41oylxvhys5eog1b389r7b9ulf1aphxktqkhji91hdj12byx4uvgx7lxnq38m3sekl93vqxkbmycy54kuw80ncv2bd9e2yhzmrb04x1f913k4nhgxms9j5mh3m6pbvo\",\n      \"reserved\" : true,\n      \"diskType\" : \"5qwn4mbuwni31bk7eehv61cac82khcx3ty1y27owetfwxrsnum3mq8urfpovbw7u6z47ag4q2yuzecc191d5m0o25ui3m2y4sdylb5avsw1h2970qnnzqhffrb\",\n      \"machineType\" : \"b5f7jsyuw78ivy9ej49r8k9xawt10t4mmht41xsjujnuqt3w9twxl8wp62jecz10lo8qely9xs04hoxb532lmyixoy9atc5a3qu1walrk8gbu0shq2znfqa05g757gxkk4d\",\n      \"diskSizeGb\" : \"72n64tn5q5t383ylf2fposrlogyb3mfwvnsaqz6kvpswwelp8amuw9i02ik8pjz1do2tcxfezvihz67b4igh8cei59v376oep7\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"1uuhteu985eijrd8eaq7g9xv25x1lg8flc2j3tggbz40rjlafrkw9d6t3ta2t4zuh2f15n8tqecw06sjrn1khdmk6oaagpvj5stn3jturuu\",\n    \"hostOs\" : \"qxzjewmh8ifkz56ytitlaj06wyvplu4s68jpkrcf551hs61pz89wrktfyrsswt1bfpl3azrh8q5jn1yekve6e8ebg8p6rxymddxl009rioxh764glaax8rk93932pcid5a7ieyx2fsjss9ww5za23x1u69r93seersqgwh9hqhoczedhhiedxbptml3avj5j3mwx26tt\",\n    \"channel\" : \"p2u9x\",\n    \"name\" : \"Len Shields\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"autoscale\" : {\n      \"maxSize\" : \"7pptig90pfveclr1umwmv48v9ez5cgvvx8zqhj5c2hy86f6fnxuhsnvfwi06u4wms9tgc1h9s7r3lta005bfmksbjee2a5bl0p1b61c1szjy0abvx9jk2hvz63cflkem9mq3gzoizv1esz8i0tq1bucz22nk7kc309ph2\",\n      \"minSize\" : \"dz0u51xdujmpq40xho6ggccrsg0uzl9rqx9nikmd06l9nvoes2bhi3sia3zpm7dhxuroekf8ig\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"h24bzteu43apkml3b\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"behzcfan0cdomw7g107v5nd0z8x19dd6gw9cca5bqc8iou33dwnsbpq0fee4dj9591ya6wzn51lidkwv3cz8t84iyewu13ccui5dd6m1wysj6wyubq6ez1wof17nij6a56203b5zscaexsd67ltvdczkqmmk\",\n        \"acceleratorCount\" : \"dvuejvuk6qdda9s1s7d41m2zhh1oqtlhotrs5m0pediksan5dateov4okey21z0c167cxv6j4zb6qtafm8ugznn48i4uy7tyb8yycgjyq4tgi1ysj8knaunv4yhjcg55vp8a55oamhm56r2y0fzuhkmht74avwbstw1l4st61w0quqnygi7q5s55fe99b0o6x\"\n      },\n      \"maxConcurrentActions\" : \"hpbtx4i8sjsyb6eqx6ydakqujv9h5du4o9aa\",\n      \"networkAccess\" : \"0kwf2q568l53vpekmztieo9p63oawvku3ajk9fnum354k3vfz1te02lkiji9tpfi6se0g6nttygze4ai2k5te4ykpydt53rcdmq64pxuxe4oixgwe2bapnucqho\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/jpscribbles/128.jpg\",\n      \"minCpuPlatform\" : \"mndjiz5v6qswn3rei9ahzhiqceeesedhcc78okofz7wy2q3086k5osbxjz661jufia6beqk5eynqd5edctvkbaoreoeijjchdkdb2t91el608jnurbi6ijz6o7dz8zx4orydxpwfru15j7dtjfidmmap93t5ibmgzdd9z1znqdfkygvjvtamvlnzu1vfi6w6zosi0u\",\n      \"reserved\" : false,\n      \"diskType\" : \"rwifjd57bwkbydveh0i8pqdlqzrfls7839ue8lwugjtp094vc8cy8yfydot34gpc2kv8baartj1eo7pkky50b5fc1ov961aac71ri\",\n      \"machineType\" : \"s4yhizd6ahv6xuokbiuhu26xm8fcz7u8uoj8d4fn3srrsste392dy8\",\n      \"diskSizeGb\" : \"tn29ncxsmfjm72qvs97l3422r593tk2d41gi2ui9vmy89exg1uc309h92iccieoj8wylnes46jr5gfr3trc9p6n8qjvueietxqsvxe6sz15mzvud0tesiwzut7eevonnryv49g9pml1a0rf4qmnv6wiwlrr05bxpmya7uthk3ueyrjmq4eyzewf0\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"456jnsxjnfwehg6pbkbnn87jdrx7ffgxsvhcwjof98iixioucqx0tc22qzyu4tu4xjz34e733bni85e02d8qw72sw0xz5ba7ge\",\n    \"hostOs\" : \"wotuiv8qp2mqiovmv5pl2g03iuz5vc0ra00qbkquohy1b3ei3mhikcgl5rmfjyo5xbaabllug4i6gpojus22je8h8kcgyek251we2oar6a30tg8y07to7gvwr44brp64ee06hf1x30n2ngnnhrpjykmi9pe6vqkwv14\",\n    \"channel\" : \"aq0rvgd9q4g6r7jrmye0lwvecgubnzfavk0oo48vv5e5fm0889jy4a4grc6mqzr2zlkkn5gusu1kss3x3uzuxgonzvtf0z9fe614zss8pvt0cwboffxvg5e924q\",\n    \"name\" : \"Kelly Crist\",\n    \"state\" : \"CREATING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"cksbt1bd5r9xcfpphesd0rb2ee5qcniyvtpshmcs9rxv1wvglv7zxvdfjpzszmgu87jl7mbmwan2tyb2sj9we1r6l8e82ozzn2rm02kx23syaua8cnftj8k4gg988dv2oz760qvrs2qm5i8grygt5q9i54wu7qwpfql5hqrvwg7fwng4fhsuwtmtapwy\",\n      \"minSize\" : \"cfsaosbb5ls9agpp9ftba4m3u6yvy32521wpvctlpphztpgxfqddk04vdw0vn88nmyxu14udcaf6iw6wmf72wts745b7chky0o6o0sle5w20swgsk20hbpo6hlgvd9tqg1njkwnwq\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"25k5gu\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"p2txqju18b22ltypijlpgrx8pswccy3i055rr5cjakpn65f8bw3uwqv0bbyol0rn782fmn\",\n        \"acceleratorCount\" : \"0n5f04ucvj9bzm656gm6xmv1ju0poo52wa9skwck7agt2u07i5umweazn5kbm7ddx7\"\n      },\n      \"maxConcurrentActions\" : \"j45gb2co0cyxsr09v1zjz3c7txrnwjld6vrkdt0bmgc8bgcek6ascxazdkrer5b01d9r33p4fof8scy2h3givyiea2m45odlqqg9o5i0ddrowu95g542zryqtqs09j7z2fuvwm8hu\",\n      \"networkAccess\" : \"htkay8xpmvfes4nc24t5wjc4n3ca5cmuzgzwz22c\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/afusinatto/128.jpg\",\n      \"minCpuPlatform\" : \"bdnksuli6m4gnaohxm4ay7nfa2xg8yxqsfjsmrsp0ibnejj6n9f4x8vliuc4p\",\n      \"reserved\" : false,\n      \"diskType\" : \"wuhyzne6jwk6eybacqws1rl96ur28xmjhg5pjut9betczyyiho47gqyskuety9tbm12lm0h48xcgrfaj7w11n6aa0cqzt5gj\",\n      \"machineType\" : \"pmm0ngo18637ydzg6q8wll1y27k0ttk5poqrafwbqck5pvjwckuyyssljg3oe6z16knjqfvrpdiju3f0hn9nmeu8b1kuoe6ygqfuvnn6f0lzhd44olb3tl1nuktwlqshiqbuhc4b2bxwyzvvmjis4k3b53whvlhh4geqpg4f20x6ps0euyfvlgn0\",\n      \"diskSizeGb\" : \"ru3mwi6slb9m8pbtwdne9tm3umdz5deizi5pm74ofycglb1nqphwqndsazoi2bckyccy8o4s6rxkk7oeshyum0mc4lb93l2lcbglhiohpn70r7lbodxzvrum5gliutf261nub7a64meqz1pd18rwy0m7s3bzc59jzjstkx\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"mot96jgqkqit8e741xg5xa1hg5p9mggtn9ik2bil9z40h6hwy8dtz98ukau\",\n    \"hostOs\" : \"tb5w5a2t36cfugyld7fazqcxjhk5o47k0q84b8qh3yam2xzqwk3bodud2cutbdyi9nbu058fmhp0ctcarppgrcdumfqzcwhqqptje7kc7ygqyvsnl18lbrwkaq16p7jst4z\",\n    \"channel\" : \"nqoh5r3owap8oi58mavv9g6dp3fgi9o3z02vd51v8rv6gqstw0hu4i2je4q8oang9ugc6v4i3dtde0t2sfov7um8xvki0af7bkidceyd2c78z0lsolwsi4i626c\",\n    \"name\" : \"Mrs. Neal Herman\",\n    \"state\" : \"RUNNING\",\n    \"autoscale\" : {\n      \"maxSize\" : \"y4wevcs8gitjdwmwffhnuromhfeemcqbr0e3hh0vb6exnpzzliiphxn7ce8au4y54\",\n      \"minSize\" : \"tgfjlgub3d02gcix48m5ps7y\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"knrwl0on6sqceui5oxj3se2d7agi5axa7phphz4h23uur9ewdbmryepsoew8i8eesbimumzx4jctta6hym7ff54u94oyftgyrwgt79kqewbb5l1y8emlijdv0sb8v9tnv51whpwpuyzyysvkdl038it4ngpqadj1mibpbtn1d4oj9t\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"p0kw4v4kdknuz4fryyz4ogd8dap66dyeubzqp8vny0ua8tr6216snhnb6miq3ravicl1pihakkxf6e8m35u39hy3tjj52hcy1owpw0ysp0qe0m0ul6i0rvybyumk\",\n        \"acceleratorCount\" : \"a0my8u9q0722z9r0ahy0lkbekr6ztba3du1ws2l4wjose9rttkx2w7w86lei87jk8rt26p4zpg0p\"\n      },\n      \"maxConcurrentActions\" : \"kwlkgqwjlewk8d7xz6su322xei63yn6q3l3kpz7vh1kzqhm8kusgjsjdiq2ce8liayl1s9yznjlc5rmaz1tw3oc3xlh\",\n      \"networkAccess\" : \"2oa3k1y8wfbesqj8z9bk9duzgx0wgt39mbsb2sc7akt8joptupvp8x2x44qg21c5yuyu6b9dq19jegfl9n5zw8yl4542jlw3z964em2mrvfd\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/Shriiiiimp/128.jpg\",\n      \"minCpuPlatform\" : \"qfpzn0di0ndmggc3u4rtf6i4rw2pftaxcuog5szwrtr4xudkot4g\",\n      \"reserved\" : true,\n      \"diskType\" : \"fkrty5wtf3a9ztj3ekeibxob8v0me8cz9zwvj0xg4nqoucuimpgdv3wu29b2sm5ehenh9x9bo9qbe2zhaodzmb2ahowy4wmwa6c36uy2nxoj4h5uyhaqnjjdcat4omfdcyfkot7loqycfbh59602ql6zlng0zkbd93bdl05tgxiq72mc7stlkz0yx\",\n      \"machineType\" : \"pbly4kriyhvsnxtgq8dll7ao5huwpcqlz1u8do37rcxifjzl9dlws0ta6xjus5gyzfumwup7meuptptyrkm2nw090fp370rglwpzk6ydz6atmxuqxh3xu9czplp7bcsf75ut2ovurab6fdgh9452geanspb\",\n      \"diskSizeGb\" : \"oxqzihg3kpu0ztqb04otxut1glgho4299d03j7fxa4w6aw2f2hp3mwlxmms610x4spugp5xtkrniy162zgx82bihxtsm6n2fho0ynfumlv883nx7d93s4dbdcfaztp5788btai95989geqof2wz30e149oo\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"1lk7ql8b5q3zotnrfwdp\",\n    \"hostOs\" : \"h7mz9co285ywdq8mn0155m4sy61ysjvfcsrlvqfcbwg24zqxudjzlnmtxzjpwojxg1ud26a85y2wpel8prl2oh8qg3uqb0ji3lgvdr2gz4ccohfb9pv55c4l5tmzubb0k8kc1ij2gq4w8wyh0pms9d3oilcmw\",\n    \"channel\" : \"3juguwqf15tfao3u4mqt1t95t0g1cbd1h3e1s2rtqonp2dzein3co8inp5hh567alpwu1zoggugl7mwdg3fl9nktg6ipoqsrxqo9yqh6xomjtyeqs47jjv53rkcuankyro022rm9w8gfo6lu0dazbzjlb013\",\n    \"name\" : \"Clarissa Hamill\",\n    \"state\" : \"INACTIVE\",\n    \"autoscale\" : {\n      \"maxSize\" : \"ucukupii240tl9e414e285ozr0oj1gslpfak9vdifsttquco\",\n      \"minSize\" : \"wbha7gwhh738dy8ayokxo8im1nzw14xq4tq\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"8s0mf5h7xfr2wf0rvse0pjvri85qnm0hiw7l4tr8qp4evdf3g7tnvb1f20lokrv6ys7gsaigjs5j2tjaxsayezd6ti4g7tq0mb75ncx1o6bw\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"lunihngi36bbc31fd6hoch39fvo8taswxz8bo2u9log5jdq8jvlf5e6z6y2dsbwda882eafz991mztf2\",\n        \"acceleratorCount\" : \"8d9hpu6wek9c9gpbkp6wprr8umyj9v61th0ssu0it5fp20ibr2eu8amcekcv2mk8rwboitm23de07gxl08kdanuraswlwwm62qd8nkjhyepz08b117beopklxmya5ctwaf24su92zugfmw0e1jr5w0zl5abn56c5q3yzwnlv2ifpc5npo4pb2hx7grmevu4y09938si\"\n      },\n      \"maxConcurrentActions\" : \"45i7vafgrh0ln6r08aqtpe3oja8u57sy2zu3ib808r93bqz7g0bsfn7h266yiahgpamzjpxm9jmygwp5vzi2va5b4kvt8fsgdw9bkau0l6si3vwvcx7lqcu5l6jodhz5dfwjygf4i4eksvo1sa1zsnhor1qxnxhpu13o1n1jsp2zntpy\",\n      \"networkAccess\" : \"7225co5q6nuq4p0ts363fr7imyuns38ekl9d691g3wdpwb3z10qh6j8tbex5qjwva8ytgs3l5dl8qi553b1tgbslfysr4hh67gwmui79b8cthk5e8o7rosoxidvp9cmr33yzpn4wr01kh1gw20roimn3nrud9xs6snudw7upj\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/d_kobelyatsky/128.jpg\",\n      \"minCpuPlatform\" : \"f7zos0p5xuimrnmca4r8m2f1u7el29obw196ieut3riue3beh8y8s4x6q5m5dbiz28dggwmayrcjgta6a145od7x21bvhax4czz9o0c5aoofjlpouq2ivl984ngjspx5ekikry72ws3gvob9w0r1xofzqaidwkpmcwqbwo5j7r4wmtw8078o\",\n      \"reserved\" : true,\n      \"diskType\" : \"7igjhk87uhbs8wygbnrltn7zyeg4ep0cud5iq86rms46gpj87twyn6zinf6v8bcuf74uaz2zh5gf99fti11w9ljsdkhcsr1zmq9p5wojkybftl6krn61t9wstjwtp8fl00bqzzkhio8350hwbnf66ph3ftckta3et6jlgdbekg\",\n      \"machineType\" : \"7uoyb78a1jb3xv037t18037uzibjlyq8yaa40441frze8tlxsw0x\",\n      \"diskSizeGb\" : \"l5f58r6nxsszozbnb9icazmpqhtvzh32hbx33v3j\",\n      \"labels\" : { }\n    }\n  }, {\n    \"workerCount\" : \"dt9a4o6a6r4rn3scv9qmh9wfdnmpvxqgugeoqfdsuyizbt5par1c5vma2pca3qkyqnkv8nq0paii1h59a0axzmcosvibri0gna1fz8upfufqo\",\n    \"hostOs\" : \"jypyg8bwoe8fg8o8a64ausmp1ezsmpl8k9dw70rrf0xd3drdwecvx62mn3vjt3sutr55vlkqcdjx3s3cweac2q1yf04aj88rh6a32uyngkncsoydtlqp49f8x702ocnw56731jxfxakiu9rqws9i15wg1ivivvqr3\",\n    \"channel\" : \"qux242u516g3n2d3ig82z5p5nm9fd0pv4y2vtwqhhamjpnj22suvl98lp27ckkxjn2v26j5ahuxt12xgyhrct7cxf0khaiaodq0pr6emz4xerym8e5x78k8lqh8e8s4h8\",\n    \"name\" : \"Darius Macejkovic\",\n    \"state\" : \"INACTIVE\",\n    \"autoscale\" : {\n      \"maxSize\" : \"k0f7g4oapewcgt88aqvdq9o97gwus2cb0bb5ah0c646hykb10fvbpiar4s2jd2w05ngmi4szr5blrucz8k358g6fny4hborwte4rpe15isb6z8ilidjlkyd8a0rt73m6q2y6yln6ainvvhjw61bhkgrj33844rwnywy9m3enyn183dsj4a4r0brj0j2k\",\n      \"minSize\" : \"1058q8qysqvk9rvnnmxcs9t4yejy8o06jwp6nz3i6lt9npzy9s35vggs\"\n    },\n    \"workerConfig\" : {\n      \"soleTenantNodeType\" : \"7foumgoy0g0ketcqk03p5glkh760khckzgvylr8zwhzeivyzufofwkjeadruqxjvthhf5axrvv\",\n      \"accelerator\" : {\n        \"acceleratorType\" : \"v0pwchqv3e2cfczb3sggmyhxssizf77v7478akfx4q6c2m2vqz4cvzaf3n0kkueqfvrs8a1oaxqqaskb476tas38e7rjnscxggbkx8tg3g20eit1dbh1r3nb5icip3wcmg38e9v0962grsk59ciihj7dwq8blx8edc18exqc\",\n        \"acceleratorCount\" : \"l3ig5d2hb4788jn2of9pswvaa2zkqhi69rh77khmvsvs63iu1duwlslsgcblvtu4utc\"\n      },\n      \"maxConcurrentActions\" : \"q7a\",\n      \"networkAccess\" : \"ayceitx9ju8hvxomgr1czqjz3p50yzg80fgnnt1qgkcj\",\n      \"vmImage\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/commadelimited/128.jpg\",\n      \"minCpuPlatform\" : \"baiwuliw5vfg9dn4fgk9w622a0liow5tdcpds4wg0jfdz8ota6n93ybu2m1839hoh23k6ok\",\n      \"reserved\" : true,\n      \"diskType\" : \"lr9egkr4qjzd8bvzrzek3xpbq4wrnchiefpuys5jtjvybr74t\",\n      \"machineType\" : \"u0lnzfl2zvkgteo6iyxr4seu0mlda4st181ji6i378z0pfegryduajvtt1476y734iu54chlfso8yizvpjcwal7b5q71x6mtyu7xn38gkeeqo6ljsvxikuffkri0j6t6oj1ut19apb6z3nmeh318rwy9odsxgt8y8nc6fkm6\",\n      \"diskSizeGb\" : \"snayhg3cs3vtmr1ou5c9dqbrbiofnl4g51o8sv6i0rwgt7fpnzhhvtjqis1cir7jls5sfi5qc850afh9psazc85woufb1310xgh4ybrswnqv0cjncc91u9cqdb88v1d95sfu9dgbdojvf5yk13c9rsosftyfcy7y8yt8c90knf8nub8b7sxqu4t99aug7ynhfppd\",\n      \"labels\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "784e2a44-2b4e-4d93-b2a8-44985c4890ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:40.944539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.list",
          "schema" : {
            "properties" : {
              "workerPools" : {
                "description" : "The list of worker pools in a given instance.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f28d2134-1644-47b1-b844-f31db848f05b",
    "name" : "Creates a new instance in the specified region. Returns a long running operation...",
    "request" : {
      "urlPath" : "/v1alpha/dhvii1fk6vocb2zr8ii2zk3b2q20ou62841k96jfvkcez4lxu0zim0ik1fy6cnbsxli7ielbpzsz9/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Harry Torphy\",\n  \"error\" : {\n    \"code\" : 2102004660,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Quae id ex natus. Quaerat qui voluptas. Placeat totam et repudiandae officia beatae. Atque molestiae aut et omnis architecto nobis dolorum. Ipsam fugiat officiis consequatur dignissimos voluptatem est\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f28d2134-1644-47b1-b844-f31db848f05b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:40.942397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3ee9a6f3-2776-4e0f-9b0f-aff556d8309a",
    "name" : "Lists instances in a project.",
    "request" : {
      "urlPath" : "/v1alpha/lcn/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"4hv5vd76v98v9lwqybec5z7zxyz3kkt24m6u9rc8am0y9lass11k13ey6zzw74d7ukjy9qi3ntdpgja6bvg6el40ldn88oyuv75boke1vj52759q21a6j1ffkooiiqsmdnkb5igyfvwzykfa9ikvlax95qxv2nbvaidzhcv0y9opstwhcukz8ajkmqe\", \"ucflt7c7371bb0m0bqudl4zmj5en06j\", \"j54f0mnnkqf76wg0uklrvxdvhuahh2ek8mrr0klme7uelqd6h26vwzrm6abp7i\", \"71ndile8wg0jp3wkbj41v4ez4bx09w6nk7f1y0bip3975zzmejfgnh9ymry7sl2j4dic2gp3xxt27n99ywu7qc3y81mvawu9he25kj0v0jso7rkv6ehvf0smphyl4r2ko6yhatc1iqba8slx65pjbe\", \"aygsdysuampbzjas1sqf\" ],\n  \"instances\" : [ {\n    \"loggingEnabled\" : true,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_HARDENED_GVISOR_OR_TERMINAL\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_BEST_EFFORT\",\n      \"vmVerification\" : \"VM_VERIFICATION_GCP_TOKEN\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"kaepqktza0rtixamv2vvk7elhvcxguxtrsr681nojca1inf\", \"36kiefu8ovub9tvvsw6\", \"fmp\", \"e5kl63fld22vseng9eltggj31f130wz17trrwn591iftd3jtpxh41dhe6prb71r88x0fv29xng2xcwxjhwl608t7z4d0botimbzwct0x80kfeq\", \"9q2yr4q37maanx9srdsw03dai2ploe437m94nz7ny6s1fnxwfdn1ge1jy3uz3ke9dmxhfrcnzod40y5h5et7x3vuh6r831mxc2qsbawthqz7xieimxud\", \"5046agcmeh4lpx8k6oc9u9figw0q82q1cq7xjauicxt6k6alomml975qfr1zxr89b1p4i1zndv3gxrhye9x4d5fzm\", \"zn9bor5lxx314pzjp5w0f6vm4fw12kun3bi7xh8jyzczsj0aib3ozyf9zvcibuci21c83kxccl9z4vsd0mijnp3howumitsi85hmw4xcx2wdoqpg3tt8lnkjve13d0e5xgk080ko\", \"h8m18h7xoh7obyis3m65m2o35vz6n8m9eqgfkoed5m2xbo036l3eybtrwanmm4km2j1j9bjrxshtl3w7y5catpm4nrpgg765rzgtfhs84pixt3lefay3q8haz6kq6k4yj3xyp6uje3cc3vp53pgpmtjllz86ocytdx1lw4teotomu4ec78n2l7ogj\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"d4p40jz6rbsjkliju2op63cjy6u589jq0pp73cz2nw5rxcoh2qwo9hcyjzwd5jya3wj4vfwvo84rkqqwha\", \"jgj0ph3ogye5uqkez4sxzjuxlapxl9ccm0ksmg5dw5705g3epids0p9cs1riokhcbgf4hae5nl6xb0b1edriljptj7mqd\", \"sxa1pub44f3x0108wpp1bbe6h9bs0owc4p8ljdwqp3753rrkb8d5g0j44s1xdjnnk8klh\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_OFF\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"21haerkatr8kd81bh3q29pcqtrkywek\", \"am7103vut2lxetggq9ddtx14j49qyqw0fwoj7vuc7wysj6wxffsx9sxxlx81kyx7xwettrk1f800r\", \"n05nuu3i3bpl28biq8ja4axazx5t9dencckrododsgs2w7ixxpnkttd43mym32kkbyt0x5ons5r1r3455ybskvdg5c4zovzulixteiy51p1day\", \"bet7uo7qqhxhjef2esw5f3hmpnicujw6xn50l9j3goopyicnhl1xp53a5swuw6ntrchgotheghxde6rdyf2j2wiz45xje4ve8l\", \"66r5b3exv3m3vi3sj2rawjg8qhbclnixhkutcjczxb5ycx9grwsip4lx6ng5y5zurmm5t6vp5cpzaw579os4km04akhy2hgdxw7urj4hqqcllmhuk9nxessn4tiepemtinx7x3bwvmloeoe9x\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_FORBIDDEN\",\n      \"macExecution\" : \"MAC_EXECUTION_UNSPECIFIED\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"nv1f4goteozg\", \"iirg4jz7uci1ur6ufly1daa6zha5y9bdr535mvsayzvpwrv5r6h0bodp3da592uyk921lvh83hxulpek7baos85nmuq49618yvdb9c\", \"nfc0gloxt5rgcwmvd3wirleensdtg\", \"i7exa86q5tqh0gzn6dywvuurxlidosex1m2pj2v779b365kuh9k4kps8smfk9obwcznn6sc955y078hiuye1z3cmsetc0muhw5uvtuv92iut10z6etm7rihmq1unpcj9x6df38zxgchubcxmtdt1c03zd6j3t1fybqlx4ihsva27piwmuv7\", \"6csfolwhfos07mxdpb0faxlfrhkd5t2xmrcpv1zmfant0v14a0lohr5a2v4vvk862xuevr5se8xj4oayjdya4abaqwyxlsk4cz7j5zq2z33laoawb5bnbh565rt10hm73d\", \"rg9kqmgt8uuelebpo3bespq2gqutp2ivlps55pzwq4vb6q91vjyj67hwt8m76avi9y18dg2e0erfgy9xl9n4tvaekf0228zbjyp5mi3qx87m\", \"1szqvzsybzn7zael94ltq82nv2rsmvgm2i2vl2w7wi4awx\", \"1bvjc8kan6a571nov0jn6rjlrwa36zwc8fsiz2028k4s7hwew9vf92crfp8m1pqelyrbienboqmmaoc5qkmqglpz5aehzalw598inposkmms2enx199i1wf3ctpq27xxnsj3oqrywi0h6clorfxd24t19r18fqvp3sb2wpwdn3at61vgb0rt9\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"linuxIsolation\" : \"GVISOR\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"h346pr6niy8f5d7vq7y8sdq6ti9sr2fxdws5tbybia77ltw5c0ipsu8iq7y5u\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"9iaip05dyahlvqcx3usjg5pq1o9kab52asb40akhzntqm89jlfy2iwyph954vra7lpamtkonxmo\", \"8sym5jryw0tl9kzcmm77kt1j9vnry3fyp4bbhm4rui9ltg7rk9b6ybowqw896uia1tr0ac2ek74iavkdab4fbuzxdljzvefur52yw4te9i0lax0lu4q384opib5gb7zjwxnxgyijywsy06rrll8q375dohftgexgkcc95yg\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"y4gefeaq8ngw1r68lj2a5x9eeznrmj8vky1bngn56tnud4j2nwdjwzu6m72e5xyz4ua667n7itmr7cot18ll9c6vj4vmb0ql147wqrxksn6o\", \"o0farrr18akgm2m9hhxna0qef9f4sesh6b1gxa47vxxm02zzdzrhiv7y12sr05gdz67imjvvi9bgnldcj2vomz7j5p8h20hhifasudd0twqu228xlrk0wye3wyvlf48es80c62pcrgeh921gg9cm3snjv9sfado0xcikps1ldkvodcwa\", \"a7js3zazc5mx85rd9nc72fn4v0o8lxnwg3rv7lj6mvn1tqtuwbmkufdl5qdtazrrinfrc35mwti5ic4514bsz489pasuf167nq68c5b7bc005asej28nbf99c43byl8bj4u1u65\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"ee1upgek0gzxaqqudk039q\", \"qreaond56vyki3y5cd974avku6sbogqahaunpdwlsg3qmn2z97gwn0236wgwp3q62sbw6033dldp62bxbqav76ftlt4itjtm16vt6h6ff2fxeoh5yei2gkm7esjb7ggwgmrddgjlnoj1z9phxo7jidshos9v7luypuzsod880hgpgkjfpif2uy5vg0mhinopa\", \"akus5izbukal3g5q02re0r32wh1mqq15kmn5wa9krz48a0iw16p7bapi\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"342lr66p79iyvlh5kl7rmlvwk5wxsfn16hj8a50o8tmezv\", \"fj2mjiwmdlwadh6duby9n8rmlwpux7lj1prx08fyk193d3cu7fyddhky35carf52q5er9yfefjoopazwdf8xq1lc81kf0vl9qaoim5dqvbgvnv40xnk1cb4obril7e43dxkwfvvnvzewhpvxl6jpc4evldhwhfc449jrnuapb12d0woozp502q4o9sa86t0t6\", \"ttgbpi1k6jw8k1lu18e4p4rref7f8j1dou1m9kfls83elg4wfa7ot8rj09d99di0zgu5m6eirordg781kp5z4md0tsvqn7fcrcz4gxh0sv71p0a5ww9kynuhq77ig136sfcnf1oui4cvc3h167vej2p8rwaa9xemwb4vncsyy96h5nat717vsfanb20crionipk2o\", \"xj9nbwhl8u88r2npc0d7x2pqe1j8tmdiq00lujgizv054rk5nwdtdefii532eq2bgdno9310hoasfvkreisag5l3q873n9aw81rc52xgpqwdfv4w0uxua3038ilorcrhmhm1higl5xg389fnfbk9qiwqvfjinuebu1q3m3l\", \"av4pq6ufrarp6pqxrpcxvep57dca5e50lzy8xtobr0g2kh2iw3ohro9kv5ah05i1soqnprif4h8197kulpq\", \"le01ouzqfjvprb745bdegdnpywoqcqt8muf6ez5npyjgksntscxg50zrumu5x8fhjhi6uiwzjo1rdrs94i0fbg1d7foecuk26rhuqnfgtgcv6m7sot4cenu7mxg99x9k00sx2hicajvj8bbipmn365phbe4bwtqnxczjstmxoucby2dvj776\", \"1n3as42253snj\" ],\n        \"policy\" : \"ALLOWED\"\n      }\n    },\n    \"name\" : \"Miss Latashia Walsh\",\n    \"location\" : \"pa8pcru9x472ak8w9lac8ksgc5bxq4rxryf8kak74ji46a57umbdbco3zujq048lk9wtwofwhexdctjtss535q3j85tgij0jvrvo\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"t3zkf0u7b2kgbrwdgh7zrwk8hr5cjwncbj2u3zeqw7i56rjojljkx4lo23mxjja1dqpvtm40a9zr0kqgkopmfr1691dc85ityt3ss9cfz9a9xkw1lhtmpommuufmayej1dlkt96dllgzsh8yccqjiwa7xqbmorshgkifj6q2j23i2bvosicxjrqa7p6kv4ihike9rvn\"\n    }\n  }, {\n    \"loggingEnabled\" : false,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_FORBIDDEN\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_OFF\",\n      \"vmVerification\" : \"VM_VERIFICATION_GCP_TOKEN\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"3idky7tgfpq9it8e4x29p0mni555645gdpnjna2z4eazwpemrvbi255u82s35f1lsjdyuqzt3126dupxzp6szkip90ehge1z4yueqmxyfrrmjgljzbr1je1dln3l75njs3glinzm5g9k0gvmkp50d231ifnpajhldb9g0j\", \"7x3e88fdzow4qytgqut28b7tbvlahypdcp9h148bkz282uetv8ggsnuqd30z9lnq6yva1p17n9ojacww469qoa25g8ehajhnr5z6q6ereiyhdcmwosqlkf0jfelpkd0w1bnhbcq8j2sb7d0fpq941bjcnq7qrr71pzud9rhezia5tcwzxw57i\", \"cyeskz5x0i5zmc87b2acot2xvl318srikydb5eck08wx8jx7kzqe1npwele75mpujp8yr8ng7204cpuwycmutaghmu4jxmyhsq9ght\", \"zk4hcy0xgyt9fzj0ciz4gtvtoj0d0w79815yb6dhbkoksmt7lzbow7n4v82unbkhusthlvcb3d7v2bhckh7oz0fl1aloyz98oqlbxtu692zrb2l8tcadxkmznmhp97sti288e052kmj6xsvm5r0jhbif0wxfkfslsaz0nwfswq8klz1q7wauk\", \"qzdsckithbyot7o83368c0f3o7rjx5fqol03v0z6lnls08pusivnlh2\", \"f1vab1q17nif3ga8gjguxq3xb47skm4x2n2d1rlo33001y7e43a7iy8wmbygyrmjgn4k9yd5eutz93fqwrhalz\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"xlcxdd2v99i198xsj85b8bb3fsp9t8tajqbiz\", \"wiwbv80y16e6d7hl3jyf0xgzuoqwop6m955rgxclheiaqcrzd2iz6r6nt8k4u29x5hx7\", \"lhaws5qmddqcue310mxok4x7n3i3wxcdzwt0jqh85i4n1v72vkh1qpp0t1563dlplm2y7fjbf3929q3qs6wiw91izpc66lwp37ob7ji7abcpo4lkcu6cwk1a0jktkhj516of4bbhmf28\", \"rzd\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_ENFORCED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"vpf3ncic5kv2shjb9f6yam01m8l0mqori189u7oxjddeu2xwghzf5jzibg5tmcu7mr6jhan3oa744urxagen5dtuwmrg8swb3s653h5m6e1bnfb5j0xo2dms12yzdu6bxw5bkm8x6u4m3\", \"dk0k4tbef6srh7xgvn1iy63yv8czff3dq67ygks40wue5vc09w92olpcvjiogje1nktc2pd3lk658hf9id37kccdv1kw7lmdh\", \"bqd95s0yac6a81hla69xxmwehi2ute3m6g47u7pnp40ltauog7jc3obzlayylgl4s1zh52bwo\", \"qcv29of0m8grxloryd9br9cabgp4zusg86nj8ukh21u8p6n4x6n7i896l1k9ho69fmp3nka2kt\", \"16yhb2nea12918fov3wow33fr3kwout99t67par1t2py7xgzth0a23crcpg86hviur7nwwdmtvqvu8hs1zgp6b0q8pkuk9is7vy1jz98rfikfas4w6zlxi5w8q1v193bkirbjfk8irt1atiixi22bo2ejmq\", \"g3f52cyr58gz4hxfq4222v3h1ly7dzuy21u5tmt0\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_FORBIDDEN\",\n      \"macExecution\" : \"MAC_EXECUTION_UNSPECIFIED\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"0rz224o0k15vnepxmlzus2r8gnwzlasglkhe87yedr7sxd2zdx4eoarae6acbcizfhgvm6i9tri7d6f04gylah\", \"edknf9abuq74xct27a5s0tnvqc7rdjlmat5sl8gmcz\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"linuxIsolation\" : \"OFF\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"g0tbhplrvbyuc9\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"eg8ljmhexac4mitnpaldqneytsig68okjinxlagcr50i8zszg9zzr\", \"mr8gimpsmz50m1f3es04k81e1ero0tzmot9c2hy7mc5twsfwcqpp7dz89xs9\", \"lmktbe944ahaej56j62sw7r65z4s9591b40y4rw1rk38rnz75r9pw52ae07nk25uhh7gj081sx8kljfehk51d1dcrnho9xyncpdav4uv6uucjjdiwvqm3d7e8boxdrrgsbasdfmhjbwa\", \"8z2ydbtc3kxu1p5sugm878pjnbcsbyxwpw4q48fv1mdyrpwxk28ol2pgxadxf0tpdnao9cvkf3htl9ab0nv4epneuu9zgce7qgcrk3aj7oq76pff1uhcgd4f5w8t2ylrecxh61fo78czbu0nll8szayuzga9qa97l77cd\", \"t3ipsjxnc868xbhc27k5jmq1jr365gwicsz20m57fe4nhe220mflhh99gjidyjgc2216xjkizmwu0cktr4dpeohsjgxsosesb1on8xvcrobzpkz2nx2k3ynxgckg54mlexoe88tgm0300iu0chqkjfjp3gra7xejxapnhwr221enmun1d3e0vssrk4e\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"qfs196giuw7n2bcqm80f2cau6cjg4trxl9zj9tkgqos65f\", \"zw8olwvpb8tsdljhjbhhf7teeln6836tuhi0ukmjieyanb9xpgodcharxhx7vq89xu31\", \"t774wgqn1cle22t2a3zh75ek0rp0k6yfqfsz6gj70h6mvdw3obzz637n4dcnio8sc8wdbad12uvdufulzb9ijx8a8wpwzmfzfzkmtlir2oloqzv\", \"gapagx67bflgtknmbeq18vhym9a80wopfv2jh3qjermi2ptvrv3iyfvj4d2fbfdfocvqwqrp05t49g3402mb6z7ooqxfj793puu78mbar5es2hqomopx6l0deuh1jvcco4d2hkehtu93q4djgoeq6vzv2ukr0zhffkm\", \"iy8463babteinrhcxpzwv8lljg55sctkmwctcrhpr8mnco46x6qt0ts4lvrhoju2odnjmzxwxgi06pi5gvz43g2m3ob8578sqdm0r92hobyuoaiuem8hc4g29ik\", \"18huft407tsvrc1zraq7jlfzvi1ubjvq2skplo2mazzdo\", \"90cdtq8kj00curdbi6hhssmap6t6wzg756dd2t0x0nobtdrxu2fdsg4kqzkq1pr6jx9jmiehs819i1wje97amcvf65j02gj0iei33lyv28qz40gx9wgr2n\", \"dpwkqa9hr1zq24hagu\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"dk05k6zi9gkiat3lwb6iomfn23p8u3xczd2q73oocfimdnrhior2jl0j4tcpdpydzf05monqg1mppn63y8jyf6ddb3qzi3zprq2ip2nx99fnlrbqfwe5ellpxaruj7gcq8q1gvj4lgybr516tofdybjkpidi23hz4vxur5pci5n3xweohvyg4ut2cipy\", \"hbn06gs9uj1io4i65qf5tsqcj5rsi8sl02gl0vr9k4voypow7mbam89z0dckk8cb69bk9l7zl2cwlxe3e4ecdspoa1iq96kg3j41m9uoq9okkdb4dc9yotkzakt1b57qmunxhjzzbtbg6kn3dqo0tu0ag6xibd673wf2vwu\", \"ern1uvcdgohv884ndymu1h5jcwucsntilxbf7ze1luo8qpl33rq3jtzhn3lvfaeb72ch7dk2tk89wo7yi2sif1rb9pnc9mnl360xvcrh9uxzaaardx8e04tkwt0cgangnhtempyywcrtoa84xpqjawv\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"6txjfsydnl51aske87uq2eu79it00ol0krlv3l7ivaqq1qkmrdb26q54c9e9h6gp1uhk\", \"r5f4qt59m8a2jb1tps4nnwwti7j7goqiyoycqe4bbd2ubi0g3sqfhif42k73weix3boap9d14j2uvwq05igsdsmy4cz3eu\", \"tbryethqlvvkvwsd2yks208c0nisvfii8r2b167geae3mjv6p20m3k29gykcu6g3lfoyhz6xvttqazsvlnl4uejq1yoaskm5o2wkxba5qtrknoc5ck1ixd25gltpeoga1vn0j2jzlg4t3555crjtued00h714rtc80om8a\", \"kbs39xvy1lcsy6i4nxzlpd4wi43hecdts0o59fg64famk01gb0z13qp9lnjynh3vulclg5mbf5xvsa8esgdt56jn4qf2ry3u6549o7wqooqthumb\", \"72ndb0fskde67cvvonozbvlimbmhnmni29ca8tejf6p6u4fbvzy0saa9kmyp4qlufbpfqssbw7722zg033r6sati3mubpql9qyenh2\", \"bfkw9nxry47lmkkt4znf\" ],\n        \"policy\" : \"ALLOWED\"\n      }\n    },\n    \"name\" : \"Jasper Marks I\",\n    \"location\" : \"wu3vujbunt7gpkzpyu0wtufpwsil4t3o3uftvactnmk139tuto1h32jntlx42mxz077tds8wt4yfnyshrw9qvjldhpnw6ojehs7kt5m82rxvmnie9fjgj9n9e4cyxp1u76k6vxt2gw1o4sh5pwza70ntzf0iebnpfoxyi0ot4qjoc5yqo469mom88e4gavk5n2u562o5\",\n    \"state\" : \"INACTIVE\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"k72vl9kw3xaaaumn5mdymmcda9h1fqhdw2og0xc3vabm2l46ualikgrspn70xxx9urz8zsjtmaitc4qmrpz72sb0d7gek9nnjeqc45p4d6iy8rt45p4mjcouv3oemzfla0i3\"\n    }\n  }, {\n    \"loggingEnabled\" : false,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_HARDENED_GVISOR\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_ENFORCED\",\n      \"vmVerification\" : \"VM_VERIFICATION_GCP_TOKEN\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"63bnvfecx5tl2t9rfqmsa2etsh99gck1\", \"dt7j66j1puw3wdc8gt8hn6s2hab5r6ojri75w5d0tmqpw7dp97zce7a9h1xawlx6ihyao5wwtgxvzj3nwkk4cb2bysmtfk8xsqglyaxlb288xlpr0yx07hngblct6m6sr9u73rq3c3qwb1o67o7ky6twdnkr34vnv3mbqt3lo3hccm7mjyrtqxx\", \"ps0hhv6veurv158dkk6hkase2n2d2qtbfqhf6p47tz3rwy04sjz2ox\", \"vf8ez9q5rz0v25tt2wkl55vrn1zgbhq3wy\", \"jxodrquy696evmvrd1uqxrwpjmivq2ugcef3lrqzn8naa\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"488du3dgnnnfw1zhs2yv2csa4qzzt5sun75hkxflo2xcgsc5licu20r0cmb8eyw869q48dkukpqti7ruzwou7jqhvtvnviw0g4yut8zf9p4yr9yryshbisxnj848hhar169jcwowmeuwjwzd668yyglva94vk4gpq90cd1msjw9qhob0bngtxbs82dfxznb6\", \"mf52ya2g18ojji0ulxl8yfcfon6h576zl35b77gqgfm9cdfc0d0v8sgfjudnt5lk2r8fgprwjs209534bbnh1wjx6d8gtoj\", \"f1affzsa0f29y8zatrcjsr9fkr1kku2etajhu5fcp0652l8ieomjsmeu8jfdprhthb3g06apxrvoteuqa3ee1ihixewtb9n33qbw92yxpvtwcbhz3p7gfjlsoh7esh4zvdrhk5l5ru7mzw\", \"kvcwdb1m1vst3fu8j1dr\", \"1ytvs8ia7rpszbpwnht22g3dc8q67d8ne63h6o4c2fauh35nk3b0tzhx2xzp7zd6vklzjd6vhm8o0178x7avq6x9rk6zdvlquuvlo395cx7avmzgfncz35rtp9h31b5g56mhonosa1rtquk\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_ENFORCED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"awrad0ylul3pad2fo2f0qct5fkmnjl\", \"mi5i6uc6n2xeqndqvqsn2jse9ofz0rpluwqa4n204ruuokdqfiphxrv662hv0ip5yfg21feu32akbwaj8hkxu35fb33fra2v6invzu3ri6wickv7f13j9df4e7xq23fb\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_UNRESTRICTED\",\n      \"macExecution\" : \"MAC_EXECUTION_UNSPECIFIED\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"5vayx07h7m9mgwitnoswgny9ent8hyrwdc36xbfvmr4q7ix9mqj0uhb6pasloxl8x9xgdjffoc1amsny4e0eggeoin4s941nyqnmvve7r\", \"k1j3\", \"9p70v5oxy9shguvo5le7faz5qsa3v7b0vowqvaojeqkwnghbpxiay2iwsfbs310t8aozelssjbinuahf01iule9w564btkwcplqbrnd5ducazfuc5hvzpahiuaf3037uatn2abztlo1m8j94jw0ppfhuhbvq0tnzz8x04l51oc5dtqqa7b1klbn77t43\", \"owpga1eewemprodtw0fv7glgmygv1g0aq1a7vmuenqj0mdgecj08mxitex8fxiixeg8ydd4apy93z1u45z728vgozi7qlue\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"linuxIsolation\" : \"LINUX_ISOLATION_UNSPECIFIED\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"r3hy45h0wqnu45z5c68t6faeqjqtsokpqx950an2qhq33xk5hgt2wviewnck2xqv2x8kp36ta2t8q3oahcjwsdh\", \"78pop4h6p65e94c6u5w0majncbuwfdtib0cwg0bqmep7m4g9rj\", \"dfnm4obnrmshc95ib4e1i39ytlzdyuw9ttk0en0jfv1k1zwwoevsd4ozkmc1mqi07ruwt356bituxjj9620mqcoxhgsynbcp9yy6a1i867j74qj244jdwc2gk59k4snzmyb21zr8aqnjt6nncimbgr\", \"h1wsy5ctc7p4xyhbk0rbp9ivfqsbcwhdl5hgf6uni8nda4rygtqvrgb8k0mrvmldr8yce94sbwv61ixjlnc0z1unio5aitzj0q1nl849fo9kl40lahk7yqan9o3kxqbl3t42t\", \"sm5nqv5gvxdzndraradyfb3mthaan2ngt62raklc1zhq30p70nado4zbln98nmf238poxgaj4nkrgtzq13viebxstz0my3lcjd87nqqrynhbin30sovbueg4e3o0benj3vqb2v6\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"tw5eqtpi4dlmt8denxh1nmc3zdjwuyz4ilxre0cj2kpwrla8wc14ifsvp5risnmg4btha3yn2ad\", \"9fo9qfp1vyslrwavrhced6a15\", \"aes9h7jif0zg3ur5ra4afjgzln33x6vdp2fxeh4qxtt6gqtdxgvo62mdseb7j8lnifzukhcje0cpv5zq7ixk49xdsvqywv8w17zietwnajx14pegp9dlhtmv6terq0ekb91x6r2cipn5zdc7gzckd2371glbr\", \"lh3ludfrueiijqcc10c54z65bjnsexqzq1gmnjyrnjb6d6taevmhpa0cygbu8o344el2tru0z12j918e3vzq9t6f0926n54gzkewx3mallibclgdi32b5m6trpcgbj9pfyf5ix31uuz3hsihswz9drq6\", \"5cy6k5ojvwvy4z38ldsuhbo4d4236zviq\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"pdij733a7iy5z18b82f5r1v58xrqdz7280pkqv99xbgxlee3w6gw8j5mekoywf7cuinne7h8osth6tef9gep4jg0hd3j72x889x6g432ivflaem0wh5vtui8j1l3clv3gwfo0tv11\", \"wbwk7vhailxkqwvf6krkaw9f4f69qwwhrp80goxnrpfs01tc95gqs42dnqshj98rmpzq8kfq99hkqueo5urou5fmk7cm2fve4ka5yfnj7k8aygiwa\", \"4vlhvcbbirxihe06ga05stf7gzqhmleo0mxoc50559jmz4drfj6hovqhm8nvy7k74u6tt5r1qttl2kxcy0y1iwu441omgymjncyhye8cms0hqzogprcqra2py6j2i6yx6viw38szkh0on5idiu3z5bii9kog3bstzrx\", \"woktre4cs6x1021s0f16lp09ycdgp949o96ikodod6mrw8desytesibbg9sfctygqzn5r629cmcbbz2epqtpceyrmvl7xp32qs7ek16a2kdrh8gctdqhg9wfcjgc64ul74m6kh9d2637njewltsi4nap8w9jxvc7u1ck2x406v0msg0idl77lf\", \"6uv8x4yui8k7442mhwjrjpaqq50af97gfim9naqsd6691hruqcut82gg609d09so1s2brbei8gy5cq1oht9s8cf8h9ijvxwd5pl59z66kiduzhh8hcwutwt3u5z467su5y5k5kj2osj9kk1v6cqfla1majmpvgvn1mvbzcfwo7n918j7\", \"94iouj0me4hsj6pws8ssmrhezkrl4o97f28gjks2gejssnq5kmuqhr4dboino7kp2dvzxnpsc5nmwtlpsra44fo2gr3vo8nk6cxhuenuixrlye5ouadqr1wzcawpx3e77fx18j5u6vpjjcokzvy1dner1c4x\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"k9gp7idrpdq465phhhj8h8b28gr0542nztsg20kampnp6becg4i4kmktu0d74jwlpgoquf08jmoea8a33pnt2e19j3qk563yr7mn3aqfhgi4gltz0k9cs9pie9urm8u6cn00y52tmrwyh52c9tkf9i2mnmvkvlz9nqq3jl8v\", \"df69rxvo21yki0qrieznwkhm1uafkxbdftcpvd1re0qmmwtdsq7xmotoer70hisy50kfo\", \"sayrfmjpjhvrod1gzpbkltgbibp2beksno4fnzxhp17uksbgnh6b7p30ji4k3w52lb5tt6lxuajxelcec32e1nybq\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"l3h5jfq9woueoahah4t6ewe2tynffhe3vzgz77n5ns8p805rc482yvm3g3ce23o2pzgcs2b0zupk5r68fxqgjssyr6teqo0ycn1zzdjnas3buvnprkjmljb1m4ts9\", \"hu421rgiuef8yaavuqqm8inj12wmz5los0d9odvlpfd0q01q13822l9bayqods1gkfuiyyl0mv882u0hnmtamczwrar3dhzbm03udo1xdgww8y5bth3\", \"5n2q4omv8\", \"yv3dymoiu0hi597gqtd7brnflucim58qb5gjio41px6sirk9u5ifp8zjv860x0euzzpmvmmvs8ak0l8eor6yhjvooggi3awsgpgdz21w8bf57r6fgu4ur1by47zwll7tkkjwswmk9wbk85741cuh0564b6h561njom0oipoa6hcw\", \"noaqfbmluq7uo79x7fhyeibokg23mn6vqv1u5iz2eytdlgulm0sx1fo5z0o2pk4v5y1rzja55j993wp2qadlnheg1szxb8h1plel2n70ipqf23m61bulz4avi6xmkxs80cgjw1dp\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      }\n    },\n    \"name\" : \"Hank Stehr\",\n    \"location\" : \"fggoazo9rf10c0xpe9jstqpzbedrbqk8usbmozy57jsjczse3o19qzh8fvhcf0t42mfbk3lvzawskyt2gl7f7jghwkgsjxgddd8kbjmwl8stfatppalok00yhegv\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"0ywaf8qccpnnk12j1dg9aio5m1e5rl9ubyuddrtluxfnw7zu11en9kiulrifwlgf0v6625n23pxr3hiv530cxyghyncujap00bnlqli85zbu3mumt3eeidrnkuayo8sx23iv9g135xbc6y0y2cg0o05sspdnz7vivcf6oppvlga92m9owwxewgo7he1lc\"\n    }\n  }, {\n    \"loggingEnabled\" : false,\n    \"featurePolicy\" : {\n      \"linuxExecution\" : \"LINUX_EXECUTION_UNRESTRICTED\",\n      \"actionHermeticity\" : \"ACTION_HERMETICITY_ENFORCED\",\n      \"vmVerification\" : \"VM_VERIFICATION_GCP_TOKEN\",\n      \"dockerChrootPath\" : {\n        \"allowedValues\" : [ \"2q4zduxg1lwotqsjgeskwpyu3y5x4h5d4j\", \"0p9rgvlfn886kpypmb7l1urz3snfvhyx69lh4jduc8x1834g9ki93r9p7wsw1maycxw9cto9bg301cwk7bfegbwi6jjlm35eagvi6pngrh5xc3flb35\", \"p8cs8750p9xccfjm8dwc9bqxp5a1osc0m9q4rql3gx5e9s257v3tn5jkwardeqfv4wpkxmw6zk2ux0aioki89zwm1rj59h9ex4ckxnef8klrli6s7g2ec9z2ygi0focd3wjswargizu9dbt8sa5bci3iah8fq0xzt2ntiueb10gdoy5iwcudsbb0t7zwa00q757ai\", \"o4vhity80z3rwuo6w5lv93q8jemc6ha6hh490sz237rq2y67jme8nyb6tvu3kvde6xhf30dp4qhayj3jrvedcgtc25vwap4mj41h612uagxlgf3hms6g7yqhut0rc39nhyadb49gqzcknxl2kf5j6yz1efmbq6f8nal\", \"y9bo9vrdd9g2dlrnnfe5lbl9rv9pbwivbpfr4yhe4z4titecmy6fx4pcughcbdm4gs25uhfdsnsdqw79a5za2xj18e25t4h7cxeeud6d\", \"f9oyc5kxcp0mk5r09szvjd48lpvi29he3z4eb1c2o5wz700e8gs9lyylpk84x35td523i67ihpfqc29nkkw5hdu23tr93l06j0ms4142doq3kqmsxsl1fb6l7cm6wjk14q9i6ool5vclqfq2b9yqqhbk8onbztu60ialrs7v9h5dsvrki6ovj19d8d1nd\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      },\n      \"dockerSiblingContainers\" : {\n        \"allowedValues\" : [ \"tojnf9htvw8yul7oigpfhb8ktqrfd0nzir0kxw0lsol8srg85kj2696gpuuhwwrl1goiubbdtk2czboluc5zpjh043a80dt9s0q\", \"174yxbcbubidrqseay6eleqyphul5tzcagfyk4n842wmw0gp9brtown8p12yw5vkdwtcrsczuctirrhngi2s9\", \"q90fpo1iuqadq08m3253tnhkl19hi8b0y66gtbadymsuzkf5vf1mvc0xl4irx\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"actionIsolation\" : \"ACTION_ISOLATION_UNSPECIFIED\",\n      \"dockerRuntime\" : {\n        \"allowedValues\" : [ \"qkmqj1qrcuqokzuekh8ypqwrscjemrzw2lj8st17xoyph0qqhitazquwjru50mt5rc6ro7gt4x14k1itokye2jusq765o9x3q5xbok65xdftat4br1y88hgou0epmn5qy0bdgz9zo\", \"g5wbqp368rvruifppzw1hu66ijmdm0ukvphqt3j0e1sveptjg0fri6hmh9q28433jj30degfzkw38umsxl26ixn6ggqlmohrj\" ],\n        \"policy\" : \"RESTRICTED\"\n      },\n      \"windowsExecution\" : \"WINDOWS_EXECUTION_UNRESTRICTED\",\n      \"macExecution\" : \"MAC_EXECUTION_FORBIDDEN\",\n      \"dockerNetwork\" : {\n        \"allowedValues\" : [ \"9vvkqgh0xdhjzdtp03thqi3qt4szm84fda3x1m7te2162onhez0ry502kg852z26i9tx6snn59p0wg9fos45xraeldt87ulstprjxqj67g1yma8bq58gt8phyvhpl0wf67gz6irdce1v2m7lvymjt\", \"zrjz56s9qlryyds0tmjhaoc9dd48au9du57an4qqnsgkatgmdesi3t7wni7bh43rytr4sesov7utl741823d1x4jm313t2zlxmxobl9f1cclvu8n3jmbesj4hms5foh25nmu0kefvthdo\", \"wsktkty76ldqedv00g39gnpp816j27p6kngbhdxgaxcwr6i3dn8177usxxzj1rm2bycnob8yycga6l1dyijajns20jjcyipqb6u6y52hoaco1plwawu0zpvijmcbclmugwf7pgwx1v0873lluzq289c6uenf7jul4lguor5\", \"941nr2c93hy6cer84n5q7tc4frxwnq17hoahuoujy3fxupgnf3sakmi4we89p04pthsrvv99qsw5b76soj7emam1bxw51rm945gjji0u7jth30mt3j2fgr1\", \"7rj98bf92jv9mjkcr42nx4545iga8zixi6zh4\", \"7jme5r4xty174yac9zz2nwjlim6z28rlhjhb32yf9fk3\", \"5m9jcjufdpwjhfl58a081ri52pe0sa6hzl21xaviipcq0uok4nu39pakwvpwy0jcb0df37bhmz8hootjoqbdghsgruiomuwm84i5sokcxvahm77sob0gpdhbmgjyq0x324tue7xru4cu9dnnz4y48v41z5eyxq9\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"linuxIsolation\" : \"GVISOR\",\n      \"containerImageSources\" : {\n        \"allowedValues\" : [ \"ms2622f5jkxqown7dporzm3faxubl4ixg3lle6rlz4fr012tvcaxqiw3q848uzfmub3mihfqse\", \"6gq89hlg8khi7e6g3pv9nhc16lvuzvk959ss61elb8h5d3bypa4uv6gilnus57gmxjcseop83d90nrogvtpa77s0pbfpnpy1i4nwr4052q8gjudl5pu7ihyexmhhaf3l89on6jalwv65m52lt7o31i4olglw2aij0lkjegyz7asbba7x1nrsgk\", \"y2idb9q12njk2c8lf331yaezreudyr23ck66uav1kmioglo7mfc508p7bc0zpzyae1ealqxxnarcsozczepndn3fmcikr867na071d9zo0rfl8xtun08grhk8s0o8fmqlga146ahw7gy335fb2fnxffr5ndggrr\", \"j4sb\", \"bg3pqindfwa1kzohykbc7skl7rkhj4ia1qbakqtudumnoadspin5ucfkh49d4694t688tbczhf427ojjvuyq5f2s4n95ecwdqi1ggi4svhng18se5ir596o6jvpthngt2ggoomp0om9kef0f27o8s9q53y\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerPrivileged\" : {\n        \"allowedValues\" : [ \"88y4i571l3efyjruy3x1tzfcggb1u8zj3jdqurrml0bgj2svejs5ame176c9nhac8ogllo7wnf0j8t2606qgd10ptgt0m7oquru68brcnpax6zl0e2zz9tnmkvu1g6khpowk38umerftt55hzy41v50yf0o9x70pdsw7tcu6qvz3lix50ak6rujauh2u467d2\", \"qcriq97kyw3w0zggov0u1bpsimblbv64r6d5fvgxsswmrspk6j5m8tvi2mz8lvlazl6t9e4znhlmo0npypfu62\", \"jwvvxjge9o1canc00sdj03k5x9dc54s0ie3csbwhzlywihj38he15oye5zfosa7vcu2c3y71i42p4gq\", \"mzvh2a5e6dfirhox2rky35huv0a3bmq06rdt0mdjq\", \"zcu63dr7vqktnbxhlr05tci584hylns5pqmbrun8rqpoj1zenwt4743c5d\", \"hmfe7\", \"m3bz9\", \"h01egepa30a6cgh21luarn1r64uukj7w0ho88jr8gva3wcmk41i3qvhhsmpxl9da46uxsey96e92vyhq1na3r50q3\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerRunAsRoot\" : {\n        \"allowedValues\" : [ \"hq73i3ap8fgyip1amcrwzf0cam5651z2tvlz7or2jrywkb2w7a9kmc0sp39lds0v5arhmr7e2ec1ukxeu08cirt8uyv4ahj6046ok5d0alwozysnmvu0ay69m2xhkcnivcc972m43courcmgk6moe67ul45qf9t0p3ms9ehu12\", \"vxto0pwsvl7ezb4xmbbvec63l68f6qik\", \"ts7ghw9cfdwl5h9g51sr5b7d3nkwlvh0xuqwshlhzlcfttu9otw90nddeme1dpx34449b2cxodbix73b8dpawzljgnsebb0cen9qxgx58s\" ],\n        \"policy\" : \"FORBIDDEN\"\n      },\n      \"dockerAddCapabilities\" : {\n        \"allowedValues\" : [ \"ciibq9bzrm7x5jdxguouk8m7mjx5po2glbmorraepir3i7v9xdzotjg5w4sve9q2cv9d2h6zp52zswzytx0tiaj4feqp312myg47awjs6fbf90cmrtugei5n8oa1lopvtfv9bj7vpo4h7cilc0mq5tl2t8ihi2fm14524788qzyswy25cog\" ],\n        \"policy\" : \"ALLOWED\"\n      },\n      \"dockerRunAsContainerProvidedUser\" : {\n        \"allowedValues\" : [ \"kmesks08roztjcolf9inek5wobl5t7j7\", \"vybsdhfd6ahfhttbnpxclrp1y6mj2knn575crf5io9di9xkezuex0dvwkcnsh9sgz8eornhcfksi0hwvcrzxv90q5d9todh2h8v49ccznoxdxepebyjji3n3c0j\", \"02x7d4\", \"cu7keszfkvptn3m3mfjhwaghzdtbrb9geq44847qg84m6ozvf5ys7dw19et3erpong62x31nphg6054hqn2ayix160\" ],\n        \"policy\" : \"POLICY_UNSPECIFIED\"\n      }\n    },\n    \"name\" : \"Jordan Botsford IV\",\n    \"location\" : \"udpfuz6zkpy80zu72rse09j5qw8erjwkeau02uda47f6qlq1qz\",\n    \"state\" : \"CREATING\",\n    \"schedulerNotificationConfig\" : {\n      \"topic\" : \"82sa9dcxv0vpe9o64xpuu6cl\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ee9a6f3-2776-4e0f-9b0f-aff556d8309a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:40.942198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.list",
          "schema" : {
            "description" : "The response used for `ListInstances`.",
            "properties" : {
              "instances" : {
                "description" : "The list of instances in a given project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleDevtoolsRemotebuildexecutionAdminV1alphaInstance"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Unreachable regions.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "00511d13-7362-430c-8c15-4ca065400993",
    "name" : "Sends a test notification to the specified instance. Returns a `google.protobuf....",
    "request" : {
      "urlPath" : "/v1alpha/Jewel+Morissette:testNotify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00511d13-7362-430c-8c15-4ca065400993",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:40.939796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.testNotify",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "afeb0620-a3f1-460a-bc78-75647d4c90ee",
    "name" : "Updates an existing worker pool with a specified size and/or configuration. Retu...",
    "request" : {
      "urlPath" : "/v1alpha/Brook+Barrows",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Leonel Mayer\",\n  \"error\" : {\n    \"code\" : 114988615,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Deleniti occaecati porro. Ea inventore soluta et doloribus adipisci laboriosam. Deleniti consequatur ut tenetur quia.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afeb0620-a3f1-460a-bc78-75647d4c90ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:40.939714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae07d01b-0ee2-492e-b011-306c2f66de8c",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1alpha/Mrs.+Alphonso+Howe",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Raguel Durgan\",\n  \"error\" : {\n    \"code\" : 1954358144,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptates et et autem qui. A perferendis perferendis iusto earum vel quod eos. Beatae voluptatum maxime eos et enim. Culpa nihil esse pariatur distinctio est totam quod.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae07d01b-0ee2-492e-b011-306c2f66de8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:40.939508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c2df0f73-1294-4dac-98bd-fccff590c16d",
    "name" : "Deletes the specified worker pool. Returns a long running operation, which conta...",
    "request" : {
      "urlPath" : "/v1alpha/Devin+Gusikowski",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Roger Armstrong\",\n  \"error\" : {\n    \"code\" : 1152477773,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Soluta ut ullam ratione pariatur. Quae autem explicabo. Sed mollitia odit nostrum doloremque quod totam delectus.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2df0f73-1294-4dac-98bd-fccff590c16d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:40.939294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "remotebuildexecution.projects.instances.workerpools.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}