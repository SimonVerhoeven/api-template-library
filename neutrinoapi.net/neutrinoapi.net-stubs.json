{
  "mappings" : [ {
    "id" : "7f812066-f40f-3852-8189-5f6a2ac7b1db",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "7tp"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2122050806,\n  \"apiErrorMsg\" : \"6g1a87t1hultai78rfmp454dph0a8yksjreq6bb66kx94s9px2p2y6wp5h7wy4t3genv4p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f812066-f40f-3852-8189-5f6a2ac7b1db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "70c5ca80-4846-3ca0-af0e-bff67bcbf9e4",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "6v8vfwlo7jpxt2li6ce5t6m9gk6sh1l7jxb4lrl610w2v39llan6bl96gnj3rakvws3erkyvcyh8u40w6yj6rergq1h6gt8plbgxyce3spgk6x9rohucdbonwq6oldkumq2odzaeslptw2txwx8p2o1f8"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1968943425,\n  \"apiErrorMsg\" : \"nsid1jyi5wzlhej9fiminkfftjo180t0yz098qk8yi4ddf8vks98ley99zfp3u3kzlvvtuwyqsjr7bni6rw67e8sicihmhszxiephsektmv3k68def13geykf7l6ukyktiepynwxmslpx2oxrgdzi1qnppbn874cjdryxosul9hy0dheausuocyzj85gyzb7ye1o66xm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70c5ca80-4846-3ca0-af0e-bff67bcbf9e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "4e5cb744-0cd9-302b-8970-a28f1e248909",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "dm30z0jcgbwzcjyz0bpys82d6js8do6uwr6dkv7swis9f5k29wzrr2znyrhlfniiohdgn4n9zaemk2wbhk0iqozc9rg7tgn2g"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1142016169,\n  \"apiErrorMsg\" : \"akspv7w7hjfxnwhy6yazdlsupitvbkasdqswuy93wcvc45c4xfir41z1049fx2rno2cm1lumxk4poch1y3v5ewz4j34t7jkcjo0xex33kbuut0fu9krtfe2oabdfiz8u74kf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e5cb744-0cd9-302b-8970-a28f1e248909",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a78ed77e-bc3e-3fc3-9bc1-c835ddaedf72",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "99y3u9pfr347ksicn3kkz2usm737d9jpa31n83260tl7zzops1fbwehxxlwyheaxwxi4tuszu02iu881st4t6wr7c6rafzxmrsec52niacjjdmfw231i5i402zr24cw8yf1wce33fmgb7urqvw27p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a78ed77e-bc3e-3fc3-9bc1-c835ddaedf72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "23e3a660-acb8-35b8-bd97-7a9f952e35f5",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F458530"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1161046485,\n  \"apiErrorMsg\" : \"n7bymx92k1cj4ue3qd613pwb203mpf5fwn601sptk8lotdbwk9mydfwz6bvfb6021fn0bq1r9wvlq1h1da4ngb1o24u14ca7bb0vkx5wokw6bzkj1pddxtb7qg9xytuvhu2hgcrhxg7a8pm9neekixv2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23e3a660-acb8-35b8-bd97-7a9f952e35f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "cee273d8-a1a6-329e-ae72-96fb2d624990",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F571035"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 231431615,\n  \"apiErrorMsg\" : \"869mkv8mizuheh450cd2ytfmfo18pa79hacr8oeid81t775ftu6w1kuivxa4hojylpw3um8kktxmwcw0w0dr1ukr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cee273d8-a1a6-329e-ae72-96fb2d624990",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "d850f8df-5789-310d-8a0a-5f3b79d5b9c0",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F427943"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1215364447,\n  \"apiErrorMsg\" : \"s28wjhkv22oohyd9hf09atrwavduor3vcl2sq7cunqyfdoku6f55cu3uwjnvkmey48zpfs4roj5lt6gw8jj82s9o77btdf8rpo7z84pszynclop2yora6z90snuflbt7dp7mr4dwerb1drz815kni4a66ir0iddtzm2y92tg0efootmzr8jerxqdydv2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d850f8df-5789-310d-8a0a-5f3b79d5b9c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "d5e93c05-e58a-31f9-84d9-b5abc6ece7e0",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F222239"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"http-redirect\" : true,\n  \"content-size\" : 1044292933,\n  \"load-time\" : 6.85546062391958E307,\n  \"content-encoding\" : \"nij84zghc6y8t9s391v3bp0u1rcrz6tj8shjyakng27dfd4j1f0cucrh29c1xswxpdfepzu3v3rwgj0e5e2ym4qk4axt7gyusbyymqkygkbfsdbc\",\n  \"server-ip\" : \"rjcd3cx9bznjknibw8b94um6izq8w2d12c\",\n  \"title\" : \"Culpa atque aut eligendi.\",\n  \"content\" : \"Voluptatem quas esse porro officia ipsa. Aut laborum quae. Iure cupiditate maxime exercitationem nihil cupiditate.\",\n  \"server-name\" : \"Chana Ankunding\",\n  \"valid\" : true,\n  \"http-ok\" : false,\n  \"server-country-code\" : \"aaaad\",\n  \"server-region\" : \"d63e3nqg88vtu8ug4zdubf1cwg7o1g0isvbmo6wjbnemhirl2zszb4k6j8u5t6uwvhimhail8u6s718y7ulfrj\",\n  \"server-hostname\" : \"Denny McCullough\",\n  \"content-type\" : \"owtltlxxmkgt49ezdmcxldmcseigughw1hahmhhmjxq65oe9if92qbryp3iv1yi3sq80k3kdzbx7wqjr97pzv55gekam40hojpkc0x6bo3nqhlhkhl1gbex7qd7b\",\n  \"is-timeout\" : false,\n  \"url-protocol\" : \"5m4i54kgotvq81zixpo6qv78yaplz0sr602xxhhdb6ryugnxra5sec898eftv5qqxkvcp5ngo6rf8jt1bn8p3bp5186kcoho07nrxnwene7xmj6ib0bcmfesazguxp1i54eno21qru3khm5l937ka82x4c8vjg9v2tt6i7lt2qcopisyy\",\n  \"language-code\" : \"ob8jwxxhyq762vyb2cd9lfibpx51lovvvmqjvex0fxwcvsyr65h04wxv8d68anq25zh977fzhada2qavpyhany4azhnccp7g5164g\",\n  \"query\" : { },\n  \"url-path\" : \"n3sfi96qei8ldjrgrpfpqzvodaxknu39sep7ddn55h0q8phooibokmzmda5k9y9ym7ivbosneuglur3kt6xnriqyxh3np7ierg6h0e11nod24x7\",\n  \"http-status\" : 48154186,\n  \"real\" : true,\n  \"url\" : \"https://web.example.mocklab.io/710835\",\n  \"is-error\" : true,\n  \"server-country\" : \"Croatia\",\n  \"server-city\" : \"Mitchellstad\",\n  \"url-port\" : 255737528,\n  \"http-status-message\" : 1049834677\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5e93c05-e58a-31f9-84d9-b5abc6ece7e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "content-encoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "content-size" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "content-type" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "http-ok" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "http-redirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "http-status" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "is-error" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "server-city" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "server-country" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "server-country-code" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "server-hostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "server-ip" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "server-name" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "server-region" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "url-path" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "url-port" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "url-protocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "http-status-message", "server-region", "query", "server-name", "url-port", "server-country", "real", "server-city", "url-path", "url", "valid", "server-hostname", "load-time", "http-ok", "content-size", "http-status", "server-country-code", "content-encoding", "server-ip", "url-protocol", "content-type", "http-redirect", "content", "is-timeout", "title", "language-code", "is-error" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "5a85ab0c-d418-36f5-a322-44984213e0fb",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "3px618a5x5azk9ckb6iyta6u5cfq8za88tbfgpllvquuh5mwaegk6235iffg0puopu248adngls4s5ei74hzubrifm2r3dal83pzyhtympq2utrbcwjbalpfrch4kieiz8ksp33afjaf6hzd3jwku9fw4y"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1514399315,\n  \"apiErrorMsg\" : \"fqaqh4kyw2scypvy1028z00j8bdb1cexeto5dtuk707qgypl7tntodcz9urpofr8v5p2vidvvplj90\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a85ab0c-d418-36f5-a322-44984213e0fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "cc51774a-1965-39ef-9b5d-b9faf58a499b",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "86ff044qgg11x160s02hu9fb8au1cgu6ko8tqol99egjs2i595gr648h8o9r8s1uve4kknv369rjpmd93fb9c4xk1c1jvy4zoqj"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 623054849,\n  \"apiErrorMsg\" : \"2llgln6xooorfjdzx0sll74yx3vwbfnodgcphui7655mic7o9hzyjxkvqfw8vc4kfx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc51774a-1965-39ef-9b5d-b9faf58a499b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "ac8f4c75-6026-3e13-98ae-91e8ac7bcaba",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "pxqqsd6x36de0dqqk2aptsu"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1132548093,\n  \"apiErrorMsg\" : \"9i8pwyp2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac8f4c75-6026-3e13-98ae-91e8ac7bcaba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "756f9e9e-5c1b-3079-a01f-eda8e54380f4",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "y4vrm9zbf4mz1pm2p2g50a6bk29cpm2ty7k9ilbeyk08jxebd63d68rdtc3rukid412bqa2x7h79c92c0khp83mhu9h7tho0mbqrwu1yhf5lqfudajqu41amug7ladslk4euy2vgt441nu4jvj2cx5zk71145snggxjw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device-model\" : \"aum6vxpljl7erlvj7e9xzceuqoke8i9yglxqvon7jp7ec1e4ojznc5memd86mp61pz\",\n  \"os\" : \"x6nbm65kpaf2gnf63rp9ud519yubpoqm3uswwld2k0lfsumdgyjcptq89keyhh0wob\",\n  \"device-brand\" : \"dfeejadnpb8y4ko5krick\",\n  \"browser-release\" : \"sfeqnabr7905y3d9dw7axobgi5t0t6p6gc7ff9jobnn82jqcakbsqwyqj60iso1pac7ksuioy2z89e6vd2wtg0jswh44s4ro1sepimtiv2mtn87w81xj9o83me21l2zdlnrdjja6yb4fohcaz63bu0za3m2lfgikue269rf17o293ld\",\n  \"device-height-px\" : 9.635420304691847E307,\n  \"device-pixel-ratio\" : 1.7774637612331866E308,\n  \"os-family\" : \"x8wib0rm4qv1p53hg5ye6dpwd613p1adm5vnruxwhab7vxh06x24u6cesw29vok72lbq\",\n  \"device-ppi\" : 4.989650549679642E307,\n  \"device-price\" : 1.473609350886809E308,\n  \"type\" : \"uzv0x6mh1s068xfb0zkb3wtojmudm2m6oh773hyz1fmwc65orugu6gfwf6gdk9efo6bvjq0l3jtzs1su522sgvdl0\",\n  \"ua\" : \"897beqp1c2km0uovbuj7c7a7dupovn0k443puecitacoa3spojc8543sjh160tkmjhpqkxs3wx0fzafcndw2mtz6wg9mmj52fnla9lxgkfn5g9mb89tdom1ard3sibx92gnqkomowblof34ybeqx60qf92qk3kt2\",\n  \"os-version-major\" : \"yj0ao8isjkypoctfpmk3wmr2lsax4xr5k9boneu8fuy9uu4b9zbqv4atmq8zgku\",\n  \"version\" : \"zb17nxh5df0q47lm2c2lygbpmfosmxeqrbek03tt3yoqlnjm\",\n  \"version-major\" : \"7ohxzrnt7lv1h2s5zeos2ew2so1bq7zp4w7el076x27omfsfjdwvatlawzi31dk5vfq9puxepe0hdbje6hvu\",\n  \"browser-engine\" : \"o3t9stpnuyjdy6cwabklbohdit5k3yi4abdvnx1hkaug55ub51vq8svspwifjdf9jmy756grk7vrjld2nae47igdo3gj971rykzbt2ezyg6i2mh\",\n  \"device-model-code\" : \"23uox9ihbgqdgn4pme3zjqgbaw0u0db2f650cu5jjhx0bg4uy8fnmr4hpeftfkl2p4higsnqpupbzzcu7m6gjn42za36e43if90f0vumbqd2upf7rega3yjzwwnogc3fewfzp70o06id690kximl38bjwbbkjg3opy1mn1vzten006\",\n  \"device-release\" : \"ksuhzn9nyrku05t1tmy40qrb4m1ged6gdf9z57rf23kchuk6dauqoneyx56862j7qcv712rj094ognjslo94bi5ztn5xe95hkyiwhxa28aqfuxh2riliy\",\n  \"os-version\" : \"acizdzquqh8gxmtlq8dtu50khbwuzs8q1loyrbswjajll3gn24scg6zmcqulzgemnqyyd2rat4wny7axw7\",\n  \"name\" : \"Carmela Abernathy\",\n  \"device-resolution\" : \"e634gjqc93ezi40soyx0j31rt2ebttptpqci3may4ya5k67smzu7b74lacukvsjfuxd2912yhgu6gxaano3m7epj40cq7t42xp994dp6otryovqe9dmxk88jbwjy8rrc6486uyscvav2cu6btqq9c9sqe9lnv462w5y13nq2g579u\",\n  \"is-webview\" : false,\n  \"device-width-px\" : 2.929783280391944E307,\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "756f9e9e-5c1b-3079-a01f-eda8e54380f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "browser-engine" : {
                "description" : "If the client is a web browser which underlying browser engine does it use",
                "type" : "string"
              },
              "browser-release" : {
                "description" : "If the client is a web browser which year was this browser version released",
                "type" : "string"
              },
              "device-brand" : {
                "description" : "The device brand / manufacturer",
                "type" : "string"
              },
              "device-height-px" : {
                "description" : "The device display height in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "device-model" : {
                "description" : "The device model",
                "type" : "string"
              },
              "device-model-code" : {
                "description" : "The device model code",
                "type" : "string"
              },
              "device-pixel-ratio" : {
                "description" : "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
                "format" : "double",
                "type" : "number"
              },
              "device-ppi" : {
                "description" : "The device display PPI (pixels per inch)",
                "format" : "double",
                "type" : "number"
              },
              "device-price" : {
                "description" : "The average device price on release in USD",
                "format" : "double",
                "type" : "number"
              },
              "device-release" : {
                "description" : "The year when this device model was released",
                "type" : "string"
              },
              "device-resolution" : {
                "description" : "The device display resolution in physical pixels (e.g. 720x1280)",
                "type" : "string"
              },
              "device-width-px" : {
                "description" : "The device display width in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "is-mobile" : {
                "description" : "Is this a mobile device (e.g. a phone or tablet)",
                "type" : "boolean"
              },
              "is-webview" : {
                "description" : "Is this a WebView / embedded software client",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The client software name",
                "type" : "string"
              },
              "os" : {
                "description" : "The full operating system name",
                "type" : "string"
              },
              "os-family" : {
                "description" : "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
                "type" : "string"
              },
              "os-version" : {
                "description" : "The operating system full version",
                "type" : "string"
              },
              "os-version-major" : {
                "description" : "The operating system major version",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "ua" : {
                "description" : "The user agent string",
                "type" : "string"
              },
              "version" : {
                "description" : "The client software full version",
                "type" : "string"
              },
              "version-major" : {
                "description" : "The client software major version",
                "type" : "string"
              }
            },
            "required" : [ "ua", "type", "name", "version", "version-major", "browser-engine", "browser-release", "os", "os-family", "os-version", "os-version-major", "is-mobile", "is-webview", "device-brand", "device-model", "device-model-code", "device-release", "device-price", "device-resolution", "device-ppi", "device-pixel-ratio", "device-width-px", "device-height-px" ],
            "title" : "UALookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "c3c7bd89-e0bc-327b-985c-88508758aefe",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 218128083,\n  \"apiErrorMsg\" : \"0ktydt14218qof2le3ugt9cpwapoubnj6aginougphd7r59wugamrehlltq40idwqmyo795l88mw4gb7s48x19zpladlmm8yz410h2z5lf1n5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3c7bd89-e0bc-327b-985c-88508758aefe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "3e6a6cdd-bdbf-383b-974f-03e86d424b53",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 244770499,\n  \"apiErrorMsg\" : \"q27acxwa9032x6nwqjihx1yx5so5untp9t6yqlcp6ezjosng0srd6ybe5yztksr6b5iwv7a57tieq56ibf06kvodsir6k69v78l4z06lgwnx9al22otivx940i03qq1za\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e6a6cdd-bdbf-383b-974f-03e86d424b53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "b14e592f-4efb-36f9-b109-45ba4d0ada9b",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 94119645,\n  \"apiErrorMsg\" : \"w78ypy9h4y869y7utl5i9ty2v4x3sjsqa3cp39fsneyicpczkgiixasscjiknu4mihrm9ria1e0xcxgvjbfivi17r4pqekz4pmweo9tzae5bmp1sqndbf7xr0fxl487v9rc0jqiruxtkmmcs1lb4vmnrdpedq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b14e592f-4efb-36f9-b109-45ba4d0ada9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "6ed967e9-852b-3108-8b2f-746751dd4e96",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"hfegg4s5463ghqu1tibkfn6g2p74ocoig2k8blr8akvbwacr642fot7ww88lb887gbtjcevmchr4e8dw7hsgy98\",\n  \"sent\" : false,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ed967e9-852b-3108-8b2f-746751dd4e96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "number-valid", "security-code", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "430885ca-8d0d-339f-9592-8781297d918c",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1357757866,\n  \"apiErrorMsg\" : \"f61g6oikplj74yiz0uaznindbzamqop5eq9r3x97l7qjbcwx0l83mbaegc8m640lbe2d0i90w07zej5vjsy4xh4r3mdwkvk9uoknyma3qwa80el3ru6r4djlaonxvwdj3n08weqknqktpb83mrewgyd22zxokluyqotuzr73vywnqg1q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "430885ca-8d0d-339f-9592-8781297d918c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "d853c8f2-ad08-3de8-9a5c-100c49bcbbe0",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1342322414,\n  \"apiErrorMsg\" : \"0nj11060p0hfaflj73i30w8burjwnsjedoz6hxshk0bjmdx5r5npj7qkipzq5x9dk19kxmvrimfc79eif2wexgm3es56imun9fd91d282mje9s07q60ws4xcvike3vi5b5b9toqixzacxskec48\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d853c8f2-ad08-3de8-9a5c-100c49bcbbe0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "454cadbf-1500-381c-b732-9c6c10e37f4a",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1076328200,\n  \"apiErrorMsg\" : \"g11rjvxl9db3k3qgcafymw8bq0eki0obaj2hq3h2b765arc9qccq1ksn7o0cbkxbyc379nfdz2i9u89lo5mxiqopk6kkqr0j89sf10n5b1wmbunref3b6eh0ugzcalscj1ygqp26haqy9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "454cadbf-1500-381c-b732-9c6c10e37f4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "a0c21b05-91bf-379d-a429-9a4f00e93900",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"mq1ur2oa4rnagm2mvr2etaf5jq56e1wedvs1t\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0c21b05-91bf-379d-a429-9a4f00e93900",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "dc092379-88bb-32d1-92f1-9535c9684679",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 880598805,\n  \"apiErrorMsg\" : \"pb0ew6lbbqrr9oo1zocu6k1un16rf8vvqd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc092379-88bb-32d1-92f1-9535c9684679",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "1052c064-cc3e-3ec4-8584-bb734151c8cd",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1895839467,\n  \"apiErrorMsg\" : \"spfw3y4557muemyjx62yf78r4pgp3iudwyyxz1e00kigpcnljo6id6mudt5etm3aei8h3wo1kgew6rq60iswdq9nd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1052c064-cc3e-3ec4-8584-bb734151c8cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "9d45a3cd-96d4-3b27-8e88-9bef3a049a58",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 866963030,\n  \"apiErrorMsg\" : \"7kfy18vy87h302ohsotkea40nhbj9xbafk7wfhhuo70372s4c4if1kvea4131tl8apay81burxs0lthznylt9ztm660fbuutzyp9scm2t89bn1z6vbhqyjdm8sq722usjc89z68pfmix1liu7bfq7ozoq5bnw3xaxb6h87avc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d45a3cd-96d4-3b27-8e88-9bef3a049a58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "1f56ed8d-f047-39cf-b4da-5efdd40494cc",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"icl35u3bgfwkmi4yc8zukrhr2pjs9jmcib609a2b9iwl5vdysw2nlp0ayerubnbzg2cn89cjo19hsmu606s5\",\n  \"calling\" : false,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f56ed8d-f047-39cf-b4da-5efdd40494cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "calling", "security-code" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "3b6405a0-cf79-3e73-a332-7d395a317982",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "oiqeeb1glwdr6fhgnzpvqyag1uoyzqexxbmygv3rzbtidosygk6xlq326qvkawrw0egf99h3j8b35xggxqqfmgudrmq"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1702020339,\n  \"apiErrorMsg\" : \"re2ajrp9g8p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b6405a0-cf79-3e73-a332-7d395a317982",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "a677286a-cc42-3d9c-b71f-aaac3a80b191",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "8g5xh6ax39zuf59mg1ilk5snq3os55l5wa25tteq9w3lb7vs91g1s869u9v47znd1t272roplp8bg7k2kdwyi0t4n7m68rzf4hnbiusc719d1e0grvizmn08c17x3el6lrfev6ja0rnykoj6mphdcj7ktzvx2vn0eye7j5kr7jujr1e"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1872457213,\n  \"apiErrorMsg\" : \"n19qw7ev7zj5umu8bd7wjfzbw2a1pdj6s94acone0np9585u82cog1llzvwifq549g7424vorjowvbvxjhgxt9nhy7udbld877c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a677286a-cc42-3d9c-b71f-aaac3a80b191",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "ec870cda-f807-35f5-b3f2-bb972870676e",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "1v5924w2oygcviz2604mxn6e5mnjq7q"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 985920493,\n  \"apiErrorMsg\" : \"vlhu8551n4gyjha5ephqwwixpkpxk4l3vbbt0iglpkd8v982s5hzufep22lwrdfad7e1515ytlgdu3fnibwnh3dq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec870cda-f807-35f5-b3f2-bb972870676e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "9cfe2537-bad2-3946-be5b-416891ff599e",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "23940zlfteowisc912e6stabjeknfjtdteoqf1kb7ubk9ypiq2v63oj0htcj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"country\" : \"Papua New Guinea\",\n  \"country-code\" : \"bbbbt\",\n  \"prefix-network\" : \"8f4ibbc8b68ib9fen0rt0mmb74wn2khpe4bxha1d4x0jlpv1y5uqajju1a8poo9wv6vdzxfjwe1jr39ualrelizr2twc00yjopfg0t39tbwur6dkkhjju4\",\n  \"international-number\" : \"mqrt1a0ejv61nmq07k3f3qi5wrj49euodaoql59b\",\n  \"location\" : \"lvua3bwerrfrj1x5bhvm7ej5uxzespaqt6cwxdnlg1otrxd82xhc1j3ravdasycpio7v0tljb80v9s2xnn4wn7se5v4oesnedvuxpc1rdfsfme2akrrqgoy1xjpe77xokh78ks5ygff76\",\n  \"local-number\" : \"8jkxyl4doff3j3xrhs3ib0d0uk7qp69qwicmbfaqmcv9972oh6b76jf14jzbdur8tle4ws27p35hh0v1o4gnj47buisk9lnd6lurnltwbwec3qrndk9vda6ssmrxy7s9lfksod2te3ypvlv\",\n  \"currency-code\" : \"GTQ\",\n  \"type\" : \"d1q59pf0zwjvnipn062fnm9a\",\n  \"international-calling-code\" : \"nkvunel6fg5ca8abezocpgrf6ybxj389nuzepaaeb3yqgaaq\",\n  \"country-code3\" : \"9szun9fb33xdn8qrtro0hcz3jy1chuz3y44r9wktpbjqvty7qxnd44s5ty965avx7opr9arfo9qbcevtidwtqcw2vawa6sycu57quaazmwnb96q51jonjibapxzkv\",\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cfe2537-bad2-3946-be5b-416891ff599e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefix-network" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "international-calling-code", "country-code", "location", "is-mobile", "type", "international-number", "local-number", "country", "country-code3", "currency-code", "prefix-network" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "28a696f3-b596-3683-8311-bfd6d38294a7",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 556723331,\n  \"apiErrorMsg\" : \"6mkpc150ak4osveghcwzxxbyfeb4uiocfj2zweirjc2seyic7wqqueoxe368xwhvza5fyskn1frvbnp3vzze9il48m258yazc3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28a696f3-b596-3683-8311-bfd6d38294a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "f0794883-b04d-3a39-9e3d-e1bf43d38ed7",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 294016933,\n  \"apiErrorMsg\" : \"0cat5vwq2chewijkrtbn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0794883-b04d-3a39-9e3d-e1bf43d38ed7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "334fdb10-e2bb-372a-9316-f812ba2bbb1b",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 361792246,\n  \"apiErrorMsg\" : \"8os0yxkvsrggbysklzcsumqg8feyk37y9t0z4c7bl1hnaxf2evt724ussdjik75fo6ajrfgu6fit718vsha7dss0ywtjnsau11nee81k25fy2hyxpnfq2phxg1pxqcn3wsabeqzh87iu7enyfnti6w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "334fdb10-e2bb-372a-9316-f812ba2bbb1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "9b452d98-67a3-3f06-8c1e-ec9ef328445d",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"calling\" : false,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b452d98-67a3-3f06-8c1e-ec9ef328445d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "number-valid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "4ad513ec-6dc3-35c7-b7ea-02597818aa92",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "c0208erah87rlh9tmc59uvc9gn3mxz9mduo4fo3jmutm6du96lx9e7im9pm6aynih0m56jp9t4hn8"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 12756177,\n  \"apiErrorMsg\" : \"6vpyxvzkrql19rzmoofedxncrhrve9zl72rgj6oie8d5m52a5n56o0qags953tc287u4dj4x72b6gb750rmado84q0g42d9vnqfl6zx27iryasw6f2b9vd8yo6zi9ggij3dnnd9qsp50tpuu2yov7m2v6w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ad513ec-6dc3-35c7-b7ea-02597818aa92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "10202830-9c31-3a57-9b3f-78c6d0182e32",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "n2z8btmh3jqoilsoij6qiqib2byccl5c4zzx5uavcuxqyge3vxgyq19obq40qonjta0plkpv26k4fswo2jibyz07vnvpjvmn2lb85g581t82yfhfvqb1k4ryy13sh6tfo6b2yk46xj4ono4h6i7099mhpdr6"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1140232685,\n  \"apiErrorMsg\" : \"r4zbrvmmk0iw1gnl3ugx7xss8g5xeveerg6nosbg4pi5sl45h1pyab567e4eppochrarzy2yf9w8q0vir0d3etm9ruqsofm1w0b54hdw0artva5cd5c7t35i37whwp08xtoo3mul8agcj6huiih2pod0bbijtgfen0rwc4dyeec1itzxi5l4gwf49t7t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10202830-9c31-3a57-9b3f-78c6d0182e32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "6f8e7859-bdc1-33c1-9d7a-2a54401f4e55",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "mzz854g8ksvrzsibrw1"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 680537357,\n  \"apiErrorMsg\" : \"7jw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f8e7859-bdc1-33c1-9d7a-2a54401f4e55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "6f9e7522-1d8a-3c28-90be-f44a81e540a8",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "xooadqw73wy78d8qvrubzy31z0dcft2u8cdqrxgs61097obmbxrawhbm05v1xe1spdjizn1h1siy5rcn7dt4ootsenbmgt3otuzvpt9l7kq0fi1o30l9yo67t36buupnj4bhn16k8mlh9mb60u3pxukk1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"1p2oa27r68r352v3w90ccnrwp8xsnq5j5z19edlh0um8hh2qwi2fut96jix6um5\",\n  \"country\" : \"Central African Republic\",\n  \"country-code\" : \"jjjjo\",\n  \"provider-domain\" : \"ct6l7x9rqsr8u9oum0sy0zcnyz8kwr6ubn4zcde3fgjpqdugqj01as5snythk4igulsv8zg1i1a1bwhoh0d60b6gwnf42huo9vzcmlgqxwgfrczgm0ncod9pgg3vlhb8dlkjk00wvcb8ne7iymq18mk2b49i7efuqbhb8sag9xlfolessyd5pq67ys\",\n  \"city\" : \"Blandamouth\",\n  \"vpn-domain\" : \"rzax9j2i1k0n2f3qm0g4q9c2p528q5b1jz4ihvyce39xya2zlhylwqkjefc5qg3f39jwmun9pwsm9tbords6114twc\",\n  \"is-vpn\" : false,\n  \"as-cidr\" : \"lkra\",\n  \"valid\" : true,\n  \"provider-type\" : \"2ktqgdhubt4b2xaoaddwgmmyoryyru44w1lgtvudsteqyq6bdsy8mlntprnukqla0npok34182xd50dcqydx3g2f3eykatq89hlm42u69k6r29hgn9fabg0kxkpc0dv6ucdrqkxw5g01m9bxrkbo79ut7fkxm03857mrtd9oemsjou\",\n  \"hostname\" : \"Johnette Walker\",\n  \"as-age\" : 1613722774,\n  \"continent-code\" : \"wm2gxspkgfo4oozbivipftp1kivvvbepxwufuogitdt2h4kcqyw32xnrrr5w9b5hwvzlwlmkmuoax5pxq\",\n  \"is-bogon\" : true,\n  \"ip\" : \"xl0sjcsjv8w0g87trqr4yakt8gvxi5axa5dd2d08r3cgci10fm4n0p35i4ywv51vjlkb0f2bgr7r4mhz236lbjl\",\n  \"as-country-code\" : \"mmmml\",\n  \"provider-description\" : \"Est expedita blanditiis. Nesciunt unde dolorem sapiente. Adipisci aut qui molestiae maiores omnis possimus. Aut enim iste et nisi consequatur similique ratione. Facilis qui est quas et.\",\n  \"as-country-code3\" : \"68mzppcdxwqtwctwmycyn4keuwvzdoap01e1lf663v0co4p3b3fd3qmdh47bef9q24\",\n  \"is-v4-mapped\" : true,\n  \"is-isp\" : false,\n  \"as-description\" : \"Libero molestiae nobis omnis. Dignissimos omnis vitae modi. Eius eligendi dolor velit. Qui iste ratione similique sed natus omnis ut. Impedit accusamus incidunt sed porro itaque.\",\n  \"provider-website\" : \"rbf2cm1pdcc1v5f8tvh48560v1ahkixgutj1k176ixzlisyxto7ol9ir86yn33ijhiw4ybc4cnhz1wr4zrtfavlhoabdfjv37uwfaq27ipqi3xd1iyzoi7z2q71nbhjukmc3s4zblj9jv6wovzgo60qq6zzg5r6i1hvcglh4opz6vos51x5qrb7lxha9n7sxakjtl\",\n  \"is-hosting\" : true,\n  \"as-domains\" : [ \"6mdsddu2kr7lgq9d4y8uhg3o31w5898qmtule0pqbuvxm5lbghy1plp14krtnb93rwu31j53oh\", \"fhb74a3p9rwb6b09z672srdfq8sclza39prr02pruzixwwk6jh1usop8hew0r8tyoo9pkp1ssbe87dnzwtr1aeiq6axs4ida9jz293zg6981r510ndzi6hp9je6nwyp1fvakeruvxolbthh4xm6e9sppalah8zyh4jji\", \"m121a22dut9kw6zobofrc3g9o1mivrgfiww7jonbjzxfyg8nfot3ykcsxsypfy6xub0it5c3hvav1xkr4nb2fms3piecuzs69zgaiwv3cbp\", \"bdn23sy5ghpdj6p7xzj8eir6fa54kypxk4wrmfxlkyy0vynijcd5zx90hworqemtcw4mhkzbh5botn5cmo08e2z2\", \"ad9ew653mng0eezvmtvguhwuandd2tntlj56jg4oopbnqcrgr95igefs6eosvhimpqmfyarlgtujxvyuvp3ottqkeczbgcj6azqqn7cp9n8uxathmndluahi6f4v9x6poojix4v65zp8sastrl0xac\", \"whytuuz7pd8ub852zr6n31e058es8agunqxmd65r6nvgygtmg06b5ha4jefq0paow0mqszxxlxsad0qmt6sscv02cqoqv8jnh0jd10enahy5kd32s2tyt4othplbgh6ln49fqk9o40nikzh3xslk6qhylbavz5fmes4z\" ],\n  \"host-domain\" : \"aad1lzai7cadp3rqcynindc13xp5stii210lt65m9oz61kzbinu6h5\",\n  \"is-proxy\" : false,\n  \"currency-code\" : \"AFN\",\n  \"region\" : \"ns6xc1i4hq5n9cu6ws93gwd1niphkkf5pzti7rqyd19q8etfk0eot654xnf2h4yhz9w77ei66n6rgla3f40zhezryibbyflma0fdz5rldwn5f9lizf\",\n  \"asn\" : \"vyw44e7xfgle9p92v0sbt0fkr0691491gct1ojw9l2m8r1ll6nwc2p0840jzm8jhaa4b3qiv3mqk52i73o85oig5xg3614lmwcqn4xx7n7hzq2mwj889bxbhxrs26c34m2i8dip5dl8c87wc1e1wmnmuphqmavmf111\",\n  \"country-code3\" : \"cjmn6xt8q6lzk8mrx9ajqz0rd3bfs6o0qwxeax4ch3o009imwhrc3wqxwgi6bhrim9i6k9idt45mji8ws30cosydy3udq\",\n  \"is-v6\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f9e7522-1d8a-3c28-90be-f44a81e540a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "as-age" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "as-cidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "as-country-code" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "as-country-code3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "as-description" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "as-domains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-hosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-isp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "provider-description" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "provider-domain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "provider-type" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "provider-website" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpn-domain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "provider-type", "country-code", "hostname", "provider-domain", "city", "provider-website", "ip", "region", "provider-description", "continent-code", "is-hosting", "is-isp", "country-code3", "currency-code", "is-vpn", "is-proxy", "asn", "as-cidr", "as-country-code", "as-country-code3", "as-domains", "as-description", "as-age", "host-domain", "vpn-domain", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "e4a8ed05-b79b-3298-ab82-6c85a6434317",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "l4is3s9lqw5wx6tvwdc5op17x928ef05bvlmnoxsux3cxjsx6kqm38qzac4ufydd93r8fwhlbjp135jx5q5xtptekj4aeb3v68g44r4kxzbp6qu45nossjlhqyhstmw5iuj84p2sfdx6dh2u3zdpaa2si448rcz3z19voa3qmljba7avu1y"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 32332052,\n  \"apiErrorMsg\" : \"arvyfc3ohy8j3kc7hmrvuof53ppcfze0zwedb7lfbec618ibpv7c34jaszg4qyq7amw46hs2pj93741ypnlk41l8v4svg0h8oxixf3a5yam35ch316ozu4pbjqj3z83c0krr3n52yyw4el63y75w1nfgwe1vvqkzik8uqf3zy833r5oxnybltob3jn1m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4a8ed05-b79b-3298-ab82-6c85a6434317",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "56841682-9647-3f1b-aa30-2d60e24c4771",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "zjjx8455rewxqsfadju3td2d9dszs7ylyrwduqw1pe1cg4az6zzo16vbzv9isoofx4h0lw8ae63jtno3m9audt25srhuy3ahy57hus4ddk298ibxopo00gtplow3r70c8mltljx094f7tlsx6gbbj8y52zfi26hqjvfc9hb1c9hspgvvfqpjht6ww7xnlq71v6"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 178286846,\n  \"apiErrorMsg\" : \"1rj239v2ma7fyb578o59a55se0tp0zdlol687ej5jo4mdu6ac8fqspl2s6avznay1kwqhu43j0ev4xwubz2fbuj9j41g3t6e4op2btkk6hkdn8f6f17uolbekp3pxyxodpre7fd19giml3obbp9gcgt86fn6cdzslufft1p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56841682-9647-3f1b-aa30-2d60e24c4771",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "34b03fcb-c872-30b5-b021-57b7df940fce",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "h1qnkncbst68u9hc0l7am6x12ilql704igqhwfpfgdtc5b5wvyvi8hquayhiyvpvm8w3xvglgmqaip4zpgj4g6b3o9pen8yklz6qy14z21y5f3l7sxtsrezyd8htf8"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1341637637,\n  \"apiErrorMsg\" : \"uwk8u0wvv2x9jghh69gvvrkz4h6bwscmb8y25q5t50j0uhglrzdz2334vgcn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34b03fcb-c872-30b5-b021-57b7df940fce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "8b049c25-378a-3b7d-a9af-96813dc67689",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "wtjrb3r9lzj3x85f2gw3flcipr77436osey619t9qa44zp686x4e8ad3ynu7as6mdggjap2xhlupzkwntgmqcejbju4o0juum8utdzeaw5gocjqy534k2nkpq3raeachnsm18nzy95itio1vftcvjjlh57hcnrx008j7vhj3mx92bcpg8ri1m39by11nr0tytiq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"rqqhqerxmj47gayt1bd35n8vk0bx4bd3jls4ngj9hfiyip9z0vb2l8m4xxsk76clfssprvbjojgub25rp\",\n  \"country\" : \"Paraguay\",\n  \"country-code\" : \"aaaad\",\n  \"city\" : \"East Perrychester\",\n  \"timezone\" : { },\n  \"ip\" : \"5ce2y2wt9rwo4qyf82zp3w0640kk6e1wfsut9e1wgp063wrrrt87a14ox4mw185tlgfk1s0m0c2mbynjh6xwj2bbproo4fldz4lj1h03tw6mg41eta9n2w1vsd73xsie1ccb9tez210gfudea3spkmv4t61lu7rxbkcv93t18sokjr9alfj502xetjwzq\",\n  \"latitude\" : 1.3661019025394291E308,\n  \"valid\" : false,\n  \"is-v4-mapped\" : false,\n  \"hostname\" : \"Tommy Hickle\",\n  \"continent-code\" : \"gv4\",\n  \"host-domain\" : \"vxu0irq0uz1nrbztz6z0njoyzxainyktma1qdvz0x77f5mnv7qf52xgdngqdgyxz95zmmblfyizzj02uidr2qq6ex8km44pgoye2\",\n  \"currency-code\" : \"PHP\",\n  \"region\" : \"vaog4c034id586qst45fkjys2o1rdiz5gy\",\n  \"is-bogon\" : true,\n  \"country-code3\" : \"8kivu9cvmiuaqg9fsheljuivpx4eylau4agh2e507ygwknpybhew1y5yv0bt5rdrayzpsevnzidoqmtqc6lxxiypa0erfo0xgcjhbgcnycofs9ry12k2rzd055lrra5fgwhzd1ya6118jjps5b2a71u3wndimpuut24y7o368ddnbopacnbdwrc\",\n  \"is-v6\" : true,\n  \"longitude\" : 8.631482165723367E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b049c25-378a-3b7d-a9af-96813dc67689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "country-code", "latitude", "region", "longitude", "continent-code", "ip", "country-code3", "currency-code", "host-domain", "timezone", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "a97a9b09-f36c-31ac-9b7b-3036b121bef2",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1035228349,\n  \"apiErrorMsg\" : \"7b2npmje3vaw5srytxdg9x1xwwdp22rihoxy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a97a9b09-f36c-31ac-9b7b-3036b121bef2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "928a9593-45bf-366f-bde4-12a99931761c",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 232354818,\n  \"apiErrorMsg\" : \"mz5twi4sg8k4j0aodpeqjef8h8wgodjf58tnaj2qfs5gvl3ct3h764l3mhgmcz2oiotbyijm38sl45pfg00zaysxjwfduyvhgt7o7ktoym9ti0g0a2yvo5tnk3gsczg48o3vvtebefxkoffpokwdr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "928a9593-45bf-366f-bde4-12a99931761c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "b9d393de-e77a-31fa-9968-66b08ba24ecf",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 626203156,\n  \"apiErrorMsg\" : \"vf6mr4n3ld4nprx8cqf93dzmqjkh7xkdrmvy8cwjzkkc2ilkqw8crd7r3i71lwxjo5cs1xoeupmljy5t34bj8rkx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9d393de-e77a-31fa-9968-66b08ba24ecf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "049fb6a3-de58-3125-be54-d50695f14bfe",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"ayl7o2tydgm7eq2\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "049fb6a3-de58-3125-be54-d50695f14bfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "7c3c33c0-b953-3826-bbbc-a2cd018e09a6",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "2ib3398xsa8bdmv0xq2xnadxvlneq5xvud8tg6tfjj2omtoiym823ej9241njba7t84xnx1p6hqp174yk0z8iw1ea9qam0bjzfj1oomit7derlrufl4319ftp6x3l1dpsenkq4ak4jhc0utr8z27k0dehqnate"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1808429974,\n  \"apiErrorMsg\" : \"iedyz7y2o43cbdgqp2tppjwwf5y1slrh75c459ljmhavg47r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c3c33c0-b953-3826-bbbc-a2cd018e09a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "9d8d120d-b197-3afc-a652-d0f6b5bbd3a0",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "s5vnd676sgj35ikabrc0flg6uxue39uuf2vpt54ciqlm6t0x9t1ugmyz4f9j490akf6n76blfdzadnh72pjhosdwt"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 186725144,\n  \"apiErrorMsg\" : \"v5ylidd9k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d8d120d-b197-3afc-a652-d0f6b5bbd3a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "f90ab366-eb37-3000-8c7b-929c51283856",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "0y5g8ptec5i5wyq8la8b9vvgv2962yaz104d2xfsn9qambwotducmgi0tl1vgjt3oltk2vgb1llz"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 236911229,\n  \"apiErrorMsg\" : \"2z000yqrfc6v76gw9r03ux04lngv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f90ab366-eb37-3000-8c7b-929c51283856",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "d22d6241-5ff0-3f8a-8fca-622f61ab9a1c",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "4jjms7thq2fluwb29zc2bj8j787lqwtlayln7r6elriyxkfdigh70h38syig440krav4cbp5u7kn75urfou5qcjmrwaugz47lon083puf1nqlvcp8c28dp6v33ra10h0ubg8quod3hdpnyselrhycc5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is-hijacked\" : false,\n  \"is-spider\" : true,\n  \"is-dshield\" : false,\n  \"is-tor\" : false,\n  \"is-vpn\" : false,\n  \"ip\" : \"0nx3symnzym2kbwxxdrrmsx59tge\",\n  \"is-spyware\" : false,\n  \"blocklists\" : [ \"1z7isspej0e4\", \"20llh0v9tl5c97uo2cnf28fgvp7w23l8llm7ry7s0r6k6ieee7bwfrmgcims1sgj6g3ogcc4tcs6v5s20wtk1kith9v8lmkp7ynqsx38gmlckhtbuwjpx7p5iayq9ck6uj90wifpkbj4yk5e2a3w6io8csz4er1j5n3arh9jbodcs9k61tcu\", \"nybls14ex9l\", \"c3ohpmn7a2sv4dx4vhr38dc6mtekk19zrqbuo89qxgbo43d8qtxzh88bencvyscvr0cxgipzpptpmgc6\", \"2iuclw5piawq8b6y4ztf6k2te\" ],\n  \"is-spam-bot\" : false,\n  \"last-seen\" : 1129281575,\n  \"is-bot\" : false,\n  \"sensors\" : [ {\n    \"blocklist\" : \"qu9y5qphse2f8mnfa1xyyftnda24zrugvfhni7oaehnk760nty8713huuj4gloae19lic775nld5gibunquhwwk50fsmv3pbr8hn4eac579dgaovv8prmuayhb0ato0of2dbxobxaei1uh6evt7m7d6reezj0vbycipuwkortv41zlefa88mwp67\",\n    \"description\" : \"Quibusdam rem eos quo autem consequuntur. Ullam architecto explicabo eum unde vel. Minima voluptatum laboriosam iure accusantium quaerat commodi voluptatem.\",\n    \"id\" : 1155354510\n  }, {\n    \"blocklist\" : \"mg1gw22lok0w447jet7ufwhp4ccfl04kt9ge3mdvu47b0au6pqxorb3laom82tlwt03ijeeimtr4fbj2r5qqe2gnty1x43zm3r7quk1st6szu3ird1umpwpqte7ngp1uepwcnjoheyo8n509v55et9wjlol98k\",\n    \"description\" : \"Est consequatur sapiente maiores qui nostrum. Alias cupiditate provident sed neque. Itaque odio eius autem. Earum modi perspiciatis cum voluptas ea.\",\n    \"id\" : 813381673\n  }, {\n    \"blocklist\" : \"719ehvosje9t6sywrmugmf4pw6xldjenzxm4gziuvduee6ctcgb3ical19863on0nyhdrijtv9z7j06w72xslr84x8z040j7elvxd94i38jchfw7k6o95v8nrrlxk39m5cop43s0xkju16u86xzbj8\",\n    \"description\" : \"Nobis est nostrum id cum. At voluptates commodi dolorem. Rerum voluptatem consequatur voluptates sed at.\",\n    \"id\" : 1288957282\n  }, {\n    \"blocklist\" : \"ny8y8ssuwpo918p7f1bo5ld1l7e2gqhu7byymqq4frs7gjlzfyrf6r8nzcqiy2b4fpt28vkz2jw1oiq9vd00itdoctw0wiooqkg8u4wzxqggcmj22wei71blv1\",\n    \"description\" : \"Occaecati sint omnis doloremque dolor veniam voluptatem. Vel quidem et consequatur in ex dolorem. Quia voluptatem qui et.\",\n    \"id\" : 1572584845\n  }, {\n    \"blocklist\" : \"72mjup44vu8sh90zatugra0tjj0y5i1cb0hid0917ose\",\n    \"description\" : \"Voluptates culpa quos non aliquid aut. Deserunt esse repellat velit. Molestiae blanditiis sunt quis. Optio et odit nemo aut blanditiis veritatis aut. Rerum et ut nobis veritatis.\",\n    \"id\" : 844925381\n  } ],\n  \"list-count\" : 685108715,\n  \"cidr\" : \"5mibthxbcasu66142hppwwtsszf1timoa\",\n  \"is-listed\" : true,\n  \"is-malware\" : false,\n  \"is-proxy\" : false,\n  \"is-exploit-bot\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d22d6241-5ff0-3f8a-8fca-622f61ab9a1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklist categories this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "cidr" : {
                "description" : "The CIDR address for this listing (only set if the IP is listed)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
                "type" : "boolean"
              },
              "is-dshield" : {
                "description" : "IP has been flagged as a significant attack source by DShield (dshield.org)",
                "type" : "boolean"
              },
              "is-exploit-bot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "is-hijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "is-listed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "is-malware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "is-spam-bot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "is-spider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "is-spyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "is-tor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "last-seen" : {
                "description" : "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
                "format" : "int32",
                "type" : "integer"
              },
              "list-count" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which specific sensors detected the IP",
                "items" : {
                  "$ref" : "#/components/schemas/BlocklistSensor"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "is-bot", "is-exploit-bot", "is-malware", "is-spider", "is-dshield", "list-count", "is-proxy", "is-hijacked", "is-tor", "is-spyware", "is-spam-bot", "is-listed", "is-vpn", "last-seen", "blocklists", "sensors", "cidr" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "06ad0a6a-5e42-32d1-b2e6-955787f79ec9",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 82846699,\n  \"apiErrorMsg\" : \"2798i4zik1kuw7cfvhjz0iqlvsmz4egazjwxyggh64x04y4t7ninmbuc7jo771vrz10ygbz2fpgqbii6jt4a52h4dja800rdgkezpantud9l2okmnei6dq4c3bcl6xfkfkt4w5239ypop6ohbnrnl1e438ica\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06ad0a6a-5e42-32d1-b2e6-955787f79ec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "96c2114f-09c4-32ed-8597-501f08e93d27",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 742127498,\n  \"apiErrorMsg\" : \"a4raufvh91l03cet8r99neagmmu4oyfat9c5hf0j4qjylw5cz8bssj126uudsqfne7nhltt61d479hnpls4mshgh662yp09vzaormc4o8j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96c2114f-09c4-32ed-8597-501f08e93d27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "e14b84d9-6056-33ad-9865-f433933ba8ba",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2110045347,\n  \"apiErrorMsg\" : \"tqc1axr584hbfgd4p0a39h1zkeiu3iix2ii92nia6glfhtplfkztdhwtf1z7xzqrjsdyat2rbz7u7rvcmkv7zqyjstv953n8ezcd6b3phpbkfq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e14b84d9-6056-33ad-9865-f433933ba8ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "3f65e088-6506-3c62-8357-899af6f6e036",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"axngzu\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f65e088-6506-3c62-8357-899af6f6e036",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "0f3d648e-9e9f-3313-8d1c-164eb572e4f0",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 773016637,\n  \"apiErrorMsg\" : \"6916y0fje3woteva9vaepecnyah5x7q0665rza66db4vkc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f3d648e-9e9f-3313-8d1c-164eb572e4f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "fac2785c-bfcd-3077-a9b1-04ae565fbff8",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 255514711,\n  \"apiErrorMsg\" : \"dumhwrzj7rpgfnsmln0io2ah32l2z27mml67mc1f5fcox6n6avs1bdz1v6vtuy77hlv2m0e5opa34o2pmq7g3zl2nci42cv4g86u73b8ezys8q3qxdiexb263z94ij9nghqfj0w2eokk0v8vg8401epxcbw4cnqq64virz51c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fac2785c-bfcd-3077-a9b1-04ae565fbff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "4befb468-f04f-3bd3-9a14-37429d7f5532",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1303087743,\n  \"apiErrorMsg\" : \"xz6byqzbva5fofdp8vybcifbzl5k1e0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4befb468-f04f-3bd3-9a14-37429d7f5532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "90bdc50c-e54d-301e-b44a-19b65e113e38",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"2q8tn3k0nc0985lnabk2e0cvm97jnwow2rq5lxy9lcewhxeeu5tpvs2eq8ir4vxkxr04eodzvfy2vetzsj6g2vz7fsgsgayfnvvskz9py\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90bdc50c-e54d-301e-b44a-19b65e113e38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "84a1b2c9-dcc7-3004-b940-f742416542ee",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 272496924,\n  \"apiErrorMsg\" : \"r2yu7t0vh6u7bp84htsoi5sod0vtz6g7qo4z5zylbg9wy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84a1b2c9-dcc7-3004-b940-f742416542ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "93a144e3-0b0c-3619-9713-30715d9e058e",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 469566204,\n  \"apiErrorMsg\" : \"s5tnegk4csw2xs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93a144e3-0b0c-3619-9713-30715d9e058e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "791b36e3-a046-31b3-972d-22c3ab564740",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1206276155,\n  \"apiErrorMsg\" : \"ut4qrmkm16pln55iwwv5q4hawms5h2zky23sm3yysij51w5shwa1p61hj1h9nysu9d417i8xo44pbywrwrq7d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "791b36e3-a046-31b3-972d-22c3ab564740",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "99aae39b-5b8a-320b-a216-f8ed799b4a37",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"8x9r9y81knr5trqu5p69qfvyrfgdeb559j\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99aae39b-5b8a-320b-a216-f8ed799b4a37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "1755226b-100f-3beb-a22e-09e6c65c281b",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2064750591,\n  \"apiErrorMsg\" : \"o5yt5yuippqeibj78waxuwsgs6dcr4in0yeipzhi255hmqp5v3jl3phv8ccjm0pt1oly4dpxkjf5xshrr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1755226b-100f-3beb-a22e-09e6c65c281b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "2b36fd45-215a-30ba-bace-90549791e4ea",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1829244207,\n  \"apiErrorMsg\" : \"1bnqfsz51wagyx3uayx9709ngl2uy2wc775bpx7qrrzyn6s90cwx4k31rxxtjx2fj4mbe68z0dock0syayo6qvyfvex2133fcgext37iwrhdk4etc0lfz1brn1w8o1uermpm6qfpmbuxkezlub3c5pqmtghrtrrx1a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b36fd45-215a-30ba-bace-90549791e4ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "4fcf56d9-311a-33da-874a-14296d87a6f8",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 266643805,\n  \"apiErrorMsg\" : \"mjpjawlay\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fcf56d9-311a-33da-874a-14296d87a6f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "a3fe8371-1e38-38ad-a65d-c40226cf8d60",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"qe8mquu0yhavt5mo6xk9mdww24v8\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3fe8371-1e38-38ad-a65d-c40226cf8d60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "df0701fb-7bd7-3d28-8e52-37a12cf38ef5",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "nd604zhutiqox48ootp08d64jgstpq0dtoqaot7o22wcx3rmgidwmj9forl3t7rtl1b"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1045734275,\n  \"apiErrorMsg\" : \"mmetax0as8g8pvbifxmeq9mxqhl7yw81k3xf2lg2av3fw3uysgxx9juh1arvfz1extq4aa1z7clend7o1il6bcw8lzqar1zpjwh6j0m472xt4lamiy88jdlch0t4tc70\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df0701fb-7bd7-3d28-8e52-37a12cf38ef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "bd567e21-efd9-3cd7-a379-5bc5c48b7a3f",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "ssvojzhp1ba7huxyhhzf7ifoih62xohd7ymofq0j2l9x3pbgrq9dcs9ywfjyi7vr5zg38klxb8aw9m0yb6cbowyp15fg1yf3at9x00kb0lq7xsv2vvx"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1629940017,\n  \"apiErrorMsg\" : \"4qua4e7yk48siwboam4kjn65qdn27wtn9uaqp64c7252rir275tiqne9ao6ij1e579xsrvivwj3owqb274zx9i2g20vb9xx4z1no0ljjwnwxjsfdoresgjcanmmdw2kfxccfrnj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd567e21-efd9-3cd7-a379-5bc5c48b7a3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "bcbb5bd5-8dba-3509-b8a6-eccbd301813a",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "1f5phtww2aetgme3axpnr2x9mrrlzdtch01yg7sqo2qv0sjjqz9e0i4c0b42xsmb9x5crrwgmf1y9tpbvorvzgwccrx3uwjk8uvq72bgxtles1zvuupz0tqlflaw72lk37egb8qud50gvynaqzq9wc0rkrvszio9ih5f3k00ay0zs6t"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1154489190,\n  \"apiErrorMsg\" : \"0be5fhhcit6gv8tb4nqodn5mrvgr8sia0awcnuwfdj2x7kpz6gy3aotiyrhmo1h3l6482zddk2y2f63zf3sisn894r4dlxg6iis6g9bw2q1himcttw2grlih12sh0qax72yyds6h0s0qq4uqewhm7uz9ycexeilylvijlgy0o8i7asb7muksgyrpml6eh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcbb5bd5-8dba-3509-b8a6-eccbd301813a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "8ff1fb05-cdd4-3fab-918a-dc98afd9425d",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "mqiem8w4qg2hu1q4twyxfw19k9bb40usfoj4ac0jx0szsmqqp20tb9b8xvue38ou67j6ojd8ymn32q3ps2z3572hs6p4k3gq0av6x9t1n2qx7rxk8asxq6cbroq3v3kxb262lm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"list-host\" : \"jj9nlw\",\n    \"list-rating\" : 1730117619,\n    \"response-time\" : 745854531,\n    \"is-listed\" : false,\n    \"return-code\" : \"612fyzbse1ii38t\",\n    \"list-name\" : \"Louis McDermott\",\n    \"txt-record\" : \"9t4trhkdcr0fk98735znz00alik1fd1yrkfil4wew6gr66kfz5ocjmj8bwhj00deyxagl3p25nkgvt1zp4u3rndnlf6w5wwbholeemxxcwqpq2jfawr9aypzu65ni6y\"\n  }, {\n    \"list-host\" : \"iuyedrndz4v9tg00kh0aifiqfelgr5hx6sf0d83esd1ct55lwnkzg4xsr7weacudky21ayojc7t8u5jcln7u0thdc3vo16vwsdbai5u8if9skr7o1m7mn05o9bogjh7i2pxfbd8tngvhrkcl5f6kbmi1ffp0ggezd9ivgme33z08vavsgv9oyj\",\n    \"list-rating\" : 919878060,\n    \"response-time\" : 628170013,\n    \"is-listed\" : true,\n    \"return-code\" : \"djvio7qmjhopnke6v2ndgrhq4r4n5z14zstrvzojwgxe1ek8f9fklfi22tyj0t9wz286og1rgugudyi1p62kye4jejnw6wv3qwkzmum941mxf0pi3vs3m\",\n    \"list-name\" : \"Mr. Ron Collier\",\n    \"txt-record\" : \"h6clx5tvqf4q3ddonm4gbpr5lcd2kqcywq02icvl1ay35sil8cpcrl0kbj8ppd8j97uba3suryfwy7ru2xxa0sk8aan2juyc8t138e6l0tauiwmhbu4pp0df26r73f0751tr9kpy0vbtiao0pyezamljvijd0vyi8jzzgff1b2bhis\"\n  }, {\n    \"list-host\" : \"o94u5hk6r7ehp1zw\",\n    \"list-rating\" : 1448731069,\n    \"response-time\" : 990865739,\n    \"is-listed\" : true,\n    \"return-code\" : \"vmd5hnuvqgfjde295uslol4ym6xtlwjr9m86ugorugbyaz3r9b4m469us1mu0m54com0cydlszvr4htx83a12adb2tifzllvo4o98kj63gnp1o5at86yz7608p4nb6xwo6mf83x5stpnttmwx4nu3gqjpuaifr8nsxg9hdwfesjjijccn86nqqs1tx2sqzqfujyvndj0\",\n    \"list-name\" : \"Marissa Effertz\",\n    \"txt-record\" : \"yu7h0eznew9bmwwbxyls5a3aa3zbx47hurb02alml5lji6mad2r9p0ztk6ot8hqx1yxch4gu7oxtb3njv4qxkq7jkv83wryc6iphxg50tyd873ailjivutmhdop1k2usis9y2avzfn1a8mwsfp3xnfk6s1g79m6pcfs801vbku0\"\n  }, {\n    \"list-host\" : \"5p1nz10f8so7l0vgctg3oao09jis7498si1vsk1mha06txburmb8oag3uq9setxpovz27967wcv7v6n42l237uyz88u2ynqougcpfhliyrmsp6zl0t1ju9pn6honaiyl00j02ukkm2lqd1r6lqxy49k0p04f767fkl5nueywoebl5kn212qenal1fqd6dg76y05m8oan\",\n    \"list-rating\" : 1275149874,\n    \"response-time\" : 938997102,\n    \"is-listed\" : false,\n    \"return-code\" : \"l4g366pma6h93sbwxnm9u1ao0154js5speerw45pgnryinktdbvqkzgyww584v6wz8c7v29i8kul78hth06qkyq7etwj1e48v\",\n    \"list-name\" : \"Karl Hegmann\",\n    \"txt-record\" : \"qco6q1smjki0gg50eszu69e7svpajl82vzsfu9rzkzalyseitwq4tid24akaa4qni933ao464ypkd3jgd61617txq7zma\"\n  }, {\n    \"list-host\" : \"yduvux0ydqi3r8a01qrhzpavk5irwdybdewwv7rq1wiwqpg42fl3nmr9bebwyw6vpjrcel7js4kunnwxaaq5xtjmqymn8hrj66mmytcphlzrr4u5pop4vkiydlprf87z7cdff9a8nwfbe1iiacm459gio08l6onwu\",\n    \"list-rating\" : 969612410,\n    \"response-time\" : 1614866331,\n    \"is-listed\" : false,\n    \"return-code\" : \"5iqjnbzvc97fojowd\",\n    \"list-name\" : \"Cleo Daniel\",\n    \"txt-record\" : \"fpp0tp5r1r4g0dc4b5dlc9qllo7um676kw3boq0kameqo99p2adf4rrbutzo44p5v7n95u4gdxwgeatu6s6liieixv07q8blodt96h5q4kt9treztingzrl994bf03ozste77gmj6vidq9l7pm5j6erl62i5dwyrdlpjif1bjumttju89rvq46rao34bm43lhwbyx5wm\"\n  }, {\n    \"list-host\" : \"v1wrzasgyp7p5o8uysys519adnsphw5dyj27588nrsfn78qf7gtwyhpwzsfslf5uj3ie3k9aqo2qamhx5bw76oflucjvt6kiiuslhoeq9d4tjv1c61yvrbod9w7xrpndzbso3lg2ps8i0d\",\n    \"list-rating\" : 2072927033,\n    \"response-time\" : 32553871,\n    \"is-listed\" : false,\n    \"return-code\" : \"rkunnmeqzdp0jp4cwr1aem9loe47zulsbffr2qk1bz9cj5rto65nuf2rj4ml9a5\",\n    \"list-name\" : \"Lynelle O'Conner\",\n    \"txt-record\" : \"s1x6h7g6xaj6hd6mi0m98wpthw2ty3nti78zt9\"\n  }, {\n    \"list-host\" : \"02s08csok4cnn5f25fm8073v8f2x8txzt0qw1pnkps2847qrsgikymd3e74yll580y11qvo55k87y7oqvs47zorylxgzxdemh4j2714vlicopzm3uxkpu3q5a6c1tn2sr6mdlbfbv4c2qhksh02trlyr3i7ukxrvgv85jih\",\n    \"list-rating\" : 506738221,\n    \"response-time\" : 1899639865,\n    \"is-listed\" : true,\n    \"return-code\" : \"eyyrxmbp0d443f9a4dr1n00813ehjvmvxgh0dihxutd3l7rz7t357ynckfydiug79v8s250ryn8ymz3u9rqx2o78er1rek2nuezjof8yw7wsqrs7awcbh7j7cf3bqn0\",\n    \"list-name\" : \"Eve Klocko\",\n    \"txt-record\" : \"sx91uwb2t4pjai6ex6i762sji3snt7kzr81dmlwpnbvcxq\"\n  }, {\n    \"list-host\" : \"p1ua1spcox0xyfjx7vx2exem1ylzs5zzwjjl4ghwarafcehv34ga6orhk3e9z1y2h1105bbn0kuqymmgzl6citbkptuawpeqdh0m5jfz80sy32mdz57kfkrrarrtjwuryfk8kvwmfeom4sgwnls2ch73968nvdcehtiehq3bmav30q2am049qwa249pnteahf2d4lhoi\",\n    \"list-rating\" : 977463300,\n    \"response-time\" : 1290677498,\n    \"is-listed\" : false,\n    \"return-code\" : \"axkegqgg9qoyz7928h6ngiuqbxa79hxxo1azwb3w2wfqav6vaqq502uhh9nr577gzal8isom63cn803481tdd8a38615nzughtioisfb8uvoi1qgawo3\",\n    \"list-name\" : \"Alvina Kutch Sr.\",\n    \"txt-record\" : \"5qzasy3ln\"\n  } ],\n  \"host\" : \"2kjpkruzrxdrz8m4di5nifgxar3x23bi20vyz5aaqb4u6e19s64c07mctj9ahfkaaxdbt9mam2uemxwxt\",\n  \"list-count\" : 582879552,\n  \"is-listed\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ff1fb05-cdd4-3fab-918a-dc98afd9425d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "is-listed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "list-count" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "is-listed", "lists", "list-count", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "a9e5691d-c42f-3805-aac3-c03682beeba5",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "x4jp4ztq09jlrobashgckjz4ndglewih37j5pi7qdzwiavtxlydw5mghj2c7eg4ie36vy3sco76i5p2crqc1zt5"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 883070025,\n  \"apiErrorMsg\" : \"exx6abv804nkcve6v2dyq3lofaovuucndxq0665xeitt33vxk29jpv4ruva41uf247zgt1pes4o8r5b1hq8v2aujk9f7ndp5q61ickiza74v8jlj5u2ntzjfgkw6z07jjnflf4sx16ykyaki1xab9uas634zv5hs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9e5691d-c42f-3805-aac3-c03682beeba5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "9bbbebf5-a46a-31c9-ab46-607d6575b4ab",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "6fn7bhqlzkac7rnupkpv4vdi789wgsl67pm53bb71uf6hhg2felu74izce9rquc5aesapolkqlo0ccye04u1kz6dmnqorijt4b81e"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1015876284,\n  \"apiErrorMsg\" : \"govz4wze9cb9fasrrjy018pk7mi9jtvb8dzseo34c0q2c8glyy0kl5gdj1qqwv4o37gsx2bk7d0r34xziwl0lglq2rqnq21zp2zxm4unqpgzkj3sz5eszbsj2djujq4bmeq9god09vaijw1hlcykutgq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9bbbebf5-a46a-31c9-ab46-607d6575b4ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "f2301ee7-ebb0-37a6-9795-3fa49d01bfcb",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "xvfgtvaqo9zzrubtmymnltx4cz1vwzqamupfru08uyjao2czuj49eiizpoxz1fiua245nqr52pp5e243inatahi6yn63n2abffpzdxpn1vl1n06eqjyasi52plzk07g222mhqps0sz86fez9lyql2xd9ks45h8q1k2h6qcdj1a14"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 480403693,\n  \"apiErrorMsg\" : \"kn4ry4cw9e8qceulik56eovly2lw29ktxgn2bte6gsyjm0wvalggkima09jb5qilhhvcscqy6595oxzxbmlgs3vi32c1vr0ioliyklyg4bh8u081tdos8433pug1rph75bu7b0n0a1evhiz97ddrzt1787j8x8uxamtft4cmnf4i3r6rqn4ua26r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2301ee7-ebb0-37a6-9795-3fa49d01bfcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "ea3b301a-0907-305b-8a35-9b160456db27",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "i6nfxztk0x0631os7lt8qtrgim964dlrxb5r1edbswl5mza5rw5pkqp3tz3rkjjsz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Libya\",\n  \"country-code\" : \"ttttz\",\n  \"is-ported\" : false,\n  \"mnc\" : \"uex67773evfb4qgjbrqyzodb917n4qn49mjjptpfwv6fwvbmlayzio27ooqjsxkb3i9xw098036dahrvqb8bka7fjylwsgu7ixks26wfc8gl45i3ou82hihy43qcv9jw38i4x92vu2rr1l8plu2s35r0q7j9pq0tpf9u9lrp\",\n  \"number-type\" : \"uowv59pleclwffasmftnrwak9u9qbkfphnv19rikp56abjcldor6u2y6674qaxqmsh1m6h6bhjkxx522kgei2u63gvh4p1a1l7eqgc4icdqcfpac9un\",\n  \"international-number\" : \"r2xltcozzqp3o5t77lx6qgumn7vl8w2sgt0wmrid6vsyydeuvbe5u5am637x0o7unq\",\n  \"origin-network\" : \"wncdhio5uwg9g78pje8w5dei0fy04t46yoqngyycglrrxtx\",\n  \"roaming-country-code\" : \"ppppt\",\n  \"imsi\" : \"kruswixfnlk4hmvjcxmkb06905q4r6jjngnbn0b\",\n  \"local-number\" : \"0eqtp53asxvh8m8vxk72jj7tt4u3kgkvgnn19eo80zb7pq3\",\n  \"mcc\" : \"awx8rdmxeyhxm92m455az36s1c34swsn5zygg1wzi8e98iv6qiqv101ci97x3yl9b8wg1stmyd55pbcw9kq2i2umwgj5ian6bs6bjahp8euh4vlqru8b3pn6wvirxfw\",\n  \"hlr-status\" : \"53x6r8ioxvz9woi7fhvxenzm701inp2emfdqg\",\n  \"hlr-valid\" : false,\n  \"current-network\" : \"wzi9nlrfpn71052fvb9oeu7tcwk2dbje8l61vnp21usvi\",\n  \"msin\" : \"vbw4csqrshwyr42pj8zbjupbekiszgn5l0toi1ieo6lpzzesk7wvckfvui2larq0pymouxnvf2jse\",\n  \"is-roaming\" : true,\n  \"location\" : \"r9sm295d\",\n  \"currency-code\" : \"BOB\",\n  \"msc\" : \"vx2ehc82vkv7c1ud58mkf4zwbnmz2l5ohb4z7sx7qb9f84\",\n  \"international-calling-code\" : \"iyabvyf64uvrkk4vh7s228emllcus7v3uwemr56jgrnzp\",\n  \"country-code3\" : \"jqyykq4vi942oppx9wkbpl4cmimypox4phtijdfslbd0smij9powr4w236fn2bct8i2cex3r91rln93oryj68e7yn75e3ngf71oqiim7nuxv3vvwbxuwwbeqbxbvrzpl23seb0zcxb14kua66wkwfj\",\n  \"is-mobile\" : false,\n  \"number-valid\" : true,\n  \"ported-network\" : \"yr375nr7vmd5w8zf3ahsw9v6hxm105fqwklaarm3n15xxkzzplxl5cqe2fefgx3vdvf2o5vt0ofoqcbyguf624azvbmjxvc1mxxp17uddm9xdlz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea3b301a-0907-305b-8a35-9b160456db27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "current-network" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlr-status" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlr-valid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "is-ported" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "is-roaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "number-type" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "origin-network" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "ported-network" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roaming-country-code" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "international-calling-code", "mnc", "number-type", "hlr-valid", "hlr-status", "ported-network", "imsi", "mcc", "international-number", "local-number", "country-code", "is-ported", "msin", "location", "origin-network", "is-mobile", "is-roaming", "country", "country-code3", "currency-code", "roaming-country-code", "msc", "current-network" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "4a37c5cc-4580-313e-abe8-775a765c742f",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "ayvfwtutnku696zytzvwnj8w8kri9atvusg1oiffytovpyiwrynhg1y3gr2nokt3bgsapm4c9u1k3u3fhmz6qhsragv9ep4sj8udrmjgyz6h74ep4nckc6"
        },
        "longitude" : {
          "equalTo" : "5f64hkpe9tuqv2ujrfw8bajro3kd8gonrw2p8kjloqjzrax5catygdtjn4au51gn46k6fqjgkj3h0h76jn46nk39db3qvkgixj2bzw0tpyoxikvjkyf2og9fmilavk1zvdylvo6"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1253164141,\n  \"apiErrorMsg\" : \"t8l8daqzsalevo70m7y922mtzwat60mr43is806v300crq6yh9xa38pm6bc7li1w9f5bgs8p5m22x0qfgah2n3kjnpgosh6qf52j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a37c5cc-4580-313e-abe8-775a765c742f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "5a706d5d-e661-3f0f-99ff-6fb0fc81b99d",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "wzyl96c1trhd0ey6uz5a54kbdrsi8cdnp2r6v01oyq8gu68r1imvfw49ma5ov3vn3z0tfr67r9ayvfynoms96muj39tnfz334p86pyav6yg3ft9drtujdgun127419176vvm6uys936sj68s5hiy0rfucgfacsyj5"
        },
        "longitude" : {
          "equalTo" : "raqsdew5q3bf3hpkcycu207cg4vovhqx516tl4u82ii06j8sl7kjn10dyhd5l1v7fdvrs3skb2nywc8p9fu2wcjdseq59nethassyk"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1726010298,\n  \"apiErrorMsg\" : \"xiv6zw0bd4pkhtljvfciz75tbkfym1g6y9jphrknbumh1udbpmi4vhp80n2na58ecxer052\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a706d5d-e661-3f0f-99ff-6fb0fc81b99d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "89ddb800-b598-3bd1-8fcb-574f6b4bb67c",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "jvva6xv8kcxm38yy06wifci84ad6bgdrwsatf8yy6ps2ljqnih40fp2gppkrrlt20ltkygnhongnvrqhx6mwqt1i435pbuxsb2rhjsyrm640rhskx09157h2egtecanxh8wq1dn1g5k6a92ci563gf8f6rfpy2tha51yh"
        },
        "longitude" : {
          "equalTo" : "qeh79qm15n0xh3wrajahyn2jnwj0slxk3zl2b48liz28kjrfyqosu4br45vix3umc9u7luseoq2h81srp4k7f461zq78dpkacxv9vdti10jik3nhcb3fqihpgd6gndt30rpu9fvkn81h5v35t9dufeb80wxswtm"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1851530347,\n  \"apiErrorMsg\" : \"rmws84mldhs4et9i13sflp052z8b2x2lvomhbwwcp9ii\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89ddb800-b598-3bd1-8fcb-574f6b4bb67c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "1aafd815-7f7f-33f4-9bb4-7ef9e8482d5c",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "i13i3whdzasl26hi40st2iuuir0f8jpvjekjqfz8ttss4dmzyroge76abdtlv8a0nsjgl8adn2fdk2ln9y452tet23veljojmk1aa23vwz2oiry1hct5p657z6grwru97a2dwnmu"
        },
        "longitude" : {
          "equalTo" : "67iq96gcitb6m75j207zjc6uls4ru2ah24c812"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"llqct27x7gbb24eiw4ssarmb7j78a36zsjx7ce8pdukpiq39x14bfn2q5iyhjre8hr04fa75bzya\",\n  \"country\" : \"Ireland\",\n  \"country-code\" : \"mmmmh\",\n  \"address\" : \"us7cc07d3r9d8hq3qxgica6jk0znr9qv6n3cog829pj4ct4hk572uy8wrj7r7126rq6ubgf8939ioq89hozi00dh9isktpn9kl31mibh77ayg5rdg9farx16igj9slkaekgm30pna0jlwrrc18cdbyk7j1fm1o2rco30bjzo6f42wdepl1yjgov84q5gx7b2a\",\n  \"city\" : \"Herminaberg\",\n  \"timezone\" : { },\n  \"latitude\" : 8.85327786794712E307,\n  \"address-components\" : { },\n  \"postal-code\" : \"05631\",\n  \"found\" : false,\n  \"postal-address\" : \"nmhiqvo8jjbspupufj5u59mwk4e7x76r23crx0ytqkrlse81joho109a690a3axb05t1ymvitjpq98sf0wodsuepziry18e5h8rqd5h0n0lqdc01aimmujxw9jqv77jo\",\n  \"location-tags\" : [ \"3o3l9knlhwee0u94udo3t5qdqdmk56nbc5ruddzuxinu4s51ydfd94uyqsbgazdtlpi7e2mm1bub7nam1p4qr2i35kv3rgzae6q4bwilgrt2bv47q8jldt3xjpaq4\", \"orqn1dfgj1vez18i00knv70c4jn987osni9qvmg0t2srctx4z\", \"gdp26dy600hcehibcwxn3i5i4znuffw0odull4g2bpolswagapfq7678\", \"twpf6\" ],\n  \"location-type\" : \"f3hewlno4ll1rvwan1osgh99gmsaeqfet5mtx45uqh33iypbitxntwbqzihywic5lzmk26j0rh1epdj987rourblf19q95wb7fz9tsedr48gwtqov8e0gkhql40a3i\",\n  \"state\" : \"Arkansas\",\n  \"currency-code\" : \"KES\",\n  \"country-code3\" : \"dfg2d\",\n  \"longitude\" : 7.210048615068183E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1aafd815-7f7f-33f4-9bb4-7ef9e8482d5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The complete address using comma-separated values",
                "type" : "string"
              },
              "address-components" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "location-tags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "location-type" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postal-address" : {
                "description" : "The formatted address using local standards suitable for printing on an envelope",
                "type" : "string"
              },
              "postal-code" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "region-code" : {
                "description" : "The ISO 3166-2 region code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "country-code", "postal-code", "state", "address-components", "country-code3", "currency-code", "location-type", "location-tags", "latitude", "longitude", "timezone", "region-code", "postal-address" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "e8053427-db4d-39c7-95d4-f8d30ba9d168",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 267759834,\n  \"apiErrorMsg\" : \"rqdx8ww4my4vjhphceafiuc0yj4a16am0l3q39dt9sjsxw418c1g38kdyl77zsia3n5pwqun43vv8hvbbjj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8053427-db4d-39c7-95d4-f8d30ba9d168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "3d0af035-68aa-3bb8-933d-8e728a17cacc",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1715181265,\n  \"apiErrorMsg\" : \"3ds70sq4pq9rhhr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d0af035-68aa-3bb8-933d-8e728a17cacc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "de651359-5845-3124-9231-ffa98d0c6522",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 905093760,\n  \"apiErrorMsg\" : \"i2y3p4dv7ptmwbx4lw3aqm0pbfkuqvirgy21u3wa2rn67by69gatndlerpjo8k8cofy60bkj114npp6s7ub5n32xfhgs3fnd48l2snrtd02kxg9fubx3bbqn4og7er7srkzed0v6l5otcw7fmt55jpvlnzug65nm5ht50pt4lyz7u2vgrhee3ucut0ezicliyu2bp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de651359-5845-3124-9231-ffa98d0c6522",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "8d1ef819-abf5-3ee4-87b3-0a291c02f9a2",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 1553350776,\n  \"locations\" : [ {\n    \"region-code\" : \"y61vwfsglxnh0ora66p1mjxxvftzjyqijgv4xcq723j6o3ujuy5j824y2umxvbdz8qxzxhyk81hvcea513f5f2fxdwmu1e23y7xhlya5scg3ozu0vehcw4phztis5cid88lmvf6x6n6n1c6evudgit7q\",\n    \"country\" : \"Viet Nam\",\n    \"country-code\" : \"mmmmt\",\n    \"address\" : \"efixgj\",\n    \"city\" : \"Markview\",\n    \"timezone\" : { },\n    \"latitude\" : 1.3521089773755216E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"99653\",\n    \"postal-address\" : \"itdoop87n2e1wpqff6ji1zv6z7i2z\",\n    \"location-tags\" : [ \"oqjgxw6qwqsscduz8qsln578arwh8rce5xzhcpl923f6rkp18dse8bv79jnuemwaiuwyohrcaztqt0rgfr\", \"j3urk37ra0ddxml0z2l1ygwtjk2uj80y36oh51yvri9vg61qh37j358vyyomwxhiwok8chntuph9zldcbx2v5ihe6if09rl3azeyxo814s1hk3dt7otp63ehihgun\", \"ynr8ro4o0h6h9rvj52tgozu2hvhgur4wtu5eppduge5khset4879kt54de3q2swef068en4rhpkro4rw6qe0vucaweuerf735bg5xdzdnr5m3r5olvyfvw4bmf7h94tq2jpov039eodpy2dsa0l4oys4npo25\", \"6y9znt9ugv96q77lu273hv5egiuvoiecz936757egs486c43dxpmlsvdifxf4f77splonp6vd4oi2qbcpodweg49uboveb5pdkhwm16lmveqf\", \"7k868td2eo3uu0kkd3er0e255lioljxzqhq4hdq0d1wie6g235\", \"ymgto8p0tz3jrnog884ninqwmh3go9k6k5m25xjqgc5lpf8i9svxns71she6qkbx23znyz0va0rxsqfcj0iehctv8bjk7v3vyvmh7dsrdokab6r671y15ycueahlmlaiyd3rsdr64joozses7qa4\" ],\n    \"location-type\" : \"en9\",\n    \"state\" : \"Virginia\",\n    \"currency-code\" : \"XCD\",\n    \"country-code3\" : \"thkpzpy2j3w3bigar3i1f7qzs6xsx7hay4v04k66h0arbkuko9l100femozsad9uc9e72891slxwxndun29700a6vkxnuygfifheh\",\n    \"longitude\" : 1.4402484297847176E308\n  }, {\n    \"region-code\" : \"rphedml2tjuxxcsfrplmf5cwxwui6w7ydrrhf09ckb6whf\",\n    \"country\" : \"Jamaica\",\n    \"country-code\" : \"aaaau\",\n    \"address\" : \"3nif946yoa7enixcynofzistphfx8gjgrgan2ptd4cxy6fowjl3prhfaz2urukgse7md3np918he2kqp1ixjhmlyr\",\n    \"city\" : \"Binsville\",\n    \"timezone\" : { },\n    \"latitude\" : 7.703831102940664E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"50886-5027\",\n    \"postal-address\" : \"9j12\",\n    \"location-tags\" : [ \"nhe38\", \"icmdrmweisw71vab4hvee26kc6an8yxtqegj0wuasyb8hqjzn3xhsc38bxnu7ueh5gto7fbevm3l8jmwc6bqtl0qpeq269pkomih07p\", \"z3d25sx1fvivhd9cnh0n933iw3i4zfifxid2loooc3c7q0wxm3j14tivxfl6mkjj64b6mlrkucc4\", \"x47orpornrbpl73dwnql8tahvmpa47yjcx0bzxzqc8ad0papsum43kk0540sz6l214ge6sqe0zirzknasdfle4ol9xarbosegvknnfkkc4yzam04ceb2refmqeytmwpqmv3d40j6\", \"fi5c5wiy40zzcmmog81ka7as7syyoa41qplu06psrt3a69lxfezq7hzju9z5u1khzs6kj4g9to2zthul639t9tzw9mavc4jstjqlz8pzysg0poshd23iahcnong88vxflrvqq9x5qatpj4w\" ],\n    \"location-type\" : \"x6gimmc44l1wwjg0nfc8gckn5jivw6qk9gcn5q1qxytl9ih4onnkos6x4bm03s1bdiwm0z55njd4rofubgvvf8q53uvax7jtwgues22o7c\",\n    \"state\" : \"Michigan\",\n    \"currency-code\" : \"TTD\",\n    \"country-code3\" : \"frh3i8l1xncmhqipz778oy77lpp8eqbdh983g56srmh4b8ifmnh64ntdl0dy6v8hbvq423fqtpi7y5emssx0y8wlkcrx218d9hsf1zf01kb\",\n    \"longitude\" : 1.5541038042529035E308\n  }, {\n    \"region-code\" : \"z5kvhmaoithdpbs1oky6zuvtfwwc6yam07gukbv8lfny3tueyl1eoq3sg2hobuohoi2ndaw4om6sg890cj1o2fip2w5zug5iuatgl1ejir8x13962971lxvnhtotflteqanqwzn1jdovblqs1hullku7ey5gxf\",\n    \"country\" : \"United Arab Emirates\",\n    \"country-code\" : \"bbbbw\",\n    \"address\" : \"jlre5suv1f9jx7lcpif6gn63zddnm2qfhgehws5clozuwol9942mzcdlhf41lirjiuzjf6rz750qgrpgquxnlkh\",\n    \"city\" : \"North Ernestoshire\",\n    \"timezone\" : { },\n    \"latitude\" : 8.557063212444099E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"85674\",\n    \"postal-address\" : \"r8lf8aasf9i314l49oyi032u5h3r7t46gy2qd9354ubp2ahx1yasxz14rr512x8lsusvy2isgvsik47ixux2rgwuygt75j9566evcg5zo70vonbuxq1wdfxh7e23fcpveo1p296kysnf6mtjm0xvxz5lx751e31\",\n    \"location-tags\" : [ \"6d4zy78f2bc6z243ugva6m3pck087pz830h94nxkhregaii5s597saipbbpltm9hckhls1q85x3mdhqjdun4ifzvpmr95sj1heu56h41amck\", \"2kiflgrh8kgemaeqp97gdqqflb98605f4lessve5s7f5nt5gwvy\" ],\n    \"location-type\" : \"tdyksbk8ncny4ygch9vuoxd3cgmf7spaw1fli82m45q2573u426ak0uo91vo2x70sott57n7jubi0uwhx7xjfanx6zyr939r0qhs9u1k6qfi8bhrdmvsgk189aghk81q4iuadbur7m5aval0vhozxd2ox8f4\",\n    \"state\" : \"Arizona\",\n    \"currency-code\" : \"KGS\",\n    \"country-code3\" : \"59jlj453tp4vhq8v6n95x6xk2gi91sn931s94b6q7i0c3t9zmqr03j2f9222iy5ayld5e7vzc4xia3mm630zl632l6dbnvesvgqf0e9dcz0zy977d2v11359mx\",\n    \"longitude\" : 1.632265599157297E307\n  }, {\n    \"region-code\" : \"clrrm0iifan3vv65k7z2zjwevkpwl3ry2cu0us10l5gy9k6w8mhl8xkmeor\",\n    \"country\" : \"Burundi\",\n    \"country-code\" : \"ttttj\",\n    \"address\" : \"s9en7biwbluoyb\",\n    \"city\" : \"Port Robin\",\n    \"timezone\" : { },\n    \"latitude\" : 1.0044818450569214E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"98117-0324\",\n    \"postal-address\" : \"pcyqr98z02oofqk6phww4a9xu3lko6ylzh6lecn8ak88rglh5g38sp4p4r65kbieh6h54s36qysykycwz97asfiaq2ha25y3cczr0d4qvb0r9ry5zo3dazbnnsu86a6erdfjo3yh5cjndpl9658bh7swzu4y4a6d77ugrhylpbhx1djpwxq8w5b5crgtc335n6j\",\n    \"location-tags\" : [ \"ahk1qze9l\", \"mf9vbcb2fz54dxzzryos7\" ],\n    \"location-type\" : \"aga8t9qpe53qas1u3exa8t0zk3x41zkw6j0xv4qvlacpuzwdyrlpe90dy98xvmsaibfda3enx5ynamd2tybuw2abdmnalqcobv2v\",\n    \"state\" : \"Louisiana\",\n    \"currency-code\" : \"ZAR\",\n    \"country-code3\" : \"8xgw436nqnees0ed8w0gdcz1zei32trt2q6a461x\",\n    \"longitude\" : 6.27826423961952E307\n  }, {\n    \"region-code\" : \"98qibh7wvjgpyck2x9eh1yuo36lru4zy5y3yzzifp46xhnubys7011lkfufb1vujg251rw2qsgyvqimac3e7qu74ardokcls2kf5mu0u6myvrfxislspluldmwm699v5ocmfew6fa31zt9l8x79wyn5px6n15tax1hl75uu8tn96cgfvrwwb4640eo3dz\",\n    \"country\" : \"Bahrain\",\n    \"country-code\" : \"ffffr\",\n    \"address\" : \"o3bwhaub497ur1cn0xnyxyuifyy2bu5e24ydnaczil2kc62cijozkfeghbmh80c11mayh0rg4bc82aimhixdan8ojvnec6qjfhtfv\",\n    \"city\" : \"Lake Rex\",\n    \"timezone\" : { },\n    \"latitude\" : 1.6188476462268749E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"94166\",\n    \"postal-address\" : \"hh0s69q934tdh3365msazuwutjakdvcal3ogmclczt9knnso\",\n    \"location-tags\" : [ \"f62k71oypfsnmk5klgrcrp7ypulfptdkmd5r9mlz4x8lbjjlgbt2dhhjcjpjl2044lyxzi\", \"zok5fejoqy\", \"ezhz9ojzjok5mhu7jn46d70oj9mgr9dsq365mvkznckg2pkyr405nr6reqmgzzrvuj8uqt8up7pmlij2uzq9\", \"3rwpeohg44mppvcypostf5o6pafft5e61wqz1sv9xm8ox4ysgashuf3bbg2yd7qv6o8trta7pxjrm455g9t6ptigrkp6wa55eom3kkl79fyqnjeh9qdtqafs4ibpkxkodmk055sp5e3ms8l8732lw76l4eo\", \"kgvvf7gk4mle873pjtkncv83fcmtrc23fzqgn4hfskijo1xahhbpdsp73n3m9\", \"vv8yve2wiuutpka3a5lkmz9\", \"j8y6gpfe0efj7w3mcyvs7482kiuc4qmol1c6h3ylsxk5z\", \"j0zb6jbamzec9sb4gle0zp6zsuc0ikrmhdfpcr4ewo8joi527iu8x\" ],\n    \"location-type\" : \"rlipptx0brbnrlsvnwm7k9byhnve1dfu8p6hgvgyfg9h2w7smq4vrbr2i2ugqbmpz37m70zly3yhiarbl1aaz8hqvbafla4umzykdsubn153qowpq0fpljqd5w6isj17z66s0awenbns\",\n    \"state\" : \"Massachusetts\",\n    \"currency-code\" : \"AMD\",\n    \"country-code3\" : \"8fvvc2amgsb1b4s3srt11mog4n742olwvbfxhzgb5wzz8s5onuzs9wliqwf26v5koryjdjpr51zmr0psqjvllzv0h5g3as6auyb86hxtjeyula14oqro49e3r0vif9ul6tzuc14dfo1m6sm7aynxrruaiyrpo0wtyrtj1j6cu3wo2xm\",\n    \"longitude\" : 1.5681131768192804E308\n  }, {\n    \"region-code\" : \"mqkqc6akwbtmek8td1cxd2e0jo5pawzmtzrryrpcvhh7gzkczdlys74wlj7srxlj0reak0ix2d7fr01tnsckxx8medm9mtbsl0ybd9rylnzxodsjogllgm0391gaotdxz765zzm7104uc4e3ubmmd222ap1chond3vvuo9hpxsfz\",\n    \"country\" : \"Micronesia (Federated States of)\",\n    \"country-code\" : \"bbbbn\",\n    \"address\" : \"zl3baysxf6aemrx75s5mrxm6sp32qbhzj74vz4mrxnshzzinq2etw1sxg42ak7um62jqxjx0o9o3hf8ggcecvbxzi\",\n    \"city\" : \"Dollieville\",\n    \"timezone\" : { },\n    \"latitude\" : 1.3231124305320663E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"17501-8398\",\n    \"postal-address\" : \"m7prgjbr\",\n    \"location-tags\" : [ \"5dyspy8cxgroeury9zvvg3uxy7f6atjk9gpha4kra7p812ljv0b4u8jylxqli22yawrnlhgzhzjerufnkbwjf2i01m3qbpc983bk61e66bsgc9t3dbdwokmmx6qux9fenqidoms0hgxnfzf2gtyqxaycxp2t\", \"ubezp3k2q\" ],\n    \"location-type\" : \"6x3vkjkcqqmknvnc8mrtdgjs02kkj9vnsqva3sjvdqc6cr4kk44uo7iuyn6xmdy2pue8jbe9yt5zezh0720uek\",\n    \"state\" : \"Virginia\",\n    \"currency-code\" : \"AMD\",\n    \"country-code3\" : \"qguclabrtp0y3s58zha5vo9puyqt5abjdkx2yv36x\",\n    \"longitude\" : 1.194700411243174E308\n  }, {\n    \"region-code\" : \"hvscporjzpq9e270tamiic5zf72snoncvvphlii46nmpclh0g5g3uwt5ipsx4qs9bj807xwflyorwvb3v0wobrma6nrbl4osa83cni6w0fwhz2umfh01amx9pghuamr0g64fc8n8b6uadoa40p3764msxy8mphk699aoin5rivuy0cmaq45w4u\",\n    \"country\" : \"Tanzania, United Republic of\",\n    \"country-code\" : \"eeeee\",\n    \"address\" : \"bfs9ea1qqoz4y1r9x32y6iwfy8o7ywkesbxoqkklbt0odk4q4s0el54enqlhr4xk29msxwb9p5qltdeh5f9xdnycz7ii2gkd3vvzu9cebuqjgmr6wik61kcp\",\n    \"city\" : \"North Deshawn\",\n    \"timezone\" : { },\n    \"latitude\" : 6.393603019476265E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"15133\",\n    \"postal-address\" : \"k1n8jgkmp2t0lv3mg9ze3a4hobssu3o0g062fn6ntfd7z89twflzs1\",\n    \"location-tags\" : [ \"bw2fr3j8dvwjvzfomn04l1n3rtqx9a4d444wre\", \"arg76xp5t1nmwhyznn7lcm6iwv96vbx6gklxb1ste09x\" ],\n    \"location-type\" : \"k3l4720k33bjbbv4b1tt36thfv5qgo0x5abho871oo921xk0y4rs08bpfjvde453o76vuo18xkiych8pz01eji61i8jr3hvf7jslr0mvufewvaohwlwabaybun1x6lih4ls07eapz25rz69i7tzpkt7ykbn\",\n    \"state\" : \"Idaho\",\n    \"currency-code\" : \"KRW\",\n    \"country-code3\" : \"4fp0v0\",\n    \"longitude\" : 6.291515166118731E307\n  }, {\n    \"region-code\" : \"3ap1s3tvqrui03lz9ptsliulwcj20uo39tok8958iitwz53mbnjorobs1mlaj5a8zvgu9p81xoanziym5ypqwz1179qsidys73g8ff2bn2ca9r5jz49x8mks36nlksxv5mpa29zo5e5emswhqr4m7v8dsng1fsdxxazeylz6ym\",\n    \"country\" : \"Mauritania\",\n    \"country-code\" : \"iiiis\",\n    \"address\" : \"kx6ejrux3u3xjycjkbm2t2adkwoi3vwehkjw6n878r40punba6tbihq9guqlpk37sght94vuwj8g4hyz7zktss0r9rxyeml04gtukqet7facsig5vn329z1su4dzvbikqcnizpto1mw51160jppwgkofp4amu133e\",\n    \"city\" : \"Pollichtown\",\n    \"timezone\" : { },\n    \"latitude\" : 1.5027018551474381E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"75211-8382\",\n    \"postal-address\" : \"4gn8f9oi5vdio9v2x4wy5mqj1uzeu8kjzu1r04dpxx7s8ywfolv4ngjjn71zt905uqik3j4q5\",\n    \"location-tags\" : [ \"ehnj7y4jomnwulpwb4ratnzxubxhv1typc4kggubsstu6z17n7ig5zj16ktn7fjcndp8s3gw71lhfbf988mzmju5d7pvdudq32mz7tw3972krehilyh7k73g1coa1y6u6mru1crools4w0at35tlruygrsqn42qvg58ozcj3a7y4lwwg29c0wp4vf96f\" ],\n    \"location-type\" : \"tcf7v7jfhaz\",\n    \"state\" : \"Maryland\",\n    \"currency-code\" : \"CUP\",\n    \"country-code3\" : \"875bbctgemra21a5gio3060tpd9lj59jjl7fgj2hry6lc\",\n    \"longitude\" : 8.478954307636655E307\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d1ef819-abf5-3ee4-87b3-0a291c02f9a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "a562808f-9b86-3167-86e3-56302ece361c",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "5a32lgjgu1f2kxrqbzxylw51zvp3moiioail7mmdye4ijqh8qmotv4bore4qc99go5kd1m1bnvxub9pgjnxjj971qvp7roiebgl2c8vot5b4tg1w60gl2d9ws2ow9oaurmm1w81qsbx98q"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 715659727,\n  \"apiErrorMsg\" : \"gqwbsl6luukhnm6v9tj1k6rem8uolec7szvkqtdpzg2q8g7pr05zml54dfqe76h1p9l9xgimtxb5530dcq057qr0o2k3q43byl1kxoempwfvb6chfcmi8cumnirex6i7glrlf7pyo5m3z2c6t0c7w1ax9lfsohni77ivi1qmn0k5en\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a562808f-9b86-3167-86e3-56302ece361c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "fb7e82e0-9e35-3674-9332-e3de4cec61e9",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "etmj6wmgqhp6agjm36pzv4monjczxd5imh7n0x3d1ledxd2rx3oh5b1rjwe9e4h57ch9zm2xosqc9ic9bhk82nbm5v557kd6nbuqze9050ulfc0mxtzvdgxp7gqi3cd9g0e1zmxepghuyu9735wj3ndeebpc76pisovu0d6zlb0a"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1565317920,\n  \"apiErrorMsg\" : \"z0yqwdk8pzgv17xeflelg8aevp2u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb7e82e0-9e35-3674-9332-e3de4cec61e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "7d675ff6-2398-30e3-9776-f4562358f155",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "bx8u9bvmuno4zhlyezqrm"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1699855771,\n  \"apiErrorMsg\" : \"ds5mmw2lc472c7zz6pl0tzc5my5lhwxysvc550w5qi4wgdsu4ii7tzvg0dg2j0d7yfr94brl4zudkggnm6tqssi2gkv0rbdojgbkqzm2fyi51811qrztk8ouuwtfvapwvwgktczrt8rsf2t4kyzsie05ixursrtvq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d675ff6-2398-30e3-9776-f4562358f155",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "0b246433-a00e-38a2-9dd8-9ad3d60c527f",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "auz0mrfu67lfrxr2wi8n8knnh3xnfqconj4cy0u6mzfs"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtp-status\" : \"kfajuies5c290qa9ydg4c8mcn1tifrvyfr1kabu9fnke1nd4ly7h8igy6ogetb5gsd5ure0qsepx8ii6c3s9gnei9o3qnzndyq6dbjjqbl7zjk\",\n  \"domain-error\" : false,\n  \"typos-fixed\" : false,\n  \"verified\" : true,\n  \"is-freemail\" : true,\n  \"is-disposable\" : true,\n  \"valid\" : false,\n  \"is-catch-all\" : false,\n  \"is-deferred\" : false,\n  \"provider\" : \"rudvbe91ahvpe4o65vv0cu80wtmbzpmtllcw1ih69js4tw3rtu1d0sd9pdexkaeqaz2ua2n9t90p5altl\",\n  \"domain\" : \"bynqref7y2gpj1df1gykk2z29ajuu0ucaxfd9ks9pmpv3y0z9qociohz1oews3aww8109votr8gxr1zeawp2to6syzadbaf27prufhlc30hx75g8e56mgy8106as4rxmp\",\n  \"smtp-response\" : \"zpngczlkbxdzz86v6ks4dql5tvmftjmo8jt3neurc7ozmcm6hvdtjxzb8dhgruwh1thzzez\",\n  \"syntax-error\" : true,\n  \"email\" : \"6t8g9zc2co9huwhpr98q30yvlv0o8netkj26llypxgwmiob2aua3fsl4n1oqc6wvyux21niwmit6jkux30vjdianv13dzdy0emxglu74vf79tycp99b4w2312ta55mosaxpg99oc1nb33x420h5w\",\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b246433-a00e-38a2-9dd8-9ad3d60c527f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-catch-all" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "is-deferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtp-response" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtp-status" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typos-fixed", "syntax-error", "domain-error", "domain", "provider", "is-freemail", "is-disposable", "is-personal", "smtp-status", "smtp-response", "is-catch-all", "is-deferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "94f00bb8-3972-32e7-b2c9-8e34c78c0fd4",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "b399y9wq7y5ofm7nnjle0pmhv6eps0xmrxiwgdtps4ymxlyxjuvwmyzog061oq1y46jh78va7rhcnf65bg8as0rv6p9js1kynpxhg3qjxrpmfxx61ojhh"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1977154455,\n  \"apiErrorMsg\" : \"bl5hnfnz6csbb5p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94f00bb8-3972-32e7-b2c9-8e34c78c0fd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "8befb37a-c304-3e31-8cfb-59567601a3d7",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "zf6rxtcmsauyb53cuup9t84ecv"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 30036670,\n  \"apiErrorMsg\" : \"8q6ad8sk603fhc8evyayh0g3duic9m38h5sg8qn524ze91kzzwbouvh1bytlhjrzhz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8befb37a-c304-3e31-8cfb-59567601a3d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "06d83c8d-83c3-3394-a6e4-a4840970b1b0",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "hbrw28eaca285uayu1du5seffdgai3mkpuweyk8m1wnynmsze30fkf1wsll1ow2kp9701s67z394mh"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1739123476,\n  \"apiErrorMsg\" : \"sxl7ktkxx5k3hcj38\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06d83c8d-83c3-3394-a6e4-a4840970b1b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "43bbba00-eba6-3ee9-a00f-dd44d3b288d6",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "8zze5hz0vwywnricmevo3ztrl6j6s3r3ri4vbu606nknuistjwkd8gkf79i8rwdrmfvulc2m741xn0sum5pscojfg6dgy650iqn5vvg9524sqvrsbc5s"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : false,\n  \"provider\" : \"kt1gha4hnrvko0y3cmbaom2jgxbq4mm1a88xqkpfm369pkzqkwfll4vn8ckj7n8ykatkv2qdvbfjveolys9xuf5wbmha8i5hcs626cvaqrm08oh5gxzud4haiu6art\",\n  \"domain-error\" : false,\n  \"typos-fixed\" : false,\n  \"domain\" : \"vsa9u853qqgei6d8q0xj7u514mzaw4b1f0so2tv8s9jkbt4is5j8z6am7klyums4wgj7jch1sqhfob1miptzlcipt1s0409\",\n  \"is-freemail\" : false,\n  \"syntax-error\" : false,\n  \"email\" : \"p0l0ubofhn5mfc6oss8rh3ndac3fkomutvjnvcp8eb0daxuioveuhf4di3tb7yocryqs5gbwlbfva78gt2pxbxwdnho0yennss4zo116szotkecdqv3lz0a6l952so90y5gcf0\",\n  \"is-disposable\" : true,\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43bbba00-eba6-3ee9-a00f-dd44d3b288d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntax-error", "domain", "domain-error", "is-freemail", "email", "is-disposable", "typos-fixed", "is-personal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "ebc6978b-8977-3278-9a62-930ec7269457",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "zec2v"
        },
        "from-value" : {
          "equalTo" : "k0e9pcg38y0cw6ldci65qzsaex4e0r4403u3fgwnzt4evhce9mr3832fmodjocy1yq06ntxnw8qv5fpsow6grzvrud5ox3j04ba6dncuw0uti7pnjeokl10vfv2p0e9z9j50dv0dajcuexe2q5lw8scakkqq"
        },
        "from-type" : {
          "equalTo" : "8yg2es816vc8nxkvw67a3ueqfel3kvb13ixiq6au1liaoxxzv40i1i7tkrppgq9nikaa5ybne1x5xkikgtmk7b1i9o16mxupquv7n4nq7ve9iqrjjywopqwbkwwiq2gr"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1796340250,\n  \"apiErrorMsg\" : \"syrowlkj1v4djtdda5cev093lhb18z74l8iqfa6qv2dsmr6it0ujyoy86xjdrbalrefis5jwb31eb6mwbjnn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebc6978b-8977-3278-9a62-930ec7269457",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "c3ed4b8b-eac6-3b30-a936-3e06e1005fdd",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "p6v6x44qlws51xvtsplqzx30vi94tqn8f6qt3e20gpthcc740ma1v3drni8ybokrqv116cx97ufdq89n3egeu3ejz7jy1o73af"
        },
        "from-value" : {
          "equalTo" : "nj5mdrdokhbu3cqodd8j6c8i6pvja4nlk6e5tw0uifo3t3xnamh"
        },
        "from-type" : {
          "equalTo" : "g2g8mnaoqfafb3zh37iz8046okljjvfaeg1"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 961669386,\n  \"apiErrorMsg\" : \"6s9z74p9nxsmtw674ugbb74vb0dhnom6m2n9y6eq8bx55sttgv9kl1lneuywl5xczgo0wedwntllpkck31jsdhrf2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3ed4b8b-eac6-3b30-a936-3e06e1005fdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "fee35887-6e05-30bc-9225-446a2d4b365a",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "eiwnji1fqjewxcbwqqpsqwmaln9p2o7yb2zhtbjeoqvuir0zb2tftb9p183cia7llcmpr98hox6kokkez0l"
        },
        "from-value" : {
          "equalTo" : "n0cusfa0w2r0ioqjpodm3xzn1b4rooys24s8nlev30v71drm3d9mtzykwcsmrsy0oypedwg1b11btgjhme1g409fli6p88rja89dvoxiz6n9xl3wj0tstrssomtzcvjn673ww4syr2996wzfgqegcehd6wy9rzwmtpnk1i7iyadijljqz"
        },
        "from-type" : {
          "equalTo" : "queh8n6wcq6b4z37yzzpur5ivudvit"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1414197,\n  \"apiErrorMsg\" : \"nmnviznw6d0b9mc8co8vos5sx37xv67w6sypk6xwn2kecxfqigb8o2g4mxfs5e8tlby47s2vg1ia9gurzux6jt6i6m0i64t88lvgusrcbp2gnq6k9bvw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fee35887-6e05-30bc-9225-446a2d4b365a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "03c5f14f-f759-3ff8-b200-95ce2cee12cc",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "9ym4focmkpzvxuygl7t3yea4yxt9pc7zmnlxe6xkc352"
        },
        "from-value" : {
          "equalTo" : "4tdx2ii14v9mdfgua1b90te6hgnhezfu1r"
        },
        "from-type" : {
          "equalTo" : "feh5lhktonk9l6jr2wfo0js38bamsccfy9nb4lfjgugoafpgqwf3rgg83cz64fp82km99424y1yy0duu4ei70n6j8if0nxwbrut0iswwx82g9hgkw1b4ycem20kfdi685rifyj60a8cez93qo64etv2znn09seacfsb89fyjsxz45qq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"f8ubsmorq3x00lqlv24yvm0y2mbtmpw8vnjjef3a1en3urhr8wksptwnmbesxqt0gxg759x2al3rb1h1mxubqiq5lwna0iqh2wci02wucbjwdlj2sn6otd3307vrzb\",\n  \"valid\" : true,\n  \"to-type\" : \"od2jr4eqckvcqr571lhdl1pz57w442pt0mtlqsrodjkumwplae5wkrrmubkjfphw2dyi6a3prlkaprtan374e0vq568nyp7gf4b5ngzl88y66lebdml3odsid6tou2kmf8ee\",\n  \"from-value\" : \"5rcxnczuw4gbtco5cre5i8ka2s07kjtgadflusl7uhs8yleejlebyyw83r21fkwlltd3komojctbczs337zh7tdgh2y2wzfomhu5tfkvoc1c1cspbfy9wp95h94vzhgxpizo9ti70mv6y2s3jlu47aenlbm4f0l9jfo07ec13\",\n  \"from-type\" : \"73n2cptwahbarbugdb2u4npi\",\n  \"result-float\" : 4.783021298964205E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03c5f14f-f759-3ff8-b200-95ce2cee12cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "from-type" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "from-value" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "result-float" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "to-type" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the conversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "from-value", "to-type", "from-type", "result-float" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "ac76d0b2-d09a-3f8d-ac1b-c999879aa76a",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 345778638,\n  \"apiErrorMsg\" : \"i05rrlzet2yjmd8hfy9t0qvjv4feylng3ol5r9yxer02fh9dgq642tpp7wk6nlzrpgga3w52zwu06qdlpy0gq6mbkf3zggf1i2d9w7dnqpn92020qomz94yyy3jht52z90ln6y21km7uoqav8fona8ha\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac76d0b2-d09a-3f8d-ac1b-c999879aa76a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "7f181aac-a495-3b60-827b-32ae68ca3e4d",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1541982966,\n  \"apiErrorMsg\" : \"z637it7ukw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f181aac-a495-3b60-827b-32ae68ca3e4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "babf0db0-3cfb-38e4-8221-bd2565f77a7a",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1004861410,\n  \"apiErrorMsg\" : \"66l7xisc1nkio3dofirntb1vdye84i2fuax7v719r8m07zfc40da95vtscloyopoo71tnxhm1psuag2e0ef5ys26s4bpa249gb8m10sws42kzol\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "babf0db0-3cfb-38e4-8221-bd2565f77a7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "1ea84d7c-08ce-32a5-ab0c-81c3d19fbb14",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exec-results\" : [ \"5opjx3cvveplfuo30vm5yyzth8m7313rcunebr7eaowtrbjx5cqxy5xwa50curei0rj1j135rzy7lbk3u5qlq3bksnmle510aafi8xwsb693jh3ty0k8yppqj3ceu8d1lhs4oiji9o2ec91h1opeyquuaddnoztgm2271kuw26\", \"tem186opai086cyawl3y0e41e\", \"p5fnuocnl06l7rmald3fw1g2kuobbq1n9wqk1rfvvjcryg2r2dl8yw39kdqc9sle0nhabqvi5n7zgdntbh9clnsd5v6ktlgnlcvcknedmcdtvb5y9j7yhkbn71x5nsmew5ds8k63b7519o4g34ysq1gj3iah\", \"75etpzj0jimur51amscmcicbxtmm9fdkdzeuywyg88urniu3mhy4a8flauvyhz1r7lzed9yypzsrn91e3wk8gd0v4igq9pcewy\", \"r13wz7c97id51pfotther4elfp71frilihinirfggb60kryikqqp5x7aohz90yo79crufjzh58yrs0ojwjbthqws877zpub3hmxks4y00gol2blejig6k\", \"entn081h8xc4e3x0ugktvqgkwcj2abkcvx0cyqq97jyqa4tiszkg3fmqgcpm6jh0cmr1rbg68l0ibdcpa3ixb1hy7tkek6ms7u8ik3svz3nb7ruaa78jtp3dac690o0j2o1cx6qp3llhldyldhkslh5jliqrnjfia54dkthfi7okanwx3fl72fbvg4o8xd3d7xv\", \"75lc7v8tzmmaktttzpumiqd74x6rrzee3l5pwlyx08pr3m3bgadm1xtnkuxcsgqf3kvbt1\", \"tipf2kigxe7bb0zc57onn8\" ],\n  \"security-details\" : { },\n  \"mime-type\" : \"j2nliljyno0dzc1nnovufs2lbj8chxbyxnvwfxdv9yvlhbr86qo\",\n  \"response-headers\" : { },\n  \"language-code\" : \"e457hsb86kcpeheii0dm84rpks0qm2999zkheg4kzuor763tsnl198lsera1l\",\n  \"load-time\" : 1.227463926847884E308,\n  \"server-ip\" : \"9680yo1\",\n  \"title\" : \"Corporis vitae voluptatem mollitia culpa sit tempora.\",\n  \"content\" : \"Sequi iste totam provident ut. Officia cumque mollitia illo illo aspernatur. Eligendi repellendus quidem. Qui aut iure. Tempora qui cum quos eos.\",\n  \"url\" : \"https://web.example.mocklab.io/361331\",\n  \"http-redirect-url\" : \"https://web.example.mocklab.io/068874\",\n  \"http-status-code\" : 549211518,\n  \"is-error\" : false,\n  \"error-message\" : \"Aperiam quam at reprehenderit voluptas eligendi. Dolorem veritatis accusantium. Sed possimus officia et quaerat beatae eos iure. Voluptatem et iusto placeat corrupti ut voluptas commodi.\",\n  \"is-secure\" : false,\n  \"elements\" : [ \"h8ibykow0dupf2esj8n1dtwwita2t5sd\" ],\n  \"http-status-message\" : \"Eaque inventore qui doloremque. Quibusdam possimus impedit vero. Nisi expedita eius vel beatae dolores ea impedit. Veniam officiis quasi.\",\n  \"is-http-ok\" : true,\n  \"is-http-redirect\" : true,\n  \"is-timeout\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ea84d7c-08ce-32a5-ab0c-81c3d19fbb14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "error-message" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "exec-results" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "http-redirect-url" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "http-status-code" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "is-error" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "is-http-ok" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "is-http-redirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "is-secure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mime-type" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "response-headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "security-details" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "server-ip" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mime-type", "title", "is-error", "is-timeout", "error-message", "http-status-code", "http-status-message", "is-http-ok", "is-http-redirect", "http-redirect-url", "server-ip", "load-time", "response-headers", "is-secure", "security-details", "elements", "exec-results", "language-code" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "6a55992d-b51d-3827-bfbd-d5c5e624f65f",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "e8ziy8d2eckd6xnifbhl1qj6c02m0q12r94uoy3zptmymzrax7ow7hbmlbv98rw0nhhm32ksdjftrtzepphqfgs7p03k0f88bqw7h19niud56n0772"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2049929292,\n  \"apiErrorMsg\" : \"949t3kp20nexcw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a55992d-b51d-3827-bfbd-d5c5e624f65f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "a3dbbeb7-e61c-36ec-a798-869717654cd2",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "9mayleqj9bp4zzapyyvrz9ua8ovdvd6g0lol4y2364k7cd1wj2o68rofvjmbe43bz5mt4ovjoq1tnzetifsad2dc2x9n29tnoi0xikd5p2qodxs853hihylfxby57gauaryz1wfrvjdelqddj2pjoqo2w08wk9qm9w4467jbw5yr8wfkkbnxc41wjd4h2g3acubwpg"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1210094391,\n  \"apiErrorMsg\" : \"yxxv9h6yye62m9ghhpf67xwvm3d5ft36e4evb51sto1yr80ckjb9l8hdhv36sakg8eia69kg2zjq9n8xskrl5x2nnbai0x71vi4kwk9lb0da8784u49mjvpxsmn0zrlolf1mym2ksbqy8ngvdvbh7v92fem7ln5vadd290i8u9wu5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3dbbeb7-e61c-36ec-a798-869717654cd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "0b99b390-0823-3fc8-bf17-22532d3fcdd2",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "4tjtbxhbolsrxv1k9e2r6v3zeo932j83myyw63q1n3wjbdqzle8v0b4o3v4szmaouyzw3mlig9advuxs2ewv921a5wjd0hs4gtcdjrt77zi1u97whsruf19a7btq6x3nvftj4xa7l8gsdrnad78h1rgkq47fat9sj"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1917545835,\n  \"apiErrorMsg\" : \"w6nk2nksx57eh5np6rsx0a812gtrjf44z62fqi2n0cus9kbobcxjvf4l95ywxfx4nxj8i9t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b99b390-0823-3fc8-bf17-22532d3fcdd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "72c902a7-f5e9-35df-bb3d-73bfe6ab9333",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "it7zajko3qxrdvqraqyhi57miish4jz2iz10062xgp6f1kxgfxkwa94gibh3glzosc993c8f3si8t4lcuoihwiz1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Antigua and Barbuda\",\n  \"country-code\" : \"bbbbi\",\n  \"card-brand\" : \"iutw9aw4k4iraxo2r2yqywoddgxa65fobh3y6k06zxrp6spklk0x6ugfjqvr37ds1biof46a4uurohpwm79tp0lh46sfrc85q7ik5l2sie7xs4zvhi6e\",\n  \"ip-blocklists\" : [ \"kwo81se5gpiie0grfcpohfj68fwkbcv47qlsxl0sjp2jg912cce6h2khv9j7brbb31zhe6a0b7ecrz4616rd2cwuvjgsveedl04\", \"09270ltr731u9ctet9kfcs1kqctiawtufy910r3qiny6hwz4fl50d2te0hhdkbi2i4lgn2ack6hi62nufspmwy8f0j8qtsapr121mwu7zohwg5h3va3f0o2\", \"dcuzjt2pgpsia8n8clv6q7c0w2z89tx1d0q9oa3sc6bpfc8exwq8ki2ox050glcn8vo8hlziz31d8u24vvdxggq5oksl99liesg\" ],\n  \"ip-city\" : \"North Hueport\",\n  \"ip-country-code3\" : \"13qhoifnzl3sb0o62kx21gge5bp1aqk9st8k25g1w0zrstl553s45ddam4drk9wxl7lzd8v3xtoegrg0tlhct82r89jkr30xtl292cjd6a9xvez4rsn98esy1ww3e5irh33211y68titk4g1e5\",\n  \"is-commercial\" : false,\n  \"ip-country\" : \"Andorra\",\n  \"bin-number\" : \"3wf1h8l3p8qu4njrlk\",\n  \"issuer\" : \"8bmnz5ojlt75ya8uggt82v\",\n  \"ip-region\" : \"gkwibvpxcmldpw703vmo3asjzrebp43jm9tty61w4e6hda69n6s112i32qujqs1ioa5aqtcmvz3x4er7fir4xhioyvltkljok29cko8ov5cqa83ltk89efz8yrjpegio4vsk8hm5upqf\",\n  \"issuer-website\" : \"9zx7sacm3yajh42xzlb\",\n  \"valid\" : false,\n  \"card-type\" : \"cf4fexbg18gclj1sz9vsyn16ta5se4ispjg0fhgqa80ehx08lpuig04h5200h\",\n  \"is-prepaid\" : false,\n  \"ip-blocklisted\" : true,\n  \"card-category\" : \"tm7jchmoqftwwcz6hc307xxjh2nbe9o9kzu7jx2igjsobxn85yntr8ma0vil5amlbbrfdom5dackuvnn1pjgsxcd\",\n  \"issuer-phone\" : \"933-909-1124 x288\",\n  \"currency-code\" : \"XAF\",\n  \"ip-matches-bin\" : false,\n  \"country-code3\" : \"geoghqd9outgzlp\",\n  \"ip-country-code\" : \"ttttz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72c902a7-f5e9-35df-bb3d-73bfe6ab9333",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "bin-number" : {
                "description" : "The BIN or IIN number",
                "type" : "string"
              },
              "card-brand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "card-category" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "card-type" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ip-blocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ip-blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip-city" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ip-country" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ip-country-code" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-country-code3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-matches-bin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ip-region" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "is-commercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "is-prepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuer-phone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuer-website" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ip-city", "ip-matches-bin", "card-type", "card-category", "ip-country-code", "ip-country", "issuer", "ip-blocklisted", "valid", "ip-blocklists", "issuer-website", "country-code", "ip-region", "card-brand", "issuer-phone", "country-code3", "currency-code", "ip-country-code3", "is-commercial", "is-prepaid", "bin-number" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "27a72688-3f75-390b-942c-a512b0aea077",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1875981857,\n  \"apiErrorMsg\" : \"8y9e7oc23ii53wiin9joadbti0gh16um48oagm5ugjnumj6tangjs4lmu2j2is013a3scbp019kt9tjtxwh4jo574kj00ldmcudq2jiyl4q2g0m14vptmhojg2n9kj5yr96i3i3j09wci31h4wq8ab8bgo9am4h8k6fmnsn0vge\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27a72688-3f75-390b-942c-a512b0aea077",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "1b2c0fe8-98fb-39f8-9179-5c78d015adf6",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 765178180,\n  \"apiErrorMsg\" : \"tzlq3mt7ixrox65i820nyza6y0cok4b79ba2vvhsozhaavc0czngry3mj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b2c0fe8-98fb-39f8-9179-5c78d015adf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "5eee28ff-5ede-3b69-a994-c31909a001b1",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2134793080,\n  \"apiErrorMsg\" : \"px1xzdgt2dl6kt3wk1wqvckbcjd52391dfop9x09vgnm3hucry4ztfbhcs9jt48l59ug0wnls8wcobiismq3yyo8gviawthxxe4oshqxvsr06c6lo6xg5tyhqdutfridhz9y03o965try0wmtoxo7kexwm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5eee28ff-5ede-3b69-a994-c31909a001b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "7770d62b-3089-370c-b07d-b7b6718db991",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"76nceqztfahmru91fxsxtmaspc1uwo1955l6bbssr5psiwh5h9ampa6yericng\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7770d62b-3089-370c-b07d-b7b6718db991",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "9ba4c0e7-13be-3426-bbb3-c934c2633f62",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1465656977,\n  \"apiErrorMsg\" : \"sfwcqgna9nmpo0s8z4ddw0xtj89ki5otjw1175d8kvx0n3j2vxydaob6bty29quanyiw35d8qehy3s444dc12oqofjaujx5aktnqo6jgy8ylwspnf5w90zpychcj0ct3ryrjsd8bszn2pzx1yb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ba4c0e7-13be-3426-bbb3-c934c2633f62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "31206d7b-a8b7-302f-820e-03a88bdd07b9",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1457478654,\n  \"apiErrorMsg\" : \"tz43iypuoctvmhug35kg9cmfsgf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31206d7b-a8b7-302f-820e-03a88bdd07b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "6cb4391a-bafa-39fc-b390-8d158ebd219b",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1312402713,\n  \"apiErrorMsg\" : \"rb90xvpdo8z75gm7hl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cb4391a-bafa-39fc-b390-8d158ebd219b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "0caa47a1-9bfa-3ff3-87fb-ff4dbb4c1fa7",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"censored-content\" : \"Ipsum aut ducimus fugiat qui consequatur. Tempora et aut. Quia ullam itaque et voluptate debitis dolorem. Velit cupiditate repellat voluptate temporibus saepe ex fugit.\",\n  \"is-bad\" : false,\n  \"bad-words-list\" : [ \"elvqz7l26ux665z1a5s1jhexoxp3g5uxbidvi0ikdj1j3okhy270l7uejpa4d7lmbxyu9rmpd7ld6ts1esyuxbr4bm99t4fahzp9r656ce4i8sk18ryzr3hka1pqwxb\", \"9ybp9qb38jywmabujs7867lt4ydx4po9lwwu4l8j6gg0qinnqm81opjahudmdqofk8jgdb1p6zka5f862ud86175sgqlek7xfcfewqyzi9mdbxyzkjaajeuzpg3h5eib5g4t5\", \"sjd2e66aezykxkx6q7b6re2mf0ike3qllqn8lppubzm3ccwcntnx8ywvied8p2wio8c916zs78i4vjz5sw969djgkzyjoa5p4d7335gdxmpag5q6\", \"haf7fi2hujyo2if6f6s80rut27c\", \"c8eeo189t1ymneal9sm19ia84zoxfugnefnkgyw10qmxnk26ejwrnoc0f30co999yq83kyu26kzyhagxmg0g3pr4g3r388zf9dp7hjrheaux\", \"ts27ezvjxsbh6ub3ld1srj61wp3fuot2we1yadacrmmhg60v0v794ywayidmnzad5k3xjd0y6l55uixfba94ew7o889ct8def2fc\" ],\n  \"bad-words-total\" : 1919575482\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0caa47a1-9bfa-3ff3-87fb-ff4dbb4c1fa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "bad-words-list" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "bad-words-total" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censored-content" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "is-bad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "bad-words-list", "bad-words-total", "censored-content", "is-bad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  } ]
}