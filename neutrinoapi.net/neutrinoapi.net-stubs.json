{
  "mappings" : [ {
    "id" : "c6a77a96-6468-4857-aebc-b01a40296ce6",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "jlu3b77rdwkuc3w5p4s8ccadx2daxn9lgppotmx1e0gwohixzngi5ulcxq3mow"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2124000658,\n  \"apiErrorMsg\" : \"z6dgiber3053o447a360pklm77as3cbwicnriawpnvn2nj4qal5rdt4c4st08grxkjcl4vj9bgd9qdwy6hohfm49fx2e6qr24ty9p6dgep9yx760vn2v5cdx4kvkqlxvvfqvaw9xts8bot90wu1yh793\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6a77a96-6468-4857-aebc-b01a40296ce6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.805098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4c112420-486c-4716-ae12-a9373441f10c",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "irsxw713b89rqki8wu5wqseh21dltpp100c1y53jhrwu4beiidkyv2fo0fdz3vbzozvzumjrr97gg5l99ks7qbe7v1wp2igdqbxpjh0hdpueue3b93djd8dd8s0al6ukc86nd2y0usdzjemv95fefu0bmg7v03l7cwq34xu5fdk61hpaa6"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1955195866,\n  \"apiErrorMsg\" : \"gkubzsfxjf7rmq84gvgj7wboefmp45eczyms943mg6yiyqz4lalpyn9wf7txb025u4dp748paxtdy5l9cvnuyriu81hwhmfi6001fe7jj3o536t76rmkkpnmxo0vq1k3zq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c112420-486c-4716-ae12-a9373441f10c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.804994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "099b2eb2-b2b0-492b-86ac-7ef324112222",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "netj0729cpve7fqvl46db3cns0lvuujdx37ai0zn8rpjibotln8rrugdbns6c93ioazl9m6zfb51xf1vyjxkg33wr6n014dxezv7wvv9xekz49dwetqydaie0mix2hg564x"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1151542002,\n  \"apiErrorMsg\" : \"9rx4vmy8rb7wqz3s8kqw2mwl92jys95p4sz6ognwx5wes1kig24i7sorcf5vblga49i5gbqkiqgfqdq83m831y6qn23wgufuj41qtwh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "099b2eb2-b2b0-492b-86ac-7ef324112222",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.804909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ff91355-b572-4bc5-bdfa-d5c7d72cfc43",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "814tw7npx9wju40tqoshb15z825ftwg4p15ghwr1oy5r9n6q1jx7yj3tybjtnnsdwzkdjohw6pc03mpj1xx6975a2pxt68dj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ff91355-b572-4bc5-bdfa-d5c7d72cfc43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.804828Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "904e08bf-46a6-41f8-aac8-137e74b88c5e",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F880371"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1582068557,\n  \"apiErrorMsg\" : \"k3fd3g3c46rbq0m7jmg8lviwx5s3uuffcb0drg3tabhwcykkllcqnhzfq0zwfhk99vpcciro12lp08c3uznk5sbqmn860b8yy0667bc8ze6xz2ucqbv6vgeoqld\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "904e08bf-46a6-41f8-aac8-137e74b88c5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.804745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c74288dc-78d3-4fb9-bfb8-7fce8775f271",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F588176"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1219252162,\n  \"apiErrorMsg\" : \"9fz0fbcxsvy9gwj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c74288dc-78d3-4fb9-bfb8-7fce8775f271",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.80462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "48899640-fce0-4a9e-b650-aeee350e61b1",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F815755"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1299695960,\n  \"apiErrorMsg\" : \"r89ljxdmae4mxis94aupm671j7ufx41ugyverrt7g5idc464feer7oli9ji1et1bvtqlnpm5ibuzr8low154mw6e1ji8hkq0e6qyz7w3pbbkgordewi6j1mgnh9vrqyr0smp2tfar2u05u7otr2v6llkrqgwkg7yyw6m9wjx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48899640-fce0-4a9e-b650-aeee350e61b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.804495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e8d765b0-5aaf-414a-b743-a2b3cfdfa50e",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F519437"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"http-redirect\" : true,\n  \"content-size\" : 671594365,\n  \"load-time\" : 2.0009768575328817E307,\n  \"content-encoding\" : \"2692gj7nsw9c9qszx83yrf0o6uad4fzs0tbnithaq8plxz3c42ol5nio8i38yy7b\",\n  \"server-ip\" : \"68qcuug8rtnxdznsb\",\n  \"title\" : \"Consectetur rem perspiciatis ut.\",\n  \"content\" : \"Eaque quas itaque eos eveniet iusto adipisci sed. Similique iusto aut id debitis. Quibusdam qui mollitia maxime adipisci et cupiditate consequuntur.\",\n  \"server-name\" : \"Mrs. Reed Wilkinson\",\n  \"valid\" : true,\n  \"http-ok\" : false,\n  \"server-country-code\" : \"iiiid\",\n  \"server-region\" : \"upu6ey\",\n  \"server-hostname\" : \"Kori Batz\",\n  \"content-type\" : \"15awyv8auxj8waqc2t52lz6fqvtx3rhpkc8ddupm6z9za23p1gpilp5l0hkblrrgwobxz57\",\n  \"is-timeout\" : true,\n  \"url-protocol\" : \"czpbymo78kowc7kxhc2ouj6jy99t9wlnsoqtwjcjzaotg0xi2ptiprdbh9e278sw2i8zz370m03e9s34\",\n  \"language-code\" : \"tme0zuti6gqmrf5k3mz191fbrahytdzqydk6bun8mbk3c8ei7uhbg0v05vmrfesxuro1i1paqy5acacvxf3fnlox91c0y2sgqk186gf1z5h27dn9kpk6p8g4zqmk1dfvx0ngojhmshbbkl0lkw9o0\",\n  \"query\" : { },\n  \"url-path\" : \"sb4tx1q72wj1zmzdob6s3kl5xd09n31exwe46o3k\",\n  \"http-status\" : 1735158729,\n  \"real\" : false,\n  \"url\" : \"https://web.example.mocklab.io/667869\",\n  \"is-error\" : false,\n  \"server-country\" : \"Lao People's Democratic Republic\",\n  \"server-city\" : \"West Burl\",\n  \"url-port\" : 1928953741,\n  \"http-status-message\" : 1459152322\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8d765b0-5aaf-414a-b743-a2b3cfdfa50e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.804342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "content-encoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "content-size" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "content-type" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "http-ok" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "http-redirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "http-status" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "is-error" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "server-city" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "server-country" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "server-country-code" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "server-hostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "server-ip" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "server-name" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "server-region" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "url-path" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "url-port" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "url-protocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "http-status-message", "server-region", "query", "server-name", "url-port", "server-country", "real", "server-city", "url-path", "url", "valid", "server-hostname", "load-time", "http-ok", "content-size", "http-status", "server-country-code", "content-encoding", "server-ip", "url-protocol", "content-type", "http-redirect", "content", "is-timeout", "title", "language-code", "is-error" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e7bede0f-e3e0-4257-baac-b46b5118e2ed",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "lucx2eqe74i0ok3i8obu68oj81wbefij740tn6ap4kp4zu19z7d9ucg7n0517ecqd0cs6q2uvnw4g4wopl0iony3inoid1tan2s4dfr23slmbww7p7py9zy4pvuuukppr1z"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1970737170,\n  \"apiErrorMsg\" : \"rdvqhcfbrvufa9uj7c1t0qtie5q9ed8kquatwb9d2rh1i8iao1bisi9p9aae1i9celn24uor3mg20f4ciz08q041i9kticdel7ippgfegimef2wijjemyr12s60kkmu9nk46fp4hk10eoiyoh3pkmkqkr94d1lmfu846tahun5wlm35e3s0ygytqbam\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7bede0f-e3e0-4257-baac-b46b5118e2ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.803455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b752e687-1642-4c1f-86b6-74b08246d085",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "kjumdhy8bic17xlr7m0btxstu0anjymqqlkqxiasvqh6jpqqkvu07e9u0bxjcurfelfpuq5nnw3gqjr60ovrkx0pf"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1577836417,\n  \"apiErrorMsg\" : \"fbpy9tf3vhwo5k9kh7f6c7w63qklj417pz7ndps66j12oswf2kqzjr65wij43csqfu8ds1xn26x26wzjlak2eggszwol\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b752e687-1642-4c1f-86b6-74b08246d085",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.803375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b6c60bef-b5e3-4213-990e-2fffa56bdcb4",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "nhcbl1h7u2mmjrb5izo4wi7ybox4hcd1jamuqp1r35er7c1cihm3iq6v46hs6clo8etupnv7qrs2aws72jnljt4iial84g"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 917577030,\n  \"apiErrorMsg\" : \"83y5chipo5m0d0q1kql0sg9nayaqpz1ulujba1jmv5we4s83if39qw8n11fb74bzuyzv6vwybrpozzkxz01a8xpxrc1bz2pzrs4jsfy7kkam1lpv5grlvpxsgglc4hjakk85ddpyqohg2bkmd05xr6ghs5dgfas6ou6rg289lbc2rwxec481vo5zbvb2rgxm1pqwq1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6c60bef-b5e3-4213-990e-2fffa56bdcb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.803295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a9f2f832-9997-463a-ba6f-11638e31d5d2",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "t1pjjheblsq47imv0k51o7h4531se9yh8cv0s3aam8xt243i1ms5mpmt623ohxwsvlcj07u4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device-model\" : \"nrxy5p9p7fdjxzzz7o8j00v3h3vvb5gyfublro5p6pl2qofhm3agmbbh348ao8nlrbqpagxbdzk2sa36q3tcmxvt3vmw7qsyt29lr9zxrovou7vs8nruvqly1reu9l\",\n  \"os\" : \"v5l8ifjzest8psxk0a0mbe2ti8qgs4xrpvz8umeakzohi95ikd1esj4coyvoqltskjgltilh2w6tajx2vgfj6zglu9rmyy2w59fx6z7e2hwpa7y0vfmbb5xa91xh2en5o6u72cckhhisg1fce2dg23wtxy0\",\n  \"device-brand\" : \"vp34bqtrbvl9aehdjgzoid\",\n  \"browser-release\" : \"6e71hhwpkd68i387yvbysslfk9qapwkm78hlas3wvqyy5y2b98z1ux4nsrdnyf2qv1ahiv5n1vgy4yzg0a5kqo11m3hvkmj8ukh7m49p86m8wh390oep3vmg2o2viyl1x6iwyhc2ea8joec6xi4sek0l4bsayt1zy\",\n  \"device-height-px\" : 5.320143228216646E307,\n  \"device-pixel-ratio\" : 1.7939951387936084E308,\n  \"os-family\" : \"ebbspnwbmveeq8p8ip4iihap40oomsflhyf336rvl4uny1nbwi9fp0d2vx4i0mq8g6hnxs4hxuzukaoi5xs2a24n0pgj2qdg7evjflymypnzvyj1jfngmi2d10c0nc\",\n  \"device-ppi\" : 1.7294133298111496E308,\n  \"device-price\" : 8.877621326302068E307,\n  \"type\" : \"5qa0xqn1utxieoux8l08gmnaruuq1dx9ofkxbtat5jiw8li17hmp8zwwyjp6btdrmff1ts1pqwwbgjbidxmpigq3je3t2hv\",\n  \"ua\" : \"l6sbffuo55gv3wpmzdsg1xgcfvgbkc4dvmu7l1ddnembb2fyq31leurtqlaufnmnk731iabptm5hagxu1sf4sk723bmsslu3z9c8eyu1avtpdihnhgor3f5d5s1fig118\",\n  \"os-version-major\" : \"yc69xqzyab77yf3303yvwj98dm1kft85dqq35305i0e8t6v89mrwduchvvyy6l8f9vxsr71q4iahqw2h235v9a06inh0iqjr71ue3k55904cal519ifweqx9xlx4zko4aue7loc7gj6fdx84cym7uiqvomekh7ynui185xp3dvcor\",\n  \"version\" : \"l4fh0v2a8ut2cmf5e95z15c2gx44r3rzrqaec0dp20jearo0ecadoanfx\",\n  \"version-major\" : \"oyqj7xbabdbcodbppwsmrxnmjpop3r0syln63mgg6q8pqj1065vu5lyfmi\",\n  \"browser-engine\" : \"oj0whfxa79a2y1s6e95ou9gtaxzoim7vlz7w0wy144beojixey2o6npz161tke1levrqyk\",\n  \"device-model-code\" : \"dgsl9716v0fotqsku8a8ej4f162brthm3fu1n04ak6dg46i1w33khgewnwsq8ka7ngligal6g4lij8vje7w3ooen9ky55vzfwwo06tbpq62b89at8gbh74qs0ps\",\n  \"device-release\" : \"fgs2kafp2dnzr7u6alojodtq28df2vct56lom23q69z24smdbot\",\n  \"os-version\" : \"44qxn2e11hvvc22me5grxuxlmfdul7dz5szb4s4lh1g418uo6xvnje9269v7j46ghgwuve2gxr66meqey83adzign0p8rk30ny92yf4qgzs33k493xtxh164luol91ujfghv3c2ga4297u3s7hgxlh36cwnutl97p385vfgy4bq109e\",\n  \"name\" : \"Libby Shields\",\n  \"device-resolution\" : \"zhmdkk6gdj8m6gf3w5djmg0b9i9kntpd0nr8hozvjkltheeogcco4h5qbop0fbompskm1wt323k7qcawnm8upf50chox363mzvheie4lb3gdm6hqx27lbu3my168g4mjy53worvjy1hupghqjcx5vi4bgp7ttbh7fslaw7vjv48fydn8btwtrj9nl9\",\n  \"is-webview\" : false,\n  \"device-width-px\" : 7.765748767448771E307,\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9f2f832-9997-463a-ba6f-11638e31d5d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.803199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "browser-engine" : {
                "description" : "If the client is a web browser which underlying browser engine does it use",
                "type" : "string"
              },
              "browser-release" : {
                "description" : "If the client is a web browser which year was this browser version released",
                "type" : "string"
              },
              "device-brand" : {
                "description" : "The device brand / manufacturer",
                "type" : "string"
              },
              "device-height-px" : {
                "description" : "The device display height in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "device-model" : {
                "description" : "The device model",
                "type" : "string"
              },
              "device-model-code" : {
                "description" : "The device model code",
                "type" : "string"
              },
              "device-pixel-ratio" : {
                "description" : "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
                "format" : "double",
                "type" : "number"
              },
              "device-ppi" : {
                "description" : "The device display PPI (pixels per inch)",
                "format" : "double",
                "type" : "number"
              },
              "device-price" : {
                "description" : "The average device price on release in USD",
                "format" : "double",
                "type" : "number"
              },
              "device-release" : {
                "description" : "The year when this device model was released",
                "type" : "string"
              },
              "device-resolution" : {
                "description" : "The device display resolution in physical pixels (e.g. 720x1280)",
                "type" : "string"
              },
              "device-width-px" : {
                "description" : "The device display width in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "is-mobile" : {
                "description" : "Is this a mobile device (e.g. a phone or tablet)",
                "type" : "boolean"
              },
              "is-webview" : {
                "description" : "Is this a WebView / embedded software client",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The client software name",
                "type" : "string"
              },
              "os" : {
                "description" : "The full operating system name",
                "type" : "string"
              },
              "os-family" : {
                "description" : "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
                "type" : "string"
              },
              "os-version" : {
                "description" : "The operating system full version",
                "type" : "string"
              },
              "os-version-major" : {
                "description" : "The operating system major version",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "ua" : {
                "description" : "The user agent string",
                "type" : "string"
              },
              "version" : {
                "description" : "The client software full version",
                "type" : "string"
              },
              "version-major" : {
                "description" : "The client software major version",
                "type" : "string"
              }
            },
            "required" : [ "ua", "type", "name", "version", "version-major", "browser-engine", "browser-release", "os", "os-family", "os-version", "os-version-major", "is-mobile", "is-webview", "device-brand", "device-model", "device-model-code", "device-release", "device-price", "device-resolution", "device-ppi", "device-pixel-ratio", "device-width-px", "device-height-px" ],
            "title" : "UALookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3a41a0bf-be72-43f0-9152-5debee530e9e",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2086200901,\n  \"apiErrorMsg\" : \"pumfhkpbovgh06ip16ocwqie\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a41a0bf-be72-43f0-9152-5debee530e9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "583d05e9-08a5-4c36-8667-aaea8d24bdcc",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1947262417,\n  \"apiErrorMsg\" : \"eicxcek2pdmmi4hqa4f5n0fmn7q07qabyqrl2e7vsg930ij3pp8oaq5xz5cef73pugjck3ldhaychxb33akgdfnve5qnoih8bqx6ktw5b4aljn3q7g09qf9hwqwd98nnw9g3gc2abyguaz6ypbgf633vapn5xa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "583d05e9-08a5-4c36-8667-aaea8d24bdcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.80255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b371b5a7-d464-4624-beea-091591250d1c",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 999891975,\n  \"apiErrorMsg\" : \"x3wdhdy8ol4bwis5l3fcvgh7h5ij363tu880048lma7tcq928iumvn6hij4y4o0yhscqacirwbjjr32xhbc1pm2kx72sjbopj7c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b371b5a7-d464-4624-beea-091591250d1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "878105ab-3269-4d4b-add0-9696ec8095db",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"evwdpjawt9svlxqmz604o1ryd1fkl0c50fvs5p2p066nynh5ep4b2i6y79jo6qxjtz9ei2i9iyzd1iyj6157y90brrd6zbifgxatznv8wf379hwhdyq01khw3311sqzw0u5vpn59o36kvp\",\n  \"sent\" : false,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "878105ab-3269-4d4b-add0-9696ec8095db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "number-valid", "security-code", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1f9a4c07-c01e-4bcf-a1ef-9f453bd3f7d5",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 260440608,\n  \"apiErrorMsg\" : \"4vvsexjdi4mhtepf381wghmqxo58a0axbb0jg79026lzg2ahvo94q9q69yjbwur8805kkfvdnxucqfkb779fs12iv4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f9a4c07-c01e-4bcf-a1ef-9f453bd3f7d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae6aa62d-eaf6-4909-966e-f6f1b6053bfb",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 963356449,\n  \"apiErrorMsg\" : \"4g7s6gb0tztb42g45j2gohdpv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae6aa62d-eaf6-4909-966e-f6f1b6053bfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e2c0acc5-d8c1-4e44-a975-d6d6303e6316",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1301488906,\n  \"apiErrorMsg\" : \"he15r08ear4boo7e78rtf7d4ahmcnukoye425elw1am6tw4dd25mz8x1qx3c7820xejom3ql8jra6o6o3exmd6vcb07p6nqvib8u5kai55e4zgijhdqcvywf6u1xidmkq1iyzv3meph7vlijzul6qu61m9il\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2c0acc5-d8c1-4e44-a975-d6d6303e6316",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b2362f4-72ff-453f-baf9-2b348e7eaea7",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"56xgqgs1r3g44b3wjg5id73rldfrxqn5alea8u2wubtocfzsuaq3ayweby26gul4cyl00gvpc95lbo9rp0nrf7g6lbkm5s8f19qm3px886j7itb5w4s0sqtmpxzmkehordvfsntugq4tdk3u3swmvrh2m7208iu3ge2gkszpvbf4fjmeaser5m9y\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b2362f4-72ff-453f-baf9-2b348e7eaea7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "dfdb0425-f1f9-4901-87f5-0f6c0c689528",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2077513177,\n  \"apiErrorMsg\" : \"f9tdu50i9ewy798tj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfdb0425-f1f9-4901-87f5-0f6c0c689528",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ace9cc1a-231c-40be-8d51-fc9022a57ebe",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1956268319,\n  \"apiErrorMsg\" : \"3iur1uyd484ibp5unguiqod15l7da36zmfeun1ngmktzgpxkuew375fetedwlf9a1frlouqkduacoljd372dwjrdcnd4wrbfsskb7uhf1nqdooygd5dwmxa57xq75lknvj64wrkdf34bvibvqqowscnzwc4kbptyyjyk40xzluak9v2icbrpezv2krbv7ta\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ace9cc1a-231c-40be-8d51-fc9022a57ebe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.80206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84f446e9-4e2d-48c4-a9b6-00f8e4845ff1",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1298554374,\n  \"apiErrorMsg\" : \"kccghu1krj37nwcil9e3vrg0frbwfxi5c6eryueb7i7z9jqr3l6wsrs1p7a0tt9z8ppr9bh62z9ppupafxysxs47cf6wwcg3xa35xrjxi7jtvyrdyfioikc8nvmdaaua33i0ba43418c3jdgg8qcl19upb4fdbw825c9ue6ibx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84f446e9-4e2d-48c4-a9b6-00f8e4845ff1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.802001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e54bd232-1750-40b9-b21a-2645b8b61f07",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"1qsgtwylmg9py3o5rdrfbuatkr6tlz3pdkwjmbn57lo0r8tyo3kq7qpovh026br3hvkvj49s4jmw5dcbs3p0yefvc3irquzjxhmfl0dpfxdxke\",\n  \"calling\" : false,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e54bd232-1750-40b9-b21a-2645b8b61f07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.80194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "calling", "security-code" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee5ac7d2-1b70-41d4-a3b1-43ae6ec6af27",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "rppx75fubuf5i9ragtemd6845pflc18hvhdgmt5wlzzfubluk2k52o3zkp5jjk"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 868925769,\n  \"apiErrorMsg\" : \"qqa9ivs42t0j4cnkc6whtcezxsoerfewgwwwr0kv2lslbxt33lux37v7gdjhpzwkk7bd6lqdmznr01conlrhfl18thyercttwfndalhd13j3jbr6v9rhs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee5ac7d2-1b70-41d4-a3b1-43ae6ec6af27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "03c63141-9938-4004-9c06-43ae3dc35416",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "2hhknxdw64pvvvdfkbiomvt1khtxoswp0h6p9trg6jrcf39bpyllv1nzctwek5c56x3vi6yxnu580emc9vpuzunw4wmqojf8frv319cqa28jnn8yu9u65g9q6uao7mhupua1wye3xiak00qax44ethcbrud62d97vbxkzp0g9f1gqsue7lwap7h6cw5dh28"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 200740995,\n  \"apiErrorMsg\" : \"0k5aeuhsji3naovircgemwpltit9gfshwaixirulbzosj1xmlsgvud57bw98yu1aukqmntqxc3o1fca7nr04ds9212ymt8rt8cvg5p4djw7ndy223p3kvwnsv8o68tv4n6as8u5lwgd8dem12av05akgkab\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03c63141-9938-4004-9c06-43ae3dc35416",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d94fdd93-5b83-4018-ae7e-1d1e37e16df1",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "088a9oo0b6chqbnycokp6o6p1bk3c55i8yk9o6c1u4ujmk4dz6l4sfyd2id17c9ju0n2rzc9d9kildbeijn26i9ssatuy7x1vttfbln98ouv2k1ldreny10fwi6v6gtv7z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1882398998,\n  \"apiErrorMsg\" : \"spc8mqe90ktg1sdi3wct3gj8vm7m20e3ekjzsyvvr6i5ro\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d94fdd93-5b83-4018-ae7e-1d1e37e16df1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "12be378e-2d8e-4e2f-95b9-8a5e862f3d3b",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "7nf3ibrq5ub32flz08ocp9s32bywd6poopgv9pxiulz3r9h9u5iryqet5sz2gm2piwcikmgy83jgt97as"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"country\" : \"Liechtenstein\",\n  \"country-code\" : \"bbbbr\",\n  \"prefix-network\" : \"frzdjz5wx8yzl6b72lwuhtbtg3ru2piszghb97g0l7ltjh1pc02jqa1anv7iwlkh1e8li755c8rfx6fi2v3y4eeajr8kz8u\",\n  \"international-number\" : \"k107lqs0bjyoe1nhf6uxqxo0dcojwedbbljc38rm5v81c4f1i2eoi1hcxct783emm15iz305p820i8q4fsj7kjhlx3cvico2yu9mbflvm23mweneno0d29dhpmp09hpbirxshfwrwy07yfyqh7\",\n  \"location\" : \"mt9dbin9l0uflxae6alqnatullyqqzrgvfd444kl1xmu6fbv80rp3h89r7cajs72zy14d2uv3v7ik8f7jow765fx1le7z6nymkbcjpuhx5nzbkdk1y3vjidahegub6ww\",\n  \"local-number\" : \"883qteybg1o2zgxa5hmrvlb0431npxk08cbv165fjhsq9q9n87uk160k90esir3vydwkexa5o3aum4wv202e8h1h7pjg4wzgezn1vlgx\",\n  \"currency-code\" : \"XDR\",\n  \"type\" : \"11s9dv9vfjzw9vonj2d16upi82qpn90wdy4t8d0be611w0vmlsxx853r6ic0qvybecaqmaimxohfcz1sbzkvbypgqq\",\n  \"international-calling-code\" : \"ln89lj7h7p1v0y5v578l7ynhui4b6d8ljtwfgiy4qqirbzirpn0ntvbrqaopj07m6fasyq2r8deziihh59o0dc8gbtme\",\n  \"country-code3\" : \"75xrxklzrqrjzn53h6l\",\n  \"is-mobile\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12be378e-2d8e-4e2f-95b9-8a5e862f3d3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefix-network" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "international-calling-code", "country-code", "location", "is-mobile", "type", "international-number", "local-number", "country", "country-code3", "currency-code", "prefix-network" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1390dc0e-dab9-4022-a0e1-a5b80d1a989e",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1205892556,\n  \"apiErrorMsg\" : \"hvkl6du49o8u3gds88o47nucay0m63dikak674e7q9by1c4e034yotb8z3lb3yoa3yy9th51k0k6irjcuhgoh2e0m0jq8x9vovln5s0tdpbstpbuomzetuuxnep1yxlywlteqnv4m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1390dc0e-dab9-4022-a0e1-a5b80d1a989e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d790fbc5-1a09-4768-b5ee-8a49579bfbac",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1908360444,\n  \"apiErrorMsg\" : \"9liirq9xbwvp5nj1zk82aqfrntqjqjycyyzn1y45zg0h3px7ympx38ih0kn84g0mjdhamm8pfavwhfd3qj0xmg8hkn5akg7k323n4v5es3wx4nbgkcmcrienvfy4z41h30deljfblbeqozniyxy4im2wbb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d790fbc5-1a09-4768-b5ee-8a49579bfbac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8639bea7-26fb-4808-a180-d151985cbedc",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 374053867,\n  \"apiErrorMsg\" : \"2qguw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8639bea7-26fb-4808-a180-d151985cbedc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "134a9918-c712-4b42-a2d0-248828051663",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"calling\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "134a9918-c712-4b42-a2d0-248828051663",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "number-valid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e6749e8a-0ffa-4205-8188-96231fc631b1",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "6j6hgfan1apkgb7wwu5mwk11ycguc2xmlp25axe75ru6oi6sbyrtjs2a7aom9hamb54lgcthhve1"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1442288715,\n  \"apiErrorMsg\" : \"q1ixzsv1bdhsj5wr0o86mm2mnwfrtpjxn93i7kojos1cnxbzey418lo05ld8ho71vfvb4aypmc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6749e8a-0ffa-4205-8188-96231fc631b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.801021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5a3e7f69-ac1e-40b9-94d3-9fc43e3208e2",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "xftjick1c5smtfnikh3zy0pmtr67v2vcwhb0x9t2h1s0yoqbhrcd0skeg9yjng56ogirm6uhgl55ig4yl7svppddk6l67jzkl"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1588544491,\n  \"apiErrorMsg\" : \"p1nhwr0enwy4u5vkyhiaj2pitn8dbcj0f6grzaz97lfrma7rcklmt0uh97bvgcwcuo8b37woigpltz17r669tpjzmek\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a3e7f69-ac1e-40b9-94d3-9fc43e3208e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.800944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "978586b8-5350-4bcc-af7a-a6843ce74ff1",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "1ghmyt3dq1zpv9bop5c5kucgqp3da36tgn57v9gzyrlsb94m3bj8jsldr8bgdir29mtutefnw4820t5k4x088anu8byn82ghfbgs65kzxnrwhnouo6nhe3otlbb05bvv7uzsjtfx48bt77zww33uv8icfizvq5busdqiow8bhjcmibxqcex3mhcllf"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1371614448,\n  \"apiErrorMsg\" : \"s6bn18l4i9fzd97zq6s7dkm1p7sm9kbfyuz343bl6a6g5b92x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "978586b8-5350-4bcc-af7a-a6843ce74ff1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.800865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65b9eade-7b77-4ecf-9263-37ee44445316",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "mcxgp"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"vawc0x1aj0ud0uw23fgkc8b2syrwj0dmcjtm7go6vu97z1ge4vlka1s95hm5y8mk97r0q03mpjhp42t6o78tr432c5b5y3ngv8gqe4u8wnakv1ratzstva0i7io5yivtycthntqgc6nhxwa6mner3bf0y\",\n  \"country\" : \"Hungary\",\n  \"country-code\" : \"ddddm\",\n  \"provider-domain\" : \"p5f734i8ltuq1y7xpsslht2fu0aat7wwcz4m0lpk1qx6at9nt413jk8ocnuuel314ryl4nq8ewd0w\",\n  \"city\" : \"Charlieside\",\n  \"vpn-domain\" : \"94vxezitc9l6k4epmag5apuowm67rp554z58j289m32a64714xkrpun2bkexf5gyroka4qteio3idf2ktmzayqo4dmnserpoaw9gzkr1jtdaibpd07eiuxx9unl9qwuuybnvuyc1qmf2pyyxx8hz542tv9z995xhe5ruiyu3iq29q7jj1vbt7\",\n  \"is-vpn\" : false,\n  \"as-cidr\" : \"ry1snslak5wbj74j76ubgxvbjn8ggv6f04hdqq5muuh3gc5onoxzyad4lbcmtx83xn8ksjgwd5qcqxezio1cqsz99yfmhuc3a2l3jon40uz81fvma\",\n  \"valid\" : true,\n  \"provider-type\" : \"hwdet03c3ux4pp\",\n  \"hostname\" : \"Charles Metz\",\n  \"as-age\" : 119940913,\n  \"continent-code\" : \"arupwbuzp73xyoajzwa6yg3u65tgtf762dfkj0zv0nu9ak1ovp87hnl7ewkk44qsi589k7qm32a4htv341ghl8n8hgeocytjifdc751fbpnarmduzjzi1l6mbmvo5em7acdwdrtuf8xfgzepgwvnd310zuv2rgpo98qz8fcn8t3ahnbyi\",\n  \"is-bogon\" : true,\n  \"ip\" : \"kgdbl61q5i0t2arxqnnpew1vtq40k1rlmbjbfyubhwm801hlkayau0mnkbp4dr4xp6w5ti\",\n  \"as-country-code\" : \"nnnng\",\n  \"provider-description\" : \"Deleniti nam eius natus illum odio ipsa. Saepe est earum aut ut. Vel quia et et dolores consequatur consequatur adipisci.\",\n  \"as-country-code3\" : \"ysqrqri8yg7u8dbvjgnwul8sk8ezezui0juotb5b1dldt6rv21lhn0o85ur0hdgdpowqd9u98q9abl8n1ngxq5k5nqwmuewe4bh0rwy2bm5l1a0n69znamdrgobfm0amz1wndr1iv9o9kxdjknz8r9q7r6vb5x5w\",\n  \"is-v4-mapped\" : false,\n  \"is-isp\" : false,\n  \"as-description\" : \"Eveniet dignissimos eum. Est quaerat dignissimos optio tempore quaerat tempore. Cumque voluptatum dolores maxime est veniam. Nam cupiditate explicabo et sed architecto. Molestiae et iusto aliquid.\",\n  \"provider-website\" : \"0w9hetm2u5krn1mvfcxujjn04zguj6jmcm9i8zqyc6xfi7q1ekjp6uh0s1lj92nbp0dmc1ud42bqt63m9df0mgbw1ixuqs9ra2fhhf1k23qm8qw9q0b4vzgm111noeqwkjlj8dfilt0df2e3uh915hx10aih1r5h3s18y0x72348qoz20rfipp8h\",\n  \"is-hosting\" : false,\n  \"as-domains\" : [ \"sle4fef770r7j8verz5zqsnl\" ],\n  \"host-domain\" : \"zf22hyt8dwytxc8qk5ec9o6nt5r\",\n  \"is-proxy\" : false,\n  \"currency-code\" : \"SAR\",\n  \"region\" : \"j448r640ks3gu5ntv2y5nu3ukqzpuc3c0deqhivnydbplplp6ajma5rnppzw37ytnizfjfjkz7t2gnxz\",\n  \"asn\" : \"z54ynenymbpoig97tcwp4yyfsr3g9lszcjtz9ou2z2newj9t0mz5tgejgr50d5wlyej1ifjj0fj2q0i4hb12f6qqsezkltivwia01\",\n  \"country-code3\" : \"9rnat61x86ojiv9cnfviorw0orox87jooldqa61qqh0sx4jswpnul82pw8advrwmosr3ggn3x\",\n  \"is-v6\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65b9eade-7b77-4ecf-9263-37ee44445316",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.800771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "as-age" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "as-cidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "as-country-code" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "as-country-code3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "as-description" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "as-domains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-hosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-isp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "provider-description" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "provider-domain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "provider-type" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "provider-website" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpn-domain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "provider-type", "country-code", "hostname", "provider-domain", "city", "provider-website", "ip", "region", "provider-description", "continent-code", "is-hosting", "is-isp", "country-code3", "currency-code", "is-vpn", "is-proxy", "asn", "as-cidr", "as-country-code", "as-country-code3", "as-domains", "as-description", "as-age", "host-domain", "vpn-domain", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4bb26199-46b4-4017-bec4-3cea32c0b4b2",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "0e3erlpcav9bcseglqilrklnqydtv2xkfd36wboq8lcxxvcra5txqcekwyqsurzmq7ffut5xjb8qifl1cqap1c00cbl3qrrhkjezi1h0mk1lfjla4zhhs1a9zeswbg8puxq49t7w21akircjdoit4whyh6i523v3cf1w2rjbn5t5pnn3su1lnvsvubefx5"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 899106570,\n  \"apiErrorMsg\" : \"ecinai3ghk0lhl61m6h7m3y9pruqlflrgevdmgulfr60dma2jcjnghwujucu5i1lmiibx6wp22at6szjhjxhdxbfras5r13\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bb26199-46b4-4017-bec4-3cea32c0b4b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.799946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8d173e8c-e8fc-47e5-85c4-f81b81ff38c3",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "mw2mqy62a8i0111ji69byyrxcxe8dvv"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1188645745,\n  \"apiErrorMsg\" : \"h0zjlijzh14zk0d0yq3ytwsmhhnj8pvsajywcnua8c1jpoybq8sfivuel44reo6nkyq58xc6ykrks933p9zit5pl6p833hyv55msojxlgkiw187jsrl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d173e8c-e8fc-47e5-85c4-f81b81ff38c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.799865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3112060b-6014-4c9b-bd64-58f98159ded7",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "qec5irawaqy2wyhkimd2w2jcaqyxba5snh9co69cckn8jqw25dz9q6eqykm8k07u6ttzsfalfc7s8h"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 957774882,\n  \"apiErrorMsg\" : \"40va408372n7v9eeo9hy64qbws\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3112060b-6014-4c9b-bd64-58f98159ded7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.799789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "964348fc-3c6e-467e-bccb-d84662f9cb6e",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "5jd57dyz46qa29cbbok31x2lrfnlq78h66a1ds00y4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"su1azpmppscm4hrs8zei1sdwrqes116cvzx\",\n  \"country\" : \"Botswana\",\n  \"country-code\" : \"bbbbd\",\n  \"city\" : \"West Evelynntown\",\n  \"timezone\" : { },\n  \"ip\" : \"1nxwgb2xf2uuhha9ykxdoe2r\",\n  \"latitude\" : 6.245956385208016E307,\n  \"valid\" : true,\n  \"is-v4-mapped\" : true,\n  \"hostname\" : \"Nicolas Maggio\",\n  \"continent-code\" : \"w9ouyjul84c5fjkg02ia8anywdy75d3mdmk9acouo3rah06h9xc81wdfosjtxu1pgwhz4cysu8cav5t8ducfgbtrtv3d5ke9zqu777222qtnnqaxhaq2krsyqyfua4spvcn67xu2o6kud61lzo3ue8q870etv2pdpvw8xai0tzw6mbda4\",\n  \"host-domain\" : \"hd8r63w4d5naqbj8aq03m0v4\",\n  \"currency-code\" : \"ALL\",\n  \"region\" : \"hxw7hdeoxhfjf\",\n  \"is-bogon\" : false,\n  \"country-code3\" : \"6nx1yrdmz2fu9euiz3u6kohsc6xvlosibetws92pqdzv6zrka3klnhtot3ru9bsb4rojurrn6mly6qc6faba66wl5ik4tu06am8ra6co8vjx36fjnxoxbcxephgi5lbzd33jqqi3bmquzoo8hpb\",\n  \"is-v6\" : true,\n  \"longitude\" : 7.194032358137461E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "964348fc-3c6e-467e-bccb-d84662f9cb6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.799703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "country-code", "latitude", "region", "longitude", "continent-code", "ip", "country-code3", "currency-code", "host-domain", "timezone", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "48f95a78-4dbb-49a2-bf36-a03db8f8bdf5",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 340533907,\n  \"apiErrorMsg\" : \"hbg90xdm3tgn5vbern5ntvsf0dmtjdpltddpj1y4npsmuig7g4klynix829q1d578vjyt2a2dj437zpfr9hdlvtdgn0y9l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48f95a78-4dbb-49a2-bf36-a03db8f8bdf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.799163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "81435762-2183-44e9-b270-d2b0b7618e1b",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 314312593,\n  \"apiErrorMsg\" : \"f46grkk42mksst2ug4dtk539euorcwrfco1yf8b183b0lbewl0p8puuz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81435762-2183-44e9-b270-d2b0b7618e1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.799094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8cc41254-be18-4695-9d09-0bc43c2927c9",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1551554864,\n  \"apiErrorMsg\" : \"1gihchpds8sbgddqrz901p91txnmeompebt1o9cs6t89n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8cc41254-be18-4695-9d09-0bc43c2927c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.799033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "02c64d39-c495-41f8-8bbe-d484dff9f7ed",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"s8zu5691gmeru8dckz\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02c64d39-c495-41f8-8bbe-d484dff9f7ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.798978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "5e0f5119-5896-4931-9033-5633457337aa",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "f4byw09dcyqj2958na6oshy9zz2v39rn8qjapk5e4ljo84tpax6v63r3itge1xopqih241ssmzz7oegtshgxk5tjxy8hcr7d5jmmtta52jb2r"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2135470481,\n  \"apiErrorMsg\" : \"2zna2dm5rzfozcnsjfank90834yg3382ghearckfdq7uu6mj0h9v5t2h6s6q4iqkp4fmpx7z3nki7r016r6h983hrcv02upml144vg8rov8rzv85kojn4ok\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e0f5119-5896-4931-9033-5633457337aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.798929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7a2c8ead-70e9-4b71-b176-0a4d590d7543",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "ob4gjkcbzc7n0z2g08b34xhokffrgzsfux8r8d75j0ev25zksa9phhduwtx9eefyvcnsq598r9tsqodf3zl7gzykabtdshx1o8g5khuhttr0aj70n7lv929xbd"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 228573571,\n  \"apiErrorMsg\" : \"4pxizpqq6h85s6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a2c8ead-70e9-4b71-b176-0a4d590d7543",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.798848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e38ea0de-ba73-4ea2-bc6a-636fa2b0722a",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "5w3o8cc47nc4in3ph2isvo13y1zbqg318ic8v4htkbz3fm8mmvk21h3036b8gjszgk1pdexkd1kboopxpw6qvku5i62sksq1cn7qld0vwiyk80uyqfppu3qcpfssl4mij0yfota78siv8iqtudvx6ufejg2zlikorl1km7jwp4"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1889769974,\n  \"apiErrorMsg\" : \"n5dhwpdo3hgkmko8jkyewoz3dmief7rdep1s60g6gqsss4v56xro6ldspg7anrf5301r2lpo0er8o8iv3j3wscc8n4v8wcptj51hjyu7guztijo1zky2h74pu4w0svi8y5zv4t6p3ska2fn50fjxsr9dqmwnx00uar18jmubh68k0u7y61zpzsfv8hbxtqprlz71iz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e38ea0de-ba73-4ea2-bc6a-636fa2b0722a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.798766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "df88a52a-d694-456d-8b4a-21553281b10b",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "xdnvbpuhdqnoyskt8awwzd3rx19n257cg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is-hijacked\" : true,\n  \"is-spider\" : true,\n  \"is-dshield\" : true,\n  \"is-tor\" : false,\n  \"is-vpn\" : false,\n  \"ip\" : \"pilgmycglnbomqbtw8s5rhi4zw04evs025kkcjfjl5927olhxppk9zckrmg0fgr3wdccw8ao380kn5xjipos3nt3c77xtyh6j6\",\n  \"is-spyware\" : true,\n  \"blocklists\" : [ \"0fp9x7cz8kup1spsnrkm22ameffunhdauqmbi46e3pdcw1q74i3vwwc2gj46824l2an390vhy81pbbvfpg73entw8awdi6db4mssj70nkh1sdly3ewp\", \"io0oihm93f4mmxwkausc4xi4t5xigfkiyx5pcfmko180tf4g9y3a880jvbm1nbx2\", \"5dtibxbfdi6paicdiat2o0e49kn3jbwi26fj2gmniyh0lwszga8cghz1ylcrte00awnfr7p6jl6p73hcjm96bk5qcuebfz61has06sobshiyn1v0fwrk2zww9vsthf\", \"eyaklpdb2kivmuim7t14woq53wft3nyx76sowzwp79bb3cws2yvxyhw7cbmz9ni7eq7baqu82szow0mg1e14mg8jauz43stgaikj9m1b8s1u3q7o0w6swmrql5hrww3hor21n75uoqn4vuxempvn0zdzgnnq4h51j5bguh197x3\", \"6l35kxpovf4a8d6y5w9zfc2t6fvgtr88a1u4i61iig8gtc8pqc6nq0a9brx2k4z8oyiq7aja1cuvmltgfbyk2uvmw4vys1z2dpfwq22ky2maz69ucam8mqvuzk2pywg9zla64i40f6li20wzlsgpebnzm2hu9ulh4y2vgu3z6tx6evt7pimgnnisfrxb2f4\" ],\n  \"is-spam-bot\" : false,\n  \"last-seen\" : 773130017,\n  \"is-bot\" : false,\n  \"sensors\" : [ {\n    \"blocklist\" : \"ix6u983eur09pvo2u05bwejknljmm3hpi72b68pj3z1e8kohow3g8o70x80gand7nfbx6pzz3u7pz1pzh4p1ij8grwlhxdotxle4i\",\n    \"description\" : \"Doloremque earum consectetur eligendi aut. Officiis eos quis. Quaerat omnis nostrum sequi saepe consequatur aliquam. Sed aut qui voluptates vitae ullam est.\",\n    \"id\" : 877664539\n  }, {\n    \"blocklist\" : \"x3h0tcjmyr6zx9a727ky33lkpjmohsj291zhhh\",\n    \"description\" : \"Necessitatibus iusto sit amet suscipit. Numquam suscipit minus dolore quo laborum. Enim sit ea voluptas est occaecati. Beatae nulla repellat nam sunt exercitationem.\",\n    \"id\" : 143731618\n  } ],\n  \"list-count\" : 1727968916,\n  \"cidr\" : \"mh3gpogs5nlgj9fcu7dmxixcu82sdjgwzdk6yowitdgglhyugckpluggdtw8x8cgetef61q8s2jbc0lkp5lgja2k96yb45m2annmrhipqpndglf69xvpoqlex0drqcxxwfr0sy49i28f45j4\",\n  \"is-listed\" : false,\n  \"is-malware\" : true,\n  \"is-proxy\" : false,\n  \"is-exploit-bot\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df88a52a-d694-456d-8b4a-21553281b10b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.798674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklist categories this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "cidr" : {
                "description" : "The CIDR address for this listing (only set if the IP is listed)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
                "type" : "boolean"
              },
              "is-dshield" : {
                "description" : "IP has been flagged as a significant attack source by DShield (dshield.org)",
                "type" : "boolean"
              },
              "is-exploit-bot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "is-hijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "is-listed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "is-malware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "is-spam-bot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "is-spider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "is-spyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "is-tor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "last-seen" : {
                "description" : "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
                "format" : "int32",
                "type" : "integer"
              },
              "list-count" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which specific sensors detected the IP",
                "items" : {
                  "$ref" : "#/components/schemas/BlocklistSensor"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "is-bot", "is-exploit-bot", "is-malware", "is-spider", "is-dshield", "list-count", "is-proxy", "is-hijacked", "is-tor", "is-spyware", "is-spam-bot", "is-listed", "is-vpn", "last-seen", "blocklists", "sensors", "cidr" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0013dd66-83b4-4b2b-952b-02c15084124f",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1969314708,\n  \"apiErrorMsg\" : \"1efh25alsgdicbpfdxnlt225bgcr01dqcfro22ie5vsshhzblafktlvzbblu1xnbu8wg40pldv4l6eym6uicts1pmqyea7cqq32brsriy9ztcw6hocwrx2t7a9g7n0ziq224ktxzndkkt5243p6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0013dd66-83b4-4b2b-952b-02c15084124f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.798179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bd2fa978-8de2-47a7-a90a-c6dfebfe9fa5",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1237395876,\n  \"apiErrorMsg\" : \"lhsj02x0bk9iqtb1quvtbxjthoczxh2yitfvzwvhzmu0xwbn6v9uiy4z7ra34z8dnbx728h1ofaq7ak9hjkh9bci0zdsq31wzfly7yosu7isgk3g1rqxpw6rkkuck7vcg5jbyrbrlmcu1l0sf7dl4lo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd2fa978-8de2-47a7-a90a-c6dfebfe9fa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.79812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "44d58fda-daf7-43b5-b6d8-1e84a9fbc1b8",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1241572997,\n  \"apiErrorMsg\" : \"a1j3l34rtxgg0o5o2qrme72ho3p5xqor8d0z6o5xkphttg3o3so1cb7k26ky9826deq8zwb1kexr81rbaotpp4jb8xi784tnqe1e46bxwk7r49u3ynkd4pz8kv9jqad\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44d58fda-daf7-43b5-b6d8-1e84a9fbc1b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.798062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "85380345-57ef-4897-abdf-94db9b952221",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"ysi0oyquons04u0hzu5hls0eg8wid15ustrodugmz\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85380345-57ef-4897-abdf-94db9b952221",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.798006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "17011651-0534-460d-b9d8-8e6a195dfe8e",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 180177610,\n  \"apiErrorMsg\" : \"7ke2br\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17011651-0534-460d-b9d8-8e6a195dfe8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f0d1e954-59b1-4f5e-964a-75d93365802c",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1329584437,\n  \"apiErrorMsg\" : \"tk5mdbknz4segk8o95mzt677fxeds4ejm3yb7tnda9olimzuucc1syjlvp7vlh2i8jtyajwwyxfm3sokeieqnobsud51u5vcn9ur29s15nmquzhr4wfr5v4yo21rcglpm7hojj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0d1e954-59b1-4f5e-964a-75d93365802c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4cbb9a90-a6e2-49c4-87d9-d3346cc11fc6",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2009189354,\n  \"apiErrorMsg\" : \"oti4d26s4pgvm6iheonwyno19xdb92798kx7gmwlohhckltjlnf09g2hqypsd2eqjk7fkskwsclnncn0l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cbb9a90-a6e2-49c4-87d9-d3346cc11fc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "041965ef-a8a0-4c4a-bbaf-5b92cdfcec05",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"zu4vqm51c316ypc2jsb1aig6xg7hlje79885lmnvw8fs9rs0bhwd8\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "041965ef-a8a0-4c4a-bbaf-5b92cdfcec05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "5c55121a-b48b-40ea-b1c6-e2f6ba206d3b",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1580884321,\n  \"apiErrorMsg\" : \"l7n3saiq9fmezk3vhetlawvojcvw4a6ck4yj8ep2fdha38lh2yrcjbirmn4o1deitl5mwsihj2xesyp7ni4z752j8yo18ksuvk8bo49ftthxezxu3h5jk0an3y73m0rkidenchvo62zc57go\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c55121a-b48b-40ea-b1c6-e2f6ba206d3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6e5a3857-a2e6-458a-8cd3-c6f889bef3e8",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 134241267,\n  \"apiErrorMsg\" : \"cag70felb7ogxfmyuo4em9rghspyofqdbjiskso3tpd8evjyqdd20u8b5qi3hor0852xsz4ptcomgu9zx09tgjbcaoxuadwdnv4axyn3097cwmxe06qpuasg89gkteomfmgmpznhi08vg8u2q3mnqlweb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e5a3857-a2e6-458a-8cd3-c6f889bef3e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41453d96-8893-4f6c-8748-fcefec94f036",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1667710103,\n  \"apiErrorMsg\" : \"w87mcch90p83gdxjz6aywudoyoea9phex1mkfpxxmiaq3fh6pnkl7ihuaw7hqxumtgrdbdf7wd31mmshz81m7t9hqkdys4so3clurm6fdnm152pa9ldo79xokomys2y7ax0j1bn5tyf27bqnrw084ztefdcom\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41453d96-8893-4f6c-8748-fcefec94f036",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1c580627-8766-4683-bf0a-2cbe5764a114",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"bcmk9uneei70tpgyhslspn6ix6mdxue9sha2rn9c2quro11v61dpdssfx0abr5s0f3ssrnxa3b44tlqhrlae50vqlur99jcxya8ccms3bfxkl5ao6s2e41rrtot7bvd6zqei61hxwhx6vmdfcn32afv70rs2uqv6kw\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c580627-8766-4683-bf0a-2cbe5764a114",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "494d34ac-b752-48f8-a5ce-000b76b62ad0",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2077805696,\n  \"apiErrorMsg\" : \"nf64h4a3z8kjsjzg1o52xkac3dq22snfgrahudjs8rcqmowtybqgpdizmi6i6tldm4ptmrf9fc93ho86rc9632ietolz4cstqj0zmzto08r9kmgrf1llj7ujtb7ua7xg0bakv59b46iekfqgid6od37catn2anjsag03jpv4aih2qn0l9tm4obw33s6ji\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "494d34ac-b752-48f8-a5ce-000b76b62ad0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "11b650df-d698-425e-b32b-08324def5c02",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 564542499,\n  \"apiErrorMsg\" : \"25jilfaoqdi833uoenp3eutop26voxzzo083cqn9dzkldtgigu18xkgqg3weu5rk6skgc0vdsj7zk7ibrgum6fvsxb08bbwqkoygn1r5c9d44qgewonldkc19fx3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11b650df-d698-425e-b32b-08324def5c02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "10f8e8af-a995-4510-b827-b3491b76ad60",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1164328039,\n  \"apiErrorMsg\" : \"rvmgmbm19nxu0t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10f8e8af-a995-4510-b827-b3491b76ad60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3b543631-6ea6-4286-8c28-204ba361e2d7",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"5btdlyzbp9hzh7p7jgevdsma8k6sqirlg1tvmu\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b543631-6ea6-4286-8c28-204ba361e2d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "2fbfbf92-16ac-456b-a8c5-1647020bf4f7",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "rtvuezuku8mvqtguw00q83jb8tfhxqmxupgrw0t5dwyjfilz19cjidjlehmvlale3hvxawufb0x9gm6pzs7kp377ioh3kkc2fl0yf6y1pevbxyeouuqe0u777qmjcv5axl2pim04b9vgulhet59cpxwm63v17ngqqsqrddo0gpnzjofxli3db99gm2u4zpv"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 952042146,\n  \"apiErrorMsg\" : \"rhcxnrjcw6w9zy2qoz7pwmn16eptg22uhdidtxfbhsm3ytdu9gnlniaefs60hp37s3mx43q8gq64yau5lxj5e5pghbbu6xyousmorbvn9glu4xb1rzqvb2gopgdtqtqi5fhajch3ihzf87j10\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fbfbf92-16ac-456b-a8c5-1647020bf4f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1131be00-ddc3-4fbf-920b-f6cb3172cb9d",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "9lmwq8kfwtft8mslwixl5r80ygej063mx1fyh00k93lhgsfdrwen51r70c2vrvk4x5o1rp3quqgiw413t5ozeez19clr8o2zdb5gjospxcpdn34f9w1uvbwaihohremlayj3vg1ko37h"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1279575401,\n  \"apiErrorMsg\" : \"kpdzygjrf1xv4ocyi07hj9f4k9tbxshz7vfqqihsaq3h4n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1131be00-ddc3-4fbf-920b-f6cb3172cb9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4b7afdd9-1608-4960-9591-9e9b37364045",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "rw5xr4s2tz6zwkvyhjcwtliksgco34j3z2gf2r1rbxmdpx23i86r299xzwrp7tenlv1getk6wbknlr5fxi0g6p67uinik8mscg9mfkbwianrcrtqwenna18qpfkdunpfwg033qlgnq"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 398156507,\n  \"apiErrorMsg\" : \"c6vyi3wxwy7hkp976xfjrpea59eytx8qtjdwqh1k9sps6b5yt05fb8r4emjymdjxfd56qsf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b7afdd9-1608-4960-9591-9e9b37364045",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8502ca05-29d5-4dfe-9877-b80eaf5614eb",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "k7w2iupbcrus6ft629r9ysest28hyuozi1wk3z9ttlrslo24i9utb1elkbjqpt8ht8vvht40zg2ayn2g8o8os0djv2gftg5ngojbwyebk2wnemqxe7337xyiqodx59g71qtxtradmaiivmde2sqtyvzowirbhohnacag3rdrqwys"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"list-host\" : \"71chp974tbaa9pwtumj263d7yf463whkc3kpef6sn7jbp\",\n    \"list-rating\" : 649553945,\n    \"response-time\" : 1325418587,\n    \"is-listed\" : false,\n    \"return-code\" : \"g8yx32ozpapc6jizmdi5j98j4flfbfy8z3pfovdina7llt7q5jsrnrxmhzhz0aim7cn1sbn77m2mqivmnpfzdumctcfvsrv0nlvzoenb9i5x60ur7kbssjmcmj86zqpit4cy7hlc914x7anub8ck49mva42c7wr3f57g1noun8zaptj2pxaaio21yef0ek\",\n    \"list-name\" : \"Tressie Bayer\",\n    \"txt-record\" : \"ji7dyzq4sr0ofnj51xh3qg0rs796jzdbgnyw8rshqh31l165tmizlyxoi4jqepj2zmv694tvfquxfg88ochvkz4gsyz8rfj9cvnmgu2e7ah10h0knu4oknsuaxy\"\n  }, {\n    \"list-host\" : \"p1qvc4drc25ysvejdciqln\",\n    \"list-rating\" : 1097317906,\n    \"response-time\" : 110725340,\n    \"is-listed\" : false,\n    \"return-code\" : \"hmqwtt60faod4wfjjb8o17kk9mpbomwob8ouhaoh9sraxoxn4v7mr005ig28v0gew4a99k3mm1wu751c3ssza4zr5of5p9sowxofhy77og25\",\n    \"list-name\" : \"Iola Funk\",\n    \"txt-record\" : \"rhhg6htj0xmoyz2qy4leeteerln3nzopjolvzx6q8xx81xsqhicf4pi7h20c12f1iahxnp2kcr9kqhde5a9c63lfc6b7r4zzsxvz8aj6oapwu31g6b3v4ohgqd4lleckm36of0a30f988yfmd\"\n  }, {\n    \"list-host\" : \"wf6qw4209bwegr8z1tfj57ym099hfvom0qzymuao9wj87y45lkq59utv44jv59f7cpymqe032mdf1g4y78yke1cpkaawo4wi2kv1w4lg6tfmihovpryxaw4ilroccgje12r18duzgtgfmdzffmz8mnyllie7wyxnepi8x8tdc\",\n    \"list-rating\" : 2097910907,\n    \"response-time\" : 1349542307,\n    \"is-listed\" : false,\n    \"return-code\" : \"skt3ro5h576mup9ugiasoay35yr38cd24luqswetv0dscs5yirk5jaz3yve6f75id0b5zexdmix6mad3r4o3zml9rz0l4wu62n80sdn3u3v6j\",\n    \"list-name\" : \"Miss Ronni Schoen\",\n    \"txt-record\" : \"lrvxo0ep0ybg0g6jpva2ivngjqfu1aluysq0v5qo4ebvfok91h9wyzz68yxgzqqv5btuxcfmm0jyu4py0q2mgjzd5vh9\"\n  }, {\n    \"list-host\" : \"m6woulmi8n3coeh1jrd8vle0ekb6zrskxe5luchhg8tkfb6nekymoccc7l2pvq7exgnkosyn2muidek9o1a3w70qgwxj8hur7a1soag5fv\",\n    \"list-rating\" : 337322538,\n    \"response-time\" : 1326183869,\n    \"is-listed\" : true,\n    \"return-code\" : \"36pip3k5jbrdp7qo4cgvpkblhopnj36r9vpnhyreyozq0k3h2pc50vcuh3pw1g7nkgwo67whkq7kmp7knrnq9fqgqkbs3d98doahii0u5db3ig0jsv0obv6uq5ibm4dyaoqpz3v2z0intb\",\n    \"list-name\" : \"Raina Quitzon\",\n    \"txt-record\" : \"5uraz31jp7uxhz7ew65mibbferawtq7te1d2zrbkf8itfckfr9g5exi9bm0ak7aahwf8lzhpg3boc2jg3qaub0j1l9cbg31ly88etmfdsr0plwiezmsitczyp07wrs3jedth1ohck2xzuqngn4p6718p2iwhfnvyo6ahrdjjv5z8rcsjc22syvwswwgmtpr5gt\"\n  }, {\n    \"list-host\" : \"vb7itr5kx8ya0qz3d2rz55oricgg9lpsv9xwc2gzqc0ws97hjdtkykp3a3ta83esbafkg6v3lka1aunwe2ok5z388hxafh33zjs2wtirx1s0iudc4bggbevgmpzu1g\",\n    \"list-rating\" : 1205570095,\n    \"response-time\" : 1445737863,\n    \"is-listed\" : false,\n    \"return-code\" : \"36za8j29z3ylpxcj1t8c2y4of6w7g0tsimlue58nj1r5pif9lpg6v8ne3xx8a2feweo3bpiy8p5xt5xgnbf2l6b7iw5hh4a074v0baydicxj8oze01gtbcoewb1dl7kuqnfq1hpmlk1yjcp52en6epakq248wv3rau7ji53rhfgza4air9hyiyhdax6\",\n    \"list-name\" : \"Felecia Borer\",\n    \"txt-record\" : \"gehinc\"\n  } ],\n  \"host\" : \"xsdd8evf4y415lqbag1qllt1mnbpc16ax7oz064f1yqiw7t86ht49u2lup972cysuvyf1s0d50gb4k0015b8nqv7bnhriw4hlkpb1s7fv4b82cm9sluo62v2fm8ltkbftbq0t1frn7r08eze6fn082klpdus0uz4frkshh57en3rbcv\",\n  \"list-count\" : 1979457054,\n  \"is-listed\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8502ca05-29d5-4dfe-9877-b80eaf5614eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.797021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "is-listed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "list-count" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "is-listed", "lists", "list-count", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1cbed6ce-6adb-4c21-bc76-1f3b64530a31",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "1ufzs0qpp4r0ncq550rxqg6lt83lv2dvvncjo3oseztquddzkvpa0upjh2z8vr30vq5xdaj6qyhncn3m"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 934806800,\n  \"apiErrorMsg\" : \"zs2fj494oh5lgpwin33kx947tpptp17m3c2dz750c0bdl6phcyr5lbzzmabq0gwrywf6lcptvgngqnrldc6evhj2cq2x4guw3wutn8ezpxaujkfzrfag2zvjkpi472qcz4e2c6694zvsgojvy4pdlqvchbrxjp381351byv41us1xz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cbed6ce-6adb-4c21-bc76-1f3b64530a31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.796338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "894f7432-ef03-4cb9-87a1-7dfe44441c2d",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "k78j51htwuip8bnna6c93o0723b7w5cy143rceychpr0633cor2ajdq8oguu8s40p282ecxls5t70d1odfvd7k3ieim3ldh2yd7d2t5wvor3q3t3z3wm8h4zysh"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2065684941,\n  \"apiErrorMsg\" : \"hq0wcuiyo3p3taypcq1zagaxsxz2qbdwddpyor4ja1q82w8c5vqcb1pw9c2lx27an0yft4terj175wvpytkgpspjbbghl0bwrrjoy98ybr8ga9hualpz6tl6p8e0nlorthky8va49mh3k4fsjzkpesm0dfjwemo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "894f7432-ef03-4cb9-87a1-7dfe44441c2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.796257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "94d75bfb-3307-4c3c-bce7-58fd40ac31f6",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "r9qly9lmod9dgfkxvbn3glymcizjnq32e7y5a7avh0ng59bvet136740g2ey0"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1147930540,\n  \"apiErrorMsg\" : \"k3q7qzwhm2ccragxvigz5h46mmyqzsjkhein1cmrbm4vkhkerriuh2ysnrlrdm3z2vpanrdfqze7zr2hijxxg9jitmjuf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94d75bfb-3307-4c3c-bce7-58fd40ac31f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.796173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8e57a5f4-8e13-40d1-b70a-8257a3207f14",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "4ijbceuc7cqzay1bia129fcxjz7evo0immshgqfxrxlvsxd5cdc6357ldg59vx9ml6hwyz5pwwbxz6s6cbbara91ultkxzuwwu4p09w3qotyt1kunvj1bay1a9i05cz3z2af4gxii5jtrh75ktoctwi2iohk39xjfvej4gi4v3o"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Malawi\",\n  \"country-code\" : \"ffffj\",\n  \"is-ported\" : true,\n  \"mnc\" : \"qyp5z9uyr0o9z54hwkobyl3rqbwpecuiv0dnwegrhf8lz6qtaaska2g5oaujo4hsp620b8yy1ra0ffkn8pfuap3z6s0skr7xzsw8ldrhej5\",\n  \"number-type\" : \"i32m439oydd5l3ut4r8kdbjzujmt8pocqf2ghd0in2ixrpfo8pr11de31uw8jj3uyss008b9p9qcvdlv8yotszykuejgiug39qqqkl94mt9qebkqu9d6rkgh952a65982seiq3skrc9nbcngwgd21gjnhz9kl9cwagv892hw5ojfbrzlnlcfqbc50isj6luxqoe\",\n  \"international-number\" : \"5a1oxfitl0aqrqbf5m3ciip1z10rnmk3c63vk6412d04bkp2jrwp0862tacfs400sc4lmrucvc1buhomof9y62q924cpv2bcfc3ee7sn1ea69u9zromkx88pab99z26zaurnl\",\n  \"origin-network\" : \"t3ivyijjl9k188i5c6866r6liatznuxb6xg79zjb8io84n7e4tesdiitlt7g5zgh1nnj9asf1xujl02h3jhrvwojp43nud3mxqhbphd4154sbba1ef3sylhbafvh2jtzvd9v95q98zktio8vge5noxodw1o6q4rqrsqqlacepyrfrbfp2gzwgsdemb6m\",\n  \"roaming-country-code\" : \"ggggh\",\n  \"imsi\" : \"5ups80b44t3u17wbu1ahrhg90057c7kh7dvdu0qgli64fucqjr05bx241q0unhwa3b6o8u2nlriisf5dk2cug90cjj70ou43qscs25esa0jwaegyere5ewcvfd4gnpf1k\",\n  \"local-number\" : \"m9i0xc1nt1cv83gvdepgertn6k1ytefg3donsmh9jr6vfrvb3wjchbbggcn6szw99uimtl6m3sx8jhnm2qymk64m2cw1n7torm4lrc7qk8g29\",\n  \"mcc\" : \"gti8yigqlkfzt7mxaoyaqtysfgls8i3agwdi5esqupt8ibesqg7ve063psprw7bp8ypz0wv8xtctttmxr58xhx14ih6jn305sr3vovg7p8uauppgbn8gfu46qsian4qd1z\",\n  \"hlr-status\" : \"st4kqzncwq9uhiced0qudph01l8j3dc4gq1svotzmzbkm6mwrixxk57098s7i7y95xqz1gv61je38jhe3jliiojhgdyidonliqbjwe2ia2ti5190itclb\",\n  \"hlr-valid\" : true,\n  \"current-network\" : \"xf0wguwo8ypthggj7\",\n  \"msin\" : \"j2of7q7arvee0yje18yaew0thw0afyr9s3gzwrg2hyu1az\",\n  \"is-roaming\" : false,\n  \"location\" : \"4y0rrkfjunh2drkef7uuaofwbj0kae9n4fecbqb0c8agd06a5aks7nn47xia0ra\",\n  \"currency-code\" : \"RON\",\n  \"msc\" : \"ufjg870iughzm8yj\",\n  \"international-calling-code\" : \"d1ww1cc44mcrtd0wxiwzhdhehvagzni78x3aq5sqgbgqyh8ps8ngjxsijj9z0x3ms9n31wstce6yrz3byss7tstlj7ym2smhoja1bt2te81z4g6opk85r3ma3zc7\",\n  \"country-code3\" : \"3ww1gvfo6jb293ncabsmpmqpx476k42xrl8gf0b3fgjmm6pq812ex720qz4r13jov5ualxsk16tpzey34ytdqb\",\n  \"is-mobile\" : false,\n  \"number-valid\" : false,\n  \"ported-network\" : \"2p1zd0n4560ryjq07rx98be15kihi2xxb4e8z6p6m10ecmjog92t6xh669h8b3e17tdszibvvyja5axscjci9sbs5wtx12rf31mvi82nii9ld4xiy06\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e57a5f4-8e13-40d1-b70a-8257a3207f14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.79608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "current-network" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlr-status" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlr-valid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "is-ported" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "is-roaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "number-type" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "origin-network" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "ported-network" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roaming-country-code" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "international-calling-code", "mnc", "number-type", "hlr-valid", "hlr-status", "ported-network", "imsi", "mcc", "international-number", "local-number", "country-code", "is-ported", "msin", "location", "origin-network", "is-mobile", "is-roaming", "country", "country-code3", "currency-code", "roaming-country-code", "msc", "current-network" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b25be1a1-39dc-4856-b932-338f243eb3e5",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "5eviz0q2f56haf7j0jq7d8zf7tcq3rc9u405t3lu1oly9loy1mb2luo9rv4"
        },
        "longitude" : {
          "equalTo" : "4egdqyppmf95z1t8jsd0l8koexv5rw323r83xgmgcmcrdvpcfiyunt18yvwmrl7h9ugdjm9akfzn5o1kyv5p81l"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1996485458,\n  \"apiErrorMsg\" : \"f7v5y8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b25be1a1-39dc-4856-b932-338f243eb3e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.795436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ea3d52fa-ff4d-4e8f-9cbb-f630a2876aef",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "p4xgr6i81ahlqrkv8du9w73wy29762wqkt90cn4bztjesenh25t5z16hh0920xiui5d3ze4uljicrk1hd6kwmze76rlfvrrem4y9in45eh0pl289c7kfj1n34ghztfhkocg3msbguhngp4zvjow"
        },
        "longitude" : {
          "equalTo" : "qzabyrss3cqb6yzuc"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 894039229,\n  \"apiErrorMsg\" : \"lmf1ilpugiwkf0g53rverutykqqs9wy07yeamvosz4dyeq6yn6ktgdph66lr9ybef25h5bex9ky989q149igm9gq96at3eyqlk0s335my9g3u76k8y2xxyscmq2visp865qo06wq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea3d52fa-ff4d-4e8f-9cbb-f630a2876aef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.795338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "de18197e-e887-4b75-a451-7534de0a04bd",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "nl18mve60cc4nyi79lbe6ocsvg0awmosm8knvckf16wet729tm1l0zbvp3sas4auclmvge8bxqkdwqivecbnzouqpj9p2d1mxthn4t4eav7arn110q9vt16mv8vdkbmjxfb9boy1iutc7z9zvlwm3xv87birv9p3wf0vqxbmu6icgb0evgz4g7lipkbayupu"
        },
        "longitude" : {
          "equalTo" : "bfpahrhk8c4ok28trcnujay4mj6030r8aqt4cuk5gc12vymjzr0jk0r9opwff1sob5rt64lf4as3x1wqn08spmpxm7mwx4i0nkzn0sgprsqzsw074695r1rbfrpx5oi3x7d80ryxqfbjyaktdn1n281k1ucjzh7qiukb37icszet9rb22d1kzrcc0k5vcci0m5q"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 492757123,\n  \"apiErrorMsg\" : \"fqmpphe7qwcylfea0gj4114gwd0xm0fmgm5y2s34ns3atjwk3kuac77ak7gfxlv4yrxhs2h62l45gngkqr3cei1w00vw99sjm1lf7z8l0khbeiqrjcr741mxnld2de4u2uuk47gd3k9yaeqj3fh6lium7haaut8h44avzdxmslhwl1z2nx2iicwtzt27jmcpunjtffi5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de18197e-e887-4b75-a451-7534de0a04bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.795238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cfba17ed-8f5f-4508-9101-79a9e0e32379",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "p2nawaotg1mmf"
        },
        "longitude" : {
          "equalTo" : "f9cn7s9sg9fqwbvdrahsufcwb4rvnsuj0m052dx9yjsoj0gu5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"0pazqo8qo8ji8\",\n  \"country\" : \"Finland\",\n  \"country-code\" : \"bbbbo\",\n  \"address\" : \"ujbgdinec7yurwetngjczgphit61tcmopq49zh2lofq362j6o97ay7id02pu5zmhxdorz83g251un40sftzxsn57und10tkptulytzvu5heca68q6orqa5nj7b2zsy832kx\",\n  \"city\" : \"O'Haratown\",\n  \"timezone\" : { },\n  \"latitude\" : 4.905823323545097E307,\n  \"address-components\" : { },\n  \"postal-code\" : \"76228-4213\",\n  \"found\" : true,\n  \"postal-address\" : \"e97e8mcvwa30hgy0o5uv2vg\",\n  \"location-tags\" : [ \"2os4ogfm9pe7zsut1f6ua213n45fmtooqae12ph3ds1podg5coulo1noqwy22radvbtj7zctknt2g5kpta535n8fminlbt1i\", \"4j7f036ad5ie6kruhoy1i7xroikm1n7p5va5m1sxy951qoz9gx47xtviqkoi8watuzgw\", \"1vbf7k73upnr17reewajyb8ss8j6fhhcapk6a6ili0mo4wkese6fydrkp2c0nwjll0fofcnhtlbj96g8qvp8m4m5rcuokjtqagrmb25n89mq2dj6f07fry59n7fu2cd1tqsb5k2jh7fxv9k21ogws5wy7ixouf1575j4ipw5poapny86f3tneuyvwdn8\", \"vr8juq7glnih4v4wvbbrapgbt0r9kc72olsxudlz0wxnugmoinprlck9i3jeo1f6v4\", \"ff57lcb3ptg3qifs79fezrpbj1me3097tw5rz81anm25u36nn\", \"nxax6grod109zivkk4pzq0cpt407104ixja64mna1rwmgqxuudk2yrbwtggkarp3854usx6freo8c1n8cwzuflnjin9cugd6dahva7ji0dbr20l0d1nc7j7jks3f0ln673wgpnswfxx3g27l1r3sampfx43le82vu0qcu6cc824jc71ckjb6u548fykp1\", \"73lam8ilerdu1epppxz1njunwkcuxt6kn43fh61u\" ],\n  \"location-type\" : \"4rfbhw0nsf0af3j9wjkfz2ua4e6wri8n0rj3xzx2vpjr2d38up0\",\n  \"state\" : \"Michigan\",\n  \"currency-code\" : \"STD\",\n  \"country-code3\" : \"ah8eg9o2cac5o3lcdx2bmvri54s8sci1kkdbm4pf5vrm0vm7onsrnujsbtqcm05tmjs3zoxio6cykz063bwgm203vh32xu7khlvi7bc5cs2nsh7t7hw55lf3kg8tj4bt9ng3ymvj6cnrkwu5n0eo1qb4sdx7z5xp1090dxppqz2y\",\n  \"longitude\" : 2.4601825590140363E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfba17ed-8f5f-4508-9101-79a9e0e32379",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.795126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The complete address using comma-separated values",
                "type" : "string"
              },
              "address-components" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "location-tags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "location-type" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postal-address" : {
                "description" : "The formatted address using local standards suitable for printing on an envelope",
                "type" : "string"
              },
              "postal-code" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "region-code" : {
                "description" : "The ISO 3166-2 region code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "country-code", "postal-code", "state", "address-components", "country-code3", "currency-code", "location-type", "location-tags", "latitude", "longitude", "timezone", "region-code", "postal-address" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "56a8adbe-b2ef-42dc-a7b6-a2a63ec3adbe",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 766283577,\n  \"apiErrorMsg\" : \"s8r94jxni9g5yhzs4bcjtkjdmmahprpyj1r4c4uec4zxjddalg8c4dfbtsj1hlfm80c77l77nm6fn3wkoe8glgktdrhuvgzkh68wi4ugej4f1iebz5tu3z2x744e8up4oquh4n7gp024b48u0ouvnsd24e5ukc1ur0nze74rs4erl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56a8adbe-b2ef-42dc-a7b6-a2a63ec3adbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.794543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "452ef826-2048-4f04-96dd-7f8a128dd441",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1727778804,\n  \"apiErrorMsg\" : \"z6dungz4yagyl2atauykme4o0m4xyovaum486qur8ab743vn7x6kiu1k9gcuilej36yf3422lfa5iotc1jgn6ekucqjuskgyqbs630tkyehd06sazkzkecdyj38vkhxkw0i3p0t51ntfyw899zstkjwisxwv9cmo7jzwnn8e0q2ewdigvtjcm7lkalqn0e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "452ef826-2048-4f04-96dd-7f8a128dd441",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.79448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c5ab497-0ccf-4b37-85e5-47519cd93c8f",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 504365356,\n  \"apiErrorMsg\" : \"56bsothd8ldowswt6lkdlbz374s5xcao2cny5qa5bbqz4wfxje89h9uk7o4gzfg7g1yd4idksdijb0xgnx07kfz9eedm3c03kmkjkjbdfkqjoy0jvxo7mt86az067p6553oiaz981w1hdrnt6zll1ofsb75e18n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c5ab497-0ccf-4b37-85e5-47519cd93c8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.794417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "34ee7e00-5bf5-44ce-8616-b555589c8211",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 1650474013,\n  \"locations\" : [ {\n    \"region-code\" : \"bkxav2ujtqyel3soc3jn9aiw6u5j03z9xp1ojb4e207jlhxgt9r1r15bppgwxp8q317e8zie7u69oooq\",\n    \"country\" : \"Sudan\",\n    \"country-code\" : \"jjjjm\",\n    \"address\" : \"851t675n61ildqzt2p3oa22g1x6mi78fb3a8fqwilojodgq3b6nis3i4x5xs420hikurf3llvfaguwgt8bfzf0e60buw0ku13\",\n    \"city\" : \"East Alizafort\",\n    \"timezone\" : { },\n    \"latitude\" : 7.672123963079492E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"42729\",\n    \"postal-address\" : \"ltnf7a3kihuaho51zyagz6c7alt5j9jkv6xpcc1ugjz2673zxfsrk0xdj8m4tys2n60n8\",\n    \"location-tags\" : [ \"vuxoqmkbcmydu8mzvbvbj3te3u8yqihqr8spuk8wlf\", \"31qyhgpbegu2wb1c696nnxhfbqobg4u1fde57r4\", \"evmrkeo13tospezs86wgmvi1byvpvl33azsz54era8zichsask49oafw2s27gpiiow5u38ehplem8m1wgq4antvp1azvsd5jzyfvlrpd1dajxmddkvjgs7k6sovl3qer46fy3i5gc3vymxwf6j7u7txs0y20pkd4ew0o8ck7mfhi9b6ph\", \"8orqqitd0ldc6ytfcebri9isaed\" ],\n    \"location-type\" : \"jzrqc411pyw74la2yyp7j4mwa9wsmmxw5mvpqrxaeu1x0jem9u7ryx6a9q31oj5dmt77cb5gcpefsty9p19konzd6znp1fejqx5465kz62n1iguavv8qzj1z6stiox31aum1sn6548bn8bni6kg2tg8c45pajylbq0q02xskv0f98ec8rotm4f5itpn\",\n    \"state\" : \"Tennessee\",\n    \"currency-code\" : \"BAM\",\n    \"country-code3\" : \"xuiuhvgugq0mutjuwoi90me57vktxd5mbq7nu4n7bob\",\n    \"longitude\" : 1.9236679244747936E307\n  }, {\n    \"region-code\" : \"qjg448o60gvkapwkz\",\n    \"country\" : \"Fiji\",\n    \"country-code\" : \"ttttd\",\n    \"address\" : \"l33p3i1uc3s8wbks7ukejxaus8gku98piu1orevjonhlw1xex3o7pqgxzyw1zxot2drt1nqwzlu8ic5prt5uvz6t88fhk1tb8k4jw03tn8vq7tvwfqvrd2j8bd471we4mz1vtde6v0c\",\n    \"city\" : \"West Marcshire\",\n    \"timezone\" : { },\n    \"latitude\" : 7.269401410390091E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"60962\",\n    \"postal-address\" : \"0kgs1garsvrg724nzkzd8e11oxv6rzm29ugjbtphwhkqnjv2a5azz2y43gfd71skvab8r1m81lfudg6545k4kf4u1b3r4ec2tbvan8ail3ykxm490wz0x6zt36h3dt9apdqhdssce88dwk\",\n    \"location-tags\" : [ \"pv6kgr8r52n7p7o7ug4z0h657x5x2hdi2vhyp828zampz27a3ex0933mydfwo0wgp38fk8gm3gzjz1k3ja4a22z2ltk58cr248gnwe25eb1tq3fv381du92tvoo8zmaok5zhtoedu3d2caj9p18w2ibz6zkk4qtrebzmkhquw5x2c4ll\", \"7coxkfp42yqc24y37hqk59qqnvcbod75i755kz9x3z5vwav1s66oko45onrrgmdq7jkaw5pf63tdv0ythzhzyvrce7ijv9qz5y1cguczfpw6rpy11w72tzsa8tao9lhmc7zoz98hffp8vy2f06ybhjrhicehx74lsty16rjtk4d\", \"902qdmouu2j6za7gu0qmxolozzgushgw12mx8\", \"f91swrwi9ofndqwatmggk8szn6q3hrvshmysdn7dn0r7iwvgmdc1qkhus409xrg1mtp6h7m91bcpdnfct8q9aqowghudbnp5ftoxugfpv1e2co1dhi2lw2fr64mlkyywb6zbqosdytv38ymwe8ulcc4t237y\" ],\n    \"location-type\" : \"nv66x0nsynktnk19xcef5rqnp6ozt9pzofpsay4awftuifvjokdd3zcw4i2bs3icj3nx7vwyw8ejqu55frgvs8ipiikxmv587m5d4hh22soffzhj5pih6l84tnwwvbwpo1jo949sjfrep7op2ahoalnohwq17scdeq8styryq7v\",\n    \"state\" : \"Michigan\",\n    \"currency-code\" : \"TTD\",\n    \"country-code3\" : \"8io6kzbf7elnuflgmng3iau3bnyk4hqhzkqbw5sa6vqi4ihw7ut5tl5ghy\",\n    \"longitude\" : 3.501921038866683E306\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34ee7e00-5bf5-44ce-8616-b555589c8211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.794338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3ea442cd-7390-49cd-b658-0947cf09e7be",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "vnvek2lgu05a7q3mret7xss4ucywe4dto1dnmonjnzy5p"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 743873526,\n  \"apiErrorMsg\" : \"rvqbnw8mt3xikhdfj06rvxz0fnpfaytx59c0828bfwwc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ea442cd-7390-49cd-b658-0947cf09e7be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.793621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dd428173-d2bb-4761-88a2-9da1a136652a",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "u67ducdbzee1hukczzoa2iqqmrreuifbv8ryp7dwybcgb5bss2u5kn8tnz8whffb9rz46byi9c1mklwcz6wou35onjyumv3gne5s"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1956126956,\n  \"apiErrorMsg\" : \"ea3ecgwad0b5lnpqj2qdc2nlhml17ts27hdh20mk3lj8b3i33bw3ofrcu0d24gomuhgre3xtvh5o9ca73z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd428173-d2bb-4761-88a2-9da1a136652a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.793543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9505888-5035-4597-bea1-3bcfe49891b1",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "z4l7x3959rokvkocj3ujje5ffsuo8xiox69fs1srqeepn7d757klzncypzgojrqcoxht1ioh3xhtu90h043rztjmyrpcf3um5vl81azghcxbkvjfed8pz4biedhqogoh"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1511636922,\n  \"apiErrorMsg\" : \"krgfv1pgdu69p2u759su9c9bcn0ajyhhjxn1ql7rbpp2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9505888-5035-4597-bea1-3bcfe49891b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.793461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ccca4dce-d3a5-44ef-aef6-572adf947e35",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "iaaiymq8fmxb6cfs5gbsf47e9iir0mork7vs0lj9h1l96gpyc1p9abrgh77wu8q0ytf2z03do1p9jmc47elx5r9zkhbjsas7itg5a3oopxld30hpcfjr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtp-status\" : \"pehe8w9c3ejijph3mdhapeqqcfk1m0k0\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : true,\n  \"verified\" : false,\n  \"is-freemail\" : true,\n  \"is-disposable\" : false,\n  \"valid\" : false,\n  \"is-catch-all\" : true,\n  \"is-deferred\" : true,\n  \"provider\" : \"1ebjikaiyayr2yylduyysabnowo8nz25a1ea4nc1x78du4gms3gs4ptlhq642w28zssfnf10htnrbdukd5ztjk62t9u48qlyl3i9feizu0unfdmfwhcas7xk8k9ptxqbqlqqje3usztm7cyrdiyzn155q8uvm\",\n  \"domain\" : \"b8aeghzk10n\",\n  \"smtp-response\" : \"13swyhg28c2qkhctkg9gr4jgollbqnzd1oyqsvj1hg46x8ogpthdem4k4l0in7abfaxrjqj8whlt3h95t0hskgrvctgo4yecesf8xz7vqomeno3jla9ws4pg90h4bqscrryp3kznjt58w5v2gy\",\n  \"syntax-error\" : false,\n  \"email\" : \"zzlt6fjhsnlof86zofc2wn0uev16wa6a6w5u6p50ua4qp3yfk9pougaum5qndz66x09hjuj26kbyt73uvb4jnrpmisxmlfh3klwj11xevojufdlx0059b1\",\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ccca4dce-d3a5-44ef-aef6-572adf947e35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.793376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-catch-all" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "is-deferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtp-response" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtp-status" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typos-fixed", "syntax-error", "domain-error", "domain", "provider", "is-freemail", "is-disposable", "is-personal", "smtp-status", "smtp-response", "is-catch-all", "is-deferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee3d528f-12b5-47ce-9f3d-ba753a89d4e9",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "0v6kujhfdlbhbwrnwy1tm6y2gtabb8v96aw407yhcrikt2yzgm6yjog789o8b84xp5jcmwcbmnkrs66znhwljdbvkdib7hkwesg3cej5yk1w9gwiz2iyp9hxu12pdxgqksrzbpxs5nlda8j992r9l82pw8vevqbfkcga"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1089247250,\n  \"apiErrorMsg\" : \"2w76bm33zp1kmztyxp5195rg3k45trcb8hjwoqrrp08j8vpeu59spjbcymet6lu3lbctgz48vp9i05qrryhxv4x6mjtglwvvnevzsm902fqls5k6wjgrfoaz2no24u4539nct1r61fpa6z8e89j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee3d528f-12b5-47ce-9f3d-ba753a89d4e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.793056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d76ece7d-4201-49ad-9717-b61a8d51a275",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "9noy384wjkmldzlrrrnlxx4ez1rh84vaxmv37yqwtt393mo101ygfv9v62uofvzmg03ixtvfaup5wjnw4o0pfscucqxy41fs12wdj00ibtdcyc7nuptm0awxic8h77c16ziiga50r3wg3qwmzg1wyamugwzaxfw"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1769781477,\n  \"apiErrorMsg\" : \"7gu7qkzc91ycpyw4hovchn2ow51uegz28o5ceigmj0m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d76ece7d-4201-49ad-9717-b61a8d51a275",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.792972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "244ae060-82cd-46b0-9a85-eff4811bb91c",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "y2kw5y4hnpi6kua2eokby9mofrw7i6vqope1h1ja9sfuy3mk2fu3fbuduf26gqao0lgl1jovm5s5tzxyiyp73hy3l"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 615242607,\n  \"apiErrorMsg\" : \"ey84e8lox47ccby3h7lkvw6hva8nn0nt50pfxcya4fnn18xu5koqogfcc86c2zbb8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "244ae060-82cd-46b0-9a85-eff4811bb91c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.792888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65388364-3a77-4191-b2ca-6cd6c399369e",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "03rmvgfj3mc9d9mlkf6t5qgctf4ymn0g2ve0xhhavrex3cm5i5zrfjtsnumk6g9xqgc4go1rtylx97d9cbp2b9e5au2rglftryvmi148x0w19czd1fc95ezaxuhg2zv7ty0fhg0k838s9jsyx3q"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"provider\" : \"7zen0awkkn74zeqf9tvns0itxcyq83eddz9hdolrmg9b84gcixyzdiccbi1ff2wq4wno5fdft3p799f24ghl24r1crbs\",\n  \"domain-error\" : false,\n  \"typos-fixed\" : true,\n  \"domain\" : \"fnsjglzh9mffa35ukwgws8tu63pce5mc2imnf29irsi0cc2p8oa68mj8nfn3jupdjgt1aycxv6wznwxrncrcakfy7r9nsmc2lsir0tu6qv10e85s14h8egpr4tkv7n9c8p\",\n  \"is-freemail\" : false,\n  \"syntax-error\" : false,\n  \"email\" : \"v2zklqlpljvsy\",\n  \"is-disposable\" : true,\n  \"is-personal\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65388364-3a77-4191-b2ca-6cd6c399369e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.792804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntax-error", "domain", "domain-error", "is-freemail", "email", "is-disposable", "typos-fixed", "is-personal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b293c3ab-e602-4e6c-b637-8d69452305b5",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "cf0rr76lilah1r39kzbb30f6429du1oiwd519r988a4vhlotvp6hsfbf623b0jxtiyzceukcl2zv97unpu1qe2hstva6ce5katfor7rv75txyst1ebfbqqq1xp19bvcduq0mrv1zwv2m0t55nts"
        },
        "from-value" : {
          "equalTo" : "jrf3c0s3yz8sdh6qdu6mdfcol8fwl7mix0dj8i1p4bdvkoc70g5d64ulybu4pwmsvlhazitm"
        },
        "from-type" : {
          "equalTo" : "5xeym6nykedvtk1au711wq2jia43nn5dbcth832d3p9h26pytywotpixlhgsvtin7g1tnc8v7bjeep5eil3z8xih7feuram73ejrg5o2lz1l7x8"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1592984308,\n  \"apiErrorMsg\" : \"ilnvemzo213jvgr58adhwpybt8s3q8ytysgnazym969f2wp5j9yfpgm71hnme7mocwptp5smyhnmffhl0ooegzy5kbx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b293c3ab-e602-4e6c-b637-8d69452305b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.792566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2e4af6a7-b789-411d-a864-745a1ea67179",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "f3nnnzwj3jihqhzf4gjdk0yuk4gffa76tbcou3rps0xgn0rtxk16vg96fan7eqq4m89v1wrgi4sxqlm6ikliggbh4g4ueexplv85a4wkry8fb6"
        },
        "from-value" : {
          "equalTo" : "4xggfdsbvd619z62s2wqwaidycyfi949k5qijbilg9owzl9exfovfypwiqk2cpjnv54k5e6fl13swo0vfblmdovlxzwko0r891th19kwuzegrxx9ekndbltohj7bg8r0"
        },
        "from-type" : {
          "equalTo" : "sdrexpqfll16ejvb5cvkpfq2h0gullur1kzcibbbiairaaivjopz3c5ciflm9cd9aqry2wmvl0wycmz81tsxrqggfc0ok5p7"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 308114108,\n  \"apiErrorMsg\" : \"fqb34mdrc2x18kwh9u66hi3enhsquf68xset4vyhmbce7ql5pyphco9q7dhl56u69oly23zgwjwcsjpq63i9q3pg4be7tywvv2lz9mi2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e4af6a7-b789-411d-a864-745a1ea67179",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.792445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e35dd42f-3db0-4e40-ab22-53db5188e5f8",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "4u46lkfc7c59x80tb9wefg7lqoiprjsc9t31gbm1"
        },
        "from-value" : {
          "equalTo" : "g5yos9e2i83ekf8i017d6h4t1rah5oblu28u2hhsfnh2vykpznf6lwpbhvw5"
        },
        "from-type" : {
          "equalTo" : "0c10b4n27ejrdblgmv5df4cs1dama6db08z9rqdwz7wagmr6dknr5o731yr1zjb108eqsimi3xr6wtrczvosp9y3nadr81i0vwmv98o6sss7m0y3"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1524086812,\n  \"apiErrorMsg\" : \"zm88qakjep62jzsc5ne1lugjvhu3hczylz1o1waqonv8gkaynfmsvwmecf16wb8w5amjvslasttr2ef1p44xz8oj8q276huathef046ee7iotwyahyv0fhhj8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e35dd42f-3db0-4e40-ab22-53db5188e5f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.792303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c9882060-068e-4607-b010-c1ea72ff5d3c",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "dkqd1dukwv9"
        },
        "from-value" : {
          "equalTo" : "p6medgb9lkh31kgsxx4h7tyubnoz7i06bnyd7jmjsy1klrx2mwnwwkimlgi7rsyso1ld403magb8u5he4hy72cd54t10lr923ahz48yinox7iuorq3x6tk9blwev9gazdnnkbarn9gtd3vfi0orp"
        },
        "from-type" : {
          "equalTo" : "tll2sebxk1plzo1xna9p1g0s6qarwxmqe2i9ucxdcv1pklwgpa1pxlr9wlt98aq8byl1soi41gwienyj43du1wzg86mj9nolygfmtc2exx25xchm8bdn064bugzcewogwsnnyhdwilotc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"948yvu68v3l7d3hrvyz1nwz6xexe3bw4za5alxgqe7m0544rmtf3tf9qk0cml1inn4eys5l15o0oy7mpoy60xpd1c56uqu2it1z4flsmm2zxcm06mhikk099k13yihjas6g3uempf5054rymdp9jtih7lgwn6l2\",\n  \"valid\" : true,\n  \"to-type\" : \"h4xpi2iogx\",\n  \"from-value\" : \"io3m4gza6nara8jq53kpoy4d48e1k6oo4c07bqk9fp17un8gtaoyr8lwjza5cf75f3l68ti9qbu773lh7ugcu5lua86\",\n  \"from-type\" : \"e6ccpfk1xlwxzo2myes5k9atcqf2i6bf0ft3akx2wzz8jsou2vtkbfhcflrevkmiiminopx145ql6p15fd03q2ykxqyip033fcbxpcvq922hchu06oodi2jstxwmxe9dchgofy3mmj37ayi2yfbn1c8god2sp2wo\",\n  \"result-float\" : 1.7775896554093887E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9882060-068e-4607-b010-c1ea72ff5d3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.792173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "from-type" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "from-value" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "result-float" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "to-type" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the conversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "from-value", "to-type", "from-type", "result-float" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "add2b6af-e0ac-4e37-bd67-d289bac8290d",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 396122866,\n  \"apiErrorMsg\" : \"3c8p3veoi1u4o940wzry8sy0hxa3mgh3vmxf4i109j4u5uivfz996rb3gzfkazi3yqabcltbh7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "add2b6af-e0ac-4e37-bd67-d289bac8290d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.791929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "442b5d6a-3cf5-41a0-a751-c460768feb65",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 180592488,\n  \"apiErrorMsg\" : \"9fd50t1al78ih2otm3fjk99k3fr3ya3bp0cpl2qv19g9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "442b5d6a-3cf5-41a0-a751-c460768feb65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.791868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "26a09242-ea3c-4250-8fd8-bee32e781f93",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1477975541,\n  \"apiErrorMsg\" : \"xmas0b0uka9pit1xjvim3kb2ujx1ad3hvdepc4xgqlgy8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26a09242-ea3c-4250-8fd8-bee32e781f93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.791807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c24b3f25-9fa8-4df6-bcc6-dc7a9da0de54",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exec-results\" : [ \"sjfudx9lplehuooxhuh80lbgb\" ],\n  \"security-details\" : { },\n  \"mime-type\" : \"1ae5ll3jwucaasel8bmotxn73t2hfb6wdfx2jk43pgbi4lx6km71jmj4r1pybu1ruwt56afy9niazmqgvrq37aimzy6d1iewdrojkpkkbx7pi9f125i2k56ls26ljq47xw38im7tkdf3q8sz15thk1eh9bxn3f7or9d6wpll\",\n  \"response-headers\" : { },\n  \"language-code\" : \"n0dwoqq3fjl9naj98xsms4pixg4v329yer8ytpzy2ouquyywdww3zfhlmgfvk9\",\n  \"load-time\" : 4.767097599299837E307,\n  \"server-ip\" : \"97auts6kvljw2m6embyprladc8blvq0bglvcn4dvas1mpmlwua2vsyka4g70uzw4yp3o8ba8v2bnepcdr8gui81c2qx4va2qc4kmzllz0oj7v5uim0gcnnj2n1rl\",\n  \"title\" : \"Quia velit et quam ipsum totam nisi.\",\n  \"content\" : \"Sunt sit sunt. Quo quis magni voluptatem. Odio est aperiam impedit voluptates. In qui neque eum.\",\n  \"url\" : \"https://web.example.mocklab.io/266235\",\n  \"http-redirect-url\" : \"https://web.example.mocklab.io/491728\",\n  \"http-status-code\" : 1988327468,\n  \"is-error\" : true,\n  \"error-message\" : \"Et consequatur corrupti temporibus optio. Suscipit repudiandae velit quo earum aperiam nobis facilis. Et doloribus odio non amet nemo expedita tempore. Quidem deleniti molestiae dolorem et molestiae r\",\n  \"is-secure\" : true,\n  \"elements\" : [ \"6gtu2kndbowibh92mco6cf8yokyksdymzhgwj1ggkf1pdgzvepiemzgpffo9spp7nytayiog54fl1xs13jpjbmoaki2otgpvzb642vh8y5pw4z81t055v7rle7xqn2eet8jk8qxnr0fw9j3o\", \"7w8g7w70tyj1xtk0kwn2bsjop2xtxuu9gjmza0b1tg59wanc\", \"bafpjsqt3muybdgmt0d1yseq1xiv6eck05156e2b1izefvikxfz4y3qm33rwnrz38crxppuy3qllvo31pz3tvgkueyjrfxe7inq0ierrdekdbc0xrhhveylpz8ax4o7kooo6j1he6qwlz2zghbxbeb412csd8v5q0o3cfirbgrdegb0hgjzksk6gnqqrf\", \"oriygs01orlk5uku6vyh52zg6tw7afvqeqm9s32w768z7qlz8bcp0cejzwmpvd7l6oao370lqixfw2t2vvvbwl4zuiaiinrhootuiyrr2qeni8pg\", \"11flg2itrkcrpwnwqxkqoloijkj0erd1yg64y3qngeyw3fmhou0njq2g01ocfvt3yhgxmy2am3zh4xzbkj8u2ciokerjup0uz741xw\", \"sv3xor7m6tw8vklz2m0g30giwt65emjgipwi40fk46ki0pwlqzqsai62yuy8u7pc61n3zl8p5dy7072lnybe2ucx80v2jzrusl08gi04a2yekyihopnmmhhdje4ey2exdwl0om9y5ts5v2d44grjn1blcghd7sid3bsvjfk\" ],\n  \"http-status-message\" : \"Ipsa explicabo doloribus beatae et. Harum eius id eveniet. Eum harum maiores.\",\n  \"is-http-ok\" : true,\n  \"is-http-redirect\" : false,\n  \"is-timeout\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c24b3f25-9fa8-4df6-bcc6-dc7a9da0de54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.791721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "error-message" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "exec-results" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "http-redirect-url" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "http-status-code" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "is-error" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "is-http-ok" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "is-http-redirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "is-secure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mime-type" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "response-headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "security-details" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "server-ip" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mime-type", "title", "is-error", "is-timeout", "error-message", "http-status-code", "http-status-message", "is-http-ok", "is-http-redirect", "http-redirect-url", "server-ip", "load-time", "response-headers", "is-secure", "security-details", "elements", "exec-results", "language-code" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f254bd1e-7b17-42f3-bcbe-b895debf3399",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "jw2g2s8qabjhsmfnch"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1292871807,\n  \"apiErrorMsg\" : \"uxljlltongw833f0acjm7opk42h6943tvwqvhco4yn7i84npetg73xvswvq6bnxqbg5mpc3g1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f254bd1e-7b17-42f3-bcbe-b895debf3399",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.790877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2f542612-3d29-4af6-a1a1-a539302215ee",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "jbzi4nkadw43jythn9pzevjmj52ehb8uhhxou0ql3320bqtm5p496adilmsel1m5qouf1ler2m5ctxjkl4llinfch14wqcivuz30n3sh1fgxa4g3647dibtj3"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1145654484,\n  \"apiErrorMsg\" : \"vh96a5y3ni49cakzrpxz46sm3x21ett27nlwcnskck21yoblkdfbtrvoximdrw2iqdqe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f542612-3d29-4af6-a1a1-a539302215ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.790797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "25d164d2-8628-4e9a-a41e-1d5c2a71c1b6",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "frdt2k9gf2juxa0i5y11e61t1bh3mzjb93kdkrtnn2txibq34v5tr2g9cmjb8tq1ub7vlv3961s44mrnawviloqa8xz5qnih8lho6avug2vi6dncs4uo2vh4o4642fb7f9zng2iy79jg52uke7cq5acg"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1008040997,\n  \"apiErrorMsg\" : \"kafh8xfgje5jy5q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25d164d2-8628-4e9a-a41e-1d5c2a71c1b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.790711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0f54c59e-ca8c-46cf-bf80-b3410ef7a85c",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "2qnem21a7v317fhbmjdn4aiszhr6x5k22fa3mthkejk32pnfal0myhx3smvfw81fkhbt2qo0oirbqyz3mm74hoi96f6454weji4spp42f"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Turkey\",\n  \"country-code\" : \"rrrrs\",\n  \"card-brand\" : \"47qfgvglmlx5yitcvyzak\",\n  \"ip-blocklists\" : [ \"0ahssqko2l64f1y0reudr2grxrz6n5v8wrj47d0c2tf5quexiz7qeda2bfa8ovkpjtdw616zae1uf25fqqadcuob2i81aszgi367c99y24vkfj32kf71\", \"ri0py5ctga6alzab5uzh4g7\", \"zl5dqx1l0t2f7onhaxv4b842ddwmwplku816qg\", \"zvr3bh2gm9uh88wxyl8bm955pmhxo06qk5jomdj1jyow69fhokhbptryi1rkhfeptsl4fy4a\", \"7czwdlii5i5l5iftblu1w8d27s88leetubnr3u02wzxf2d9o3w5z5njjcwpazqnpvmyqw3jwpoc637y92n9owr0mmikjo4h8pvgl1k4d8w4x5aqz3jq3vhef7iqajhfnv7pg1cnj5t\", \"ed4s8t2rx9wj1prd5humjvvvtbtcp4t4dfq742zi9qrr71zxnzoboiz6cd3v72f54v9nrub2ka8ez6bddh5smopp4ch2olfk9wule9r4p442btczmwi0mco7nc85wuqf3o7cxmjwt6vlv12gau2j04mubl70\" ],\n  \"ip-city\" : \"South Modesto\",\n  \"ip-country-code3\" : \"g5jvdklenfkfp5fih8fmyfj5rsmcb5obm2e1amhykgye9tjo03qza4615l7xri4znlpn67oenawj65ba3xqs3mzm8yzzhafc5w7vdg3i6fiuml9gyqvfh2dwwry0sscs2fhze3uhl12z2tonueaaf2y11jf9ecxnagecrdd7usyl9mc620v32w92g3yila9sj5f7a\",\n  \"is-commercial\" : false,\n  \"ip-country\" : \"Belgium\",\n  \"bin-number\" : \"wydeddkpcb2ld90hrar4iyoyrbwy9jyarlvn4cjwjn5enu5i4efj1kp2xgao0myjbsm98f4e1d494wio0y7tjdv4752es482zp41xm0lglm373iui143sfacwinhgk3horflg8arhgi89ey67jksxudaavp8kfsnu6xcw\",\n  \"issuer\" : \"4kktu4ix5hcl04tcrz9n47h2d1wsm80p55ran\",\n  \"ip-region\" : \"8e2so6u050cxidfenr64mhhzcsxjgkn8ngxjjrjsicjaud7ey0qk876a6a9v73pxnemw8bn081ox5ximrgyfkydwn8pjrtktj15eajx0d1k\",\n  \"issuer-website\" : \"slzjorksp7isvi7viva4p4bllw03ftnmh2mw7lhqwsy95tnzlsd3g5nqo41wtyj7whav1jh73s6\",\n  \"valid\" : true,\n  \"card-type\" : \"u1injtl7bxj5rj87jb7bgexa085ltw266qpy2fh138w86nhyiu5jrsozerc2zog9eu70uxrv4rz4wdxnfw0syw2aql\",\n  \"is-prepaid\" : false,\n  \"ip-blocklisted\" : true,\n  \"card-category\" : \"2hjobftwoojgc4ky3ny2crdmsm97p1p\",\n  \"issuer-phone\" : \"(488) 744-9305 x679\",\n  \"currency-code\" : \"PGK\",\n  \"ip-matches-bin\" : true,\n  \"country-code3\" : \"uf3eud9xmvqwcu1viukgv81hws\",\n  \"ip-country-code\" : \"aaaau\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f54c59e-ca8c-46cf-bf80-b3410ef7a85c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.790602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "bin-number" : {
                "description" : "The BIN or IIN number",
                "type" : "string"
              },
              "card-brand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "card-category" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "card-type" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ip-blocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ip-blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip-city" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ip-country" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ip-country-code" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-country-code3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-matches-bin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ip-region" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "is-commercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "is-prepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuer-phone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuer-website" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ip-city", "ip-matches-bin", "card-type", "card-category", "ip-country-code", "ip-country", "issuer", "ip-blocklisted", "valid", "ip-blocklists", "issuer-website", "country-code", "ip-region", "card-brand", "issuer-phone", "country-code3", "currency-code", "ip-country-code3", "is-commercial", "is-prepaid", "bin-number" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f0690701-17bd-405d-8e13-60096bed6dc0",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 716181975,\n  \"apiErrorMsg\" : \"6xczkx9kfwfroks0c033hrq8jhtqc9xh9l8nerk0tprqin3s22wji8nsbcodgc0awp5kzo4kj2yjwzjqd8ren3eyhgc0h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0690701-17bd-405d-8e13-60096bed6dc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.78988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "74fb32f4-dd81-4e4f-a96c-52324c271332",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1448283715,\n  \"apiErrorMsg\" : \"t2gcwurk4kj463up60l7itbaciuwfnsm4vvcc81jjfe8fzrv7y9dndxmp9vf7e1dbc8gwpjbf85ku3qzlvpw35gjcc5o1ctwyuhsseshz6j4hgs29fr1wz8byr1ondnwshs64yc0v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74fb32f4-dd81-4e4f-a96c-52324c271332",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.789817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "94716409-41c3-405f-ac0e-be1e9f24a2b3",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 548939724,\n  \"apiErrorMsg\" : \"8xywl23ae95yl0h0uu3rlrb2afkshgwgdpeo9qp8194kb6ov5kuuxxgc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94716409-41c3-405f-ac0e-be1e9f24a2b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.789755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1bc0449a-4121-470a-a5a1-c2177e1bd678",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"46rp9fe98oht4eqqa83lgst37l2qmw0e3vcvgi1e8xofojd7um5gqf8bp1032un8xy1z49tuose6vo73i3roe3j3zt64pbgvcj8ocszzfy9xl6j2yswlemibfegvhn1v6d8gljb7w3f5j52\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bc0449a-4121-470a-a5a1-c2177e1bd678",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.789694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "e20018b0-7b4b-46f4-893d-032fba21ae7f",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 327110457,\n  \"apiErrorMsg\" : \"kglhrfnqb1du7buwbww5lwaz1towlxrfykuyjv50wj8vuk0e2hyszptxqt7np8z7g062wi1hxunjo6gd61pe54zehnkepjdlccuxnnyar2jo8izsw7f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e20018b0-7b4b-46f4-893d-032fba21ae7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.789638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "79e742fe-d74f-4f9b-9a13-670a5dc3fa7b",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1232020578,\n  \"apiErrorMsg\" : \"iyqb3gb3u7mbq2kjnza5lxxvk6ugcyglwvzd067rog2wvmza\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79e742fe-d74f-4f9b-9a13-670a5dc3fa7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.789577Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9ffc3a2d-edf1-4df0-a04d-46c766ab5cc5",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1806873012,\n  \"apiErrorMsg\" : \"162888dvhii3r23gqqll6eyj4r9jz2g591853xuq5m3ivnie0i1600x9hpkjrb60e1gv6twbhf5ad14n0b5asqvbhavbjuw12x9d130sqpq37yctq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ffc3a2d-edf1-4df0-a04d-46c766ab5cc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.789515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "74cdf393-20e6-47b0-aa83-4ee2660578a2",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"censored-content\" : \"Rerum dolores ipsa cumque nam. Beatae unde aspernatur in. Cupiditate et est numquam sed nam ut amet.\",\n  \"is-bad\" : true,\n  \"bad-words-list\" : [ \"j1a0bu1xkw3hsdjjy8t7stwqzljvlu6sok2en\" ],\n  \"bad-words-total\" : 480378177\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74cdf393-20e6-47b0-aa83-4ee2660578a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:32.789408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "bad-words-list" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "bad-words-total" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censored-content" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "is-bad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "bad-words-list", "bad-words-total", "censored-content", "is-bad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    }
  } ]
}