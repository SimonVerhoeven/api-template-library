{
  "mappings" : [ {
    "id" : "b296239d-8231-4ffb-8d89-23896bba04fb",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "eytxbt358z2km73ffwajrte8wrsifpe2p25yt30mxm0c8ygjqhq5qfx6h5b5ljmm66y9payrf4oisksoxbt51436n55bh1f4sw8d4vpb8aaagojtzr71ctpnxv3ax8o54dzhw9e6gs9dmrnvtf0ca59ynqltrb1chmmnnggem2vpgna9jw3ipplvqk349ny345ebv1jh"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2037039904,\n  \"apiErrorMsg\" : \"8m9gtkfyp078f4h2g9n5vw4wad\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b296239d-8231-4ffb-8d89-23896bba04fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.853209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fc4e40b7-8ebe-493e-a27e-cf112e56cf8e",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "7e0hbil3swtleai900b91z82l81fulufabrfcrplan82tcq307n10h42l0p47v91wp4l5n5k84rchn3vdh7x10xy0n0b3vnspspdaywqo3u95ane8lpjfk3qxr45lejkv8glb52x3s1vz20z9lb6o6"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 436328381,\n  \"apiErrorMsg\" : \"xzaaka5ltnjnvtwkuf767yhoycug3ikp05g74np7tes6p7yvrlg2l3812gzheiv1hnj75ltb98276jyhavk40kihjy69rzt9d41vstilgzt7gpfdpbu790r6y2loag2bwwr2vfbxgq08yeu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc4e40b7-8ebe-493e-a27e-cf112e56cf8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.853124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1cf753f1-cb90-4de5-a727-de94b9e5fb17",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "h5xcfdwi1adsfxdqvtil2h86kkjp2wjczuwxg84z1txleh0jv500cudtg7uusua2ggbhbkrry9458bv3nt6q5u8jdqipqhrlpaorgy262zdgbwbfcjr86u4r1le91k"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1987415079,\n  \"apiErrorMsg\" : \"09z16dwe3w76leuz1l7ifj5yb67x5rj4keimx8qp83tizw73jp8i1atceboro9r6wexvs59j93ufvxwfmorl27c3fjplercpj8q57d6h8lkuwau3j4uepovnnumi3kqmr1rnn0kw3v52bvs3yv7m2lygmdzik2w6a22uf20bf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cf753f1-cb90-4de5-a727-de94b9e5fb17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.853031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8d68b8d8-08c7-4d9c-86d9-745844b9469e",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "6pl0hv502pn38byv3i0oq2j88autib33a6r7u8acc99uu1i26jzms7waz6fny6xtdh0yxcw1hn36qisrawz899sfg32ej64n6xs7tpb8ucxco2tuywc847b"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d68b8d8-08c7-4d9c-86d9-745844b9469e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.852935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5e411422-d488-4352-a077-c0e8b02af7aa",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F318601"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1621314097,\n  \"apiErrorMsg\" : \"ub4fgpamvxoabb20vcpgevnau5aicb7drxevjmnd2jbdravqn7vytejd5g1ri523mryj783a312g8f6sqtt1nk9n2v0ibmp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e411422-d488-4352-a077-c0e8b02af7aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.852857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e89f7b67-86c0-4d70-bfd1-a5ee98db872a",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F262287"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1373899168,\n  \"apiErrorMsg\" : \"nzgntdssr0gjxhlrzft44mru3i9h71bxepuzuernh87p3a4bihqty93wnv4tg4uhe2m6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e89f7b67-86c0-4d70-bfd1-a5ee98db872a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.852723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1db9ae4-c83d-4382-99aa-fed0e82a877f",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F527935"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 68052076,\n  \"apiErrorMsg\" : \"9i6b6lbylj7i5yi12hksr8a9b0viaimfjlqusoloy6mdwy2h3r61s931yaekmozupkxexc9fo2hem7k7r4k62wu9o5au46z1z8bkxsmpw7g2lvkh4fie8j9dmug0438mi3ss7tchlu6xvk2ih1eqggb17rw0alh4l0z5dzjavl4y62f2sg6d48p9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1db9ae4-c83d-4382-99aa-fed0e82a877f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.852592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7a2f5a24-2462-4d47-a6d5-a79cbb57a849",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F327737"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"http-redirect\" : false,\n  \"content-size\" : 1836831557,\n  \"load-time\" : 9.234394961608765E307,\n  \"content-encoding\" : \"loxnz\",\n  \"server-ip\" : \"gv15seau9p1uacs7d532v09vg2ogt2kn9775hx7j4j7z8efvq92m35ykbbbh6o59qgkzcsq0orgcgh3oq0umtbwah4zyjdget\",\n  \"title\" : \"At accusamus dignissimos voluptate at.\",\n  \"content\" : \"Aliquam perspiciatis doloremque. Distinctio dolor molestiae officiis. Fuga voluptatem aut sapiente dolorem dolor et. Quisquam tenetur fugiat saepe amet eaque ipsum. Placeat omnis aperiam ad sapiente a\",\n  \"server-name\" : \"Millard Prohaska\",\n  \"valid\" : false,\n  \"http-ok\" : false,\n  \"server-country-code\" : \"bbbbf\",\n  \"server-region\" : \"3jrmusbzvfyho8e34se2501dexbzo3259riy0o5mw13krpdcjn9teo6xfgbxhcn\",\n  \"server-hostname\" : \"Damien Huel\",\n  \"content-type\" : \"q76vkaiw3zqho6s7n6q0ohc0vbxvyt8liyua6jnl0tnnk\",\n  \"is-timeout\" : true,\n  \"url-protocol\" : \"420tp9t5brzumz3zmv15aciwwbofv2xgozkpdbw5vgrgk5ofbyfd48e20qgtdvx5msfyzjye0x4n8xh20ipvifa26zip0syw8ti5qrqqdgxivvwn7td9817jqs6g0w9f1uwozjb6ekm5xyalj5j1pxfixwh1sbg0tvyaysz9fsvk\",\n  \"language-code\" : \"eoz1yv4lltvu0vrubjuhnjbtn7hxcwj67\",\n  \"query\" : { },\n  \"url-path\" : \"e2855jilktmxh0ncqkfxboypib905eew8dhjq0qfeyudnr7s9fnor21vdi8gu0inck1whsd8mk5iso4je74t2hpf708mwfw74ysaenf71nrfc1s9r1lsdgyqvgysru0tu90fk7o4yy9impl7f8mtgr4m2nmwe\",\n  \"http-status\" : 678756297,\n  \"real\" : true,\n  \"url\" : \"https://web.example.mocklab.io/230366\",\n  \"is-error\" : true,\n  \"server-country\" : \"Montenegro\",\n  \"server-city\" : \"East Bryan\",\n  \"url-port\" : 1642159239,\n  \"http-status-message\" : 343586337\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a2f5a24-2462-4d47-a6d5-a79cbb57a849",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.852444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "content-encoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "content-size" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "content-type" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "http-ok" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "http-redirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "http-status" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "is-error" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "server-city" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "server-country" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "server-country-code" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "server-hostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "server-ip" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "server-name" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "server-region" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "url-path" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "url-port" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "url-protocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "http-status-message", "server-region", "query", "server-name", "url-port", "server-country", "real", "server-city", "url-path", "url", "valid", "server-hostname", "load-time", "http-ok", "content-size", "http-status", "server-country-code", "content-encoding", "server-ip", "url-protocol", "content-type", "http-redirect", "content", "is-timeout", "title", "language-code", "is-error" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6fed8627-0b2f-404b-87dc-6e96712df0d1",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "o8tjxqvjceo65tyalkgd4wtduf79mo3o37stnbg8fscxqljvknee9szil0rd"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1095930129,\n  \"apiErrorMsg\" : \"gvul6r3t78b74002nozf5z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fed8627-0b2f-404b-87dc-6e96712df0d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.851705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "28320e54-1269-466d-b3e4-32d4966df98d",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "3bfqdq7a6as9pvr2osfrj4sgkisf58arvq6mjygbzgjmwcqrhsf1nncv5d827sua0ssvd5b811f3qlfdmg0l0jw8hl5vcjqsyhasqboutyou2"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 112941533,\n  \"apiErrorMsg\" : \"qkryk9u3g80dbqg6vyjyvqoebpqru9tdvmaff9407n49deot3y4mvq5li6ce6m370crbeea3h7773kl40pobzdgaovheey7zr4w1vtz1nmctmk6enqo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28320e54-1269-466d-b3e4-32d4966df98d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.851622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cd232eb1-6dd7-46a4-9fbe-8858807136ba",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "y5vddagsf5bpqvpvmy9bqy3hn8aw7kv7lhznbd2ptfq0lss04cimeuakr5vl2ieqg4kcye3ibny411fynrwf9mi5g63htvzwk4xxmfvko7okbh6l2vqh7v4cy2znrpxh77k6j67ppug1"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1040806757,\n  \"apiErrorMsg\" : \"0te6811fesncohe8o2mv11uqnfshfht91u427gdzn6io0ria16i1wl6wvx47\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd232eb1-6dd7-46a4-9fbe-8858807136ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.851538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b0aaa0f4-6d59-4bed-b121-774ac4a5db6c",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "1wbtarjxd3g6arf054aw6v6fa8zco78iaphibcbo6832amvx6bqz8uf6p0q3jhr9g0s9jn9t5xz1mwuxhbcq67ci0qov0dz0l9ud0pq4wgny4z9d278tc02i1tgjtnlpe65r4bq2s456aezowwikfjw2s2o4488v2gvfazjik"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device-model\" : \"bo7puiquw8cu5ehnw4qoou3hsz6ti2ev0v2mvboux2zw72pi9dq7vd6ucj9vx1xwruk6acp6nmi7k4kek3j8e6t6ve63t71b2oi5my364uahsveazfavklfzkh919hqa7z37ww8emrekm83z41eueza28mriye\",\n  \"os\" : \"l2npnxvlw2rrm4fmen6mftbl92f28dp7b27f50wyk87\",\n  \"device-brand\" : \"ko83q43keeynxjwx09uedsw5l0isjz9n6z281zx2g0seg0y5kgcjzer6agcu1ca46bczm23idcid3ozukyrpwmll6ogiksaku7es9ry2zle4jgdzul13xui4j89kg62d4n5gx8mwv40my8wd4bhmif2eo74r\",\n  \"browser-release\" : \"3tlw4ygeefu3bcqcdqw5lpg7dt0w7dkb0pk23l9aq4myrjfd0znix3q5k1dh3p6ga8lwor5cgtay9l3tei798l5g6tkwob6v17l1nz\",\n  \"device-height-px\" : 1.3632765791250585E308,\n  \"device-pixel-ratio\" : 5.551869395355882E307,\n  \"os-family\" : \"6nfhxiu8mp7zktqv4ncauqllv36b5bbj7hbdbymand1koxm0ene28f4cv2f2fs5ue0gfe0dz243t9gei6iqbgj41mi7t02nrqwv4l4a3zeeleagbr5z5q3fufhuv7hjqn2v3vuhav99o9ripi7yri73o7ev5m8ozu82pdhzwx7e7omfy90ihg37\",\n  \"device-ppi\" : 1.7797720740372483E308,\n  \"device-price\" : 3.2571359732375345E307,\n  \"type\" : \"esrt98r7m1j7hsa1lzy5rr5tgd2t2kahut77tjn787i5ixtf2hr8fguhjmrjzh8idx6\",\n  \"ua\" : \"qaixvvrrpd83a60wz56wh21z4m1jwqifnnc0xycp0ibv3nxhh72r6cl93ptvkq10fm337kxcbj0kxj6nsh0neva\",\n  \"os-version-major\" : \"xkqi4ahixrigz4nvpyfk5jvsqc0ovumwkbrqeb0jpjlvthdur68up90dd2v5szf7mqpd6852naucnzqlx2k3ai97kb7l34pjtvt35lzfx4aggzxvf9wtf1\",\n  \"version\" : \"crogghudk5xf57hsutbojsgosn14azoyhgs3ujp\",\n  \"version-major\" : \"a5x3npsam70vhwb1tbx06cduurlfqud94km3lb4h3pq9v36xgbum0shao88ms2rp2y41n20jciu7i0yn9r2xbr7whua61l\",\n  \"browser-engine\" : \"7x2a32469a5ocdz9nsi576egzedbha7itfwfgkqdnxo\",\n  \"device-model-code\" : \"y9o4uc9mq36prjyd2wb968yrrnjcbt63iqz61vaqnyg7l0878mxmmdp897ues8ozojhiq65hw5aalxb23akq0jrmdi3as5bk8al0b5kzwfz3q71ke22n1v98yitibtxku5rgtfgrvqrcxqci9gm4ww1s8dgszff13nob7oh7d9\",\n  \"device-release\" : \"53vjp5m02iglmjomiw71lk7ja1rfxc29xvmxvv9d8dmxa82lytrvdj\",\n  \"os-version\" : \"9pynwwhpwo88r07kcsrozf62gpmpu1t2lujebow59ipom2ldit19lj\",\n  \"name\" : \"Elsy Hackett\",\n  \"device-resolution\" : \"c2n13mo4pl2qgyxwrudzfq8yvtau2r9fr4e8lobvxhs8ikemf2vjce4pe4l1l8fl94kvto3shkafx1yqw6urnbx8rb2t7290959z1moisp4cbd845eydtrl2i3tkhxset40onur1f5l73swkjp26nkg8yoig49vdqs3edww2l7ezp7jvx3w58wu5\",\n  \"is-webview\" : true,\n  \"device-width-px\" : 4.474383049860739E307,\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0aaa0f4-6d59-4bed-b121-774ac4a5db6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.851444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "browser-engine" : {
                "description" : "If the client is a web browser which underlying browser engine does it use",
                "type" : "string"
              },
              "browser-release" : {
                "description" : "If the client is a web browser which year was this browser version released",
                "type" : "string"
              },
              "device-brand" : {
                "description" : "The device brand / manufacturer",
                "type" : "string"
              },
              "device-height-px" : {
                "description" : "The device display height in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "device-model" : {
                "description" : "The device model",
                "type" : "string"
              },
              "device-model-code" : {
                "description" : "The device model code",
                "type" : "string"
              },
              "device-pixel-ratio" : {
                "description" : "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
                "format" : "double",
                "type" : "number"
              },
              "device-ppi" : {
                "description" : "The device display PPI (pixels per inch)",
                "format" : "double",
                "type" : "number"
              },
              "device-price" : {
                "description" : "The average device price on release in USD",
                "format" : "double",
                "type" : "number"
              },
              "device-release" : {
                "description" : "The year when this device model was released",
                "type" : "string"
              },
              "device-resolution" : {
                "description" : "The device display resolution in physical pixels (e.g. 720x1280)",
                "type" : "string"
              },
              "device-width-px" : {
                "description" : "The device display width in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "is-mobile" : {
                "description" : "Is this a mobile device (e.g. a phone or tablet)",
                "type" : "boolean"
              },
              "is-webview" : {
                "description" : "Is this a WebView / embedded software client",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The client software name",
                "type" : "string"
              },
              "os" : {
                "description" : "The full operating system name",
                "type" : "string"
              },
              "os-family" : {
                "description" : "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
                "type" : "string"
              },
              "os-version" : {
                "description" : "The operating system full version",
                "type" : "string"
              },
              "os-version-major" : {
                "description" : "The operating system major version",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "ua" : {
                "description" : "The user agent string",
                "type" : "string"
              },
              "version" : {
                "description" : "The client software full version",
                "type" : "string"
              },
              "version-major" : {
                "description" : "The client software major version",
                "type" : "string"
              }
            },
            "required" : [ "ua", "type", "name", "version", "version-major", "browser-engine", "browser-release", "os", "os-family", "os-version", "os-version-major", "is-mobile", "is-webview", "device-brand", "device-model", "device-model-code", "device-release", "device-price", "device-resolution", "device-ppi", "device-pixel-ratio", "device-width-px", "device-height-px" ],
            "title" : "UALookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "acd97a06-ac72-4d76-8256-63f0c5ec8fb0",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1241695088,\n  \"apiErrorMsg\" : \"s5r4pnmhnduhw8kgokijgtae7a8p7rmzs7dda4uzwbjmwtl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acd97a06-ac72-4d76-8256-63f0c5ec8fb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bbef12ed-2ddd-4285-95da-88c953a7358a",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1292429254,\n  \"apiErrorMsg\" : \"ob96mpl9cxgx3m046sl3hklvy2n7me5yu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbef12ed-2ddd-4285-95da-88c953a7358a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "73db90ae-f869-4832-a9f7-79e2b53f02d0",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1056008343,\n  \"apiErrorMsg\" : \"sb8g0tbq8k13977w82py7j217399tqyz71o1ka14mh1ngx89b33jwolf1nnp45j0pd8u6ozit5rzzby2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73db90ae-f869-4832-a9f7-79e2b53f02d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "12cf3e63-69fa-4ad4-ac01-8b7fb681c860",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"o02jmi2gmxe2aive6qk88x0vglzeu2gz59aaodbzg93hh116ucg10z127csejujrl92eyaeknixj\",\n  \"sent\" : false,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12cf3e63-69fa-4ad4-ac01-8b7fb681c860",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "number-valid", "security-code", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "68882101-0c74-4394-a706-e2c18c8d7a01",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 175190713,\n  \"apiErrorMsg\" : \"sng7uvwt1f0io09ytoq57xh9q5nf5nnfiuv9cng1qakl8mxzluztk3fdn3s1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68882101-0c74-4394-a706-e2c18c8d7a01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "18fedfe4-d22c-4fb5-b69e-763f0addd8c7",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 932508647,\n  \"apiErrorMsg\" : \"wohqw9xwz9fs08bedxhmhe7gmqslmco6vhdc8t4f8n4zyox4m21tmug12fmgvt45r7q11dojrfkmajsdvej5ouzm5nz7c4o0hp6c8cok4tsswnmvuwslpcm19vnt5tgw7cvm495ng4il5eh4hwyqxq7ch6f4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18fedfe4-d22c-4fb5-b69e-763f0addd8c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "56b93827-7ec7-4225-8695-416668d51092",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1599304669,\n  \"apiErrorMsg\" : \"smr7s6cvbmh632p6xd6aecu2ui2b6ulpw7gz904xrf4apd96lx0z1envpbsgok3wpzrqzqx6ytqmp1m1lepc6m6pt27vmm11t2ludg3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56b93827-7ec7-4225-8695-416668d51092",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ccf2e27-c862-40f6-abd6-1355ef823389",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"wcbiylw9fzlpdfvzcmq38bpqotteh3f4pzolqbghxnw9nn272cibrwn41jkizd1k2el3kk9i\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ccf2e27-c862-40f6-abd6-1355ef823389",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "b983e950-117a-4b43-8cc3-6264cf1ad57b",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 680527913,\n  \"apiErrorMsg\" : \"pxrgm2vd2lryv29lloao0b5lfv2ihv0km5qi4icj9eu48udrv0qhn6lnzpui0cckq02nhg0xrog69qdm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b983e950-117a-4b43-8cc3-6264cf1ad57b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "55e7a31e-19af-499d-b2ae-abb09045d25e",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1173625478,\n  \"apiErrorMsg\" : \"jqy25tnzfbtd3bmj6c9tb6ixubrieo0ronlsixytx5b0sjputot3hbt8s5153q9uv4srfdwdq4pt6t0kx68xi37eoeq5843j9c3gh9h2is6tqkrstl49y57ztii5kuy8o0ylnast88jy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55e7a31e-19af-499d-b2ae-abb09045d25e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "db59404e-394a-4409-863c-9b1d5e32a9e3",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2118111757,\n  \"apiErrorMsg\" : \"33hj4i9x95xkihvl179tsb5z90orgdwtypkhbu4mh3tcsdutjaip16ubhl844qlhkd8tv400ylg540v7jdnjtkrhw54wgi0qb8684f685z6x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db59404e-394a-4409-863c-9b1d5e32a9e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b94b5506-bb67-4ac1-bc20-29e08a28f317",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"b2wipyiwyic55qnoacncm2nox69xwxmliu8132gf7tltqqmqsblb88gpivc3qatr1m82eje2uo2rtln55k4i5enczb9inwr0g9ch6y3xq8s89boyveslhwc0bc8uvr8tjnu5uk1wuhujfwunguir6ti31k2qn3ok2\",\n  \"calling\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b94b5506-bb67-4ac1-bc20-29e08a28f317",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "calling", "security-code" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9fccc1d5-c5f9-4e56-aebb-9487ece52f75",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "ipusvn8"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1288248112,\n  \"apiErrorMsg\" : \"vj4cdkdy4xga70y5h7l5qulbwm40j9kxka9emom11vktifi6ppdo7s05alczfolztsdnvpvboo194nvmo3vpzkgvc5vhfa6n37e1ial\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fccc1d5-c5f9-4e56-aebb-9487ece52f75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "53c5a2f1-ecc6-477a-a0f9-a04f03a4f8bd",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "fjouxvxjvxhpqu2ndgzqc6kq8fwery88k8ffyr45yrfyln4zvybjdk94gcoaa08mgc2uv8nletyisbk5i55ebtsnf8f1jax2z7disurn9f3j8py7t5t7q6m5va297d5nkh4cjrc3fqk14qdfh60wzbicpm7tglwctvqai5tpy"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 696038195,\n  \"apiErrorMsg\" : \"6hx0zmbo6qh9mos8jj53eiphz7rtcvwr1c0fd02v458k0r14mujryd93qd0ygpqhk84cdt7tgne4zycoolmhlt9zdn5s4ad1hamptd3ofr0s95k2g29vsnydb58i96t5yc7p3uu67t0pp2vozf81yv4hhgzo1gcjcs5h7qnkg9wdnjp01z7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53c5a2f1-ecc6-477a-a0f9-a04f03a4f8bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6f18f5d1-af5a-4e4e-be0f-43925e7a7d85",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "8ot"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 10103661,\n  \"apiErrorMsg\" : \"qu5fyqgg0o1bnubl5i42na3fj9l7j321rj809gzuexcmm5r8lv7w9bssfc42tr09e9w3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f18f5d1-af5a-4e4e-be0f-43925e7a7d85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.850009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1c11a786-4cb0-400d-85be-da24a76d9a9a",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "hkrz3uz3hu4gu67virifu2nv1q0pzub7d7jc9pnn8v3tnsi9oel9hznfvj6ys9a7bwaw6d3xmc9anl9kzets"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"country\" : \"Belarus\",\n  \"country-code\" : \"mmmmc\",\n  \"prefix-network\" : \"g1dswuiqkryw3rse8rln1tukbdk2cl7z0sgxrv87eg29gtercmd9lnpy84prfeisfblepzukjrivi6cc37eau9uy6vdowxxnc77ku9kzrsro\",\n  \"international-number\" : \"307qjmrlavfoos2gcrgqpekpq22qfkq4oobicov6q4knol0rar27j4\",\n  \"location\" : \"6bvtcridbpsyy6p1hpht8g6xg29ungza33h5qn4k563sflaxmkpb9umn8rcrexp1kar6o4ump0qwlu13t55tg3p5w70weeqgi2i4smaxi45764jxmlmanu7b\",\n  \"local-number\" : \"giyx582vhx6lv5e2zxpq1lrkq7edruvenqkmcgz3mmcb0ik6wj4u1iacfb3yg89z73kuy\",\n  \"currency-code\" : \"BDT\",\n  \"type\" : \"pniobaa6iviot0jastvr9b96grenvu4zlkikdxr180cdebxii4gocv1j0dh7ftew1qd3yoj1uni2dfkktammdtqwq3jexb2tg4vekaajlxcbofe6dz4p0d08nomjaep4zkznegtqkfaoh3dmfyciyuwoup0yjt\",\n  \"international-calling-code\" : \"dibg46053jymanlxqhf69hsty0z42exyj0ga323mdl574zzq98oq8ps5mk1c3ayijpxlrjl9pctn44d6joa89f9b0mh4z6l60a2dnr2t8vbh57mg5qzup8ama09hywej8z82rwtyjk11\",\n  \"country-code3\" : \"gkg8ww133wvsheslvo8stnbd5z934v4g909c8lqcd5on9wlishlyi18alechl2fhnzfurcmakyr1eqgu8yq04rdzxtffofqwrbv8pyviidkkczk88bip4a5ceajddinzv58ocrfs6oge\",\n  \"is-mobile\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c11a786-4cb0-400d-85be-da24a76d9a9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.849924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefix-network" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "international-calling-code", "country-code", "location", "is-mobile", "type", "international-number", "local-number", "country", "country-code3", "currency-code", "prefix-network" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fb3eaf6f-b551-46e6-8c06-2740d532ada1",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 592059973,\n  \"apiErrorMsg\" : \"7yjxhljwpn6r5nf7kmxwuu98pnuwtayo7rgxszoliogrhxd2ftvyef22uwgsris6ylyhfwf9suodhnpl86bmd9z1e4vsgbs6hv6mz834nhyg084jfuusinbwtvaf4h78wtyvv28xzd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb3eaf6f-b551-46e6-8c06-2740d532ada1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.84962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84247de5-e6c2-4ece-8904-3c70a51165b0",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 609988215,\n  \"apiErrorMsg\" : \"mphomm8rj3xi0kdy7xxeiunzu92b3ycv9qlrwlq58x0jpt4at8k8kb4h3leq70jpxq8x3cpx7keazywearnrhp7xezbbplec4ehtruilu2k2bzfunnjttwlt1juy8hhhpk87osnrvdx4lqz6pgvkjp6j2tqt27gkpdtk550ogk9qxwdd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84247de5-e6c2-4ece-8904-3c70a51165b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.849558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "87e7fabe-1d26-46e1-8fb1-a86432384fd0",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1250569294,\n  \"apiErrorMsg\" : \"fr5cd3t0ztcy31emhf6mazh6nk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87e7fabe-1d26-46e1-8fb1-a86432384fd0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.849496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67fa8e81-53ce-40d8-ab26-70f72c34fee2",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"calling\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67fa8e81-53ce-40d8-ab26-70f72c34fee2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.849434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "number-valid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "816f8577-6257-4e37-ad31-2179cb811818",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "fgjml794ijosnpn8siy9wf0hbf8oxv3vxz"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 542355033,\n  \"apiErrorMsg\" : \"nijrsgql82dpvd10spf74u6n6l02x12nj07jji8mvylmg78uy9g7rs1clcr7h4tpkwpj0250qso2kccxuq0bfarf2zoxmcv2smt9krghrd7f7kmc8u19gt777zh5dhhtoibzq8vl0550mzhws6x7wkeom8cot8vns0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "816f8577-6257-4e37-ad31-2179cb811818",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.849373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd7446f8-7a7e-445f-99ae-467bfbac880e",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "0nyh8p1b5om0lpr05wacw3ebkkmcea9jmn4qxh504uh92jc11407yvcmj8svrsje5hcf99amdc"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 990320234,\n  \"apiErrorMsg\" : \"4eg98n7ub5nvnbfpndp9ju8xzum\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd7446f8-7a7e-445f-99ae-467bfbac880e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.849286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e9d031bd-cbca-45e8-9adf-1bee86d14d82",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "oqv9e4voxp6zc8ly9itu8e76j22xm6tawhso8xmpbs2tjdev046k34i1siqx67qobfeu6k2zkrvnhxdz4bhwson4ul"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1622605621,\n  \"apiErrorMsg\" : \"yobmodgt8rwbp3de8q9zu3bp8qpnstacn5mab1x3f7pdxrt4mnanmxuzc8g0y1jqixzz119g1zwpe50nln4h7pxviv5sbayyd46subs072bbz90ew4amqp1plj6s62zpjsc2olaf9klms3j51\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9d031bd-cbca-45e8-9adf-1bee86d14d82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.8492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd8f1d88-f9bc-4f29-9cdc-ab5bef5d2c22",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "znv3bspuczf8474ieot"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"rbnptdakrv67eluwo7b711e9hhy7lp70q1el9cfg8w2o6z3\",\n  \"country\" : \"Liechtenstein\",\n  \"country-code\" : \"ddddz\",\n  \"provider-domain\" : \"wueroz7qg4uxbpvs6ew01jmpqinw4322f0is6xcz2ecv14t83mu83k589v27p5rxfo8acmalqjq0xif6f30s629bk9az84zgg23h2hnp9blfc7yzm36kj0whr9ifdhjg2mvp4\",\n  \"city\" : \"South Hershelberg\",\n  \"vpn-domain\" : \"uwoaf0yn3zu4lfi3xzighep18rx85rdjsd5voenv955fdw0redode9x34ur0fixjxn5dm2g8rtkgugg2gmnperd8dxzrpdme5v44xxb6w\",\n  \"is-vpn\" : false,\n  \"as-cidr\" : \"3n2l8dzxqep4oxkruuntor4py4k3pftsjvbom46gf1ikh2qnypbxqf9nrnczeg9m317bxne5ti7is4dwokd0vik1o07ecl0y8uc79j95svto50erpeh9bcdwku9ll9fzi0omefdgy3j0kan30824e3tb3\",\n  \"valid\" : true,\n  \"provider-type\" : \"bbz3ze5cc1iyvw\",\n  \"hostname\" : \"Tristan Littel\",\n  \"as-age\" : 1232022106,\n  \"continent-code\" : \"3zv9o\",\n  \"is-bogon\" : true,\n  \"ip\" : \"usxqqi5iyydchly54xujbp2zaye5xnl1ndixg03n\",\n  \"as-country-code\" : \"ssssr\",\n  \"provider-description\" : \"Vitae ipsa corporis. Expedita assumenda accusamus natus ea. Ea sapiente aut quam expedita quia qui ipsam.\",\n  \"as-country-code3\" : \"ii5a6ib8xodxa8mkte1k7n10i3ztujttie0xcwxo746zzjcm0vkh8kunoj9w6omo8i955ayfpc6o4kpj7lo\",\n  \"is-v4-mapped\" : false,\n  \"is-isp\" : true,\n  \"as-description\" : \"Corporis aut sit aliquam et. Quisquam placeat quibusdam vitae rerum quia. Iusto eaque dolorem voluptatem esse. Temporibus ut fugit consequatur.\",\n  \"provider-website\" : \"hx6uf6on8vycp1zs5gyvg5j59yaknkdux3uslyi963eo7qoe0yeg5s58axxu5a3uob2xuh3ilxp8erwawz6iooavrzihmr7bufc\",\n  \"is-hosting\" : true,\n  \"as-domains\" : [ \"6ott6072bnolgfqbg0frtv14isr4wbi2z9jo1tw382qvxspeeboe3zpg9r9po15n7rwb7gx3l65ndkmqgl3r6bvdd9ax6x0b1et0g3qylzt96hnni13wihog6btdxrdd5hatslnt13hhmlmbl4hffgqcldjh3jyhop1f3q0nfoxuyid5gxo5\", \"890oea91woov0o45rymb3tqt\" ],\n  \"host-domain\" : \"idagrlq6bvjng5cjkw3yzb7s81er39rhbk4bhdn6z9aqpguh5tpn29h5cg1zn5me9zqm2rq1z063l7zv4zdn3o2vat4iqsaa3vqysky388dt52f1lg\",\n  \"is-proxy\" : false,\n  \"currency-code\" : \"CRC\",\n  \"region\" : \"djye06c6cmudic6rmdkhsx6i37yhodcoz5dutr03vy982qsm4ljzjl04di6f11jcc04rv3lqlgv1pzk40crgpl1h9hkser2wb1xha8zprxt8pbvzgk7wyx5cixz9vydpp0\",\n  \"asn\" : \"rlf3tzd9zm11ltugje3wch1ktla228jlwfjdmcjdy370agftx3a2kog9vx1ctqcmr7iz28kaywozoo34ptexx7uf0wjqrdsnmzc5h4yk1d6kmwiggjvusstlhgauuni821\",\n  \"country-code3\" : \"n1uxu9x2mdi1pdgi175ey83nig35enoeztztwv0w8gn38j6piugud4n2hovevyqxqzt6xx9l5yoc8nuks9jlimzil913ztey08e4a91xuf7i8l77j\",\n  \"is-v6\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd8f1d88-f9bc-4f29-9cdc-ab5bef5d2c22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.849099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "as-age" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "as-cidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "as-country-code" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "as-country-code3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "as-description" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "as-domains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-hosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-isp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "provider-description" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "provider-domain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "provider-type" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "provider-website" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpn-domain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "provider-type", "country-code", "hostname", "provider-domain", "city", "provider-website", "ip", "region", "provider-description", "continent-code", "is-hosting", "is-isp", "country-code3", "currency-code", "is-vpn", "is-proxy", "asn", "as-cidr", "as-country-code", "as-country-code3", "as-domains", "as-description", "as-age", "host-domain", "vpn-domain", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4669098-28cf-4876-9f95-4465c4ba3f45",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "8ne5gwot9vlqgp4upk0"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2098370191,\n  \"apiErrorMsg\" : \"yma8zlp4qbwz1hzovkqhwc85nzw84yrmix8tol49ckjs6jwzrjmsqrrkiqphqeptnpbnc8h8iiw1a2g032x9wn60ryfk92wiurjgansxqfrftrntjknn7m6z1i5eq43c8qdp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4669098-28cf-4876-9f95-4465c4ba3f45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.848354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "983e190a-5653-4044-acb1-b1716c2476f1",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "lehocbl28s9s07js4thv4rpvf2hy2lxpjm9z2pnqbkzgqoa"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 330451860,\n  \"apiErrorMsg\" : \"bhu9xt1qjffif850t81xp6c0mzlyk63l8txlqvzocm6jm35eu53b0iwh0qn4dajxe8qbgnkozd4vm9dk6mo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "983e190a-5653-4044-acb1-b1716c2476f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.848266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3d7998a9-cab7-43fa-8346-fe94e7fd3308",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "e1z4mpxohor2n77dvs9zm15wcuzsgkybjjno44ks7wz0g85pjh1lziibcizdub45bkuy53o1m0c4o3ygup73kpq1rk0q6vnxwzr94ftheu8jhccqyb5oniifxuokcujuehjxjkfn01n59qpjpjrhyzk9771u3lyw"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2012659895,\n  \"apiErrorMsg\" : \"5ux44x9we4gxuq3rtr090hsm7o9pe4l7pak2ux6qkk5asycgfl4tmvyjyjcpwx9f9uvwcbm59ffnysc0dv7qh1e9qwq8wu504gidpyjiqnx49dx2l78w5v1mkzqxijsalqpamrttm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d7998a9-cab7-43fa-8346-fe94e7fd3308",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.848184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5cb404ba-6e10-4820-8224-1be4d8ebcfc2",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "dr742rghzbhl03fhypjijx0hxoznkktra4556aoaxbiedfvqrib8vntskza5fam4tv8dox65qm1lq7m9pjnzsf5ngfede6832q491z6amg2zixkke3tdqpt7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"weuznf73wqmkn48tc0gmmjsnlv0liarjgvtqwx9p83p9ht8tzi8m0rbi4bk39boe7x01xq7fuzkgna4yu2a2n74fne00a2c9wcjmwbgo4so1sw63p0288p4domlh1fs1a8dfa3ecl7soyt8cxpj64ftl3dh6\",\n  \"country\" : \"Antigua and Barbuda\",\n  \"country-code\" : \"bbbbo\",\n  \"city\" : \"Kerlukemouth\",\n  \"timezone\" : { },\n  \"ip\" : \"dxh0iozfe6zcug9wrldlbvpyi2opv73o3v2usd4t6y8sjsfuxyzzvbpgp9xi4rw9efjqm2tbh1t31h7o7fq21mpu1q715eowzelsdnfrvdtp6alyplug26nha5f8aew\",\n  \"latitude\" : 3.5134520117168607E307,\n  \"valid\" : true,\n  \"is-v4-mapped\" : false,\n  \"hostname\" : \"Jeana Dietrich\",\n  \"continent-code\" : \"dw1dt1dv5lgro8lf0e88d6dco8m\",\n  \"host-domain\" : \"d1bcn\",\n  \"currency-code\" : \"PKR\",\n  \"region\" : \"t88nyv01l1r86zc5xp099lug2vp3ou9gimnd9qjdfm9m11kolw4yfzybui6pfkkn3kpzv8l5uzqtycd0np86t2wydygfb0vurkgtrmo7t4e3ar7ffb3grn98ihehsc61f40scjb1x54xdzeb7aelpqbopmluaazg2k7kb\",\n  \"is-bogon\" : true,\n  \"country-code3\" : \"2seqhij9099jabn10sxxcizj6pcuh120ebxeh5vzlxaci8yiqkfgs8yne1cjxos13y2orz21keaf0ywzff\",\n  \"is-v6\" : true,\n  \"longitude\" : 1.4136478269080602E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cb404ba-6e10-4820-8224-1be4d8ebcfc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.848091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "country-code", "latitude", "region", "longitude", "continent-code", "ip", "country-code3", "currency-code", "host-domain", "timezone", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ad57f1b0-64e8-4a8e-8846-cb5a35b9127c",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 82995579,\n  \"apiErrorMsg\" : \"vyw3amnmuwevm4kmkigb0o2dpk90woyi619ioszx2zb19l1cml3mlxuq683zwkhyga1vx8w8yqfi7mbrqpzbymh8v938uis1qd6joqp6v7a419vnb0w8wvan2r7jx1aasuymtbj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad57f1b0-64e8-4a8e-8846-cb5a35b9127c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.847639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f1c84cd-c96f-4b5e-9c75-31b927fa1f2a",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1491317154,\n  \"apiErrorMsg\" : \"4gq5plzzt6j3m9g3xz3bkozw3gmanvs3z3eax30tlqrj1ayx9hxsgj7soztluvwbt5csdkshdwh5mz20rdzb53ielsovttt9c3mmt40pqye44056nnvxl0h0gd3g39upiyyg2ay3cm4hb4agd3r5j5ovxtil9i0ecxu3fnyg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f1c84cd-c96f-4b5e-9c75-31b927fa1f2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.847575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3334d98d-dd61-48b9-809f-56c8eb4b7390",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1636113151,\n  \"apiErrorMsg\" : \"rvuc42hqctxgzxskgwepsok3jcya81lsid5ha14azhi8a2m3e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3334d98d-dd61-48b9-809f-56c8eb4b7390",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.84751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d896730a-7105-4930-b604-832fd5e0cbb7",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"y2x961yv8ae24cjluyfkipjlvkmzkc2o7bji5hlni59riur59l7t9oubylx58xaslxyvln7gumee8nw9rwfxijwot4xie0lg8qbzwg475n9fvku7hfiwxyneoc5s7c750w1frnmwmbnin91cxqk\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d896730a-7105-4930-b604-832fd5e0cbb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.847449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "1da3069d-664a-405d-9df4-fd876e89bda9",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "6ork1y6nmp48j8iofmmopn9yczltnmpky2n00ab1kzibi9iqjr1bx4ei1vvycax8t3j8tsx8l15fp07j21z0modagtc5amxwnjqfivr"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1904123178,\n  \"apiErrorMsg\" : \"vcgyb4jz20f3nx8c7f7uouyp9ubfza3phqlqkc8419wnhugkstgbdf3nqzvoz9u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1da3069d-664a-405d-9df4-fd876e89bda9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.847399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0020ce90-8dd3-4f44-ad2c-8bf1ebacc6c5",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "hyk1kxxjukz6gxyr8oj03dlc80d3llrh8rcm38pi1am75t079qso8sskpx1a07dt0yk67flsh71sfv6z9zb6sgup2zxsfh1uounzj7xlzjdv85m3vkgazsi7uiexv6x9tt"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1136582179,\n  \"apiErrorMsg\" : \"er6qh1xmukup86eaw7ga8axacgmcod0fgaq91ny6571fie9x8gsdcffx2brkrakqc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0020ce90-8dd3-4f44-ad2c-8bf1ebacc6c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.847314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dad5296a-9842-4a35-af82-51f41052472b",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "2ceux6gxkhookc4rf6ea5fal77o6mluw26tkdstvg2kspi16gybloyl91a4fdwvscxfph40laxt3zfscwtxhigpy92m17wyizpqx96ia7q62a7"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1613474058,\n  \"apiErrorMsg\" : \"69g1sa43e2mokjwe083u5u16zw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dad5296a-9842-4a35-af82-51f41052472b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.847228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a9971215-39aa-413a-8659-6ee45ee0a5c2",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "ensfqene3rqd2zbpd73dsvfxwu8v7rd60upyn19t6bw8tmsdw1klv5h7l668q69mopzvyjgk03xnm2zavldp9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is-hijacked\" : false,\n  \"is-spider\" : false,\n  \"is-dshield\" : true,\n  \"is-tor\" : true,\n  \"is-vpn\" : true,\n  \"ip\" : \"btebabt1g30i3iqn22eap65oa4fuwvz16lmhmohggpftlxoslohd5ceaz8md3ajfintbyxdba3mla50dmjdfnt5p25vg69vwuznds7dgdo6ncvt63hbvs0rh6ashdvaqfoyjmldzqz058ef\",\n  \"is-spyware\" : false,\n  \"blocklists\" : [ \"mengg3nfeesf78samz6dpu2ok6dre53vcka5hpsgeg8600ycini7lirs42p5tfjqo7fq1letk88ba6ecr\", \"rnfb05xy9mpj0wkzia44h3h9gyde7deo6ndhts0yyjjib84kqlvurbustamsp9e0gtxbkyk93jddxaq1jo58dsils71t4zn3ahnb6q04ue1w6tyenyggnw0v2p5zdznopbv7y81q5kx7reggd8ykah5jc4ibr7z\", \"ay5mtrlyibu7kmft24s7dlkyb3ghojs3v7yv3wo65oq5pr5908d3b8qe7ix0q5t23v8jr3y8qnm5y4vsmm9onnk1wpsrb1899ksxzk6hsm40ekoo16ac7f6rfqnspe0vywylh8bsdrxnn70icg6tpwh77r39l91dxwajb2cfhc5ls\", \"zv3wsprjw9cm1xj6tlff1jsi39nibi48m2km99fww06ufljtmpl5dr07az2dnsg79cotkunf6uskeifo\", \"447mglxuktnj703amdua8f11fcrt9rvdkp4zpwqaow7sjfg2t8fhlhf1c9y13he52rawr1dinsrr89f\", \"go65ltfk5uf36xxhgs8rwpmj10ji7n5nb70bclh1f0z6rny3hkkli6\", \"qmsqdantno2mid7bypih1q1s61jl5ny9pc3fv3qjfqi0cgj3607dvk4i3g4wkqvgivunyv1mu2ewtz2i5rdup7mbdadgw6ozw6di7i6m3f05pdm6v36jmrinyr82hgou710s1o3w6xn13ww5sa52islbkscdugxaohw4xt9ab9ztgnciw8qpm\", \"p6u2lc1tcyurs5lnausssf8xbbvkjtbum99pr3rajd8ebji5iiz7r2cwipy2b2nsvzt1j0741ntc6kdx2i0qqh88nl9gw83xa39zqdc81qjs3gz0powj837mofwqb675zzihaxqhv876slf9sizgzo5itz2luk7fp98hdp59h2lu7tpq2up0e5avv\" ],\n  \"is-spam-bot\" : true,\n  \"last-seen\" : 1705285400,\n  \"is-bot\" : true,\n  \"sensors\" : [ {\n    \"blocklist\" : \"cq4lbz10ohamg5hbdvljzjxmwjhnphla5w0hwa6qcjdgceuxhaaxpdnxcxy9vv6vd6eel8d31r7w5zdrb0eae8x9njen4v0vmjlza0a7bwbh73f16jt9ujde9cqt1xiw6l594r0mq6dca33v8lzqjfug94buww1fx3mn2hcw99d4vmiwf4olv3q6hcfev9l\",\n    \"description\" : \"Recusandae ipsam harum et tenetur atque. Vel dolores nemo quisquam occaecati totam. Architecto ut explicabo vitae aut maiores voluptas sequi. Rem vero quisquam fugit iusto soluta voluptatem ut.\",\n    \"id\" : 1636052161\n  }, {\n    \"blocklist\" : \"880pjajm9wtvl3bnw2xn24grgjt80dqtujdms3ghe2gagbm858v74b0mmm7g8zubeqiblkbhuq7zdk01lck2psgpo3lzu0zyo87d3q5jk5gezr6nquf81vdfga63htjh8u9c1o6qu2hj6ek561sdekvc5xxam48ay4\",\n    \"description\" : \"Debitis illo unde. Voluptas delectus esse voluptatem suscipit. Quaerat sed ratione. Harum assumenda accusamus.\",\n    \"id\" : 749444451\n  }, {\n    \"blocklist\" : \"9458hxj0860sqrk7zx60r3xhppl7gus\",\n    \"description\" : \"Eos alias quas dolores. Harum sit nulla laboriosam recusandae earum. Expedita aperiam dolor voluptatem qui. Itaque sit et molestiae atque natus quia.\",\n    \"id\" : 801612926\n  }, {\n    \"blocklist\" : \"7vwy728c1nzr9kua0tskcig05nl4bryit4zou7013olht8ubh3mf9ecjpx5zkb1g2a4i479mqr3r\",\n    \"description\" : \"Voluptatem optio dignissimos dignissimos id qui. Deleniti saepe magnam voluptas rerum. Cumque odit earum mollitia. Totam est sint quos assumenda aut aspernatur quidem. Molestiae aut voluptas nisi.\",\n    \"id\" : 1995590471\n  }, {\n    \"blocklist\" : \"k3kza3a1d0ar0ongdvckvc0nmwlwh1dvyc3cmh68cl8f83mb22j88jt41e7i7gtznge1iqk8jqnvx9v170w6be0wpz06neho7zmt8gm26brw266emabt30a1vhghmqketq58mg8b9w4x3lqq9tgtk2qqf\",\n    \"description\" : \"Numquam modi et sapiente eum. Occaecati soluta suscipit nobis. Ut ducimus optio tempore.\",\n    \"id\" : 1394619415\n  }, {\n    \"blocklist\" : \"f3e9cci0swuyxn961p4ban695xxrc87cq9r80n43tf7wyxqk4\",\n    \"description\" : \"Voluptate fuga aperiam voluptate dolorum. Sit beatae voluptatibus voluptatibus ipsa expedita ratione distinctio. Eaque beatae mollitia nobis. Labore porro facilis.\",\n    \"id\" : 1817503424\n  }, {\n    \"blocklist\" : \"l1buoy7rxmgs9lnbdv27tnzpb7415m03nu4\",\n    \"description\" : \"Quia maxime explicabo magni cum cupiditate et vel. Harum aperiam eveniet perspiciatis dolorum magnam qui. Dolore aut dolores ut.\",\n    \"id\" : 1913478527\n  } ],\n  \"list-count\" : 469194188,\n  \"cidr\" : \"md7va9a2084es4syyc8702jxo2tvcjgkpc9dytkrjdifa4vr5yloqv\",\n  \"is-listed\" : false,\n  \"is-malware\" : false,\n  \"is-proxy\" : true,\n  \"is-exploit-bot\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9971215-39aa-413a-8659-6ee45ee0a5c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.847131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklist categories this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "cidr" : {
                "description" : "The CIDR address for this listing (only set if the IP is listed)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
                "type" : "boolean"
              },
              "is-dshield" : {
                "description" : "IP has been flagged as a significant attack source by DShield (dshield.org)",
                "type" : "boolean"
              },
              "is-exploit-bot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "is-hijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "is-listed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "is-malware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "is-spam-bot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "is-spider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "is-spyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "is-tor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "last-seen" : {
                "description" : "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
                "format" : "int32",
                "type" : "integer"
              },
              "list-count" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which specific sensors detected the IP",
                "items" : {
                  "$ref" : "#/components/schemas/BlocklistSensor"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "is-bot", "is-exploit-bot", "is-malware", "is-spider", "is-dshield", "list-count", "is-proxy", "is-hijacked", "is-tor", "is-spyware", "is-spam-bot", "is-listed", "is-vpn", "last-seen", "blocklists", "sensors", "cidr" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee5da484-fde5-44c6-a1f1-54b791e19dc5",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 747587279,\n  \"apiErrorMsg\" : \"5gnqgwbff77bnorh1xn6pl735e4sg5t2v5ssnlso9ylhkkuc7s8ob177j92spvwjav28dkh4mag189b85ureq1isv7nd3n3rwpzoaf6j2wfmk1gxsaj62b2jt9md6l814ojmitz617b2d6vpnho9visr3ng14aldv4jgdmwk8kgko7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee5da484-fde5-44c6-a1f1-54b791e19dc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.846354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "76b15ecf-020e-4d55-a616-b9050805c99a",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 872416289,\n  \"apiErrorMsg\" : \"9bw0kiud59lcscx8iqbrh5k8m6h1optd2uuv16k5dhj0mikpfkjckosphw8jfvwihwevj5fjkzd1js1fem8vi3w16jupaxs4j6pfe94urwr4m04gl3uqrm74cj5ad5wmk77g7cnrm3g9ycugcr52k1tvk7zw4ew4o182k0e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76b15ecf-020e-4d55-a616-b9050805c99a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.84629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "277a8e3a-00bb-40df-a1a1-db8186ff4029",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 95165572,\n  \"apiErrorMsg\" : \"6jm96d77wm6fqmd0e4pzagxpy9wy9fi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "277a8e3a-00bb-40df-a1a1-db8186ff4029",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.846229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ef46c66-91a3-459f-87b5-111ef0f09828",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"dhs4913lpf69yejdrmuxfrqhh5czgx4efwdi2ze5bfvm3w5162qoiktx8ht45gfzvnptdky9txgydvxt16rlifua5e9s3uc360o9idasi5zvmxd9wgm1bals75bsw64xntcyfkxzuq5vjfidgk6ksjmk29376wjpmuy0qjx9h558fq1ejs82q9edzs2z646c0ghzcdl\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ef46c66-91a3-459f-87b5-111ef0f09828",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.846168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "32762658-db8d-48e3-8e63-88b19d77119d",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 570964772,\n  \"apiErrorMsg\" : \"1ad1apiakd419fsgfwwzipu0y0fe9al63nvuintbmw9ahzw2snp5yuvbtf25w3u8knlbgerbjgucs5f12904eit9rtzv4jg0pzta79qq2dg6m5toexshylfsaibvhn3ckc2lk0ja\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32762658-db8d-48e3-8e63-88b19d77119d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.846124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c17e7a87-fbdd-4074-95ea-e0418ad82d69",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 512844501,\n  \"apiErrorMsg\" : \"ydzgy7j7ctli6l5ohc9jzcffctj1wq7d8t3iozxr2tufqr77bn4ox3nsvl8dvcgtyjc686iqdxsn6lo4ya0ojne12ugyob7uro9zunta9kruk7xpai2s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c17e7a87-fbdd-4074-95ea-e0418ad82d69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.846063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "07cd2497-7748-44db-892b-2ffb0be5e1cc",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1887636567,\n  \"apiErrorMsg\" : \"hj8znvzgexa57mkyw3a6415te9qjjemqykx5ipb3733fphgyjfw7oxvw8zeet7jmx4uv43l4cqgrdozgekxkeifv706sjr6od08aca6yr6u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07cd2497-7748-44db-892b-2ffb0be5e1cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.846003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3b90e931-b67d-4ced-837d-aec053b24164",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"4l20\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b90e931-b67d-4ced-837d-aec053b24164",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "a2b4930f-55f1-4316-a7b0-4b756626c87c",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1775266912,\n  \"apiErrorMsg\" : \"pd03kf3239bnz4ys9ofuol7f5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2b4930f-55f1-4316-a7b0-4b756626c87c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.8459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "271557df-ecd4-49e3-9b1b-35d83a54c20d",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 575408388,\n  \"apiErrorMsg\" : \"lnkvapbou2oux99xfwxrsr5df6503opebwac8p914r3cii0im1ej4slf5u1ixegxue7xuznhe0p3l6oggtfpqz77biivt82gw1hlcyyuesanon5ohz8ppi0pt20vserlzg91vx6zo1uctvwgrk8n3wvix5vqz0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "271557df-ecd4-49e3-9b1b-35d83a54c20d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4b2d3aa6-90f2-4b6d-bd03-fe671e01ab01",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 292711582,\n  \"apiErrorMsg\" : \"j3hkfvzaytts9uon9pb8nhit3fsrs1t53nldp5qrazok4x4o1ma3q3cyau9u79v3fyyvi1x6woumrzlc0nxt3md0cmwcgzc2t7oy7nrf5452kt3fm9waelz57ruv4mc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b2d3aa6-90f2-4b6d-bd03-fe671e01ab01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b4a585be-c888-4f48-8e21-ccc2ebe3186a",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"hdo6v6iwo5unjzr4zendr5kwjprtae6lk8dwkf978h8vd6cyyjc78gma54gerk924c3n3tj850cha0tikzzkj7huuc4dtipyg4hyphnk3468zwn4bxpn2\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4a585be-c888-4f48-8e21-ccc2ebe3186a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "766e89ee-3758-4d17-b917-343507eb04c0",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1093168605,\n  \"apiErrorMsg\" : \"kxp2j6gkg9qrkbjkyo5df3jvvsmu8vb85b91r35h5c2zfo8p7rfvzh8cbwf4w3lbj8mn0nsr7x6kcdvcjgblvotc0zzw82nnb63jvybpvvz0k50924p0uwc6dhz21qkzv08acwzdx3e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "766e89ee-3758-4d17-b917-343507eb04c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d607113e-d189-40be-a835-ac93b85206a6",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 410705999,\n  \"apiErrorMsg\" : \"w9q0h9dtxh2ratirqoekv5p1uzasq5r9j18b87koxiv7xkh7r7uzoxncvwcgpbsx0obvzaecrkaxhdzlhbkhzwhfkbdt80tez75pepnihya1jjlay2o24gwlrqtphkx08lc76d6p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d607113e-d189-40be-a835-ac93b85206a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a98ebd17-5a81-4eb0-87c6-34a495c03467",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 309367544,\n  \"apiErrorMsg\" : \"bcqwlf5e0aydvyd0lr4rnmf01s8rph6edz1600rk8npkfror9hn5e3zxdjeio7l0rcl80ul1qqjnf7kemuycqh58sr6itm8ttzo9kr4i0ocmma3h2ohve3qsucudf3zg38xcpvgbb1d5s9nt3lsk69l6f2vlnspqkzvz2wc3qdss2bkii68\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a98ebd17-5a81-4eb0-87c6-34a495c03467",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fe76e25d-005e-4eec-95f4-d0c8159b9d92",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"5a4ppafsvb39r60hqk0zbjgxu2e5c62dixdn7b5cpfgjsfrpptctiofw03ezbhggupk214nnzpr9a9wz3qe7s6thswd5x7xi9aanrhy8ufkycx0qh6ug3nzxi\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe76e25d-005e-4eec-95f4-d0c8159b9d92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "f9d384c4-481d-4409-8700-723a96b6c920",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "j6a7xpp0whrimlinmpx2j2ny93bk3la0f8uyv5bm80kca74scqvzan1zt6pki9ezftvx7c99hs4ot2ny78ga9dgqjv7dyv1uy5ud9bbmm726mtj2ng1bjaa10iugil7cltip5a6zgj7lbmw1pg2ot4u6boqw41hznjcqv0kmm03amv"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1762339804,\n  \"apiErrorMsg\" : \"oast7bncb61rvzejsg7k4w2syxyibbiu7tm350htf4nlmtwzmn2am1gggwvc92u98am9885sr0xcm3fpgudiw7qmrkamm7rk0gy581ao7b6txfqubsmdo9fssgzbzcr7r0wx2c8tu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9d384c4-481d-4409-8700-723a96b6c920",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f4cb9dcb-cbc5-46b6-ab3b-6082c78e1829",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "qbqsk4ejalfftpxo5y2s25tmdblq9en3otwkcwlgrs0gal687kefibx3ada5h8292g8nw62"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1501437780,\n  \"apiErrorMsg\" : \"4rg1u5flsvubu3hntv80jbr90aqwvxq7cszc0i58g0qrkpi2b5dtbwa4uem9kitldgop\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4cb9dcb-cbc5-46b6-ab3b-6082c78e1829",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2ce13849-c0a1-4d5c-8d6b-8e545031c6de",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "s07hauzd74crpbfu5kgtg9i6vqo3a7r7hlnsfxi0d03fs5k7nudnzeemogjgh86a9j1nikzzf6est6g56n7bb1pksqgae4rkgkv4396dd9m91ke0a2ys2v4cprgz7dgpqll9dl3f7ln74rwofqje08815nmiwgvhgim51f2h1ukkigws21t"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1141087834,\n  \"apiErrorMsg\" : \"p60k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ce13849-c0a1-4d5c-8d6b-8e545031c6de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "87b8f71d-98e2-4993-9e00-e0095f779605",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "490m3hmumvi1v0drl6rb8ozq00yskbs908guw2cv4o5js8qv1o4bfy5uybips"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"list-host\" : \"yuxksmgg79bc504yx63116cev7h157sdq040wud48yx0yzg7yzw8spy5vq4m9ic3e5bav0koov06yw9gj179nenff3k25yowoab14n8cykpatr5938d2av\",\n    \"list-rating\" : 677949691,\n    \"response-time\" : 1545490721,\n    \"is-listed\" : true,\n    \"return-code\" : \"3iv2nfoh3yhmngifxct69um9vepqz51iwp8agdzolskkb7bes7hh4qyz51if3al9jtl82gxutpfyfc66j9z4g666wl63tpppj2dxrat3498zgl1d2zmkrpfibx83is\",\n    \"list-name\" : \"Salley Schinner\",\n    \"txt-record\" : \"pmnmhzzksuqfv3t9h770izqbppiwxfuutu2yw0925aivguomt99baw7t79p93921uiixingqo8nvfsmm8o0a1jwvohjcppex87z2li8r9uuilelnjbuyoeb\"\n  }, {\n    \"list-host\" : \"d7xgedv6p8cc9zd7ob6h2ccdew871qewx75jbl22jvsggpz169a570f9mh9fsbxx6pe592v8h2c1kiklugpe6vz10f3x7o9\",\n    \"list-rating\" : 1404973317,\n    \"response-time\" : 1416631727,\n    \"is-listed\" : true,\n    \"return-code\" : \"2x1a7p23h2m4dvslq0p1etmw5e3dpgc38lcq49dh12rfqtd26jxzis14jj6l5vm77wf2svuqvpx93rggdvcsyyfz2m15fbkh4b6416f6k060qeybwde8ejxz160hizmlq4vrtjarr3ot1o9ujr63mwmdthzxtsks244siou3xu4xng3m\",\n    \"list-name\" : \"Dell Rippin\",\n    \"txt-record\" : \"gko1kgqx0sfgtbhp9y92uk07e4c324w8mk54rckj46hvi0n6eabzyxwmp00i5kwhj81joy7r2mgv3ke70c762ve5x1vdlv742pxwt497c3cuo1795d\"\n  }, {\n    \"list-host\" : \"xq1fr84klpzn1h55xnf47aejjldzb3i\",\n    \"list-rating\" : 2086973225,\n    \"response-time\" : 1254180365,\n    \"is-listed\" : true,\n    \"return-code\" : \"tf6awrf2l746or0i2qrn9ur6sa3os4dlocvmzmbb30nmkc46wi6ba55r1sgm2zzbmk50ipg9647g9jdobt4vx6yul7laeeqlr\",\n    \"list-name\" : \"Elton Hoeger\",\n    \"txt-record\" : \"ovyg6qeicxq06ki5wtefj189oudw5r2it1vlrev654yyndj3s6o86jgebolzvixk4ef4gfn5uoa2ucv7vxk47ftnmywhj14f5f8bdcl\"\n  }, {\n    \"list-host\" : \"0zsx2ot21d1vbm213giyzegabrcyaneaw1bkrikr4fobh35xksbrxgdnh3h8p36bnhg0kfhdy008p33c5wlvm1iv\",\n    \"list-rating\" : 1278275784,\n    \"response-time\" : 1263574794,\n    \"is-listed\" : false,\n    \"return-code\" : \"jhh5zju0i7fybqg84lzjry6rp\",\n    \"list-name\" : \"William Kuvalis\",\n    \"txt-record\" : \"c2ycieiooxhvzqig85q7bbvojz2r27q7x6kyg80jsde3rqq8q9tkmgcyo5c0qdh2o75et04q0adqqmcv4zwdyhlrvyir9gp8qovd537diw3ktxyiqwzif66vnixm2ty7etf\"\n  }, {\n    \"list-host\" : \"7axr6thr01n9jpcycgdyfridmkk4vvl1a6tpkx8aunvx9t9a380j47o70fgoge717jqt6glx4ww\",\n    \"list-rating\" : 469689489,\n    \"response-time\" : 1795818731,\n    \"is-listed\" : false,\n    \"return-code\" : \"wsgr8jke4lo838ezd911sh3h0ee8nc7q3f10yr0xt32i2f0v79i4c08s4c4mhddiumbm1uiyebmhv3c788mdq38lgyfzdboz1auoo3u61nca4aufylldv7k6uipgx4vzn1e7nm31clfbjcw364rsucf0nivkom3wq9j6jxaow\",\n    \"list-name\" : \"David Boehm\",\n    \"txt-record\" : \"14cv8h2zdv510qvd6ywpk4h935p5yx7dpnptu70q4jqe4abcpki3sn61w277hltwwwkzvl9vhx6zw3m35i3imkzx7vdoerpckrxtumvveqppr83l0u77n33gbd0f49pt3f2yvszgaqlne3farij69krccff2w5q\"\n  }, {\n    \"list-host\" : \"zxu2pnuvj4jaqs\",\n    \"list-rating\" : 907746202,\n    \"response-time\" : 1446140620,\n    \"is-listed\" : true,\n    \"return-code\" : \"p5gi1a35w0kbz9sk1mf8o7bileblev3aafu1gkvuwchh4zu1a8nisx3vsmp61k7gxa9kxtvk46hvihhw0a6mi7jdhsbrknh0ukleqdu5rsui7mz0e9sovlp2vfcl3rqs2st0gogutacptv6h0gkb7t41r0l26qs7s7ud2lpkz2\",\n    \"list-name\" : \"Jenniffer Mayer\",\n    \"txt-record\" : \"hx8yw40xtq256wxbvecj4uvgihp9ilhnyt5ghqo\"\n  }, {\n    \"list-host\" : \"kgw\",\n    \"list-rating\" : 1467393449,\n    \"response-time\" : 2091361596,\n    \"is-listed\" : false,\n    \"return-code\" : \"oxw\",\n    \"list-name\" : \"Miss Carrol Purdy\",\n    \"txt-record\" : \"cs2s5cph5gtmvlz7mu2f9h733hwijmb0qvgglwv2ud4lbig11ps1cqqeh5rpqr1nrjaiwc72md46zw7yekk81xnelime9jqt7leh807834imc7crruzqofn9wgkn2robjd1\"\n  }, {\n    \"list-host\" : \"bz9t0jdvne7qz3knsv7mqcxavybxc5obnoqd2aengcop17tvxk442\",\n    \"list-rating\" : 1596634077,\n    \"response-time\" : 1403989703,\n    \"is-listed\" : true,\n    \"return-code\" : \"b07bmo954v5z0q99izaip6z4t3yvpzbhyv09z01ap88z6q4llmf9hs4cfrvpvakfifaxeoga7zq13xrynwonovdzgj040fuwbsu6ujpr8p0tmyt4sdlge8nj1zmf28xbpy4ssak02pcg8b3\",\n    \"list-name\" : \"Josphine Harris\",\n    \"txt-record\" : \"57yvrqqiho82i3r0qm9tm3an8goha8fqcvssfqsx48zfjyaea26mpgfhgitef0fsio2amt0nx5yrql48oft3hynkqptd2rkbgxjff\"\n  } ],\n  \"host\" : \"s4sdwqtqqvmgfjt1r85yl4lla6rfr0j6rvi43sk9dbezcye92boxxfl3l0rcnal4uffgqt2z5l8oz16pwdf3xz2vw7thbj08z8hinpiuot6r9h5bcbahkt6x\",\n  \"list-count\" : 402826285,\n  \"is-listed\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87b8f71d-98e2-4993-9e00-e0095f779605",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.845171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "is-listed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "list-count" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "is-listed", "lists", "list-count", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8f74381-0d9e-4fa8-9b92-4c87be501467",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "fuvaoigrtif8iboqivb0cvm4csa2ozy3vbmov6nno36jdj3s25jqj0r3x06f709ohft8k2huxqjvpf6114rhocgva25mshev36yi5av5spqyhpafftt1"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2112856475,\n  \"apiErrorMsg\" : \"k16rgn74q415rrzzbkau433khfphrvt9hoazngg9fjb3fxwcfcb48vxfr0qnw70n3xyogl3g7sftvotgojj8oyr7ra3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8f74381-0d9e-4fa8-9b92-4c87be501467",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.844252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f478e44-7533-4ab8-aefe-a78c3c4a37f5",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "62umj6rnh29jydlzryzsecshl9553rii3ysrsrhz"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 341876633,\n  \"apiErrorMsg\" : \"va64plsh3rbfyjy1tpkhb4nw2qbzajma2l1lia1ry5vmbjd24avuh0vk7qdev5edma1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f478e44-7533-4ab8-aefe-a78c3c4a37f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.844142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd348331-6437-4949-a8e0-fe6b8bcbc06e",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "tdislp0lpitngzondbip0xf5s136abn0r5slo6d9b6ak7xugxvf01mijkc0un636aeta427hz01c8yagkymje7nw5pkoi4bki"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1466986982,\n  \"apiErrorMsg\" : \"qqu8700e81x63xocaokfwsdj2e1mc9josj2fmbzq7mxaw6dw5ij2s7o4wqnrou6g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd348331-6437-4949-a8e0-fe6b8bcbc06e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.844058Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c8d383bd-3983-402f-b184-48ab7788817b",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "1751tr0zdosbzpx1rkare77ub1484raoe07b15quma754uhmtjtbm0x2flaz9p6ybnmt77v117epm6e5by9a6n61mseenl4ux2beqkzdq6jgvgi"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Malaysia\",\n  \"country-code\" : \"ssssz\",\n  \"is-ported\" : true,\n  \"mnc\" : \"7txl48b96hwofpq8fzgpc8ltmkidnpsqzcewm1qqv0ouyqvd6xtrzlgk20ykj6\",\n  \"number-type\" : \"w4c2dqsmbx6btd9q5m03rvy7jnv4mmgih3in1jb5bm2guy6rwn7zmncjkfd0xfuxfs5okfy2l3nhgcm0qqg050s4xmn6irq22i1i930kdtbtiznyanc2acyu18xylutl5r60qs9sb8s5sy1blljh0msid4rf306u9jgxzoqkyir9m\",\n  \"international-number\" : \"12d398acvlpztay2k\",\n  \"origin-network\" : \"ykycipsjqmnf7nbiu1iqnpuesg7n5bwzi3a8ay1xrevfbeif2yocrjsk14mt698i7bhqjuk1qjdz3ws2tejgzx4ijwkzsxoe54a8m48uzenqsbbkrchwud43kj98vrvmk1u8i5wcqu0xxd87099l89\",\n  \"roaming-country-code\" : \"ppppe\",\n  \"imsi\" : \"d0lljp3ush3792aenzs48g3diqh7tcnu9xagi498n6ll36dxr0drlhdfims8aw8s5f94ez5udteyj30518fpen0u1eshz2ewm2qt02whjb6x94i7e0onp7ww06p3ostjofxgygd30buuuz85m6a40gcjb3455\",\n  \"local-number\" : \"vrxyfm49yr97zwo2x23g3102noozklomhwi8q0oefqnm4v74zw1ketgjg7lcrrv285y8e98wiaghltcr85ht8lqry19a6rb2gm7zoih333trg\",\n  \"mcc\" : \"3gcxnuqvj4ucghmbbiy9gjxp1u657i6k5wddd0rdbpmyjny2jo83rgs868ueujbefw2ulu239tfpr9x31ucb7v37y0vx3rtfz2tjpjiq1mvmrozyjt4igbx7eargz5k8rbs4hbfe6qcjv2za7\",\n  \"hlr-status\" : \"d38kviqx05o3a28h5usb71glyshx8ah81nn2pdc9d54x7aruut75nijov2q2rym33sle8dkdfv8p68yolw3jvp2d811jjyrt9tgnpsrhzfmkna47ry7xi\",\n  \"hlr-valid\" : false,\n  \"current-network\" : \"xeup3wpfeglkkd20zlw1vyr1fqrvvk5s0wi1y5a3i11u7dujz8h58nvu2npwhmyujj9tiqnikdmitbsp2qk29a6ksg2j7kxqa596ggwnjtwugafzk84mkf62aym1odsfqlgqyq1rs3vbpmvp86no2nldf1knai27vabqp9v6j8ui4wc3ec3o\",\n  \"msin\" : \"pjuf0kd7in3db9ag2zkuevs0le04wmcaq6ovrmjualgwic5kuygg0nez8uwom6k7lps0sw2h8vnt0334lp4dde3sqgcj13sfqmgi71ics2l9yjfl42qxrsn61vnbulpebehlpyvf70kqyyiumvjolmf615ionyuojuj1kxuxsycq5g6srhbqyra3tghchlrogk2j9t\",\n  \"is-roaming\" : true,\n  \"location\" : \"2l3fozzw0lhvbscsmwe2mtqptd7rx6slckfx9spcl4z8t0t74u9zl2nnl\",\n  \"currency-code\" : \"JOD\",\n  \"msc\" : \"xir3b7t6zc3krm1endhvcnzlbda2uq9qlrzufcghqzgvx3dq51sd3khpmsys5vr85srsa5e2j4nlfy5ghvnssbt6xip4jcn5us5dkmv31srgtm2d0e8kd35ckj4hj8hwkgv5\",\n  \"international-calling-code\" : \"ce9h0p1\",\n  \"country-code3\" : \"5s3qmy2x1b46msfe8mwn9s6529i2b50o5ogu6zuyrwrfl0ws54aweedghunicdgjpdri5n0kxymod9tpktouclhqjb11wwj7kzy8s268n25yi3ro0\",\n  \"is-mobile\" : false,\n  \"number-valid\" : true,\n  \"ported-network\" : \"o5mkrtqypmdsix6wkkbggir67egaxka4uakmfnjvk2pwo3ksxeqjnf1rrrn65t4kfbz61gkx76d16t8lfec0tuen2jz5xxp0rzx9hth42qenav0lbz9b728t7t0krkq0jq8mfm2smv376v5zgde9ll5na9p6xlttzp0uirw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8d383bd-3983-402f-b184-48ab7788817b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.843967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "current-network" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlr-status" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlr-valid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "is-ported" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "is-roaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "number-type" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "origin-network" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "ported-network" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roaming-country-code" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "international-calling-code", "mnc", "number-type", "hlr-valid", "hlr-status", "ported-network", "imsi", "mcc", "international-number", "local-number", "country-code", "is-ported", "msin", "location", "origin-network", "is-mobile", "is-roaming", "country", "country-code3", "currency-code", "roaming-country-code", "msc", "current-network" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8e0a8acf-019f-4060-8ed5-3a8f0547cc79",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "zgd8lt6cz8slq71kt7mqitgai7mvr595766ybnhms4rinzdvjm0mqv92pire2slrlvuv3r7fxrupl121odklt0h5ruql8lcwq92ofy5b9x3wtvw00ndicbc6oz1ajmyx8mx646o162w5zg8qeykuld0"
        },
        "longitude" : {
          "equalTo" : "hswb994gi3cym82lzhxyqz07pnkd2o2tv9lfdgsbuv4dimh1jddgk4huw9z5gm5qrlkknteusjm65mhdfrbxmxpi74ikc5smcgnx7z5l9fmxfwohuhwg11kc3acodojkfm7sp65bl3gv81hedgoj7si88t"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1110818511,\n  \"apiErrorMsg\" : \"os15ij669wjwnk0kbl3hj36yt59qmh5bksj74cwlotx1focw2j9jky7lqaropxgqb9axwixe13tiqd672wuaxnct5radu3rxzvabvsj9a83o67odlpqfbadlpx8gldrm23bk0hrna7728twqw5mux35dmzgr9mkp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e0a8acf-019f-4060-8ed5-3a8f0547cc79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.843444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7c7ba46c-def2-4c86-b6d9-fd42d203766f",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "piyl9itbfxy6b07fd8l2wjhkovch6eblrf7lp5c0q3apvsl92oaqtjfzqqkhc5lk3wsg8z77xsr00f8h3yxyb7kbqvvckhuveo1rz6bov248pggd995obqj28jtxid7kw3qho63750bwe1ef89of89"
        },
        "longitude" : {
          "equalTo" : "qpo88vnoh1h0yabv8awnj1t7se6dicz1xtx9pkrp15tipdbcja8eeql70whj2xgrqucmhy01vq09j46guery8h5fi3dwjwqm8toakjkq9bpx9cw45"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 808999045,\n  \"apiErrorMsg\" : \"p2fykbo9sre4ro0hhywqfg5zdr81az4dynk5jk22h9tsrqo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c7ba46c-def2-4c86-b6d9-fd42d203766f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.843333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8e4722d5-960d-4c36-aaf9-3daad6c5526f",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "q4ok4w59lpzfl48do3fgo272xov1detb0ffohhnbcoziii9yjbdwn25b10yyit15dp1okil8utaj0f2rrl1uvcg9mng7"
        },
        "longitude" : {
          "equalTo" : "2tkc994dyfvlguxfuut8z5yuq029xhzz5h98syqgbmuk77kg6g1ke28anlux3ec94xolx8du5m8xtmo0d4lfvahfr9rojz2bf9afqr6ulnlgk3f7iil6ch1rvo2xhojv7eujxijf69remxsld"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1379239620,\n  \"apiErrorMsg\" : \"2mgdvxc64qsb1oltpurqsc6d6lmf1chq3xancse861aja6jq8yevrzc0r0rh8xc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e4722d5-960d-4c36-aaf9-3daad6c5526f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.843226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e464fb3d-a0b1-4ca3-b487-e933351062ac",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "cqg8e8hm6p05dcbuzrg12mohpmxu01j120c7glam1iep675z5vrs3q1wa02llyl8p7u7yd0i8a5kk17xvineh70x8qq04g29v7lcm7p1ybn09gf32wd3olwsjbl394up3ffe09yvk1376v09c44vbcn"
        },
        "longitude" : {
          "equalTo" : "t6ze92mjft7u0rj20ncykqnqmp0s6d3uv6xg95q4k3ta6wy2vpa5e6al9znwmqyw8v"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"h0skszgbnt0q9d2zm7cli8nklpfsu\",\n  \"country\" : \"Uruguay\",\n  \"country-code\" : \"kkkkw\",\n  \"address\" : \"y5j7ae39bp0u5ju3786ulz4pb7x8x3lij28wiwwauofjb66\",\n  \"city\" : \"North Gaylordfurt\",\n  \"timezone\" : { },\n  \"latitude\" : 9.96349354905618E307,\n  \"address-components\" : { },\n  \"postal-code\" : \"52354\",\n  \"found\" : true,\n  \"postal-address\" : \"edc3c1uitvxuq7t75zdpwwbthi2y577r8v53ya45gnrmfx6mq4zr723knk9v3lb2otp476q3ikx9rwdhjw207xgerhgjzhy32w8yrqwsw3gd7ix98ibg8ik4f3swp\",\n  \"location-tags\" : [ \"ivxeitsf0f4pjaw6xpo2315tlwzcot4r6s0y6afzhvrdx0t3o57zkbgznkpxewd7l8cd2ewkeb1ocxeiba9h9q02f9b4dg4a2m5gjgo45fj9qqsajaq\", \"vwm8q3bbkw6n2o28e5hl8bg4513jsq8qagiik9mmaa95a1o6fr9oaifi89e8iukou50jefaszq3wvgj5kktd9g06k9l30psefvfpsyxcar5o2isu8rpzn14lc1l88p3f31hyeql78ylxx9rck5hcbqpit065whqvsw8vxsajdbgq2eqz3qdudde527c860gm\", \"9t2fvpcz76d7dd8kq7gu4yknc7ut3vgcx7amucoaat3c5kxu87qhr7qk04sb1xdcafbeedx28ion9eqvhgv0g5y1s349d08acyd3t0x1s\", \"ikq08rq6izy94e1hqh0ukyz9n3z0fmlnvldu7fvzhaz0rcvi5239x3cv317pyaqydi9vjm7w4t6vcj\", \"0uvo10g1aue0it56koncxwg1bdn10qob0sh0u0s7yxgw1tstyfplqfrv77woxdh9uq2oghgqgil5mjk40xw4y4to8ou1i0pnx94zuko5d9trcrypiq3l3417qhtpa2toe0siobl11hs2bmtfchpbv0v8ltczd1k8d4e9ije4vjd23ylzpek8sysvc\", \"wwd204k787o398wio9309bf0i2z0u2m49k2odocg7cl7o61cogca8x69szt27oekkad\" ],\n  \"location-type\" : \"7hti1t4zrj7tpk2pbkwokpa0r4ac0ch6lswafynj07zeoh8q7kj8igy2i4krz10konx2vadd73uclpuyeqr9w8v127yhz8mjchpagz62cd938o1qli7kqcpxegey442o5jfmwmidcrvvv2n9mjgisgktqn4yt64qc9sq9gdr\",\n  \"state\" : \"West Virginia\",\n  \"currency-code\" : \"EEK\",\n  \"country-code3\" : \"idx82iedd2911v35wuvax961s7hnu2e7su8xtb70fuh8nak4mikqemd1tb5udl8l3ruu9a4eciwvvf31olm097t7zmf3ecgt4pla5mmp35a7kdfm57bczjhs9s27cropn71v9nso6x2s76kdeflqaq730fdmoa8sb6srtlvk6epyu1v13daa8\",\n  \"longitude\" : 6.858226957107881E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e464fb3d-a0b1-4ca3-b487-e933351062ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.843107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The complete address using comma-separated values",
                "type" : "string"
              },
              "address-components" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "location-tags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "location-type" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postal-address" : {
                "description" : "The formatted address using local standards suitable for printing on an envelope",
                "type" : "string"
              },
              "postal-code" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "region-code" : {
                "description" : "The ISO 3166-2 region code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "country-code", "postal-code", "state", "address-components", "country-code3", "currency-code", "location-type", "location-tags", "latitude", "longitude", "timezone", "region-code", "postal-address" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8435944e-c6c1-41d7-a0e7-34735bbb3d42",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1157074185,\n  \"apiErrorMsg\" : \"02uhv76pl6u6dpxu06wvm9o8fppl99cm7kunb4xf6l4z4iw3nuuscw6pc8dk2uyfb2v98zy3s0k00xzi8qwjtrbltoq8voaxzei1uvukvzfybekwrr1y4d1c8m0bwaf3v4uww0neg9ovnql71spueuvi7amz5soevp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8435944e-c6c1-41d7-a0e7-34735bbb3d42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.842602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c2ca689e-cb8e-4493-9c79-6a5bace04e20",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 546366675,\n  \"apiErrorMsg\" : \"zsej7buckdhkhzciufmpip6hmnlvqr0t33xxu3au3340u47lvrx88tt2dhtwglx8noxxf9denon0e257qiaqyr5f3y5b7yv7mvcrqfekj8c6dj89fqdhoqdkzc35jpm8dhcb44mlk556zg9ixv23qut52vlxgt3m0pft0000q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2ca689e-cb8e-4493-9c79-6a5bace04e20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.842534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8f61aa4d-a7bd-4c0e-98e0-58e8bb99f24c",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1797777779,\n  \"apiErrorMsg\" : \"od6chlac4ubixtssho6v39e26t8lc6xxln2xt399vhkiti4d1c5mj8nbusi9lkjriaymdkkq4um\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f61aa4d-a7bd-4c0e-98e0-58e8bb99f24c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.842466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a754eeb6-32b5-4abe-82b5-89da8cebf705",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 1023635419,\n  \"locations\" : [ {\n    \"region-code\" : \"1gedtobdnc2wdgao9nhh1xj1kx219mshv48pcu7wsvgjplun595z8pd9sx3s7ef5mo7q0rpbb1g8pb1gc1pxycgknt\",\n    \"country\" : \"Poland\",\n    \"country-code\" : \"hhhhn\",\n    \"address\" : \"opetpn644pz13pd7mahrycw6v8f6nutb5ay2fs9otvgek5fesxby90m489h5iwqch5b486n6i5k1vzv7zmdgcxman5sk2lx15wayvsq1knzxhd410oewvgwv0v4z7dcbga3tf5pxax4mqoeyerormo1nc3owxku42fe9peceo\",\n    \"city\" : \"North Hipolitofort\",\n    \"timezone\" : { },\n    \"latitude\" : 1.5269744366635406E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"90210\",\n    \"postal-address\" : \"6dkb1tmvd6odc8endte0zwf4ko2uwheoc4za36qcxcbyzuu2j9sspkonuzvt5rmpcmtdaycqv5acc9r7d7wo1epimor4eonbykgahzdu88nxuxafv77frbq8apivmh2utmvfsscngslz1ba91cvowdxprwkeytb5vcyuzqbag45kmq1yfb\",\n    \"location-tags\" : [ \"9j04slnfp6i1a58ehqgvk19pc4oa5nw7a1w8qpvje2\", \"c1gjoq4ylpcaw6zn3ax9qddsmoty50mjxfjw98t53rm1hjwhmnh9gokqw5yh9uvtyj90o1o8i3rxhmi7mb1d6jamot0hn1cxspwiuczmh2bkoxr6hndb0jnr3bzk9lpzd4esml6oa7urzohtezeqjq3mae4thm9kqhelx0zp3cdeapo5lr266edjbdpsz5x4n\", \"2wfrvwinbkdm3i3su2j5idifz3wbivtwbbn9su7z4xecwptz12p85a1dc2lunulq4xfzg72gu3c6a4r0evo9cd8hp7wpe0t3e62pws6lvoxqj4jfzlbpxw38uxuucva861ofb\", \"3ioss7qfomlp3zdsi679k1pm7cef3c522ttsg\" ],\n    \"location-type\" : \"c6y0bt1hg0nytkqvnw2vsfn17rulwiwnzvew1wmnulk4c2hrw8gyzgm8fec9c0hncsnqy2wh7n05a88cijnvbh3o1k1kds8xf5ysyj9un7608i91j94nsnqrd78nlpfyk8ergoy6v9bldcre117ul7autthie21xk7djdwf6e\",\n    \"state\" : \"Utah\",\n    \"currency-code\" : \"GNF\",\n    \"country-code3\" : \"kj768ps5wch0ryfdqt0qpsqwm07h99lh7pb2p2pczfsbjlu288ly56ulo5aprdxz60v8axseeocygj4v2n84sz6a3n0nwx2nnszlqxic2roh6sd8jyldgs6kax0ro789axuhzotwxwde8zu8snf02dyohjr8y1w2h8gnzo70ukzoktldc0nj5pnox\",\n    \"longitude\" : 6.83588417176669E307\n  }, {\n    \"region-code\" : \"iop8xt2rxuiylotgyrmjo5d0u125qselxg8mftxtwddu4gbnlj3mm2ifm66t3y12z2lxn9ijrgbqok3mrxoejtf048cxsq34b7szyoz7kfxgqp5ktz2z7ued2grrp9polkqj7neqxizn26kbw7lzp4sbyj\",\n    \"country\" : \"Nauru\",\n    \"country-code\" : \"iiiie\",\n    \"address\" : \"qhublz4fsmwurvxr8bes4aj596hyaffrwlq9bsc40zss3liwbhfh7c8ldudnqpk0tvgts0gwljs9y1wulskynr8bg7aa2xt8nrcc7qw876frpxsswq54qxrydpcg\",\n    \"city\" : \"New Andrew\",\n    \"timezone\" : { },\n    \"latitude\" : 3.763086292835016E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"47695\",\n    \"postal-address\" : \"y8wy6515cghhmhk7qjf06ibpuyvtfdw44ao9u5vgh3k0iag3aegoy2y4zenvcrkxmu3oyakw30dd39sa4bonye3izeqsw1emxanfopg8jz0zqvcrbj1sf94rrx941k573jgv86va3ggvm8gxuiij002qidzbsne8eplrkk1g5kx79nf9yhwp2uc04\",\n    \"location-tags\" : [ \"r953kob4ryoz0yp2r37m2egfpqh0raik395k8z6vzw9dqg0gn7vebuys953jmbqnup28bk54njfzc8l9fnx4hx3qa\", \"2f40r94p40nk3zq1md\", \"opmqxr84mx5xp4uogar4sa7lzyko7ya0w85rwgatnorziur1gy4qsqp92f49hed5m95n25l8bpfd9548dxlpk4vshp9isp44i3336eilnhq5x5fvuvsr1d8k1va9ojsc0na7knh1h7bcji9df5z6avpwbekmqg5p9giy\" ],\n    \"location-type\" : \"nll03n7c0aznxl3xjwe886sge54f34u3b9fnuoowgln4v2ipnlm82uzhj0189ubak0ym4galf8w55maf08f69p9xx967t1gxd708dtkpisankw8t9nfh5t5h2j24rcgh4wi\",\n    \"state\" : \"New York\",\n    \"currency-code\" : \"VEF\",\n    \"country-code3\" : \"7xhhg065uryc5wiuhv1s3jtqpt5th6h6dnv0or72uwolxiz18lt7teyczh94svypbr57ymwtzog7watxnbynv7t2961mnaue2o26di5savo7g3k0rhh6geup\",\n    \"longitude\" : 7.779072913086103E306\n  }, {\n    \"region-code\" : \"9cm13qaw13diu59lhegjrjx12es3b9q552vo11hddluflrtd6yyako4oea1kwte70tvn9c6iiwocwv59os2u8e80clsihxa7mfnd7kl3n01el8nmnkbfccjaora0nlrjjyrnu41f4agkxb\",\n    \"country\" : \"Guinea-Bissau\",\n    \"country-code\" : \"zzzzm\",\n    \"address\" : \"tv31q7jfi8u0r6vqmsuxickbtq4miyqepraxxd650dhaw801hi7l62phm8iycq5blj6vz6a4ac2ehjfum7bhnxxxqa7g2d9go67fgorzkyt2jv8o0\",\n    \"city\" : \"West Neryview\",\n    \"timezone\" : { },\n    \"latitude\" : 2.812335559356367E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"01408-1467\",\n    \"postal-address\" : \"dv5f6eel4kb5rv1dbza6u6icatmekv5qo2a79t9fpanwus2j1l29rflpulduupbudc5l22l5toe6h896ygompojcr2oja7gwrpokdzn60yyiaimli4mr784dodub6eiyzp1ni\",\n    \"location-tags\" : [ \"mjlm30ol3qvxtbq2em51l575i502aqt6zi4hup4hhamssl167o1m69ak93ldudn8fhuikgap7b81vicoipk8jldb6o22xhn7131emanu4962lief8n\", \"zrzl54erwb6bnd3qk36kx50hhbujniw6atjma7hojthg7pbnbf5mfxnhfadiv4cedqxjyp24zbiu824vcbilzv8\", \"70em96tamjybew8j6iv57vtbbtof7asswwfwlv94v5ec8uvmb949wzpvw3wknqj6ex8f5qyi58s24gngdlc0cj8r8soprn3qfjvr54kys1j2tt3am4fdqrvta\", \"1097qc0lztddq5wf66t21rb97u6le7swbddosd0x10qxercyunlynnxip5b94xqla5rcyuicgwy1bdpp1kkqeux8m2rutpn7i9hi7vlvx9s905ukrkacyy7ws7r2jl6gmok0nkah8yjp5d8jzkseb965pdv383rf88cwrxn\", \"1zu8qne9ma9n691qppec9dainv0ivdaeksjfhdgc68b5muu8dva73e08ktpv88mem1fzsy62l85ebhsbylw57kn02r5kmuutqbbclac0z1fskre27gb2zvthixz5li\", \"ebuoy536cx3o6x7oga0dcvx5077wgfp1a7jss57jtrd6dm4zsb8o1m6o4buxlhxi3ul2q56dx23btkp4fmvm9gvul6p6dtrcf1ik81ktkiuybc1kreceffug3ze3dp3zkgwcn5g6227me1tunh3qc19itsv8ok0qjr1xy1bxj8pluv0ny\", \"8xq54mlow5mzvg94jp8r8bjlyedyv0cbg20rovfhzkejc6kbfhcnaxs6ebsaf1ylxrgiqr9k5gltxnjtarpddwvobbpa10j4jrvka9hitdozo4aygf2lry6njxb02nxp\", \"moij7r1nbgz1a8q7dxrcwgiqches1090fo158x2tr2cy96q3cqhidcf46e791x12167prw3cq4q73lfkzi4w2fxtu\" ],\n    \"location-type\" : \"co7pym\",\n    \"state\" : \"Texas\",\n    \"currency-code\" : \"SDG\",\n    \"country-code3\" : \"4xt8lzi7gk0pzm4gh5ww3pwcadr22c6rylrce025u69symn3wlkcga3t\",\n    \"longitude\" : 8.256103094106434E307\n  }, {\n    \"region-code\" : \"c6n1wcpruj7too5sti3bufmdxf3r8fj32r81puh34b1q5eucnve0mvbqoincwin2yud0pq9l17wk6ah3jaqenffj9r6sjx6uhplypvayry\",\n    \"country\" : \"Burkina Faso\",\n    \"country-code\" : \"gggge\",\n    \"address\" : \"bemahidgv3b9ikllgm3qry61780\",\n    \"city\" : \"Lednermouth\",\n    \"timezone\" : { },\n    \"latitude\" : 5.9866365748796E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"51708-8552\",\n    \"postal-address\" : \"r03ouxi3tupw655lf8ns34r9rc3r9nohc6hlmxb836htfjq0q14zb1vw8voih7wi1wan74wp1hcb7yk0uzto3gapw52dqiaveg0xyfx\",\n    \"location-tags\" : [ \"ciq69zuvfy5erahk7dobpla0xsf4fuuhd\", \"5dll0zc0rzbsd3uhg5d2kp5lv6e18575mf12zrfhxvf7440ypebloabxpry2mrmdlr7fsn28j05fpty10w1en94rqhimt1994jutvuhv6idoerujwfbt2ybxgm8yw9nlv2mvwl1027lw\", \"t15u2mw3t579c128an7zjswimo5968nusjga3tjpz5thkt2ijs6cbcwgu5os3ng2so9d8291bg5l6v6aup1eb2v2t0rl3lz30rznu8w6z78oek858r7s1\", \"rzz2kbtbw38xzob09tc5nganfg4wse285sildp62uq8hvvatjpmxjdvrnr21hobqzuavttnsgnshiqbe6mna7qmd5fkh8gwzpqqkjk92zw2ihgdbcnpcs7soys4zgdtevobw71k3jzkir59trbe79xgxmqxfx3xwlcezqcrg4s\", \"ajehxh8xr14kjh1at4403ie800e3g9y1bku84jzjyk7ii2y4gov80ellitstyyc5pvrg5jcx43gm8xubnkskmqklocx8l8yoiplk4fe7oybw1qcv9dg3f126bs3y5q823uwupm1oals556kvj7z1ogbsa\", \"nin9xv6puphpldghd456emm1s28747ptrxi\" ],\n    \"location-type\" : \"vsa0mhweb0tne72vfl6f6qt13wi6bii3i386e4uh04e5v52k\",\n    \"state\" : \"South Dakota\",\n    \"currency-code\" : \"LRD\",\n    \"country-code3\" : \"qayxptubs80js1phjyy99atm4gnfnx98dstkgv9ogwy7mxikt6smo2ey\",\n    \"longitude\" : 2.5731025026360118E306\n  }, {\n    \"region-code\" : \"snou86xcl1lgj9s98vktq118350qjrvedffwxl6iqxdv4bmsiv4vjjojjliqusdnook306cn3aqwf8mz9aad8k8i6x1juabyrh5po81ufebx\",\n    \"country\" : \"India\",\n    \"country-code\" : \"ggggr\",\n    \"address\" : \"684k65lxio1bgdism7ibivy4tetdcganvp4dmebmh5nzwnnk4ecsendc1a99ut3ytk9c220hc5k4d0pwyhu5vn9zuj85rfounc0464h\",\n    \"city\" : \"North Suzie\",\n    \"timezone\" : { },\n    \"latitude\" : 4.353813386471225E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"50015\",\n    \"postal-address\" : \"sp1ia9xwpxnk5oubupoluicftn0wdv9oz7xisapbt450m6645c3ggifg83mzt0u5r9idvlopgehce0m6l4w45\",\n    \"location-tags\" : [ \"x6g64694olgj1790j5kr4zpj9bgn924xa81cuyqrztuoxi43syqgdj789k8tomgstwhtbrvqxvdkwafblrh6q9z7t6ipsqjb9jksmsbux578mfeyiku4jeg6y9a2168jn3i2fa645bmwfqqzyd7y5e3zotg4gqwqregi20eenn\", \"xjn22fl25polukybmnwbhdsb4usze5vbhaf6mt3i5yspwkvfbg\", \"ype0ikx5bxqp0yikl3zgbgwplpars3x6q6mpmupv06hj5vp6ybnc35czi63lq7yeuqb1mzsreovyqw9x25mdok0rz61l\", \"8ityrz770lwjuemimf3dwo5aiafnmmub6wlov1pedx16i1260ql26s9vfuncwux78kcqjosmsiw19e00\", \"4u47qz2rjovsz5y0gyq1my9653av19nxnq6gysmjcb3arn406xuh\", \"tofm6ltw7dfd48d\", \"aoenb9wfcfxiczeqot7hhlleq6snvl1l2d887fcfg1s0iie8y974062ldlm2lwq4va42ib2e2ztgk3dnj2jeupum0z7l7cka6x0x63dtjdg3gu6q0wt4totgnedwfw1fmbx9hiigmbx4g4ahxjqglbcgnb6cooz7onbrp5n2wtcn78z6h\" ],\n    \"location-type\" : \"e3ih8hw0y72cl9oyvaid3pjckpvxdhurtqccbz7i2wwos4795x20jx5fwq8dknik2azsy6kbt2uqo99gi9hiersye192b4kd95eiy5tkak6ma3ks3sd7ro700c1il4rj5b5o1pck\",\n    \"state\" : \"Nevada\",\n    \"currency-code\" : \"AFN\",\n    \"country-code3\" : \"m476rqym26962hirrv7qprdk5wmyou7bp23v1x0rag845t1wnhhocm436kg4g9jxjdl06\",\n    \"longitude\" : 2.751547620766398E307\n  }, {\n    \"region-code\" : \"ivjr6hq8fn5fud7awdcgog8q2azhymb4csv73m6mmas89azz5bo8aw50rndi2a4ipgx3drdhpthqjbo2zulaxegxi67jjhrzyv10p7gdxllavlbz7i1772pxfj6jwbitadu6bb4ut9ojrc\",\n    \"country\" : \"Netherlands\",\n    \"country-code\" : \"ttttr\",\n    \"address\" : \"a0v8cn\",\n    \"city\" : \"Ricefurt\",\n    \"timezone\" : { },\n    \"latitude\" : 1.6321759584316857E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"83431\",\n    \"postal-address\" : \"9j503xb0mg6s6ktri0kgd5fjr0xjabdkowz6spsqgk9ile1guz8807bjv42ob98e26xgdpgim1grtpqgf5s142wfa0cruyulrwax60vbh4n1h1i3eei333ubmvp8thy\",\n    \"location-tags\" : [ \"fnl2d3xh\", \"gggcmfk3b8j4g7akedokel140dsnvyyp4hinjibmxrbqzbyejlq57njlvg20gmc87q0wzd2lt3ozyve47b3vs0antirbrow6km8nnk473ob8upridfzhnu\", \"ag8pkypgd50emw9l5vp7vfcyhs00v4vjofu9ohcclii59us6l66uzrp\", \"ii9u4pf929v8s3x9b54q7zblz5vyslccn9w9ma61h0o2xi23\", \"67n621l3jq4nia3i0lcfoxhkmz5869mhlnmwc2qlm1bnwltcd87yl64o7jk0m5i9l6y0oj4bfhsj9j5h2hktloim9oil47uw6y2zpbrn225j05b01x88wmbwavgk6iaotr2cgp28z94qq4ma3jqgfqedwydcxsuko\", \"6z9erie87drn902r18gft5e2fbeehlfs7586nv7vn8r9wrc5tdjryuf4jsyetjqb3izine9wboo7vy4dan8w9zj95wt7suke222y6e0a4t11nqupvqmv5w9eo1rv9mufjeh1oc7f4p0s2itn6rnjn8msedne4if8\" ],\n    \"location-type\" : \"tkmguc289qr19a287au4654naj8s6gpogxtd3oh04akfuoslwkxrm6t3vzgel1tf0t0n96wu8rx8dxyfbr0pj7fyvq7ykrbtjsercmyv5\",\n    \"state\" : \"Alaska\",\n    \"currency-code\" : \"CNY\",\n    \"country-code3\" : \"ydfjyx2hl9j2jg97t58jtw9ibog5l475ycdgt50t5ddgl25rzjsgp03awqbwp2up3w5vga7nfv69qeopjmlh37c380svg0e209on54kzi6nsrnxauwbldghc0tavgu5951e0tiutr6fh7iw7gx69w55sjuef70hknimn4h8\",\n    \"longitude\" : 1.4526151450069277E308\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a754eeb6-32b5-4abe-82b5-89da8cebf705",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.842391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0089bb55-1c90-46bb-93c4-323ed0bf7e98",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "81vg4hdvrn0vqykvixa7fu3749li1zeh5cif4h381ocey9vs5t8q1683e3fuesa06pojdvk4gohzgs6bllchzw2bvu763as1rmz9x13lw72fq3cqfyqkiiob73fzeyn3c0l57p5phywmyi5sjg62"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1111836786,\n  \"apiErrorMsg\" : \"1r6aqvy0mhzk8ms\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0089bb55-1c90-46bb-93c4-323ed0bf7e98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.840621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "376c574a-1646-4dc1-b31b-bcf0122d23f8",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "zmpkkui8ulw9y5fuue155ryq9gzpyovjm4qcnpfx9othzwf6ayppnxbats0byh4cgrum1shdslvnrcse6py11xy3n37m7o78bztshiagu0t77gbaqflz9qfyanp42xtqx3ocxbszfp4gn"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 856566370,\n  \"apiErrorMsg\" : \"sv9o9w4gbuph7gb6ltv7yp5y4ko00b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "376c574a-1646-4dc1-b31b-bcf0122d23f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.840537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c51f50a0-1f7d-44af-96ab-f5634d79d5f8",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "ozgt1t7vak1pdtou8gx63qb4zrxy4oopwdsypp0q5dgj49kjbzwy8wdib7irgyn165vxwbrcrz1ztzfshchinv34vgitet70162fzb502g6cm851i1r7st1gfehcsc0pmksnrllgxzr7hfu7r6nw7vjdkkj14p7fknnmagnnpgyb8az8rhdarxq"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 234369284,\n  \"apiErrorMsg\" : \"ijeb0m6zu9txu3apc6ywmwjh990ywi1m38ujnfks5vw5c8xwlq0g2zb5jaw21qs3wfxvpiovpijy1gzg0tuie2w0n28pg2agljdoxi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c51f50a0-1f7d-44af-96ab-f5634d79d5f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.840453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0d88ef8-eb69-4a24-b311-535de35f1eaa",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "bwynqvi0olobxqcv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtp-status\" : \"ha725ysdbjk7qsyj8yegv4e\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : true,\n  \"verified\" : false,\n  \"is-freemail\" : false,\n  \"is-disposable\" : false,\n  \"valid\" : true,\n  \"is-catch-all\" : false,\n  \"is-deferred\" : false,\n  \"provider\" : \"1hq3goigdmaqlqfllzpuzis10ab0pgnh5yecakf8uxbfy0im23so1h6w5wodbam55pwq4nr1k3a6uieub2ikstei3zfr3pj2jesqtc01a0ccs4yxrqccd50wcv1dfugbqpozq\",\n  \"domain\" : \"ov5pruahnfg5tzoi3glwhu1fhc8lrybpba23p8zb1id4gdgqc67vxyys65cottsbrrr10qolrac4fhjnwkhm55yjgsbb1oxocg9xdjryq5x7ckk8o4t0dfx8i9ffpnjbc3odlwsn0o45h17n3sogtpjaxbejrj55s1wfevd\",\n  \"smtp-response\" : \"51h9sz3udsts0ln3lua1y38gl00whc9sszjdm7eyyxbcwele3w1e4g7mfxitvuqhy64iuliznkhadu\",\n  \"syntax-error\" : true,\n  \"email\" : \"cv9e1q5dcubf2v44ew4uhxutc9zqywf5deodqmjjx9prj41x3evo1hhhmlfz6\",\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0d88ef8-eb69-4a24-b311-535de35f1eaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.84036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-catch-all" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "is-deferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtp-response" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtp-status" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typos-fixed", "syntax-error", "domain-error", "domain", "provider", "is-freemail", "is-disposable", "is-personal", "smtp-status", "smtp-response", "is-catch-all", "is-deferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1d4d839b-f5a8-4ab5-9581-6c73894436ac",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "6j0vedl50pemwsn9dl65sb4y5p5vmdohpgbfpf0kpii5d9bkuw2ssdcci9k630lssep1bvj3rbtd624"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2090625915,\n  \"apiErrorMsg\" : \"yjsnqxhyrdvuzdd7lhiqjvahlsm9dbd6i56r5v5ck9x1o74k3a3mtgqyvxg3drwxuljkvwaxtuzr490xghxl4yolu9slis2uzlvy0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d4d839b-f5a8-4ab5-9581-6c73894436ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.840105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "10eadb40-a5c3-4f89-87e5-b0709bca1df2",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "v9bw4vgdk6scfla7j14z0th7hl4dhet3sapesl6zbr8hds3rfzyizvxsw59m2vxts5xgu3qkez0czxznc12930a39zob6casb7wjcbs0hrbgyczrtnl5078af5w0diyeknlryz2zgdp2l0jvs2p9rxr2o1q82vz"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 517596168,\n  \"apiErrorMsg\" : \"l1rbixl1r0841m3siln62jlds2tw4dbiztmk8lwhf21bciti5vtruxyj1h5qhya38jc6y93tebp8ksjg9anvyd8682a79esm0j8czvgkmwguxw1pu8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10eadb40-a5c3-4f89-87e5-b0709bca1df2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.840016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1243e4e4-ebbd-4f43-bf10-4edb62bbbed9",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "qyx4sq3xsurtsw1pqp0ulc26dwt9slg33ifxcmnettpd2u0llnf0z1phkfth8m6t"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1098906409,\n  \"apiErrorMsg\" : \"di6e6e8skxiqsaznmrabc6td6iypvq3x477yu9gsus4e92q164ltk6rpkkoz9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1243e4e4-ebbd-4f43-bf10-4edb62bbbed9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.839928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8a8ca2b8-cc96-4349-937b-e89572d0324f",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "2ggr4ohzaux28lzokb2var7avyh6ke54xify870cw2n78a24ylx4kzfgqptp4hdirzbtpxmdaxu07bmyhy725sstbx0i9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : false,\n  \"provider\" : \"ypqcuv5betwrwy8p7eb5v2k08qyb0zlxvo0nr8dmirwhcjn6rhzww9njr71s0kj8qd483exqh0w321uhatpgmjce7g3n2tvvf4sj8x8w28gswlxp91bs8jejrkqc1l3upenhcg22zv491j5wvhztbzmvlkot11ot5981\",\n  \"domain-error\" : false,\n  \"typos-fixed\" : true,\n  \"domain\" : \"sr3n6522vn1tikq8o2ccy3w80g3zkni85hfisslgyzgac4au476pgh0ydcdu1i5jy2j37ui4qnzxi7ao1h9rao3e4hju0ke4ex3tdnabe7z2uj9h17bc8cndu\",\n  \"is-freemail\" : false,\n  \"syntax-error\" : false,\n  \"email\" : \"61fk2uftfwyh3ha0kptumu0wsy4yxegjfqyby12vwvcohu6qb6i88hzif40j54thwtttnttk5sjktbwcvs89x64y9223ay1ci6o0utkrx9u50b82npwz92n5iuryzr0dogmbdtog6wy\",\n  \"is-disposable\" : false,\n  \"is-personal\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a8ca2b8-cc96-4349-937b-e89572d0324f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.839841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntax-error", "domain", "domain-error", "is-freemail", "email", "is-disposable", "typos-fixed", "is-personal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f8fdbd2e-47cb-4c9f-bce6-10d3b0d275ce",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "v4i3wteesk5a4ogoz8pc2g6xdwqogoddowjo13tgnccjyobt2rbx95sqklr7gabpf6o3alquc6wug9t7vh5m91k2ui0kiz1j2yub770ts8287rovtvw7z24oqg49807xdjl13x28tflp3bukphngfq3l"
        },
        "from-value" : {
          "equalTo" : "ep42ph98ezj7eitz9woz6d08c8r71ygwqds20a1vi43k3owtzmineqgclsk9uxxjymuzigeoo76j4dwe7qhz3xo"
        },
        "from-type" : {
          "equalTo" : "1bbzfzfwe0l"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 428671440,\n  \"apiErrorMsg\" : \"92ojwh3af88ua77xw6ch\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8fdbd2e-47cb-4c9f-bce6-10d3b0d275ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.839642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9b06eea-e7f5-41af-b41c-ac9999c49da1",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "9atccfhhp84t5l4w5iu7cbexqtpc24d2mpm5whyurrba4zgbz0gqii04k5uqglbmdf9bec75b5feynxtluai9u8rj69qg"
        },
        "from-value" : {
          "equalTo" : "wd0jo7n8ge2jwq1umguqatzb0mm2tcr71ihdjzzsyqhatkorrrmkh1v45xek3c5grxl3u9kim5w6eete67ck1fznlq1"
        },
        "from-type" : {
          "equalTo" : "f4d8eeg95gcd27vcdm9ssj4ectxq"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1618185334,\n  \"apiErrorMsg\" : \"dlk1n8v0q5ctb80bk0c988yxbba04v4tqm2abajke0a9lg8l7bwuv5wiwd68qon6qjxx7qjedbgezytaqbpx4x56jilylpczp73cp8dat6gr1ckhi0dphdsbbk3jvb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9b06eea-e7f5-41af-b41c-ac9999c49da1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.839515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "465851a6-b264-4daf-8a07-05a9e9f01d3a",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "loe9tsli04nnaaif4vwcfdthsebh"
        },
        "from-value" : {
          "equalTo" : "fy597uk9t9wqt8id1ksqk689jzcrz9ok4557t7ac0opyrnfcdwt3kzkbkwob3ohjz2nog5knof44sv1xykxa4lu8s2k"
        },
        "from-type" : {
          "equalTo" : "hnc76czvwgxguk"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2080898965,\n  \"apiErrorMsg\" : \"qtw5lishhtx5gwfvivvgug5x0he8lqw8801bkml6wysyfgvm74g0rll66buvsebzxgwf9egtei58tpyc8sle1twgk2aw0kym76b0dl1e2kt2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "465851a6-b264-4daf-8a07-05a9e9f01d3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.839387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1c6c5a59-4781-4e03-beb9-f1d5734ba439",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "jbxla5nk5a1qo3ec0809rm3xm303z0wdyftpged24h65z4qe61r7xgj7mk61ov9wozsff37uut7fz1bkw0mqqkpqnbqlpgpxkxxwnjidgk2txnr9yfa9h5iyu4j19zl896kibnrfscyec5taonmkf8irtjt3tdlwlqmf4ukvoo0qtskvz8e4k55cu5lrgp1ub26qh9u"
        },
        "from-value" : {
          "equalTo" : "aglo9lnit4bbn953ltkny3aikx4y8vvfnj75fc6japu5hf529b6veft5cvn17ovzc5ixpe6ynyv76sv83uqkvzq82c53oqrlv2wsb5unb305cst697obd3m3m2vjjoa3hu37bq7dokus6i6uw84rxuc2szjm58tuuit97gs2wa1rgbolfa"
        },
        "from-type" : {
          "equalTo" : "ftq7wl1rbf31icu9sb25i7b8m4p71054cz91ulnlz8m287zjodwqk5jbw6aziay3bnedk96t7l5y4w11v5q34se27isx2ingo6m"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"nztme6dcantf0bu2lj6eg926xh1jqaoepwqokykppc1c8t02v3jyuwsi5smtcp1hok0rgh5qn7h49pt5h9v66kahibxtop042589j6hn0mjo2hqlshgbeggj1ckt\",\n  \"valid\" : true,\n  \"to-type\" : \"souy4esg2htaexqtrjag4t3g552k1mo5mstvf25qn3qbrqh8m82cdtv3o6qzcyqrr6f1njeua0l9qid7fxdvh3ejj8cxkpsvifmew002es4tv6ix469c44nzuftfrgu4xx07r6t88z0x608jiyejawicwa5jbeub4l7xus35nk93vb4406mwv2s\",\n  \"from-value\" : \"o6v647sh6ud2jusng6hej79ls8lerepzp4andlyt2dmzfbuom2x663baze2aslhdddp\",\n  \"from-type\" : \"lufezi981q48izqesagtph9oxsmmlyvngh2v2gi8pskrcmf\",\n  \"result-float\" : 8.706610375257484E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c6c5a59-4781-4e03-beb9-f1d5734ba439",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.839256Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "from-type" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "from-value" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "result-float" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "to-type" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the conversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "from-value", "to-type", "from-type", "result-float" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6ad11e12-89e9-46f2-9a61-28ea844130fa",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1041781869,\n  \"apiErrorMsg\" : \"3yzky7sx4gnc9mvicjvf3l26wez84bfmtyz0b5g0vcgiyzmeie77ou9nvsjd1pm2rx5qsxvzeh3852ef5ed3nay1t90vfr0m13nt6va2v717ulv1r0or86xuew5ivywcb9ca0nd9ltkm4apln3se0ydhqi75cn4uyex1f8ww0vn332n5wnq5j3byterlkc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ad11e12-89e9-46f2-9a61-28ea844130fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.839032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d854bde1-73d6-435b-8a5f-db931062b8c3",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 783092745,\n  \"apiErrorMsg\" : \"z3izni9zmioiimd6kcuuxlvc0gp15b4fjes6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d854bde1-73d6-435b-8a5f-db931062b8c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.838967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e2e74613-54f4-48b1-b1c7-ae4e773274e0",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2003653806,\n  \"apiErrorMsg\" : \"bi1iiciq5bnlty4p0l6jid9st7efmkk8cj1ds3yy6ltj82zvut6q6z8j1wfyaz55zwoyj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2e74613-54f4-48b1-b1c7-ae4e773274e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.838903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d7a7f5e2-d88b-463d-8e9c-8e85d50ac417",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exec-results\" : [ \"ffe1gi6oy8hbvnp44pqm3xhng08o3\", \"5q4m3vwlrul8f7yvosj021u4so1fx5yxb4bf03t2a8n3983k23g3k48hw0i6l79jnnfgrroasg3qimn5x1wvqhpp1lmfp98n904txetga6parsqgj6kd043arifqgqnkdrj65iboen2bwwojame9f1smyfx5zpwizbzq4l071q9s0w094y8vfcgnahyapcl\", \"3b7vmp1l8mo3q90ju5nlbknnel65n82olpfotllo6fcnvrf5em0bkxlwurwlatlrw5y0clg4x25j55iqfhdmnsiwos36sy2v59fbf4emo74sz4q5a48jj8j5ht5alcufr7wybe4i8lwo7sm371f8ul205usgglv8s5rg6o1vo2chwfugxdv\", \"kbyr4edpqnow95r3x75f2lzzk25fljwqqmir2onijp85bqi5kx000pvkxlc1lqjh6tvx1k1x4trte963n6gkyk428v7wtituhh5l50ubdvnc4enwvii5mzfpcui16u1tz60jvuo\", \"0qjye7hnjhfcgkj6zjmhp9jmt8ua1wn6fpagnxm40fnkctl22qrvnachpute1swxvwl3cvo7sdmi2axtt54tw5ftihpwl74q66epu8y9nv9g1sfk4a13shua03r7gtg42nlxlhl5xl7iiinrrg3q3fvr43usgtctxv\", \"dchenqgmum7iin7subu5bhgfjm0n478jq5e00jvms1dhld6gxs95tvk5c0wq1w8rxfvroraq9i5t4fxldg1rfavwamnkkostq672zikh1hcrbhh6o6q5r6b0qb9v4my2h5fjgsbgdt5bawz08jh23nliazxtemo1vxqk8qy6vv\", \"xmp903jb8vvrut4zt8d13wxk17gwms76qzwzuxd2r4blnsgxdpunxxjg99hwz8z8eo3dhiw5n4351m9g3vboiabbz1lhbpilroxic02pk97w5j39fuu58jtskwnrwj86vnyoctk4vbwejztrlbb96ssnc1ni76gu4e\" ],\n  \"security-details\" : { },\n  \"mime-type\" : \"05mwu5m2h4yj3fhcyvvz2r8dx2ombx9khrk4il0go84z1kemc715wkdyjjoiff1asmw4v0g45mhitubqvag0oqe6nc53ren1gp3voqk2hrjit585bv8smi1u55natg4puyh\",\n  \"response-headers\" : { },\n  \"language-code\" : \"0oty2l3uaoggr510g8ynw25uah5w8q2jwctf2ik93d9qkuniolnmvg1c357rwxz6k2so65sigal615pd59xwokt6t73lj0isrumalgivur4ovp3n7fnkvnbyu3ff17kc1x51ocb6zu7bhgp2mc5aft5fdwt9ti2qqz7dv9vd0ptk8sa926808yb5iu\",\n  \"load-time\" : 5.48798421230404E307,\n  \"server-ip\" : \"pz0ldlel9gjdc5wvce7lez5s2851sf5tluj98eokcflt6dj4hfg0q2gzf9izg8pu47kd61u9w2e75f\",\n  \"title\" : \"Distinctio necessitatibus dolore non fugit quae officia.\",\n  \"content\" : \"Ut adipisci cum. Natus quas ut quis nemo quo qui quaerat. Vitae voluptates aut.\",\n  \"url\" : \"https://web.example.mocklab.io/879148\",\n  \"http-redirect-url\" : \"https://web.example.mocklab.io/499427\",\n  \"http-status-code\" : 709197862,\n  \"is-error\" : false,\n  \"error-message\" : \"Corrupti rerum unde voluptas vitae eos quos. Saepe eaque rerum rerum unde veniam. Amet et nihil eveniet consequuntur porro et.\",\n  \"is-secure\" : false,\n  \"elements\" : [ \"nlkt11feobnw27u9v4m8ar286uys72bs4bnthlh7psm4zqxxj64p9xsa1k2l9w8eoygp3bw3n5wgollbtr2s4g12v77kt0lvkr4jg4cb7s9fzefg01knc7wcovldi0lqk5y4oug7fpqvuze\", \"qlolw78xbhqh1aaks5707hvgrve1vyjx6mt892sqq7e1nydgox3qjsh\", \"jsmd4dnw8ob7v8zrvg4li88xm5zk2fat2yz7cb3lrkuhtzhrwpmql6wbd9khhtximc2071rmfhmu3m3n8fafllhmkw2s3bzdb9lwdnuhhqt753pv20lam7v36hfwqzr34\", \"08nbfo3sxzqd754l932n\", \"60rcv2b3v4i1qxsy8zrh3h3yjydrs1fu9di1rzgd0b91vnhz\" ],\n  \"http-status-message\" : \"Dolores voluptas tempora. Deleniti ut unde sit ut sed. Qui similique totam itaque id assumenda delectus possimus. Voluptatum dolorem numquam maiores cumque voluptatibus pariatur. Accusamus temporibus \",\n  \"is-http-ok\" : false,\n  \"is-http-redirect\" : false,\n  \"is-timeout\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7a7f5e2-d88b-463d-8e9c-8e85d50ac417",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.838825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "error-message" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "exec-results" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "http-redirect-url" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "http-status-code" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "is-error" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "is-http-ok" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "is-http-redirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "is-secure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mime-type" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "response-headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "security-details" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "server-ip" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mime-type", "title", "is-error", "is-timeout", "error-message", "http-status-code", "http-status-message", "is-http-ok", "is-http-redirect", "http-redirect-url", "server-ip", "load-time", "response-headers", "is-secure", "security-details", "elements", "exec-results", "language-code" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "78112209-90f6-4ea3-91b4-f9f911208aac",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "z8pdtq8wd8nc2kxxrr4bwlb5x677a3dac8goo0ti6np02p2g"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1102217003,\n  \"apiErrorMsg\" : \"4jyk8heuoztc2x3o2p00tj9watzqt88glnlncvmlq8k5e4sjheyo1n1jjtaq7v00wt75y5i1n4vpehp7ojxxmh6htij81qkhwag12w12y3r5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78112209-90f6-4ea3-91b4-f9f911208aac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.838176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6fcf756b-af71-4e40-a59f-423099bd931a",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "zwk3jrh1a2ry1cg4aldbaas8vi2yo8xt00eqk0tq6368bh1q0qlks1qbipdpu3t6v71l1lqp0d2iljiw4kclcmq8v"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 391225246,\n  \"apiErrorMsg\" : \"w9vfgf4gdsn3isqhtvu9pdkmfegnqho8t83rbzlx6aggy9peivh0yz04csv5o2au3qt2f70384mo00rue4ff2jnz8b35v81conwrnt1qcygx8hovnik04frkkwbvc1ta7u1gl8grhfgx54\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fcf756b-af71-4e40-a59f-423099bd931a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.83809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "01bf2af3-0519-4ac7-a4de-0a8fa7cf42bc",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "t2zhh2sgc2nv45zdekqrp33ucfa920hckjkdadt0umnfu4a7d901xsmhcg50em8ivokimcf3dsaxwli1dfmervsk4cpf33z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 425456389,\n  \"apiErrorMsg\" : \"5vky9j407d1ff8qw7zdouq139bx6lhscsxdntw7t1dbmjpvxc1v3xznojm7pps4m5t0y4ep5ks3vvg72ek9u2jedvxjgbvhb9fuxn1apzqztkcnoqfbz7eyb2fs7k2xu8om9hpmfh7apairdiue6rc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01bf2af3-0519-4ac7-a4de-0a8fa7cf42bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3b61a3f9-bcdc-4340-b34c-00818c767896",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "9rabi8yil38c36aai9nj9pb3kaa06qik0bxrt08ct9bureegutp20840yt9a4ikanotawg9pjmfttuav7ptudoa3qt4v"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Madagascar\",\n  \"country-code\" : \"iiiir\",\n  \"card-brand\" : \"ed2r75ov6lvl0222h9x551ggix0qd2nkjijbth2rcghyjs35q1m01jpqmz0j87q11tsazaooeux4aohudb9l55gj1tcrosmqysiuqwgmyxi8hnq03tqlievaz7wr25dzo10u19bc3e8dzkncq\",\n  \"ip-blocklists\" : [ \"88y4x0o\", \"f3ea96ih02yjdvrgtv4dgi\", \"meikmpu4sbjlz1ywbsbgyp8qp0ob44bhdymm2svml5y1cnfeiszqstu8jwwp36l1634ynbv1s1ozf1f0kjns6rh891xwnfcfrxr7td9jdbk3gdy45hopq3s22yrzvy1p9od1trmq8k0ak1a49u4tewga73dywow5vc11ihy8tnjnaxg68ysptj0v4p9qswkpzmee5qg\", \"54ml4ch833jmn9orl00pcixfkfq8jiyoz80knzt076xq3vndz47s9329gw07tdj8i680rqnv0n59o2q00zt2tdbuc9fq8mx36welcdc28ewewqg4g2448d0ok7o2eyoxms3468gg1rqx3napewf9a7jtcwpepgdijttgm6\", \"3s5tat1kmqd2ojutxfye6namgihm89nzod9bgbg0ho6y6ucp20wthxclxkgw8c3jpnkkliyblbebiyq18vttclmj0q\", \"i2r3suf8qk513brxiyt926x5af4v5ghqdngvzp2pbjks7d6ivd9i3c8qs5c8cf3t1011eoy4zg32e53fjly2stj3aua45xl56ljcf7okry67e3vjlo01qkggzii63zwi3rp9woizxaguh6dqte6pyf9qve4rgx\", \"uxspsxazh6oe85xpfetz7g7gji6q4wmb1xfm6r3wf8sqjeh9wrlh60omnc7dxsa4c95q8azuqkjyjo2r5sjwjephyquf9n1hqe22t0m2at3egxf9pnklax4bz8ejxd1kroq0nx1ju12fbs4xyp3ab1k9\" ],\n  \"ip-city\" : \"West Raymouth\",\n  \"ip-country-code3\" : \"wu6e222v5jkatvdg5yakmh654yso3xkg9vpeih1018qu6vmvinuqlm7snf6rxjyqntv4192vjic9e1l5piv4sawgt45ftp7tpr8bu10sq62qjhqyvg5eh8w32wmz2v5lgdwwrjmv7ujevy\",\n  \"is-commercial\" : false,\n  \"ip-country\" : \"Guatemala\",\n  \"bin-number\" : \"l4e3mwycbam01ady7tlu54k0pi5s3dpv5vuwgcrdr1o9m7tam63vcefob3ozg1rr52y8ixrpcp3mr6ci85zy8tyx072rn45xthv3ypvcfdxj4y0b41mairfba1wqnm8tf\",\n  \"issuer\" : \"d90gzjkjio8x3r8c67c893v4tw3wif69iq7k6fl51o4wq7ijdyeshot3\",\n  \"ip-region\" : \"xliwrhl5z9ql5v7ae5lot0t57swusg02yiivh99cm3rb626r6ziuxjnm9t4u7c6w7mfx4bexu5b5dscr12j9r09vkh1fapd7x11azm9jfn5jdsltbtspw12fdlefx65xni5in5aaiwah3vmm6hkaw14yi8govejldun9w6ha2wquj35toe00z\",\n  \"issuer-website\" : \"ytdgog72yvsqhx6fndjrs5hllggujpnhdnmnlxev8l2baatugws2yepula4p\",\n  \"valid\" : false,\n  \"card-type\" : \"frv0jy9pfuiu\",\n  \"is-prepaid\" : false,\n  \"ip-blocklisted\" : true,\n  \"card-category\" : \"pio42sjglr13i1na5c7h3xi4jn10x5zhlbyo127lm2szlklv8pmvfm5jgkrmrwajjbjdbbtu996clflgdse39ovrxqgod4pq19vl17tbpklulv0o13f9wvpzzym0kotfsaiqrem6g\",\n  \"issuer-phone\" : \"1-852-024-4244\",\n  \"currency-code\" : \"NIO\",\n  \"ip-matches-bin\" : false,\n  \"country-code3\" : \"rdgcd5qlfms19v9kf2wbw9b1b33v1wbd1v9wcekym3143h8z3ti5rpi4g0d3bcd9cgdvt56s3dsbvfgiu65qv8jwezs7i9s34t3qo6qlqz4cpk4rck0x24ow0dxlimyemusp0p6lj\",\n  \"ip-country-code\" : \"bbbbh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b61a3f9-bcdc-4340-b34c-00818c767896",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.837898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "bin-number" : {
                "description" : "The BIN or IIN number",
                "type" : "string"
              },
              "card-brand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "card-category" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "card-type" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ip-blocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ip-blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip-city" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ip-country" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ip-country-code" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-country-code3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-matches-bin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ip-region" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "is-commercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "is-prepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuer-phone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuer-website" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ip-city", "ip-matches-bin", "card-type", "card-category", "ip-country-code", "ip-country", "issuer", "ip-blocklisted", "valid", "ip-blocklists", "issuer-website", "country-code", "ip-region", "card-brand", "issuer-phone", "country-code3", "currency-code", "ip-country-code3", "is-commercial", "is-prepaid", "bin-number" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67648a35-4451-4ab1-ad68-91171e89b552",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 970669316,\n  \"apiErrorMsg\" : \"sic069og4kdvmpyffokb8kh1djawjyeg9b6ktuintfmksu99n7nkmwkfs5fx6el2hf3ld7vez3mr8wxw0yhuzzytecfq96v4g7t7schnp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67648a35-4451-4ab1-ad68-91171e89b552",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.837238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b31314a5-ec27-45bf-aa89-e483b43455a2",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1544715544,\n  \"apiErrorMsg\" : \"9wfacn3zn43igwzmw2u89ncafniv302lc9l174mg39t0hr7djyxykf88ofswv6sunpyigwcg2xwh6qlwruzjwf5lc59ilvk3lecdvmwdf9k5ahftxvekbpaceolpvttyfbqxgobx099rg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b31314a5-ec27-45bf-aa89-e483b43455a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.837175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd765218-bb82-4660-b577-6459b8e2962d",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1242027116,\n  \"apiErrorMsg\" : \"tpyq7c8ts0sxy9zopcfwf5h5oat6gdy4jb61axoz5xfgt33prvkjmeyui85iirgghrp91o6ft9zoift955ql73aixi61fjzdltjq281klobbpr9fcfs9s8pdbi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd765218-bb82-4660-b577-6459b8e2962d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.837109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "203677d5-7a8d-4db1-8486-6a14ce0be672",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"rb2nwaza7appm7lo28iiw2efbis11g1e6bt0k9bzrn60t16ewoefchiekg84y36mkkj51plt26aodmrzznrvzd6pi2rz7vf09njcjc4dwfr282pp3i1d1cqb28ryhgw5w7z7bxta60s619\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "203677d5-7a8d-4db1-8486-6a14ce0be672",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.837045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "7e510c9f-00d4-4ac3-a1d2-a1e26f2dc1cc",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1066417283,\n  \"apiErrorMsg\" : \"q84ljrokm3oohnbc1gj8a7epair4efxtlw48evi7le6098xrdu9j58zp8nc5o1kpb10e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e510c9f-00d4-4ac3-a1d2-a1e26f2dc1cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.836993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8baac87b-3410-4add-bded-bbea793ee9fd",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 128994755,\n  \"apiErrorMsg\" : \"9ptiy7zh1vi3zx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8baac87b-3410-4add-bded-bbea793ee9fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.836928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b9ac3b17-a8cd-4997-936f-7999558fa038",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 299820184,\n  \"apiErrorMsg\" : \"42tzl0gprl9v665rwdrexpgp876wui1mosyxph4189lkgedp5cb67e1pveetn57z3hyza3fuax6jjtm5bs01kfzbxws3a98fit9orsav52ndw7kf8qicr44s2ot66m7aadg29mx0xr4qj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9ac3b17-a8cd-4997-936f-7999558fa038",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.836861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "66a10eab-c201-47b2-9237-349b6da8e35e",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"censored-content\" : \"Architecto in ea cupiditate ipsum qui quo. Modi consequatur qui accusamus tempore a. Neque cumque in.\",\n  \"is-bad\" : true,\n  \"bad-words-list\" : [ \"nhqriakbydscxfypqws3ge2pg8lk1klvksauhdoe5ibn2gqf58a8jr4lkrdv9uiu8is75s8sbjpm6y045yxuxdo\", \"ez55w3eky8bgub9kfrqpynkc4yb1yb44s3ogoljlm8yfp0r\", \"00gcz4ni4obagj3k6u6tukhh8dm4ysi1ohpjuauid0ru0u24v2xq9ek3yz90zomyuqfuj73w6290keo63ibgt1kixunbysjbmd71vt6k9ip5r2dw05x4u6n0xli9qrl2gxrcd6uar9wc9osk8gyqf1efqcalwgfe0\", \"y0d2b28hq9czm05pvzn62eqp1nrdjb09uto5zgxskal351v6cp3e6\", \"9rd7avz65jfos5id5xrwqktidjxif8cnlxh2gd9pgrwecgjwylb9yju7e0zw4ntmcgzxa96akhoc44xtgkdu0bowd9i41hgaucpnsmuo0h7bewq5wejdr0vtvdnnl1pfh45smhtw0vva1pgf1mexdzw90uy3bb08ea4wws8yeva\", \"50o8ce2znrsbeujws9bi53brv6mbyqlsnbf\", \"vul5\", \"wqwr2xmcu16wnfc89smp2tfqugrvh8aztykkhe7r8lhhzc3svbjundngukd6x1vrh13vcbkg1yihlrl0d7tcerqrhe7p95d4erwlsbdtpyzx0yco387m4382wer68077aw85gbkwoyrg9thz56llo8l3k4lc\" ],\n  \"bad-words-total\" : 873585856\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66a10eab-c201-47b2-9237-349b6da8e35e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:52.836767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "bad-words-list" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "bad-words-total" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censored-content" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "is-bad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "bad-words-list", "bad-words-total", "censored-content", "is-bad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    }
  } ]
}