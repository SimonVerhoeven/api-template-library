{
  "mappings" : [ {
    "id" : "13051af1-e2a7-4086-9b28-8e5fbbd5aca4",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "f279634mksgpar4ud2kqkl"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1082307870,\n  \"apiErrorMsg\" : \"nyuqywh3ywvq44h9mis73awwryogq7ly9xtuhqxjt0mv4izsf5oyqsgvd18aabnv2x6scpte7n1nthd09x4zih1bg2dgojnre5dibtsctqaoqir8o4knz1awa80ypm841ebcpy1pspn7z9tlsh4drw8yanc7oeno3in4mg9q62rgh32511ta\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13051af1-e2a7-4086-9b28-8e5fbbd5aca4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.646048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5c9219d5-d35e-479c-8183-abaebb8912ff",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "gfn03k4gek15zgdnta8cfbt842wbcz5"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1392342495,\n  \"apiErrorMsg\" : \"ttjqh5lzw56ffkmqqktr53nfypvemix9epd4wuyn7l3ob0ttf36du\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c9219d5-d35e-479c-8183-abaebb8912ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.645958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f81ccb0a-57db-480a-abaf-b002d618c6a1",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "owyfxpmg1sdoiolaldggdtzgo8r0co3weko8l125uf9i1nxhbquszi39cwxh795caqgrdor06e"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1890644837,\n  \"apiErrorMsg\" : \"g8r8lnkqd6emonswpajausg53a63ic26o8fp9yapy3uyo0tsyh3lj2ttuwbxzlek77kot0y5vgka47ix3yncekq2yu0j6soq4zjtf5pq432wnaa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f81ccb0a-57db-480a-abaf-b002d618c6a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.645869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "820bda77-d809-40c5-b817-65ae995b6595",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "upa5zspofh0h9y4q92wze7hc2m6rpgtp2rygop9z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "820bda77-d809-40c5-b817-65ae995b6595",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.645409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2db3c73-8123-43a4-a7fc-a78433d61eaf",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F716883"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 894090138,\n  \"apiErrorMsg\" : \"3ewl6lxgcb1n7n768urin4klnlxesskunr7wwf327gjg5pf3rz8217rh5mh4fclql1ec4d9sekbv36f32jui0z8ht5g9knm0a8c0vhvpwt704jlo6qa0d9s0yduqzodph061\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2db3c73-8123-43a4-a7fc-a78433d61eaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.645335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ef3b83ed-aae7-40bf-90a9-3ad5debd9076",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F574486"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1318880381,\n  \"apiErrorMsg\" : \"b8cl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef3b83ed-aae7-40bf-90a9-3ad5debd9076",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.64519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "48e3bb24-9ba4-4dc7-9c88-e53815be9979",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F112651"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 657871357,\n  \"apiErrorMsg\" : \"skvdwx1g3cfi7npe6zx58nj32r0sbqp8o6ievcbj4etpdyariyjk1ka4klgxfpphdn3yfcu3g1tx92mukp8h1hu4hlhwzcb756mw0dv4szskede\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48e3bb24-9ba4-4dc7-9c88-e53815be9979",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.645048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "101d0e3a-b15e-41e5-b967-3a78ad3dc8f6",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F612543"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"http-redirect\" : false,\n  \"content-size\" : 374734705,\n  \"load-time\" : 6.3310369163255E307,\n  \"content-encoding\" : \"e7xbxbci6dhbqk0l59x5i3jqsbksbwzea05yxegvuke2ntv2ai62gxuhoztl8x6tfwg611nttnf2guzwzh99rd5btaz1i01c12e9dbfs998bp73hf4oic2nz6mokj1a7ozc03kc3j82x79hyu4t1m9leibbargz57v9wt57ev2bwlv6a39ayhwyj7b8nchwasmszb\",\n  \"server-ip\" : \"9yzzihqaxijpovx9adr\",\n  \"title\" : \"Dolor rem consequuntur voluptas itaque et.\",\n  \"content\" : \"Explicabo earum voluptatibus est neque. Quo vel fugiat sapiente iusto. Vero libero autem quis voluptatem saepe voluptatibus sunt.\",\n  \"server-name\" : \"Freddy Lakin\",\n  \"valid\" : true,\n  \"http-ok\" : false,\n  \"server-country-code\" : \"tttto\",\n  \"server-region\" : \"v97g5z2rt1dhd2fsm8oe9mmtbuqnwmj75u3jbimxo925p8l1en60emvsqtzbqm8eij354pdzoiz140uiijur35ga7alxj627f7fyektprwpyeqq94xaz7nl5ymfdm2prn0uv61gnv4m3y91sbl5do71ubq6o95hz\",\n  \"server-hostname\" : \"Dorene Considine\",\n  \"content-type\" : \"uvwyz0ejbny65kfvmfwszifbyboadc66nag01sy1piv0lezu6yixxoomz4g2qkzwrmi5vyp8zvc6rhffsg1fkgas7xmr12wyfv3md0je5lk0h4ojzx1fetx5peqr87ugj97tvit50doa9jx1odu7lkabimkh9e60io2097198n0dynaqys4l3wcoevr56cd8\",\n  \"is-timeout\" : false,\n  \"url-protocol\" : \"8o2rjgjpgxe0av813fhk0528r49rw4r9476lxw58zpmlb7733g0xuf8r2jazvq13m0x73o5jlkme5wg2qqog4\",\n  \"language-code\" : \"g0kkjkvqbgoxiq9nufv6vy76dtfv329kyej86yftfvpyontbq6erzfuza5v2gv1jh4grhrd0d13gx1rl5mv29u7pabe8z2qh0zdrrvwnp7wgjzfomb9nh1lfzug1xjw6l2peh7df7pewatnxz9ka1iiefc7hhnyvmfgmt63gm3gxx3pzynsbnw\",\n  \"query\" : { },\n  \"url-path\" : \"csu9o25e77qp2lcct4ehonixnnxuca7yug78c6uaqthu0ne6iy2j4spyom5e96wunkmadawpuzsioqpdf0iyfjizmjr7xwy7hij66hru0g656givwraso8fipbnt9sbf6sfp88i\",\n  \"http-status\" : 1539645750,\n  \"real\" : false,\n  \"url\" : \"https://web.example.mocklab.io/056727\",\n  \"is-error\" : true,\n  \"server-country\" : \"Central African Republic\",\n  \"server-city\" : \"Harlandview\",\n  \"url-port\" : 722433059,\n  \"http-status-message\" : 1995132726\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "101d0e3a-b15e-41e5-b967-3a78ad3dc8f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.644879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "content-encoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "content-size" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "content-type" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "http-ok" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "http-redirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "http-status" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "is-error" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "server-city" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "server-country" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "server-country-code" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "server-hostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "server-ip" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "server-name" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "server-region" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "url-path" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "url-port" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "url-protocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "http-status-message", "server-region", "query", "server-name", "url-port", "server-country", "real", "server-city", "url-path", "url", "valid", "server-hostname", "load-time", "http-ok", "content-size", "http-status", "server-country-code", "content-encoding", "server-ip", "url-protocol", "content-type", "http-redirect", "content", "is-timeout", "title", "language-code", "is-error" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b9b554c2-cec4-479e-940a-eef4a64013f2",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "jys3twlmx8t4dgjuzro5z1c980t1y8qeqayjxaflyqa3g8tuog5n1npnm4jc9out26ek7lloveeqs6gtaoc9zhgvyduf41xymumgdiy1g884c7j09ez3s2xqdt8cwresps4d5434474kd2rz181x42z"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 214347698,\n  \"apiErrorMsg\" : \"ygdduvyv29wo87xetz3px8nljw942k08srigojinrd1dzx1dfzdt45rcidzagt8pd652mb658wiroz5s4irq1vs6ni3x892i9a8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9b554c2-cec4-479e-940a-eef4a64013f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.644081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ab41c919-41cf-447c-b7ef-2976c605b493",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "eep255krfbul1dbmps0yeshmoa17thtn3ozuudpppj3w1jutz173fpk51oy84k1v2tpdskd6qixbbwshn1c4ais9n3yvpoq2qaay50q6eifmi894v53nr2s1hq03ihcfjdv2v"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 638292289,\n  \"apiErrorMsg\" : \"5s9stl41azw5zesjtqvq9i3x9pbywrkubypha0pm15q7zz3s9a3pgppxlnh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab41c919-41cf-447c-b7ef-2976c605b493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.643991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6b03793a-5490-4a1d-8018-1a09787d0120",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "4nyd2i19x0c7oyl7nhgcov1h8hbnx1c38cvws5kzxlipkk7jk9e46btvi3i8p5jmf7a6u6w3ihnexnsmfprpy9wqjaam5pmhjezk68nhxprb8h8rxy"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 253743669,\n  \"apiErrorMsg\" : \"t3pjmdzid6uju3ejac07yegm3ps5uveikbh9zyl6d4dne9f9qijqwmoeex0k60v5eg03ky0r88cpc51tj7f0xuvybinqeuwgnv6pbbhuozr0k13cwcocuiioygvkfsab2w3divb23llaysmha5ysq2tji\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b03793a-5490-4a1d-8018-1a09787d0120",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.643902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a0192b93-60a3-46ac-9ae9-33cd7c96658f",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "6pfculfefum031t7jyz6cwp6qd6l4rajt14o1trubqa"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device-model\" : \"i3u\",\n  \"os\" : \"0y90x73e1t0h9xw1f6zqa57dbyjkriaufaqz7why8xw9zvg164u81w7nnxe9w91r7ubhdlsb90zl77iojqkvbafpmpml4gk47gf2ss1y7j9cty\",\n  \"device-brand\" : \"b49lnovp9gqt3tjn225hyhb7gjwotyy4saw44kj2srfy6gj2jhmnk2uqryznyl68i3sa50mocaawztz8ydbupb9pee\",\n  \"browser-release\" : \"0du7k8vo83zt84t8ftcxu8ry0yzs58z0qpb95xrh7mcrurptqt8scl7a1oiupxgm37y6tf9d6472kq89yszkzk4yb6y3ywlimdqi8ssbogwiuqttxz1yypb2qlp2tns6n1n2ddyvh3begsyro22eeo3bi8lomk\",\n  \"device-height-px\" : 5.427519815494947E307,\n  \"device-pixel-ratio\" : 1.6079003230135713E308,\n  \"os-family\" : \"crr58\",\n  \"device-ppi\" : 1.3095195089008105E308,\n  \"device-price\" : 1.589343363092833E308,\n  \"type\" : \"pslc4a5frxlwlsienogbsratk9rvae739g5c8p9n3qnyq47i4akcx4bosbttw35snmx71l960eeel1gyrgu74433b9inpuzn\",\n  \"ua\" : \"370jckqe2146kjn12mwmkptw2ms550j1228arzlz6h0wqnlmd9h39ridjtt45hc17a62d1y5138m5rqd56t8itw9ymrojrj5flm9r5lbld6asu7qy859k8arm2e9nn2cywg2nnrjzg6p\",\n  \"os-version-major\" : \"khu6zf2b9eqj94ez31joaymbspngzdhmt8jzbx1ome98bz5mdzt9gr5v58lyts648arf0n4039vgu6kciibnlzewe5cufl6vtsds6htfidswn2uasyyagbr9h8t7s9r0h8xwcm20145nt3egioxg7eu89drppvbcirbqrnsgsgmt1g81oqgz3qo\",\n  \"version\" : \"5xwjvgwo7ixs7lcxlbhisnuafkqq4zg5lc836\",\n  \"version-major\" : \"2raiid8kjn4fr5yat6rwrv1dikzogokhy4zacvkjhtikne1pgzy10knmzgx0ny2cr5394oqsxx9dirbi5dc74ad7zkiyn7swu7nb94dtvdyuv06h5jh9c5hu4njmf1is1ds7g78wz0vmjtvyhm703lcl5lfw8d3nt3e6d90cxrmeq5uqvsc\",\n  \"browser-engine\" : \"nceqsvgq32erulsq72u44x6e7na7uq5vwch0k3zbwqysrjz275fuhormrrgo8urdxy80snzws1414mc3pjygkys\",\n  \"device-model-code\" : \"lxaxlcwgeyd4gk5i1utzjenr3fxtm9j73cn183e4y8ta4x31nlmboumnnf555z9lmhtu\",\n  \"device-release\" : \"39oobebey2vh2brifv4drwjxvv2vjmbpbgn4phcyioeyc6plujcvk\",\n  \"os-version\" : \"mriyk47zkzn7\",\n  \"name\" : \"Bryant Grady\",\n  \"device-resolution\" : \"dod0lfwuokff1ycfjzvgmwu5ar0ynnlesvfsq88o10w5jwuwxik4f8fvfmda9eltjf14bvrvgrq0ep5yho2w1xl5rxggeor1xklndml4vjrau3bsnd9am346iks9afvt32f1m56aulcp7mms61sy9rgfv77fpdtes\",\n  \"is-webview\" : true,\n  \"device-width-px\" : 1.7347927026661044E308,\n  \"is-mobile\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0192b93-60a3-46ac-9ae9-33cd7c96658f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.643799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "browser-engine" : {
                "description" : "If the client is a web browser which underlying browser engine does it use",
                "type" : "string"
              },
              "browser-release" : {
                "description" : "If the client is a web browser which year was this browser version released",
                "type" : "string"
              },
              "device-brand" : {
                "description" : "The device brand / manufacturer",
                "type" : "string"
              },
              "device-height-px" : {
                "description" : "The device display height in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "device-model" : {
                "description" : "The device model",
                "type" : "string"
              },
              "device-model-code" : {
                "description" : "The device model code",
                "type" : "string"
              },
              "device-pixel-ratio" : {
                "description" : "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
                "format" : "double",
                "type" : "number"
              },
              "device-ppi" : {
                "description" : "The device display PPI (pixels per inch)",
                "format" : "double",
                "type" : "number"
              },
              "device-price" : {
                "description" : "The average device price on release in USD",
                "format" : "double",
                "type" : "number"
              },
              "device-release" : {
                "description" : "The year when this device model was released",
                "type" : "string"
              },
              "device-resolution" : {
                "description" : "The device display resolution in physical pixels (e.g. 720x1280)",
                "type" : "string"
              },
              "device-width-px" : {
                "description" : "The device display width in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "is-mobile" : {
                "description" : "Is this a mobile device (e.g. a phone or tablet)",
                "type" : "boolean"
              },
              "is-webview" : {
                "description" : "Is this a WebView / embedded software client",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The client software name",
                "type" : "string"
              },
              "os" : {
                "description" : "The full operating system name",
                "type" : "string"
              },
              "os-family" : {
                "description" : "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
                "type" : "string"
              },
              "os-version" : {
                "description" : "The operating system full version",
                "type" : "string"
              },
              "os-version-major" : {
                "description" : "The operating system major version",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "ua" : {
                "description" : "The user agent string",
                "type" : "string"
              },
              "version" : {
                "description" : "The client software full version",
                "type" : "string"
              },
              "version-major" : {
                "description" : "The client software major version",
                "type" : "string"
              }
            },
            "required" : [ "ua", "type", "name", "version", "version-major", "browser-engine", "browser-release", "os", "os-family", "os-version", "os-version-major", "is-mobile", "is-webview", "device-brand", "device-model", "device-model-code", "device-release", "device-price", "device-resolution", "device-ppi", "device-pixel-ratio", "device-width-px", "device-height-px" ],
            "title" : "UALookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a11b092-4786-4bf3-810b-9316c9c185bb",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1065761388,\n  \"apiErrorMsg\" : \"mopuh9xbv7xul3e2elmszzp3aqlyihywu3t303gqe00alf7czsdh756v33w72eww8k3f32sismx436qvn3rn6uhq231m6gwfr5fkvy3mwqi9dbmrj76672ecwb38g9ce9ap0ibj9evaghinxbzs02pizsnxwybow3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a11b092-4786-4bf3-810b-9316c9c185bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.643285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "58e3c6cd-1cac-41fd-bbff-91bd26425958",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 105681296,\n  \"apiErrorMsg\" : \"r7of00frd6o1dlpixu2xthhmbdtq9tmx6nek9gaqtjnnl60cwz2mpdb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58e3c6cd-1cac-41fd-bbff-91bd26425958",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.643218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "152a230b-7990-459b-a014-b8b62cc7e35d",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1842229044,\n  \"apiErrorMsg\" : \"9jc5fl8vqmj8p2l21q3i21a5lkmtyclwpj1hcz0bw3hux0i7xz285y5qn0vlwfgy9lzrq3rrfnjs74pbjs8gb6430ttqqa1p62jw9cz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "152a230b-7990-459b-a014-b8b62cc7e35d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.643154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "50119672-6c6f-41e4-9f32-b657010cd06d",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"29qozudhd8gcasi1laa0dbq84poc0lulhmqfr07eqvbxch6ysz8yts3s1lgdl10y992hd5gzbl4bs6ilfp4ptm9qsbnhtorm0vczwgggsn7iebqwynb74wwb366fqwdqh\",\n  \"sent\" : false,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50119672-6c6f-41e4-9f32-b657010cd06d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.643088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "number-valid", "security-code", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3d853251-6fb6-44a2-8267-d443e98b0fde",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 590320647,\n  \"apiErrorMsg\" : \"ckbq51f84rfsaraf1cahg9k84kbpg2nm4cez1wzz9crc149j1sdpfpyd4tenkm39xcfm378kk7edbsil3y5kqhrrn6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d853251-6fb6-44a2-8267-d443e98b0fde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.643004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c470b46-1714-49e4-97c3-2b6a01a8d3d3",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 29603773,\n  \"apiErrorMsg\" : \"gpib9jmdhhl4f7vfp8mq0ca6wgpazjswht6qhycg7plqdrl3hnum2d2qjfk1actqsbvfuhmigb34yymddq8nnejoniirg3grqc8x8az58tr7ge8rhl5tzk9xhf4cjkig2v21zu744q4m49m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c470b46-1714-49e4-97c3-2b6a01a8d3d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6df45e1c-4b41-499e-a31d-a127a31e1ddb",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 234136746,\n  \"apiErrorMsg\" : \"ui2i9kbynvib4tlzjj9a26ut7n2626n0eezlql7558wvzqqa9qmg0bw217elkk1fjgyohdgv1swuxuxld8sn2596vscm7w6cnr3h7ed0xj0qzy297aioss82b1vh85koj9epv60dj0zt09ha7w7tvai9jkr2abkjsg84a8imlw1hcrd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6df45e1c-4b41-499e-a31d-a127a31e1ddb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642871Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1e05be61-0802-4f1c-9e57-a4f8938c7f0f",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"vz7k0wvzt6n303u3nmid6wat3ekegm2muqbyw3rr7kzfjqzo0sqck64ns6c9fj9kaczemtjb0z4rmixf4987mcs7mdz3q2c1ro815qw5mkqbzlx1rk8vrw8v7w9upva3cj9q\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e05be61-0802-4f1c-9e57-a4f8938c7f0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "bf1ac30f-a8a8-4346-a2a0-afaa02c12e14",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 769084913,\n  \"apiErrorMsg\" : \"pon4e35d8zbjccy7jdxjtv024oq8wqdoz74mfr1zvak8k0lrgfiu5r1agiqfln8hcli3ygwem8wqp3ckp1yirs8vathd15pynxlgdxjkot9w5qwajgs0p9bfd5pd5m3y4r4g548ml9bzbljo9rqc9bopubbft0dpgk4kqrdge9wyafn00a55gyih4y2g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf1ac30f-a8a8-4346-a2a0-afaa02c12e14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "181382ed-fa25-4ad5-a9a1-a394944bbfa1",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1709641858,\n  \"apiErrorMsg\" : \"j5auxlqull4mtf9s6ht4ls1omrtet8xbnsf8mqfq61vlv1tuqobjctajq6be86cker7ts6cyxa5bcbok7317a7pcv4rzrynzyphcr2voo6n0tegyk8cuaqs9hjoydot84e1mu62himc91tpf5y335vpfwxq2vx73x5oqu9fl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "181382ed-fa25-4ad5-a9a1-a394944bbfa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0a436a79-8bfd-478c-a8af-312476545d4b",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1149327365,\n  \"apiErrorMsg\" : \"k3i9sxiox0imhrducmuoqhb8cizfpry9gcjo8n4331udkikhkyzy8f4s9qi6c1qbdrpn0w9bnhk9z4nn6onnevmcpm4g0z8d1bzj5mtfoqg6icxa2uxm5rku46a9qy0q6ju3yt7o6uhdcycv5bhc8z4nuu3ea1asn9ln1mpux43p63iah7gog2ovryz2vlilgooz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a436a79-8bfd-478c-a8af-312476545d4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b5ca6bc8-41ea-4268-92b4-f4e81078429c",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"ndr3e3sb2intie7snyxkl15peul2ir63zgkoz618wyia48qkgt8cz50wr2xy8q2m\",\n  \"calling\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5ca6bc8-41ea-4268-92b4-f4e81078429c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "calling", "security-code" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3a9f8232-4405-4e59-9cfb-2f1868d6245c",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "jeotcnwm6dki06qtf9xi8n2ribldzj64azyq7sjzyljdjdldo7waqbdx0mdzpghg1ukokcevs921hm89rgqdmtp0fzdnbhfl1ny99t56cje740h1chp2i"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 609780216,\n  \"apiErrorMsg\" : \"gyfw5o1i7zfgu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a9f8232-4405-4e59-9cfb-2f1868d6245c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6c4d3618-c774-40b7-8159-cd4f543b8fcc",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "clp75v2vhe4tafpmcx9z4eepnxokrim7hnpmvdpucwly3wj753mdks5l0ftrsl2hjv73hxc3ycp0t5arh2q2hodcqvifg59wihyhysih1csu791pcl9i8crjhbfeuamrqay5b2xi72t97hm7b4zeo"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1225125326,\n  \"apiErrorMsg\" : \"o90m8f04tqq5yssba3mwqs3rpg5tdhl1wwl7doh981h8cg22ajoc8fbkyp11luzbec5n5nxnepke2ngrzweorzrcz0v2jc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c4d3618-c774-40b7-8159-cd4f543b8fcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "08451bd2-ccc3-4b12-a5b3-41eb297f2bc5",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "t81za57rhh7t8h0f01d1gzbwohsta74wp82j6f9bwhuv5utw3ealdz1zq9w1856rqruoxitul2jpwnh9"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 493569665,\n  \"apiErrorMsg\" : \"lzod8w0rh9fwc9q2hfnuz9v40varr6az1obl5unqfmplz23j7x9w1p20in3j88rzag585pmvgma\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08451bd2-ccc3-4b12-a5b3-41eb297f2bc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e914e6f2-e9db-4630-9bd1-f188fb2e5d88",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "0dvmidw24hxhcthayrhvm78bdydrpoamz0b6bxw7rew0xohd7wt60wr7hratp4u1u4dxmgavwfquxuro5l2zayw8bcal262q6q2zot8exebd4jekqtvgg0wfwuqbd4lm5294cpapzockn4ztpm8yneev8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : false,\n  \"country\" : \"Serbia\",\n  \"country-code\" : \"ggggw\",\n  \"prefix-network\" : \"0koo3hinpsbo80mmg7fc9z5hif0wvr5tg08nmzrbzoxm8z66vuv6haeo7x7ooldrs8ga4s5xlpp039s6n7p13h6eq90e3wmuyf0bdqstbmq3ntnx55gi\",\n  \"international-number\" : \"htf6yr97vyplcus2wpb6yaijjtjaq9muzs54xr15og4hv1i4duaexdubk6bqtij17biv3zk1ile23hbhqby18sit3ssq3oainz5ux9al4pjksgpb9kdytx7kdgm179fdpjeuqj78id3xhhaocux24xgroxu7piivfsijfyv28kv\",\n  \"location\" : \"gdurq16urfkcstwzg0v505l220foxvnmf4luq0igetg5k725j8g13mbkiq9loavadyok2s705sqe4khdghuno\",\n  \"local-number\" : \"q2xly8k581lrm5mu81jv1vyhg550zfbba5f5uj9uc8cs1mkxdc5k64kv3o7317wfhwz4na5as15xcqyznef9i4oto30v4zk5jl4lij1xn3ctow15eygi17hhbam374b3j6mbrq1inztf305qhqg87x08o0wtzpxkrpp0htsxutsdoepumkzhy71kvzegrypmlj\",\n  \"currency-code\" : \"XBC\",\n  \"type\" : \"qthfv3506g66utpz18q7pqudl52e4531ofb196ho9c6k7yaykw3kekgb2hqxerso6ycxz1fth2i2z8khnczcj4nri12pst39dzymjj8xz2gxd69ugaobb2ixbuch3tvdxtjd1mj1f0qc51tzf\",\n  \"international-calling-code\" : \"zzyld1avxzwlefqv45un5qydzrblagm0pmzt7aa7wkcxft6hrx22dob0pcb2p0owi5fv2ahr1tpk1574gvr48q6ehf2s31d486fjuslri3\",\n  \"country-code3\" : \"y24\",\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e914e6f2-e9db-4630-9bd1-f188fb2e5d88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.642197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefix-network" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "international-calling-code", "country-code", "location", "is-mobile", "type", "international-number", "local-number", "country", "country-code3", "currency-code", "prefix-network" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21fc8cf1-04a5-4933-af70-3f4fc813b1c9",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1752542201,\n  \"apiErrorMsg\" : \"g337xkbq84rulkljca17wyex52qrjgkc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21fc8cf1-04a5-4933-af70-3f4fc813b1c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.641888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9d0a55ff-b758-45d9-b21b-d42c4aa5615c",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 843295963,\n  \"apiErrorMsg\" : \"qbd5qhq1zfnkl6tczlv4obpckno62ksx1p18i5vnzkn7mevc6wzde2j2lsh151fkceinmoawdm67k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d0a55ff-b758-45d9-b21b-d42c4aa5615c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.641824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f80aa0d3-3c55-4d6f-a63d-3c8f7422eb6a",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1049023869,\n  \"apiErrorMsg\" : \"x3zfs46m6jkqkj5gkh47uvq7l4f5i9e4t6ahbpldlnkx3sqrc2colfmup4r3tyut9awpc1zikjeba226tregpg6ug17a9hfulub2vdzib7x7476nwhuw9zzaxctp6u2hsfdacr9orm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f80aa0d3-3c55-4d6f-a63d-3c8f7422eb6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.64176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "07db17b5-e5ba-45e8-9a14-f7b8cb559971",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"calling\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07db17b5-e5ba-45e8-9a14-f7b8cb559971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.641694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "number-valid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "760487ee-5f19-498b-8e61-7e476c7cbcb5",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "chkgczdowm7z3i9u99qi3go5bi4fv24p2qvqdi4n1csl9jxr32annlxvnzdkb5t5xg0qx2fx4yhm3p8r0d2nv5lxjcbq4nxq9ukkgvskl2"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 848037041,\n  \"apiErrorMsg\" : \"hl3h1d9gpqkansk1l55azsb3ozpzx62yjkibsovoc7v5icfw5luxjh92dnvetagwey775ghc12ycwq69dll8qkwog74eibtt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "760487ee-5f19-498b-8e61-7e476c7cbcb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.641632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b6d44fc7-62ae-4396-8484-769cdf368706",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "vprzm6yetlvovxxbqw703dal82boeufqca4p1lob6usf0zadwwweqd8awcyr7n9zd6aud6oxxrpz67q6xkwmfrzzjk5so44xy4q1u0i5xb7u"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1936636669,\n  \"apiErrorMsg\" : \"6odeks7hhzola8v26ze6008di9d125thxyo58y57biqiy0xtgrheuxm0c9cm3nn73hx7xbd16rbkikob728wzj0080ruwi5a9kezmr61dxxf03ul4qdldty9g6u98acwqfh60lpop5us7i7nv5io6trjuvllfh0bset6e6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6d44fc7-62ae-4396-8484-769cdf368706",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.641545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "adbb45ca-3449-48ae-932d-1cc3d61b47f5",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "3z9lv5ly9wvq0e6ccp61mq5uujr7zuw1qs3fl54y7rkqou1l6g1asvwu8ee1cuj8at19c1ojijyare2n4xzs1qaem9gomf68mao4w35x0xd2pno4h033qha0dr9t8jx30cy7u9epg895x39r15aqadmyn0mcntoa7qlcq9tx6tng"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1868344201,\n  \"apiErrorMsg\" : \"blu4p5838out01pyv8hm5j6zayx9qnpd4hnuklz10gs8q4gi4huu9c9h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adbb45ca-3449-48ae-932d-1cc3d61b47f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.641459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "becc4b0a-1966-4746-a673-0c0aa71257fa",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "ewjjnxuiox351rmuw52f496g604vfrwea0kg1a1tpm2hz8s7vihzdgbxbw2caw64tnuwowdt3bbsdj6fhc8crmwpo6ogluxe5car4k4vzj78eg3xkiqy58tt026h8fh5qw31gp4e0320wbmyad30mdmcbn50rtd96jauqj7rivyb5g9da55sdl7fl"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"8xqo2fbz6rhpo3m38z4rgamb3kbqntz7s2f2kqm1w07c\",\n  \"country\" : \"Netherlands\",\n  \"country-code\" : \"hhhhr\",\n  \"provider-domain\" : \"38meywj36\",\n  \"city\" : \"West Alex\",\n  \"vpn-domain\" : \"51i25javb6h0ub52dnv365zl66g9b2kdfo005uxgu79aeqcawvtq820g5w2t4i9t4a3putub13u8csqupox5mnlwazjltl7516tzyelxl6bc6bspr0azl23ttkqqkdajxsjvo339txqzaamjqeayv96l7uccbv\",\n  \"is-vpn\" : true,\n  \"as-cidr\" : \"ifhaam28nwg3nvsehhmj7\",\n  \"valid\" : true,\n  \"provider-type\" : \"pfbr9\",\n  \"hostname\" : \"Nicky Beer\",\n  \"as-age\" : 1588018427,\n  \"continent-code\" : \"2zqimxs5ilth7wgumtvbme2ffzb5nasfd6e99xexv22vytfn9qovu0ma7ewcnlebt5jz7e4\",\n  \"is-bogon\" : false,\n  \"ip\" : \"96xkns2bxgfdyrxue36bbs140yvp1gcesubknwgpi201wseri3kbgvkyphitmstoizfuty9tz2uns4n8jy9owxcxnbm27wo8f5f2ohm4\",\n  \"as-country-code\" : \"rrrrs\",\n  \"provider-description\" : \"Ipsam non sit et. Mollitia nobis adipisci odio doloribus accusamus quod. Ratione recusandae provident.\",\n  \"as-country-code3\" : \"q1e6a00y5ua\",\n  \"is-v4-mapped\" : true,\n  \"is-isp\" : false,\n  \"as-description\" : \"Cum dolor non fugit. Et quisquam molestiae repudiandae voluptas consequatur libero unde. Numquam hic blanditiis soluta dolor odit similique perspiciatis. Voluptatem aperiam sit necessitatibus repudian\",\n  \"provider-website\" : \"3fvuc9kwe8fal0wsdz6e1t3z624dkiku4ro\",\n  \"is-hosting\" : true,\n  \"as-domains\" : [ \"vu1qlzwxp1dic1kxyuautqx1djf8l9c5ecenxnugohmbimdv72go1tvwsxzn9cr4qvxr2hxnkfd9h8kf4wxg3yr98r759be6wm2jug8bwyobylchwtypurug40d57m8gge0fasrfqatbkwubs1vgwjbi9t\", \"qjznc3s9g4mg2hh3y7uevqeqnp6yio6umhh448ivyif0413lsl6gaf\" ],\n  \"host-domain\" : \"x9few1y0ji9vmfthi5t1cfsfa5ujs9myo95udcc4ejm3vchyr33bt2ww8np41\",\n  \"is-proxy\" : true,\n  \"currency-code\" : \"EEK\",\n  \"region\" : \"z5n00o0x5ymn9vuvmbz237kgnz5c8vro5dxqcghqlzsb3iatwuq2epe4pgrz85cobk116u7a1y7ters2p0xm1al8i9q6621iel0e0kmcc5py46lajzxxqqu4axceyjuhidyh06yvr326aac9dpywrpixewz28o0dm\",\n  \"asn\" : \"eq6z2jhn06ie0hrcg2wqmy3h2gplgb\",\n  \"country-code3\" : \"89ypvhrvv75srstz4kubt8ntb3qzbhxu5hpyfgvmx3vfbxor23oy0i6ei3e48aefu00tqu\",\n  \"is-v6\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "becc4b0a-1966-4746-a673-0c0aa71257fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.641356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "as-age" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "as-cidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "as-country-code" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "as-country-code3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "as-description" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "as-domains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-hosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-isp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "provider-description" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "provider-domain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "provider-type" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "provider-website" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpn-domain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "provider-type", "country-code", "hostname", "provider-domain", "city", "provider-website", "ip", "region", "provider-description", "continent-code", "is-hosting", "is-isp", "country-code3", "currency-code", "is-vpn", "is-proxy", "asn", "as-cidr", "as-country-code", "as-country-code3", "as-domains", "as-description", "as-age", "host-domain", "vpn-domain", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "df3b295b-fdf1-4f05-bb4e-9078ff2f747a",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "tu5s1mwrc7kg9odo8erff1dgezblw7h3s4sy6hexgtswl48jd8h4iyle3d99sisdtbeuoqk"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1752428991,\n  \"apiErrorMsg\" : \"7wyvahqbm4qvm9uz7l37f88xjw6jh7zxycu0mjhcqn54a2zvn0gml8ztydbgpcw4pczigrtw175m1xmlk554sw1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df3b295b-fdf1-4f05-bb4e-9078ff2f747a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.640603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2153b1e0-b8c7-42de-b321-cceaf31e90f9",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "ys3r2bg9iocezishri031vbsz9rklsdiz7q1sa07764obowrkib0u1oi06"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1511006556,\n  \"apiErrorMsg\" : \"bpv0snjnp3n5b19sz7plsdg9fq3f8ezpcxme99tqrg7kv9l25pfrnzytk1c2zfys9lse288ntedu6z7nmxypbof15jmjc7dsrp1r6swetl4uy3og63h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2153b1e0-b8c7-42de-b321-cceaf31e90f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.640516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "28c50f82-abc6-4718-9d1f-5a8880c10b23",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "d4ydo14aquylryychmd496ojcl1xqqscim8bkwepr6w46v3p4nb35bgl9inwe7fq2u"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1323070135,\n  \"apiErrorMsg\" : \"9yjtgbm6rm0c9bt9bih3fyx93rolqtsggu6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28c50f82-abc6-4718-9d1f-5a8880c10b23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.640429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "15f1bf1a-bef5-476b-a2ac-2ac49b6212c6",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "nxj3redsi2z8za9xt4i4q3g5zyyazwhsdic0sggwf5cu6p2605n52tmz47t1vxbcnluywgluc8ugw4bbd6eid5fizx6e8zze8ybyl48jbbcohb3ewpzmte9xud72qww55mtslfah6d4ytemd47amu0kc2ne8pnvxilubalm7e7ssh5d4un"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"du0pr6c8ymwuowd7irnh40361c7uti3k6bof7tgrill6cnqv9pgpbn65pqlipygh5jbaip3qbsknl78m5f5sspid0qsejr35j1g6x9hksuf3rt1y\",\n  \"country\" : \"Liechtenstein\",\n  \"country-code\" : \"eeeer\",\n  \"city\" : \"South Rivka\",\n  \"timezone\" : { },\n  \"ip\" : \"bj2io7xoadlvgm543f66nrgj3l6a241vxix1\",\n  \"latitude\" : 4.510664044630393E307,\n  \"valid\" : false,\n  \"is-v4-mapped\" : false,\n  \"hostname\" : \"Daryl Greenfelder\",\n  \"continent-code\" : \"i5gmvuzk42zxhxr6f97av56u0be71ypsz5sqj6j4lzo0mbad8nqnsbggbnxhmiw19qovesxkc3j7r88lfk0dutjc648bog25ak1tozy50tfgvr2fw8lqke0nc0ygk2d103q6tki7pdkvsczmkbb9c7h5po0g1cfp2r3ww2tprbra\",\n  \"host-domain\" : \"9lzh3elgsbipsgk7a69stdg1b7bsc22dm5tp6fjz3er8zwjr90tiuw205n3kna6f1nl2nuu71c6d9mtfwk5n03r5k0n\",\n  \"currency-code\" : \"GMD\",\n  \"region\" : \"pu5qxlc2r7e70kyksmlp6tw9jaa0zlxmo5uyvrx1l3ns\",\n  \"is-bogon\" : true,\n  \"country-code3\" : \"0hmwa6p02p3nh9ej6n24zt28tqs0ylnn65l\",\n  \"is-v6\" : true,\n  \"longitude\" : 1.2405123339851855E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15f1bf1a-bef5-476b-a2ac-2ac49b6212c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.640333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "country-code", "latitude", "region", "longitude", "continent-code", "ip", "country-code3", "currency-code", "host-domain", "timezone", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0193ed5-6978-46ce-bfc0-6407241d1c38",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1380253424,\n  \"apiErrorMsg\" : \"l2dubua1flbsrtvkjco6f8b648vl8y9ji1isotf631lc6u1br73uro3rpf1ppx2x7vgarzn56vn2zp2wuyrcywk9u4dgvqpguyekojzii9dsuz4ytg73thr738pi6jvcqbimud1il8yv51uq87n1c9iudbsjteqyb9cszhihekb3yejqh4xg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0193ed5-6978-46ce-bfc0-6407241d1c38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.639856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3767f395-f9fd-48fa-a88f-7a3ef88c1367",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1856389124,\n  \"apiErrorMsg\" : \"klteszygnwa7pn571t1o1iivoqkf0c4ed48brw6owlhwyl1v0th6nqu6hhi3a7m1471v9v3of7b6gsi3zw02c0hg7joh478ocn84we1o9yo5vdlx6a4o2124mtoyhb8iv3ysjjr0y3gpnclgwigsyeluqydpev1cy0tg60txliyigiq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3767f395-f9fd-48fa-a88f-7a3ef88c1367",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.639791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8c193340-52be-4051-ba27-060491ef91c3",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1285679269,\n  \"apiErrorMsg\" : \"25bs7kx2yhf232ndramd978ea2teafp14oaos37r787zza0j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c193340-52be-4051-ba27-060491ef91c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.639726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d852231e-c444-4a0d-bd49-fd978200e9cc",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"kr5tbz1f1cdpaajmr294lgkaeu4wqifd0cfywfyqmxxkpbhpa0izvil987qi5af0e2lskglwu0uu8f55kktizxrgm5vhy3xlpuu\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d852231e-c444-4a0d-bd49-fd978200e9cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.63966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "7233d20e-25a8-402f-85de-0a766aa13522",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "y8o7hau409l4sde4e4py5cdqbn1lu2z82fox6t1g03fpfxvw8jh7xvvw31hda3hdbzdthpkh11yqlbbbxzo010bj6txbs2t0oprl0lu4893fstk7wxi233owt8xkwozaawuzi4vzkgrzn4xvepbhqgu6gug9myhht9dgrgg1i54rexvs7a7hukqt2ychjq8blrarnw"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2127238476,\n  \"apiErrorMsg\" : \"9kcur0kjflu46ue0jj71cgb7hnemo13x4b17ordstwic44pz72uhq7amarbu2gvzabz4drzmyak1fsbxr7ufra4rsm8an2ik9zcsusd8mhl4bmx37fhbpj4nalycrl1d68r0feki8pl69q1b2ec5qfydyc1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7233d20e-25a8-402f-85de-0a766aa13522",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.639591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6f72c5ec-2948-4945-946d-4fb8d9e842d7",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "i57y7a6f0mlp4bwz1x2hsrxtwmzsvw27pyugkfcaxh7w31flofdmesqp5htfgpowq6fevd3wco6ayuorcqsrf4xfraj1yim9x6smjg42l8368hcayfluo0c"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1209533445,\n  \"apiErrorMsg\" : \"3yd6jl9tm5oi90wcbv4z46uosmb92hmr64adkdkads1gt54z3v0mgjh8llin848fypm0h0dv1b2f9aahotxaaekztt2gwkrmr0lghr3lnqfv23zntfvppprlunt0b7fh1rrvwt70810ocoib1rri1uxpvvufw4bjsstrn2o7y7dm5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f72c5ec-2948-4945-946d-4fb8d9e842d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.639502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "44b259fa-502a-4245-9d48-9cf10b1276f6",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "axcam4bi3f6cg9i13vsaaou4ydw0w1ybb"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1731415129,\n  \"apiErrorMsg\" : \"oz22pkl247nqfwnt9dwlgalozjp7rei2149vzco6jzwilk6mrk6qcqwkm9z8lmrcpp3aotg4qsxxref2zhtsslyh4qv6onh3ejjj4jlkgypvlxf1ass9dfftde9oejrzoh6lvinqmi1z6f8zj5w1737iq6wjh65g2jw1ldqd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44b259fa-502a-4245-9d48-9cf10b1276f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.639412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "900fcd11-c685-4dcb-983c-f00342196ef6",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "hzgrh9xyiumxsnobhrasonme8ratvhujbosewqicrqgsscuq7zrhqy1i34zqgp9l1hee13pb6oi93s39raje47suu8u0fdgpoa6oaxcc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is-hijacked\" : false,\n  \"is-spider\" : true,\n  \"is-dshield\" : false,\n  \"is-tor\" : false,\n  \"is-vpn\" : false,\n  \"ip\" : \"2zqxw75cq155g8lfzden78cs0lo\",\n  \"is-spyware\" : true,\n  \"blocklists\" : [ \"gvk4vhns9s6u6ad1mbreq7kgklkv4908o8u67fzwni6fcghz297rrrie\", \"c0mbebvsjsf70y\" ],\n  \"is-spam-bot\" : false,\n  \"last-seen\" : 838997244,\n  \"is-bot\" : false,\n  \"sensors\" : [ {\n    \"blocklist\" : \"2ed97cvkwvubjfj6u6ojqrryr4e14h2mb6te2z741ux78q2p6v2tbngnbs08o36hydryosho6b3i18zpeu0ne7t8lqrczmjk8hvn0w29qw81ypk36n31ibeq58bq8z5ipk8\",\n    \"description\" : \"Numquam vel facilis placeat quis rerum excepturi. Magnam cumque ut necessitatibus eius et dolorem. Rem exercitationem quibusdam nulla.\",\n    \"id\" : 876764860\n  }, {\n    \"blocklist\" : \"tty33ldb2z5jl1r9pjgta8jrm77tq3ii13uyucbniquxr99o4daaqt2g058t3rnzssn60tbrjob6c2e2xa2vy\",\n    \"description\" : \"Explicabo qui sit excepturi non quasi explicabo. Quam aut dolorum sapiente perferendis. Culpa eveniet minus asperiores non quasi est. Voluptates dolor voluptatibus. Sequi ut occaecati vel id beatae la\",\n    \"id\" : 16308598\n  }, {\n    \"blocklist\" : \"g02dwjr0ipnzfai3ma87p\",\n    \"description\" : \"Voluptatem quas et aut. Fuga laboriosam quisquam non enim consequatur ipsa eius. Placeat et veniam rerum et in et.\",\n    \"id\" : 689012399\n  }, {\n    \"blocklist\" : \"2spmj3brd8iiagnlq3bliwcp9vt8xa45tz3nt4gbiqe1xckf2opyi0s663r9jz0w0qthvt9m11n07ufs1rf6zrkknefu7fjokul98rcnx5esqq487cu6w5f1fcsb5bb1gm\",\n    \"description\" : \"Commodi facilis debitis quia natus. Consequuntur ut occaecati aut tempore eos placeat possimus. Soluta rerum fugit nemo illo in. Alias optio veniam quis sit.\",\n    \"id\" : 1235607399\n  }, {\n    \"blocklist\" : \"69nigcfgt8lun4jks6qjxqu5439pwgr4mrid2i5acm8jdpnlaz3bbt9lerif3ph0hhxhurqwblvqv6rh57tznea9anlg8w9edgjppo85xi7v4odeh5wtvfe4727hj5lvcbhu7n6xelcue1v8wnurgmnvp5zzkobepz6xgmc1e5d6b73hg3of5uigdsa8\",\n    \"description\" : \"Omnis assumenda aut distinctio et dolorum. Dignissimos vitae odio. Laborum eos recusandae. Nihil aliquid nesciunt corporis porro eum est.\",\n    \"id\" : 353683645\n  } ],\n  \"list-count\" : 952197234,\n  \"cidr\" : \"atxk1deiqz033qigh7y7yq0isblw9chemjrd6gchsdw844lhwf032gqp3rg7g078gd7v6dr5spbpyci8a6j45tuf2vjgmwctw9dk3vaxj6wvpd4n0n5mpgdaaa0bn89o1s9u565yxk4y2pwwuebrw7y479lirskw40fueq17u0sdzrlfnw2td5ytwvnz3twqp96\",\n  \"is-listed\" : true,\n  \"is-malware\" : false,\n  \"is-proxy\" : true,\n  \"is-exploit-bot\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "900fcd11-c685-4dcb-983c-f00342196ef6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.639309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklist categories this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "cidr" : {
                "description" : "The CIDR address for this listing (only set if the IP is listed)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
                "type" : "boolean"
              },
              "is-dshield" : {
                "description" : "IP has been flagged as a significant attack source by DShield (dshield.org)",
                "type" : "boolean"
              },
              "is-exploit-bot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "is-hijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "is-listed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "is-malware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "is-spam-bot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "is-spider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "is-spyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "is-tor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "last-seen" : {
                "description" : "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
                "format" : "int32",
                "type" : "integer"
              },
              "list-count" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which specific sensors detected the IP",
                "items" : {
                  "$ref" : "#/components/schemas/BlocklistSensor"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "is-bot", "is-exploit-bot", "is-malware", "is-spider", "is-dshield", "list-count", "is-proxy", "is-hijacked", "is-tor", "is-spyware", "is-spam-bot", "is-listed", "is-vpn", "last-seen", "blocklists", "sensors", "cidr" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6d71dadc-5a1f-4140-bf8b-f730c560232a",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1431216488,\n  \"apiErrorMsg\" : \"d60ydp4m2t8g8r6v0bdijshd65o6m2tqno09pln1nco38ov8beuq2808nl08gnp0agccxio5qlp4psz6dn21rfcpwd3tcemhkggv7dwelknisaj3djwek39a34uhpki2up473d3nyp31o2ad7ugt1h7l2gs0kovix85q73x9s986b9ep7lfr7s2rks\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d71dadc-5a1f-4140-bf8b-f730c560232a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5a9f14fd-177b-497d-b816-532301346ef4",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 946157476,\n  \"apiErrorMsg\" : \"7ob3v0g1tie518ia8dw7l5x7y2vrfsfvha6zavgexermt550e2rn4xa4wu27tf9dsahbhpvsvzt4uarfrr7p0em3q8rrx8bqohfszuvhinjnzczvzg0l5smwwsvacbar52sckegs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a9f14fd-177b-497d-b816-532301346ef4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "31b5d0bd-97e6-40e2-aedc-3dbe30c9c533",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1521149303,\n  \"apiErrorMsg\" : \"s5fj1fagbwi0s6grbtrzfotoogj0hgto2ly0zyk1e55837ug4mhxzhnbtxupdd2bgzvsfvzrqva015y64e7swbrkxf353ridu76nuae8bhn9ip4pdahfisaa8y1fxzqlg0cpvr28t6017pfjs679crgqd5tb2fmo5j36bjb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31b5d0bd-97e6-40e2-aedc-3dbe30c9c533",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.63855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5ebf831c-0c8f-4a5c-b71e-2347ae89c137",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"3h0j5i14rsbpbejm6j1a96rlr5zw2sqrk8mp8qw5tiftvwa70m0xv2gxhsmy04hrl84qx3v642omb6655xy24a5sm62o7g2getu04igct0rwy2ltvye1fhbiipp0oshovztuzfc32wawlkcigywfykyr2sfc2lh\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ebf831c-0c8f-4a5c-b71e-2347ae89c137",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "1841dde5-2d56-414b-904d-c0bf8c43b876",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2017558965,\n  \"apiErrorMsg\" : \"xqeij9hts0z9bcnq6y6lnvu0sqij286kzen85eiy3945btbe6y2g5z6npyx9x2mcra7u5yl6i6n2jjm6vb7dn15pbd3l538qua36u8alq99r04jwmi66lydg8knsezyzt5amxat5t04g1x4idsmlaa0drxil4nezu90py01c5x8awgjpar86n4v8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1841dde5-2d56-414b-904d-c0bf8c43b876",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "25aa82e7-891b-49e5-b99e-dab153f066ea",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 653140343,\n  \"apiErrorMsg\" : \"ex9tj8aqosbxvg9zqdp8lbmevm9hl9hlxsyylxb1d7cxwmk5v2no868zm0zjyd1op4ua10v7b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25aa82e7-891b-49e5-b99e-dab153f066ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "da946f1b-afc7-4b53-b5b9-8a08843af141",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 669944699,\n  \"apiErrorMsg\" : \"54t9lfc8aucs4bzjhwiwn9ovj9hcqsxde5rtmstbk5isodru69lftlsmqhk9g4se92fcq40z2onwtujjgozesh387kkjg84wzc5weae378natvtq78tx8yzw235aquihs91roed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da946f1b-afc7-4b53-b5b9-8a08843af141",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c2ff9471-d47d-4d74-8589-6ebcc84e2d12",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"a4vnvy3p8vr6lcxc7rih4xcpwcf9qjdefea9gmu6vziz4ffpbrj3sg4ogunb2xa6f5no8e9wxi4rvt1i2fccq0r\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2ff9471-d47d-4d74-8589-6ebcc84e2d12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "211fd4ed-9cf9-403b-913f-fb93201b501f",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1864325912,\n  \"apiErrorMsg\" : \"soetlhl32lbjax7rp3u8vlj3gu4zronnlvb71w4vxuxoserkzloxnwzqkswl48490wugwg6136ydxpjvoqyyy9039ehxuzlml3tnxwvfww4lpd04h0646hr7n612a5f7noek5c8qvmiol3uqaaaee8bm9jycjoh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "211fd4ed-9cf9-403b-913f-fb93201b501f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d52e2f88-bd8f-4f5d-840e-6427f434755a",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 450466776,\n  \"apiErrorMsg\" : \"aaggzpz3ybhklrd6kqo8ygp9xk6bacnfvhb937aqw93agdgbe7gwll5ikbhf840gvxwdpl1lk71c7sbmot4gwp72fji4skr64kos28segfy59lvb2iq5on78r56yl7on3p40hvabef4peo3tjk0n75s5o0nx7ecw3sjn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d52e2f88-bd8f-4f5d-840e-6427f434755a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "08da9923-ae90-497b-a62d-1df7c76672d9",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1743127228,\n  \"apiErrorMsg\" : \"2y8p14c5b0rga5rqd691th4mdjwz9dfw6tw8q5oh25mgmhe2k6naxe7k5nce6ls7gcl5dgbe4p7qkf25be08433jujbhb64rm8r4lsaryej3prf7jgw9actyau8hk7jdqd616usm8torg9dul5zbg35m82g26w0t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08da9923-ae90-497b-a62d-1df7c76672d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6bed8b43-404a-41b6-8992-13abe5112e09",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"g0t84msj8y75dmrr9e12m7acssge38yavrf6zb2iy62x5fx\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bed8b43-404a-41b6-8992-13abe5112e09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.638009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "1f5f7148-19fb-4e1a-8fa7-4a1e3d538c7a",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1478136151,\n  \"apiErrorMsg\" : \"8nd13m1o0hzakw4rzgjbt4aopkn4a33g4reoav5zmn0j5c227j88bu8l9asrp1a5xgdcfd179eta22vzml2gtgsdcber5np3bsu1nr7dyyhf6he7n61cgcsa7w5v4ghf99vk27edckpbviwvb0ofjf7bq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f5f7148-19fb-4e1a-8fa7-4a1e3d538c7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.637962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2afa10fd-9c10-4bc4-b2cb-c37a4d43ba5e",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1100610059,\n  \"apiErrorMsg\" : \"sbtqjhfctf455\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2afa10fd-9c10-4bc4-b2cb-c37a4d43ba5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.637896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1fd1f140-b32b-4de4-aa43-cacf67866ea0",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1068131870,\n  \"apiErrorMsg\" : \"cpj3fcdnblcdcxgf18ydyf1p99p8u68a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fd1f140-b32b-4de4-aa43-cacf67866ea0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.637834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ba3c6da-0bd7-4a0b-a44a-2473a7c0f94f",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"vxztg543663rjexo4qlu2fx5g4n6p89v763w2bbfjzj4xo7\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ba3c6da-0bd7-4a0b-a44a-2473a7c0f94f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.637767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "62437190-dbc4-4adb-a400-ddb53d960bdd",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "zd0f6yu75xceu9komx"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1021819016,\n  \"apiErrorMsg\" : \"gfdz8xy7n2cligxj0o4c7urfhasz2q04149lhk1977pylkqp1crn8x4ke33dse2lilpersd32mau71mfra4fgewjlcpy7ily2x8nz085a98vrwh29yu9wahg6jc02hk9wea3g9c6y9n1u1mupd28k9irap2dmkxnv3o2zmu4avd6sjnj25bwsuqofnvcu6zb8w9s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62437190-dbc4-4adb-a400-ddb53d960bdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.637718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "690eef6c-d8c0-42a1-953d-719cac1fc42e",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "tp3gwfjg4qufdgt6u0nm6b800q396h747gmepqzjam2im3ern576serl10n7vcygk32hbim8dbothws048vi38bcv54ryfg6jszj67884y1nf3z47ui7gih6zzx40r4e61penpra6jngc4ikvwob9qchdgmufzserzcs6xtz828ny82377x3myel09np3o958y"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 156772469,\n  \"apiErrorMsg\" : \"7xt22e8bli70gofzzkleq2tqbj3lksjbgvky2x9hnrabifeutb26ygtkvwijoy0akcgej3if73eilqm9o6artvr497s5sivsfidphwi2kmwajw2qn1g6z3yedfzk8koxbki8k0xcrgrrue2gqldqknmaph4qwroxuv4foq3iuit0nwyz2xdwclr77o6n7o2085b5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "690eef6c-d8c0-42a1-953d-719cac1fc42e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.637632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "253d3846-75bf-4748-a987-db5a6835d38c",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "w4587oepjqebv9vdt8olxnnlhxvmtrfj32agzcpj2sf8tby5afox9z331qp8"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1360214858,\n  \"apiErrorMsg\" : \"hkhg08u40gin2qgtv060vrqkqp2cdnsi4atvws3asqgrteb8v83kotjsccuvjn2e6pdl843hprn7u76aovpp8swg0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "253d3846-75bf-4748-a987-db5a6835d38c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.637542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ac004151-8cbc-48c9-b13f-ca4a5f6e4390",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "tvp084t4xwjgliq8dj5huzu9r28emuzy84q0ss7r0ixk9qzz5yp3mkujoi1scmckxmyhhxosadxae8s5wnnwseucflgbllqmojzrmqcaqgeqgyshctf492m0fv751sqdtsr3cremqtc8c6x4neank1ng3ftglanl4g4zqt3ssa3k9sk9i06hua5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"list-host\" : \"mwrdgm9z6zm8h1gtkyzg9r53odlql0ntt\",\n    \"list-rating\" : 54333420,\n    \"response-time\" : 1308321973,\n    \"is-listed\" : false,\n    \"return-code\" : \"ckn874rkj8qwpm1pr5rzsi1920ewk6qdkvebh978mutf8sacvj0phsbgff8iwa7ewe986mnqaqndrb954nd2jxrzbw\",\n    \"list-name\" : \"Kip Blick\",\n    \"txt-record\" : \"mobti9iqkq9ru7xdnj84324it2fm5o4l4razblelknvgpmd63490y2tsejlwu3ulepkelzh9ptxstt580twwkmn5jm5r72z75j1vvvcky2wj76b0855fca3cj47m3nutvoleikyjpdr8z25cehbe6q\"\n  }, {\n    \"list-host\" : \"jp1lkk60keguij6i5jg82uw6coibnoont6j6q9v2a2h757fe2g0upvsf4o0etsujzggyqy50gzad2ocz96r9zy3re75kffa5n1490sytvxb7rebgw7mup4mkq1n7qmqvfuoc7edjlsh9\",\n    \"list-rating\" : 597970083,\n    \"response-time\" : 360426508,\n    \"is-listed\" : true,\n    \"return-code\" : \"v2uad5vour06ts5syf9oqsrva3n0fh6y8yykdaamjepokupyp4ivzgg2rrbo2zr1u9pufyikucyqg0jdyq4chth055\",\n    \"list-name\" : \"Malika Hoppe\",\n    \"txt-record\" : \"rgar4x0h2tvho01jar9reyzl8frpu1c0pgmgajnh66oq9wkl503jnz5cm8p7qowzx3j48pmlxen443zhchgwkxtdr7ya9d7wwg0octox7poexbjp7fz4bgppscv0cothlbz3ogwdpna5bmnrr9dch8nq3p4dbs84819ixx85adexs9zd\"\n  }, {\n    \"list-host\" : \"qqj84kv3hm028\",\n    \"list-rating\" : 1656494800,\n    \"response-time\" : 1632304227,\n    \"is-listed\" : false,\n    \"return-code\" : \"xh0htdq8tpzihuwtidf4bpf8u4h4ta1gm6le4n4czyruszexirnq1utxuqq66mlxflgu17nkijzrjjqhs52mvrxwohp6goel4q1ihy2322mkmrnepeyi9oo5u1psfu9ox94o3eay78kxbqybno6gwlunfe65cvxl1iupbaig98h1t8r1\",\n    \"list-name\" : \"Matt Rice IV\",\n    \"txt-record\" : \"2fjw5exgjpxtghihhpnb142p23os5ei2g7a0xowhvfr34bol6xdigdryib2kyyygd1ji093jwrhlh6mbg1n2xr1z0\"\n  }, {\n    \"list-host\" : \"7m3btzydfgvdqv6zovs5lmzlwyzf23qlzavxx5spd7074rlj6hv1bbdvwkk8lzqhlkd9arv88siwgwor6q1hk4of6dpuwnq2n65ig3pp6r3gvgkma6qh4g6qeiipz7zoj0tu8oa4kfti8epp0pnpobhrovzhzk\",\n    \"list-rating\" : 182285191,\n    \"response-time\" : 1963325509,\n    \"is-listed\" : true,\n    \"return-code\" : \"kdnwk7vw3aatmprd9nnr3eklk6p6lobi7z7pqp5tls9\",\n    \"list-name\" : \"Kent Ondricka\",\n    \"txt-record\" : \"hiulcl9umqdzngpb6rrftx5fytkwv6ehwpzvhhdnrzkuyjc75mchhqt33gp38hq\"\n  }, {\n    \"list-host\" : \"2nf7ckvj2clkhtuncym8iqyhl4shb0mec4q0aazyxbiyntkwwsj30vlyyrkjti4vfm3edvysx36dvxyabipml508vixe8efnqltuhofn0ip4lqfpxka0apwgwxn9r1wqf56frgvugazkqsog9kfd6bgukcy8riabwv91a95lq98b1exho\",\n    \"list-rating\" : 801450872,\n    \"response-time\" : 1263976940,\n    \"is-listed\" : false,\n    \"return-code\" : \"9n9rfjsh0blgs7sn5o6i1qw68u14\",\n    \"list-name\" : \"Miss Naomi Wisozk\",\n    \"txt-record\" : \"lamriw9n0w0r2imncikx6nsfcxi7gqrnasccm75v56fwqcbrghdlawanaki7fu58pmlsvy91pr64o3nigmau9qa0l18k55jrzmsf9g2ip13ok7duwrcfmt92i8vnsmtfrx50f516jicjav8ddpapqa75vhjz92v2dn\"\n  }, {\n    \"list-host\" : \"dyvy00fyr9l97r4spwpbbtl2kv03k48f6t8kv721v9rqq7qcyge9xzqlztco4cjszrnnrhlm8xn09gd6kqf2aytnvw6he24w7x3i2zobddu4yhqqz9wc3o6huyndowlti756et0dfasimcf1025q3vhlnfu87ccqxfpe1b7g56klpji1ufxm4si8jl9oi37ecr2b\",\n    \"list-rating\" : 608687892,\n    \"response-time\" : 310768317,\n    \"is-listed\" : false,\n    \"return-code\" : \"49ps\",\n    \"list-name\" : \"Yasuko O'Reilly\",\n    \"txt-record\" : \"4h9hlcpvf8cgeni6yw3bnnkaihprgrlxx1puh607j35jjyfb2150xbpx37g3nf92ykruipdl92v5uorywijlu2v6u7cs2reobtvi4y0koc9varybpw9bq557hskwyv0e8ls8bf5\"\n  }, {\n    \"list-host\" : \"5jmr4wmydtabs3m0e5zsa6j67y3ss0zx3bqz3ssj8fbnlieyaimxstiej7l5utfqic49lvnqebud3wovtsz0kpk9vkmakdqgqfb8vg5rdewit5mr41pjp9voj60f8iwmkcfopkmt7s3xc3hq5\",\n    \"list-rating\" : 913292317,\n    \"response-time\" : 1709917342,\n    \"is-listed\" : true,\n    \"return-code\" : \"5pj1k0fnwwhjlhkr1ntryyp8dhyi39du6xlajm7gcl9hh29j1iyl39ine5termhpynznkfy1fxfxj2dtqo6pct47paburuv2wrmwxfzy6dq1vuizyj\",\n    \"list-name\" : \"Kasey Kris\",\n    \"txt-record\" : \"17xw47hs0xodehomf2hg78loiwu8s20brip7ks28iztiu9gwojhew3ximo950h605up6unv4tqjg6n4xc4vv8vi7yss117d1owtquvma6vzc2ngziv7i6hoi5\"\n  } ],\n  \"host\" : \"2q841c0gte\",\n  \"list-count\" : 548745924,\n  \"is-listed\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac004151-8cbc-48c9-b13f-ca4a5f6e4390",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.637449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "is-listed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "list-count" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "is-listed", "lists", "list-count", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "592ab31a-1faa-44a9-83e2-e8e16ef58f33",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "74h9ig6ym5j0qugpf4u2m6re8szri7veswgymic371a92pkwas2shkh25d6egvmke1ve5olch06jam343f545p9h5q1kbm7b07ffvpc60s4615banxqrllyjsrvi3ae561f0bvblwnv74jyictivie3wekgzqbfowxn5quwphw41z3pr05kmkx1sg6d32k9dqao77b"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1433511759,\n  \"apiErrorMsg\" : \"yjdk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "592ab31a-1faa-44a9-83e2-e8e16ef58f33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.636555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21159dbe-50c5-445d-b09f-37fda6f53d32",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "7ept4emah1q6mlta7bopgfureylfpifvm7elarbw4gb98lcchpj7f115uvjt2g7akukjh4ik6gf3wyey33fm3p0sf2rlahznfoto88xbznbh6oyn6aa"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 485480594,\n  \"apiErrorMsg\" : \"4ww3ui5p6dtzcs749q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21159dbe-50c5-445d-b09f-37fda6f53d32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.636466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "79fd71ee-f096-4709-b3df-1bc32efcaaab",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "4a4akrq92ox9myhpuwuzyrjonz2t2r1topnz43uc2dde6cvsw0bdf35l8"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1581071499,\n  \"apiErrorMsg\" : \"w2o638qkmdq6wgad05qbw3u44gafkksta\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79fd71ee-f096-4709-b3df-1bc32efcaaab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.63638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fdf6ecf0-2bd8-4881-aabe-c02bb25764a3",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "9fqwl8u4s7y87lhh0tesa8o09x5vf4afah4donoe4n"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Honduras\",\n  \"country-code\" : \"bbbbn\",\n  \"is-ported\" : true,\n  \"mnc\" : \"d64dogcoxmyidaz4rwjswg9b3la093du0vsgg9embnldaxaoddcuin1vgzl63wtaw9npuny3b6wz2908jxt3aeh0w4p5ztquocxs47y102mce7waij0423cdvsftsdmwcyxgsi0hzf4z3fm8lvfprupiibu18ljm5d4arjb4rii\",\n  \"number-type\" : \"jrsns21vydzb9\",\n  \"international-number\" : \"coh485bh7gl6qe93ye36vyllgw8bry9rxjkgocmhtmfxrxqnu06tle7zxxq4moy801boc51ibeitwglqqn6609kho32zv372mauv07kqc1xt6th8v4tlwnnzhwmlyrghfa5lqrwfqca98sz5hxh\",\n  \"origin-network\" : \"hxvwtv\",\n  \"roaming-country-code\" : \"bbbbg\",\n  \"imsi\" : \"w11icasikbh2jxb343pon1qf9lvsfo4yuhg2rxdn2z0jpkt9rrg4qzgpapdmcp9p8q377miq8lp\",\n  \"local-number\" : \"wj84bb4jkzp1j6hr4iagabeycqxapo5c5mqcx1fvezntvoxdy0w36mvq66ixlvx1tztumduohqt47ynaxt22ldmkjttmxop4tunzq863q0xkevu0nm8iqwgnva8986pel6b341zu385klvwn2f3ny0dbmvxb4hc7thd30\",\n  \"mcc\" : \"76dk\",\n  \"hlr-status\" : \"bg8zn5ock36dq5coy5dg2kyqukxq5qmddwle6gtgynbonu2a0nbmtw32lsc76jpm0x647uz2bdhjmbr3tvg5d\",\n  \"hlr-valid\" : false,\n  \"current-network\" : \"v2s9nxge3l2ajg4hqpyzh3tjwli3j9synbmtzjo4lo2mafx8771avyqvuhdebj03qcghwdrb4ra1go4cdbxi88bdjdzcwkwrgcpb7wglwvvxsbm9\",\n  \"msin\" : \"2m2b9byisbyfqpvfc0g8cpwnuh1qib4rjutbia67qacl8f3z1wgw7qh4txczu5pd1vytcdmoz25hha28wbn0iknqgn883p7erl5k88z15x9svixuulajoomyysh9hpgy6hp1tmnlteolwm483zy6l5xwddj7y310ydw3f4ai3hf0c3qsj7h4l0w8rna90whqrztub\",\n  \"is-roaming\" : true,\n  \"location\" : \"9p4n5qflfvv8nxjexx\",\n  \"currency-code\" : \"TOP\",\n  \"msc\" : \"3r6j1unvmtxcui1tnv44yqhntkgda3p20ioatt0nl1ame99jd4ox5zhfns1eqg9dpqo6bh7cj4iqgynjs9aouw0fas1qf36zv0zzyb3\",\n  \"international-calling-code\" : \"zbr5h67cpzsip7lydsdc28qanbw6ex0vnvemu34ymr1\",\n  \"country-code3\" : \"jcesw89five\",\n  \"is-mobile\" : false,\n  \"number-valid\" : false,\n  \"ported-network\" : \"ww1vxn4bfn7pm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdf6ecf0-2bd8-4881-aabe-c02bb25764a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.63628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "current-network" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlr-status" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlr-valid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "is-ported" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "is-roaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "number-type" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "origin-network" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "ported-network" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roaming-country-code" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "international-calling-code", "mnc", "number-type", "hlr-valid", "hlr-status", "ported-network", "imsi", "mcc", "international-number", "local-number", "country-code", "is-ported", "msin", "location", "origin-network", "is-mobile", "is-roaming", "country", "country-code3", "currency-code", "roaming-country-code", "msc", "current-network" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ca21ecea-b548-4b43-954c-ad524dbc60c2",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "qpjg8g4k9xk6gu9b5k6jecapalryzl9b5j6ovkj1lrporrxue4hn55xmscba85kuiu7f7o73xu0zozvefagummupew7dl5l8tpdy3q"
        },
        "longitude" : {
          "equalTo" : "d75c6b27sfp7yo3msb2be4yn6eb6ik6ytzepjnjtc065m35qvhqjgsb71"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 53153351,\n  \"apiErrorMsg\" : \"u6cllrrq0837vo04oikf5g67j2qmn247vsr6k8e7xsbhb74b9tgy3o2ao4krllvo51jrah31uw4hsfww9h5j0v64i52wmz4exmkqmjs52efwyprcq85v3pby4wqpb9ytbfoxx1vusk6ke41uisbj4ohk82y6nm6czb0et7w42zrqjgku6ezhzefc4bcry28jw45z1a9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca21ecea-b548-4b43-954c-ad524dbc60c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.635763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae2de33e-4774-45f7-9257-344849408d96",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "3138gcuiwcztb19qhgo0ctbf9sztlh7awkcrfxzjb"
        },
        "longitude" : {
          "equalTo" : "ynndvx3h0h504o25uacwcurxuiwewh33m2ft13urm"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 476508978,\n  \"apiErrorMsg\" : \"ml90kfmjuize9o4k3cvjonm0liptvzgo4ui4382l6hv9xyn6lpk0zyzzotvy6k7bdnfn3316t10csa6n5col60e7dw0oyx47w1eg1u5hhbzymhzc2mry0if7wii3qqotnczuobgrcrtztdo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae2de33e-4774-45f7-9257-344849408d96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.635655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f2ddcaef-e568-4b48-a1a0-897954d466c9",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "dfx4x9fw0wahwbiaa6pcwx9obm1jzn1ovjji51gbsuc9irk613m5o4fhpl9mvsm7cyxtagob2p47l252vpuoed1l9o01qctna9fmro69kg0rxhjfyasrrgxdeqqg50dbqsh7hov0xdtebuz74c7su2g13206fnv4ru42bs3ss6"
        },
        "longitude" : {
          "equalTo" : "zpfm0nbzrwvpkwufvqm0hskzg3me05shzcfja423feztuwdf7h7lmye1ai1we4yu2f8th0ndzk4m1oyo6q4caoyxbtb6b58y1b6e76tb17g653iwapgyt4f9aelbw4zgzad9mrwf3waivalkkirylkrqcrbwj0m3qm4jqnuume6ce9uo4p9cooukhficbu6d4i"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 743859501,\n  \"apiErrorMsg\" : \"iforrovo3bfwzp5pc1ppzn5y4ueu13lwmuph74v7l8rw7kbw63ewxwnr36gfdvex7keffvfjrgj8dy9c4x519h2awrlvlohhgg9ctwmewrachn7dbszjtb6v65atq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2ddcaef-e568-4b48-a1a0-897954d466c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.635545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0fe4f942-d8de-49a9-b80f-a093716103d7",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "gsjduphtn053y49q817fhnq9osc9tg9g7b1gp28wyamx8"
        },
        "longitude" : {
          "equalTo" : "2ff6l659hy8ry0ld2mkrnccfz90n3wrywu93mpz32kqpwa7kjpm6xa5hizgms6zd1qowio3tkz43x5hp8idxncdkj4hrarokch53nld3irzl"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"r76povaa6uzgiq5xzz2f9x9fho5509idlxv\",\n  \"country\" : \"Sao Tome and Principe\",\n  \"country-code\" : \"mmmmx\",\n  \"address\" : \"0jp2fknbdoo6quemm40hlnnj2p7kva7tifjbf4xuxr6moiwhtuolq7w0497px4k4wky7dn5939n90jtpn0sg9052qm96g9r22jor7j4wz1\",\n  \"city\" : \"Lake Robbyn\",\n  \"timezone\" : { },\n  \"latitude\" : 1.5539221065052278E308,\n  \"address-components\" : { },\n  \"postal-code\" : \"41427\",\n  \"found\" : false,\n  \"postal-address\" : \"9vsejsdu\",\n  \"location-tags\" : [ \"jis9g1s9iyfabmel7h23de8u3ylsf8zfgf5y8zngjydzunmcbuempooh8t76u7\" ],\n  \"location-type\" : \"d0ml0fnd5ajq6y8l6ji81z0qfhkgs5e3tvghjsbbsqld7ngi2drkb9888tnjvx1s2g11wd4y2u7h5dk8p3pil8o46mo54m50wdly9kj01qhijf9sv38u9tov4ygy0myoro5qxn4866ss5m\",\n  \"state\" : \"Maine\",\n  \"currency-code\" : \"LRD\",\n  \"country-code3\" : \"1r7ti5o5t2ta6ezj1ai9d9xbp80p5rvg7s6xwigpv7fg3zw1xdwdtxyd3ka70b8uibzm56li6v70ekpjgp9wwyajlxhyuinwe4homhdhrjeyld87et1m4rgwvkkxf693jjk7yd1a39busx3uvgt0qp7utfow6zeb9c1su5t9tm61w1v8sww99btr4bcbo6vctr82uzhl\",\n  \"longitude\" : 4.3398459007153683E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fe4f942-d8de-49a9-b80f-a093716103d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.635418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The complete address using comma-separated values",
                "type" : "string"
              },
              "address-components" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "location-tags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "location-type" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postal-address" : {
                "description" : "The formatted address using local standards suitable for printing on an envelope",
                "type" : "string"
              },
              "postal-code" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "region-code" : {
                "description" : "The ISO 3166-2 region code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "country-code", "postal-code", "state", "address-components", "country-code3", "currency-code", "location-type", "location-tags", "latitude", "longitude", "timezone", "region-code", "postal-address" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "05159ecf-79c8-40da-8866-d39a4e55819f",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1190967459,\n  \"apiErrorMsg\" : \"hwsufbkpyndflq0xbd5nuut62j6sou0ylmsvzv3mcg462lbq3jr5h9rg1aitu5lddt1q5la3y4me7j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05159ecf-79c8-40da-8866-d39a4e55819f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.634938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "414a9e16-1e63-4b77-a000-db77743b4470",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1379174768,\n  \"apiErrorMsg\" : \"i6k8so2g0uhrsr9d5pv2rnxi4aoic3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "414a9e16-1e63-4b77-a000-db77743b4470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.63487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "159493a4-3c8d-4d5c-bcf3-06f2dbf930ef",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 246808412,\n  \"apiErrorMsg\" : \"uk6m1qsjdvgx81wexei1bouelr8n0cineuimvreyzcudaif702br6coyj9usoqmvttky4zawxbxe9j53tpbrz5nef6wnnaut14zvmd7ws3z9qbqwct5puugci6amyckxkj7ckiqskgfi4vhkd032cktu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "159493a4-3c8d-4d5c-bcf3-06f2dbf930ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.634805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "29f72a9e-bbb1-4dfa-a8d4-1db8d82efd7c",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 890592680,\n  \"locations\" : [ {\n    \"region-code\" : \"js83emj7zq58nawj8kigtrqhxqr513yr447v6pf7k3uo4mgkpvu8r1qbtprmja8ku7s9zs5upvajn65tqzlx7h1bqj0004u\",\n    \"country\" : \"Monaco\",\n    \"country-code\" : \"aaaao\",\n    \"address\" : \"b8z57ztqgiicvfn3bmq7gqbycwigmpidkb1aulh4uc9yn3gi85evd\",\n    \"city\" : \"Hudsonland\",\n    \"timezone\" : { },\n    \"latitude\" : 4.544838757348974E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"91805-8928\",\n    \"postal-address\" : \"5hy7ppmroibtq5r9rjmjue9qmwut06fe49it2bmz4wlu03da29it4y964cwnkk2va\",\n    \"location-tags\" : [ \"08b8flop2rhqc9ejuovf9pbgcaeehjj7u5f7lu04rr6haenxgucf49zts6cyye4st1xuf6hnkjdaiurbgujnqmzbb5ikyybvz2vi6dox9miwj3lwe9tgysud0zsr1spc1kmqd2hmkty7mr5mxt3wle5l515sojxz7tbfg2j9rdrc93czygv\", \"gvg7rezk5pfksibgmkcwsx7npe05th7l4lesivxp1k6qxohs0p8ntka4g2hos3qqi2lea5pfjvm\", \"4wblkkaoplx7zyvitdyf36o1gslo09cto9a3ubwa0su7o51vu7yk5i1vd7wpe0yey6lz9tj8ixxiecwrhdt5inesdmfs300alconlmzct3ld8uuxs8i72xyjt1t4dee34zjtfen5z2uoct16e6pi3f0adivm02b0\" ],\n    \"location-type\" : \"mmvlz9reyi3ycb8gjej1kfm67gwgdcvz4b38ra8soapvrw7aehclfvl4jow9vp8bdkvzqhqk73jdarzil0kfjiirgybpcvtp8gv5gto2kcbva1xmi9yvosyxjagv3qdg67fft7yyis8ai21lrjhkvjtgs5t3d6\",\n    \"state\" : \"New Jersey\",\n    \"currency-code\" : \"CHF\",\n    \"country-code3\" : \"x028j7c4ulmeyhft9nbuf0tcj6gmcg5qqh51bcxgxlqi2aoj3l6m72fu3p448u21xph5jkwpkggtqpuz5rweoef7il8mmjrvomebftzi3djoklvllkkej5jub9gtz7cce9navy48ymo5mnlge9f259ubuqn1c25lnlw\",\n    \"longitude\" : 1.1561014693460225E308\n  }, {\n    \"region-code\" : \"laehwsxxewagtd7a6dryaguly3l5kyjy9v6oxfek28x5\",\n    \"country\" : \"Djibouti\",\n    \"country-code\" : \"ccccr\",\n    \"address\" : \"olslimlyihigz0c09e8nd2eaz1ml0x3ym5hxvxodf08y7p3briecfstoejmw435jultr0vbffz8r0b156mpxgg2qfj0xny7nh3gce1v36ih8fppfd4ge7xyupy8jblpchd138nkfc9go8sys4vc7q\",\n    \"city\" : \"East Josiahshire\",\n    \"timezone\" : { },\n    \"latitude\" : 1.5082791377047965E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"71893-8313\",\n    \"postal-address\" : \"dz5q7tlbsnq10777f79iw9u7i8r7oeu9jryrr9bp2rv2l075dhomf0\",\n    \"location-tags\" : [ \"9pu98aa5wmgkqbp249dk1pa4jivvrlysm9n723hxv5o746ta2ipaihsa4xjgsqmyagnqf0kz6hc1xyxzj6zr0jxypvgavtsafp7mvsblvjx02pn4ugmjjpr38hdo72ilz2vfhqaup22tjpmtkdbpelkt5b85at\", \"c6mrrfvl21rrbgvsqh07j62ge6pirtnpmcy5rumvcsqcrrqnz393k7qvv4yb8314f8l3mdkgt0im7h731kbp54f7\", \"5extyumyu2l5vxcexjf46bvjrfa\", \"vgp3qibuucry0tp2m5ddlmjajwg6l2ql31c5bfxgcwgycp2aa34dbkw9n9nt9zteks4xw7esoozstdophxbhfivbco7boqbkyh2mk9kabepkbkrfve5p9d0xafn6dfj2x1idwty5ncou1vmb5kzzw5brvowhphv29unp0w3m60j3otnipak1\" ],\n    \"location-type\" : \"9vfphspvx9aym72kjfpfh0jf5eol16xpgqbmaxcdnc\",\n    \"state\" : \"Alaska\",\n    \"currency-code\" : \"BMD\",\n    \"country-code3\" : \"2355jcxkiaxxyho1zvfcguliit3gsed9eo493bxt703ihj1te1j8z7zf117twwnthb1y91uj0rjtvicvm36ryb7mi0pb9xb9kicse3ypyzimsq4mlfxlg8l1i9fb24zpeosykhvtwagsnagc8lol\",\n    \"longitude\" : 1.768301070945612E308\n  }, {\n    \"region-code\" : \"d9l4c4aslhgu9t88dkyz5mw6t40tmg6adb3563h5x13imxzcn9nqf4u1df1s4wb0ar5o4myeap7am679czrqh111tiqd8zmw4ogelmnm\",\n    \"country\" : \"Iran (Islamic Republic of)\",\n    \"country-code\" : \"nnnnr\",\n    \"address\" : \"b3r7z1hl9lkv6qu9v9l48iqx0hsgh0x1qvks52fsik9k93p93n9n04iznn42rcqc5khrrqhvg3q8vbcka7fnmqvnho38pe960n98mf3i\",\n    \"city\" : \"East Landon\",\n    \"timezone\" : { },\n    \"latitude\" : 6.809414922532306E306,\n    \"address-components\" : { },\n    \"postal-code\" : \"04762\",\n    \"postal-address\" : \"9txdeuotk34swoyordpuulio2tkc81cp71rudij1n3kzozlqqdo4m4312iog4gsttvkbb04dd79y22r9d38lgoh92eqkrswkgl84dij6s7enbmfe69dfqhe423zjxnxjgdbdu\",\n    \"location-tags\" : [ \"0v2atfxbjgdnkigv8cwiikgw9uqws1xst3t2akz4wbnskx274vlw3zcl7q4h0po9qab6vqixb5yvlyombedwrsfjkf16w73wrqpryr60r62exkgd8x3yafwl910ysatc6cz8eypmd2ajmze8\", \"1g99jshroadrvz14x96awl7zld5p75bm8kid26wxq644hznidvzo5r0kdpn73ob2mgf29mz\", \"kncwclqy2zrdztb6yyc43oogjj1s9w0ru8uy7er19lp86jg0jwc2frcjtkvni2h0ibzetjspky7v5rqhkim0j4y15y2j88d10lmwhdoq5u9\", \"7bmfq79elu3meiucvzw7giti6xuc5cybs3rcioxofwkhmlb9gmuxji0a4jyoxb5j2zfeg8dll3szgceql6smwrvkrrzp5k0lelwwxn3c7hr5j47uy7mwnq0m3pq740zhl2c3sqlengmx8xparpd2qawtkmi3j\", \"uh3f3twat2wr3bfldw1tg76tndfnsdjhb88zi39ku2iu7liibg5xqruyt9s5skasa7tg08dqbfo4zby0kssw5m0t4d16x\", \"zl6d3va8l1qm49jkf3rgxky3u7gf4ga9u43hqn0hywk51nv81i18ambckilvecnpy472en13u0jtsn6ueb9j\", \"qifemkzp99d66dou6ayzigtnry1la8meauk4lynl2nmjwe4zvx5txrb7q2kdh9\", \"wvsn4dr5izupa6x7rgy3k95cjbhyb00h3mrup15c1lmsjq4tk\" ],\n    \"location-type\" : \"jc1sye8jkbc93qf4dbshu6s2wnctgc1sac85112i9ixbyjix6dljopre49jmbs5xr8hxn6bm9h4oirj2cdj175eadjfs8lx96kfr519a5xhplysqiewso9do83ckjjowcgszd3i7cuu8loc7125a52txlmpgszbggo6pkzeon4tn9i4msr1pvjpk38jy\",\n    \"state\" : \"Mississippi\",\n    \"currency-code\" : \"MWK\",\n    \"country-code3\" : \"ks0uh0vndx7kgwztgydmkt33brrdvwgbw4xn05vtkzou1l2nmknlfs3lb7n0i3yp9cck038wbqnww70icl95pa2dwnobdmri95qpk22ibzekc4ayiv27sbfnayt8vpb7qn51nd7lj5ccty\",\n    \"longitude\" : 1.0540059365355265E308\n  }, {\n    \"region-code\" : \"1v1ti54hhfejnxtdgyqlbobjpl8s01wmz3yw1f8p2vvtd1d34mg7mhcvsx5mk2nhb2rmy1fv0jlb1ugwqlx9e\",\n    \"country\" : \"Vanuatu\",\n    \"country-code\" : \"ssssa\",\n    \"address\" : \"gzmwrw8t9icqbk1jx34t2fgtubctrga6d91wvecigv2q45zltctr14t64eohf15a0795qe6o9pqzc0g3jbhs8gw9ibp1s4kk4jmvr7txli8n7qradu8w7fvxpmx99erddf4udq\",\n    \"city\" : \"West Rebecca\",\n    \"timezone\" : { },\n    \"latitude\" : 8.202379293897076E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"10160\",\n    \"postal-address\" : \"dwhml72rv9pae45qrcrf4qfjfe01h5gooyf7xff20x8w2qum188pjn1g8ia2tua4mwym0qmx5qyxz4us7lsvbwbb6t55fdmoaucoe3steoil3cq7io810qxh5288ndrj4n\",\n    \"location-tags\" : [ \"htgduifhs1yxnt23s8\", \"xl1l5jkrgsd5x9h2nxhydmijy1pk28n7lkzbnukpwqdsna2rex9ldzj84am0njwc9ris5yeimtjm4c45k381x6ha\", \"50z181v8cs2p5b86fpznawtlv62teoyks2888wu9xeohn6tlf32eq7ytn23vovy1m7941p38r5h7je9x167j9wv9plo22sm85hgg2dwvet8urp\", \"rdklw1c2mojq92bgohfylrl3o7nrnjf4x5hbl0e4ulu4qzerfcd5u7qm3ebma6o5du5oatetdwnpr09yq1w5djym\" ],\n    \"location-type\" : \"g1f08bpl5b5eksqqoi7nqynzdp74otlajrk3narq32f3g5gkjnjkyob4qqaz95ko87wnf8qtwbgpqdhb0zc0yiv1o\",\n    \"state\" : \"Arizona\",\n    \"currency-code\" : \"BMD\",\n    \"country-code3\" : \"i4zp0xxvjzk0bqhptztdmrdt7smjwj6wd9hlblt5a05yzda5a4wfeiwmkisq246ek3uze8s7ldtykcz7zvb27mc7dkeiq1k4cc437hp7f0julirahsix\",\n    \"longitude\" : 7.665744639714693E307\n  }, {\n    \"region-code\" : \"opa92qnyncg57gem6fl6opo6rr6e2tyy055ijptsrgqvu0zg95u81ek45ozsprm4851uesru401smuk2n8a2wo5zfxt5q91gxteo5jw3cmyke9tx814isdb3lgrbu22u3gcyvahz5jl91crwcree5w3xux4rb5l6p3a2c5hbvp6pddhfazvnf413jx113k79chu1\",\n    \"country\" : \"Uruguay\",\n    \"country-code\" : \"bbbbw\",\n    \"address\" : \"4lj922vgno7yhhdw6riooiq5syodu9fdp1pgjhtsfs02qq826ioci6dewtbewj5axiinez30zqtd3c5s6tdj87q45ncnwmheb3ubpk1i6eb1siefjeu936u4vdosqo5s31aomwjccnegollm7qqy8tv56zqoqno594iq6nt2u\",\n    \"city\" : \"New Nathanial\",\n    \"timezone\" : { },\n    \"latitude\" : 1.7670923403403268E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"94357-0476\",\n    \"postal-address\" : \"s34bvubd5pj4j6wht8ooje2r61ijsxqqc7hk168iuoiw41yzh80sgtpsbakxompywca026dg0dc5t8k33edhryhhq48mj5jrgukvs1tx6dv6zoj9i0zndkmxwih8aenk0o6hybg652tvnw5ae1qegb0mlbxx3iq2ak7mw8z68ouonhkmsgpn944hs4e\",\n    \"location-tags\" : [ \"y6o2aknc9ue6gfdda0jvrxkmyh34tw2us541ja1h1qg8tppjcvvux25a16pt0lb4t04g3t7ool3f26v7q\", \"ffx8pjytn0b65e1mp\", \"rji4k2x93lsbc3af178n1l3egoav8oe6b5rp1szyd1zm5buelph26ilh4nxz10fiqoer3jmgf07x7sl3nqd5t0aetqvh9e1tsxt4kqia25hmmui5v7wcxgqaynx3osindg0a51js95w2p9thbg93c7dck0y1uazpm80\", \"g7qltoshtel1f88g27hngzjv18ejv7ef0i0bmssvum7ar6wbil7glk2k1oo6lseg8g44jzi8xfxtvu34olysirgps33i9srn93rh28pap\", \"uivd3xlfiz5unvywwqp0jvp5xlosfdjf2wdo821xlgtpldjkcfrpky7tv6k22ec2vdud0gyw7yybjpqfbyq690sy0q94seuutn1b3j0i1mlv0y090cafi1k2duobfe0jfhyu9qzqunx9m17qw7nzx0oblxt7gl7hdrv8iewgbd8r0axiuh0u9e2fdfkj7d\", \"3frmaco04aasob8n1yewvrqn8s3zddwd42hzefem68dh86jyty4a46dh6e6szebk5ps4y9ubhm6\", \"7dqszgz5ud491b495lxrz487c6cu049qmtou8dei9gngyb4vdlcdpk0kyey6s39p8x8mr84y4twz9h0d6jusmuibe6bnwqnmdbdcj72cbcjg7ydecgjzicl5h912st01lpnw10soe1ssv\", \"1ub02jxdy6u5xzfiivq4jgt7j05hdna5barp38y4pcrw4ed8snicth7l1kgrui0xitr42mqxkz024mb8ei3at8umsq9hi03xcg4rsfx49q3t249yvaw7jdlbskmi6pzrze93n1yg0fzix2qf9o2830x3hgy4662sstt9ezixvofdim\" ],\n    \"location-type\" : \"smfi2bqps5j1v19ek3pp9zcg3p0vclt0zmyumk123diuvpz35a8tgnyqvxdwa9h6ehxxdtwytu2ozlh40fd58pmp3ce3l33jm4enz9exc3g5zy0uthed1imxmhmrb0\",\n    \"state\" : \"Alabama\",\n    \"currency-code\" : \"WST\",\n    \"country-code3\" : \"uvf2ex3xybk0prhmrs20pnf180e7nxz1eb3efs9ir\",\n    \"longitude\" : 1.421588186134923E308\n  }, {\n    \"region-code\" : \"u7h6kgp7i57jpfv\",\n    \"country\" : \"Guinea-Bissau\",\n    \"country-code\" : \"ccccg\",\n    \"address\" : \"y5h8ip9c1kavk6u2tu3r\",\n    \"city\" : \"West Pearlineberg\",\n    \"timezone\" : { },\n    \"latitude\" : 6.60545928978955E306,\n    \"address-components\" : { },\n    \"postal-code\" : \"74960-1209\",\n    \"postal-address\" : \"fjkjkm3w6f9l5zh5f57upl8b66z2ud9frd4j0a2n7rkzpjqdndf70\",\n    \"location-tags\" : [ \"0oerenyiq6qf5z0f3rp2cc2kqydru3y2f1b0a6edjghipzk1zq4rgaj94vle0yi7e8aaioqh3\", \"0xtbg4tm6r5l98kjapqgmxz858u0fgwxqi5ecs32fm0e43jp0xlt9pp0kxrxk55wdt888imyf4cwzv0uxhxt2r3ucpv1nl3et8eqv43rc6sjzfozsr2zcxtbsaosxed0a5fd5xuhvjlzvvqmntgfwxaeshsuhz5qnx8n7pjzoxdscwvn1w85t\", \"pjwih2\", \"xbflj512qleil37lppijf61i7kozw9tjde6zunee4c8362x2174o76pzkygx1mdquvdl0niio17\" ],\n    \"location-type\" : \"gmxzfya6mctto3x2u1i4wtwqjbjzbt5z97ddqjnse8ov3qkorr\",\n    \"state\" : \"Maine\",\n    \"currency-code\" : \"KES\",\n    \"country-code3\" : \"ujqf3ya7xn4qq3ztm70onmcw9b7zgxbnm5mkmp\",\n    \"longitude\" : 4.781168539265762E307\n  }, {\n    \"region-code\" : \"kw9aixgrkp3drutwypl2j2uqlmfwfgwxok5rm6nlduuhnlbge2f0ikk9lpe18gj219lyidhfltahnivfh3vesxuipxksglepfv14qllbv2780nvf8z85ny5fp8txvqzenyd8uj7mzdpn2il763qcwqbticc394t5kvg\",\n    \"country\" : \"Cyprus\",\n    \"country-code\" : \"ttttj\",\n    \"address\" : \"f7ivph7oy8u3z686i4nx7hml2x9ahznryu2f0xmxvquhus8i5ec1swlozu\",\n    \"city\" : \"West Fanny\",\n    \"timezone\" : { },\n    \"latitude\" : 1.0833828789697083E306,\n    \"address-components\" : { },\n    \"postal-code\" : \"80247\",\n    \"postal-address\" : \"2vydcf2q6gnp1wwnhrzren31matd6u0g47p8qljbaig9t0mz5sxob22jft8ot3qwwyatwqmfkn9gb4heqinqrnc6o6ssmboz2oy43w11ide2mtz0m1inm19lzl2t8iabeuw92g1byjybjqynn651rtl2rq5w1zs5kqd8bd9b6kxk\",\n    \"location-tags\" : [ \"ssuijrvarj8wyd63f8al43xph8l72lv3lu9y6prfkax6qzxlah7b92h006ikzc71dxazb5ame7jqw8fonkn5eficdbnd8n\", \"tknmyu\", \"lm96ds191g83oooaod8p8s4abfcuufguss4ad8cumy1hztkl1hviz1mf0j3qsvjd9rh5lkco9p8\" ],\n    \"location-type\" : \"umg8fuunbsr6rkxl68fm8468dzyfee2014bm2y8l7yo1azpjicgwuy53ig468iot86uf54ixegl5hamcj1e1ehraxbyw031fdv4j6jd8mprlsn0c5nm2fys92huord2257n\",\n    \"state\" : \"Idaho\",\n    \"currency-code\" : \"TRY\",\n    \"country-code3\" : \"b4412tpp9cyo9p9ajw2ps02paksq0onepx2eyht8izjrs9uf\",\n    \"longitude\" : 2.0246418779322017E307\n  }, {\n    \"region-code\" : \"u7dhrbi6hgdgu9uv0akdx9ohbb2d8lupape0gh9ydgxnd5y41oycc3qux2zy2bz5ihi7igo5dj9fq6gowjyc6njwiijqr4iji0ba\",\n    \"country\" : \"Madagascar\",\n    \"country-code\" : \"bbbba\",\n    \"address\" : \"qhxqyu1ninp4bfqa9k8yos6pmyhuo9poirxg0gf53loeihzids1sgn4tpgx01j9cwxwdntasgxuxp8j00mn4zkw1qq7o4n39bhyt22zm6f4cin8tv7m1vi0ti42e357rd5ngt20\",\n    \"city\" : \"Boganberg\",\n    \"timezone\" : { },\n    \"latitude\" : 1.4698781665958566E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"21554\",\n    \"postal-address\" : \"4syciemtqm5k76yox3ildk8k722zg2x5mjjh3jophpt40er9vx9767h5mb8hunqu96w44mamx2huclljvot4pzohsbg1rd67bvs92o3um6erou8btpi9zfhbh6m4wjlq2w0bgy479cvrn3849j1t3mzrtijt9r31k9fbw7xrwtw9uylmf7xe\",\n    \"location-tags\" : [ \"yqyb6pkbyiv1xmotb7k11bgfd6yy3wgv2w5n23\", \"f40zjbrmjevvf2z6a9t3wl0lk4tg5e56jr8storl1c0hcss4a0\", \"p3dbvuh99agk5u2tjmtvyg1tsw53k8lfmgfjulh8v\", \"61eqz7a4dv7qerzdt0yosdhna2xe94yy44r8mlj3z\", \"ecb9jqfpubfy46emsh336zpyryk6wm6wsg2taie0erpkzzf2ukm6yg3bjc2zdi3omw1spoxsa3sfrumod1f6r8c1cjv5tatp6e4aq89fmjgfb4bxwverqw8arabuqnujugv\", \"8413ljk3kzmi9zzziivnrqyr0\", \"w52mnk7uyljgy7gv72ycmkb1oy6ud7ctivc2a1avk7bzuqnim779h6mki5jfkxmjsbcm66phv7qr5r7fr9jdf6qebhd8w\" ],\n    \"location-type\" : \"jfd3x05lkgu8rch69w507nvf7xrd876bs5gyobmtmxe0mk2bf66yc791jict2b3mbb10n7zl6fw5t2wggmnhv1lp83dg88fbcb7uiwcxx7d2dy7z5lc\",\n    \"state\" : \"Iowa\",\n    \"currency-code\" : \"SBD\",\n    \"country-code3\" : \"3z4n6r5s5yk8p4i4kx2ltnenp6kj8unfsa5j6sxyx9umxb6xfkltjn2bazgr3kbkqv743827xndmn4nih8qj0awzf23bhd3udi0c9pvj03oin2e31fcvgql3wtlqk21i4z990rc5rjdg5e2j0jhhz24o8utci\",\n    \"longitude\" : 7.290512210231501E307\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29f72a9e-bbb1-4dfa-a8d4-1db8d82efd7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.634717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4d4841d-816f-42e5-939d-583affecc07a",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "gqbel9u5dah3tlm4t53c3fwes5hadai1wmshig50r0zmu89r7ibry7dohk9qey63glwuk29q91tv56nxqkhud4jv9kvbkg4mwnwgp2oi7"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1280800922,\n  \"apiErrorMsg\" : \"s9dw9m701v6wv5abql2rhtp32k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4d4841d-816f-42e5-939d-583affecc07a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.632207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f0e5812b-be2e-43e4-852a-2a51d52c76ce",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "zuwdo1hr6"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1110170955,\n  \"apiErrorMsg\" : \"l3mvpmuhuvghwsj5z6at0w7r3rqth3xzjoxyivllz8qafdulrmzq15d8yc83d1rbaqtr44u5qe0acr9yqkcqdzn86pnmljjxiqo4koqc2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0e5812b-be2e-43e4-852a-2a51d52c76ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.632119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5bd3a363-69cd-4d98-9062-15885f61902d",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "5epuaepcr6611s3139schoiwaojbhwvtz6uiqhuxh1117bgmbpe7anwictkg0zpl6of8k62dnxsolmx7zciorgs572y"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 48050546,\n  \"apiErrorMsg\" : \"e4nputbgp5729i30ko9j1l9pg574i7poj82bv613lkovrlp2w6ylby1c417p5h5s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bd3a363-69cd-4d98-9062-15885f61902d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.632034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "35352ca2-5698-41c0-a771-bf87cf455936",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "23fcedqye"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtp-status\" : \"9go12amgxen7nbveg7as5y6wtf9aa0ni0q\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : true,\n  \"verified\" : true,\n  \"is-freemail\" : false,\n  \"is-disposable\" : false,\n  \"valid\" : true,\n  \"is-catch-all\" : false,\n  \"is-deferred\" : false,\n  \"provider\" : \"1swqi72255bd8rmn00cws5xrib99qxicwi06iolh\",\n  \"domain\" : \"b59wl424z23mco32321psuwchfyu4pg8fa85814euvn4zn6t8n5y0hbeb085mf7kd8p8djp692ddk59cxv47rzod8enxwachabjtr6nt87\",\n  \"smtp-response\" : \"ut69pj44bkauealaxoworkmni7lteml6tdpssopdgixgipiu4tf\",\n  \"syntax-error\" : true,\n  \"email\" : \"utu9r480wyaiwb6c33o2vs74q3nayc7ne35fvf16oi7tysijnlxt9q4zg4\",\n  \"is-personal\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35352ca2-5698-41c0-a771-bf87cf455936",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.631939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-catch-all" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "is-deferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtp-response" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtp-status" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typos-fixed", "syntax-error", "domain-error", "domain", "provider", "is-freemail", "is-disposable", "is-personal", "smtp-status", "smtp-response", "is-catch-all", "is-deferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b43ee6c-574c-4483-85cf-50ff98558c64",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "bx3nx5ov3b9mamfo16onhoshfvy8jmuz1gpf8a6vaz10fh60j079zho3kxv3j4zkope1ecoz93sxvyyalqzsp14vaguw8t7weoyd6alhuy466sr2f3820vrykg"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 792171713,\n  \"apiErrorMsg\" : \"n08fxh3kgov43dh6fqdp5v40oakxx8u6foa7gx9kf8tewhzz10u3cu1ihi53jt0fjam8s0ut7h3vn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b43ee6c-574c-4483-85cf-50ff98558c64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.631677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4e110376-dba0-4303-aa61-05379e3e240d",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "s4u40trsq4qk5ash83lkjy20adm0mjlathzt1gy8xgs7zjbvqiu4g5le8be6fg0eouhsu3vxu9jdry2bzz9mznx8i4xoncwblorr8r3ke3vsw95e4hvgoqahdjjaa42pr"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1230281625,\n  \"apiErrorMsg\" : \"9qem8680vfi2qk0j7pme7a4isr4mona733hfjj74po1u8pxesv7o5vzji85tlj1yv8hfm6t8r2ldqgx25g4y9tbbgpul04cha9kwfn0kcyxnw810ifd0p77m94h2met3jm4nwbeqkq3wimk8wvumji4zimwgxq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e110376-dba0-4303-aa61-05379e3e240d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.631591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84be48ec-497b-4dc5-abd7-ef6d0e9a2adb",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "1ac2fm1f2as7yukls88e4jsswwt4w4muujq1uflcksi1rvcsabtte35nnbzsseanm530pu685cphn3oc8ssy5knlri81ae8bcj8tqhnvl2sb8gq5rs"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1810472662,\n  \"apiErrorMsg\" : \"cuixl17tqh5tas18ekate4mww5gqsm2zvoe1q2wwyc4p6zc8130y3221mi362yudqbuszggjk10kv9q1aizr5f2ud0kwrvstbzthn5x4w89ytqnikh4hpgahctkkbhuk28cc87lt7ty0vp7zo2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84be48ec-497b-4dc5-abd7-ef6d0e9a2adb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.631499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ac1387fa-4f0e-4314-a54f-4c9d6d7943d9",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "q8lfreop4xeeqmye69flclilcthkl6irvnafjoqg6pscv2zv8w4qfz1pwu4yf91ip6x370n9hwpe2xsvx3hkpw08rcjlcskaju55cgt7aq0wnankh3aja972ycjaew9zhqfxa6m3z1ymllmc2nq3uwmwvis97rb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"provider\" : \"46t7mbzi8ffpiqlrkmjyj8pfigt84tva5mrxwhgek3ts3h7ygial9hhtxx0el5peeu4uzt024bryquyj7nqz61rx8pmxqt28j20vqbdvqvey2zip3q3l1d67trzsmamakdv7mr5os459s6bkii5b3dkn2ghby4djxzu4z4llkt0qfkooa\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : false,\n  \"domain\" : \"9r4mx65kcralvze8szqyrvziqu3xn14zult86uaqm1rwpbsgdaofqx0x7dgsv3tpd76h1ut3f34\",\n  \"is-freemail\" : true,\n  \"syntax-error\" : true,\n  \"email\" : \"irv1qeuov4cy0h9mz1komko3skdnyixa4hjws3yrq3jyjqxa8qd4hyn2g7kg4yjfc264uxho0fjkex5509h23rf5p9y5e128rzim9ynyp4w9jt4m5divw\",\n  \"is-disposable\" : true,\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac1387fa-4f0e-4314-a54f-4c9d6d7943d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.631402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntax-error", "domain", "domain-error", "is-freemail", "email", "is-disposable", "typos-fixed", "is-personal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "11d51e00-bc1b-4ebe-8dde-3ef79956ef7c",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "irlpinrv02bu266i6cts17xk6ny3djby4s438y6ido077zrbx07vcp9qwb5gwitsc1558c7vho3pgev7r04dbdkss4t7s1scu0jqf3tjp2o7gmlqmr4z7rnu0l4m1f7c7tz7hdm53nbagafclac8b7awiz8313wxl238h"
        },
        "from-value" : {
          "equalTo" : "yjezg09l9gmrrm"
        },
        "from-type" : {
          "equalTo" : "sxypc0osxpvto72cn2k8o9yp59pzlb5cse591yap55rsb3wkl5o6suhjob6h79geled1uczhfqyyntop1qzgjfopunw55oz85csvg8tpvivg898"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2019181037,\n  \"apiErrorMsg\" : \"lnfslqt8kwde54sn7so4epfckh86b94hzripgt2q6xnnygvs3uq8yj4ie88s3eqfusraa8w5unxv7uh356kczo0wka5zpy0ypdbefcvfznf5cm5miov0lko2uo4q6mi9o2imn5wqe3s6l4vcptuvzbu4zh5i8u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11d51e00-bc1b-4ebe-8dde-3ef79956ef7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.631197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "976a84b4-2557-4291-a2fd-9bfc9ea3a583",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "xx8ijm9h71us7g8bcu9nemz4no7x244k0n3im8ur309re3s1bc45mbnek93170bpiaj8dxpur9ah5uw60kzgsljvni3mxuoee8tcy8feqau700z09maia6nekpg9d9uehj123ezqlx1vuptg21s1ylc560mx0i92"
        },
        "from-value" : {
          "equalTo" : "wgc4poklc7bxzzrhsh3t64pmog8h8xj6uidqyq2b91ndkq"
        },
        "from-type" : {
          "equalTo" : "ix29a0b8otgobosqm8h0odmif6wy4z1f3g9l6y66pggw46jckiq03js1z70cvyhdzhgztdsrtl10hz9pmfstspi9khnfwhayrnf3w7o3j4vgvmiemb42ab811y84lax1dj1q8mi2zpxz75jzbbl8z9j3m8kjwzkep7b0rfef2lgevmnomltuta9abezv2"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1358790825,\n  \"apiErrorMsg\" : \"bde4a1bd8il4z08o2a1f41tp89gse2315hwgsmv4wyjil1pzh5dtyn8i7wn5rxejqc794u2wb9vmmrsslyli17tec69lsf1smbtjyqqp4plj563vij5x7w0pc1lkbjbmxwf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "976a84b4-2557-4291-a2fd-9bfc9ea3a583",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.631062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "de2ca126-1e9f-493b-9641-d2b4ab1880d2",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "gvu30t5geuhn6ajfppg5ro50ndv26avfgz4j09zduzhvoxdy745akxj8n2r4eukhg200m0uwrd48c4p0axxvwgj3x25pshwnftqtycho4v9rowj8mf5ewo64yj"
        },
        "from-value" : {
          "equalTo" : "tjdce8v5cbqz3b5tsyfwow30zv1xmgo0vvjlqj7pal840q80w8xu71afysq41ahf2wndlvqs2tluj7otc1ka4xntk8v"
        },
        "from-type" : {
          "equalTo" : "ena8g5e4qjdlmfnh5rpgqd5w"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 542624978,\n  \"apiErrorMsg\" : \"74afo8r2dn6i4mpgw77unpc1mw28pp68m60ea2h9z0bzez00wfdmdy6jhyz8i2dtosm7ozr0szljnfg4lxolnsm2ljy71y7p0gotogu1o8nslbdxd6peywwjesgr2cswmg98jw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de2ca126-1e9f-493b-9641-d2b4ab1880d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.630926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "99798b2f-68f9-4031-82be-d05558dd2646",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "n2sf52bjq74n1cvtf1rjle56h766j6vo7doj6regjyyylzcpv1sjnx1bkg836zo4k"
        },
        "from-value" : {
          "equalTo" : "jkc43tdbufj43w1gwa6glstmk2h71yu77lfjyx9smut9pcano6sfy5d2r8l0p85ahdo5gg3p0lnkz4mwwb27yb2k5wft64etn0dw5qnqgjerxw"
        },
        "from-type" : {
          "equalTo" : "t3s32jytdkk00easfj51lgaqv66s46fsqlaam4d7ef511l8b8x84dc45gn8kxa5n7zguabjh5cyq307rjotzfnjbx3dl50upg5d8z7lnts3gu9jwzxf97ixvt90r56uyxqxwgmvxmx9yrx7fa7u42twdgqydsp0rnmoiizpgc2z6u5w67u7640xxixtcj2hfoq7lc9a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"xqu7sa38jet05\",\n  \"valid\" : false,\n  \"to-type\" : \"2xss8ziiqvtxin86huo\",\n  \"from-value\" : \"evg10s2tndfpravcv9gh96n7n62cfovlynfnlt0z4m89g28z5sybhugzdmuwmvi577e1di6ln7wpdy6jx17dv0fw2pm1ii38ke61wbbbzo5kvk0vgvn0p\",\n  \"from-type\" : \"5vv\",\n  \"result-float\" : 4.6625812394556525E306\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99798b2f-68f9-4031-82be-d05558dd2646",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.630789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "from-type" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "from-value" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "result-float" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "to-type" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the conversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "from-value", "to-type", "from-type", "result-float" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9599e860-adde-4d9a-99e2-f92fa44226bd",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1216694116,\n  \"apiErrorMsg\" : \"j2rjfxyfyewxj07202wmxg6sjj2vaa6ejpquci2fi6l14z7yxt1pgji5dsmd1icsmnuax70mh2a6p0q5frqrclw8cjsjalzl1r1rxi1xt5adnz6wvm3021aklfb8pt48mu5c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9599e860-adde-4d9a-99e2-f92fa44226bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.630569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b579f5ae-7d02-4abb-a846-c2b90bcf0e98",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1132717484,\n  \"apiErrorMsg\" : \"njr6i9vyk9hz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b579f5ae-7d02-4abb-a846-c2b90bcf0e98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.630501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "47eddde3-b321-4643-ae1f-02700dc3de89",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 614271052,\n  \"apiErrorMsg\" : \"d7btaf6jg9na7ogv1ae00o15thsbk70osqevf1nb76kc1ebl6791cks13b1nxt6qhmihff9plijfu92js0botxzhuyva36q00szu2x2lz4cre134a8ppqxmavxhk72io1bqn7bkrf9czzejog7uz0ygz0sfvxxz91zx8awn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47eddde3-b321-4643-ae1f-02700dc3de89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.630433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c6f5533-f41d-4738-89ef-7e7cce519968",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exec-results\" : [ \"udxw1qu57ziahz61tzpsnebuxaoastpz282yr8v596px7hcvr06fzxn51e9d0nbnrl9cexncc0g9q4j0e4\", \"zagzyvtnw3l5qiundbiuhbc3jhf1596h1oi11oofbu\", \"yx6t8uzxm6i\", \"qyadb11ecyggrs9j9oyg58uxdpvsg6oajwy7epd7ux\", \"b8qg42ioju9w9geds1ytuh3uqjz3amwevvh2jug1xlrukvykpre486w6d7h17\", \"uigs0hlhjopgd46cw5hz0y3xai35zz54s3n1mwraahmme20pjj4owqzt8t\" ],\n  \"security-details\" : { },\n  \"mime-type\" : \"5kkb0bsbgxzb8qelwfibxdldj3nk0bkrfcyscdz0nxmgkif5icurtdsqrf9himd1mrd35uvi5azwgyuj3k5r4hmn2itxwkqw6sdp86c6sctoyeybcyqo8qyuule6ezrec84a4pda9w47yu0hr6xl60utmz1p6wcp\",\n  \"response-headers\" : { },\n  \"language-code\" : \"fmk40ikr0xjquol5frsxlml1w2q5icrap5v2mujuysilioxjr8hd3obs0dciq66k9qo8htxs9hgwg8ofnl74092ejpfyfeeep431x8dmn8qo4dmrty861ftqr50kjwwmmskqbyoshiebuvow69ik8b1\",\n  \"load-time\" : 5.508155786222025E307,\n  \"server-ip\" : \"geb7799nmo5vwbto7ts6mj7j3iarxcvonmobvkkgs538edzdp5k40y1yvytgegruorhy56xnnvjtnrfs2nbeq9pd4gnuftobijqggkmbp78p\",\n  \"title\" : \"Vel eveniet ad explicabo voluptatum est.\",\n  \"content\" : \"Aut magni neque incidunt consequatur et ad laboriosam. Illum laboriosam illo. Beatae commodi quia. Hic odio minima rerum a velit id. Amet eaque provident.\",\n  \"url\" : \"https://web.example.mocklab.io/969505\",\n  \"http-redirect-url\" : \"https://web.example.mocklab.io/566564\",\n  \"http-status-code\" : 137334885,\n  \"is-error\" : true,\n  \"error-message\" : \"Ex ut sequi. Modi vel beatae quo. Est totam id architecto.\",\n  \"is-secure\" : true,\n  \"elements\" : [ \"ykmhnhjzyz3deh4sg7353xcbayh4f6iq9gwvu7n6zdp1e\", \"nrh2gk3b2liibh4i0rgh7p8i4miqso9p163q5vk7dquuf302vb627brpm0qmfnj6fyex01ta2sr79gupxguwahwfwrpop8pwiu9upqkhm3izxqhhf8\", \"z3xuhp2vvkagnklnxac8oqu71gjkl7qdm5ua7sbspzoofl7lkv09lz609567\" ],\n  \"http-status-message\" : \"Sequi iusto dolorem est corporis asperiores. Voluptates molestias aut. Aut ipsam et tenetur ab dolor ea odit. Porro sit omnis ut sed dolorem dolorem possimus.\",\n  \"is-http-ok\" : true,\n  \"is-http-redirect\" : true,\n  \"is-timeout\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c6f5533-f41d-4738-89ef-7e7cce519968",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.63035Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "error-message" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "exec-results" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "http-redirect-url" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "http-status-code" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "is-error" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "is-http-ok" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "is-http-redirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "is-secure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mime-type" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "response-headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "security-details" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "server-ip" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mime-type", "title", "is-error", "is-timeout", "error-message", "http-status-code", "http-status-message", "is-http-ok", "is-http-redirect", "http-redirect-url", "server-ip", "load-time", "response-headers", "is-secure", "security-details", "elements", "exec-results", "language-code" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5fce113a-0cd3-4c94-983e-80676c06cd7e",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "djud3zp34wm8qqbuwxeou4kuufwpmm1r2p6kpk5804l0bl61lvt8r4s004rz00y3fp9a24fgxbihfnugjpcq0svkphc3zjzycy"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1396762556,\n  \"apiErrorMsg\" : \"hx9ad0np4hacwcjgmvvumhvxs8kg1f0j4afqu2pv280gk2q6pza275ohypgf1ar08lpgw2y5qcbg60y8yczvmt7z3kjwtqxgo1p42jff68rakcfcpm9u8p3u328gwzdc7rm1dy4uzsiq5fokymsqd9ihribinppb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fce113a-0cd3-4c94-983e-80676c06cd7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.629675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7e6a7b38-801a-4935-ae8d-ea18e813391b",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "y9awu"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 373260557,\n  \"apiErrorMsg\" : \"oa6uq0q37feeb8j1app\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e6a7b38-801a-4935-ae8d-ea18e813391b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.629581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8da985f-3e66-49cb-8309-c87227583500",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "i2gs1lnrnatf6pgqzw1k48i17m3mp3c"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1676965634,\n  \"apiErrorMsg\" : \"mwzytzn2rzk7r7126kdepfx7kpsjl5hq3wzu3119kol5n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8da985f-3e66-49cb-8309-c87227583500",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.629469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0f4cf507-30ed-4db2-8dd6-9bcc1637bc0d",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "z5ss2n1nlbui3glndc5fur6sk4f3osoq6h468kcn93fvi39xw57chkkldseu9ihr6hd3orb4z0t00pb2pdbprv6w1n"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Rwanda\",\n  \"country-code\" : \"aaaau\",\n  \"card-brand\" : \"2y1ccuezdj3awzkxncmg533bq2g45p0deia8rl095gyf0kqbv0aizb128iblhj3bc0bp63a3ak3qdr32dx1wvldosmqscri8b88p4qilqy18bb9fl5q391d4yfwrybdh46iv2oywbrpy6o1hl1l5sznnatmzb2stxpge8vk70niutygtf\",\n  \"ip-blocklists\" : [ \"m71arka0r3w2il3rwi1phx8r2yn0qcdugoh82mc8f3uyroz9zfbzsg4uotz2geza99m6ibgzwdpyhmuosprkan4t9rwv4qfg3qk6y6t421j9xw3\", \"4pi81exe0kird9ylaw34o02ea578kd6zsprurcbbqal6bic2077v0gy4euj5af0eq007qewpg6l6g3c4zquffkmhbko9x7l4axt4aut2dmniqgj7u58q1xrw674v4dslds\", \"thfmost557k2pcvdzgft0p6myg3libvb2rofeczh0ebsnwiyds5jkz3gf3j76v6lnpgjlg8ajibyrpm1lekiym55ydeeu137otn2or8gng6\", \"65wokpqp214cmc61mnzpzw4k2gvdvzd03sutobyof0fd38fshy8p6oan7lq49hvvi4j53jlw8gee6dn2609evq8m22ewatoi2tu02342yi13qto7d1wkq50k8n4fmoaldb9uiqqykagg4rye517wvqh7wzcgd5npjm2gttn0fkmdi17hjkfgmvnob8avbovy15ichf7f\" ],\n  \"ip-city\" : \"Murphyview\",\n  \"ip-country-code3\" : \"8sb59k9i25jdh91u5i4rffvgrseyd52dv4j8n11ezrujdpecmz7kvogvue9ljkgp236wu\",\n  \"is-commercial\" : false,\n  \"ip-country\" : \"Singapore\",\n  \"bin-number\" : \"vsd6pl5ik2rwtwvxhwbty9slua7iwehqbm9xf9nal233nf7gui7qycbpomy0y89xf21il70qd84a3177rrcog6p57rf0rae59y56nqm40k6k7h2u8snrrwwjq86p0yks5og4l7emt7p9o9o4z8kyphfp2u4kby3gdbrpfily4gkmi7mzaji\",\n  \"issuer\" : \"5obp0iic29xlds7udb4xtnbxy6ip98ahd8217he7u2xsfgs75rwhiqokq1fz2rgsy53n8nxzbolm30dss6k9b4t5296e7loavc2itkqqihbie\",\n  \"ip-region\" : \"4xeul0km3cpha4r8bqm6pmu3hsnpy58b4ndnufe2vh6h23hr1rkqwmf4w29wiw5hmb9rk6zcmoxzig5l86y8kpvtoc21rrmoes6fyqhx1qigut866u83sqwydacgiogpsf8imldjeyxftz2y1hooo5cn3tifrsbese810ca4ukfiwej24j0eld49n0sk\",\n  \"issuer-website\" : \"ffdq359rgq6l5up4p81cf5ytjj6effhmjkbtgmtusofyumh4sk9nn4164rsepjwj2484p5t1uyntdtt5hixxhsnkrllma132i0wq2a5xo14fpqic5h7ae3mhudbf6r4p2jsholhwk4akej5jydq8qe30fk4omr\",\n  \"valid\" : false,\n  \"card-type\" : \"sso8wjjqivqsafvbscwnjamjycpu1a9ob6cdckvoaznoqx1plvl9lasbmed818wpo7npg4w80w76jopxxnzm37uuyd7ajt7a5b4u\",\n  \"is-prepaid\" : false,\n  \"ip-blocklisted\" : false,\n  \"card-category\" : \"syqon2zbaktvsmen4bofvkrfjc6z18btxxcr6nnfp26xwbaw8gf1wdbltsbrj8iadmbx15gpwl1z0mqf13f4ypm7hi4we1phgvuq7xpwqzkdt1sin\",\n  \"issuer-phone\" : \"858-604-8678 x5821\",\n  \"currency-code\" : \"CNY\",\n  \"ip-matches-bin\" : true,\n  \"country-code3\" : \"pqq935jkf076aa21ekx57qhglowrhydh23nu6ri0uwqivvk591vrls408trdcvit0t7r8mr59ieyv2yvi\",\n  \"ip-country-code\" : \"aaaad\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f4cf507-30ed-4db2-8dd6-9bcc1637bc0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.629329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "bin-number" : {
                "description" : "The BIN or IIN number",
                "type" : "string"
              },
              "card-brand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "card-category" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "card-type" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ip-blocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ip-blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip-city" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ip-country" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ip-country-code" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-country-code3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-matches-bin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ip-region" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "is-commercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "is-prepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuer-phone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuer-website" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ip-city", "ip-matches-bin", "card-type", "card-category", "ip-country-code", "ip-country", "issuer", "ip-blocklisted", "valid", "ip-blocklists", "issuer-website", "country-code", "ip-region", "card-brand", "issuer-phone", "country-code3", "currency-code", "ip-country-code3", "is-commercial", "is-prepaid", "bin-number" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f5196bdd-3a70-4603-a4b8-59cdd68fc70f",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1494220716,\n  \"apiErrorMsg\" : \"ym7sqww5wlwihlr30640qku6ndxfbyct2x5atb0ghm5m3gorjor4jvjcw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5196bdd-3a70-4603-a4b8-59cdd68fc70f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.62186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2329254e-f1b6-46b7-809f-a9f0682f1b7d",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1038552953,\n  \"apiErrorMsg\" : \"n4unu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2329254e-f1b6-46b7-809f-a9f0682f1b7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.621653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39a46703-0892-4611-bd75-24bfe2934ce1",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1982496043,\n  \"apiErrorMsg\" : \"6l6v6rep2cuzwxktit9m3ckb5c6mek5i8lxzdp9jbie8x7za4ely2uamta68cfp0vekxk57ovbrsige0evsnjlgau393pv7xwoj1caigpu5s10nx704sxyfmflu0mj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39a46703-0892-4611-bd75-24bfe2934ce1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.621169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ea692409-150f-454e-90b3-8fe02a79f79b",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"q0sxikke575kl3xk6y6eouednjf\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea692409-150f-454e-90b3-8fe02a79f79b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.620975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "e3fa2244-a60a-4154-87b7-ab86d02e665a",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2142647431,\n  \"apiErrorMsg\" : \"nltb5vi3uu3a327oagfftv31k3gq89774jdfmeb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3fa2244-a60a-4154-87b7-ab86d02e665a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.620824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "30a68eed-17d6-40fb-a439-913abbbc038d",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1313783087,\n  \"apiErrorMsg\" : \"ptvhiw45s2m9xpxmnh8y5r7b35gyr3xm35omtxzxhzl1rt34lh4otcmqwd62r9vli6ovnew3tzqa5pjhj9swqqqcn9ow0h69k14jjuzwsmqvvzil58u2r5hb3zidvduq8tevmysamawtctc08z0xtj9bs48h3njguzhn8bfnqekoh9p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30a68eed-17d6-40fb-a439-913abbbc038d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.620533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "520096e6-7b9d-4e90-b324-90917e17dd47",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 246374738,\n  \"apiErrorMsg\" : \"n25qrl2i1yyzfcy8rwwhsg3q44u6kza1frsz2xikdnulnop7k05wd1qramclfz62om89m1a2js4mbumoxwdqpmhq0bfc382n20llgnsv314wdam9yxsbqarmntp0s1ui25blsm7g6e5t21obyvys2qk1v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "520096e6-7b9d-4e90-b324-90917e17dd47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.619833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "18b78405-2692-4b75-a11c-459759d14051",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"censored-content\" : \"Consequuntur quis vel aliquam eius quidem. Quo debitis iure tenetur. Consequuntur est dolores ut ullam voluptas. Qui facilis vel rerum. Eos eligendi facilis.\",\n  \"is-bad\" : false,\n  \"bad-words-list\" : [ \"jmrlmfk6h4bvz8r6nzylco0gp6285ufbr7rd0pk85w7059rx8f993cdfdnc6pizkq8cqwpcx1rdz1xdcafggpgsqa4jcaib2srt5ptfgt71xjyz29h6ceas\", \"zlq1nluv3i16juywqvlvfpy6g81ttadmys36bhmr8ofchsn262mi4j1ur0880ypfbz18en8cqvhpiq06dev9u2ww4a1d43zbae5x8bxmjrp1zj08y0g9ph3qucuu7maghgzcluccns4hx8j0b0sg9xf2y9g586q7pfjldolbv56gy851024ki9zh70rgzj43x1ts4c\", \"jd7ag50z4xngf9sqxbolw6gjks87cin3xdhytqwtyb0nu2214z0slejkh32d423xa3s6\", \"88c8f7e8wnvpp5p4r0n40wl6gmr06w3bt5q8g3ryf3h6\", \"vs44wkmffypzesod3n0kq2jhph8qxrjmfplo14e4rztq91n5y1y4bfs57wvwc7d7nma6k8u4hcpioc9e0x0iumvz55mr5hp1orlvy0l8wq02ofs8oz8cdkv6npe0wv86h6sf4nrrkdx5zswh46nnin1m0f1ed75yfigy1nlq3kgsvl7za7y209co8k87obx\" ],\n  \"bad-words-total\" : 1558004779\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18b78405-2692-4b75-a11c-459759d14051",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:08.619488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "bad-words-list" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "bad-words-total" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censored-content" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "is-bad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "bad-words-list", "bad-words-total", "censored-content", "is-bad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    }
  } ]
}