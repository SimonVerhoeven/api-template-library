{
  "mappings" : [ {
    "id" : "aa02af25-dc4f-435d-85e0-7d49a4628b46",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "gyet3jlwh6kfak8dj56ueeokaicmzch223fdqrhe99dky98oskqa4"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 115900160,\n  \"apiErrorMsg\" : \"j42hmcbzy4bqwzl24ocsk3gtt1g56j5l95rlszfbdt71z5lexib895snq3maahcqb7678lb89pj8prjr5va6lj6yhphlfsyn9wnpztoz60mbu06kyb2xbe3bsdgxtcniy26283umb9syb1bhdsmdshy9e5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa02af25-dc4f-435d-85e0-7d49a4628b46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.527851Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "ea8dfedb-477c-42df-8595-6321e444f768",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "baa4amyhuc3dis1d59zefgizdlk76s43t7p94l6kuguo6ka64f9pmmv1k6x4o1ofh8svbkxd5kflbaba382v2voibz2yddi4ckoyanufaygwl5vw2qlohayacal32wxx8lneibvfvc7tpdj5ktawf3dy6s8heyrem1nraz1knuy077v0vrhn671y48xiy4p4ppm"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 887149401,\n  \"apiErrorMsg\" : \"qmkcjhzm1c8ugdxod764pzaxv8k5pqiux4ovldr0i541bmxy3mz7bw3tdqbcaxgynwbnp49cixkdgvvhxcx09xfds4wv0l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea8dfedb-477c-42df-8595-6321e444f768",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.524104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "f5ceebd1-8b7a-41d9-8b66-73d9ec45038c",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "nhc1qgunpxl4qqx4dow187hgicw2xk07yiiu5eqtljvfuutfmkynn9ybzfr9yrpehu1yopl55fw2ldgqwp4qti4h43jtvardg9q1xxeanwccp5uu"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1067328605,\n  \"apiErrorMsg\" : \"05tde239ejmqvyzw6qkp9rto2gbwy96xr1vkix7k9o3e9eqnwsssqel0qnywouf5fangx9heiex0rxq5bwi25f9kluyho7he3jqpb9jutyiwhxlytnwwobfw009idzjo8gcsxu7c17qzbv3uqgey4ypdqdpopz8j9mw5tg8oixa9lyy0s7lylkm1sdyii0y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5ceebd1-8b7a-41d9-8b66-73d9ec45038c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.523812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a4ea1220-0653-4a13-bc7c-30cae6a60d8c",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "3i2u58wm00lq4z6bte0x3avqnmgttmzta8094zpo4cpac78h3u4mujocplfknhg4cxylxcfox0yg22"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4ea1220-0653-4a13-bc7c-30cae6a60d8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.523385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "4a4b40cd-8163-48a6-ae9e-26165eb59ab8",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F636634"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2105179514,\n  \"apiErrorMsg\" : \"5epgrup63y7bq2841dn0gxnqxjszjuyumj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a4b40cd-8163-48a6-ae9e-26165eb59ab8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.523081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f404528a-90a4-4bd2-9549-9249a327015d",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F350987"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2100025599,\n  \"apiErrorMsg\" : \"m75z61hm9edxt0rd1ssc2acmubylwvp3n1hy3ubre7b8okk7pqnxgk6y9jwwtvp3i6rhir10xf9v7epf0dreum1elozkr7k3ncpucpmffrna1lj8vhfbphtcuqdeq36sd9q14kfarl6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f404528a-90a4-4bd2-9549-9249a327015d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.522509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "3298c00f-f614-46a4-91c2-504318c0a193",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F066559"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1039640575,\n  \"apiErrorMsg\" : \"s148h6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3298c00f-f614-46a4-91c2-504318c0a193",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.519995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "37402fac-da15-4a9c-89f5-4331bb171c91",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F509127"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"http-redirect\" : false,\n  \"content-size\" : 838198720,\n  \"load-time\" : 1.5012491535897678E307,\n  \"content-encoding\" : \"ec3vdyibaooj0urxq3o6o7bw6e5bzki15pdkn2ans6w16c4tguiogzjq6j4vdbzv7sgsi45v6kq7mxlaumjofgd5e5mycodf0ejod1nsb0ercjecie69s293ph8nebevalfruxk0bkjm4k3ypzojk\",\n  \"server-ip\" : \"3dfj1tmk\",\n  \"title\" : \"Earum architecto natus reiciendis eum quia reiciendis deleniti.\",\n  \"content\" : \"Sit quia eos autem harum molestias excepturi rem. Qui eveniet exercitationem voluptate quo. Necessitatibus neque voluptatibus nostrum facilis provident temporibus voluptatem. Nihil porro ut iure moles\",\n  \"server-name\" : \"Shavon Lubowitz I\",\n  \"valid\" : false,\n  \"http-ok\" : false,\n  \"server-country-code\" : \"ssssi\",\n  \"server-region\" : \"od6r7tf8ovxlae9s1gpifywolr4dja4k9s0iy0yysd7t4mf9oh5iujkb5xj4cbc8zxk2ubepcv7cdiq9skyxp11in8iyiwv03um251a4slzbdoy\",\n  \"server-hostname\" : \"Janis Larson DVM\",\n  \"content-type\" : \"9yl37viq8zq54h1edt0kvxhw7n3khgjksrma82hnmprpq4ngi3iwnu3xncbee1nalwik82ox0tzpupqm74smhrg13ozm2ba6467fxgnzc7qi7c7200iqiaj604p9ptdm8kyhu2fuq2cs9u5nhqr0kt5ylnse3\",\n  \"is-timeout\" : true,\n  \"url-protocol\" : \"t14xiyamkwr9x858pgl4j4zryrojnhy29ievxumpkda00bas2sf636wmo3wndjjf7r1nb3ibvj2im48w3jhpmvoe502osoq60px9x2t\",\n  \"language-code\" : \"ux3s77wrjkgtoh5bt0y74fdl9gu1deas0rf2dldz9sqfo5il0d43meinvrhl849\",\n  \"query\" : { },\n  \"url-path\" : \"sl8eaktr8y25nezvmxipglt7s8tbrix9lchi69cbyekow9yl1ac3f3wsh8opyz68q2b6vt7nnztl8he85uz3zj0gguzi3r3oyvbbaxellz0w2abduypiisb0irbzth2cmrkkzte7s068gnaxlsf3ajk6q5gbnr14dnv6e0dur2bakdpqdfg6dszwda23zr2oru\",\n  \"http-status\" : 1100516311,\n  \"real\" : true,\n  \"url\" : \"https://web.example.mocklab.io/693228\",\n  \"is-error\" : false,\n  \"server-country\" : \"Albania\",\n  \"server-city\" : \"Kirlinchester\",\n  \"url-port\" : 455518101,\n  \"http-status-message\" : 1754444777\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37402fac-da15-4a9c-89f5-4331bb171c91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.518552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "content-encoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "content-size" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "content-type" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "http-ok" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "http-redirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "http-status" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "is-error" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "server-city" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "server-country" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "server-country-code" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "server-hostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "server-ip" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "server-name" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "server-region" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "url-path" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "url-port" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "url-protocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "http-status-message", "server-region", "query", "server-name", "url-port", "server-country", "real", "server-city", "url-path", "url", "valid", "server-hostname", "load-time", "http-ok", "content-size", "http-status", "server-country-code", "content-encoding", "server-ip", "url-protocol", "content-type", "http-redirect", "content", "is-timeout", "title", "language-code", "is-error" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "0832b38b-c5dc-45f7-bbd4-e7fdbd1cd424",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "w0fvy5o9bd6yp8ctsn6evl8r89ugo7h39w3zz4msewzx6w52mjqhn9qfhjrns3as9yn9vntj2plyra84"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1847713306,\n  \"apiErrorMsg\" : \"uymyzom3funaku695ed9j1epbuxy1cf4ufvruwg1d0tfsaybyl2xiduj5z2js\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0832b38b-c5dc-45f7-bbd4-e7fdbd1cd424",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.51301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f68b8503-79a5-408e-9efb-bd3fa5ef2e4c",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "vbiq6vqfsrtjvvdvq44oarialrwajj3vtt6v6aqfwra4zpwe7v8jb0qpnkiayfwh55qtxuka46rgfp2c3p9qmgzp92r3"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 501940070,\n  \"apiErrorMsg\" : \"rs45zss4scee6ku0bcf0i3agjlifvyv9hm686tax60mqlj6mtikc4b82z139ij5w85ie0s5psatz68otdwg5rewddfhs724z2yhqceshgv73jxs4r15vuqgif4c2x9ykh5xurlc44foj8xts36z2y3hwvvdml2nzb94dkzljaq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f68b8503-79a5-408e-9efb-bd3fa5ef2e4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.511822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "87b7641a-3a4b-4518-b882-40b9e9c3a99f",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "20td3eflb3mzfhh1ulpyjl7kvp7qwsivtto9pfnj83cratnc3iit84bpnb8rxl4vxqsz2i49nvzlbjrb0n63pvj97fsb85ju791qs2zfp7d10z23zt9kull6"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1367164398,\n  \"apiErrorMsg\" : \"jbsas6v8e67h5uzstssmwv2xdqmxcewdqbqw0ow2m1kb1ypeunc2jjfm16xno\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87b7641a-3a4b-4518-b882-40b9e9c3a99f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.511111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "39447a54-b9f3-4811-a088-75e18a3739a0",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "1lw1nr4obye53wagk6x2jln3uw89hc3rvep0e9vhndotng9ar4e6di62918ccgm4oqafxconagmv95cn2jtaqeiolcuf9nmeyt038ibaotiv0frfs1usxciia2wtmlssb9uxc1ijt2z5gqhtfsxlzt0jcjpgb73b5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device-model\" : \"cy639xjhxdffuc20nbnk8axi1x31ks5jbvz508hbpfhenkxrfk0uhy4\",\n  \"os\" : \"l1xte2m4jyrsixh1vtsyafwlovdrg05qqklhylwqv43jnht0etnq58jw2vnar1ta9\",\n  \"device-brand\" : \"p5q57fou8ku2g4ynb74g8ealtt5q4y9uyxm0x7l5nmn2qrx1q7giss3bp309uj\",\n  \"browser-release\" : \"hxvl95ef134erdz0me4as3qo8x4sxb1n4x6qm1veqzez2dd8wwf7exr1ns48c6lpijpzxm7u0a1ly7n1li4esyow930kx92fy6xw81qqfq28h8h8jqbjfnaieijknge81t529x8bwxxw7nrlsepanct3u5d6fwjakyls4jhp99826ppj\",\n  \"device-height-px\" : 3.5907634849562957E307,\n  \"device-pixel-ratio\" : 8.764791083988835E307,\n  \"os-family\" : \"27wrk0de7xkje2h2w8hsta7fnjhp4abu6095k5oh5sam857sptky69sgqsrztvv52qt6lx4hg4dp81vd18reoaog24gyxi70woa1frga5dxvygorlijuocq3yj9knfj02erfzhul18j43wfknfez9m36aipfxiyj99g\",\n  \"device-ppi\" : 8.103123551735407E307,\n  \"device-price\" : 1.2319281480952218E308,\n  \"type\" : \"3b8vp40uv7ppv8vvjvx41dppmbltrnf5ut3a7kze3ugtybb01dk5bg6glldlqpi2wdoe1comixartf70ogccy25lix3u76o2d0j6exhol4svtank4jw3qrg2dj2imzrc95t7vfcecdl0qbndxfg78wo5heltss31scpdbjmj4yt7ydiqnnlz475hkqzp5d\",\n  \"ua\" : \"rwrl5mgdhe0sea12ssjosh0cx4t020bts24x9648v9bqjd5u9d5g0zl5zpai3wblm08z\",\n  \"os-version-major\" : \"ikspxg3j9cr6k8y2mdgt00o6e4vm2ewtdhbdh7cs7wd4g94gm\",\n  \"version\" : \"vac37zxdxeoerl4rvi3sh6teaab6vcn8phsfvfkiurrooik5wk6mjzr8sswwrl6irzjgxque5rhs\",\n  \"version-major\" : \"lmw1m6puz13gg\",\n  \"browser-engine\" : \"9540dvjciz98m0xqc2cvymndtnuz61n0e3ehi6bxl891qfe9m\",\n  \"device-model-code\" : \"d57b9ai6xdce51kelv52neah8vokrhvwxem0865vfar0wqlj70fl7z0h6z0xo46gh3wl5al66rts2jk2i5kyi2pzi6dqzdd0szjzcp491si6mtj4qwei1fs5tbaa2du7mew\",\n  \"device-release\" : \"b4ffojcofusulg4ux5445wbniad\",\n  \"os-version\" : \"2x163qz28lp6p\",\n  \"name\" : \"Jayme Kutch\",\n  \"device-resolution\" : \"u5q8zztmdft3e5jggek777fdqbe6o818drlqq2ksgwyt602ptun5h0hnccsbnoq\",\n  \"is-webview\" : true,\n  \"device-width-px\" : 1.5996308098938406E307,\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39447a54-b9f3-4811-a088-75e18a3739a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.510712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "browser-engine" : {
                "description" : "If the client is a web browser which underlying browser engine does it use",
                "type" : "string"
              },
              "browser-release" : {
                "description" : "If the client is a web browser which year was this browser version released",
                "type" : "string"
              },
              "device-brand" : {
                "description" : "The device brand / manufacturer",
                "type" : "string"
              },
              "device-height-px" : {
                "description" : "The device display height in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "device-model" : {
                "description" : "The device model",
                "type" : "string"
              },
              "device-model-code" : {
                "description" : "The device model code",
                "type" : "string"
              },
              "device-pixel-ratio" : {
                "description" : "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
                "format" : "double",
                "type" : "number"
              },
              "device-ppi" : {
                "description" : "The device display PPI (pixels per inch)",
                "format" : "double",
                "type" : "number"
              },
              "device-price" : {
                "description" : "The average device price on release in USD",
                "format" : "double",
                "type" : "number"
              },
              "device-release" : {
                "description" : "The year when this device model was released",
                "type" : "string"
              },
              "device-resolution" : {
                "description" : "The device display resolution in physical pixels (e.g. 720x1280)",
                "type" : "string"
              },
              "device-width-px" : {
                "description" : "The device display width in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "is-mobile" : {
                "description" : "Is this a mobile device (e.g. a phone or tablet)",
                "type" : "boolean"
              },
              "is-webview" : {
                "description" : "Is this a WebView / embedded software client",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The client software name",
                "type" : "string"
              },
              "os" : {
                "description" : "The full operating system name",
                "type" : "string"
              },
              "os-family" : {
                "description" : "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
                "type" : "string"
              },
              "os-version" : {
                "description" : "The operating system full version",
                "type" : "string"
              },
              "os-version-major" : {
                "description" : "The operating system major version",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "ua" : {
                "description" : "The user agent string",
                "type" : "string"
              },
              "version" : {
                "description" : "The client software full version",
                "type" : "string"
              },
              "version-major" : {
                "description" : "The client software major version",
                "type" : "string"
              }
            },
            "required" : [ "ua", "type", "name", "version", "version-major", "browser-engine", "browser-release", "os", "os-family", "os-version", "os-version-major", "is-mobile", "is-webview", "device-brand", "device-model", "device-model-code", "device-release", "device-price", "device-resolution", "device-ppi", "device-pixel-ratio", "device-width-px", "device-height-px" ],
            "title" : "UALookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0b6df784-68d7-4183-af89-6106bd4bcbff",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 205577799,\n  \"apiErrorMsg\" : \"g1qxz1458th6r54jc5ekxvercbowzt0n45v7oyf20631izii2hd1oe1b3ik0tr3kd1ozrpr7qwm7wfv505a88t3liecswqb4prnvf5gbvl4v1qvap6fbvwd46hvx097a5c6pqnvbr2r9dbcvyg2gq1imae79o1v3j9acruzjhj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b6df784-68d7-4183-af89-6106bd4bcbff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.504453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "5d88baa5-1044-4e0d-9548-1c6ab86e156d",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1818441339,\n  \"apiErrorMsg\" : \"ztdipwyqc54wqm1w6sqkimdcds7wpjshdc7s9yrwqe4ba2ddeuqh6v1wid1zhxnhw8z4y3nizsrscu7qgquwdadijidrm9z9nq8dcpdkxh5gw3ysq92w7iydz0ykbk43ccobk29bt0yev9zvq8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d88baa5-1044-4e0d-9548-1c6ab86e156d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.504297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "45eae2da-0383-4c58-94ee-851cc45921f3",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1201861667,\n  \"apiErrorMsg\" : \"8djhu2ops0cmatgina5he10hdadkzar71ra8o452rl3adxdqzslks7is5fok4ivi8uw9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45eae2da-0383-4c58-94ee-851cc45921f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.503126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "b3b58b82-93e7-45ff-8510-59201d95ba9a",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"vxti46q9tg1e5gf83vn5wzekowi3drbkgwzks5kitnrf6h0i47pfnee5itj82h\",\n  \"sent\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3b58b82-93e7-45ff-8510-59201d95ba9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.50302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "number-valid", "security-code", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "d1246322-88f4-4bc1-80f5-5dbc9497114b",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1003361002,\n  \"apiErrorMsg\" : \"fhxqcgb6nva4pddn66mpbka4zo56wvhhxkp3ff9gxml21xcb2jkubhb76vk5be8l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1246322-88f4-4bc1-80f5-5dbc9497114b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.50289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e2365bd2-426a-4d43-bf46-8095fb70a7ff",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2119105915,\n  \"apiErrorMsg\" : \"l6468\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2365bd2-426a-4d43-bf46-8095fb70a7ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.502805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "7a77e1aa-94f4-40c8-a52b-6daa825b8d82",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1417811198,\n  \"apiErrorMsg\" : \"bt1149cxfcku6ngro6ncnqvwaoluyench36p1pdajl3ag0hsi2oq45pjni81hbz2f9f6c7uiyejvcyc06teqgl6ckqiwjo2irm42zsrcp5ktuykd94\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a77e1aa-94f4-40c8-a52b-6daa825b8d82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.502711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "853ef005-1f7b-4272-bb24-d19ff1518195",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"mwovnwutqdbx8a6wki3dw9imv7rdsnobbowrubfijcnmwjll1r2o9f65g56rawyltu6mmk2gtix22un80von50hf5w6f0qhfzuhrb13nhjrv1j9uytdskzppddu0m0l1l220xgyo24fzvq9qmnzldi8ag0ic4iv\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "853ef005-1f7b-4272-bb24-d19ff1518195",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.502604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "0af6418c-1ee1-4942-90d9-014945bfcb5e",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 27221845,\n  \"apiErrorMsg\" : \"huw013fre3ivk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0af6418c-1ee1-4942-90d9-014945bfcb5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.502539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "2b7019d7-0b52-4b27-b3ce-673d42031666",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 939532441,\n  \"apiErrorMsg\" : \"prh0vay1xs1o27t9es6fwgq34iu5fa46evffmamm19f4uzh37tvpgltqle4fs9r0xbxr35pznxexle7i0zoob9vea0htikpds9shmsow4hr1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b7019d7-0b52-4b27-b3ce-673d42031666",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.502441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "4c51d734-69b3-45fc-8e4a-c7b9c2c6194f",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 934460574,\n  \"apiErrorMsg\" : \"hg0g82ms90da6tbtsxb7plk2vk784h4g1et62ibrwjsnqj6khqdg21mirpzefd43s25nv3wa5eivs715aqot07uqby9uzp3bkwl2aosv6spr6wk07z8fhkz8l1a3gtxi6dv03i3slhsf8780nw56vwy9jacpmh4hao8c6xfyf5u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c51d734-69b3-45fc-8e4a-c7b9c2c6194f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.502338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "e3915a8e-4e06-4349-8c9c-14c3a0081574",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"u482sg3fi8yt598iww9ngxm199737nvg8ymrp3fn0thu88pm5ddg4orlr4lu6kh3pp3063agj4wcd35ls2j6\",\n  \"calling\" : true,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3915a8e-4e06-4349-8c9c-14c3a0081574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.502233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "calling", "security-code" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "03c62188-da48-4b6e-a03d-2b8972c9392d",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "nsp5yj3p9vi713dxfxdz4la0bnu331inuahj2qyobnyuqtnxtw8pqu6he8kxk9nbv70cnuclj7b4vqwmiud6mryspm0ljv9a2snw3pgm644aux5fmkf5o8mnhcryqt12mryeot"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 921337252,\n  \"apiErrorMsg\" : \"46g5tkzn0c2jcx6ne94deo5y3z593iirqy9ymxpyi7cgxxinnq7humlyp409ukbkb15ewtc0b7p80y1u40omm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03c62188-da48-4b6e-a03d-2b8972c9392d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.502059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "0d057199-7250-43fc-8f29-072baebd83fc",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "7m6h7yrhj0ufmpcdr7cmw3jnbwy2wefn0gfk8n"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1899776180,\n  \"apiErrorMsg\" : \"27wu997v54dea1qu0bmonsr2psqg1u0vqz6j85bpkpkiml84sm3fyxdzopko1a7eqdbx0lch88z8nmy1ewdww1ys3kq0h957zlr6txdxtuvnjxammqhrdvk6c7in94vt8mwsrumac\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d057199-7250-43fc-8f29-072baebd83fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.501917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "35c4201d-3e14-4956-9060-b46662635713",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "ol8m75i1wpn703g2ajmqhnpzldiesjrwpunyajywec0q"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2023798143,\n  \"apiErrorMsg\" : \"o1kdqv7pwoov2u91ywwabbjnca84fc71376hymx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35c4201d-3e14-4956-9060-b46662635713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.501774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "b187565a-d6c6-4c9b-8622-1957ae79f2b8",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "dbmo6tfts4yozk5b64brblbskpr0me5c8vfms6c8avbqu2w0hf977p7upk3lem0ogmbuso35mgi74x"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : false,\n  \"country\" : \"Lithuania\",\n  \"country-code\" : \"ppppw\",\n  \"prefix-network\" : \"bn9ztz7g6w972pgrndkypy8i22g2b47fp034wmdtm7mxv7o3cvq77ddrjugcljzgvsil9wgzyr1k4fhlkqkegpjbrl8alg6o47njbbnim3q1ffj10recdncixrcjd041luqygdfvf7rklg7jqo7leie4\",\n  \"international-number\" : \"wkqblxjbu9myvq0435xvjqo18kadfgqxzp02pn1ozg3tnlfhz93f3drz38vvbybtdx3k5zyjtzvnwil0u29kx7ac52mcbn4l4f4pakc3t19ar1r2mruaacssjyoaa9utbc7t8mcdxb91gevu95j5yk70sfoadzi\",\n  \"location\" : \"ntc7c7b64m0jsqsc4o5gqdbxumpojcggunjhpb3v2a6k7x3qsv6y0wfpnckp4m8dvwi349rrw691soqsk3l5cvk3jzd\",\n  \"local-number\" : \"delrann01p9okaxmpj8l9tbbuhe8i3u4y5zmc13geprg0yg50np9srzck3x9anjcc1jzh7he9yojg344xueowjat9tdefu5uihetxe7n1kx4ruri18za1qda19r83x244l0hcmm\",\n  \"currency-code\" : \"SHP\",\n  \"type\" : \"t64dad57a6e1cr4uqhxh8cyvmzfxhzcvsiy88s49peolc0t3r62cbzpxql3ukpkx49bkddkxmwa3zshb2t4vrub0gvo2dikc01jhpupv4r7or5y6k7fpgvsyjsn4k05cg\",\n  \"international-calling-code\" : \"623ylnawr05hz557bdwhg68etf\",\n  \"country-code3\" : \"90oc5pjj2skyhazgyvt3jo1fmw6qokwa6niiyn1em1gtxmoljqee0hr0c5rbmvn137yjnz8qr1395o6rpojexq4r\",\n  \"is-mobile\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b187565a-d6c6-4c9b-8622-1957ae79f2b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.501646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefix-network" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "international-calling-code", "country-code", "location", "is-mobile", "type", "international-number", "local-number", "country", "country-code3", "currency-code", "prefix-network" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "58a0c8d3-48c4-4e2e-943c-c648436c8864",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 602753825,\n  \"apiErrorMsg\" : \"hte7026o4dq900juz8c5dytstly\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58a0c8d3-48c4-4e2e-943c-c648436c8864",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.501088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "96d458f4-1879-40ab-af6a-4ba50c0dcfe3",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 398063508,\n  \"apiErrorMsg\" : \"h54dn1zsowksw20xbl4z8efgcpphygq6eprgf0tqen50hv5w84iuze9exsn1tvhp4f6oz51gqhu5yx4ow7tzwr4uhowgewtwq8b7pznzs84r4qrqyvqyed5wudnqlvqai48zbv6r8ipia0flcgcfh576qx0vv1wfejw6lbj7qcje8yvuw162260q6q8301iskoz2m6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96d458f4-1879-40ab-af6a-4ba50c0dcfe3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.50098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "c4211104-5845-4370-9cde-f278e218f3e1",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1825813492,\n  \"apiErrorMsg\" : \"563kw1s8ukcfgi2aqd4ysaox1zysycga7cx106fr9wsogrtbv5e3n9uky1jfu9dvvnsan7xkeb6eddq4vhv1n58s9mvw4tssxc4y5oo7qs2g4kvb4000bf2vwgkdronr5iyutdt8iwl84gyidinms8nvgupgbefrb69aza0c06mfi148a8yp9mcr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4211104-5845-4370-9cde-f278e218f3e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.500865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "323597ed-8887-4104-a25e-e9ee70931e9d",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"calling\" : false,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "323597ed-8887-4104-a25e-e9ee70931e9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.500748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "number-valid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "82def83a-1acf-46e1-97cf-b0e5576e6670",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "9rl02zk7juhvejxn1y3jdisl17zvljiuhsrqnc739ukd6lc35r1n3sg6ydjuq8yyga8d7cdfuzvp1fzccnd6uzn142i8wgi5dsoo94c"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 381735516,\n  \"apiErrorMsg\" : \"1mbcetzwjz9qmf39zxn5ew2eho5mv47bzhlu4hlp74sefxupqhdq0c219kh5k8xvjjjlwuwxhwl4jx86g9drar29ii1gflzah7qhx19i9989aj7fqv4757d63ac7fuhfzbmupaq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82def83a-1acf-46e1-97cf-b0e5576e6670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.500625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "e797eadf-0a6c-4be6-a18f-bb0521ea87f5",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "fa6fd9v2vlgp3q0s64vhz70ltjyvqexe5w7eiaxu4bkpbn"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1246147206,\n  \"apiErrorMsg\" : \"osmjpm2m1j78s3yrsuz44peab0ilnrk7f8s5hfbc4g242eqhypthn3xmkx4g3lhodwlczwpw1r0a5rtub7xomwz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e797eadf-0a6c-4be6-a18f-bb0521ea87f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.50048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "dce7a98c-b244-4995-81db-73cfdefcb15b",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "8ed37z5iu5r2t2nvytsokg6r85jw0tn9xbom3i9g017nqgnr0s7r7rv24rcset7bailbbu78jhic5vx1lwy0htzkzmh2vpwq0bnsjr88j03kdpid0gwqau0t5bz20tjhyk68h5u3ksypk4zgd5u9xm9xmx"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 201316392,\n  \"apiErrorMsg\" : \"hqsh1s67d8conhv9gaml3uxs54cjgdd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dce7a98c-b244-4995-81db-73cfdefcb15b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.500339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "47d10487-3dba-4a9a-81cb-98a7173df225",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "qh8ziyvpis2ajbgav"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"depcq0gtr78owrvsbclud7jr1l\",\n  \"country\" : \"Venezuela (Bolivarian Republic of)\",\n  \"country-code\" : \"aaaag\",\n  \"provider-domain\" : \"a5dcddwczcmr91fumrxyypnsp63yl7dbk105plxjui3199i4w8obxdmoaezgtzseu48v4xj7m0ipr5202y7y4ijqt53a2dy4n2q5010wabxijua22ad\",\n  \"city\" : \"South Denny\",\n  \"vpn-domain\" : \"4agowirftcm3lp21vnrgoxy75oj1nliaz33v69fdabmbgdn60lqj3pqh4iywv57i0nt0zkw01kl75r4qy3dbutsm0w31k9juvcmz\",\n  \"is-vpn\" : true,\n  \"as-cidr\" : \"1kwtmn\",\n  \"valid\" : true,\n  \"provider-type\" : \"7631emo9vifd7chwy1r651yruvrmjc04twu9r8s086auiosctrq2s0lkvw3wiqcfqrieuyedaqpafv3ralv14l4uiwu77lunvx54ry48gxdp8vt9g4esz2kg845zlzdlcio9jafpugz2sv23gkajbpgytqufsa2osp73k4htarhv3vr0mg9azthwkyyp4c7kgfe7421\",\n  \"hostname\" : \"Cherri Schaefer\",\n  \"as-age\" : 1445818981,\n  \"continent-code\" : \"coo5ipu6kfy4qx5iows43ppgj0zd0fnn1wfbynfmd0dnk2reqtrx6qdha810ippn9vs7a65if8lgylfkptxdostpjkjtuqnjd7w515jzx7yd2hczlqa2jwgz3ip7du26f49xcsb070pwmi4bv2di33q490uxfx4k9cvncrs6d4m\",\n  \"is-bogon\" : false,\n  \"ip\" : \"bak\",\n  \"as-country-code\" : \"aaaam\",\n  \"provider-description\" : \"Non perspiciatis corrupti atque id. Fugit rerum ipsa officia. Quibusdam aut ipsum voluptatem voluptatem earum ab. Esse neque est doloribus dolorem.\",\n  \"as-country-code3\" : \"l9gp7cc4wm57gzj6lh0t59osin234mlcxg1fb4wbijoz01tunn44762p1m3so66xra7lvnwzv29ju7vai98h\",\n  \"is-v4-mapped\" : false,\n  \"is-isp\" : false,\n  \"as-description\" : \"Dolores laudantium qui. Sed autem voluptatem reiciendis id. Ea natus sunt molestiae excepturi corporis delectus. Odit voluptas vitae perferendis tempora illo ullam.\",\n  \"provider-website\" : \"b2ojimcllqla1kcg7v69hay14qiloh9rjqmu43uk7tgrreq6ozc7nhdu04qrywzdng5nigqxi280hlxyrbhkim6m26kzihx7d34iopyxtq27lmea3b0ezgn4rpzk92akflcbhqgig1aulzixcil3m2adicp5nt4g8f8drsa886vvuevca9qgjdhobsy\",\n  \"is-hosting\" : true,\n  \"as-domains\" : [ \"rjtnz9xcp27dh6zyvre5iiqvus1tvmjthllxbjbrbadoc8n5zru6skz2jiebifrc922vwpykevuvh7r1lb9660txxugdas2ba3hxcbhm9kythye8dx9c\", \"vd89d0wspv2msa5sdablg7gr5owmq\", \"zoeh3wbjzcit7qbihawf1ltcqp9bg6rs2nu22fp5vk3zna7ldcoduby49gdadxyvki7edirtu84soiezlot3xj21xare57lnnrkodoics40wk2y61wqarwhvadi3wvsdxc6tm9e\", \"p45chqlflpu4hqt0db3y6lmamfz2w98nn3k5j26cjqz7pzx3riod6ov56l1qquaba4yt7xc9a2zx1squfuiwfjj9pb0h5w3yt7dt16i9etywkd52dddosv1ifns9xfkw3v3jqmlxea9nngl25r7iejmejr67bol8\", \"e5hih9iz4ubgt5xxonjdaxb51zzfyw43c09gunngfiadstz0iwgjawi73talgdkvv8k0ycqw4lth4tluv1v6sndi5cjd4oohk6\" ],\n  \"host-domain\" : \"9gbd2z3fs1pwtv8tvp75whfnplhi2gi1ii0zxtosvlezfgnpyggqjtls5etzwww9cqdjvdzp9wsl7pe19u2rluiiifunpqkvwrun9nh92pbi7cwljf2hkikx7h3j93l2ppu83r4cocijgt9qxrks6qa18fql823w89mksgpmy12r66tmi7f75aoqqtodip\",\n  \"is-proxy\" : true,\n  \"currency-code\" : \"KES\",\n  \"region\" : \"7c23ompbr07nplv51fcqsfhmg74wd1mbis4avne7n2gvdt\",\n  \"asn\" : \"9wd2uhepl76caoirq7tgo954gz08c01pngfu\",\n  \"country-code3\" : \"5bj2hrqr1m2a8fbpe017d9oufnhowncy4museqiq4v3c2jlonzppggwdcrxc11it07chbazfl6lfzdtsfvzchxfixbbje0sew67je28zqdgvq8tb9e\",\n  \"is-v6\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47d10487-3dba-4a9a-81cb-98a7173df225",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.500155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "as-age" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "as-cidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "as-country-code" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "as-country-code3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "as-description" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "as-domains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-hosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-isp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "provider-description" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "provider-domain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "provider-type" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "provider-website" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpn-domain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "provider-type", "country-code", "hostname", "provider-domain", "city", "provider-website", "ip", "region", "provider-description", "continent-code", "is-hosting", "is-isp", "country-code3", "currency-code", "is-vpn", "is-proxy", "asn", "as-cidr", "as-country-code", "as-country-code3", "as-domains", "as-description", "as-age", "host-domain", "vpn-domain", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "f4b55506-71a5-42af-838a-b7bec829f6ce",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "w2scz24a8edtsj08hhiwsdp48d6xur3k"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1722101990,\n  \"apiErrorMsg\" : \"be9w9z61qudpqp4cpt7qkox2dfohtjzj49ln\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4b55506-71a5-42af-838a-b7bec829f6ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.498623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "dc7bce63-ec25-44f6-9509-1306b41aef97",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "7htu06w1jgmnxw27yezhjr57wokbabfe115zm9gmqt4fyjduw3pegoz34cxxaqijf3ao1xe1e1g"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 820119915,\n  \"apiErrorMsg\" : \"pr206kgqs0dx8a3jqjckxvmu75dphoaf3k06qw1yz882iy28twsuexrz37jw8o2r0xxdthdp3snsw9x115qr59i9ua7qp9kus73hgzf3awlg6pgnq2ra1dlpjbgkiucjf84hnywxiqq2xb64cclk3gpdehe68i6y9ogulhcdd96lhfdebu652hh3n86\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc7bce63-ec25-44f6-9509-1306b41aef97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.498507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "894c8e6c-4c07-4c32-a893-15b86d005980",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "0ynk8zi7r3vuj2jq9u9l5t4fpzxm70le5yld6cibn5bowg2"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1502903530,\n  \"apiErrorMsg\" : \"0qbe5p2d1qtp36cbtow48a507yfnw2ee1idgjcbrd65bgs3x2hhgioq73424g856cdbn6i2p1zr37vqg8oxbiwwi7xz8jypnh5yntdjaklt5fs8b94ox1ynx9co9yz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "894c8e6c-4c07-4c32-a893-15b86d005980",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.498424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "4d561a7f-a30c-49cb-90b5-c5438eb9c628",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "7kc5c1f4t24k7zy3knd3gwsspeqxsoh1m0itvonyyxocmxm2fmpju1dq4g8qyfn4ujr51ma114giy34veln4d6dvn1bp19urc9zty8aw1ns92xwl7m2sypqeq7s0rclmi52d7d08keskfz35jv3lfpa4lr063atwhwo5n5bxkg8d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"l3vt5jmbw7on1xqkvcnv2wgcoqn9wzeu\",\n  \"country\" : \"Uganda\",\n  \"country-code\" : \"kkkkn\",\n  \"city\" : \"Friesenburgh\",\n  \"timezone\" : { },\n  \"ip\" : \"mfp6544nfciuqzlain5fvwacor8krmispcdqa1yu96hyqvy5aiktb8h563kqxy3m2its6dfublocb83zpv6apq5islcle1pxxbyuvmzt89po5n0btqbemvhrojynz09gq4rxpk6d\",\n  \"latitude\" : 4.2811789286022203E307,\n  \"valid\" : true,\n  \"is-v4-mapped\" : true,\n  \"hostname\" : \"Antione Hodkiewicz DDS\",\n  \"continent-code\" : \"u2wxfgoj3tzmv5u2mjl3r3y1\",\n  \"host-domain\" : \"zvfykzwp7ow2zch\",\n  \"currency-code\" : \"NOK\",\n  \"region\" : \"47q7t8328pw5wus9wixdr7v6\",\n  \"is-bogon\" : true,\n  \"country-code3\" : \"3osk4rpvq0cxgb20ixcq3mqeenpg1oixrhrahd34c890tuy1xhdvgwhcaie2u6s4j\",\n  \"is-v6\" : true,\n  \"longitude\" : 6.309188060020626E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d561a7f-a30c-49cb-90b5-c5438eb9c628",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.498326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "country-code", "latitude", "region", "longitude", "continent-code", "ip", "country-code3", "currency-code", "host-domain", "timezone", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "c77bdfe0-2780-4320-97af-c52148ff53ef",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2057694086,\n  \"apiErrorMsg\" : \"oc5b3gh73zlax3luxl1kxuc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c77bdfe0-2780-4320-97af-c52148ff53ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.497738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "bc6cc8cd-eb14-4161-8d8e-3b56437b1361",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1100328989,\n  \"apiErrorMsg\" : \"tre8t0pjslrzzrek5yza93vr8hzaweelapw6h2cao9ceatx8iejetu2yst6f339v0bj2yrp6u3imbrqimgds5a0d15453ex5vaddt2qwqap8f4ph98he0v5y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc6cc8cd-eb14-4161-8d8e-3b56437b1361",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.497677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "de9d2edc-006f-4fdc-8303-a2bf9bda3427",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1911116828,\n  \"apiErrorMsg\" : \"yk83ae7h1zgwla6xjl8j7z43km0hrrj5ekpdv97rng6ztam54qaxjwrsxork9u0htuavk9ekdbmuqhu2ubs8bi3f8v1ijvw9v7p12lxmqu77i0qtwogxto9kh3vyptaz7ujm9gagjoq3bjvgaqmoiw3gass8bmuwpj3jp1vd3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de9d2edc-006f-4fdc-8303-a2bf9bda3427",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.497593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "e94aa872-e3c5-4386-b6e4-a3ebeffd843d",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"seirexywppvwt6xqkpm1l3uauhk7cyq1xhk0u323zldb43oi6k480lpucx8wdfv6is7nt5e1visp8hg97gl\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e94aa872-e3c5-4386-b6e4-a3ebeffd843d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.497529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "3753a148-915b-4f3c-95de-055bc7548e6c",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "s05krknqpyh77nvw1638ub89lnwe2itwsadq92j0pznulm"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 304273139,\n  \"apiErrorMsg\" : \"w20z01hpyxyphikfnla4jp2ta112v2gacd0d0ab68gl2jpsta4jseeex7n549v4ay1ngwkztihqx6lxblnkrna713xp9awa0017v3f545mniqf5air9ol1pzodfym5dg96efaez9vq3k2votg0n4da7i8fjvjtqagivswf7yha\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3753a148-915b-4f3c-95de-055bc7548e6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.497469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "f6b06e8c-16ae-4c93-b189-21bca1647788",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "r03ezyn2bcgl5p7d2m1xm1phfgbhcvc1fdmc8p9juhga001iodnh3kin0hu2skdiwwoczs1we4itxcuokktd4wfs9z9kjcsjqoj"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1737751077,\n  \"apiErrorMsg\" : \"pg657fh0m7sf11en3wt4wl8g5idng92oobi8dp07bzl05kahhbosnrsmje3ec8gvr7uhp7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6b06e8c-16ae-4c93-b189-21bca1647788",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.497383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "ecacd6c7-7dfa-4515-b9e6-2efd5c0334a9",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "0ysmk7a5cg2lococ2i3sjtq9x3msz1ckmj1r4g3fjv8uhd1vf0wydlf0njk1ib3jzjzcln5z3g44ka2eykc7iin0pif59nyss066ymhfve2886s2eq72w7"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 247189490,\n  \"apiErrorMsg\" : \"k6zm0vr8hgbx18zqjq1yrq1519ii0yuzwfpg0rfdauoggfyn9aqspycrnq11tsm9t47h63mw1j3ck2d4i0z2lncekacqc6dm3ovpkj4oq2srzfsipfidlm9m5srx12eidnb0562e8ti6vwwvzk4gv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecacd6c7-7dfa-4515-b9e6-2efd5c0334a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.49729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "efe2c759-af31-423a-848c-10ed675fb9e1",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "cv1ipqxwlo6snefe8iied3qqsuby4pu12wc4qpk27ye6kdciwub1dt6jy0niaayp55t1ipik6uct1foryi7amvu0iabpaao18gdbhmmjm3nitrx2bhm54dkbbt6sc7owzgatexebnz7cdu5j"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is-hijacked\" : false,\n  \"is-spider\" : false,\n  \"is-dshield\" : true,\n  \"is-tor\" : true,\n  \"is-vpn\" : false,\n  \"ip\" : \"otulb3fn8z74l6nvwhoerq2ti5znw38bj6hkz3yqtdq9tnoc766tuhmw3ythou66mcs\",\n  \"is-spyware\" : false,\n  \"blocklists\" : [ \"d4kcyylyqn7l21q9c86a17s91vy4iseih4nh0ey8p6dx4r2caufyqctcdnv8cb1vd1qa\" ],\n  \"is-spam-bot\" : false,\n  \"last-seen\" : 1568351401,\n  \"is-bot\" : false,\n  \"sensors\" : [ {\n    \"blocklist\" : \"qoapd2kowg25920\",\n    \"description\" : \"Cum culpa quaerat in sint voluptas. Occaecati sint maiores non mollitia autem non fugiat. Ab ut facere rerum fugit occaecati.\",\n    \"id\" : 763249381\n  }, {\n    \"blocklist\" : \"0a16wq0eutubmsntmpju5foj97bz8f9abt31uz85df34x6zh444x9flsb3tztywm84duen8g66lyeoy8g80dq49s4f\",\n    \"description\" : \"Sapiente doloremque ipsum doloribus facilis aut eum. Illo voluptate laudantium voluptate. Vitae voluptatem ipsam nobis est nulla.\",\n    \"id\" : 1690535344\n  } ],\n  \"list-count\" : 1562519611,\n  \"cidr\" : \"c9wbmkk5v9ba721s8t5xsviqkbwk5vvm2ho3qv9p85mg5dx9thmryxm\",\n  \"is-listed\" : true,\n  \"is-malware\" : false,\n  \"is-proxy\" : false,\n  \"is-exploit-bot\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efe2c759-af31-423a-848c-10ed675fb9e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.497102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklist categories this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "cidr" : {
                "description" : "The CIDR address for this listing (only set if the IP is listed)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
                "type" : "boolean"
              },
              "is-dshield" : {
                "description" : "IP has been flagged as a significant attack source by DShield (dshield.org)",
                "type" : "boolean"
              },
              "is-exploit-bot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "is-hijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "is-listed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "is-malware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "is-spam-bot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "is-spider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "is-spyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "is-tor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "last-seen" : {
                "description" : "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
                "format" : "int32",
                "type" : "integer"
              },
              "list-count" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which specific sensors detected the IP",
                "items" : {
                  "$ref" : "#/components/schemas/BlocklistSensor"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "is-bot", "is-exploit-bot", "is-malware", "is-spider", "is-dshield", "list-count", "is-proxy", "is-hijacked", "is-tor", "is-spyware", "is-spam-bot", "is-listed", "is-vpn", "last-seen", "blocklists", "sensors", "cidr" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "e3a3b349-3644-4fba-9570-0efe23893ad5",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1627583037,\n  \"apiErrorMsg\" : \"uhvqi1q121zw67ixy0wdc1v70vnawmwqy73p4496f033w31j19zk0alrxvqji0h0h1coaorwitopcswvgkja2ho3011r01uzpr1xljffxim8lnelihdby37nzyrr5yam2oqjooywa85e7zkicw26prj68epvl6bi69r6zwonjihmvo6pfw9hatc595lnhd2agqk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3a3b349-3644-4fba-9570-0efe23893ad5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.49614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "bfa8c9af-7ce8-4c9f-9f57-318ca0005e78",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 918869189,\n  \"apiErrorMsg\" : \"lywib3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfa8c9af-7ce8-4c9f-9f57-318ca0005e78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.496079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "9c025505-3df8-43fc-98ed-77a0be5dfd68",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1839260765,\n  \"apiErrorMsg\" : \"aoctxb6ijwl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c025505-3df8-43fc-98ed-77a0be5dfd68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.496023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "7bfc640c-3e1d-419e-8566-337dcd193233",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"nrzt202cjp7fzdd2pz5hwtqvr965e5q9ef9wsv3iaud62o8apkalonm38nsy32qv3s21wqrilhcfsbszhx5vpa4\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bfc640c-3e1d-419e-8566-337dcd193233",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "39ebf30e-49e5-48f3-89f8-105d79d91bdb",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1977425566,\n  \"apiErrorMsg\" : \"0mu9vlx7rpkhqlehzfo2xuhd4uuy6opn6dk4i3lfnbigb4ky7h8pnq23fvpx4fv7xbgw4e59swrhcz7au44nurlhbhcx1rw85b8ia05o4sy9i6zlka3d4w7vzg8l9dkhqh2wb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39ebf30e-49e5-48f3-89f8-105d79d91bdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "cfc17569-d2af-40ce-b066-fc855347f5ea",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 923762665,\n  \"apiErrorMsg\" : \"1ztril6ontqlnlzhw3d3ni174s0zc3i2otrwnb4l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfc17569-d2af-40ce-b066-fc855347f5ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "f2740256-cf65-487a-97de-2a76cc252158",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1442771649,\n  \"apiErrorMsg\" : \"y0i77ur1g1978teljru8f13aokgcz139g0qq35vtkophi8ja3ppx0c277vf6aia1iwvm5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2740256-cf65-487a-97de-2a76cc252158",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "d6d95212-e247-4834-a18d-e0f875a7ba3a",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"js0ehli32\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6d95212-e247-4834-a18d-e0f875a7ba3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.49574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "730f1361-172e-403a-898b-a1219483a773",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1105669311,\n  \"apiErrorMsg\" : \"hfd4pd5xoibm1viors44dcs1jjosoe1esxqj2aswozyiba3irspu23p6dep89s0es5c2xxm0d9pw8v9mww8mli0uq19gs2tr8221nxyh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "730f1361-172e-403a-898b-a1219483a773",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "34f96cbf-d5bb-47c4-9146-b4b57d2509e5",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 234202549,\n  \"apiErrorMsg\" : \"lxd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34f96cbf-d5bb-47c4-9146-b4b57d2509e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "205f8a19-2abf-4b5a-8f2e-df9c47956d6f",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 13563819,\n  \"apiErrorMsg\" : \"aew76pla5al4ea7wlgi21dfcfppmxs8p0fq8xo4hmy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "205f8a19-2abf-4b5a-8f2e-df9c47956d6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "1feece45-e8d0-40f3-b30d-3aa6df00cbbb",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"87rmju62245bt6d8h8k2qkqxwmwiemyeaqyqp9rho3psue9h5qd0fe3bhja8qff12jyoa2h01e6wys83dkxmorzr66sv7g1uv7i6h\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1feece45-e8d0-40f3-b30d-3aa6df00cbbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "05fa5320-93a6-4528-a2ea-82ddfff1d412",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1968795319,\n  \"apiErrorMsg\" : \"rawwxxao3br1tjfu0x6dyfl8nmksnl9xxgauu1bsgrn2mvtndk2rzwi9855qn6xkl6q59vtjqgexaqh0shrtib769uw8lj6zo0hq8pxrqrdfv2nrdhlatxi7tbkjdbmgga3thslhjb307of6hn0zy6p48rpfz8r5tk7xacvaugl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05fa5320-93a6-4528-a2ea-82ddfff1d412",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "b2dcf518-3edd-4755-9761-6735eb196446",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1028956912,\n  \"apiErrorMsg\" : \"0ytofwbfy850ktmyptuh7pv9h2yfw0g6yc3fnbk2kjih8r8ye3d2s4d11ixp2hca3bwj2psk5bctshz0n7q2itd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2dcf518-3edd-4755-9761-6735eb196446",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "c9433a80-2cca-4ccd-bdec-59ad52ee0de3",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1509528938,\n  \"apiErrorMsg\" : \"c6kq5buulfgndztek9l4w8p9fjn7t9pier5c4lvqklrlqu1f2ljrh5y858aqa3sjff1g1b90i6dz5l4sp2l69wqgkfdbn9jdli7rm94y37nnh9kp8wc1cd1wx8ehk49taocszecubxlfvy2ygns4xjf5ivtskvwj5t3j52l5zehzuru6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9433a80-2cca-4ccd-bdec-59ad52ee0de3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.49535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "074bd515-58d5-40ef-8dac-525ea6ecb461",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"6wxwa9qy6rc27lh21218d59vbpbidbq136b1jpb4nvtzbcoetwy2frs5i832drovm1stvm7fyb9o2pfbovcsh72u79tr7a28rf8f13qnc11743ry41j7ky4pf6oev9leibz3ddhzxj6n5kc3zgzq38xc59yjjzovfdhiwngl\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "074bd515-58d5-40ef-8dac-525ea6ecb461",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "ea85e39f-2b7f-4a9c-89c8-502bd524ebfc",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "4igw8qjzyfzri612itwuej1vnwdfc1k2bo7ihx1822k2serweq3t8yr"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 480391596,\n  \"apiErrorMsg\" : \"qwue7ny90sjf55feeg5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea85e39f-2b7f-4a9c-89c8-502bd524ebfc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "688bee1e-93b8-42d8-80a7-e635f5db3edc",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "mp1cz29bf3h75nkbydykrd5pms3gfe0ugtxqtyx7uuwlurypmglgnozho"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1912994945,\n  \"apiErrorMsg\" : \"mj3pd8agm7h9y9qtf3k3d50peetor1np4p0c8bcjt4o8u7qhxs49fyaocrajoh32zq9n2eoz66gd79q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "688bee1e-93b8-42d8-80a7-e635f5db3edc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "76f8bb18-56b0-4f59-b561-1e9984e8974d",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "tvuz1hth173rjnypkw0f1zjqukof6jiy36r7s1uyr8t2webarx7j9x3lym85lhm4p28qfy71lgz5atoud1iq4hp9ww9pzapm78j8i5fawhxw09agj83h0aw4tygsvl65k2luhsik4tebktvx0uctvcxuow1dvn6x05qu875sgmg7xyxcdjuvfoq9ah78iv"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 954911752,\n  \"apiErrorMsg\" : \"cuu50foljzk8hrzrhvnw6fyi5kpag1cc7u44aj9snjuye7f8fy50v80bffeelu4vptfu625v3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76f8bb18-56b0-4f59-b561-1e9984e8974d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.495079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "ed7aa7c5-4344-43e0-8be2-795a9b29fb53",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "8532lndeg2esmsd269xd91ofckxmpobm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"list-host\" : \"mdgy1158hjaxxgvrr4sf6acwzv88v1ombjw854s4pcmfse434wfi0l9lrmcxpdclabboqwtfjmj5aeor2i22a1v6s42prbe23odtestpjwicyil66\",\n    \"list-rating\" : 1628177911,\n    \"response-time\" : 1947211922,\n    \"is-listed\" : true,\n    \"return-code\" : \"95j51s2r57q6l6o6582k1c8es1hp8tf9mns3frb5cj3s7fnn1nmocx2zkeo3exedsrl01jemuyl2efu77dh6el70df6qvmyy4c2njdzefvw32m8b5agspmxfmhim3k3qte2wlsjx6mvob4xsrm2ii23fsr9hart4026xz6czrzjk945c02h569pcm97csiwc4m6rl54c\",\n    \"list-name\" : \"Gracie Predovic\",\n    \"txt-record\" : \"gccga1g7r94bfc9d411ej0uw07hvgjamcqfta4k6l1e3np8eidfsv2hn7bmhdi7q91xifjnckmu6qymffwxubeplu0biy07mr5c1i5cmoap0ak\"\n  }, {\n    \"list-host\" : \"7178whnf38vk57wybey5ax4miaqtn09z795rg11v5wpnolsmwqq61twjo8kwh9gud0mdunq2xdvyeik2rr\",\n    \"list-rating\" : 367131478,\n    \"response-time\" : 1775782082,\n    \"is-listed\" : true,\n    \"return-code\" : \"ts14wxwf2xy5p2f7m6bhjm3z3g8ayvcuznumn8raihbqg6drj7xfggw6tttwqnu6w298vuyef188fvt98sqzysm4admsjabb8c146subg5vook9xgb322lftxz0cqbgsvlgvae1qi20247nztgf4rka66nq8w4806pzsg8xlorhxze27zdrwk585\",\n    \"list-name\" : \"Sandy Reichert\",\n    \"txt-record\" : \"451woz\"\n  }, {\n    \"list-host\" : \"r8yh2b7sdyyzojo7kuo9g9sg30cnkq326yvcvp20jdrglqyc2heof68grolkydhogk64h6tl1fzz9u5jamupa4vrlfump6ed2wqv5jgzo66w4a9n3cvg\",\n    \"list-rating\" : 929620317,\n    \"response-time\" : 592000894,\n    \"is-listed\" : true,\n    \"return-code\" : \"3ubv9pme6bo8utbf73jjpc36m8eg1bdyn6iz702rvvwwtz4941omcper71\",\n    \"list-name\" : \"Omar Johnson\",\n    \"txt-record\" : \"7u4urtxsl159rmcaf1nq6gz05gow48yh76jvxsl2px7v1d7fbfa13z38e9nrkpjql05e6zk84n5saqv9zyjxskmmobh\"\n  }, {\n    \"list-host\" : \"wh4aj7apc63xf445k51ukgnathvwaliqirumor6a9evzidmv1vajviuowukgq8zpj675zdvdjli8ptvx8tje7oljiom1ce3bdw1wot4ta7we3wgk5vwxbbqsymxgw4\",\n    \"list-rating\" : 1287686674,\n    \"response-time\" : 155963891,\n    \"is-listed\" : false,\n    \"return-code\" : \"vhubgj85uu271c4575nh6fk1m8idwbnijogs4ym1zfuz2jyfm5q5t0\",\n    \"list-name\" : \"Luis Boehm DDS\",\n    \"txt-record\" : \"9j5pn\"\n  }, {\n    \"list-host\" : \"th8qf\",\n    \"list-rating\" : 946662088,\n    \"response-time\" : 1970741241,\n    \"is-listed\" : true,\n    \"return-code\" : \"qpirfx16yxci3dkrx9ess1siocio967jv74iq5ji3yk8prxyzpdjju81h8ht6xp6kn05ec6xdacqz4clv13a6vvyd52dpi2rskibpwhokla88p90ltaje\",\n    \"list-name\" : \"Mr. Daniele Marks\",\n    \"txt-record\" : \"9vnumuudl1u1nnckaqhpzneqtqim3v7oy3x6uiol775a0dcdx99mqxhgo05natf0gu8odoq2c9a0jzxsf8habkriradxsfmg\"\n  }, {\n    \"list-host\" : \"tv36eyzggfr7co418f890mcuavzpzvnkum3syrcvsbu3f7gk7rdpuld7ygixpfcz2t9ifq3648b0od34xmwaex600nuw9ol494rgkszb\",\n    \"list-rating\" : 249064607,\n    \"response-time\" : 581548129,\n    \"is-listed\" : true,\n    \"return-code\" : \"mk7knlizmb8quoi\",\n    \"list-name\" : \"Darrel Grimes II\",\n    \"txt-record\" : \"kdbbehw1ztss15lek9cws6vfxjd7zxscu72p5eq679jlqtstsou8okvonrjlelk57ttwcpkvfqat81v251q405ojb1w0xtwil26ycqqls3xow7nfw7vvli38bqzb2aydnf0g4t3a3o5lp5oqe79j90jf5dsr0dm056w5lpw4fyd1ghqyls9tsp\"\n  } ],\n  \"host\" : \"yob5rthoh13kzuai5l3l3i9g4zydgkovi6l4ddo9brfoo2utih5leb3v3evcfwvrd8x2iomc5v7s3em31v9enaazlgy95yxfso93cfbhcc38ebi7pxlg2qupt2c5e7hc7gz352nzf02kq4jdjxu374ro4cqneakxxh4u3nvjauhk3u8fmw4jaf6i2ybupzs43ck\",\n  \"list-count\" : 288055004,\n  \"is-listed\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed7aa7c5-4344-43e0-8be2-795a9b29fb53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.494986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "is-listed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "list-count" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "is-listed", "lists", "list-count", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "374bab00-bd49-4308-9551-3942cce5c0f2",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "h60ks06aqqeu5v8gv9cudeyljw6plfy4xdj93tx12ls8hlsszb8yr0j6pvzeqff4vkh59u15bg141obwyw06bivrb1ifuv0hkfdxmkfc29ef5p3vzfpxnmqgoa2knmqmu38o671cbcjg9oio703zfl1ds"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2021205428,\n  \"apiErrorMsg\" : \"aa41az6je1sxasgureywyst5ddop8yu5azn05ejywqghgsjwa380lrhnwq27gjmvl0x5i3ao6t8vomejfiktw5ojane857ckrtqq0j23oltk3drj8a0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "374bab00-bd49-4308-9551-3942cce5c0f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.494246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "79ddc544-1609-4fa4-a678-7a7db6ef827b",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "fi70usktlmfzldwr9qcv5ph8od8e5w1qujg5yi7nycl47w1221slw"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1025344114,\n  \"apiErrorMsg\" : \"yx301djygm4u6lkvx4qu8taltszaoym3yyolcpfjkwzdvhd22kyk2dh3igy1bdmdsekqp2f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79ddc544-1609-4fa4-a678-7a7db6ef827b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.494162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "19fbba74-f782-441e-bddf-7fdfc77a8a2c",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "y4r22hejdmjm5x59oz3vxxia8o2vdsjd5y6a37znm1yq0g3rwyw0e52i7ivqcg25vuel4ei4znu2oemr95wqk182jycgph6ezyir0zg3gqwv7vyyy2pyjc0mhk3cg3swi85"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 7392111,\n  \"apiErrorMsg\" : \"ary0238r6yx5tseqyzesvvmh19rif8fu5v9ie33x9hlzthnycd4yi2ig3wsijpjh3p0j00qoc5kl9n7xyr99d2jm3fdo397uevh11l4y6tg5kux4wkq1cg784zixmwtrobz6ga3n2ev165nay068lgf36jslahr60dqauyddiioxc6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19fbba74-f782-441e-bddf-7fdfc77a8a2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.494083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "43416b79-6a50-4083-a4b0-8dbbb9119dbb",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "m1q9rjc13pios1imo0yw710snhzsrogqowom3mdgh2ko1gd0y1ch1fg2mmq3k8gq0k6w6wy2yo8yi7qyxlfxhufea3n6vfrgydzbnxkcb98zb689wsn0tr43ogrw3kl93rcrw1paj3gtrxwxr5m67szmz8drx6awu5d03hryiil1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Nicaragua\",\n  \"country-code\" : \"nnnnl\",\n  \"is-ported\" : false,\n  \"mnc\" : \"gyrqp55fw87hwjmx7nxa0yzoj29mu9vr0b9r0jji4999b1z8u5d1rxbkccoe0gdrzzkes5mvv93c5rev9thx127oy4wal2qpn6a\",\n  \"number-type\" : \"0xqbpopzhj4fhkfsaw4wi36suuhpcdnn\",\n  \"international-number\" : \"i7r200qxzsrk2z3dwm4lf\",\n  \"origin-network\" : \"23zgy1hvunbhmrdzbh9r51yhgfspescnoqpv05g1ct4eyg3anky25642de3fj33l6o7ok0pey3qqkywl\",\n  \"roaming-country-code\" : \"cccch\",\n  \"imsi\" : \"ufu49o80dd2znz7l3e6mxnlnzo66xwhdoi3jfh0ow7lmo6puzc2pf3bezhh97yjgz\",\n  \"local-number\" : \"sp5ar3xof17dnd5fp34h9qtmkbvcbo03kknh63xnt2pq19izk9gkyl2hxwfc7yctvpmtli1qy9c\",\n  \"mcc\" : \"bobrbqcvh1u69s86tkb5ncxwfnjjgw2onm1f69rfn49go00uge47np4oohp48ciny63r0w75f9wmre986ontopco9v68ilh1iwv0otenii3kxqrgs36vgjvmnzs0i1i7b8joy2gz0224zotir6ba14yvpg5q2xupvrlfq8uf8\",\n  \"hlr-status\" : \"3ss1ydzvb70f3w5urr49kyn6u52xj707o3zyl8n7a2dt61l7kkfu6pepacbe1ls6ye6cs2uesl0hleuwyofaycnp3aoi9injn396lcmpx7fnrggej6xkelqnpcanj1h6bkn2lhd3di2rp1jk1u0qi2\",\n  \"hlr-valid\" : false,\n  \"current-network\" : \"lzpx4k156ggng8sabtnuyllcoee5e5q4nonpml5adg1sfov99vtiq3ds084yrgypdvqjptn62m5gg5ha9wny93e6wzju\",\n  \"msin\" : \"zz3ce7mgr9hgwgcqrj61jggbkeejmoddxdt33hzh7r4llmki2h10y6px2q2254icn4vm4pgpkbzjzx6d8nacbbb3g7igwfewmmsdn8uvf2b3supkphhrwigzdxo97b5bax2wzg0g3g0fm4mflmuo008y1odyatczmvr4n954dhqdn435\",\n  \"is-roaming\" : false,\n  \"location\" : \"k5netfjuy7\",\n  \"currency-code\" : \"ISK\",\n  \"msc\" : \"hqg76yyy6ncgdqwy1utmgmbomipeopunce0athvwuuff2rib7zlke3h6zqmt3i482hywej4zmssg7uhbvltg7jyc314gez9e88awtwt4ef0yrxu4bdtvxsdwyp32jiqc9y7c6yj9n7bax1fnuyp92za4ysy4kkty1f98srkshq0jey2x10\",\n  \"international-calling-code\" : \"mn4hy9wphegx\",\n  \"country-code3\" : \"8m8f88l9tokfv95v4h1oz8408f4n8zereqamdoakef8hmfafaifhno4mcl95v4li002l1haqrawd2by44ri48bxd7p8f9s728cxoxctf4xq2rsyt\",\n  \"is-mobile\" : true,\n  \"number-valid\" : true,\n  \"ported-network\" : \"7ej1mgabrnbsz04iveczy648n0l3ldii2i6wgrzkb54twisvmhg47rafyihfw9661mxstak3d80c55en3r51h6k27neot5vbp61eia3vcfb2el7aejnp9sp2cj5sn4ophfhuxb7uwpbn3kpgoth1049x1qqyr7pk17rv7x83mftu3tpx0ugllswgp1ww6am4y08ez7fe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43416b79-6a50-4083-a4b0-8dbbb9119dbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.493985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "current-network" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlr-status" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlr-valid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "is-ported" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "is-roaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "number-type" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "origin-network" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "ported-network" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roaming-country-code" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "international-calling-code", "mnc", "number-type", "hlr-valid", "hlr-status", "ported-network", "imsi", "mcc", "international-number", "local-number", "country-code", "is-ported", "msin", "location", "origin-network", "is-mobile", "is-roaming", "country", "country-code3", "currency-code", "roaming-country-code", "msc", "current-network" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "d5801d9f-543b-4523-acc1-d969cec9b117",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "6xqn7k0xpwx5ts2rngvy3smlpc3g2nhgsr64q7nri3"
        },
        "longitude" : {
          "equalTo" : "6hc5ujd1cqqej8yorfw7vjtdpg717n6f2glwq17tmucu21rojei4ubxs9tcpb6snfkdw9oenxl5dgsnz1joo1yw3kha4lt2j0s3degmo1k2bvs9qyqz4avyafl3dxgthe40sfgre75bbhahb94zzfvo5h09mbj"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1074183518,\n  \"apiErrorMsg\" : \"w27tez7qhquvll9ejeytxdvjdl93n8j0pm2mbr5yzgodrud5jpjwy953iu3kwpmphgugy3esmi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5801d9f-543b-4523-acc1-d969cec9b117",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.493345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "0ea2c8ee-b2dc-414c-8158-5b6093cfd271",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "vl2oefmxbiuo3mmstgg828n088s9gw0myivmhi3dg0w2pjjcoafppirl7337ckum3etn8lmqc9kppv3c40c0et0bd7e4heicb4r0xqxnbti870k2pjswup9jj0wzdm8"
        },
        "longitude" : {
          "equalTo" : "nca4y8n9jcx53eznwllpbjwe6verkhxgxrzu0w4i7vbjdigx8c7y6efuae9sbm87gk6vgn8ubvhjapt"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1238211639,\n  \"apiErrorMsg\" : \"hxdhhde8yb9cqcrct1v94pontzvesnvcms9tg0nonxh5epipat5w12fuql64uhliwezkcxii93450ckw5ubn9f34r0ywgm04inqhknjd9l524ply70x4znitzpmxuc43cn3y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ea2c8ee-b2dc-414c-8158-5b6093cfd271",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.493244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "8768dbe5-d9bf-4670-a468-bbb48f1d5040",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "61uhnnata9gwzxffge59zk7f21bgzwvptaaz2210ju01f82lqffcle6v034zgawt8d44b4czw63uiin8vd2w7xvghmycihigniswj0pwid5skce4pa1hpfrvpatjyeulu0n3hr2ax2ml2suj5fovsy64cu1vfofkthz9irf34b"
        },
        "longitude" : {
          "equalTo" : "9ubras8xh0fpbnahjqxe"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1094617073,\n  \"apiErrorMsg\" : \"jnq1c33lqd9nnj0cxvdbtqdkwjyjgt7eih3a15mflh04l9rth98z8ldxs4eivf6ss4p5fy5xy09ev5u3369pwv2pzqlgc6udn8fftz23ghod8z9gfa1dk9c49zc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8768dbe5-d9bf-4670-a468-bbb48f1d5040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.493142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "4bb60bdb-e2e6-4cf3-99d1-f67ffc59be12",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "8hbhmfg7o5ogt2v7eovd5hf0pzo4ygw4eelt3kqatrlsp5ttp8lpzfi8zed78bcanmuurlrtn52biy8j1d6o2guysrre83xpbod0jsba4mvn7c569mwdfpawf5qwri53l52imfhrtq28ldf07behygw8co7ip5yn"
        },
        "longitude" : {
          "equalTo" : "3uo0h5d9a4175tlutkps8rvjdniardgfzme5b5c1yn0pk9nk33zelshjkba2x16owwd38kh759mweyl625o0yvuvw0bg8b0j4glsro8qr9i370"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"sn7lqeugf2h3cipx8let2us53ohxgq3egxley92plqv23076s29zs8k2ltahk70zxq2lyg4qyvgh4ibj4xookk8v\",\n  \"country\" : \"Sweden\",\n  \"country-code\" : \"rrrru\",\n  \"address\" : \"f8h25og1y2ee63h8lbajnn345sy\",\n  \"city\" : \"Jewelbury\",\n  \"timezone\" : { },\n  \"latitude\" : 1.5109826792108433E308,\n  \"address-components\" : { },\n  \"postal-code\" : \"38484\",\n  \"found\" : false,\n  \"postal-address\" : \"4tpg422n90\",\n  \"location-tags\" : [ \"mwpkfdv8a9c25d1rm025hs6jsgcsg2kuui3jc50i3kbmu2kbl9qu0lereukky7o9dtm3ifka8x9x28bqx0l6mx3cer8g4cve79ihu63glwk8kdz1aenfg06a9lgpz2l4wirxbyrdtphho4j346\", \"m1e9fft5fojb5kz9st4011pu45u1fmv225tp0jem284twywjheq41exmq2x4ip8wdt37r7mhywbehf3t04qgkoiq81of7u3j9q920hcz2\", \"7hw05ew6wswn9kfdog7ndq2llws1k17ug91uemu3kba7v6dqq63v4hi6k\", \"vgguznqij19b5anq0ifbiyc750mvzssudplfzegsvbsz1se3ek\", \"lhxbldvb06hhs7lj4ya5sz86zvfnxqdfs64n3nixoh3g31iroh0cg1e7huh7zvj9u7yddke7alqbsmn829zuykdiicmls5cmlo8k4aygcapo\", \"5zch1spz4dln105w19xwr09vbuvd0botw9wt1itwhvkmqpc687rr5yb1stewl07e83up5ly01o53g88jjvmgsnc9pcj2dex6be9c5hrxwaxsblqcyqgvqj3g\" ],\n  \"location-type\" : \"vfcfk4zjjj0tn7szj0jwxs6byggzd9lvweqexoknfp2wxmvt4oxtwy8w967bd5tom1g6a2b2fpftgx7frrhspdt247ai4ks0gogewzn0s99j4gzpkwhy812t10pgak8pxkluif\",\n  \"state\" : \"Nevada\",\n  \"currency-code\" : \"DOP\",\n  \"country-code3\" : \"oi8ymt6erdthc9cjgek46vagqpkkg8h6q1m3k4k8opcm72v7bgsf53shoh8jzv\",\n  \"longitude\" : 2.251639012011849E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bb60bdb-e2e6-4cf3-99d1-f67ffc59be12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.493026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The complete address using comma-separated values",
                "type" : "string"
              },
              "address-components" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "location-tags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "location-type" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postal-address" : {
                "description" : "The formatted address using local standards suitable for printing on an envelope",
                "type" : "string"
              },
              "postal-code" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "region-code" : {
                "description" : "The ISO 3166-2 region code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "country-code", "postal-code", "state", "address-components", "country-code3", "currency-code", "location-type", "location-tags", "latitude", "longitude", "timezone", "region-code", "postal-address" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "45be4a72-e485-4eb1-bb54-2a1b678b6749",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1616918998,\n  \"apiErrorMsg\" : \"uwfkb2h65hk3qo9lkp3bbb0yml68ud6h215hkouqqep1eeuz816ymkyn3qlrd68fw4j0birvhhyhumbrxgm6ak2wtdqnlu1u097xgd3xn84dwjwtxsku6n7bv41cvp0cx8i1fkerb5phaauhhfubu4amb1yvq4u3xh8zdluv7ev0jm1jxrx0uc6n7j1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45be4a72-e485-4eb1-bb54-2a1b678b6749",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.492449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "a8f6acdf-3dd2-4e35-b2be-261a8dde7727",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1753387971,\n  \"apiErrorMsg\" : \"4cgh1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8f6acdf-3dd2-4e35-b2be-261a8dde7727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.492389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "bf57938e-fcbf-4b5b-9b15-25ad161de243",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 528424327,\n  \"apiErrorMsg\" : \"hb1w7l32bdpwdgxp65ex33yp1q8iuo2igfma9fvnfij8q8zyklb39mt6kvwjm0i72nri56xl8rm8l5twbnpnrqfgojbj6vazr70y2ipu2ey0v7pz0i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf57938e-fcbf-4b5b-9b15-25ad161de243",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.492329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "3cd3649e-18c6-4fbb-858d-412b5d1ff59b",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 1950664881,\n  \"locations\" : [ {\n    \"region-code\" : \"dkc244o88avime8fsecj8t7rea0u2zvc4tzkau3pw96j7re9w769mlc3f2iqn4hriaw3ogrdkdbvakbfq\",\n    \"country\" : \"Togo\",\n    \"country-code\" : \"ddddj\",\n    \"address\" : \"afjovxlkboewqzk7m3rq7kl1d7zo81a5i0j33yzfi7734hsfwo602o35wefinjrby07hef18r7i1y0094md7ibm6vwadtg3gz1xqh4v59o2z4jg67522sobcahp3kfxrtsfdyicmpl9pb4xg\",\n    \"city\" : \"West Benjaminmouth\",\n    \"timezone\" : { },\n    \"latitude\" : 1.758841477097243E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"79565-7792\",\n    \"postal-address\" : \"n4woukj0tmv61v89l88p51i76sww2f67k\",\n    \"location-tags\" : [ \"iu6sbmspxmaokwrampgrsuex\", \"suqqqbb6mg0nxkxltlee1eaoul2m3mxcfdtj04u2m5kzjrsd648vacoiwgc5xqqeysu4ng7gfsqty7hutsh66ao2kmijmrdad74qmip20ry4qe5e1z17te964sk079v0ofj81ncq70zdopo2f8\", \"l8joww4dob846g7w11y2slpfa7ho60yltrdgicet4ai77zoiw6ydvdzwchv2am3g943qiwyzdhah7q9wigwz2m6t9tlxzz5htbt5kupg73y9qt1ctz3htzhu\", \"zttatrf2ivb9tuod2mita0dzrz\", \"5cc2s6ee5j8zw73idx969g1zkois8pek1bbpqoqipbt0sdysrfv7q05jmdhxgja865gm7vzejizn8mszo2v0brkcdc07xvmrlpxk\" ],\n    \"location-type\" : \"z47biehzphllwmk5glmirpvfsui2ghhxqih\",\n    \"state\" : \"Illinois\",\n    \"currency-code\" : \"XCD\",\n    \"country-code3\" : \"5i6e2jyuxululek5blf7j2vkhiixhrtsoz5fvtj4v3h4kl7eklon7h3h49xljmb2b4hcce6xhesf4jd720k2iohnejcch5l32lq9x6uxodt8heto6lnfndwy3hsvanot02k7j8w8cec2ngjoogdau1atniftfig5ugz\",\n    \"longitude\" : 5.961189717846238E307\n  }, {\n    \"region-code\" : \"z56ysukwn8ub034y82kp7ad6jadnjwb5cacu70tdd2x6nl2hhybhvffa4v4sfyvovux4694667dups5833iiy2gsqhl3jf68gtssma0hy47sk4i71g9r3nrqx6fam766nmx22b0nh5xqo0ttjbm4op6h5piz1td1tb\",\n    \"country\" : \"Niger\",\n    \"country-code\" : \"llllb\",\n    \"address\" : \"5c79xr5urimx8mzpdelxf5ouz999ywa83hnozza7fbwj43roekdeoowy2tob6jlpnlt4lk27jj9fx2zrvyeh2vsgw256cjvsee58hdg62iqh337qh5vjy9hqn12b5eygp3s1aw1d61a4hqvl9owr4l4e8pl5tir3yph6y3h3i8pgnry9hrin78ra8bq\",\n    \"city\" : \"New Vickiton\",\n    \"timezone\" : { },\n    \"latitude\" : 1.3234649746819039E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"54400\",\n    \"postal-address\" : \"huecw8ddcfqyaomu706m4lj09sb9uaii06iyvtmv8ynejphwbvt35j5vz97b1k7c3xdk6i2vhx0o8ogzc\",\n    \"location-tags\" : [ \"apmiub49gpdywycdy1g7nxcm33pyvthiu4x80tsn8ebj3oms3gtsgef4npsy4ms8addxie7xw2c0k133x4lrsvirwd2opxeabd22hylzz2u1629wvs4jz\", \"rqptnernh4hqx8n7ku9ctls7\", \"yj39rr7pet4r0hrfo7kn9wzo0er11d967vrxbbh713tpxrn1pappk4m8oxidhqm5ui23hsiya8vziofm6tjsfrancynu33632jo8ui3ez0wpiaj0qcvkegp9yfupmr4yspp7d8cjeg255188f4vf2w8tc5ftbrlkkqxcqr\", \"zn1z969f0sd42q55isgz6tt2yh70mr0fds05igcmtw1laevy1mqkupozxoba6umtabzmab7tanm8fizlunj5bjm25velx981jobwq9c534ovwg8t0k6hjb24grwpayiazqfgaku918wt7fgi7hwiodu4i4jay3xlrij69vkefut6mzd1sdtyzyly9d\", \"j9art6pmvj6pwkn4jognro68hrrocqr8t9kj5lio8gxecw3ij93mg7wpl04fmi0j4st3oo\", \"sokemqnbo6bmx8dl0rrrdb9d22kcgzxnltfmucize3zh2udb126ljn\", \"475do8ndyuhpomkghjuxvt7wh763ivjxmppq13c5d0x5rfvivznhhxgogeg91om5xkc5cajdmw21485ms6\" ],\n    \"location-type\" : \"i83nuprbv46rd12m5eop86670q9c9iq5yz0lyl3ay8k4rpaj92f9m8fl5gbfu0e1gx2reaqh7xz1\",\n    \"state\" : \"New Mexico\",\n    \"currency-code\" : \"XBA\",\n    \"country-code3\" : \"rwkaq2kkttn047nc553dpyr3nws2383wc4kisolwn7ldow7yvxi3mzi8bke3bvxk5u5t85jwfiwar50b\",\n    \"longitude\" : 8.467130990270602E307\n  }, {\n    \"region-code\" : \"1mlnfjuewvws3razmlgblds0rpd\",\n    \"country\" : \"Somalia\",\n    \"country-code\" : \"sssst\",\n    \"address\" : \"or8yefghoh0ew0d6ahlbgzu3qwrcvg7y5l749ckhqnyb4lsb2yv95cepdz5rog7z6bmqoq1n\",\n    \"city\" : \"Roweside\",\n    \"timezone\" : { },\n    \"latitude\" : 5.344326258109777E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"59820\",\n    \"postal-address\" : \"1rgffqt0d8z33jpaypicfd2ale5ndpugjouqm6nd43of3s37geagvdx2htcr2ghmnm9kvy3xqab8vi0f6y92fmzdiochh6xosddj6e1i7zktax0i5t4pfyl1ossy13ltcy2th54ar6j30t2kvw1r47rdz04avvj6u4pm9x97\",\n    \"location-tags\" : [ \"g2vjf\", \"gr9r8yk73at6zncheggphd0934e28xqmm1r5naduxdj9kxnjqwd7hpt9hkap4w0dgzs4pbfj8k9e89d8kxbdx7tkic2tyadpvlr9ho66l1aqoa04kpdujpk4vzp6af3e2ntsp6mzr3vg5\", \"593lcldk1s733qdvh92ww3h3xefd3uy1zu2vhn8qojkbv9x3jrtmtt7mwdwg4k4m2eyugvdjhiamu04w42ivmrj6k9t76zfcnlui9cyz9h7noswdtmvvcwnwcz1u1ub2pfrcsauzbnxd1jjcmfmjh92klfymt2am4sl6lmyvwus2hltzagftntthnxqpyeuxe\", \"z6n688xxr11gsxqmn66evncu3o7e7beihoudbyc4br6mui2qhrgo6kslu8rn9\", \"8ek57sftpws52n5an7ndfrtdk4hj860c8x50016k5o21naf8mgsft6zue06r1wbkbhu333zke7qzgskovgb7bptqr7qrca4t79wuu341g8rt1w2ynjtu\" ],\n    \"location-type\" : \"zkyhfwf2m\",\n    \"state\" : \"Utah\",\n    \"currency-code\" : \"KMF\",\n    \"country-code3\" : \"dsdoox7xperw417cydq\",\n    \"longitude\" : 1.1426496644664587E308\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cd3649e-18c6-4fbb-858d-412b5d1ff59b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.492243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "71988ab0-ada9-4374-b34a-caab60442f48",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "5redejf4d2774c3t2x012n3ixqt2e96n8tiwbp0mn0faz8euecjxk5f0r22vl2vy6f88s8derc6huyqqw2uvs6fruq54de1hytx637o8dx1q11xy5q6ds9p1vllewaud90dmd"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1984866154,\n  \"apiErrorMsg\" : \"03amp066lv1x78ff66ld6d79y2kjlhw4jqrex8iwtqnct29ifkizalfwk7uu3mw3zk821cfjaoyb4v34yniy8or9xdhugnox3wkdy2fohz5xlp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71988ab0-ada9-4374-b34a-caab60442f48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.491249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "9f7d91e5-76d1-40e3-85fa-758a8e0c35c8",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "hce9hhaezskkymind38s3dqao4u3ubbzo89s8j"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 721981038,\n  \"apiErrorMsg\" : \"xeybum0fszgmj5i4s3bnnnqcej0lah080a6pl31dz4ofayuxzdahsr2dqdcdhvcn9i1ta3yrlnprirfri57um8507230io\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f7d91e5-76d1-40e3-85fa-758a8e0c35c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.491168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "63046bf0-bf01-4a89-915d-63b378aeab9a",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "6mjlx4v2wfw5s1y0bbps6io01q64rq47urde7qflzu3d92kpflp"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 374617034,\n  \"apiErrorMsg\" : \"vj5i78uauyof6eofy8la90haqm3475oqs3sqhkb9clu2my9eog6ri1fd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63046bf0-bf01-4a89-915d-63b378aeab9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.491088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "d86eb2a6-189b-4d97-bf8f-1c1c1816882f",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "9xuth473nnlhwqxzssoopaozsm48w9ahckuzuz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtp-status\" : \"iiboulu5zjg6r6ap9fam4vk6y288w6lb17osj24z542czizlwopz6znvwqhe90jk206yizxoa9nv6ricbn49oh6k5vafkxdvdredzkreivyr59p63n2h2p9hmkrmop1iywrf\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : false,\n  \"verified\" : true,\n  \"is-freemail\" : true,\n  \"is-disposable\" : true,\n  \"valid\" : true,\n  \"is-catch-all\" : true,\n  \"is-deferred\" : true,\n  \"provider\" : \"d3ey8bwsckg7s9x0qg2zijy5lddc1fs469s743fqc1o0tqe1py5f1fhtyqrc8ou2wjzf7g2kry9ojku2vd2sol516d1i5cifv8bm9g85fg58tfg7zay61la8un31ozpiqh4kqkla4yelj75dyw\",\n  \"domain\" : \"qmkzcck972r4tqehxh0iso4648mna6pdc1wtgh6k4hv3yh4z8ae26ckkdhspkc57xx2s1wejx1nomztf86u138oia73iuz8m46fgf23c9l3b8\",\n  \"smtp-response\" : \"r2l0ng7hij2lu1mbowdh9cl5c804xexw9lbvnbs4ddg6cy87u9iqhbjynk47trawx59e87sg8ffw3kxet829s85yfr0t0v147cjnti21yz4snw2cjgnnprgunsuk7rh4fal4eivsq7pedlrwmenx89ol9tj3xyrtld0\",\n  \"syntax-error\" : false,\n  \"email\" : \"8piq888005fy1bg0lot4lonpbrq6utixen\",\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d86eb2a6-189b-4d97-bf8f-1c1c1816882f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.491003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-catch-all" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "is-deferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtp-response" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtp-status" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typos-fixed", "syntax-error", "domain-error", "domain", "provider", "is-freemail", "is-disposable", "is-personal", "smtp-status", "smtp-response", "is-catch-all", "is-deferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "2d050d71-e7bc-4f00-ad7f-8a790356f4f9",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "8lzgah0g8ix5aqmghp8zuoazqvq85cp2a117d3gtomlhcunxk7uu49anfeinf2qda2fvr9wwnfignb42b8wg7o332i1aj6iixfg8g5cvahgop7v"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1604566041,\n  \"apiErrorMsg\" : \"xciv7gpd98wtrpqqd42lg3fax7xl6ksb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d050d71-e7bc-4f00-ad7f-8a790356f4f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.490681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "253b862a-96da-4330-a5a1-705ae4890074",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "alr2crcgixynfi2nshj6nu8rs6yjp2ehc1ksij6031mdy65kold5p6vfaj7jsr936mk9c42kqgs"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1438261527,\n  \"apiErrorMsg\" : \"6s4n8cmflw4zxws8thjh2nmp6q3yw5lt3e3wl1b2yo0tgoym96yc8x3nafbl5bc8r7m0gk9muoh73ia2ykb2bur8jb67vyyna8twz4whawjh2rkuogecja15ntk3oi8ggbwylizuuclcein4roiosn3uo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "253b862a-96da-4330-a5a1-705ae4890074",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.490602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "ac1c8181-a0d8-420d-be23-397e71fd7ec1",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "ihq29lci18hamv19k693ah55k07m6jns9p03bo03jv59zqk033u1nmdzdosqct495w8bcwdbj0vrn5nrccf08vnzoky88lsowgvirrmj3t1qjv1nvtzoqhkkfax892s9junp5g8btwe07k4v89c5lugz4ox279odf2e6hgymv67zhl53iuqb712w0nyrvpnve0ie"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2121580377,\n  \"apiErrorMsg\" : \"aho4zizb63pxtiyc8b8jnn09dd1ope5215b67soecubhpaxsc9rxz0l88tracvzc3xy6v9yhhf6yd20145nffik0o7jg6zo5vmty59f8l5x68m4q5j1vsl1i5a2u45o0yf3f68plxt0gj61oe5c66pk18wc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac1c8181-a0d8-420d-be23-397e71fd7ec1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.490521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "814fb6bf-4a23-4653-a549-591b602f1c35",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "jhfrel1wegewxqzkjg58bqxpfsw1x48iwtwj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"provider\" : \"4s3fuofvahc2z1eshq0xdrnhhphxwbw11sei30h4wmvgkxj275sfkhbjpk50uxktp02r424r6k9u9db5myf0sown6h6hrw5pz7hi06ye0n1vigm\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : true,\n  \"domain\" : \"bp7vrmpquy95l2cyh01afmik38r6dvtycdn2u2c598yedncnqt\",\n  \"is-freemail\" : true,\n  \"syntax-error\" : true,\n  \"email\" : \"lfr9d68p9mus7225l4q60iz08jveuu79ji8txfdq721ios72t7qsex08vz7fgz8xmzg4194e7kcvbgg30ab7xguca8q6tcuwy6fw0ddsaozhbrkkf9evyy46e5rro2x1ghzkcj1aw6gxryf2dv7vdty56ab\",\n  \"is-disposable\" : true,\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "814fb6bf-4a23-4653-a549-591b602f1c35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.490433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntax-error", "domain", "domain-error", "is-freemail", "email", "is-disposable", "typos-fixed", "is-personal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "b9921a87-4d1f-46aa-9117-a82fb863dcfa",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "kxpnjo2z5mv88e7yrty7itjx1dk3x8ykwbmx2lytsqqpo3bif6dvz25k236b0o6vpttnarlvuf1aqs3aftex0vxs"
        },
        "from-value" : {
          "equalTo" : "61wnagmik3mly8v2k79myez2zcsqf2jsxm94l094l6qjzzlvkcjnw3f7d2d76tm3hbsqmnnho7m4mqv8a7hj524hqrg4qyv8"
        },
        "from-type" : {
          "equalTo" : "99xayffy5gd4e3nfetp"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1359120665,\n  \"apiErrorMsg\" : \"clfsq55dir0u09ukdkglfiqw0pvn2s18y1h160ccim9rhiaxq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9921a87-4d1f-46aa-9117-a82fb863dcfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.490198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "af275928-47af-4711-af11-bb95a13beca2",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "jg3pr6rlo7rdf6wz0"
        },
        "from-value" : {
          "equalTo" : "wscs3e7v49sv2xsujylas9zhc5xno61b68mx22vvhhs6egtoc1bo9jcr0zb"
        },
        "from-type" : {
          "equalTo" : "gcf50cl1ejld0k1a7zo4k9lhsontjx9hefnqroiibej7fwdgb66oyc7cozz5fyvods3obma2eek60jm5ifoj5nm9c1493lzhe6d5976ksupf45i2tu6sne2i"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1309291620,\n  \"apiErrorMsg\" : \"kucrk0n9c18xlrm7x5w375l3k43yyqbj3uw4mamq692uom37k5wbrci3d09qaboyqqpzmliqmajyu329hblhpjy7xbo2zsuea3azdckgz0kkk937xv2snsi4oqcrzprvn89s0gnop8h465us7eclylxczza08exln9fr1p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af275928-47af-4711-af11-bb95a13beca2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.490079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "2928cc17-aaec-45af-b40e-e826daea42b6",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "wayvc9u85lavqhi79e773gtosrpc488l6vlarh7qnqgalh6tkse8qrbh8aptdnkmyfpingj2zcqvd5ii2czos1utiw7el"
        },
        "from-value" : {
          "equalTo" : "txbptcss1p3xemuke08zrmuygs73tu6j28m0r0i0fmbf3tznzzgdg9mk99m83jctjjzygx5hf1qjgd32mx0net5681mhgcu11jjo5ytggo1upwob78gki970"
        },
        "from-type" : {
          "equalTo" : "tkk1xoqnxmjqkrzoxj31wvw49pix8xx3lcf20z2ptt1s5ai9ti28lmhne5u"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 982244905,\n  \"apiErrorMsg\" : \"ailcs1in7qt038o3oo3q6fot0n8letsv54bcq53rsawk8p8769lo9we6g6d901i3nmgwbvcr003xkdm3pxq8peag94cec309cpoqz5t5bv7l0a880crbdh5w3x52p8oq2xkgdqm0e043wfo1z27t3ld6fbaal6wxrpbjz2jl4jdqo8wjm2nrt2op0w4ei3eiuvn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2928cc17-aaec-45af-b40e-e826daea42b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.489959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "932638f0-b341-49e5-a784-7d442bd99e97",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "hkjpywzyshwh4j9fc9g8fhq1ccgpb8n84y6et9qvlhq3kdxeuqtp0opz1ve46cs7awt5pig6gtxcl4oa4prib540r9obt4a7p"
        },
        "from-value" : {
          "equalTo" : "q43w4fo"
        },
        "from-type" : {
          "equalTo" : "fms2xgedtnv0ykaj1qf0aejnpyrtdx2fcag7cykie90h6pwezu9fdpdat0powwj00t1hdomcgb8jaq8a32n9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"i2wgext01mb3c9jl67kfabsqytsz8j519icdsgy9lqolodg4qhw1ny5e9wc50n4sjpxdgy0tclpq29uq6xh8i5tftqu2w4jk7uqbsc39uhlettmlidi3szk13dp7whey0zc75ireku8ta7pnfvje8ai45fy6zr5d4e\",\n  \"valid\" : false,\n  \"to-type\" : \"p6cg6i5ghpsldehk6mnax14c1ufpjwiwnozl2u0rco7vbndkni0rmklzkq8qvm1z8b7vamvqwvkl7906qewg9ypoaf1d60k8xsfop74utv2lrfpdm929qf33mhh0otfmtn86scyy9fi08nc1f9qml5pt0350xhb2lw5uclhbm1bqpo5vqgi\",\n  \"from-value\" : \"4x8e0k3eixsbgf7zcr5q25vy0wu0l9pgeymx0c8ygbf9woez2mmlggztme01mn0lpgk4ujti8fyx14jr8rkufhx7i11prfj1bmh1vu\",\n  \"from-type\" : \"l5ez41y8l2rau9hmxktkyu7jx7neevk8pscwxxykl61o1p4wf2w7lwaax9kcck8ob1ieo2u7sypdz8uael6wxl1m8w4fr202rqxpd9k2e1fbll2xb5n2hmn4dxpecb0iwm5lxlvoixuspsw45xrq5y50l4txdu9eehhmi2ge48c28qckybd1xmp57t41gwm\",\n  \"result-float\" : 7.819525207188344E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "932638f0-b341-49e5-a784-7d442bd99e97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.489832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "from-type" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "from-value" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "result-float" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "to-type" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the conversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "from-value", "to-type", "from-type", "result-float" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "5598ffec-4fce-4b31-8223-bc5beaba8bad",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 843334628,\n  \"apiErrorMsg\" : \"oehn0y6pwdjmdrm2krgg8ssa0sq13m1846t8qnv2hanxk6b2unaqnz0ngoio7h6zmokof5gcx1rnmydw8gacvlq7ct0vozytt1q6u0gnvg3xb0ccx977j955xjvwfmog2f26w8j2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5598ffec-4fce-4b31-8223-bc5beaba8bad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.489574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "0de117ea-6992-43ae-a56e-1dcb97586cba",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 200156657,\n  \"apiErrorMsg\" : \"8oh5twu1oiqcarp4dob26kzp97jqlqu44qt9gh6rvg1z9a3gzi78qm5sz8zx1xi85wku1pmg9cpwsep81vytihc0t8vocnlhdsyctcp1qahy6mhd42l1zxauq4kbkrqu78krtatd6d9y1il2fwj09n91f41me8bk35m3ewi8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0de117ea-6992-43ae-a56e-1dcb97586cba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.489514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "d43f1382-c197-4160-ae78-684bf1e4f3ed",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1283329768,\n  \"apiErrorMsg\" : \"mwhdx3kggzvjeia110um080jov7xsmq1xp55nlqsvnjgqgwx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d43f1382-c197-4160-ae78-684bf1e4f3ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.489454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "8937324b-0f76-4866-91ba-5d19f60090b6",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exec-results\" : [ \"mw36wukkzbb8bbsyhrvnkss4lh7gj1e3ts784i53g7kwryhbdj1d2rhfosqz52r497b306bweueqx23khgotrpsrjs34frjmhrzqq6c0a8gh0nq17ddf7c9k5xkx5uqyqh34tfumw8fh62blfdgcdv8532jpbhxkvlejh400jwvata19ylhav86\", \"79oswazssral54w7nst342dgea59wudytzd5osnum372fcltzqkbp0obyd70k8ikz3ndxv7\", \"muu7r19zwwpvidven9q8yke00srcp1urhjuvzrlcv7m2nx7ng4fxsoubowx2d9dowpe5ixg3m86we\", \"491fq7ejllccpa9wq7e0f13y3fvsn9g0u1bt1vlm0kp5zvdtilourrrkpq1vuve2653a3wrn585rzfea64bdahsebghxhmt7bpicmccjtxdhnaia1dneivmshkyqperchw3ejag1b6g5h1uafz3556xbgrdpusb38b7neer530zuquf5c\", \"ab48t68jde6putse16kggrc8qvin2cid42ceyoynbfbk2108zgkh6m7v35jvbbmtp4o33bep0khv2p9ul8pj2wkxuy7u7fld110jbh95ttkiyunubwtnbhb7i053l8870mkf2k27qqcur3birlboh61t11vyd9mpp5lz942mbw\", \"u7ypuw\" ],\n  \"security-details\" : { },\n  \"mime-type\" : \"jqjfen\",\n  \"response-headers\" : { },\n  \"language-code\" : \"zwbuw27up58akr18da49cpu4jhqzav61nzz0pvxftlkxz41p3uw114j1gjsgjy964t97ndmd3vyp4znbp95jkiawtpg4g2jfrlptogk7oicad4zfq2d6pnc2aj13cplf0pfv2crh3v8gorbr7yqkxfc2ckak65yafu75opqw5e4eoc\",\n  \"load-time\" : 1.006127674233578E308,\n  \"server-ip\" : \"gp4j5jst7rlohvspe96hia8lyjxqcrzja5pjmg9qrc5048yomads5nmrb183hjuxggotfni80jey8ndu3liyegfu012civdq6vvxdjiql1e3ixskbpgkihhcc7a62g66sx9ik5vt4kb3amg\",\n  \"title\" : \"Est et dolorum similique quas.\",\n  \"content\" : \"Quam quaerat inventore rerum ullam. Reprehenderit blanditiis quae dolorem. Harum expedita consequatur magni odit totam.\",\n  \"url\" : \"https://web.example.mocklab.io/931559\",\n  \"http-redirect-url\" : \"https://web.example.mocklab.io/705139\",\n  \"http-status-code\" : 1983673940,\n  \"is-error\" : true,\n  \"error-message\" : \"Temporibus dolorem doloremque assumenda omnis veniam et ipsum. Aut iure non vero. Non amet magni velit fugiat. Saepe nostrum fugit qui provident quo est aut. Deserunt quia amet autem.\",\n  \"is-secure\" : false,\n  \"elements\" : [ \"28hofnvjg06bz9did7v76tzb648n25qc273r\", \"dd7i56ve18dmlbqwrzknrwq60p9jh4xf2ng228np7zktwe6riex\", \"3gj1phe0eqfolzsrel0dtalhq4shmhtcbt4etntr6r58w5hx988ck1pxzefh8oy4e1wlk1wsd3qot7wccn14\", \"vng7k8fugmj0efi1uxs46zhhs5dw5renyjkgsgd6faomc7gnzjxbcdn4qz07mlh3ilpquq8i526fk2ch0bup2zwhkbzmg379dqi25pctlnve80ug8j53851cn8q2fdei0zs\" ],\n  \"http-status-message\" : \"Quia dignissimos qui excepturi. Voluptate alias aut fugit temporibus nostrum ipsa consectetur. Amet eos velit minus voluptatibus perferendis. Aspernatur et sunt autem deserunt quo. Vitae facere aut at\",\n  \"is-http-ok\" : true,\n  \"is-http-redirect\" : false,\n  \"is-timeout\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8937324b-0f76-4866-91ba-5d19f60090b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.489372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "error-message" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "exec-results" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "http-redirect-url" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "http-status-code" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "is-error" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "is-http-ok" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "is-http-redirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "is-secure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mime-type" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "response-headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "security-details" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "server-ip" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mime-type", "title", "is-error", "is-timeout", "error-message", "http-status-code", "http-status-message", "is-http-ok", "is-http-redirect", "http-redirect-url", "server-ip", "load-time", "response-headers", "is-secure", "security-details", "elements", "exec-results", "language-code" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "f2fffad9-6ae2-4172-95ca-552eda5f4203",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "fmfztleoqe2wwaa18cvywshkvhfe0n318t4dhccvn1rz5geb2ckn6tcx9uftqk9dsg3minl25cvnhw4u573mrc208xaq8cxc7ejypb3"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 253929374,\n  \"apiErrorMsg\" : \"eqlpgk4j2516o7ymvyx2wnh1yvvkv0o22uudw42qqaqh3vronwl2wcmgof9q4m9pkhjx8r5vczb9rswg70a8t2fm2qm8zq2zyuu6wu5j7kxmr9v6tslkbmcn0qxdlxspdapaiowhxkuf02\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2fffad9-6ae2-4172-95ca-552eda5f4203",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.488567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "8c20feff-d26f-4603-899b-f09d210d3468",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "t4ua2yi8jz4dvisszn0nykqrugrq4afwjv5nans542ghwa25r0iidgvh67ybhx5lmvfai38xrqz7w4giyww20ik55iy0s64sawvfs33y41gspat14bvoetijw5jxayg3nm4kzjpmz5tv1ki4wht6ry02v"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1870905256,\n  \"apiErrorMsg\" : \"moe36n9iavflu8pgjsknf8tdlnrc0x4p0ok3dbq2pry1gar6i82rq6fmjvxaxqy4hxwhtcfqfdjpkbqnibws47fk2kv9ajagxr5wumbrs8ywvehkr91oygh7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c20feff-d26f-4603-899b-f09d210d3468",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.488484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "cf4f989e-2dd4-419f-9fca-564625d25ef5",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "w4s11i3pymhle0ui8i1rtjur3a64uwq2xvvu6jjljlp12iv8e1t0c6nrk4vj4a523b0gskh6i6g8sdc6u"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 929999899,\n  \"apiErrorMsg\" : \"diga2g1e7k6b4dgzf699jskxy8o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf4f989e-2dd4-419f-9fca-564625d25ef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.488397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "129831b1-a69e-40fc-9a98-95cd87496765",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "m05ijwzcxz6d5dagmvy4o9pr0t0spuegy2veou5s0vl16qe24d4aae72j14raalt7lp0le4i8pv9oe556nfl3aytyyucaju5aef1ina4bu7w6lszj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Italy\",\n  \"country-code\" : \"uuuug\",\n  \"card-brand\" : \"gm0o4lbphhwgzh6b967rqymo960lquccou3tkaezc25r60sucw9pgy1g0b6krmjuo6qihymphs8ry30stnm603842jsu4cu2oaere541a7th09bykhqpmlelbntk7odfnm79fq700gcwanx4htxijfkjfd7duuizibibseoaqpt0zppqvjwymql7yzgi\",\n  \"ip-blocklists\" : [ \"771h0ciaxhbpkizr3tekbcg75txi2otl7r3uks5vfzu1yrsihoni5a4dg1ro6drz72r0gtmblhg6cl107z8xsfcsiqrmcyir2q1rwfevnbupj1pu3u5cl7t5913v1awl7xmenit95gv630pxciy1bua7j1hc9v4lk75zy2y7r47obspnx2z1bcxly\" ],\n  \"ip-city\" : \"Strosintown\",\n  \"ip-country-code3\" : \"lpv9ujyaum2l4oqbck557omp7um74iafyblbepue4yb9jtw7963s595uonl78fcbkjtjsm3c\",\n  \"is-commercial\" : false,\n  \"ip-country\" : \"Haiti\",\n  \"bin-number\" : \"fzv8zt2nigs257q1b3m4gta92ltw72jf2qetgcui\",\n  \"issuer\" : \"bhdhpzbedbjq9u1lrt598d4538a0fdufbif8biw4458ipcwej9u0pgao9\",\n  \"ip-region\" : \"o4yse0gmmhvw06u7v32bbc0ale\",\n  \"issuer-website\" : \"xvp5g96dqkszofw4k0orhtxu23r1147l4g5t3lpdcw9x3gu0ia33emjw5mu0nh0lz4jd21j9g8sekbquv5mjx3xdmjqtwztymz3zab2c1f5r3su7iw4tvznlo2ysdkokaggxv5s7ziepgno2noxz4htd\",\n  \"valid\" : true,\n  \"card-type\" : \"sfeesc17eus9je95ys6304wxi8ceama96o9f5b59otjz19yv2ynaw7zicmdwbfn\",\n  \"is-prepaid\" : false,\n  \"ip-blocklisted\" : true,\n  \"card-category\" : \"qen982l27quwf9q23cn4uozj1sd4laecax8wnqgzr7uptwpn8xqutdtc12wnkhdo0xay00c1w24223hzrcsxsqf053ifv54fr5cr2t0ocziqdes0ya84r87rtsvc38ufiiby2\",\n  \"issuer-phone\" : \"1-971-801-1372 x8727\",\n  \"currency-code\" : \"CLP\",\n  \"ip-matches-bin\" : true,\n  \"country-code3\" : \"h5a59t3er\",\n  \"ip-country-code\" : \"hhhht\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "129831b1-a69e-40fc-9a98-95cd87496765",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.488285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "bin-number" : {
                "description" : "The BIN or IIN number",
                "type" : "string"
              },
              "card-brand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "card-category" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "card-type" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ip-blocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ip-blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip-city" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ip-country" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ip-country-code" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-country-code3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-matches-bin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ip-region" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "is-commercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "is-prepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuer-phone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuer-website" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ip-city", "ip-matches-bin", "card-type", "card-category", "ip-country-code", "ip-country", "issuer", "ip-blocklisted", "valid", "ip-blocklists", "issuer-website", "country-code", "ip-region", "card-brand", "issuer-phone", "country-code3", "currency-code", "ip-country-code3", "is-commercial", "is-prepaid", "bin-number" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "e1b79711-4e16-45f2-8e5f-007bdacb1b05",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1770621022,\n  \"apiErrorMsg\" : \"kh7kib6cujcalpprs6t128br07qu0g1a2xucmxsdg5h4nhjyu2zrxgcw37yowabk1xsc9axg0bisgn547rxns32q1lclu63v18khltpd3b6krwotgtckaytkgqku8ao8znepvyclnzqx5pqajxbkd29vcaxhno0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1b79711-4e16-45f2-8e5f-007bdacb1b05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.487507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "a677dc43-fbfe-42e4-9274-5c299c17a55c",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 636105565,\n  \"apiErrorMsg\" : \"2th8r11l3oh2ry6o5l70y5i0v2ai3jlnuuanagw03r182tdkbdzvjaq990e6pkuzjyuc3muvl0q18xqi88tjc91t0l9lsr0wdc30x2moluhtd8kakouclwf3e6o47o01dxpe1ev2j6xt7ol9zsg11pr9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a677dc43-fbfe-42e4-9274-5c299c17a55c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.487444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "10cc7c34-32ed-4068-825d-57a6efaea5a0",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1627378988,\n  \"apiErrorMsg\" : \"ye03bhk9eat30zlum2jh4cfluxu8z7iu3itc14fye1bgkblm7laadi93n9u8vcy1lu2y6t5vso545uezqeeb1gtzqwwdbxdkngi21cb428\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10cc7c34-32ed-4068-825d-57a6efaea5a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.487382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "df115fcc-3c11-4283-a1d3-c9a94dbbfd7a",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"6onmk0lao8ekims71abwpazj9wun6egmz35wto5rfau70vm4xc69jtcpp1qp7mm8jdnzpb8e2v35dbj4f28ll9qr4bh8psgkrhclal9j2zp5l4cgupn4bq4l6jz70nph7o68milbvvnhc48vzx\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df115fcc-3c11-4283-a1d3-c9a94dbbfd7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.48732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "88075ebc-14d5-46a3-aecf-9ce6a6fd85da",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 963117434,\n  \"apiErrorMsg\" : \"mbph64fbx09wfgr8nu4tehar6f3c50hhq39msknhrhi28e49r7du0oddnhk59xbe0y037zvwc4c1jv8c881g44eht7cuc0zm56dgy8aa5z0wkkxv2ljsww4r53d4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88075ebc-14d5-46a3-aecf-9ce6a6fd85da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.487262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "03ac7a38-9e32-4955-9148-3125a4fac487",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 422871431,\n  \"apiErrorMsg\" : \"t6xi2wshptx53ilsuwj9mnr5sxsheraw06fh49tj2w1hriq84t5g2bpfqdfhf249jhuxn5dh3vgfvjdj48iauc9bazv9lhham4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03ac7a38-9e32-4955-9148-3125a4fac487",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.487199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "1d6634a4-dc7a-49ce-b90b-e48e0d7308d2",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 730476125,\n  \"apiErrorMsg\" : \"xrrht5tv7hc8eqcwq5og4kday0dje9ahmru4elmpllnnja1qoow93rxf6bxa5qydqf2xrvyvbv1w469afhbjnixrzxaze9r903pgz0gitexlpyorydxcbhq6ih3x86xhhix9hnk66ich2wue2qsa5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d6634a4-dc7a-49ce-b90b-e48e0d7308d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.487131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "ec23e212-7570-44db-90f0-2410fe58bc42",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"censored-content\" : \"Doloremque et dolorem dolore et iste repellat voluptate. Ut ab ducimus cum eum non. Dolores similique quo sunt. Laboriosam architecto tenetur autem in quam illum. Eaque enim est placeat.\",\n  \"is-bad\" : false,\n  \"bad-words-list\" : [ \"eznyejfpdasnkptj259if37hqgxo6b67pd81iyl5dhhep2e8ihb1yk8j2i2vxzbexs219f4irko3fbnbuhizavmo7ep6jl63mexm3nnts6aiuji55i7l8dqu0jvuj5twwpq4y9taujj3dbabfeghn0g3dt2uvlmezv9wsyf1fa5ntaq2gu51h\", \"8wwyevwxugd3akenydq1j1vrgs9n\" ],\n  \"bad-words-total\" : 1447854408\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec23e212-7570-44db-90f0-2410fe58bc42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:13.486988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "bad-words-list" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "bad-words-total" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censored-content" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "is-bad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "bad-words-list", "bad-words-total", "censored-content", "is-bad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  } ]
}