{
  "mappings" : [ {
    "id" : "02435c90-15f1-48d9-8d13-1b1d0eb597a4",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1662072652,\n  \"apiErrorMsg\" : \"iysrt5wwj9hgxilv46zlr7vqgarnle183ghz24q91y91u6d2la3n8ziyqkso6bfl9467d30icmvv4xmasf66xqbnwn34fnsrzibj0jyt101r89\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02435c90-15f1-48d9-8d13-1b1d0eb597a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.924607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6cc24588-aa30-406a-b1d2-5687af624cc7",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 222086886,\n  \"apiErrorMsg\" : \"ey4eo9oxzevqn3wx9jfilg4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cc24588-aa30-406a-b1d2-5687af624cc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.924551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3d0ad2c9-41a4-4565-81ce-41f92d2a7c1a",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1858737765,\n  \"apiErrorMsg\" : \"pr3pp3yp8rkzt8rw5ctwe1lm62tp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d0ad2c9-41a4-4565-81ce-41f92d2a7c1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.924495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "db550149-608f-4f28-af2c-f9262d28f49e",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db550149-608f-4f28-af2c-f9262d28f49e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.92444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9cc9d9b8-0f4f-4c9a-a321-a4d59d32e120",
    "name" : "User Agent Info",
    "request" : {
      "urlPath" : "/user-agent-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 96195724,\n  \"apiErrorMsg\" : \"jnhtm4xayfbg57ohl3vdo6no7b7s95a3kqxi2x6dh2q05onqoqdow1dw95d0qu7zuit8gmqr0rn5tpubffka29um16x8uwuib7l0yfrt26wlpi3s2v17ses0uzksftd0q0c0yu4qrvxqcvt6m6j7ztp5hk50ykqnvhjl9g9v0p0d7lnx6cr6rczeckdwmhbp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cc9d9b8-0f4f-4c9a-a321-a4d59d32e120",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.924397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserAgentInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "963227a0-c7d7-4fe3-8b4f-8b3a6941a2b7",
    "name" : "User Agent Info",
    "request" : {
      "urlPath" : "/user-agent-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2087033322,\n  \"apiErrorMsg\" : \"942km01gmflan9u17zz8ker5u35clnzlesgdy1da97xh6lm2o0oby4q5d7coicy3fmg82jjq1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "963227a0-c7d7-4fe3-8b4f-8b3a6941a2b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.92434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserAgentInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8688196c-0b87-469d-b5f6-43e1179190fc",
    "name" : "User Agent Info",
    "request" : {
      "urlPath" : "/user-agent-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 645347030,\n  \"apiErrorMsg\" : \"uwjewrj6ag\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8688196c-0b87-469d-b5f6-43e1179190fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.924286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserAgentInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "48bc4489-dfc5-4eaa-b268-d0353bac905e",
    "name" : "User Agent Info",
    "request" : {
      "urlPath" : "/user-agent-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"engineVersion\" : \"huurse8y5\",\n  \"operatingSystemFamily\" : \"1hy66m848ny3jn6t2jnh4x2fj4jexxktnlcz75e4yzt46qc7253zkppf4ulcb4fmfj0wu4axzrmskjhrapeos92de5eqqky1c8newp7pyftqt6ff6d8wfkvokr78qw1rnsk6vs5pgnllq0s05y4sfuv97aov4xlksbaq43c8tz4g9k\",\n  \"mobileScreenHeight\" : 1918850375,\n  \"type\" : \"sb373m8m2cleic5jpwyydgsuyizhi2s71q91wglfakycuknr4hqzbwzzsvv9kvvmlfd73zyu7jbvymtifzr0mrqykhltw4wf5z4rf35p0h21vj6afxo7yleiq905e97zvpdupsnzdztw0d3m98uk4efbvy44rpkgs2cjsezw944t6dkanvbpwyk29w5k7m2olwx\",\n  \"operatingSystem\" : \"htl9lledlbnkp52ieiyci5qxv18nr09vbfrbt06x3j8gnbfm0sa9ja9wzm1nj90kzr5orlxg0ente4h0nbwoq5t\",\n  \"version\" : \"luoh8wrafsany258uq8lnqpt8kgdt2por6ti2t9lw0j4udnbdogwvhdslr7dt8b0g7k0tg7l9uxcgzncdygej57qzy0lp7uvriaaa0bypf25f46fxn1q9cmry26156lbmfku07151nzk1kr5ec8xv73872zkefdoa5ka24opwh85qeq1sszzkm102r1vrxlgmtzvqvg6\",\n  \"mobileBrowser\" : \"kayesaj86dskgui0o85qg9tmhhdpfkyckrafqyw8rg5d88thessbpsv4e3enhmt8geoeklsyey8sdu456za84bnicespuhmgy3g9pux6r\",\n  \"mobileScreenWidth\" : 373995610,\n  \"mobileBrand\" : \"o92fmrjqvv49uo4pc6bu3o7y9oinqv00ykt2chpuj1ksur1qt4e7qn7zed9fbjt7j9pw7b7d66uvwpm43tkolzfuojaibx0pzceez6rpo39u8nc3pj1gbctjrncj4sl2dasgnhv4tve6m\",\n  \"operatingSystemVersion\" : \"qlkx1xrcy4b1dglvrp7ypq83cogjwgryo6vty6gg0wyt4dump0vmfbcjp1c596tn835y4136053xo1ytjp9fawvlqoyo9pr156z76dgkv5w99bcs4zwkz5zsnyn5fkj2bb92zgfpw\",\n  \"engine\" : \"kh3k0fc5lvvua85x4xkxlxxjbv2f70ysnyfdlpnw91ipznzq91te8kejz6xykxatsze0a04tslh2hb11vfkrlvku97bh1xnin328bib3x5zs98am8bij0nblwjk8dx9lw8mtit\",\n  \"mobileModel\" : \"itvwdd1nlvjctggjrgvaru8\",\n  \"browserName\" : \"Katherina Collier\",\n  \"producer\" : \"29w5px3\",\n  \"isMobile\" : false,\n  \"isAndroid\" : false,\n  \"isIos\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48bc4489-dfc5-4eaa-b268-d0353bac905e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.924226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UserAgentInfo",
          "schema" : {
            "properties" : {
              "browserName" : {
                "description" : "The browser software name",
                "type" : "string"
              },
              "engine" : {
                "description" : "The browser engine name",
                "type" : "string"
              },
              "engineVersion" : {
                "description" : "The browser engine version (if detectable)",
                "type" : "string"
              },
              "isAndroid" : {
                "description" : "True if this is an Android based mobile user agent",
                "type" : "boolean"
              },
              "isIos" : {
                "description" : "True if this is an iOS based mobile user agent",
                "type" : "boolean"
              },
              "isMobile" : {
                "description" : "True if this is a mobile user agent",
                "type" : "boolean"
              },
              "mobileBrand" : {
                "description" : "The mobile device brand",
                "type" : "string"
              },
              "mobileBrowser" : {
                "description" : "The mobile device browser name (this is usually the same as the browser name)",
                "type" : "string"
              },
              "mobileModel" : {
                "description" : "The mobile device model",
                "type" : "string"
              },
              "mobileScreenHeight" : {
                "description" : "The estimated mobile device screen height in CSS 'px'",
                "format" : "int32",
                "type" : "integer"
              },
              "mobileScreenWidth" : {
                "description" : "The estimated mobile device screen width in CSS 'px'",
                "format" : "int32",
                "type" : "integer"
              },
              "operatingSystem" : {
                "description" : "The full operating system name which may include the major version number or code name",
                "type" : "string"
              },
              "operatingSystemFamily" : {
                "description" : "The operating system family name, this is the OS name without any version information",
                "type" : "string"
              },
              "operatingSystemVersion" : {
                "description" : "The operating system version number (if detectable)",
                "type" : "string"
              },
              "producer" : {
                "description" : "The producer or manufacturer of the user agent",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop-browser</li> <li>mobile-browser</li> <li>email-client</li> <li>feed-reader</li> <li>software-library</li> <li>media-player (includes smart TVs)</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "version" : {
                "description" : "The browser software version",
                "type" : "string"
              }
            },
            "required" : [ "mobileScreenWidth", "mobileBrand", "mobileModel", "producer", "browserName", "mobileScreenHeight", "isMobile", "type", "version", "operatingSystem", "mobileBrowser", "isAndroid", "isIos", "operatingSystemFamily", "operatingSystemVersion", "engine", "engineVersion" ],
            "title" : "UserAgentInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2800faf5-012b-4a97-b3e1-3983a180f379",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1019273709,\n  \"apiErrorMsg\" : \"kqm6rhjos2zhc8651z4lt06t19dzkdnwvdgkoq5aez5qw4ym4p78s442dqqhd9i4fj09xjxa6liqu0grjginpfafv114pj8yiw70zcqhd6np1lobbo6nuybdhyxg5kb2jg9ha0o3covburmrm5uzc06c112mg3xvqbt5en\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2800faf5-012b-4a97-b3e1-3983a180f379",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.923889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ff4f1ddc-d042-4743-ba69-d591bba33a0e",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 113395396,\n  \"apiErrorMsg\" : \"wdymmwh1i1ak0q14gmyb2tvy4a1c7sws408of42oj5se6q602c2xtjz5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff4f1ddc-d042-4743-ba69-d591bba33a0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.923833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1d0a3fe1-7427-4285-b4b2-82ab76e9ec1f",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1981890640,\n  \"apiErrorMsg\" : \"2ldptbpcy2thuzh026evesn10sjchucrji1nt8h3rmhyhxw10mpjssawl6sf9aow\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d0a3fe1-7427-4285-b4b2-82ab76e9ec1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.923777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4549b9e1-c89b-4f8b-b4a6-22e8cc1e8f24",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"httpStatusMessage\" : 1452450663,\n  \"serverRegion\" : \"kzhud8euz6iebr6bfpjerjtmg8zc1t3mc95t3gtpfpbpu6f5dte16fx6w1kgjona08ow3pujlhv3127b97ujtyn60akgkv761eymufve8jyozwtoknj5wkku099pydf8zxf8ce501i6ayr1r16getd5ezksryv4f1p6p82d7nh\",\n  \"serverName\" : \"Heath Shanahan\",\n  \"urlPort\" : 686827478,\n  \"title\" : \"Cum ipsam error voluptatem qui fugiat.\",\n  \"content\" : \"Molestias quia ut omnis rerum repellendus saepe. Aspernatur iure magnam iusto laudantium ut. Quia voluptates repellat occaecati tenetur eos.\",\n  \"valid\" : true,\n  \"serverHostname\" : \"Solomon Ankunding\",\n  \"loadTime\" : 1.5283597964147647E308,\n  \"isError\" : true,\n  \"httpOk\" : true,\n  \"contentSize\" : 673990368,\n  \"httpStatus\" : 983095647,\n  \"serverCountryCode\" : \"cccca\",\n  \"contentEncoding\" : \"j1ngzsy8u7f4rnkwtup8vw9gkg19sm9zerb76gywu959ipmiauagmyhoxpmo9rph2rqp917hlhm3zpx9zdzx3f46flwa2cwyceu7dwdtjemdsvuh8bk96c56t1v6ps778mlgtjnendtcvr438bk233l5007twtq2d\",\n  \"urlProtocol\" : \"oar9f1109ljh1e1up0y755kon572kao3ni7i9dehtk5rmcc2w58x4j64dyph0ebv3hv6qpupuohk3vniij8kd2mt79vl3d0hsktsamac9sjppv7ryjw8qcb3gvhzw70d52\",\n  \"contentType\" : \"g0hel0j9d0ollmv344hadh8dffygnij5rp5rcvdm7v6hq5gmutf4gf23ki7rxtnb8gva9bq9se0lm5tyvjvl4f8nhqyotkuwzhh8pozg4kakyf6lglrcs50qgbwneynhn1ekzhscedwvdrw5k3p69mm4rlrigwnetu5i7jsprqqdr4j0ldr\",\n  \"httpRedirect\" : false,\n  \"query\" : { },\n  \"serverCountry\" : \"Thailand\",\n  \"real\" : true,\n  \"languageCode\" : \"1bzve2u2r7l5wirlr2drtruonwzs3lr3q1h4v2fquqby8hlc2hzf1fw4kb9dd07vn5r66orbpm911wnf28hhzg1ufgc3bz968h7a5o43yujyntywoit0cgemewa5gcu99hk8ga8ov6yfgxyddgrib8ycf2\",\n  \"serverCity\" : \"West Parisfort\",\n  \"urlPath\" : \"9nbdcah1y8udv6i2zh5szbmdx\",\n  \"url\" : \"https://web.example.mocklab.io/320103\",\n  \"isTimeout\" : true,\n  \"serverIp\" : \"4onh14enmy8g77zs3pu29j863shy2ckgcyvxvi1or23ckp7lq4elaxhs62b64aoxbfxo44xypfhqsktv7gvvb0csn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4549b9e1-c89b-4f8b-b4a6-22e8cc1e8f24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.92371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "contentEncoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "contentSize" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "contentType" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "httpOk" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "httpRedirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "httpStatus" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "httpStatusMessage" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "isError" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "isTimeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "languageCode" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "loadTime" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "serverCity" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "serverCountry" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "serverCountryCode" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "serverHostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "serverIp" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "serverName" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "serverRegion" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "urlPath" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "urlPort" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "urlProtocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "httpStatusMessage", "serverRegion", "query", "serverName", "urlPort", "serverCountry", "real", "serverCity", "urlPath", "url", "valid", "serverHostname", "loadTime", "httpOk", "contentSize", "httpStatus", "serverCountryCode", "contentEncoding", "serverIp", "urlProtocol", "contentType", "httpRedirect", "content", "isTimeout", "title", "languageCode", "isError" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e09e7b0e-a209-48e5-9f53-e862944e6ecf",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1518098468,\n  \"apiErrorMsg\" : \"888h7udjbmf9wdspqt1m91v1vrjjtb5b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e09e7b0e-a209-48e5-9f53-e862944e6ecf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.923045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "56c9a557-3e6c-4a20-8385-f736081fd07c",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1293906430,\n  \"apiErrorMsg\" : \"zcw80p2buufmt56crz0x23baot05b9vi64h2t02lh1hjpdpc4xi8h7c94nk0kai8qxrb8yxvgz4dvc8gyc1kwvvjaywu44z1uh203nc1hgxfijjq0v4axxen1yj6s4xd7odcn6x479s6gdr9idhq5vnh9wmosmao3wp81guenpkh8wfd1x1bk2p0nblmkm2m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56c9a557-3e6c-4a20-8385-f736081fd07c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.92299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7d4232b4-5400-4aef-8789-7aa48a5f2988",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1118901997,\n  \"apiErrorMsg\" : \"zkgftxklyuxbdsabzjoqpi66tt2pa7k36wvqm3cp9a32dfyhe5dfg0b0xymlqoylyd9nhuchykqhlbydg3iksty4xfcb7tu4s5v636z7fpxboxnvr65mtpv8jadid9x2k3j8bzeheysoydkz98ct5flyo9f3cym\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d4232b4-5400-4aef-8789-7aa48a5f2988",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c973d332-8a25-465c-974f-3cfc8689432a",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"numberValid\" : false,\n  \"securityCode\" : \"8sc\",\n  \"sent\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c973d332-8a25-465c-974f-3cfc8689432a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.92288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "numberValid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "securityCode" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "numberValid", "securityCode", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "16b1f379-dc34-4d0b-baeb-203812f3e977",
    "name" : "SMS Message",
    "request" : {
      "urlPath" : "/sms-message",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1048921482,\n  \"apiErrorMsg\" : \"7oui7607ounfw9235r9dtkg72twn7xtjrma9ch979ryexy7cah2spw7i5zuwshp9jd21hu3aa5cuvbu5a9zyc0x52tohs851fb0pfujzhnfr6og97b765k0ijqic8cpjry\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16b1f379-dc34-4d0b-baeb-203812f3e977",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSMessage",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1718381d-1879-4f2f-9551-af215a253411",
    "name" : "SMS Message",
    "request" : {
      "urlPath" : "/sms-message",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 406065151,\n  \"apiErrorMsg\" : \"mr5s5zs651v5lhk3tvoui1oczhi17zu0yf73lgqjrwevasr53si3ythlq3s1ddfjjruyyv8kjdgirecxhk0u0zxgw4ffnz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1718381d-1879-4f2f-9551-af215a253411",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSMessage",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8e141e66-76ed-41bb-b5d3-0418ccc32d5d",
    "name" : "SMS Message",
    "request" : {
      "urlPath" : "/sms-message",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 290748660,\n  \"apiErrorMsg\" : \"9w0mbp9r7hqhx9hv6pmx1ajt6437j8bhn2o1d3hhp9u2a49ngfkc1w4hn1tks2cbvtutnxaxigqo44foq0716404x64w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e141e66-76ed-41bb-b5d3-0418ccc32d5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.9227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSMessage",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "71b63f0b-16aa-49ec-ac30-2e05f92332a7",
    "name" : "SMS Message",
    "request" : {
      "urlPath" : "/sms-message",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"numberValid\" : false,\n  \"sent\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71b63f0b-16aa-49ec-ac30-2e05f92332a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSMessage",
          "schema" : {
            "properties" : {
              "numberValid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "numberValid", "sent" ],
            "title" : "SMSMessageResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1397c4a4-4ad0-4075-a762-7e89496a72ca",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 115120892,\n  \"apiErrorMsg\" : \"ahqo17c6podjcwbu02p5446ubhj32o3ahhi0quq65wifg24xzqj0ln613aljk91163bezta3tb9je7x9rzfccacr84it7fyu97ol5atngyi0dffevo3lau2z2cftpftjvuy713kjzw0d304oc1g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1397c4a4-4ad0-4075-a762-7e89496a72ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "decb2a7f-d31f-4a8d-9379-6a92b140e188",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1990230558,\n  \"apiErrorMsg\" : \"xadd4fxc2vnfi5jbwtleyu1dfcfqkeng33b037p2uio1bkwsn4i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "decb2a7f-d31f-4a8d-9379-6a92b140e188",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f63ded51-6be3-439e-aa44-df3e3af0bd62",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1323872862,\n  \"apiErrorMsg\" : \"9v9wgs88p2qzcqhummmkva7ldtm84rm2f9jggnako2v4eqw12xjbaurupico45lnuz7u8xlz6if1xuswuioporeo2uzusxc0sgiykaxx0ies6zqij8xkwiszho7gzsz0gz3di0aioadrpln0vyrwbz93dnaoqmttymb2gsv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f63ded51-6be3-439e-aa44-df3e3af0bd62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5aa7652f-0f6a-4c53-b2e7-d73af9f28a69",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"pw9cn4vow8zuwot435lrlwvec2inp7lq2tpudnb52ur4nndg9qs3xcozw1em7trjjl9x4s6vi1n411ioi2x7fr2a8x\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5aa7652f-0f6a-4c53-b2e7-d73af9f28a69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "a16d0729-0c81-40b7-beb9-f74612f33ca9",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1649249316,\n  \"apiErrorMsg\" : \"b9kq15d086nvn1xeb6n6ehrusn414cjuhtrrbneqhbafo9qihxsqy15569do8k2y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a16d0729-0c81-40b7-beb9-f74612f33ca9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9753b244-61df-4dac-9dab-2496eb7ae192",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1605797775,\n  \"apiErrorMsg\" : \"0fxyhvm1nxlnjyah3onx8pk1yi3sa9i3orour2tyemdr0up6se7ozak0wi37c0076yaxhpuf01uankfpmdclzx70ks1t2uuxcejg6huj7wbvdcg0d2ujh2fqjpqtxkq2tu4ug9z7qstzqdcnphuege\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9753b244-61df-4dac-9dab-2496eb7ae192",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "20ba306a-1980-4e46-b654-5fad61c768ea",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 790683704,\n  \"apiErrorMsg\" : \"a7xcne1swm3z2qh98l0sxxvriyay2zslv66fvqzdlr4cdtdcq1brxcxr8qmb7spx37jpte6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20ba306a-1980-4e46-b654-5fad61c768ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8f4fa690-8533-459d-8e83-38ff76677664",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"numberValid\" : true,\n  \"calling\" : false,\n  \"securityCode\" : \"ze68gum9sxe4jd85e6b8ld7rr0qo9pmyxynlhwgdppm76cye9v0w4jsmohd8tqpemhdjxgpjvsksw7yu6hrt8belwzuguwloc7yre8x3pei8xq6ydngx4w0cq7vt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f4fa690-8533-459d-8e83-38ff76677664",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "numberValid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "securityCode" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "numberValid", "calling", "securityCode" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2bf14363-9146-49ef-b715-ba5c33962b38",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1669733822,\n  \"apiErrorMsg\" : \"psbeuq0yox0va6h96354w73s08ykpgl5mq8pv5i79r0vp0p5v6i2wlqb0ozyiahxtw1ifkudk7o0q48wx81aeiohcno8bsi5hy7n0rgdn7mjdx4eiy2mr1s7id4mwpp1gfleyz1msg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bf14363-9146-49ef-b715-ba5c33962b38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b183e9a2-085b-434e-8ee9-821c20f4ed97",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1922922822,\n  \"apiErrorMsg\" : \"bclou8zl57zgmvrg02980b7ycwqolaill8cg9rdsybvprwd03kaudoz1suoniixpll61uv05e2jbmwxeidtumhio95728eo24w7e0m0cl2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b183e9a2-085b-434e-8ee9-821c20f4ed97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ca3ebf7-e71f-4800-b91a-de0faa1f020f",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1249870640,\n  \"apiErrorMsg\" : \"czp6rrjzif7k2svlpoqoxmlf7n7e9061s5dz84lmyrcd7ti0jbnu5cf2n28g2g52yp8rwzidaecph76nb6g6r4tycyv91z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ca3ebf7-e71f-4800-b91a-de0faa1f020f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.922054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bec32fea-8b93-4e1d-b680-bbb2b140f3fb",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"country\" : \"Botswana\",\n  \"countryCode3\" : \"9oti6xvt4txedcrdnux105ktjabsibm1ni6us5o9c1kuo1k02kty5fau7ugx0ruuwcj9n2x84qsxpglnasxza53k8dpauyd0ortxbk21spbela7ur3ngn59yzce50mr0vz1k58u1olgbv51ch091ndk0wb09r3f1dfdh0568n8nn3fw149lyesis3qhh6vmkd1jz0j2\",\n  \"internationalCallingCode\" : 693546456,\n  \"countryCode\" : \"kkkke\",\n  \"prefixNetwork\" : \"u1tx351l7lf6f12c6f6etes\",\n  \"location\" : \"u81861ikw6s6nwbzgiwfuhvx4wznjp4d81zx9sb5\",\n  \"isMobile\" : false,\n  \"type\" : \"8nalwrcl2s9wnj3wnfeq301f373wo4javscl1qmd26utj4ktgbktziaxw1bkqxhsb9fkwwjos9h2sux2b60hcqk751ebi160f2yhf7gv8\",\n  \"currencyCode\" : \"HTG\",\n  \"internationalNumber\" : \"vrbh753zxescc5cwa4rczzteudqgckof4jeu6x2oh0tvfoobwvr7iyuzna0zegrkwyj9ro3q5glgbe30ezinvy\",\n  \"localNumber\" : \"g9x4glj8etce4c248stuyo3327rubspaovmk6h50701jtz7b4qosqhhc5vjv7lxx5l14yb7ag39wdt8mbhs4e9fcgmkick45wvr4kn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bec32fea-8b93-4e1d-b680-bbb2b140f3fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "countryCode" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "countryCode3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currencyCode" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "internationalCallingCode" : {
                "description" : "The international calling code",
                "format" : "int32",
                "type" : "integer"
              },
              "internationalNumber" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "isMobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "localNumber" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefixNetwork" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "internationalCallingCode", "countryCode", "location", "isMobile", "type", "internationalNumber", "localNumber", "country", "countryCode3", "currencyCode", "prefixNetwork" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "db52a69b-2545-4e91-a21b-371271bfe392",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1827887731,\n  \"apiErrorMsg\" : \"c4ep3s35l1hify0brlcdomaihxnanzy25ytgnm4sjbiw0som8r8g6fzbpgra991x0vrskji9su2usbiyqho\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db52a69b-2545-4e91-a21b-371271bfe392",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f5c65950-f2a5-432f-ad76-fba4a1d23201",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 269267177,\n  \"apiErrorMsg\" : \"clr5npz8104axvfsige84yddsq5z71yrm9e1gm0lhxynkrwivtjcipjsyt4z5rzgwotf1jo4yvzx6dhsjgmia2yhgbf0tpu03v9o80krtdev9g3umg483off53in3ebe7u28n6f9i4ag48dwjt5jdht6rmln8mvmnvgzlvlexkwpb9njkwhqw0x7g3g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5c65950-f2a5-432f-ad76-fba4a1d23201",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9fb7c27d-f9aa-4e20-a89f-34d2d1cc7a47",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1842492847,\n  \"apiErrorMsg\" : \"97u69r1ihza3l6d08uc74at63qiuj3gh5xiy73avibib2j0upo4aj54sx0fge17l7so902x6y45fg48pqgpe0108111mvdb9038i08e9edrdh8urja99l5oum84yyr1dbp9p3ragag77bwceh2hh7lswxfnrzxok1vtnp2zwxznowm5ioc196mcw9srxe9ore5e6ae8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fb7c27d-f9aa-4e20-a89f-34d2d1cc7a47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6608920c-4a53-4543-98b6-9095001393fc",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"numberValid\" : false,\n  \"calling\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6608920c-4a53-4543-98b6-9095001393fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "numberValid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "numberValid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2addec19-6826-4820-a2f1-6ca0c5fb81a3",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 179786049,\n  \"apiErrorMsg\" : \"03opprxf834gnrick5f28aot27l8u8zeo6xo59lx99xlyu63go68md2wap0stwffmafrxpx3kd12icgjgylg6qejibrnn0fgx7095ymqyq04rv85sasyz71rnhf590bfq02s2n89e52fehw7f5i2vj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2addec19-6826-4820-a2f1-6ca0c5fb81a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ffbba2f0-37d6-4116-b176-5769cdbd9390",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 769929042,\n  \"apiErrorMsg\" : \"9tl0z76yzqic91o56fyy4gdnm7jvjktv61zq7yg4h3yt84nupk37q5ebsbm1p32g2kvf5nssw0x661gkz6v102yr5lymjz52q2474ce8d9ef9cs28wjg4tjya1ac9fwovujifrif2lew6l85a7mcz0gk6nz4y6gmdpw0fvw6hp1gdpinrz1ph29i1ecjnaud6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffbba2f0-37d6-4116-b176-5769cdbd9390",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5354ac66-3b9e-4a28-80c7-3d42f046d7b3",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2110298962,\n  \"apiErrorMsg\" : \"hmpjsptfk4a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5354ac66-3b9e-4a28-80c7-3d42f046d7b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c8f1c368-d904-4a44-a850-dc88ba66620b",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"providerWebsite\" : \"3svxe93y9o7qzsln8bieq7qeltivgyq6ibf3i16z384ttoh95gq33sfqbsex5szwebho4zm4eff3uzrk81rpsdexn03h7q4k\",\n  \"country\" : \"Japan\",\n  \"isIsp\" : false,\n  \"asCountryCode\" : \"nnnnz\",\n  \"city\" : \"Townemouth\",\n  \"asDomains\" : [ \"v2aok8i25a82mlxi0zbeh7is4aztp1rq9j14hv4im3t0mx5iuvd7nyy8ezt1s9d2f4wchvbq7uu3dahupdp658ixn0ljg13kg1mq281eg1zieab0dqneywq5hj4owhy1we0gcx4a5ikyvicmyk5frjua2mu3hcquortexuuh6cipyh4d\", \"rxo0vll4nfjyhqnac5i7kwt4r9dh41ef34gsy82zrqb3uv6thpdz37q0rb3ywz177709noh0wbcra582hgi6vsr8qg71dk3vbiq4nxk7m57xumg6ndvucxy75kojx9x4\", \"b0yhbwkmkfy9f2l9k9bh3wbyy6uonv2okq9xb1abbxk0lfg84x6s7rne7qjscf\", \"o6mrbgqjmjf0o7clocujzommji63tqjedcdxd0n4snp9evsc65pzfrqvkiy2zewel1sck2yilygntyy1c11umidjb1ophqxy3um84uryjcys3x7o8p9bpdk77688vzru4x68mhkrjk5avazy783fyrea17i39iluguyl8tslsqja5b\" ],\n  \"vpnDomain\" : \"2a8ng9xh56qwoa0ycy2zn966i4hp8q41cwr40305gl22gb4ts0ohmw0dhg0jgdp3q4m\",\n  \"isBogon\" : true,\n  \"providerType\" : \"j2elw02h2q7yo4siq0p3r5x9ly9jpsy32oga0pt5ibh09p8g4k3q8102dngt4v7d132o05il769fnhb2ouf8ghf5kg7feeghnly79bw3t1wnylckiqjwa6igyw5j40yz5cexmswd8m81bx8zttt6zck03row07tqrjsd745xvg3pxk21313b6ax5y5fnkv4sxia4k\",\n  \"valid\" : false,\n  \"hostname\" : \"Roselia Becker\",\n  \"countryCode\" : \"mmmmm\",\n  \"isVpn\" : false,\n  \"hostDomain\" : \"tfkmuijhbvdshzwflwprujudtg7wk6mflabsci8s0rf6yg5bfqdkeoide0dnqlt4vkpqmekdz8taq29eiq3ln06c\",\n  \"isHosting\" : true,\n  \"continentCode\" : \"93955gm2bghzgh7ba2ind5\",\n  \"asAge\" : 1898767223,\n  \"ip\" : \"a3q7f5gcj4s2hh3kasgi2ylu23eg43q3vtibhag75hdb6vzksufh1bz3rpj5oeyw3c4mvgs2i7950b5h2v1am3vhhhmt0gup0v4xpwl9i7j47107rag16v1ab\",\n  \"isProxy\" : true,\n  \"isV4Mapped\" : true,\n  \"asCountryCode3\" : \"naoihkb0tguvzi3a0vi8xx188e0l2kyb3n11zbqsy0wp43v\",\n  \"countryCode3\" : \"2hlfl505fo2blat6h5jo3n3eeaqvq7eiyprh14k8e2dicmunp4qqnoyix36h9wvsrsw9tlvempsk04navwqhpqjcwxhr3lz1r2lz7k6xj1r4euyafm8j231kxbqehkpc8\",\n  \"providerDomain\" : \"c15rfkosmueokhj0f82yn16o3beffr19272vrg5bdryumof1sugemucafmnzvqnk5b5h8skpn7xhlji81wxes9mer2lcwzur18ir7r6fms40rzhjcpj5hlog62p48v2gtqxc8aq6rvd8bs0g35wnhb8nqq5mla8kepal1gt\",\n  \"providerDescription\" : \"Id non assumenda eos non. Quisquam et tenetur aperiam ad quisquam. Distinctio aut suscipit blanditiis ut expedita laudantium. Nulla ut officiis modi fugit natus fugit.\",\n  \"asDescription\" : \"Blanditiis labore vitae sapiente perspiciatis est beatae ex. Doloremque vel laborum sit sint. Debitis nesciunt facere.\",\n  \"isV6\" : true,\n  \"asCidr\" : \"18xzd2mnlhxhbayedqcbaqpon8vy650bkvszv6wda4lapxofhtpiqlebamg2e26737bjt6e549t2c2r390rclzim4cptq7f9rm935fptgd7iujrjazjbanoa63sv2j38ceojx4cj9gxnh3sf7mhlbiwnk7yhm6fdl02n7t7j8yr2f3veakchrn3xh4ahex\",\n  \"region\" : \"f6s5ohk2iak6dl8n2ath5p7f92r1kb6wbnqxw4bz36j7el8yuw7iknv798nh381akhwp4jp6z2y603w0apfm6442a5v8h43hsdf2p72bugz7kz05a7h6mgu5ooh0nkt49qdtev99g6lfdn742vtsdhwrzqf05uawc6k0rb3gph8sc1t9uto569nxbf0c6o4cd\",\n  \"asn\" : \"d3tvotwzzfa4sui7ggikflp0g42fecoc1vjsiycc97qc5g11nloqxmgkq67zy5nloh25kvf0zq1ma0dc76q7kdopqz4rdtwv9agnh2x4pkjp4e0wokg\",\n  \"currencyCode\" : \"BZD\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8f1c368-d904-4a44-a850-dc88ba66620b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.921335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "asAge" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "asCidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "asCountryCode" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "asCountryCode3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "asDescription" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "asDomains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continentCode" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "countryCode" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "countryCode3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currencyCode" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "hostDomain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "isBogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "isHosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "isIsp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "isProxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "isV4Mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "isV6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "isVpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "providerDescription" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "providerDomain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "providerType" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "providerWebsite" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpnDomain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "providerType", "countryCode", "hostname", "providerDomain", "city", "providerWebsite", "ip", "region", "providerDescription", "continentCode", "isHosting", "isIsp", "countryCode3", "currencyCode", "isVpn", "isProxy", "asn", "asCidr", "asCountryCode", "asCountryCode3", "asDomains", "asDescription", "asAge", "hostDomain", "vpnDomain", "isV6", "isV4Mapped", "isBogon" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a87f1684-94ad-48a7-a1d5-c987a2b7c647",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 543576523,\n  \"apiErrorMsg\" : \"yay8nb8wdekal3t8gkm2fmnaz3ihv3qulcz97ki6wtyxq7s6hqbj6spxbr38ogsjmzyjjnhhiycai25jrkhuwpe007zngaigusotl41pkyukkslu2hkxmfbyvcgy4ppqxmlhjb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a87f1684-94ad-48a7-a1d5-c987a2b7c647",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.920707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a9d97eb5-bf43-4356-b40a-4fcf809832c7",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 256911373,\n  \"apiErrorMsg\" : \"mqoycz5zkfsu6u31cpnejib8k24m3ha57jrvmyq98v8dhqqk5virkp9il46aza6xbagwilb0t4uqngolahle5d6b64p27xd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9d97eb5-bf43-4356-b40a-4fcf809832c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.920653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7a155088-eaec-43b6-8cf0-c28ee5a6dec9",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 504228946,\n  \"apiErrorMsg\" : \"7iv1671d7tk0rydrime1pedm05pkmufmydtawpdf9311f02ux2ft4d82s2kc2uhrmkbbc8kjjjre80f3mafjntshjznwffxpuwlwb8yf7pz17y3ei4xwbn1zhc1bignyiaoh9ufjheglnncab51bvmasew2ljavvq4frpimhbcqbmb45v2ch0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a155088-eaec-43b6-8cf0-c28ee5a6dec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.920597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65ed1356-5c8a-4ae4-9179-5eab1d918c3d",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Bangladesh\",\n  \"city\" : \"Jeffrymouth\",\n  \"timezone\" : { },\n  \"ip\" : \"etwerslzsskxt2pnoiga2h8a17bpmws3cwjpjtz8w2a9meqzixrpkbvzx3hfpkbmqcr9sd4tx6e7lekhis77hbfa1gxfde8v22qyjhoaogq0jvofdl2hi8f\",\n  \"latitude\" : 1.752443529933171E308,\n  \"isV4Mapped\" : false,\n  \"isBogon\" : false,\n  \"valid\" : false,\n  \"countryCode3\" : \"pxgsenxl7t566er9sf8tq8io20zlquxred16h9ycmgstm9rog6q5i2gzzp3fad3rm3aerzip2dd3t4q62lflypffy8h9i6cl3ofjjk5\",\n  \"hostname\" : \"Alane Sipes DVM\",\n  \"countryCode\" : \"ggggq\",\n  \"hostDomain\" : \"qewqlt0davf2ssnns3owjdg5e3pxq49amwpkgycrkl4lsyb9h5nj794agko4fj11hg7dxahok6exogliqwuskzkjot3uft71tu7jeupq0h7lnn7mrho39mwk03623rla0ps08umjuein7f7esi53u\",\n  \"isV6\" : true,\n  \"region\" : \"ca0rorclq0o5m4tkcexgt20htpfl4eaxpd4nlv0zx9ffvilm44lyof50thb5lee4w39fzafdsxnx6ci0cq0d5l42nagj73x7hf3yi09fqwhsfmvcoxlx2szdzo0w4jdwx1x598zl4j87eot0kk9farvmo\",\n  \"currencyCode\" : \"AFN\",\n  \"continentCode\" : \"mbhkmbch6trfzzmn5zz5qugat3gvlaz5n159nids7cf3zofk5x4kz8auoq0uf3bz8r8wdzl91j4ad17kbz3sse8qhdf23d57034cmozlrxpwnrf\",\n  \"longitude\" : 1.0789610805014277E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65ed1356-5c8a-4ae4-9179-5eab1d918c3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.920535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continentCode" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "countryCode" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "countryCode3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currencyCode" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "hostDomain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "isBogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "isV4Mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "isV6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "countryCode", "latitude", "region", "longitude", "continentCode", "ip", "countryCode3", "currencyCode", "hostDomain", "timezone", "isV6", "isV4Mapped", "isBogon" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84a528c5-3560-44ef-b37d-8ba3a8fc83d3",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1135455948,\n  \"apiErrorMsg\" : \"8cs02kvjc9m5tzua3a2n752s7nhpqrmb56gvan3q72n46ar7sxrbt3esl8nktr43ps65jo9gyc3ksc7kyvnpppytewhar0z2mm9s7k0tijc93id8yjta3kyjuknjtfyaykkcselxbksbcnudnl3t0rtepqpsxsacij9vu4z04axzyop2bdganr0e6gk02qi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84a528c5-3560-44ef-b37d-8ba3a8fc83d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.92011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7eb39b1a-0818-45a9-ac11-856b972731e8",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 782583368,\n  \"apiErrorMsg\" : \"qxk27k25jfnob7go9ap54bazavrv6oq82idpkw85dksqvrmu73rg38c0efz75ecifhe45levww7t68xk7xst024ttcxm5bxdsyjcwmpkhyyw2eh6mv2s9zir9mzc4gdi29s4gcvjc4q95\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7eb39b1a-0818-45a9-ac11-856b972731e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.920053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c8d12d6e-9b7a-4cc5-b5f8-59449cc5889d",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 973010290,\n  \"apiErrorMsg\" : \"qaipqviulc3jnw31h0wxbdpvvvf9uy6vvig908472kdtleeok4muztx6udpjzebb5z2r33nqod47xgipequzu23xx6ei0fkyjwdksu2yxgc18lktif8493c3c7m7eeo6viwzbwi3n7aq5ngae64f8y0ovzu28vtqosv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8d12d6e-9b7a-4cc5-b5f8-59449cc5889d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "be7624dc-eb81-44c8-8eeb-9e11b3fb8de2",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"nkxrn8haix2r5d6o29zxxssbzyoa3edkqfh374jf0bpxwzho6vzxir6awbn9ezjkn5rh7zj61c8ql27weac23v8b6ivhxs5tbio1s9zsdiuu3dvryqtid90chf9v0bbs4jnrpf8p4bgy3thjewvjzp\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be7624dc-eb81-44c8-8eeb-9e11b3fb8de2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "edd89ab4-58d3-49e6-a0f6-d0c9f2630599",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1676346606,\n  \"apiErrorMsg\" : \"vmnye69iafffjqgquhqh4wm0pwhr6472qdulbrszyi6xx7f5r3x2yu3fae2f9rq7bre34f7htorcu0mxtymzr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edd89ab4-58d3-49e6-a0f6-d0c9f2630599",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2e37c7e8-1a24-4971-83b5-bd51c6c73c3f",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2124064880,\n  \"apiErrorMsg\" : \"umpexnuf1lrx32a0282v0z72jvoc292x6eqn81y8leoq1ho7vx9qq9w3u42w29gofk0whw52l9ndbyqc34nf0rbbkabzn1bzjqe15tfojfo5h20idmzxvwa6isohbaxmnt4z0fkw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e37c7e8-1a24-4971-83b5-bd51c6c73c3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "feb8ad80-9b2e-4b2b-b8b3-273c39ba85d9",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 90562418,\n  \"apiErrorMsg\" : \"l5j3l5gw8kcyk3w0a93w60gprfzx70hyo2chr3ofxx7bkb7wkrtkn63nw8rzfqcgne7sgqe8f2paxs2lwt2elr2qfdlcqsk44gkb0yo1d2qf23wx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "feb8ad80-9b2e-4b2b-b8b3-273c39ba85d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "145584af-c337-4646-8b02-671b61680444",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"isBot\" : true,\n  \"isExploitBot\" : true,\n  \"isMalware\" : false,\n  \"ip\" : \"bskrqp34gti6x1l5npjxgbarlu2jzumv5vgz0w1g8bqjoy\",\n  \"blocklists\" : [ \"bof8stvzchcsqosgituxj3qys86okxht2hzpdwq8228az7hn2q0832eo2zbgnhdtp7faxfryt2dl31hhklkl78eonpuvfa38r6k0g9gq\", \"unjel86jdu1zn725zx2qgpzuwlnc00pe9cirdumawucr16ky48d42tgelt0yrpad6vp720c0y2tcplmjxoiv3115n9tm17ayp5xibsmvotb4iztqrp\", \"eluqu0qfupa6z1y7ekva7sit87bgbx56o6y4z2g0raiow1iry1p9bvme2dbsip1av0ihfuu3ee4ng63oxopuzh7vvvfbayf6mfrjab3myw204nvrp3zl1noandq2bnbpleg1b26avzrqwe84cl4bbonrabks7\", \"t1ei65fy2qw3gep2k8f6mqq05txkzuck4u9dvf3l63lq1ncub09oh6ybk1bb699oovbzn29c5kyy70hremk8a3ip4js5n2jw22oqyv\" ],\n  \"isSpider\" : false,\n  \"isDshield\" : false,\n  \"isProxy\" : false,\n  \"listCount\" : 1820750566,\n  \"isHijacked\" : false,\n  \"isTor\" : false,\n  \"isListed\" : false,\n  \"isSpamBot\" : false,\n  \"isSpyware\" : false,\n  \"lastSeen\" : 1265111773,\n  \"sensors\" : [ \"kga7c2h18lk2mgkmn6e8fe0bk3384odrc1ouxe19gwknqpl1z34jxb6s1dnwls5l10zpk3ng8e6eil49j2hcqawzzp3vvl1rwbeu5uqchc1bc7adyp4hshp0e7fvzm9704zo0y22ynqixcmew6a113pe9uzfr3id684\", \"n44ucr823ynv3i9mc731bm57a8xcw04cyeq7p2yrwowvrvamu2esg5yfztzkoyod43r1262ga1olzt7d5d99m3fs2fmpyxichi6rbf5nfaf5sdn49xhtyj1337q9z3u117vmbwve1a5ym\", \"925cp31xhf7rg2v5eojcnlftfagk45cxi1yc1wwi6elig6ke1tfmmj07ceghyzts44zphsfi19b893j71j841zs6ztlwcr3ou2tl2c048ws\", \"xb2fv087hig41kheocgsibw5hmvrazcap8mvoatj7bw37kg96hpovqbiznzewegu69hs4s15owyzziarz38rw4gi3z31mkarpig59a7gsz96\", \"szb66h1pldftss1ijqm4f74nv8s671gs6iz03cyndkr0s347s9fr4w1acgiw3dm98di4h8apfmw1edf1kdtto9ns46aqjufpej8honjvytcplujg1m0zi9b8yng17k3dk028n3j55x97m6whl01czagasqtk2rujidydf1z\", \"yc4qk89o1cq4mrs269wxo4rtbu520je2exfqnrre7w76qvjw4ht1s150frgvi3f8qlgf9szjd0eibx3zyarvmygk8al7iwqkd0bgndqbcrxwspm62z111xkesumzpkj7741ysc8iiq7fq795vwvkhw902g6b3gmgo\" ],\n  \"isVpn\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "145584af-c337-4646-8b02-671b61680444",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on (empty if not listed)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "isBot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. Includes brute-force crackers",
                "type" : "boolean"
              },
              "isDshield" : {
                "description" : "IP has been flagged as an attack source on DShield (dshield.org)",
                "type" : "boolean"
              },
              "isExploitBot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "isHijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "isListed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "isMalware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "isProxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "isSpamBot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "isSpider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "isSpyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "isTor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "isVpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "lastSeen" : {
                "description" : "The last time this IP was seen on a blocklist (in Unix time or 0 if not listed recently)",
                "format" : "int32",
                "type" : "integer"
              },
              "listCount" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which sensors were used to detect this IP",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "isBot", "isExploitBot", "isMalware", "isSpider", "isDshield", "listCount", "isProxy", "isHijacked", "isTor", "isSpyware", "isSpamBot", "isListed", "isVpn", "lastSeen", "blocklists", "sensors" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "847483d7-9a4e-47c6-86cb-f24bcbb8561a",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 136665131,\n  \"apiErrorMsg\" : \"vkgk960rwg7nn7i9vsbdo27gfym0g6ljrclgalsqyge5jpmz7cusf3u6lpb8u81i0ize84j69svz1ti35h5fl7g2nftugnl4h7rkrlrw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "847483d7-9a4e-47c6-86cb-f24bcbb8561a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b6d85814-4be8-42b1-9a26-1c84de0b1df7",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1939932390,\n  \"apiErrorMsg\" : \"owuohvkbues0up1s45o1emdqa3s1qsgcmrp7ktxzkztpe0i7l7g0eapsqyneledpwsqiughkvmjveadn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6d85814-4be8-42b1-9a26-1c84de0b1df7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7147c645-d619-4b28-9ba5-509311c67717",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1569248907,\n  \"apiErrorMsg\" : \"kc9v8ag4wdtcopighomtzejwm0cnxaj2e4mrt0zg312znff8ibyz4ggoj4bvb5pu73674agdfdgman0d4on99wmy3flyyj91n6luoxvxwb3t653nryelamnixg9vel9f7x0keg81\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7147c645-d619-4b28-9ba5-509311c67717",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5c5b466a-eb57-4020-b4be-7e3af4d13aa9",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"xha8afjlwb0pbim0s59ij7xn21vd35lo9nmmrfza7rfqv4m2bw7iz3csu0j5w0flgdvlnkvf25xnewf43y96qnhp86f3xzjga3a3n3qi0c1zvztxcqxmdd82pccaniusr7xvdb1j3efdjwfy1ipmbbksrmlqtlk6i7ech047qtnf5rl6c00at\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c5b466a-eb57-4020-b4be-7e3af4d13aa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "738cfe3b-0e35-4213-8542-4de8a0746525",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1302333207,\n  \"apiErrorMsg\" : \"zew7ygvch4lbxbp0mhleubv3sx42d2lucmqv6lywxe8we1r56nteeg2dj8li1bh3luhii4ycct9c3flo72woiqq5o58kkeu872quo1t1nhpfgcns9osdgwmwvdn2cu0hxedxexbrqeg2ds72vvrmnqql6keq3085x9umrv69wgq8ikb224uk29aqs5zi7jx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "738cfe3b-0e35-4213-8542-4de8a0746525",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "73d612bb-30fe-4300-ade1-118fec3f7c6a",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1074893865,\n  \"apiErrorMsg\" : \"wsxvggdv11qoq2he29gsabuj4w30wbkb8cx0rcgq3t2vr8h60jcho00bugjx4dbmi5q5dztogvoz86vmnczfjfxowx853\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73d612bb-30fe-4300-ade1-118fec3f7c6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8eb93fc-6001-4bc6-8978-17a631830b8f",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1673610256,\n  \"apiErrorMsg\" : \"lyvq9fsv9ej30ocz38x57m30w9hcn3k004ohyfvgbdsdw4gzy593kj6h1jzu5li0g8wsfjo2sg980hugovawxe58awkn9xp7l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8eb93fc-6001-4bc6-8978-17a631830b8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.91913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cb41aa73-ecfa-44ae-be13-24e69eb91e14",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"hl97gmd2s5ookxtbahe1498dldal2qdlqyug6k8kqs6sw6ftxtq9tzxsxsguvzmbh5d1ol47vze3leda0shxkxkwofj7wk7pkf54lxrky898falihkf0xrknw07lfre4p6vhqfubzx23p1tt2c5v7276fhqrdggjbry2j8d3ntyp4w\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb41aa73-ecfa-44ae-be13-24e69eb91e14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "652adf60-5925-4ffa-a2a7-1c85db1d2b78",
    "name" : "HTML5 Render",
    "request" : {
      "urlPath" : "/html5-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 300156406,\n  \"apiErrorMsg\" : \"5llsayfgkp971ngf0it1nmml2okqox6ki5punhg464gpof1btqjsysn7lxe48vwht6vgjon2fpypu5da69u1ph8yhrlq6877igrhyzcq7h7h4jo8wgbvk3y1uycelcjalcj2zaupa3hudx9d5ukgsja8k5zduyfed9pr7h6ykwqc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "652adf60-5925-4ffa-a2a7-1c85db1d2b78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.919033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTML5Render",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8c5bb45-3ba4-4166-872c-0c4b21d292ce",
    "name" : "HTML5 Render",
    "request" : {
      "urlPath" : "/html5-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1571956315,\n  \"apiErrorMsg\" : \"9q1r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8c5bb45-3ba4-4166-872c-0c4b21d292ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.918975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTML5Render",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65e1dbef-5b21-45d3-be16-00de74115557",
    "name" : "HTML5 Render",
    "request" : {
      "urlPath" : "/html5-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 74921338,\n  \"apiErrorMsg\" : \"4lk0wkoot4s1i1z5lqymajbginijfjoivt3opp5o3d0gioyaopw84nwudr1i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65e1dbef-5b21-45d3-be16-00de74115557",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.91892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTML5Render",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d0e3e120-8dcc-4468-ace5-7ce8d6ff8817",
    "name" : "HTML5 Render",
    "request" : {
      "urlPath" : "/html5-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"xp40jxpmmaxfv7ob1v628l4zbub1\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0e3e120-8dcc-4468-ace5-7ce8d6ff8817",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.918865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTML5Render",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "86a22eb2-28be-4c02-938a-0b45d0ad4370",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1274861242,\n  \"apiErrorMsg\" : \"gh3eutcakr4u2l49oc74n902z3134xfe4dfb9ko9822enrf3q0gvxkhd3jquekup8nudnxyhmc9vowagx8ox7fyabncvqny4c1r7wfnal31a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86a22eb2-28be-4c02-938a-0b45d0ad4370",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.91882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a580b4d5-fcd3-4b57-9e09-6b43aaac3bc2",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1950096923,\n  \"apiErrorMsg\" : \"2jnigvfv1txe06rdkz3a7cdalaaan2vsbc5l877rceurvoom0l8sy6bzn44s88f96m7jz4ti66t7hwk3bkl3xu9kmueccq3njla4kcxosr79qx63z9d8hsrybscosa1y2yftk9ung4z3b6w6iqcuegt80b7ej6vif8amrhl4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a580b4d5-fcd3-4b57-9e09-6b43aaac3bc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.91876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8c593e05-7132-474e-aa8c-d3a05e18dadb",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1189563589,\n  \"apiErrorMsg\" : \"e6gqxzpec6k5stxvfx33i30plroddkanb07jvshpw5hhfea23elyg5uohjhtg9ir0sacy42j13zy879567mqhpyn4zgo3c09ajlp2pbwr4x0bi1z4v0hhbtyb9mivgex5bg6nmlzwz80svy6wck2kkiu144omzbnkxub986xtegwnhwbf46pqs1rn4jgytsaz9s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c593e05-7132-474e-aa8c-d3a05e18dadb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.918695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a987c7dc-b9b6-43c8-94c3-2086cc179cb8",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"41c70zpxfxy6f9cc0civce9tnajllrequ548t1\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a987c7dc-b9b6-43c8-94c3-2086cc179cb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.918544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "ce57480b-7a69-4ab2-bfd6-59309d1c51da",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 323928645,\n  \"apiErrorMsg\" : \"8q6k1hiu48ki0o7k6pd8gj03kdqcrb8dwarjseit334a3t79y7frq0dcctsypulvdfbdmj91p51e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce57480b-7a69-4ab2-bfd6-59309d1c51da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.907924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3bbbe758-3e76-4b07-bd08-9a3b00088932",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 231454400,\n  \"apiErrorMsg\" : \"4xbsfcg3w6b1f4l9wezbcyqyvd4srbj3e23ta38o9164luo2awhwzdlbsspsmtifdnk5is4etpi7t89y8h9kelo7aip29km7q8k8gg5tyro5srsz0kvesnpys4h60exr3qdpjjbhtp6k2pxrb5gcqx0ll1sk5lkft4f9oayjeeypqzztth\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bbbe758-3e76-4b07-bd08-9a3b00088932",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.907868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f74b492a-e4bd-4b75-9ccb-cfe44b014c5f",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1944055378,\n  \"apiErrorMsg\" : \"krzkxfm96wh5pk4o5sko1le31p2nioh3cjqfrow1ckectn2a42clmj7iz9ommlmiuebrljloy8roar7gro0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f74b492a-e4bd-4b75-9ccb-cfe44b014c5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.907811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e334188a-6120-4645-ba18-8f523d9fbbb0",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"isListed\" : true,\n  \"lists\" : [ {\n    \"returnCode\" : \"riu3upymjyl4nwwusbtl1qvoy0n2mur81eppg7p6k\",\n    \"isListed\" : true,\n    \"responseTime\" : 784829826,\n    \"listHost\" : \"6ayrnshqnid96ofeewj2rdotetsm0il460n1bqmbuzd4xs91vgkcivdhqng8jkrgxbd8p00rway6w54vhuydpdwb7ozunodejb1g25a3pfzdf1tu34qlx\",\n    \"listRating\" : 1163843948,\n    \"listName\" : \"Son Dooley\",\n    \"txtRecord\" : \"50fsj2z7p6zzrb\"\n  }, {\n    \"returnCode\" : \"5d3l7opz72m5v3wyf2dxsuvczs49kwoyil4ju30e10avcklufa7biyucasyinjdu4\",\n    \"isListed\" : false,\n    \"responseTime\" : 734579983,\n    \"listHost\" : \"z9fugggha3jj0tkdzk70bgkw3rkxnnmrswt830bok8n9l2gpiwdmw8es\",\n    \"listRating\" : 723204401,\n    \"listName\" : \"Miss Gerard Heathcote\",\n    \"txtRecord\" : \"qhl90oxqrhzn1pqc1mvcpp7bvtqhcpydlkroc1s28dmmodezy5tc7je6jq6d8nwbtd8te9i4hh5kn66i4hwbeqsgqtqq6faj8lusukncv8ulsmhn5uxuo2zr01s4lp7fmrvks\"\n  }, {\n    \"returnCode\" : \"kod0w6hbpatghj0ghxkjxbc607slc21zno49dkzhmerlk22nya9i9sme\",\n    \"isListed\" : true,\n    \"responseTime\" : 886063648,\n    \"listHost\" : \"8ascn4673ssnc7dv01ozje6257fbg39g8r2mmob4xk7ywufnccqi66seuofh2hvrvrh8txjsy4ysidohtrpdm5eu08ez4e663sj0kuxwmwzvkq22idzn25elf21tp7e5l0t1gra7tawxkcj9zww7zw2jysjbt356pgo749qfm8n5ubvjbyqvnhm9v\",\n    \"listRating\" : 629075462,\n    \"listName\" : \"Winfred Dicki\",\n    \"txtRecord\" : \"h2lccfqhtpuq9hn1xu576j79nzmotmed94k8h2xvbtki9l\"\n  }, {\n    \"returnCode\" : \"5rb5gwsfsi8v6pcjkkpttvcaunhtxosh1edmxfxsy0fdhj9im2cqm3e\",\n    \"isListed\" : true,\n    \"responseTime\" : 1107723694,\n    \"listHost\" : \"cmfqc51q5rbaij51cfiannyc53gd0mple3hdjy96ez347m3npvmxcat87rfrqfsgn7s8q30\",\n    \"listRating\" : 431692701,\n    \"listName\" : \"Verda Pagac\",\n    \"txtRecord\" : \"qd217vzmynj3ll8zpj3v682iidecgb4mr0v3wobtdkxcihccqzyiz67gfjwqpswewme\"\n  }, {\n    \"returnCode\" : \"eauvo5m7v67r6q47bk7ucfcljypr96z4j27psik8wusyx3qpe00pwn7fwy94ftdsgb5eu1ds6g8lr6pvt7gtb2vqzbxixl2tfstp459jz7abbbt5dgw8iol5gmt9sg5oe3l6829go1icmu1f71mrpx11rye138bdbq38ehxnp44wb0unhgomu2md7amy\",\n    \"isListed\" : true,\n    \"responseTime\" : 146133562,\n    \"listHost\" : \"tlttm7se9dia1ascu77k00n50y2gvcqz956y3cga6uo4td4wxqdn8jlfv3sx9qyqdpebv1tscpdpxjm3f88w\",\n    \"listRating\" : 656171728,\n    \"listName\" : \"Grace Becker\",\n    \"txtRecord\" : \"a6ch3hd8t3pmffuv3ndsoso0i5df3y0uzwaozg2l8664m63yc22eyh3ox79nd5cetlfewxofsd527y7472vxzi\"\n  } ],\n  \"host\" : \"a0nwpcg8512v33ksdh01gdghod6obiqwx7e2rm1is3hr5yan28708ef9maq3gq7gizu6fv38xndfuhyomyojcjdbfi8l5gvzbzqk8a6kcdffdjfjl9cawy5th6mczgr7pfmerp59lzm6npbt\",\n  \"listCount\" : 1020057401\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e334188a-6120-4645-ba18-8f523d9fbbb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.907752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "isListed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "listCount" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "isListed", "lists", "listCount", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a0f22dd7-b4e3-448c-8254-7af9e2fb667d",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2082454124,\n  \"apiErrorMsg\" : \"wps3is8dtaa8lojl8gl96xbdaovthvrdsmwcix32222pb83olvdd0y419zjfm399784njvje4ae0e3s833u01brrrpptafxhmkkjwv2jzrzmo111gh93cw7c4h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0f22dd7-b4e3-448c-8254-7af9e2fb667d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.907166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "86dad6c9-b155-420f-a1e5-ac617df88522",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1755679883,\n  \"apiErrorMsg\" : \"909afjhdeujwi3sti5dcw37xrhjog7pvpnvg39xlerhxnzt1l1cl5tqqtrvblfkwhk7j655n8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86dad6c9-b155-420f-a1e5-ac617df88522",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.907109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "73617817-ee25-4560-bb47-5c2b2e7e1b1d",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1704362078,\n  \"apiErrorMsg\" : \"yixpbnkheaaejeqh65ax241bhj3bej81qaddft0orhf7hjkbrxog5zawx4brtnds5h536fizkd4wmep9mkrwnt3aw0emwtr6z4gdlpzuhi1xq6ps59kdeh0up3bbxs6jdwvmjwpke4v74gwke867wj00kx2etixnqndnmc9647tlo7l9nx1vtd5bdv0gzni2pzf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73617817-ee25-4560-bb47-5c2b2e7e1b1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.907053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "89f18f61-a7d8-4ca5-9368-913aaceb7915",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"numberValid\" : false,\n  \"country\" : \"Gabon\",\n  \"internationalCallingCode\" : 624660865,\n  \"hlrValid\" : false,\n  \"mnc\" : \"b9o4u9y77qkhoe3f7kmp9wm3q7hgc3bov6du10fz64t1wqj8m372j644mjt0lvmuf7r7e6g9lul2v7w3bbgqxiczthacmi9k9nb650p39kghd560lwoga7nhr5r3dw4qbq5x\",\n  \"numberType\" : \"tk5n0ftt1yb6iyr599lv82clos8z9436btqvoqdov7f47mvfmtkg0whui0hyz7rbrx4tk8lkrst9b1gn5l7kp3hb4mdifoioga0lw1tfl3tdhw67csh08aaork2y3i8355t93g5fxdbq7udxqwe6s6lwy7f6xh5ic2fzelxocz9yektu7g7ommi\",\n  \"isRoaming\" : true,\n  \"hlrStatus\" : \"f3ea1309ezjoauw8rwezl3lp9p9txn9roksqp5ceh5qon45f0ymw59ii58s7rayvgfbxxg2piyuevhb9se1nh2rzzkac7e9m4b2pngbgzhns3lck22upy3tid7k5outy1ca2oqz4qqisvr9d71xl7bo4mql93zwxieuermm\",\n  \"roamingCountryCode\" : \"ggggr\",\n  \"currentNetwork\" : \"8q9njpy5v55ew64e7ed1frs4igjuvw4acmji1bddsehrqyvx3fjwmj7yd8l0haov9fmmt3sqqei5c5pipwb9dvbnck2002upa05u00p\",\n  \"portedNetwork\" : \"9hufzumqb49gdyuwpkg9bjvdesq5m5e7esb9gtnewrl3wi7k3wn0x\",\n  \"imsi\" : \"9es3flej2d0nm3xix0orb04e1m8o556cc6s25ulxix25y7dja6c2qgz6z9foumbagqt5murdw1wg91pvihsi0oc\",\n  \"mcc\" : \"ix56127dcxhi\",\n  \"internationalNumber\" : \"h6ea448id3pg7ihdfygx1f4w16mn5d5ogb2dy0q1741kukvok1ued60czuv64ugvfxwpl59h94wx7501dc9p8wwu6er4k8zfwi5h9xurbi0xzxz97ml4uen0vv0q4rbr0v072foh9no6g41298ixn1t5a9vjtrrfumzp8\",\n  \"localNumber\" : \"3exlfes1trekey0b\",\n  \"countryCode3\" : \"rhi2a7ls6z6350v5hda3782db92p6glhiug1n836rvyafgo4aq3z834jvn24655gqt4n56l93pq19epay0toph\",\n  \"countryCode\" : \"iiiiq\",\n  \"isPorted\" : true,\n  \"msin\" : \"0o1hia6o7ocsgl4wpy3i0vunnmf2expjqdy42vbbh3dngprd6wng66jk1uusqwg4nbuqyi6k0pju1o66yodu91hjw2wctovugn7pd6npe4ic7pznqshlusaf3mwmux43jsrkdhe1vehymq4si7aklncnaebc7ya1we2x\",\n  \"location\" : \"itralt2doyl4xm6vkj3bxrlap35t395ie4qfiicxdg8aj22yxrn6wu8kyjbz7r825asegzp9i3vhw0pyot1jvznz96sru18us5lm9lrlcsqzw43esq8yxmecysjhrvhomkace\",\n  \"originNetwork\" : \"sgxxed3z3ax4759vhh786g857jp75bbuxuhpb3pg61181ayd25wo0twq0xtykqrjvsvj69kgw3fzi99by6zw92rmd1aywam3j5p9z9ho1ijg66m2qbhabq5ba3yl9e2e083de2qz040f5m2mqal409fy87mdj2m3vrrebh\",\n  \"isMobile\" : false,\n  \"msc\" : \"z57ntlb4rgzjkbuvi7bo4q9qio83lpfuq8wrvlwrzb84sgp5zjr035ayt6eh0auxejj8g4egsw4z0nrnum30fnv19jdr63siiitzlh2fauc\",\n  \"currencyCode\" : \"MRO\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89f18f61-a7d8-4ca5-9368-913aaceb7915",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.906987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "countryCode" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "countryCode3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currencyCode" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "currentNetwork" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlrStatus" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlrValid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "internationalCallingCode" : {
                "description" : "The numbers international calling code",
                "format" : "int32",
                "type" : "integer"
              },
              "internationalNumber" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "isMobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "isPorted" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "isRoaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "localNumber" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "numberType" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "numberValid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "originNetwork" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "portedNetwork" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roamingCountryCode" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "numberValid", "internationalCallingCode", "mnc", "numberType", "hlrValid", "hlrStatus", "portedNetwork", "imsi", "mcc", "internationalNumber", "localNumber", "countryCode", "isPorted", "msin", "location", "originNetwork", "isMobile", "isRoaming", "country", "countryCode3", "currencyCode", "roamingCountryCode", "msc", "currentNetwork" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6e7a17b6-a7f6-4f63-badc-672f7fbd237b",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 294373175,\n  \"apiErrorMsg\" : \"2lfhlwowiyfuu6bz7glixshdp0yfrsj3qmdzce5r0da8n5oy5wcalbo0edbll7id1fe2don9cxydg0iph7txxrhmc6nou7ke907q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e7a17b6-a7f6-4f63-badc-672f7fbd237b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.906419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7eef22b2-e64c-4255-8102-d035b13385af",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 321849206,\n  \"apiErrorMsg\" : \"elslfzjcdpmzlf0r0rnnlx6bw2ogehhh8felcb3ka6x49bbk5xcgdc24zbtgr95t2fysz4c8k85ekbv7s85b0moj9lr5hiijzsd3c9a33qv0yvthtuuqodqgt42o4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7eef22b2-e64c-4255-8102-d035b13385af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.906361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0b5f449d-48b8-4278-8922-ce01b395c2dc",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 714601868,\n  \"apiErrorMsg\" : \"pjlcqbg4lh1srt205xxm3z8wvnebq3pdy5pev1zqohvivtsyxnlwb4d0hldttu6r1tydz6jxiirghe4uocg33q5ozyessiq5xwvw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b5f449d-48b8-4278-8922-ce01b395c2dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.906305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "045a3506-f816-4c01-ac14-e75cba2342b6",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"United Arab Emirates\",\n  \"address\" : \"zn8w4xr5wrsv8bj2afjiewjq1mfnov1v85wx8uzepbzmtti57huc4yhrrk8q08sl63j5ad5xs0di92dzck5kzzhehdos1lh12d4mem6byei2fxxtk1pm\",\n  \"city\" : \"West Wilbert\",\n  \"timezone\" : { },\n  \"latitude\" : 1.007135554318215E308,\n  \"postalCode\" : \"16587\",\n  \"locationTags\" : [ \"rfrc5nnv7s4sxphhdp3krg9kecigmnvw1bak0juf9pad15stk1272mjm6ssy22zoupibeb9zb4m9y1lvkp0a2phi0cmha0j\", \"vasgsmfs1qtx308mb5ch7qttxiyou9xl69zzreq4vxsgr20m2yl9gsbxhw3xqe9tz6dlusvl4bg1173sy74gkjc00rmr38j2701hzkx0g8bbt7ztzkjemlt3n2jbgog\", \"j27s98jpg5vmpj2gtq6\", \"cy5ez52\", \"sfbvxyrtkez4yndh3dsva6qbfmb2ldnyj0ae4k0r6k3k0xukc5a40ywrc1p72s5b7ozypjzsbphiciu4kiqsdh9ayu043nb78y8ns8fki3xvfxcdkwlrbwt2o6qhtn1e3sdpyec5xdrdqfg3ray5lmo43bk2tzgv\" ],\n  \"locationType\" : \"rx4rhpxmpik6gb4ae2q4r40ktzm1trr3bjfzlni6f7wgy77q03fwpng9ssv475vjssz8dt6g8pu9255gaqmehp5hrzirhvwwj1ep6bgfkvg87on4fe7svd2wcqt2rwc\",\n  \"countryCode3\" : \"a7rknuge8t84u8e0ruoiva4z4ap18dbskkojjsnc1k5buftdryqyfkms3qnnoiz7n30hjozb3zo63c8lpnn3dmptuw1w408j2ypi4t5bbtag239iik1pav4ikzg6ruz49rviuz1sobj7f1de82xkqbm555vamkmwwqf99ygbaoqmucxpiw2s\",\n  \"found\" : false,\n  \"countryCode\" : \"bbbbz\",\n  \"addressComponents\" : { },\n  \"state\" : \"Idaho\",\n  \"currencyCode\" : \"USD\",\n  \"longitude\" : 2.439271546632689E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "045a3506-f816-4c01-ac14-e75cba2342b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.906242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The fully formatted address",
                "type" : "string"
              },
              "addressComponents" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "countryCode" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "countryCode3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currencyCode" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "locationTags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "locationType" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postalCode" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "countryCode", "postalCode", "state", "addressComponents", "countryCode3", "currencyCode", "locationType", "locationTags", "latitude", "longitude", "timezone" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0f4bd86a-8da0-4b7f-9216-f6777ca0f729",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 60333837,\n  \"apiErrorMsg\" : \"ip1qfrustg8dwwp4hgtibebcuskmbwl1fizy81a5npj89akuea61vd9f0mh5qio0n9dt5yrmcdy3gzokmhskz5qz4d7phceqh00a3296bllhsliyjwz3xjuf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f4bd86a-8da0-4b7f-9216-f6777ca0f729",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.905775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "066695e2-21e6-4ad8-9334-5b82476eaf0e",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1810336551,\n  \"apiErrorMsg\" : \"yypei4urvji7f3xtgtphv2ig51xdkkvoc3vzx1wdq3u9kfgbxa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "066695e2-21e6-4ad8-9334-5b82476eaf0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.905718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "04b908df-108a-441b-b870-15eb5b61e075",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 649825539,\n  \"apiErrorMsg\" : \"8kd0u454wbx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04b908df-108a-441b-b870-15eb5b61e075",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.905659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7167ba87-99e7-4534-861e-7c070884dc5c",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 1974575145,\n  \"locations\" : [ {\n    \"country\" : \"Iraq\",\n    \"address\" : \"rhnop4qckbl93dn7vbnt3gkzrswcyix3upa59mlxgkdo957cut30uasdx7qs7tvpif4cztr6o5abhv8b5gkf5uubf76ypzoetzupgs9d39f5ufi0k7yrhplz7owxchn7ttasf8b04ofahkg7ripbpra2n\",\n    \"city\" : \"Lake Lavernton\",\n    \"timezone\" : { },\n    \"latitude\" : 4.5164992471641E307,\n    \"postalCode\" : \"11425-6226\",\n    \"locationTags\" : [ \"bj1mxmk7e7mnajl8plgl68mej05f2o5jnnqxzu4qhpbund06o9kfdrn87urewu3sd4j7c3bcut8uy37k61hm2p8k7xprttmklrfoergimbudmkc\", \"6qe7ak3cosjgt3oqdae2wv045ebems01remficey80z1xyypuzaas4dci5rdfmxl\", \"a1ia65indu1hprx4ny4aahombyjfl7zegujpdpme0eaz\" ],\n    \"locationType\" : \"05wiwnzsmdu7hjc4rq17bhx8y2tzu4rt94wb715ybe0u4mtdwz9veoyfhpphxitsq010fb2s6xvy7wyrm3kq93sdk54vx1ta3x7d3r27t2zj58ejnat\",\n    \"countryCode3\" : \"b7v1fsxwgxqcl2gj7wn7ti2kotdidi4k12hxvcrkio3cnc7\",\n    \"countryCode\" : \"ssssa\",\n    \"addressComponents\" : { },\n    \"state\" : \"Iowa\",\n    \"currencyCode\" : \"HKD\",\n    \"longitude\" : 9.097055154130264E307\n  }, {\n    \"country\" : \"Congo, Democratic Republic of the\",\n    \"address\" : \"5gy1d1c5gypyr8mzp2bkzxs8eek5tbj3\",\n    \"city\" : \"South Jinview\",\n    \"timezone\" : { },\n    \"latitude\" : 3.482652396764289E307,\n    \"postalCode\" : \"58909\",\n    \"locationTags\" : [ \"awkfqk3rk3f39bryp8pb7u6d9kuou4203jivr0ribx6d4v3ccc0n122we9y08evgdcnso1szgndxekdkq7tdysxc3g5wrfazovpgympzew0l2u3davjp211p8cvzt85i\", \"rdfsqozbcd2rftbr5apg69606w6mhmr2g7telnu9j4jtzjzwnd6rlrlmz4tpn3kh239cccdtblw3nxflacmootyqjs4mm9uqcmww8gduot0gv62336f1fvqgmd5abded61wrzau1p83a5265mswbzxxfwr8vpjzffb76taw1sy5\", \"u6qhbizbfjn2xnm12lg2re26j5chhce2eh42aqyc6msudkbffd54ksra9tqpnwgf16dhjy23xslo56n4up3dym55jmzyel7pgyi9yp5gdhvd8kn4am8q0yvdrdk82g8hvdnsgezoeeb4qmi\", \"3eaz3kl48fut6tiau5jhr5xowr3j48njd6y\", \"3eafhc5ercdlwmvf5u9hnc4bp48ookblm943dr8ix2ypxyfvg9xjpdp18xw6c9725mfp73of5vz5t0rqhawy3dmja7hdgirc0bou98vmy85969pvgvb6jsbwf477j7xuoxqqsb3ql93hgsv3hhezqvgk469u6t0wwzydo2acwd2l590l5v09n054rd4\", \"qksh90lst9obmne1xbmx9b3hka1n7aszmom1g5j3f3cntn13k84ev1wmepigy8o8zfkb91wkqxsymzfojqru94h8q6iezwlurd2rosqzhllwfzdcts9ezkum9\", \"cznk01j90aredt8zjl8xhqh8q9og9j7fp1em3t22ksdhccb3596nqh4u74l4ma0y088dmv8mklj9fsavo1gnoyxdfl0xphmrfqbwdlk9kikvvntv3qem8q2usak130675a9c74j7o2sqcbrbwb1gp98rcadw3r491l61wk\" ],\n    \"locationType\" : \"9mqhu68k2mxrdtcx1u5xl0tczqemc5bwkzdq1addgmnfe38w6wwe5hedwxr2ecbx56cx26n7tx537kpp7afodp1p6lr7e2am70depe0ys3jaberrw38ql85t8icp6lnjj3yqb0sbf09pdq5oha\",\n    \"countryCode3\" : \"bx42gtnik8ede8mti46zh6759pfw0z6p2c40z5y08bsylp\",\n    \"countryCode\" : \"ggggw\",\n    \"addressComponents\" : { },\n    \"state\" : \"New Jersey\",\n    \"currencyCode\" : \"AED\",\n    \"longitude\" : 1.7445515943817584E307\n  }, {\n    \"country\" : \"Namibia\",\n    \"address\" : \"tdf6xkl4p2mpiozab05616m5bqauiqfri65tpz8sx2wooc7cqnhzcsp1slwcanlsys0tv24okcr66n4kftg0q2i1nvy2ikxag3kkff62ck9yaf5w4ybhzfgmo14urlg5y361np5e3pweku60niwe0z4fr7jzr72eqfo7hhnli\",\n    \"city\" : \"West Elsaport\",\n    \"timezone\" : { },\n    \"latitude\" : 1.0369192654805866E308,\n    \"postalCode\" : \"86478\",\n    \"locationTags\" : [ \"p8f132dz4nznv42tqpfuwqgf2y01ltep6r7q6aqgp52trf3rrf15kivfwv0tjkgrui5rr2tcyng3h4864vpcj\", \"2oyokws8pui14wgev7zcda3ck30gn71g8tkjtg92sfagufcl8zoihbp1l\", \"21obah7kypzdpkcep7fi23i7oci38cbr82itou1ne75z7od9b0nii4\", \"309zj5u441f2tapf41bj3ltjqcsw0f1kvp9opfjzaz9bhn9i3imwr2ckzh6lgx4zcqpz14t0zv4o0suf81gejcylvs7rn6d3e8asbgbxxwhoediq0e1t37ucor0vcgrfyi2lizas1uqoe53bfarsujdn5i\", \"c64u9p3hje2vqdacfk1jronxnbo5ssq1mohri75iy3x8mlb090stt8mdw67scuitqdmreuf6j5umnyvli4ak1mvqdcv9izxz2qta2k42d017vo8yyzez1u1xioyrant463k8pn9sxv2gc36joe60rgx1yzqcgmhv\" ],\n    \"locationType\" : \"uzu3baex7m8wvn29t1u3hkp1ge06ujk5q3e7pu5d8g1jsrwb3bik6wt3x0jjw0qxktnbpcfaznf3nq2amepv2pzf4s6f1ry8g9l6mopuqgbgoddvhx77g35d04lpbn4evk4ovo2r5xldvg34hojx21xpii7i82h3o9viujaj7l5awjeeo\",\n    \"countryCode3\" : \"503uh32nn9yfqnlm6wu188h21onv05apzti2jjjsl7bxm3bbmpa9qkmdjvoqrpudnz8jeld1i48dl1v73lv0fdm7weewva352rhpvdk0361v2e6pp6t6859w2erqml\",\n    \"countryCode\" : \"zzzzw\",\n    \"addressComponents\" : { },\n    \"state\" : \"Wyoming\",\n    \"currencyCode\" : \"LAK\",\n    \"longitude\" : 1.7152691205111182E308\n  }, {\n    \"country\" : \"Chad\",\n    \"address\" : \"ivx7knpirsouitgy25qfng8k1abnzjw3gb3360aj0jw5hg528zfwnojx2mmmo0w65ka95us5ql6sttk8u1985v1ldfsmspn\",\n    \"city\" : \"Emilyside\",\n    \"timezone\" : { },\n    \"latitude\" : 1.0957921816714546E308,\n    \"postalCode\" : \"53668\",\n    \"locationTags\" : [ \"hfkfk0avvukub3e0w5vu8tp0f6y7n4vshz87dufx4wecclp8qjlffecz47ho99vpwwafctap94scfyb7c14vaa\", \"ysyb4rey36toyuma61qcha1mc71ik\", \"1x7t9bjhbhs8inm4ttdrqn2xonsqezicxz3byg5eyf2qkttfxjyvarm8xtey58lmmdxeejbofmwjl2q5f3zfmh\", \"cfvwiv4w7iav29ldz15nn0uhxo9kx7gfkmktjlll4xsuy6ewg1j35xbn118tomersbkiknf9f66q8hwo8oneqm2mgfy2bp2\", \"avl13eq2fyh5rnzcb2k7w1fp5m944da7tkre56i1xx5gfit3i9buytwubargvfdyq79w60motrhb2ir0hh4eb981qeeavsjyxl9dx6ycfzkhdx6ettpmtr4vq0w5wc01hs9ljtctxbw2edijn9gafv7xi3fxn\", \"icqkrq0wxskljlbo1eem5fu6r63e590g8nf2pzx34gwwithundbdqzug25xenjph68ak2ss9ngwd1mjumpwotyynqu8t854fenz7vumamnc3sms5tduth8rc9p8r7rto6laro1n\", \"670jwtqhne9ao7jd94h19x5lehq351iim1ke9abjs8orn0k9e7m9b1wwss0us6c8yi7197e5o275ypsyaucnnj8f61l3lgauj9dc9bn86sizqf2xeazkfm77ghwow51v5v67km1ghtdva1r17n4eaj6jmp40eddowszujtt\" ],\n    \"locationType\" : \"x2y7uzb5dmmtbwxb62vu6iw8ef7p3ijbobmewbx6okp2tnqxaunwb296i4ho7di27kv49knyeimq7r83ttynpsceu17q83nznst\",\n    \"countryCode3\" : \"1089vzt3rinol9y82jebqrtebfwi7c0mfxy4irhxx60ibswgo7roapndhe2a93n3zdncdoq960xii7lemrhoh7cqgde6oqzohqjx2s9tklds4to76i8rg99fgp46irjhq0ujrh5jd8qn4hta6\",\n    \"countryCode\" : \"rrrro\",\n    \"addressComponents\" : { },\n    \"state\" : \"Georgia\",\n    \"currencyCode\" : \"PKR\",\n    \"longitude\" : 1.10123558655198E308\n  }, {\n    \"country\" : \"Nicaragua\",\n    \"address\" : \"kwa2g4xeurqwjpxuci5wkli3ed59izlajzlxph6tc9iitz6w4c89o6a0bfsiq18uuu1ywr\",\n    \"city\" : \"Bernadinefurt\",\n    \"timezone\" : { },\n    \"latitude\" : 9.930914026134557E307,\n    \"postalCode\" : \"82240-7063\",\n    \"locationTags\" : [ \"4nnjwe0lxs46s1v5nasppmerkmdgcrkeg4p8rjw3aq4opu6wj2bz2uao089rp4m4ewyc0r1raw3l3wvz8nbhmkxdp7xym4s0vo96k3a\", \"cyto5bulxlk6lequxajephamzj888zkgv6ejq1yyjp8j2wzq207tdqgemtlmylxnvztkuhntb0zqzyoxqrmk33o5512ccsgb5rt5mcfaievw13z75ddiih600yzersbo7h3xiivl3bf4goyf0\", \"31ermvlaj8dyz4wf1ab2e9iadvi47uksdvvd64qa91kvc0tnyjyw776mm6s8ug06aj1si2xoeq9z61po0v0ebixhd1d941xf69zh6ght8xne4fjz0rg0tz3ujhhbcx9kykq92mavefbo0qbn5mbe03wyuhdab995txeeidkd\", \"3swqikp4pwzmonnnr9lwlrg5ch1wanulg7jjm33rjq2b7s8dcvqjwuttn16io3uyex78dvtgwtgyysczcbscilvxmc2y84021njdxlhk3pd9r7lsosmnt4ylmanekr06l41bne0\" ],\n    \"locationType\" : \"hzyzc7t4tpyjr3ia8jsfpybfrh54j4qc5wa8n5gy7xy0bpye06nednb6x9uml3z0912qnh\",\n    \"countryCode3\" : \"v6fcd9pi4nf0mca89e3g1vl8vailqvjb7d5c6utm1ux61k1ssfkd4067vib7s2v72lu35xsf5nx4jcflv9c182ssg8kqg4wbg0kr7vpt5ocqajgd7i17xpx\",\n    \"countryCode\" : \"lllla\",\n    \"addressComponents\" : { },\n    \"state\" : \"Arkansas\",\n    \"currencyCode\" : \"KWD\",\n    \"longitude\" : 1.7683435355533044E308\n  }, {\n    \"country\" : \"Lithuania\",\n    \"address\" : \"ejgngcslexyvwanumodk9mwpxt99\",\n    \"city\" : \"Balistrerishire\",\n    \"timezone\" : { },\n    \"latitude\" : 1.365244812260786E308,\n    \"postalCode\" : \"12541\",\n    \"locationTags\" : [ \"pucwqhkqx2hqyn6iyoaf7eh6my1s0hup94bypoh14onq2arw8tru2fjcik4pufra2hsf999uet3muopoxtpkjpfh2ezjeuv44nnwko2keqqbbej8q6h2a3thflzhhjdyszjr37qwnpfnlv72l7lrm2lmnqzkzy7d4i031zue78\", \"0j9b1lofjuwngepzz5rbig2xsuf5z78zkfm4z8cau6reyoca1ga97lbrolmt7d0othwbkkvwwdk496tjnaluuyfdcxj\", \"q4mnkg9dvtbblwfx5hhnn0kgmjnyfcdsj9iyiaerfecy\" ],\n    \"locationType\" : \"sorbwnmj2ljyv8cpb7jysj37az5qv0uvgb8iukp73wzka1uauoo0f1u6zopi7dwl2xx48r4p0asytphiaoecchzgt6ooemh48qbuoz8\",\n    \"countryCode3\" : \"aqw9vnartkpo6oula1grfkboa2norgx3cgi5mobpip03umwe6eya8x8wcmlq8ylujhx446c4txii7li84lzirchl9wf6xozw7qx1s88li75wk6d2i57ynp1su9ds3kwj32ypolbewwyn8b98y6u3kdh0nhjg7b\",\n    \"countryCode\" : \"aaaao\",\n    \"addressComponents\" : { },\n    \"state\" : \"New Jersey\",\n    \"currencyCode\" : \"IQD\",\n    \"longitude\" : 6.201688696090945E307\n  }, {\n    \"country\" : \"Peru\",\n    \"address\" : \"3bo2qlo2d9it1lfp94fi7994wnbmo2c2c2x945pips13476xxiyyihfgwms7oaegx6fa5yqfihi5zv4efugx33oynidynudl81yxvig8bx0yu7ssxr85tr4zbb2ix5ja3cdqv7zq4v4lntewp7bkexg\",\n    \"city\" : \"Corwinport\",\n    \"timezone\" : { },\n    \"latitude\" : 9.555818284044E307,\n    \"postalCode\" : \"88384\",\n    \"locationTags\" : [ \"1dkk2ber26vvjuz69flhhlmksfsyr3fqfuryygr9l6x8u0bidjb8o8d4n711q2a8z2yfos48yb2e3dnnuc0ta3k64l6za30hh5iwf34ucq0x\" ],\n    \"locationType\" : \"4z6s4hik1da20k89477psjizss7wcdqe7qgne25rk1qwpyhpvbekxqa5jm7d0b0wnnxfh7yt8qwtxd1209dvg6elq0drc8rwnorl2gfgqqeoml4vovohjozn93nd0w0843rk01h2yoyqy2jpnznut49739jfh266yz6pr56wwsaat3p15n2vntrxhsrmiv6z5j6fw\",\n    \"countryCode3\" : \"izgcj4fd2wcd0tiwryq1n3c51int1gmoiz6uqmsn0qnvtc72m61pr6zpq\",\n    \"countryCode\" : \"ttttg\",\n    \"addressComponents\" : { },\n    \"state\" : \"Connecticut\",\n    \"currencyCode\" : \"CDF\",\n    \"longitude\" : 1.1966240712365072E308\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7167ba87-99e7-4534-861e-7c070884dc5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.905582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d5c33d51-732b-4be8-8b70-2cd7ad4c8950",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1030568927,\n  \"apiErrorMsg\" : \"pja1mj9tg5vtshuui2icd7aj3j0lx6th713g40lc1w9usyokj7yp7bklhycsszhwle8i3sin5zsg7dt8mn8i9dq19vql3w4ldc84sh61errhw9x860f4iqorb7n9v81dpm7k6b3kmsiw0ysl7zbor6xbrzar8wrgwge4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5c33d51-732b-4be8-8b70-2cd7ad4c8950",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b73f22ae-6f51-4d80-aed7-da384e5aa0f8",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1202930070,\n  \"apiErrorMsg\" : \"gcc83z87bpv39we62x5s3qlnccdbod4k6swvednpc48ntepvsn65xx7mwplxzgtv1sr96xl6k5tonrv9i44hqfd5hb4848uctipmha55mkyvt7oyfwg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b73f22ae-6f51-4d80-aed7-da384e5aa0f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aa8ca890-c759-44c1-b9ca-01145d80378c",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 62341709,\n  \"apiErrorMsg\" : \"dskqh1bmii6mc50rv5f3hkwtat1t6f9ny7btn2w4wim7628kn38xxelztkux9wujqjim20dhpwtjb6owwfcjo6b03iqagb6wlojan8y9nsdj6gdomifk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa8ca890-c759-44c1-b9ca-01145d80378c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "efd97b53-a714-4df3-b6b4-34632989b869",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtpResponse\" : \"qno768l9\",\n  \"syntaxError\" : true,\n  \"typosFixed\" : true,\n  \"verified\" : false,\n  \"isPersonal\" : true,\n  \"domainError\" : true,\n  \"isCatchAll\" : false,\n  \"valid\" : true,\n  \"isDisposable\" : true,\n  \"provider\" : \"vrwy7wnh7m91kr9cqnn863trhs0rsxe7vj9aln9pud4t84zvdh7qy2l3\",\n  \"domain\" : \"t0sqhxc3f2hq2xh3nv14nt0w5jxwuwymjl4uln9y0w1tx2kk14j1r61678hfyuqwujp520wbrxgwq7usvds8fwjjldgc7vfaz7n4mldmmstco5re5so1kpwd1zwc6\",\n  \"isDeferred\" : true,\n  \"isFreemail\" : true,\n  \"email\" : \"4gvv7o3k9c4gqr1yy3iuw2ktgsi0a2fo3pv47gh8eyxthgqpcvvl9v4m812\",\n  \"smtpStatus\" : \"7h5np5pukuxvoej6anjc4dy69ouvstjqv1ys7zd7f7mpztm0sj6q5rkvtdwuktlx3ek15aop0u9j16c50f3v85633j51pxg40xu2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efd97b53-a714-4df3-b6b4-34632989b869",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domainError" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "isCatchAll" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "isDeferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "isDisposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "isFreemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "isPersonal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtpResponse" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtpStatus" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntaxError" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typosFixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typosFixed", "syntaxError", "domainError", "domain", "provider", "isFreemail", "isDisposable", "isPersonal", "smtpStatus", "smtpResponse", "isCatchAll", "isDeferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ba0f72d-80e3-4c88-9109-166e5dad807d",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1049593888,\n  \"apiErrorMsg\" : \"ymprh46v3bsq9my6tpyxubgra0zaujk5xmne9n25up1fowf8xea1ik6hil9bte05ik2ppbuhk3ygsha0t383bxugo97e3q3bvh5j0xjnripid1vwn69ed5hisrr4vzm9qmocml4ntk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ba0f72d-80e3-4c88-9109-166e5dad807d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f539928a-5641-4aa7-bd54-b7b8bca18912",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 884863971,\n  \"apiErrorMsg\" : \"nban9i2l2jqfrpy9zd130d4dypwat8yo25z8fk03owgrjqpj9g1zuxt0q313ib76j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f539928a-5641-4aa7-bd54-b7b8bca18912",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "621bb64b-73f2-4e0a-a867-27a44437c386",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 871851121,\n  \"apiErrorMsg\" : \"ucg4zb4fhkfotx2nsxteit7o7qjcxxcj8bcwrwxeb86lba0pa98heggse1zqnd6pkshr8h4kxyymqncdiofgs4g6wcdqoptw0v23\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "621bb64b-73f2-4e0a-a867-27a44437c386",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "94b3ecb0-b5bd-4414-a807-cdd669a0728d",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : false,\n  \"isDisposable\" : false,\n  \"syntaxError\" : true,\n  \"provider\" : \"tmjf6pc5tyiuonwvhnywpmrcdhsihkwqwep18o2hof0jlsauep3hgzttlbxmp6gdbkqymhac7nkiw40t4looyz9fbabpz01t8ll1bqea2ykrj59w2sh2kqluk3u4si08doqcw00nd6fdfh7zawzz58qbe9uvzsl41ap01nxkc8e5bmkmu5hn6l4sf1seh\",\n  \"typosFixed\" : false,\n  \"domain\" : \"m39mfsd9g39i25s5as1l99rt9bkrb42rhjazq05natdv0yq7y7off97bhr57aj039ue31dbix79h8gi6yjpekcgtw40y8ujvdgu7pf7e6k7y6hhwbjevcy91vzavzhjs1g1h2vt8jpvj6v7trhncbkh21j9dtx1xp3hi87h4aqew\",\n  \"isPersonal\" : false,\n  \"domainError\" : true,\n  \"isFreemail\" : true,\n  \"email\" : \"329h3d4ytytchrqoh5s3bcs2sdq24z85f4x4jte1ot25gsaz1rm30do1t7ge99uks2kblutxz9b8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94b3ecb0-b5bd-4414-a807-cdd669a0728d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domainError" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "isDisposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "isFreemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "isPersonal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntaxError" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typosFixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntaxError", "domain", "domainError", "isFreemail", "email", "isDisposable", "typosFixed", "isPersonal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7d40881c-c460-4010-af0a-f9c8e1b9516a",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 836594276,\n  \"apiErrorMsg\" : \"g5srsj7mum8u9tyk7iittk6k7clujc3wivmuit8fsin6plk4x7ffsm3ncmwshfpx0h103v525afbqvzivmjj836bzp68di23w9byfw7jf6dnu8fgexdox4gy4rf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d40881c-c460-4010-af0a-f9c8e1b9516a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.903069Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3c00f41a-0e7c-4e9b-8b2a-599ff4f0886f",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 433169578,\n  \"apiErrorMsg\" : \"9cywz3ashvn7fexe6721kuu80g51fllfri3te3xdaxupxu334iz5fa2jcw6uod7u27485o3f7wucdrt2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c00f41a-0e7c-4e9b-8b2a-599ff4f0886f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.90301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "59d6e1a0-44ca-47f7-8e14-3de3fd0bbcb9",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 351695760,\n  \"apiErrorMsg\" : \"btyzuxmb9wpq6mn391rn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59d6e1a0-44ca-47f7-8e14-3de3fd0bbcb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.902953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aacd6c9f-4eaf-49e8-8f60-da02a2ccd077",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fromValue\" : \"k7uivgf3ux0jq3vei9s8g9u6bdscthq8ui3wt9ss7it3jn8kjtgkizevrnypbdj0wdpsgh2axtaq2wugogp1w5e0gncc5frdv5bjxv4ylh995cy97dlvdpsf1rd40v8lk5654hbygipnd48t65ny21tuerpd0so\",\n  \"result\" : \"44ilbpnu5apc7f5mpahfds2\",\n  \"valid\" : true,\n  \"toType\" : \"y4n15x9p18h9zr9v3tywsmgxz5k15y8kpl6emrqnb522qicsfurhgpjuah35jc2q4ii3vcs0yjopp42tl9j3roawxvel5cde3c3ck8t0d2lybrmttha8kxdeiwavq2g4t59uiyeudf8o551az8cojprmi5pi3dfkn60kcmigdppz0ua\",\n  \"fromType\" : \"ewc7m3t13jccu96xifb9trzye2e17599ts9vb8uqdfhix5b2ne67arjcmzeo3f1bcegcqgmr0x5z36o5ejmx7oz1yzfsww7zw51jez485xk33c0ocw1ifnwnd810cojuxhf4v2\",\n  \"resultFloat\" : 1.2324404944092028E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aacd6c9f-4eaf-49e8-8f60-da02a2ccd077",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.902896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "fromType" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "fromValue" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "resultFloat" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "toType" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the coversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "fromValue", "toType", "fromType", "resultFloat" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "030bced1-2167-4d8e-87ce-bf0205aca5f0",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 302965814,\n  \"apiErrorMsg\" : \"neognrlhvl3vjov5cs9q5qus2z0eu34h0vulizmyz769bytvm8au65u6x3caf1fvsekg2x80ajl5end2cvloaj8yab720n21i7gewx4w2xcvv8zof2cgx6vy4svzl6pr7o3eefm1oy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "030bced1-2167-4d8e-87ce-bf0205aca5f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.902722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3bfd5ebb-1850-4254-babe-1e8e6eb4c3cb",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 27808119,\n  \"apiErrorMsg\" : \"3a4raz7mvu0hcvpxskbz9v2teewzl56ocylpd7vl81vktj20ot81inz0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bfd5ebb-1850-4254-babe-1e8e6eb4c3cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.902663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b225ff40-cb65-44f0-8d5a-efbfe30c5da4",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1882419212,\n  \"apiErrorMsg\" : \"ge4q5pgtq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b225ff40-cb65-44f0-8d5a-efbfe30c5da4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.902606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5918ed62-483e-4b70-a672-5029b1fe7ab0",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"httpStatusMessage\" : \"Ea vel laboriosam dolorum. Sint ipsa ea corporis. Officiis officia ut id. Ducimus beatae qui voluptatibus.\",\n  \"securityDetails\" : { },\n  \"errorMessage\" : \"Enim et vero ea. Vitae autem recusandae a autem quo. Quod id id nulla at dignissimos ducimus.\",\n  \"isSecure\" : false,\n  \"mimeType\" : \"f9740qcmede3ektajyvjc4imdbcluv4wv0gefh2ljl9f5j\",\n  \"languageCode\" : \"s7iqrebqfgpmijx61yh0lw0icxs2lhekth98crxicw4m9mkqa1h0omd3cqudjxqd7ebqdfe0kfu5sgnxuktfk8vvgow80ii765lvaib\",\n  \"title\" : \"Qui animi est.\",\n  \"content\" : \"Architecto consequatur ipsam maxime et ab. Minus dolorem eum aliquid dolore quisquam inventore. Officia beatae similique. Repudiandae est et vel delectus autem asperiores. Reprehenderit consequatur co\",\n  \"url\" : \"https://web.example.mocklab.io/750133\",\n  \"isHttpOk\" : true,\n  \"loadTime\" : 9.831955324426505E307,\n  \"isError\" : false,\n  \"responseHeaders\" : { },\n  \"isHttpRedirect\" : false,\n  \"elements\" : [ \"6n5itj60nukxr7y1c3ovgbhxc7qits4r35eb9tnrh8c7dnt8j2bc1lmhi\", \"l4gatnh4b2s6mziot7hj083yxijnxe2g9d6lbr1he7957r3ewyiqrq29d5rpao9\", \"hijxrhfs20mvwwqxwig15qntzgufg20dnyw9tw6e0kdb1kkqpfbyw6g23mupdpimk6p8e2ec7wqk6duwsas8tkr0melhbiq9n\" ],\n  \"isTimeout\" : false,\n  \"serverIp\" : \"147m2rzxvdbkt0ai1kdnznpdaubiz5x3fsu5at6mah8fme51ovxnds8hgq\",\n  \"execResults\" : [ \"a2kkycsi909l2xsanln0y2v7jsdda2kuhmxd1qaiqo1woueig54p818kccjwmvwk\", \"zyvgx7omawztejl8dk5gm\", \"m4iwnxhy9at72ckv5m0wzxm3icz04zwdty05q6yvumdd3x3gaotyttpndm7o8pqf9tr03vnu5ymybdhnu8xoaqiidza7kc0lu0xaxueue5k3pdgptfnj\", \"2ncvfucnrn5kcr77ic66px2rzjyrpl6tuwwkktho3hm84wl03h7332v70rhezti0gm3fhgp06djz5hfj6607pkq9xzgmdczjuizjc7vdmeigxvpexp5bmgd5p85mgqpseyhw4pg9kylkjhef6omrm6wneoeuqi61lgm3p3bdkhee3saolyz69twnu1t79t74y7c7wlk\", \"tp1956jmhxoq9zgg4mclnasp0rf1tzolsyepgiwv5e4hi2pe50mnhemywgznbbxvno8miboajwwainmdoow34episdej3n\", \"de51pygp9ajqwfn61u5279zg1tkk92v8gego0wz3nhaxkyljcm5hzcqck86jnuckzj63\", \"s1am889xkfzn67o8alo76wu17r7iuiqamhxry97iv0t0rc4uizwtluvox8urejlaguzfkx8h8fym61rwrhl3jix7t6v2sm6y2tgymh8dlrf31nnjpdz3mjpy4jxg2buvf03\", \"3wybf50naf6ehzwrb01ps8t0q8u409pmbfzltbqa2inlzu1o3qr1xyo1b7004pc0t8rx6mbi5cj7gafwvkubymp5p00h7pm2grm4xl8zrpf05ndx0uyg417sb2isutesa5ot7tdxrtgpk245b4ja6vqina24j5omt5xhrid8fkw1jvrmb6dgxsgev\" ],\n  \"httpRedirectUrl\" : \"https://web.example.mocklab.io/999566\",\n  \"httpStatusCode\" : 378426389\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5918ed62-483e-4b70-a672-5029b1fe7ab0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.902538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "errorMessage" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "execResults" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "httpRedirectUrl" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "httpStatusCode" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "httpStatusMessage" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "isError" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "isHttpOk" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "isHttpRedirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "isSecure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "isTimeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "languageCode" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "loadTime" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mimeType" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "responseHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "securityDetails" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "serverIp" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mimeType", "title", "isError", "isTimeout", "errorMessage", "httpStatusCode", "httpStatusMessage", "isHttpOk", "isHttpRedirect", "httpRedirectUrl", "serverIp", "loadTime", "responseHeaders", "isSecure", "securityDetails", "elements", "execResults", "languageCode" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "22bc8851-65e2-48e9-b2d0-0e5aa09387bf",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1607885919,\n  \"apiErrorMsg\" : \"fn5wlbjknpnsls5qixa3bxea5wm4uyilvrvbdl8nyus4v1i8l21f4ehf4ui3bfoo12g98m7bjnh51zqfistpbthrw25ovmrzvcdgbnggp7evg5obezeuj4ci7794usummtwn13rp2f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22bc8851-65e2-48e9-b2d0-0e5aa09387bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.901809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "098c4d36-6ad2-4107-91f3-e31ae8d33ded",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1771733946,\n  \"apiErrorMsg\" : \"h3rqogbbwi9nvxf6twa54fqryelxhl4mnlr5praryd4p89bq3bezhyt8fz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "098c4d36-6ad2-4107-91f3-e31ae8d33ded",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.901751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "864e8d65-51ad-4201-8f90-a11966ea60e4",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 984861307,\n  \"apiErrorMsg\" : \"bvf4u17f4m0myj71g1ied0ai4kwt9ayk747dk7l0gyvkj4ma6ufjkuouag3o6j80fplf6lsgimauddoag8z1alxfeeu9aa62s9588a93cqsnd3f7xj86v6p97hwfnwoabgojzre9571va9p73nmk2kko1ze7asp31a5dj0v69rm3l4wr1kc6vn6vo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "864e8d65-51ad-4201-8f90-a11966ea60e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.901691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0faf2741-7ffa-4273-975c-d384b02ccd1c",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ipCountryCode3\" : \"u2hbvr8d7pwgenyngwdb9vcfpf8t\",\n  \"country\" : \"Jamaica\",\n  \"ipCity\" : \"New Terrell\",\n  \"ipMatchesBin\" : false,\n  \"isCommercial\" : true,\n  \"cardType\" : \"srdn6zc2xxj9gss3cybls42yyi9jeq27p83fylpphhye94vy04cce9y7qpa11bovhnqabtkxqka7vq14qi8039tgq1jmoo77u6wwhqpr9zhwsve0qx75esogks18jdj4z2exrxwqdajdmpen1027cnkzu8oct2\",\n  \"cardCategory\" : \"td46bc9j4v53q9lu9t4gxsnkhg8xe3nx\",\n  \"ipCountryCode\" : \"cccca\",\n  \"ipCountry\" : \"Sierra Leone\",\n  \"issuer\" : \"l7w7k9powu638wvaoe60m7blfpq61djjug9yjab3u77uif5kec8tdz0k548tdy29ir64a6gv4suxyly\",\n  \"ipBlocklisted\" : true,\n  \"valid\" : true,\n  \"ipBlocklists\" : [ \"rx4yt5jjl0hq4xo6tov5s9zk2d894akl9n41u7m59va1o0twksrzy80x1rkvuaxkieiay0xzlc9wnfzc5sjutwkoop0wjz1xjc6vd8uo6dbjdg2grfgi0k69t0ybwedk4fc7idbt\", \"xz2tk3pe\", \"963wudlta6kmd8cu0ur\", \"h3wcjid62qkplvf9htog0axrp02d\", \"ym3nlhnfvvrgx4a5a2nmis33p1p3p2zpgabhm3kd9hv6zbaiui8lru8vukchley8bjucgv6oc2n9ut1hqlqdvtkybky\", \"xmsltrvmc85zx\", \"336guxhh8x18xocm5yb3furutwy4yaydb53y3xyihnug48e7biegnk05mbv32gvrb7zfu5p8758zxdoj23hqa4m6dm20iau8is3nmml9l9xv5wshuj2igzv0b78\" ],\n  \"countryCode3\" : \"c718tyfql228852rrg1u364xwxb4ygltif2nih44k75ehbnptgnlzc9gqwwwgvy08bivvdhd7ddhfzppklboqxjykt85xmpiuni18k2f07l4sqnq9vcirybl4xiupm8b41xtekj9hyald4etlr2cr3lrsry8pb\",\n  \"isPrepaid\" : true,\n  \"issuerWebsite\" : \"uk3unhrkkkaom8dmsezlo1bno1ybf1nppdcgzjfr7tl64j2dfvfh6vy2u0hztlexo3xks22n4u3pn946skb56m3tb843x3vypggtkd62f28\",\n  \"countryCode\" : \"mmmmv\",\n  \"ipRegion\" : \"h77kylp85jconlasichb2bm9jz7llq1einpnpxrniq6f3mnjzpp5yx7ecxc9b857z64wda44kk6y0q7i22tnincjwd5c1ey7pg14qt7unj1dkkqqnp5i4bh8zz3huhjlj\",\n  \"cardBrand\" : \"24hh44aa7kkzpwl1qume2lsjz4jhg6vl0fteb80d4d5drk8j2qgpbpjat1g5wbq3ak6gpd0y3cn1annuggpjmoqphiotyxy1d2fytkrznkylo1ybky8ulv66hbo71bpe\",\n  \"currencyCode\" : \"CAD\",\n  \"issuerPhone\" : \"041-058-2382\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0faf2741-7ffa-4273-975c-d384b02ccd1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.901622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "cardBrand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "cardCategory" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "cardType" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "countryCode" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "countryCode3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currencyCode" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ipBlocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ipBlocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ipCity" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ipCountry" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ipCountryCode" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ipCountryCode3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ipMatchesBin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ipRegion" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "isCommercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "isPrepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuerPhone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuerWebsite" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ipCity", "ipMatchesBin", "cardType", "cardCategory", "ipCountryCode", "ipCountry", "issuer", "ipBlocklisted", "valid", "ipBlocklists", "issuerWebsite", "countryCode", "ipRegion", "cardBrand", "issuerPhone", "countryCode3", "currencyCode", "ipCountryCode3", "isCommercial", "isPrepaid" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a9777763-fb26-4dd9-9759-cf79c50082c5",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 562870720,\n  \"apiErrorMsg\" : \"gwjuamz13budk291bw63ogfjvznytezyb6gfqpun5qbampebfr5wuiu67qlp6rdghaiofvu7ht88d68q19iavfvh7qvz24xbscrlp263xa6b394gef1rqh7pee6cepl987k6o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9777763-fb26-4dd9-9759-cf79c50082c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.900988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "45878283-821c-4b60-aa67-26d3eb80d9b2",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1818703203,\n  \"apiErrorMsg\" : \"jf7xq8n0coigeprrog6nozqz93wzy079zmmafemjlz1t1j4tbikqbxugnpsxebxw2t4vmmw76ipmv5ub2t5tp4fnjptmmwwinp4zp52eib3z7qpumc8vjc6gwex\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45878283-821c-4b60-aa67-26d3eb80d9b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.900931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a0d8a642-20e8-4a52-a946-13dd5571745d",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1874081839,\n  \"apiErrorMsg\" : \"sx4m3qdqcsn682803hzjs2tkt8pjbdl824hskl29l0fl3xr3r2hmgchz3m0n93ury7cqu6q0di3wbvsufpa4747b61tf5lft7ztwz773c2945iy7bmbv4ccipf61lnsq1n0ldag2tvv5c0e6a7p736fcicd1ktwm644u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0d8a642-20e8-4a52-a946-13dd5571745d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.900872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "06a40b84-3836-4f92-b403-c2abd0b04ccd",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"ef335o0d9m71ricu15173474ns0rm8grfq5omc1nrhqr2fotzqrcwnlqywcgl\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06a40b84-3836-4f92-b403-c2abd0b04ccd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.900812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "17d9a62f-af2a-43c2-8ee8-d1a532b826cb",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1262761790,\n  \"apiErrorMsg\" : \"33hie58udf7cum3j5dagccb5wmu5ykgjsn5z6mwhk4yw581vm2342rm7jakq65l1r3lvwbctrzsp7s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17d9a62f-af2a-43c2-8ee8-d1a532b826cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.900764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5a8099b0-9250-4745-a660-24ee77ece627",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1584317701,\n  \"apiErrorMsg\" : \"lz9f58mi4yb7kztw3nuh5n3dwf34qcr2ttfp2b3r3ta3chki1hkbbmh003b9hboub0og9waxu6epmvda0b4kwil623c1kca6rds0h46kciad3z88zk9oo6i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a8099b0-9250-4745-a660-24ee77ece627",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.900704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6cab2554-2511-486f-9df4-b9c641bf513d",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 405298124,\n  \"apiErrorMsg\" : \"ow8adndptfe68fc2bsuyvs1wgzoz3m36wpcg8e1k8gx87fxu7wfvs1jdhw34c1xus23vpaqptms4uw9m1zxuy5dzq871muvfxs08qapnjem3ysfxetzmajts6ws33w6peu8btss4eyg9lljrhwi0a4xtues2x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cab2554-2511-486f-9df4-b9c641bf513d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.90064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4023bb65-6543-425c-adf1-5364f7d4160d",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"badWordsList\" : [ \"75pnqmy9o3nom\", \"zaehsl126cjjd4ahtce82dcnkj1oh4pw665at64dabyf1m5\", \"q080mhfu2x15774i2eah8rdih9yfpahz5zl0broo8dxxocp028yhvb3et2q9zfvsag9oo2n6y\", \"0xyex8btvhgp8sofw3to4k6z25p0oh7iqww7e7wpjibeh3ymsv6i8tnda3teaerb1mu55i8uz2\", \"ig8mq9wf55pmiy4x0rjfcrnmsuj74gwzfv5ac0oigtet76bxuewa7p1lk4d0r52d8ecph1\", \"t3p2915jeo12lxw8rdnzbvew2varc8tbhdaw4c2nv3wwjruvo7491b7jr0e1v3h52hgbg5e51qgcx1k6kjj3ijfubey4zoh5tct\", \"ihp5bpz8bmlxsclyszfymfzrdn8rg0llfwy85q4mfig78ge1\" ],\n  \"badWordsTotal\" : 1210155528,\n  \"censoredContent\" : \"Cupiditate voluptas et sint. Ut aut necessitatibus. Ab blanditiis tempore est aut corporis. Debitis tenetur facere distinctio quisquam error. Nobis voluptates sequi dolorum.\",\n  \"isBad\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4023bb65-6543-425c-adf1-5364f7d4160d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:15.900536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "badWordsList" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "badWordsTotal" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censoredContent" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "isBad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "badWordsList", "badWordsTotal", "censoredContent", "isBad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    }
  } ]
}