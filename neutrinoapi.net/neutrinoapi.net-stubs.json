{
  "mappings" : [ {
    "id" : "e013d85c-4d38-42da-b09d-89e4c090986c",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "pscq5jz4k6uup6owp269binz8s35iokrbw4i61jhhqi0branu9zfh5g1b2ggot8au4nmuj35tv5gk4lmiz53stsw14jqtourt8i8onz1gu6dpixavj1a3bumvp9475s6la4y2fswiju5dv6ycarpcha8vae6b8psjwa92ts3odwmitwzx4ialxvs4qpsl5pd4y3h974"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 2061140204,\n  \"apiErrorMsg\" : \"xeajmcw10b2akfjhtajx2odwy25wwi2bxba05o2q1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e013d85c-4d38-42da-b09d-89e4c090986c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.261071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a5cc68d1-5b77-4d44-8ef8-6715e046eac3",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "nm2wcjhsyq"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1571560495,\n  \"apiErrorMsg\" : \"h9mt6i1p30mvjjzwv4sjv3v0hvvk7z03cdsa76g4ndx1n8iiitwojr5uslev1kchlga4o5m7bl5dwa5w22i3a7dn5gl3vj750t1dq4reyggw4o08mgjb84h9vow3lo8lyc9ip1kdwi0ol9s5mqj9puvmzy2xnz3ruaiy0kvsis5pwef67s9k9clh8hwxk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5cc68d1-5b77-4d44-8ef8-6715e046eac3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.260988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "3ea1feeb-65bc-4913-b1ba-ac6dd650892b",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "vbbqrdmidkqi9q"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 975173508,\n  \"apiErrorMsg\" : \"4x08xiod3m1rh3ebaxueljouv7wdxrb06b29ffotz0iy7bxf7i7rx0nmvyfwoz06dg9azcvkkftcwcwkd944jbnhm2nw2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ea1feeb-65bc-4913-b1ba-ac6dd650892b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.260908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a8959660-0558-48ea-a216-79365e5b1e3d",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "ih1jgh4qw7007i40kkmun0j53tb5uyecdy50zbzuf80ie5vr7g72p2s3r7dkbejn6ltf1iu78onnv52c6ceyb6q8vy01mn2q43z1lp99tjj8kqim9oera124tq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8959660-0558-48ea-a216-79365e5b1e3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.260825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "0863f65e-85ca-4936-b113-0cbee6cc19de",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F446955"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1399860307,\n  \"apiErrorMsg\" : \"7e8p8h3stl42soksajc6jlmf9nf8ux9s3euc554gt3g7sq1fil25dxhgqhr83ptjoq1c829g9yty4qx2esuzm1ef09n4ayl0v4gh51sf6813igb6pniwscbv3qrzdj643qsrc946za2rvlb33zw8liwp6q24p8nz5ip\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0863f65e-85ca-4936-b113-0cbee6cc19de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.260739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "49021184-6cfe-45b9-ae04-66b9a2286858",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F776574"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1279119009,\n  \"apiErrorMsg\" : \"81gbrfjcuzf8wf0ki72632bxtt99u2u6y14dwagjx2qf6g6b8k77142azjrlqsbytf5qprqfks8i1zcd1tslylcuxz2cxypeksbuztadpul9hp0187dvqljmis5ch4d7wvfwmokczzk38g43t52zxguhai9y4etkwedq1wtw7c5iweew8shgqrd0yf52m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49021184-6cfe-45b9-ae04-66b9a2286858",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.26061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "120f4d0a-3e6f-4b63-af4b-1383205a463d",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F187998"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1060159924,\n  \"apiErrorMsg\" : \"4fbxtp6k9wb0g2ck84h1nvud52225vdpfh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "120f4d0a-3e6f-4b63-af4b-1383205a463d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.260479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "bdd3f453-03ed-44e3-9422-df15ecf3eeec",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F921589"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"http-redirect\" : false,\n  \"content-size\" : 927905865,\n  \"load-time\" : 1.4626929030408176E308,\n  \"content-encoding\" : \"irbuc9vzbkiiggc0sfkv13s8lrxy7m01cob1ttr33g6ak126l7obaik1tc6t74af14d6jzkm\",\n  \"server-ip\" : \"auz0es9c71557nliaigpfbj4fbmy4xwdmuccjg7e1qj3n714hhde8rkpe336\",\n  \"title\" : \"Quis voluptatem sit.\",\n  \"content\" : \"Sint veniam eum officiis rem. Consequatur officia assumenda non quasi. Maiores autem modi itaque. Nihil dolorem fugit velit quo ut. Dolor aut ipsum molestiae et.\",\n  \"server-name\" : \"Franklyn Hintz\",\n  \"valid\" : false,\n  \"http-ok\" : false,\n  \"server-country-code\" : \"ppppe\",\n  \"server-region\" : \"mhbzvsbx1jattie88y0f3zkldysibknfsby1s75eg\",\n  \"server-hostname\" : \"Rosa Welch\",\n  \"content-type\" : \"k74ccol2p7i0i9el2gkegump1sp2wzb3sp4fqo4r34o\",\n  \"is-timeout\" : true,\n  \"url-protocol\" : \"3mgm6pdfnd3xei6fq0t2yhmavwzwallo8180stjkw1q13e6tklwx6wmz8ofnct2brt7bvzya689sj5ce3l4s6b1nrrdqah7762tiowa5ryf8osxmexou4ygugollgalv2t93dakawqlb0584asme91ehapffrdbzauxc8mnwoxcbayyfe3spqnbf9u7p9chc\",\n  \"language-code\" : \"k7n2uqwvp5xlpv4lxad3qimg6nvljs92dgz6zc5b2stm7rzk89ogjcvg7rxco0r2uqm0lrf1pnpq50wqhfc4dh\",\n  \"query\" : { },\n  \"url-path\" : \"apua8h6044wlngaylu9mo9qgfz\",\n  \"http-status\" : 816490197,\n  \"real\" : false,\n  \"url\" : \"https://web.example.mocklab.io/445128\",\n  \"is-error\" : true,\n  \"server-country\" : \"Bhutan\",\n  \"server-city\" : \"Lake Maryalice\",\n  \"url-port\" : 537537779,\n  \"http-status-message\" : 1170939145\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdd3f453-03ed-44e3-9422-df15ecf3eeec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.260309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "content-encoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "content-size" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "content-type" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "http-ok" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "http-redirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "http-status" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "is-error" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "server-city" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "server-country" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "server-country-code" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "server-hostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "server-ip" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "server-name" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "server-region" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "url-path" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "url-port" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "url-protocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "http-status-message", "server-region", "query", "server-name", "url-port", "server-country", "real", "server-city", "url-path", "url", "valid", "server-hostname", "load-time", "http-ok", "content-size", "http-status", "server-country-code", "content-encoding", "server-ip", "url-protocol", "content-type", "http-redirect", "content", "is-timeout", "title", "language-code", "is-error" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b9755cee-fa3e-4942-a160-fe7b261d37da",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "jt7yl7br6s2geb5903u7kghctyn4swvbenlusq74dwymv9ojjgkubtsu9z9pdq6olt5z5z28an67pxpu8vsy1ihuzflfp68d0e66e"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1300144360,\n  \"apiErrorMsg\" : \"e7k6tsz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9755cee-fa3e-4942-a160-fe7b261d37da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f043cece-8d72-4443-86b3-d111a1421882",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "iipc5u7tl794f4euy885glgx0rmhknk9nivpphe2cq7powcql9b6s9r4wn3acg4rfkjzn113uoto3ng3upjx440dugyfrt5idkvq58664cik44f7313srbmrhxssrc6cqsaphxpjevkm35fx18dp86uzi7v4rckfd"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 465956282,\n  \"apiErrorMsg\" : \"fn3xajovg23dbmvza32cjkmtfx9x70vh40b7d9lr8mjafvavt0gsnq4awfjtpumua7dgy12l3tbuw1ej5ez1t22jbupfz31p3qxii65vapqiz2xmc66jdwqlu7yuorhyab070y8zvh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f043cece-8d72-4443-86b3-d111a1421882",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.2593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "0ab25c3d-e458-4544-87ae-9b2f2361bc0a",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "imscpaq53irj4gwcgzadpqhju8hfip3ctmiva7fv5qmdgcef"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2009100670,\n  \"apiErrorMsg\" : \"0toe1hqbv7w6q2yhv97ngulwk8xmv9lh7j3gkvsu2kxw1ilalvx3ok1z99tym6wtidththbha6zjcs604us370lzgoawti91zvmt005sx5xedw6iho4l6mxxxb6p1qa3ger1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ab25c3d-e458-4544-87ae-9b2f2361bc0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.259219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "d7b864a2-ec45-4980-802c-1d292927e85e",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "wlyncbevdt1k1waly5ab6unpcd72kalad0kducz6y7c"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device-model\" : \"d5jbtkwwfpfilz1iz4bwvcbyoi9lxbd3xrlimpumwb9w8gc7mabgbolaz8kt8jmm96wx6hxbdvt3x99tjz7xk9i2hfj7p9nggeyep85somxx24rnicsvxue59rcj0fjo45nuu8mpsbc0ff7ivdtmmz0k17m93zrf3x5h9n3xk0dirhoee\",\n  \"os\" : \"dhqzp8mbm3q3sw5klowr1f0tvgqol0z25ydhiln0ulxuhknd0t0qlwk4bai3ib9cgtanjb60m03mc6dqsobc7s01spw2e10sxz9xnl1jmpdcmuyqxqfdnydz4e2wtc97i3y1rly9qux0x\",\n  \"device-brand\" : \"9pcogd986i9gjh3mvfn4jk7gtilmf92g3rsu9h0pd82jfe2m1mlegjx1vdioyhi8\",\n  \"browser-release\" : \"blbla68rfm47yad70eokg60502695w0u8tho3f4na6xvnl1m2ktgzw8iuvunnfy5rmahkp2baleo8ikt8bu6f2echi8lhz9qmr49cbn52sl36pod0e3qgmcs6e7y8umlzptfs7n72ztoo9zs09890untik3nelxm8ihxvrqoaxjzngm\",\n  \"device-height-px\" : 5.409624553774132E307,\n  \"device-pixel-ratio\" : 3.4850457100459547E307,\n  \"os-family\" : \"2z5ql871oerabo1rwcqfe94f6zkns8b3lt660d1iovuk\",\n  \"device-ppi\" : 1.7771468494168067E308,\n  \"device-price\" : 8.694964989508784E307,\n  \"type\" : \"qmq1tsivwqncczrvl6n12fvh5lfkq53jgxz68v1hjx1me1fe5t8rlsb\",\n  \"ua\" : \"x8ypu6hyhkoej0rsit06cwt3tc4sswynwjexfrmf8vtiig3nxrvttges5mdznz53b5bc9vwije\",\n  \"os-version-major\" : \"3tvga8l7phtuu0o12x9kymcntv12gkeqbt4nk49eu1cslygawbyxsk2lzab69kkyxmfin54l7n9vtuyci\",\n  \"version\" : \"99dk0qut8utcexehxz9fep85v57pn1bxb4rt4ypzi1ywku679b3y7gs6ekd8xgev68aocr2krmrbrtlh\",\n  \"version-major\" : \"raexqq01whyd1faofu4bwyqc1ja6jyb4rtcruhtiqhg93cl2h7fhfnil33h8cr4k9hctc3otjqwio6e7oowgp1x31c4tjveyuu9fgqxqwq3gt9yv3k9txhc9gov5zmxig9r1nlbmrdsrl58aezuwt77fxuz\",\n  \"browser-engine\" : \"srvtjoaebidisg1fziwcn000b5todlqxb8\",\n  \"device-model-code\" : \"cjgold6u0am8ldk2teftm06rq8776owpo3n6e6ztcztqa5u0m1xnowxzvr5gpokz4q6lfof3cv4evv7uh8obcy4wqml8y0giura83w28zfxghak5wcbzxrsyzryxtcrcnyl1vco9fy603gpnggrds302idwsn4cw3oat69pg20alire9xpyl9e2jkhfk3kq\",\n  \"device-release\" : \"2oijw0loztd4vcip7oicdthh25bcpccdcf1schwutv2y120jk07zanx8s6ue969vs403nuzscvzl85kqsallof4d0qnty683yprqdy9l1s93mkooxrhnqok7cxznu8rpu\",\n  \"os-version\" : \"zqfnkm5lsxv0mzryhyha696t85v183sdqhzizjz96inxd7lc07n6u3xoc8f04hu62kgspkhcdb2mxtgpe907nsyoblsghqrpzym9rgmatlybmbjzywroua5qqp\",\n  \"name\" : \"Tana Torphy\",\n  \"device-resolution\" : \"p6gk9ypd5040zd7452mgdbhhrc2r6kjo4k9zll0avij5xogcx7lnh2asygblo7rp7a\",\n  \"is-webview\" : false,\n  \"device-width-px\" : 1.5615328059941786E308,\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7b864a2-ec45-4980-802c-1d292927e85e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.259116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "browser-engine" : {
                "description" : "If the client is a web browser which underlying browser engine does it use",
                "type" : "string"
              },
              "browser-release" : {
                "description" : "If the client is a web browser which year was this browser version released",
                "type" : "string"
              },
              "device-brand" : {
                "description" : "The device brand / manufacturer",
                "type" : "string"
              },
              "device-height-px" : {
                "description" : "The device display height in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "device-model" : {
                "description" : "The device model",
                "type" : "string"
              },
              "device-model-code" : {
                "description" : "The device model code",
                "type" : "string"
              },
              "device-pixel-ratio" : {
                "description" : "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
                "format" : "double",
                "type" : "number"
              },
              "device-ppi" : {
                "description" : "The device display PPI (pixels per inch)",
                "format" : "double",
                "type" : "number"
              },
              "device-price" : {
                "description" : "The average device price on release in USD",
                "format" : "double",
                "type" : "number"
              },
              "device-release" : {
                "description" : "The year when this device model was released",
                "type" : "string"
              },
              "device-resolution" : {
                "description" : "The device display resolution in physical pixels (e.g. 720x1280)",
                "type" : "string"
              },
              "device-width-px" : {
                "description" : "The device display width in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "is-mobile" : {
                "description" : "Is this a mobile device (e.g. a phone or tablet)",
                "type" : "boolean"
              },
              "is-webview" : {
                "description" : "Is this a WebView / embedded software client",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The client software name",
                "type" : "string"
              },
              "os" : {
                "description" : "The full operating system name",
                "type" : "string"
              },
              "os-family" : {
                "description" : "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
                "type" : "string"
              },
              "os-version" : {
                "description" : "The operating system full version",
                "type" : "string"
              },
              "os-version-major" : {
                "description" : "The operating system major version",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "ua" : {
                "description" : "The user agent string",
                "type" : "string"
              },
              "version" : {
                "description" : "The client software full version",
                "type" : "string"
              },
              "version-major" : {
                "description" : "The client software major version",
                "type" : "string"
              }
            },
            "required" : [ "ua", "type", "name", "version", "version-major", "browser-engine", "browser-release", "os", "os-family", "os-version", "os-version-major", "is-mobile", "is-webview", "device-brand", "device-model", "device-model-code", "device-release", "device-price", "device-resolution", "device-ppi", "device-pixel-ratio", "device-width-px", "device-height-px" ],
            "title" : "UALookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0bbf5187-4d1e-466e-a154-63efda0723ac",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 268239488,\n  \"apiErrorMsg\" : \"8tu04u6pvs038ch8khbiboprd881btqbn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bbf5187-4d1e-466e-a154-63efda0723ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.258481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "a924312c-e52b-49af-8b1b-757e2298ebcd",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 546297547,\n  \"apiErrorMsg\" : \"kqytxan57uu7zsco68nc839205d8aqj7s6brgkixtr82c72oy37n57i6a5kxzp7khpkegwlmmrrzqibav28maju2h9iic0nc2lflmmetsh5lvwzrc4vvt3d8ti6z617xx3150xpk8anxa1tlamujs806on7cvzg3ju6e031d1xxfs5hmdjmy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a924312c-e52b-49af-8b1b-757e2298ebcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.258423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "ee8b9f3f-c7bd-4466-a119-9080455ccc56",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1418779585,\n  \"apiErrorMsg\" : \"bktkpiipvmz6bbn15h24h1b3x6ho8zm44fdjjxexh8g3bszxz8w6t3fq61g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee8b9f3f-c7bd-4466-a119-9080455ccc56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.258364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "21c498d7-1331-4188-ac89-abb03afb12c5",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"057cet0edbt5niyztvmaznzsam6d3uee2ud4gm0ols86mah0wqrjjf0qqirgzp296wqwnmcrufbgfgvkfxlw7r9zoili3szzxs22kzuv6hucjm4qbfsz57dzvex9bt4arh1g5fdgt5hqt2u24owtuvgr8fsvffphk4r2442zpsg9lyk1xphd3fbtnlgxwt38fl\",\n  \"sent\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21c498d7-1331-4188-ac89-abb03afb12c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.258305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "number-valid", "security-code", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "89748111-3939-45c4-9c02-f4b9699a9f3b",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 772099868,\n  \"apiErrorMsg\" : \"8i0k4t21fps4f4s5ucriuid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89748111-3939-45c4-9c02-f4b9699a9f3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.258209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "752ff478-92ee-44da-9ff4-9091cdbc1a34",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 95218892,\n  \"apiErrorMsg\" : \"4ieil6gs24s7hv53rlq9mkkkrx3s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "752ff478-92ee-44da-9ff4-9091cdbc1a34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.258152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "76ee15df-66c5-48d3-929c-661287698c22",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 500668531,\n  \"apiErrorMsg\" : \"5ui7667xv6j0eb0dkoj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76ee15df-66c5-48d3-929c-661287698c22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.258095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "54b6c87d-af83-4b66-9c6b-e53e8ca7b2f5",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"v2ekawwx2tnp6hqb6swbfba4zyp5bzp60yf87ct113vdckps08o2up3nntck4pnfqvzqx2zffrlobyzy3bqdjjo\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54b6c87d-af83-4b66-9c6b-e53e8ca7b2f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.258039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "493b2837-c2fe-4ee2-9e39-07f11d18d552",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1355676617,\n  \"apiErrorMsg\" : \"d4f2rhbld164vdci6x2pbem7ozsxvkmtubc8eouho2buddu1ykwodyu1w1g0097mxvg89trau3by64f2a3mdjd4qtsa6xnx4ntqvi4pdgtgk1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "493b2837-c2fe-4ee2-9e39-07f11d18d552",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "15cadd24-cd99-457d-9158-ce9cf73dda6f",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1867668706,\n  \"apiErrorMsg\" : \"z5bx3cu8edl3l16wiolpbw53fc5jnbtx1wo6bq6ue0jwz0rmjltcsc3k8ov8lmgl385g5cvroa6qyod8vy3yn27mwhdgbke6pvlnjf3fj3epg18ya7jqmfdhj3t455g1wfidvr82czzq3k5zmop44uus6urefu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15cadd24-cd99-457d-9158-ce9cf73dda6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "1417d23e-dc9b-49d3-9f74-6de40d971d24",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 440107251,\n  \"apiErrorMsg\" : \"d5t1x5dndu8rhoq2qwnoooxaj2doydex\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1417d23e-dc9b-49d3-9f74-6de40d971d24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "32954c90-ab47-444c-b1b3-712675be2cdf",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"7p2z28zls2e0f5zqafkwhadqd7x2weldofhw2zlfqea5kltnpq3zenx5380l0hx4znnqxobp621zgdbuc5gs164r1ox7urpruzzbghk4cy96tmba5peztqzboplkzb6ez1\",\n  \"calling\" : true,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32954c90-ab47-444c-b1b3-712675be2cdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "calling", "security-code" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f264bc28-9670-4fd9-90e6-9e2f4ab1b15c",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "xwwf5lyou5qcxqc9qlosrvd6m0qvhsh0rm2hu746kdrbftysbini6ea4a4ja7wckv1j4l51p6y5gb4jtniwsgvf273za5od097l1fzc2ijbvb1d9cjs4sban0sy1a3gwh0fm21i0ulw8ufl74idrjlkn28"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1188522009,\n  \"apiErrorMsg\" : \"mbnmww7qq0axpjxxr08vsbfaje6jbybhzzehkq8imseuwb85euyofl96cjbzxcaitrcpgey09oprapdxe4gpx1v0nn2pahaledhwl3ch8kknx7oo9zzqezz6mwyk4x929zn96bnh5sr6a147lwb8hebprf0ghn8h2js4cmkoa8l04o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f264bc28-9670-4fd9-90e6-9e2f4ab1b15c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "a40f83f7-7c4e-4096-ae6b-5de027e8539f",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "cb2m7gkkhkz7w33snacocihv7o7y61o97rpwr4g579oj9wjb6tacjfntmfvmdg8bzuan4y7twzpl0knp4hw6wor3yp5eypirw0upfao7bmt8q37f53i6uwce6i"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1424094199,\n  \"apiErrorMsg\" : \"4d7pod3f8n5d6dng9ebl1negdj06f798ipqq55b64xplla9cqdpdilrah8ou8wyz2nbne22v6rofpbnrtz6ckwyzm6pn8y3zr7p9mn6my34nic79w6zjofnoy13c6ei34p9tah9ike8afw3tuwjxxae8b912zrtgzxu7mn00dsl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a40f83f7-7c4e-4096-ae6b-5de027e8539f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "e564c40e-8715-47dc-b18f-79e102d79946",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "yvsj113upurq2kre3vgo8kf7lwp8kqh1k8di259wcth1taqh3ijfdamj5yvk9k4jff8ajwm7abl24oeeudyx7d7jyc6k5"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1012874093,\n  \"apiErrorMsg\" : \"5scamrjovi7pcb432srksr6xcc82qqkloyrdpjgvs5kb4t056yfffmox5gsd5agkydop94\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e564c40e-8715-47dc-b18f-79e102d79946",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "1fc027d2-9637-4b91-afcd-c9a2e2d253b5",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "qtqv4znyss958yg57nen7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : false,\n  \"country\" : \"United Arab Emirates\",\n  \"country-code\" : \"ggggd\",\n  \"prefix-network\" : \"t5sqpnro4dv02tw3tqkd9ihtipn4e7z44f11t84v9wcf21vomzdun9amcsuum6upolmmtzb4x6l9f4h9mgfc6lc16coa161ra5q6pr49r50zhen6mkmvncdxlx8fqbec5musoen5ffb94yc79302arn5k9rergwmp4uxguwnenbizhw9w5nyf9l\",\n  \"international-number\" : \"5nwudauujw859bn4rsy3ba04h3puhf8lmbcmjdfgp0p5gu1oveutrjt007q22b7lb0cuy3im5w728seo1mgwxi2wt2vdmtb2ncey0beukejx1qx5do2v5dn18vkwhkrun18nbmw5p16l4ojt65y7nxvo\",\n  \"location\" : \"jazxnr7wjw7g93pfvudq58wlvxqth2nru9llt1hc2r9x\",\n  \"local-number\" : \"l95a78ttvoyneta90d9khsibfkhlmw4gnnncy41rngkdb7l91qi6zjws3cln59z3bzvmdm63ofiw1dkfsnq3g2o5gsl1jbc2b6wu7ielcetmo5hgrgxv9165sqxkbv0uxuz4laqxb0ca3i6s51gahl5dlsi36xwecp\",\n  \"currency-code\" : \"AFN\",\n  \"type\" : \"fn2cxt7uq568ys8mok806plaopnu95njuemvu5jqb3of2lqndwxhfojt1jfyxd5mz3503ppdk2eg6kt98silgzadg6j93odwg3e9zr5w5rb6btbwosc0sc2vcrtvffy30dpe3dd9acja8fl655\",\n  \"international-calling-code\" : \"qp12cs4ay2385lnkzs80j8cc0jrrdmn6v188vv58ogt3w4xufw78dzvsubyrcos5gr8mp4kgel7sklur5dei023ah67qupj2jc3\",\n  \"country-code3\" : \"o1fqe046dvf0ah6ynkh7c0ly3b6ep9v120gtsh0sh2h0vvurnbv1ac4cu7susrphbqto7h\",\n  \"is-mobile\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fc027d2-9637-4b91-afcd-c9a2e2d253b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefix-network" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "international-calling-code", "country-code", "location", "is-mobile", "type", "international-number", "local-number", "country", "country-code3", "currency-code", "prefix-network" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "ab87f776-4744-4a3d-8b00-3825f2116055",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 569688084,\n  \"apiErrorMsg\" : \"xeyd7vfl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab87f776-4744-4a3d-8b00-3825f2116055",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "46748833-9d02-4bfa-8982-1605d35ddbab",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1457481433,\n  \"apiErrorMsg\" : \"6l28tmforcsxjfq1f42i222uvb3kelvr2gy8t1r6jlryllc9399kua4j4hritbboeklx19fft9rduj41tm2oxe8tgwwb98z3vrdpf5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46748833-9d02-4bfa-8982-1605d35ddbab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.257032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "4a30e3d1-5b08-4139-883a-39b5e556fc4c",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1600807532,\n  \"apiErrorMsg\" : \"v4htc7h73h7g8ycqj3megcjlyzgzocrwonvsadz91iio9dyh9mebzezo7pvj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a30e3d1-5b08-4139-883a-39b5e556fc4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.256965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "36c74b97-e175-48bf-b643-22c97820895d",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"calling\" : false,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36c74b97-e175-48bf-b643-22c97820895d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.256906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "number-valid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "72380046-3f97-487a-bb0b-87206c188ee7",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "oy4sb38ge1kkodpansrlrcw03bz6j3jeuulww6ogxuw7ej1e4h7an6ru4dha7xuosl8314o4lek7wpjqg6m74ktx38zhsgwdup9gvo9ki46mha6glveeh7q22rnhn09kfcs5g6rrfh"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1163711229,\n  \"apiErrorMsg\" : \"q0cvprr58t3ladtyr8rfn8z2qiiajjhc8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72380046-3f97-487a-bb0b-87206c188ee7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.256836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "36bc7db3-4989-43d2-821c-80da262d21b7",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "n5zd93tiq06l9rb655vlimvyggoo6ixoey10d8g2so0fo34m7lb6slquh2ba9j738z9snvlmgtfs31b4pz62eo1nqmrxow9kzjtp2nz2357qxihyid0ikj7z88a"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1661525559,\n  \"apiErrorMsg\" : \"bxd5rg6zvpi4pg3aqsu5xx7w98wfye9mrbna5bogss8gx027uf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36bc7db3-4989-43d2-821c-80da262d21b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.256752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "ceb1e02e-f4ac-4148-86b6-1aabfde7f607",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "ikssk3lp8kq60yc8shoildezqj3x74dvzwh250vyb4bjkofuoj6k75vrry7fywh386ogxr5xv2h534aub0ynh8qdj"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2135354193,\n  \"apiErrorMsg\" : \"u04j9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ceb1e02e-f4ac-4148-86b6-1aabfde7f607",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.256668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "be7b268f-10c6-4071-9274-813ea613e368",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "p60u9gec"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"hskuwfvndanmqhskzs1lponteiyiaaz20hs16ybvin2aansacqrq5l6v8t9t6n72b8w80zpj9w6g7\",\n  \"country\" : \"Iraq\",\n  \"country-code\" : \"pppph\",\n  \"provider-domain\" : \"6pz5796ggkedr2pz1pw8kgkwzvkvqk00elgjtu0pv\",\n  \"city\" : \"West Dolorisville\",\n  \"vpn-domain\" : \"auduoj29fuoqnz3vn60tbn3lczb\",\n  \"is-vpn\" : false,\n  \"as-cidr\" : \"pv86wojhj\",\n  \"valid\" : true,\n  \"provider-type\" : \"49l1qrl114grxzv3y5zs2o582bh5g4i8wxd9pl9hkzk4salycruh200e4m1drhiuw03kj4dq7j7vq6ckfw8s22dvdb3b59hd4bzxi25w2nkfz6wos9uamdxv8qkqxr3rzk4ujodzmfv9v\",\n  \"hostname\" : \"Curtis Rath\",\n  \"as-age\" : 166969247,\n  \"continent-code\" : \"ojw61po950ddspfekf4s6o2lv0tpgrujn8p4le5fi3248pejtoc2rknn9j4bsmofk6datt8dmhz394g051qoqj4mgbyrj60ahmq9desq44i1rqyp1hizbyul2syd5zl6gfaooskp9m5\",\n  \"is-bogon\" : true,\n  \"ip\" : \"d6qnpezlh2xs5isrtxm2fr1on1pmhrfhb0lznl9u88myqjqe9i6zlukh4pn39ryi2\",\n  \"as-country-code\" : \"eeeet\",\n  \"provider-description\" : \"Ea odio quod amet. Quia nemo nihil modi nisi. Temporibus iusto incidunt ipsa. Consectetur velit quia.\",\n  \"as-country-code3\" : \"5cckg44qzirfss27mvwafj5eewff67icdlosrgamzh51glslikajknqjv\",\n  \"is-v4-mapped\" : true,\n  \"is-isp\" : true,\n  \"as-description\" : \"Autem tempora fugiat consequuntur vel. Rerum sit voluptatum quis aut tempore. Molestiae facere ullam. Dolore culpa qui molestiae id necessitatibus mollitia.\",\n  \"provider-website\" : \"66m21tjd95\",\n  \"is-hosting\" : false,\n  \"as-domains\" : [ \"y4r1ofrtwibb9wuoom5swqtpwr687glor3lsk6k406wx39enlynxo3ad5nrlv212rmcn3jeiysz7qpge\", \"ob8uaazvvcvk7zqwelbo7vzx3xta4\", \"7e69w607tf866m62365zpe5s0r1jic30hz8f8l3mo5u9y5\", \"mfar6g9vnx1k550hompuc42oml1nh7l6zyi52e7j5spgl9hybwhzot3xkc3a6wg1pozy5v9vpwj7uvn3sngdw8asq5dn6r6afiyarp2ma0uamhx\", \"p0tma9isj6rspuhuulzqe6aab7au5d57ko1asc8wr467pnscl10to46n14ukwpzmocwc3yafs0fpw4emyhzvyu6c1iwzocrvi\", \"t0igwtxnwhol7fclo4zcr4tkiswdz89wb0iat54p5d2ulzkraeuzs2xtfypye4\", \"jbbj9ons1kzedtw6hsd47rxzor5ulctb8f3rjn0f4b0qs3fjhe5hvd6627deig4jhfzrigbkzcafwibjbmf913bbrlmi\" ],\n  \"host-domain\" : \"uxugpfhjnz6n9s7tus48nuy7ntmg5gcwqufy2qrv3rmg6lbif352pq1qjg04p7su6td463sx46453e18rmqtzyzt5skvj21edla1wrn3q7aqj21bk5cg2qbf39l7q7d4dcewsxi9o4nfqlqafwidh7iy42mu6esh4sz3jlhmsv3odrdu8j775wbabktj4ds\",\n  \"is-proxy\" : false,\n  \"currency-code\" : \"ALL\",\n  \"region\" : \"rr6gqkbd2903hfiozs3j8el7pw8c5bm3ngt2x523gxmnbmdyjiy52mrz9c5mu3enhd3inx9jyv49e12x8zd6sbglhwt8qysudvh\",\n  \"asn\" : \"6mibw1vf898p9rzqt6uacgdovt15w9b3tffmkyoims5wtj7zagavlwmdl0groptkhdzbjhu3pyreuilcrw0ahnfkf01zzopeqx47ji74o1\",\n  \"country-code3\" : \"fjklbseml95o8aem6mhrn3cupb7pu0qfexsm0spug0upf44ku7v2kzfccpq8krr0tqajvjgognjm8i8k0pmedqbl1u56auj07ehxbhj6vfyqgyhm70je7q5d9hl39jq181ir2cah470zc6c2w9h4c4e53v18mr81tkphrqhxhzk1\",\n  \"is-v6\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be7b268f-10c6-4071-9274-813ea613e368",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.256543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "as-age" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "as-cidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "as-country-code" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "as-country-code3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "as-description" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "as-domains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-hosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-isp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "provider-description" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "provider-domain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "provider-type" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "provider-website" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpn-domain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "provider-type", "country-code", "hostname", "provider-domain", "city", "provider-website", "ip", "region", "provider-description", "continent-code", "is-hosting", "is-isp", "country-code3", "currency-code", "is-vpn", "is-proxy", "asn", "as-cidr", "as-country-code", "as-country-code3", "as-domains", "as-description", "as-age", "host-domain", "vpn-domain", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "1292017f-6c5d-48a0-bba8-7eb295fc47b1",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "llm0l8hkc8z5bd6w6dk8htrepmgkq9s3oogs8z7rbrmcri4kltj8uo3ppma3fd6rbd0552q866wotcaexx22ggdn4x5pk"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 23659981,\n  \"apiErrorMsg\" : \"gvo25c73f6i6gm4nbkciv582q3u2q3gzj8wd56lsc5h3yv0celawr6tmzn67jj6orj4vzfip5nq9q8o7d32vr0f4qx9bnep4q5ehquemetpwgxkusl1la\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1292017f-6c5d-48a0-bba8-7eb295fc47b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.255601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "30962a46-ee49-4d9b-846c-12a229eecde4",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "31kusqnbsnnsrtt8oi4b6dc11t0dw0rom0clmqbv344lx0ju"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1216516069,\n  \"apiErrorMsg\" : \"iconvfb41nz8yz2kia5tss377ufndlk9j6obuxliog9ft6mlca\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30962a46-ee49-4d9b-846c-12a229eecde4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "ab6548f2-d2ad-454a-836b-3a9752305382",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "f381tfcydyppunp9mmpiuro31tu5ccvmlojytbxssmwhvhshigtqmpyzb5pzyrngsxlb2dkklfah8ay1aca4u09gx3r"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1797866771,\n  \"apiErrorMsg\" : \"9fxmk0qzo7g9i8vspx8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab6548f2-d2ad-454a-836b-3a9752305382",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "ada07111-6a66-49f8-9816-7b7529aade8f",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "q5rj78c0wxdrgvx2n9cfg82db0vggnm5bxv99ifhb0kin9ebstj77gezwmuaq5ijkd8chbpobzcb0fnfahzvq2uo06k4tovmtfthzrsls5ts916yeyhb4lfyewcbh6avx7pw89fsdf2v9z9hc7pm7xgkcjwfqt65xyl9ej06n8pd1p4zb1q1jld"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"9d6yta8gq3rko87tgaq4nwqb952ijgcemqsw550kda9bg7prbz095y6u9lijrptg8tphxbyrf8kkdovyd8jrwo2\",\n  \"country\" : \"Greece\",\n  \"country-code\" : \"ttttl\",\n  \"city\" : \"Port Bonnieburgh\",\n  \"timezone\" : { },\n  \"ip\" : \"3k5o49j4fjdhsm262754h2od5mrbwhu0qmuilp9j7emnw3nhdgjdrdg0iv5jpvamf49r5w9v2zqgw0j3so8im1gi40gvt7jjebxh8xzc580d5oyexapb2pxzcfbcfgl84t7alhbdjv6oljwiemxdfpueedkrjvxlxjbd\",\n  \"latitude\" : 4.660650905393025E307,\n  \"valid\" : true,\n  \"is-v4-mapped\" : true,\n  \"hostname\" : \"Maureen Wunsch\",\n  \"continent-code\" : \"xeks36dzgp8lvrrvgpl4w9m3941daieksym0ao\",\n  \"host-domain\" : \"x3bdfyq8l9tnn0agiv66m6c1cr03m4h98q9d6tn0g7rh9rn09iueqsfmylrlc46jwmw6xsxk\",\n  \"currency-code\" : \"INR\",\n  \"region\" : \"2w0q1g6tidxh7l7sdnx1or5283ub1pha5sa4el9sbh3pw54v62n2ckz1lr2an4briz1yyqa25aexh9uvr3ok1ay7qaircj1mnuh6d3vfisns67wylp0rsveh33pyj5tz5di5gs8wgyn4stiyj\",\n  \"is-bogon\" : false,\n  \"country-code3\" : \"u8co34daqnvjhb922xiyha9k0g4ayuxneq2lj28mumf8qz4n3uj2pwj94355evuz5j2w4ruqydxz6krqdsawppft6k2tn81ycrzmo00j69h319sr9vew0fx4qj3r174iay6u54r27gt5vfy3e4pjkjlj9htak9uyn5m5ctip993hkq\",\n  \"is-v6\" : true,\n  \"longitude\" : 7.498803805018954E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ada07111-6a66-49f8-9816-7b7529aade8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "country-code", "latitude", "region", "longitude", "continent-code", "ip", "country-code3", "currency-code", "host-domain", "timezone", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "cfa02e5a-aabb-4a20-aacf-a4d09f55cd4b",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1274832994,\n  \"apiErrorMsg\" : \"23mwbbuw1tu3lmk656zmkip85m2rwjwn050k4574tuuyoyw0ajdc804n5ezjnt7f1gf9ccyrqy578rf6c6zgpc4rvolu8qsxt2tafcga2y728en1z46ggc19vzwp44r957e4igxn7tx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfa02e5a-aabb-4a20-aacf-a4d09f55cd4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25477Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "46a2550f-f2e0-4955-ab76-97c8b9dd3deb",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 658860013,\n  \"apiErrorMsg\" : \"jlc6pxt52nivuasv7sj3y8vd624umi4clvvyukxi2ueauiboupb94\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46a2550f-f2e0-4955-ab76-97c8b9dd3deb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "fbea155a-f849-46a7-872f-cc2106f84e2a",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1182339302,\n  \"apiErrorMsg\" : \"t5jsfbikffc7o30ueynkuvxzsz4wxrn4x80usg86t6pvrma0sa88ddhy97h5gykm6oarv132qo0zqm02v3ozlhtp77e9ffexe5lj5x1g5gtz4awjpiz3yjwj68kgp02hwkq7huo9siwpyc7bfxmwfj8u1xq544q2jckj0ucjyfmnjelftc8gltzy2ihtcm2gty\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbea155a-f849-46a7-872f-cc2106f84e2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.254652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "490eba97-14a1-444a-9b53-84edc45a5d12",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"10wiyvgxd9d\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "490eba97-14a1-444a-9b53-84edc45a5d12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.254592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "0126dbec-0a17-4160-bd52-ea0ba2f02061",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "hrlaqcwj27cx77t76ha04ceu36jyrapsfmdevt4hvn7s0yg13u"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 693100790,\n  \"apiErrorMsg\" : \"k1leyv8ew0gn1q6s8i8zzoqqfvqnxwg419itirdwehwvocxhbn3idks19i80v6aj3duia08d9bhi20ztt3oxnvggfwox7d1m26o88u035upjwy01xy5s6xcvcexfsvrnoj9o5t940z936tigbe3mru7moqhys968o4dh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0126dbec-0a17-4160-bd52-ea0ba2f02061",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.254541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "e7f5b4a4-7b40-4ba5-bfec-0cd67c92d78a",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "wftbn8adzdy5k3n88t5tucd8j2wyrxa72mmlhercgd1ci9y02yk2gg3kqnbwwzkblf0tonj6qypjzf8zt8wvmi6ofo1gr68yz7s8aiuewq64vpih7vfjpslxb8i4uc2p4txjhputy6sg6nwq6mv0jk8q9ois3roiqiqxzjy9"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1057678427,\n  \"apiErrorMsg\" : \"gzgvy3fefacxxa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7f5b4a4-7b40-4ba5-bfec-0cd67c92d78a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.254458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "6a9c51c0-386a-4cb8-a919-fad0f88d06ea",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "rlm6cxkdfxu9bp47507w9c9c9vxg6x5z977g4m3i1wfwrdo0um1zsqnlrtk71od1b3a6bhdy4n8xg0c10hn6oapmv5bq8"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 920920727,\n  \"apiErrorMsg\" : \"vrq5wde1cbeh9hfi4c7vu4i2mlei0dlso9pjrv2grtw26d5vocz5ecbgb65lqeonro2hjf9tcbtdaf6grurst1detuaf5jxzjluf2lz9zevgcpkxp502rd41a504oiwhgrtp2t57chn0qdepmqp1261o86oodup4boqvsn1cv2042pr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a9c51c0-386a-4cb8-a919-fad0f88d06ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.254375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "f4e145c7-617e-4dde-99c3-c16e75ef0ea1",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "dfp482t0cgvxq9bi5kzf0fmeum8c1db3xos5heovxqz3r7i0nhdtmt4lmy7m3v1jjfe11ziyt2ea3myoa347zqz6mccpbhzcv8vi6dnnrmuffb6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is-hijacked\" : true,\n  \"is-spider\" : false,\n  \"is-dshield\" : false,\n  \"is-tor\" : false,\n  \"is-vpn\" : true,\n  \"ip\" : \"c0dlcmybslpul63dqc5bgtq2avdwoxwc0kgmub52fucu9gonqorlqu71a0qkbjqv4p26m8x0y0894n0bzia08m15t0y4nlpg85bxveczlsd1as0npyf19fu3tf418qagiikgap95sgldufm444hejcjf0mgd5fnzfj0ie4\",\n  \"is-spyware\" : true,\n  \"blocklists\" : [ \"psikvq6svyi2d3bq9m8g6vc7233b0wh2hnjnbwvrslu3n0psyre216hnfobor72dcjza619ytdnc0vmyxe5qojuhhwa6eqs4aimkp49he6ci07aaojh7qoi1i7nj3daxkel13jnnwomj\", \"skox\", \"2guwwbxc7wxktoozohw67dv9eybclsktazxnl3hw1bc4d5f3dgkuwvivcpmaorkg9ydp7shucqgqlmm20chpdmgp4yao1wvvgo7lokppr2cdn5ubk5tqmgcequipq5\", \"f3ve8elt14o9jhr4t7pc4hmcvt6lsi1sy1vd45jqihjtmoehpwrg59uj0u27r72bpecsyb004fd3l0bcb\", \"4ra6r14za4w7oq0qg6nqrp5ln9e4ar7hzb1c3eythwmim4py31irlzk5va2xsr6do6blxob3rbog0j3o6szovusfgxsy3nwm6bs0h7wnna2e641k1gtq\" ],\n  \"is-spam-bot\" : false,\n  \"last-seen\" : 2110704981,\n  \"is-bot\" : false,\n  \"sensors\" : [ {\n    \"blocklist\" : \"0arz9rihsyecvgep5aev\",\n    \"description\" : \"Molestias ut veniam quia qui voluptas. Tenetur ipsa nihil facilis sequi aliquam beatae sequi. Ut nam quas cum quae.\",\n    \"id\" : 695035563\n  }, {\n    \"blocklist\" : \"ocqa9o1yb5q396madxgb6y1m3bqlmypavp8bp5adbnwr9kk16zgpeldxd84vn5mf7lhzqvup1w6187aifd246u7306nvxniklusdr1uma1or6xksnz4jbu60wy508kkdhq3m9jes2kehw8fszlg6wsjwhq4jh2xxrck5lr1fdb8mogja\",\n    \"description\" : \"Est sunt vel atque. Qui molestias eum non quod officiis velit voluptatem. Amet deleniti nemo ratione corporis qui dolorem. Incidunt placeat rerum qui iste culpa. Sunt sint repellendus hic.\",\n    \"id\" : 1518342455\n  }, {\n    \"blocklist\" : \"hrv2w9urnj2od0rjrf1stshyvsyuwlb1rslk2cz6wo61chw\",\n    \"description\" : \"Aut et quo possimus ut ipsa soluta. Possimus ut velit. Occaecati quaerat ut.\",\n    \"id\" : 2112007400\n  }, {\n    \"blocklist\" : \"6l3imutdv00sm6jknwvriw3lk1i914zqeg8oon7icrc12vruilz3euyzautltbfmtddyzubiwcrc040m2r2w88pgi9ord7paz9qsio6zs9j7k84aqukqq7m2fxuvid1ci7x9iplcghdeeoxsuwgnu3na2msfys3i8z0t8pvdnd8altiubjf09ouxi5y\",\n    \"description\" : \"Atque aspernatur non. Alias aut ratione quis molestiae corrupti fugiat ut. Aut perspiciatis velit eligendi est fugit delectus.\",\n    \"id\" : 117462501\n  } ],\n  \"list-count\" : 947688323,\n  \"cidr\" : \"h32fx6fn6skehobflptp0gzp37ugdos2dddwhx5538o3v9sin5zqc2mq8az5qt8we07u6f7tyzfmui1o86cmpw0miidr1bz34u56hn\",\n  \"is-listed\" : false,\n  \"is-malware\" : true,\n  \"is-proxy\" : true,\n  \"is-exploit-bot\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4e145c7-617e-4dde-99c3-c16e75ef0ea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.254284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklist categories this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "cidr" : {
                "description" : "The CIDR address for this listing (only set if the IP is listed)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
                "type" : "boolean"
              },
              "is-dshield" : {
                "description" : "IP has been flagged as a significant attack source by DShield (dshield.org)",
                "type" : "boolean"
              },
              "is-exploit-bot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "is-hijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "is-listed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "is-malware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "is-spam-bot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "is-spider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "is-spyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "is-tor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "last-seen" : {
                "description" : "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
                "format" : "int32",
                "type" : "integer"
              },
              "list-count" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which specific sensors detected the IP",
                "items" : {
                  "$ref" : "#/components/schemas/BlocklistSensor"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "is-bot", "is-exploit-bot", "is-malware", "is-spider", "is-dshield", "list-count", "is-proxy", "is-hijacked", "is-tor", "is-spyware", "is-spam-bot", "is-listed", "is-vpn", "last-seen", "blocklists", "sensors", "cidr" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "8467469e-a4fc-4fbd-80d7-8016d106fc1e",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1540989365,\n  \"apiErrorMsg\" : \"ff3x5j8gue2h8howmphq87byg0rlim9tf0vkzzgo1r2i469wng4znfablhymjo41v6dfvnz35x1tf7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8467469e-a4fc-4fbd-80d7-8016d106fc1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "25c0a6e0-d634-4ef9-876a-d0a037f4abe8",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1747507729,\n  \"apiErrorMsg\" : \"ezzw63u6j1pgg2pl73svlsy72fi39eb3u7km0t5e3d0zehdw5qm5687caayzhznwbhmdtqdfoo6913edyktip62mf2m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25c0a6e0-d634-4ef9-876a-d0a037f4abe8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "60793a8f-b16d-4fc5-a17d-4875faa9252b",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 246350803,\n  \"apiErrorMsg\" : \"3jek2xdbkuhpdlnenbdev26crfhgjh25v5na9hb8tw9usotgfvbg54vuswasi1n3fu0a07ol2k19t6ublunymfmfsuqgppbtsawrc6d2tv1n0qxf8po\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60793a8f-b16d-4fc5-a17d-4875faa9252b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "d714da9f-09f4-4a6d-a184-3b19f9a8611c",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"vyy7vx5qohkqc5k4vaw746bvixablbng7mgvy1h2svg1arcsv56eg9ogqj7i03ffnnqsxwzio6z901hwgtyijow6osoov8v97wmpgp2826z2gu2oc3elkt7ty8ta5ugcrd27f2f5cnmdpfkwlw0yvmqt2nu7ifmuuyktnkdtjiq\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d714da9f-09f4-4a6d-a184-3b19f9a8611c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "533d4cb8-b726-4a0d-98ee-8722ab7ec47e",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 610474988,\n  \"apiErrorMsg\" : \"bpxgpwcu9onrwltssfz2omsjxaysa0jogam0k14bbhs6hc7l5k80swc05oqaewfmu4cqbpdleqnwuh18ylhi7authfh0pht8e4ccu7hqc18f87h29ulvrtelmwxmb0bvan1c8gmccgohi81z4j47dc79\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "533d4cb8-b726-4a0d-98ee-8722ab7ec47e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "55e2f482-53e4-478d-abfa-5022e851b05c",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1160249292,\n  \"apiErrorMsg\" : \"hp5mbkpz81f5kkzqiwch9o3mhblf9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55e2f482-53e4-478d-abfa-5022e851b05c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "a83d8baf-2402-42d3-bbec-058c39c388b5",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1011955814,\n  \"apiErrorMsg\" : \"g8qs450p173l6r5h1yr6bzh0rxr2ur5hxx4u65g9wahw8gy9c8r44vqxiol3wzf6s6fbaer9qxf6ik2slg7far81ap7ec9iqeudlq2ctk2r308iktui6g0mg3y3u5k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a83d8baf-2402-42d3-bbec-058c39c388b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "25a8482f-4d63-4eef-a397-697bedcfbcde",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"oa48tibpoog09x0f6kd0mdessykyq1god0h10orfq9tf6xl20kmndvb0mgzo5ltutbqfkz164zn1c650qpsuub0g4yt2rcah6hvrkt6ytuic7sq1vhdn6yyygj24kjysoi0fdceocp79skpc0q80k6tx4ezypd3gp869eshgj9plidd\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25a8482f-4d63-4eef-a397-697bedcfbcde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "4dc6b266-b0cc-44ce-a32b-cdebc8ccc84f",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1655174820,\n  \"apiErrorMsg\" : \"apihgjc8sa8ti4ziypxjktlhrck4g1t9xl09k5d1eeg2mis\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4dc6b266-b0cc-44ce-a32b-cdebc8ccc84f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "9b526e4f-f117-43c7-b2b5-89e888929a69",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 392835308,\n  \"apiErrorMsg\" : \"yrsxn1vd451tzzkgklzsjlxjonei7jqc7b0sihnwukpavcs1xn31dx94hwhhptunq21k9tt0vzjd8rwkqadteaulf775vy3smuel1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b526e4f-f117-43c7-b2b5-89e888929a69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "ec6d014b-6552-4f7c-be38-3158ab39366d",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1571412083,\n  \"apiErrorMsg\" : \"h6l487yjthrmhi6vd7etzed5wzg6h9lj0h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec6d014b-6552-4f7c-be38-3158ab39366d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "5451b6b4-e7fa-4867-ad74-2f762f460b60",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"22mik00h949kodbxdaoh4efxpr4er9rgqat3s0yubjquroa42jsf6rstxnb4wxqohifw3beu5tjp7xmahjdr5h61nzvwpvf9hzrjnifbf8svt1tnxy63m1p4bf9aoruqbdfebc22b\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5451b6b4-e7fa-4867-ad74-2f762f460b60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.253027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "14160acf-e27c-4a7a-8f57-5c2a31496a64",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1042509723,\n  \"apiErrorMsg\" : \"m4whylq7aqsrtccld1iiv4b901gi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14160acf-e27c-4a7a-8f57-5c2a31496a64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.252973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "1c129b7d-f3ad-44b6-8048-57bf8b93cf7b",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 759322099,\n  \"apiErrorMsg\" : \"870nlnd03du8ss18lzatplxf074jrp4n5qwqw2meiu3k4bqq6whx16v05q25ea1d7uibqxbif06lkqcdej2xe4ztbr3tbpk6149znwj6m2jto3ioc7jqox1os3pzj0u9cqwevwmh21yaop\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c129b7d-f3ad-44b6-8048-57bf8b93cf7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.252914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "6132721d-9e24-4608-b72f-3e4a48205b0a",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1577899030,\n  \"apiErrorMsg\" : \"vevuhk019lqgug8l9lh0vp9ps2tjoq8wyfkh0fy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6132721d-9e24-4608-b72f-3e4a48205b0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.252844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "69f15bdc-cb04-4000-912f-69649e55d3af",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"19em87xemf4smdrm74g4eyq678r4u5dh6x30r9y7mpo1l7meezl3wo\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69f15bdc-cb04-4000-912f-69649e55d3af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.252784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "5be7f131-7ee5-40be-a035-3739183f6090",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "6jitg4bzroxqojnhs1psa56c8fd00riv3myxl8vwudzjtuvic3l9x23ssregyray"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1385939403,\n  \"apiErrorMsg\" : \"0ujbqcc5ncfexwsdbwveax4ymal06fojnpqimcj6x742hlohe9uawpvcdhoaru8xtaihu9527irobiw6lr8k0alleh4n8jxey9uwsm6vwdgefnslcg8c4fvjs2rnsd9fxebdnee85m70xgwov2n9ii\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5be7f131-7ee5-40be-a035-3739183f6090",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "781f914e-a870-481d-995c-96136b81a9fe",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "fgl6ztx9woocb6fkv8tylthuypkrazeg7th41ts2rchv69r837ld3905h0l12o7ixjgm6ii292ijqjdpn9opak2gnmk3it4iwujhkwy52yk6aob5efga3f9cml6cp"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1366915634,\n  \"apiErrorMsg\" : \"3gyovr95lduqfpr2ubr27h9l0ml3125a3padqn3aj1e4tluu2uc0ar6wv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "781f914e-a870-481d-995c-96136b81a9fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.252643Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "99a34564-4a68-4c9e-8935-852e296bd30d",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "ww6ukig663ayqiqnpw97jgc0fxtht0t9io0uvjjla091146irbe5m3py3n4x5yjxwqi3mmz3kceuz3f1npx5k1so0qyotngvr"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1846814095,\n  \"apiErrorMsg\" : \"3wwlg0ch665qem0njzgzijxmzd6cmmlqnw1pbdfdfk208v5wmif0nnyi701g1l4dxefoyi7u8t0dqt8fqsxw1a2sez4ur3c5nmmo1vovm01g91tov3p19ftxn3qlt9fkcc1yzgaxrya7hdouh8ohfubtq4wx01julr0y5q57dny9ev1txqlyyvkfommpbdif\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99a34564-4a68-4c9e-8935-852e296bd30d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.25255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "b8b6e546-b76e-4a8b-b8a7-a1b939f7db54",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "jnjrrqvpvo41da1i383n3fway87oaditty7kb6sy7oucqdfk65svlnelj17wi516dmb30bk0efbvmpdb8yja0p1a4rsejmzczlxo0dfr79116v08e7yvvbuvrfr6ae8121mcjziywbfns23j05erejge"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"list-host\" : \"p39ob3gzorfryxjbq2aksi00hs3a9n1d3rot41tgptuqui9f45raakkv12evt3d4o\",\n    \"list-rating\" : 123876915,\n    \"response-time\" : 658626503,\n    \"is-listed\" : false,\n    \"return-code\" : \"hlf91au1hdkcfjc3i4g577s8erkcxvv094f8yvyly2fsqb9hpwgoqnanhiaopk9vpqlvhgflw3khgxklrxgyxdf97zkoyny9kzozho0ay5f8yj57d479gllzzy2f5x2ov4184w18p360y9ir97akj3yfls1x0\",\n    \"list-name\" : \"Murray Kub\",\n    \"txt-record\" : \"sulg4xpjwry67bsl5hijb7ves60ph92jlaed15u84bykzf7mc5plos7hj6et4vmiua5170e28z2c2k3xkm16leyz5c05osqura6nofflgg85oq0eih4pmze8lsj5lvyx3og12ukhtl9ghc6sptmrb51cczjsv6gcues3ud2ebj0k1ridli4jfpaftsrmlfp\"\n  }, {\n    \"list-host\" : \"oai1sbrf2eqv46uvt3nnw4szfpib7c7ab3yixqsud7mwiwm26e6na0v3bn8rnnmn44ces0u4b0uk97jp8eo3mu\",\n    \"list-rating\" : 1280556274,\n    \"response-time\" : 168548910,\n    \"is-listed\" : false,\n    \"return-code\" : \"33jhhaft43pj1lh3izza8ayur9gr33myrk84\",\n    \"list-name\" : \"Alfonso Mann\",\n    \"txt-record\" : \"r23dqwm207szfk6ifg5f5lk0q05iz84h1rkgkiwt6zqq9l04t7n66ntsibazofbggto0dpdaaps5hi9evi\"\n  }, {\n    \"list-host\" : \"gu4xt9ih723jymi140a6frsme19632rskgx28vm0rk\",\n    \"list-rating\" : 1784373904,\n    \"response-time\" : 11908957,\n    \"is-listed\" : true,\n    \"return-code\" : \"26dclb1mzgdzeg7id1sau62b09ro93yevdd0rm1c6zubwib93iy22h56716kzqw7kp7i91xwu2ocjfdw05uybn3dal64fxm82pst6yuz47c41tstrnl2cnhrw4wxsfh381s1l75bvlxvf5qa5jakf2xe5ys2w2ra6yijr51tc4\",\n    \"list-name\" : \"Maricruz Parker\",\n    \"txt-record\" : \"csj677qr1phiq0kvsb3b8hdpdk\"\n  }, {\n    \"list-host\" : \"obix3wpb9wcn0ouqozqzxti680d8174z7g6cd8x7mgte6zd3i3tke2pg9a80ihm3\",\n    \"list-rating\" : 251917279,\n    \"response-time\" : 1362584089,\n    \"is-listed\" : false,\n    \"return-code\" : \"mknrnouctvajbf56n3x037jeuyoo896jkskw87gyrve5bjybaqj037nrtnajzbeowq54zn6asuzmuggh8tu1vw36h6yowh71ar0utgr6gk7f0f323ga1f1a8\",\n    \"list-name\" : \"Denise Medhurst\",\n    \"txt-record\" : \"5k0zurht3rvxh5q4kdexfo2jnw3pt2f9engpi3f92fhtkhg2wdx25unl6o9jz6os3126bon6baia5e6b7lov58si4kfnwmy7hlypoz5swtu\"\n  }, {\n    \"list-host\" : \"9w1to65e8i05\",\n    \"list-rating\" : 361356243,\n    \"response-time\" : 1921269531,\n    \"is-listed\" : false,\n    \"return-code\" : \"8qd68szbvq8ko83y1cd9g12bfthlf0w40f5xkocsdqwkpfojljre6\",\n    \"list-name\" : \"Bo Lakin\",\n    \"txt-record\" : \"n9b5j6wa74kil6i3w4wqmfhxm1en88r46albz35auaast30njuptlu1xpgf2pv2nn5a72jpy60y5gs12xgz78hqprtuunfno5rnhefn3epy\"\n  }, {\n    \"list-host\" : \"ay9herzmu7\",\n    \"list-rating\" : 1223355663,\n    \"response-time\" : 1942511679,\n    \"is-listed\" : false,\n    \"return-code\" : \"g5krdb48ohurm75a8e\",\n    \"list-name\" : \"Vaughn Spinka\",\n    \"txt-record\" : \"8gos6calou4f09951aw7hw1oqfn78pwbek9s1rusms4vj7w7sxfh07ch3q58cgylkiwhmv9keouexd66er7u3sc03poi0mh6f95cklfck2sv44kujgbzhic1g\"\n  } ],\n  \"host\" : \"xgnnayjt3jwx367y5equvvq60aii1z78bb315wungfuj7xny43m0x5cp5ba3bucyu1bqyzp4z5tgjdz3zbhmvl31v2t2748i56d3el60bvui0eorsbidnnky4ohfx\",\n  \"list-count\" : 2106464318,\n  \"is-listed\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8b6e546-b76e-4a8b-b8a7-a1b939f7db54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.2524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "is-listed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "list-count" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "is-listed", "lists", "list-count", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "e47391b7-a2ca-47ef-8ec9-c39f9ba0b8ab",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "orxbrqxd1s8scc6q8g8q88rdgbqu1w1w4vguy00qolkhonocf6rln54nsulvic33of59wljhsyqsz3nhgdalckm4cz"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1046329586,\n  \"apiErrorMsg\" : \"gsrtg53qhebh63pdl6ig5aj6y76cnqucp2m8c9ilbmrvl91iju8cue0y5azdgmgejzt9myib7mpb4wb1ra1f3l0b4c3p9iba0cd3rpnhr25pdafos7l8nkknwkjygz1tx72ylpmz4v36inegcyv54q3089rbfg5m0pb66yqopfmo9uj8b1ldl0hnltf4ky\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e47391b7-a2ca-47ef-8ec9-c39f9ba0b8ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.251594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "29a87116-28fb-44d8-8922-8b1368d19ecd",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "cw76jlyx3rvw180o53fz3hy8i3qaet321cpz81u4re15dy94txc32umungoefgxxpttbmzeanidurndvuhzb9qzlz96gfktms2ysefyrb5zhvr3u0dum3e2g4yd24g5wyp73"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1750754114,\n  \"apiErrorMsg\" : \"az1e9q65ie6das8o9h67j58n13tf55rxvwdhaxm4fbsvcg7w0b5ar93dixqt5a34ho8q5mt58ngbyod79e9dmp6q18xcy2h4eynxabikie0pr4zuvdslivywvhzgnn8hubmhdieu1x53vk83nkhbadiuzbcwzboknitwb5vasb3v6cpsto\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29a87116-28fb-44d8-8922-8b1368d19ecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.251504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "202f73ea-597a-4a5b-9edd-3da43227e838",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "kwdqiq3dzc4spjelxj3gqkedcusx1015x9drc0nqgvl124oxhzzcy2qlnakwbwietih3pwcyrqe8er67984pi498dd0acobz7txv5ylmnt5arxuhrrbs86uz8ii2idgicjxi51jtf90tx1odtmxsvsi7thc176r1414scx6eagltid3s47kaztc2rm"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 300822387,\n  \"apiErrorMsg\" : \"mw17hjnuj7dvb8zk7e8hzzmy1bp0awqtdgdkfj0rf23106esevqf618ijwfjqo9t5fh0kjcvwe7qd59w8p2qbgozt3dnh72fmafe0k8yzi9nnd9x4hqqsittqh3pe5iv7gtwk8wd8j0so29m8jgyr6n9jixy59w65ew8v0iqagmcmg2r5mtbigb2shf3yxkf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "202f73ea-597a-4a5b-9edd-3da43227e838",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.251389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "2a27000d-91f8-4088-87e7-a42e68231208",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "8uzbv7pm47j28erawb0qzud9j94572b0bnzkch66u7fg4fkjwvsbghz6xhr4ytxitotzmwq8txah"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Russian Federation\",\n  \"country-code\" : \"jjjjo\",\n  \"is-ported\" : true,\n  \"mnc\" : \"yd0me3fzey2ystxh6orli1a0n6owglay7d86kp0tvo0d1b4mfqhuidxmbj3tpy276vuuadrhkgz5wbe81s8aw5c0twppzgbkcyr3m33qx0\",\n  \"number-type\" : \"tuuzjmftqgsfxwlj45fuqy3eegnqqhijdv3rs7oc2e9seydoymi8qf292al643ps\",\n  \"international-number\" : \"cqdqd01g74hmc26sg4lwmjl0u3leas3egjkz5ufqk9i8m6fnawl\",\n  \"origin-network\" : \"dhwgjr2l9zud5igkevp3bsqcfgh9tq9ryvszh6w7r1su5o6xweajgwwita3gyl693no9m61uis7ciprh1zya2ak7msw36w0a0zlk2sot310o9osm4ooi5h8er6dlbwxsadi8dgjxpx25t529prh9lbuk3b6uq8gt3vj7il4\",\n  \"roaming-country-code\" : \"mmmmc\",\n  \"imsi\" : \"8wh7uczmnvav68xcfdd4gbnhrahqi4vh5ewcedl1frdkpnwl7e8c58h6rv0hy75zdrf0m7z6knqeod\",\n  \"local-number\" : \"y7b650nsldeffmvmotlcpm4h6i5s8qtyhk56v2hok0ep1aqh4v304c51bwt1io3ppgkc3md3707qhggc6iscee1ws59\",\n  \"mcc\" : \"g3vz62y9fiskj9l6s8tui9ksq8c7pv0hsca1avx9ekaj319p78tik4c02104yhsmrw3m3gg056x72w2xmgb6xnu34c0gjkm6c5orlv9j2f3rn0axq048avl8n0wakx25z1pfod6yjj2chv3b6x\",\n  \"hlr-status\" : \"629zcknsx931lbeqv65acn79ka6jp2nfsgami8g56243c1ieyyb680j7rrsxuzerdjh4cvcfgot8prutem9f9m7mo4osrrkt908l6yqratub6uqmwwh91yt0w1menl8j5x51cglkob6dp53a39x867h16yqydm3ex61haq6vjcjndsgg0xtt66u7zz\",\n  \"hlr-valid\" : false,\n  \"current-network\" : \"00my37ffg4r152l0nu861g4sv7nz708aib8opgqertquzltjbm7xp45169py9exzxcml35mmft1c6sbkqynmi2dh02awuzjg9o2rdpobt2on6ztmgf8kppprjkl1ly95yklg98k8tirblftq59z9p19\",\n  \"msin\" : \"ucjcomxomeeodpg0ht8071ouo7hc0z0vg39yots78qyzqntp295kq0es419nqe70p29x2lj1rbha6wfpfd0ps2jqrzaqcuh283yr2eyd6u9k8ny1yvjhmbo5f97nrtlhjgw6nt8j47vpkt\",\n  \"is-roaming\" : true,\n  \"location\" : \"yy8t092yn9j9ixzl6ztjkfp1m0be9hofm77e28hq03twzw8p6euhne6kn30kvnn2p5jqfvcyqo2ugkagudxnsvh2uyw707uhotnvwr9i8ksvhmfjk33l6ag2wb8bo3lq6jv2lm3zemzj48lcj9ginnu0ck4vu9w0z2wfq2y85f\",\n  \"currency-code\" : \"MNT\",\n  \"msc\" : \"mncon4fvkfxk2v1bfoabjc8m3cq79mnzrs6eru9icab7h1ed2f1nn8hh0xb466uieq70k9ziwfcus4s1lc78lec66ewvy208m45y9dplx0vf167nsgq7x0ex5az1tap6oq10d5r5e4yc724p6f4cwdnq4er6bqba0ibdiru1xdvaq7n580r\",\n  \"international-calling-code\" : \"5yc9w8v93w8znkiv2sfvhjhutw4zghufuw7hmzffva67z5yxvs8h9b9qzzj1hz1gbcve9n40s5iq9xg393wk4la3zmulqlazqs02xl0ng59kqj647h72qfuphu5a4zegxwz8f87kc868d3g962ys0xff9hos1ewiyqi769ag0cgsrhopv5belxd2irc3\",\n  \"country-code3\" : \"40iroinb0akyy4wkrrdvxf32807872xzgt4kk1fh0fh70ar1i1iloy0icln4kbpgqmw0il18oxtaug\",\n  \"is-mobile\" : true,\n  \"number-valid\" : true,\n  \"ported-network\" : \"222regazix4pxvqlh78kidl1zpa1s37lickp48eseliv1me8flgvdv4kfge8i417yuffwg16zdwin1e528nl36dqhq2r2b6097rploh5k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a27000d-91f8-4088-87e7-a42e68231208",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.251219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "current-network" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlr-status" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlr-valid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "is-ported" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "is-roaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "number-type" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "origin-network" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "ported-network" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roaming-country-code" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "international-calling-code", "mnc", "number-type", "hlr-valid", "hlr-status", "ported-network", "imsi", "mcc", "international-number", "local-number", "country-code", "is-ported", "msin", "location", "origin-network", "is-mobile", "is-roaming", "country", "country-code3", "currency-code", "roaming-country-code", "msc", "current-network" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "104810ae-a015-4368-a2f8-4edc75b1f673",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "w19v7emyuijslfmufryb11bcgt914yp7ftwdjwqe3b8htbvnd56it9ibu8p064c05murzjiy7k4qi1xm66io30cltxqdgryhg4hdbfu6tsn0x5lq7x1nuecpkzf10x8lgiuufc7z3"
        },
        "longitude" : {
          "equalTo" : "dxlrc02jhbrp00ufwl6bwi86m591acguqeb4vzn84j12m1hsj5jq93l6secmc639oemibf5txa3pk9rayqp0ejmkqm3"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1838107436,\n  \"apiErrorMsg\" : \"8flbq89txtbtvpdc609f54gpndwrpbcpagp5hlesd54tgi0170jhyghntihsqdxzit934nrfpv6rv774nz3dxl6tw5iczf3586ebbxa8ghqoeuyyzndlqh4qb0xt3gncoq2fbbbrp4vmwqhbgl1zifev01ceiw93yrbpwqz3h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "104810ae-a015-4368-a2f8-4edc75b1f673",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.250362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "943c829b-b9e0-4c13-a735-42c5a03b2be1",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "f1q9njdgjetin8xuwqq7nrmd92k4yc4b4lqib9ncb8foubo41rg9lbgi75z4e2qrlnkxldtcw53yw6q37j6kw0k"
        },
        "longitude" : {
          "equalTo" : "wwuwexhz1ic27nyieki6oes8ri6o8f0nsqhmqndaorc55k4oxmr6rmkshgwi6yyhk3kv5a2p7o03hxr3685wp56uu94lc6zmkoqpmvagra0wqpbzh0grt9if7dq0hub2rov9zaa3xcpz1owp7athj07qirq0a8pd3c8i4namvrep95p7y"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 471176067,\n  \"apiErrorMsg\" : \"9devy7quhn7fnie22ogn02o9dwybun0todch9clk1sbctk6vh1b27wh52d3fdg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "943c829b-b9e0-4c13-a735-42c5a03b2be1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.250262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "9c07c6a2-068b-4799-af7c-7b6962247688",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "i3apl6s4m67vh0wrldbe5ssmk0gvcyd7gqrbv390xy4hvfmxsiap7tfr6rg6ci0icegkq1nzc017egnqqzqd76i9dq3jval7xoxg12whgheghhcwrfs6aiak8potoceuv3tecgb2nwco6wj1kenfyzp8c"
        },
        "longitude" : {
          "equalTo" : "szhegvza4q83pbhtkhdbkraiyhx3hnqhoonadw047eapg9hctrfbwsemlqtdxq7v7nij8rc3zp09ia4i8hfb8322z1fhajmand8yphidn8"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 192060537,\n  \"apiErrorMsg\" : \"0t11bce5vqqq65uy31qkvl4jba2n2hl5c4h0j18gpf9xvvbpd8z4r13rwe3rixq5vjiiw05f3tmf2o077dycyj7wov1gqeh2i3dqej2zdh50gmm5665g15p92oa6b0fx38tsqkfavb63pjljulj1zul3lgs1gxfen2agrfzgt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c07c6a2-068b-4799-af7c-7b6962247688",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.250163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "8d253268-5e99-48e3-a8d1-792280612977",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "meennqw830rovluzugdvj54btpzejmle6fz2sqt7reoqbzvh5gnd5wxrmawy2498x8gn0w4s7nqrm1fldhgufvzbe1tcafakgqh9let440iag3mpnbvfxghjtpkfrtwp"
        },
        "longitude" : {
          "equalTo" : "j9jto0jn266ai06x"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"wyrvhyf1v73nsyaw570cca8nk5f5y400j514vw33ovawr937p8vzqd9pxk1l04eee9hkql7tuy8pey2ikh64l0lg5bw8046j10g3l34318tfkzuus6digz8dk0kldu3zj405hwh0d8popysnmu4djiynex2ontj1yyfy0jcs2ndyqijgezgyny6zv30db5vaxm422ov\",\n  \"country\" : \"Serbia\",\n  \"country-code\" : \"ggggw\",\n  \"address\" : \"kipnfsy40zuvl9o3mr1jiyb7z86vi2yotdbxzpd3uqot0nfc045v1norub6akiaa1ydt1bsnivhbrymzu5dscj6vh8r34marm51rqujvew7oc0ekgfaxz2e5xp65x9vgtilkt5owoflxuqej\",\n  \"city\" : \"West Edisonville\",\n  \"timezone\" : { },\n  \"latitude\" : 1.4403723048489131E308,\n  \"address-components\" : { },\n  \"postal-code\" : \"18702\",\n  \"found\" : true,\n  \"postal-address\" : \"zdfu6n9ivp4hjhjbqdbo1ju6il61w3kzf4vfot6glq3b3f21pv87hfb9l50aa5\",\n  \"location-tags\" : [ \"j3chc1cmfvs766glo4r78ggsx4z9t91qhxh5esowngsd8s4z2bwrd3rdmd75mwdytfm3c3jhuuxd9256l12mrjhzgmq9x\", \"xtwdq4tn6jv3lk1hevs7fddakb7k7lb35l0mqbvajwjzl9itresiwjyi3lgykqzxs4phmxniw95r1g7igjg5flf33jtk311j5wkioy23x4b9s379aljxyowkhbjkpd4gp7p1morxknn3ce2i5efgr8mnore547chfu8yyhez84pcozgs0h2wog\", \"x8dwxr0jcpww44ih9qlm0vwsro6z6sdi59y0qn6t2ibk3ljy8w7lcyw2lgmf93tk\", \"x5f8mtkgy2vur7nmjzthno3a8vrm9563yu0h9juc8z03vs5m7dg88wpjwdlo6164qxfubctgzccji91q6zwv29tqr\", \"zfoshd7np0ptnua3zl8squ03y85fd3epy6rbkdgo5bck778vmalqh79xjjn7u0pga9q10bmjjr5u5hhxktv4\", \"90rc1lk50txqqyzi9ait8h5q229j78h7qbjbhh1nelgofu6h4tnrh19nb3syyvcrle0lpipbnc9rwt6jsltv85vf67q4qfjor01f4ibx54mu9n4kp6185sw0jk0dxr6pbuewiu5tqo8xjj8jytrmm\", \"owuvnbqmspsl4l2yqf8v7m8i4y043cw9lib083ieo9804kyiu2y21igyszpsvfg4ewgviujjhm4ii8j5p03ixsrmnmyhxk8nly1hq3g9opusnr2i4hh72a8ozxpw3f7f0haawkux2x1x7abd9va4ymsmrkh11w7u9xbpvv9mh7l\" ],\n  \"location-type\" : \"vti2j01phq3pqdh2cu08704xn3ba72pygq281sms7q6y2nwg3gtqmqiyzi054\",\n  \"state\" : \"Alabama\",\n  \"currency-code\" : \"JOD\",\n  \"country-code3\" : \"y72eqropgb68wwgux8z8tn57fnbcjt5zz4rp9a7fs\",\n  \"longitude\" : 3.4145568190699213E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d253268-5e99-48e3-a8d1-792280612977",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.250029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The complete address using comma-separated values",
                "type" : "string"
              },
              "address-components" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "location-tags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "location-type" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postal-address" : {
                "description" : "The formatted address using local standards suitable for printing on an envelope",
                "type" : "string"
              },
              "postal-code" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "region-code" : {
                "description" : "The ISO 3166-2 region code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "country-code", "postal-code", "state", "address-components", "country-code3", "currency-code", "location-type", "location-tags", "latitude", "longitude", "timezone", "region-code", "postal-address" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "c23d0b5c-45fc-4b40-b57a-0b1102e762c5",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1390851691,\n  \"apiErrorMsg\" : \"2tc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c23d0b5c-45fc-4b40-b57a-0b1102e762c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.249444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "26d0ad26-0db5-40b8-adb6-5cfcd3c169e0",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 640927315,\n  \"apiErrorMsg\" : \"t4820g24u3064w5bfotuf5to9i689q1upbd12juallbtxapbzcnfa9d6blwe2hvmfop03sb2ie9jebhtfvpmrhnowpi49qf8yfyxg4335q52olf3676qmdjiaelzfkaeu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26d0ad26-0db5-40b8-adb6-5cfcd3c169e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.249383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "087a2c8a-a36a-4c31-98d0-7498cbf2ad8a",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 312851462,\n  \"apiErrorMsg\" : \"51pfuzr4ik8s2mswbzhfflkusi4iakse7zbwmeb3jhr5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "087a2c8a-a36a-4c31-98d0-7498cbf2ad8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.249322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "c697442c-1541-4803-b121-b8818b8601eb",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 45958512,\n  \"locations\" : [ {\n    \"region-code\" : \"2q8c6nls9zwk2rvsdc4stg0cfuyl9yxtfw4rc9ultvjoq1a6eyj8mp8i1u1jncy94f7mx8na25ohu3u9ocilbx7euwi3fnz45hkbn6xucrdtak851ie4px1n2n7df88lus3bdbryzr8259s5386fjq9ahq69a1glbl47ktmlbi33vteurp57lw4vzeebx408\",\n    \"country\" : \"Zimbabwe\",\n    \"country-code\" : \"ttttj\",\n    \"address\" : \"ddl91q9oz419eh5jordb0x8p1sbz6ynt\",\n    \"city\" : \"South Edwardton\",\n    \"timezone\" : { },\n    \"latitude\" : 5.267548800818716E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"10447-6554\",\n    \"postal-address\" : \"r74yiqmwvw5yhtyohdq03swsiv46dh08v0hpedtqo29a3hy3g73az49q57a62es95jlubjiatot6fy4r7mbn1ta1htxiyz5gu6760089paosl7oemd82zgxlqs10q29xsw4vu6ubx82e8xmtxiq42xcmcafban9olhfc52lvz6sv1nqg4kg7tj9oseu7hnxc4tha\",\n    \"location-tags\" : [ \"3pah6cdtjn6o4pzhkmwsfya8mdy0ndes9fbsotehl1xci41lh2romt0s25ycsugkvmptqqu91wefz30pazx1rdv5ijd7f5s1m3cen7p4mfddxwz9wqpqdgfnqktv40jiy0w5rc\", \"ws4nki5vvi0l0ds5vh7hjgq7i1w02mv5jm2cell3r6f1fd6qeya2g2zhrm9qw9my7vjkm0wwnt6tark4p7ej93maqoo14v8fapnf5vbqt8itz3q8fwfg3qmetfda5mcnu\", \"ixfvriwz16ect2r19\", \"uzmg2gb7tumkp9p5ttcb3budu3be0hhdwqsjovkb6atycd30c3ao1kxnowag3d5lfw2mnnul5palklmnctdu2beu16guas4s333m2rjm5njdrszuk6anddi2u196x\", \"qnx5b1yhd38qett4pk591l6ctok203z3tskpj5vmirmkpmfqlbzl8rr84ol6fm9zmerauvw2n1wzxnpg50zkwf9ug99erf9l6s5srt1u35mgwl9\", \"7xy1wgf3f8mjc1b5mxlsasoaiiac14xd556s9s1mpntioajrs2bwo5rbr2px98onw4f1d0y3leidstv9ts4hb1cy720jmq2f8ud2ggbczukkkog84wgqbytm3f776gehs48pj4n9uf4u8l5229fsp6twj8y5wodtsqk3kw20zon8g7ahawdrrnhrer9p8cyga\" ],\n    \"location-type\" : \"be4m12d4armn6p9lp3g3y\",\n    \"state\" : \"New York\",\n    \"currency-code\" : \"PLN\",\n    \"country-code3\" : \"ty14rc813pqv1ovnvcgziwi6kylnnb76khs312zjh9y1efj613f6ubygnk1wml1zkdk7h702qu46lezbv6u5qvqs2yn6nag8oniluzcs8eihju35brtr9hf24tp0rqgzl6jok8nns82jnm1fqkc8vhwej3xirka2fhpd304pqcavdbsa8cnh0vmfl6h9\",\n    \"longitude\" : 1.213527068799249E308\n  }, {\n    \"region-code\" : \"k2src1o6wlkxe9vq8g5uf66fsutmkvo0cel8ct2casjp8iwga21jpghu35g8c02688xakbfsoqlqm\",\n    \"country\" : \"Lesotho\",\n    \"country-code\" : \"ssssy\",\n    \"address\" : \"r8z\",\n    \"city\" : \"Shawnaville\",\n    \"timezone\" : { },\n    \"latitude\" : 8.204341390417712E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"10357-0095\",\n    \"postal-address\" : \"73mdtxsxorl8ryth9uugeblmp7y5x6fcsnqn47461b38repnakn25w04v5ys1jz2s5umcbpnwgyb9tm6ws2czgiwoqgcxe2vtc835kgkztllg7fqdmiijk93b0tg59bfepaeqs8dkjx5hwln7tv3ikuky6otkdbvzaserdkuttw8bs99w1dzfbtyn1q7mya1cb4ci9f\",\n    \"location-tags\" : [ \"jg9fkpcifs7expp4me4ak2z4q2j9oenrqa9nzss48dfsiwcs54n4vbemmcu9pu8ve299ky8z05azcj4yrua6t438a3id9o0ln37kuzbkaw09rlp4dx4vr1ihqnb2z7ubeb3gbufzti4lqyjc\", \"d16rn9ddaje7u965ixi6sr9qpvhhukrtj8vmdtmqfznkqvalw6cpr8lgw437cxaq3fegn86c8i0a2lqg\", \"u9538vvppbt0gsoktsl4gy9fkqrgs8q12vsi\", \"mftlv3b8imq3y004074bugo7movvgyyyhyg1lgxasa8u5kh176eqm9wvmw2i\" ],\n    \"location-type\" : \"1qmcb4w2c25vski6sb5pe0zlcbd1b08ma26gi8hz2qzt2mc7kbc77r9krf16h9cmhreeyfgybkuy12g0keeyi1mxioope629utmny3i5eomb49od2d9i3g4j5wqi24du0h1rxx5772y8xzzy46x6iym2le\",\n    \"state\" : \"California\",\n    \"currency-code\" : \"XPD\",\n    \"country-code3\" : \"dq6qdj782z8ej8aaoe1l3khgls48gppyg096dviag3mu8\",\n    \"longitude\" : 4.0504848041907093E307\n  }, {\n    \"region-code\" : \"r53u06s8dqc28fs3pcr7z2tdj80ey03mzz2wtf0iens703b0jz74ijxs3d9dojab3rh6ehgzy4c4fds5v150rvv02ipur59141kh13cu6rpjn0a163p6k8i1p903iqjt98azkdlpgqnatt1572jinkxa08azxn5ajm4m54uqwryjmjylvoitmr9facfmkz6de2q\",\n    \"country\" : \"Armenia\",\n    \"country-code\" : \"cccch\",\n    \"address\" : \"ceyi\",\n    \"city\" : \"East Marian\",\n    \"timezone\" : { },\n    \"latitude\" : 2.5944990290914957E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"58258\",\n    \"postal-address\" : \"40xjaabc68dfmqqwjqtqz8qb877rxlo4rdi0g5wmwhxmsg5og631ap8yxq5y9nljjmehx7end79nab9kth3qmi9fr0eeejh1irufh8fcdbflsdtpnfgnuo8livlh18kmgax7b9g8cld2evr25jmafoxhr1i87k9tzlojg1xs3ozljqeorqy0ypnl5ui7p326dgiwk\",\n    \"location-tags\" : [ \"as954a7yhq7hl6vesaq4yq6v8rekiuu26us23x72wj7y53fn8qr59iipeot0am78a\", \"kn9nixrc1bmoeraslaqjdykh5rlmk0i3xpku6yv6jb3zcmcvsp4ns9tto22q0espz4qu912ywx5ci075u59ich8mmtfu6u5gep8c4mi4yueclqvibh6c6hqy1q57yjxc6kcwivygr3qq0gsuj9uxa2p2grbratrdjumc8x9x9iwjhkxwysm\" ],\n    \"location-type\" : \"2ugkl8dl06sjmhh7uaavpemrvv5nl1jk8lixrwsk7bqdnjmnsozlfwnt3xv9277ujmoa2g35vg943y57hhf2xklrixnm4h9hy96vjt21mfgt4fknork59emaka3nuqviyawlsi9cxi4mf9hu64fepbtd6\",\n    \"state\" : \"Massachusetts\",\n    \"currency-code\" : \"KYD\",\n    \"country-code3\" : \"3wx645hhqmlw0rjecuacl57059sah4nnmrnfx31wokq1ghs13vvw\",\n    \"longitude\" : 1.2271166225450745E308\n  }, {\n    \"region-code\" : \"rnncapzf2ii6pfu4ww3l9wf5h0jbynfvtq0kuxg2x\",\n    \"country\" : \"United Arab Emirates\",\n    \"country-code\" : \"kkkkn\",\n    \"address\" : \"hccau8qgqutlf\",\n    \"city\" : \"Heathcotemouth\",\n    \"timezone\" : { },\n    \"latitude\" : 5.229892616386497E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"92966-1497\",\n    \"postal-address\" : \"76imsqvkotun1uqd9p58kd3mop9rmk89eal0vcpvpvmh8iddi3equlmborsgloclnqynt1yytfx34eyzkaoc999qh\",\n    \"location-tags\" : [ \"dr63x8hie2195bi894nad5j6g4bzmtymbsk93vza2u1eh1b4cyuxex29kxbivgvyi6ajvc8eak3ckyx9qm0nj9t3mlbw28i5gd5meno33oirzi2j6ht4xoagkuqu69vwn9cpojelaue4d4ok8fsmbazwt2dmke6vd2rsh18vymgajhhitw5fbku6p\", \"ay50e6ts1pnfftbbbxh3fe71as7pcermn7cjs0l0feu81ahz2ygp43tqwh4xv2fgkr0qlurnv8qlzr0kjnewrjhsa5xr5ylkqv1bl4tt4j9tqmbcnvzleg2b0n5jctaedjv746j7rixu4yi92kvlzstgpoilaed78a6tn4fwcijqyyubzi67g\", \"lqwlm6y75e7l9ce\", \"jiefswlqmdz9fhj1gdsw1ceqe4t4nxd73fi74028r34z13obs5xybayeyf292e283gi1q4hk9jtgbkb3awz4qexe\", \"3jpq74a6y1k25h4lvqtb7rerach0nj2zptis7e3lwihtehbcl1wg9n\", \"ng0egk0geuhsbwa1te9kg1w2rgnbr9cfidk41c60h4hxx4ngpooq4s6qbqnr5a98j6v7xf0c0ft9j0xzx1\", \"rfmt3b3cupb7ot7y14xyung08bl0u6vtj671wk\", \"bkywk3wm2d02727efyhi26hhgphd71elud5dz0gdvrkdjtx9nm1l73byqoilme2cnounghoo35kkei0qe295xqi1dtajrz4ketnozcogqiwetwn41x7xv8zkojv200x7ysa8p67dk68b6sylo1h\" ],\n    \"location-type\" : \"pc1vnmzjw9sotr9ljegjhpjok5mdejjnmbykw5fmh3wx5ak3l7qu5h012cj761sxgfh381ert\",\n    \"state\" : \"Connecticut\",\n    \"currency-code\" : \"AOA\",\n    \"country-code3\" : \"70960g7vu4qvo3pn89dyr8x8k09ztqf0fu44zykd0rott6135slytskqsqhk1ia2m2vh9ilpni8n1l35vwc2d8dg2\",\n    \"longitude\" : 4.708960207798344E307\n  }, {\n    \"region-code\" : \"i0pesoifkngdi13hw77g56iqa3c44m0ux0csbwu0bgd2fun4j919rn9cqmk1giwglf1z9ex4gim37hridej3lrx6lc688vh4ql1a8i2m312294fo3wxry4qt54mbtxhdsr4khw7yccqe2b7tbnht8tjkhr7ovkzjg996857hskpeeow67pckl2qbq59l2cubh7c14o6\",\n    \"country\" : \"Serbia\",\n    \"country-code\" : \"aaaau\",\n    \"address\" : \"a2k4rmb0lzez2l7uys36ycpfh6n5q6a77paqtpykuvujycq0nygtjrf83gaxoks82fuvyis36s9b5z9hxx52vzypt9fc8klyfc1h05hgk2xl6dsyhy3l07l3gdyh8pzao6e6cy0f9ozgq2b65x9y0n6xzjuehj\",\n    \"city\" : \"North Robbyborough\",\n    \"timezone\" : { },\n    \"latitude\" : 1.7491626942529978E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"43623\",\n    \"postal-address\" : \"s6xbhwpct2jzw7qx12gv3lrt4ub8ywldszk2hpy\",\n    \"location-tags\" : [ \"sqnz4oqdogeqibx0x6o4vz3oej13toj467vgevv6cw8ukdz7dpn9yuthiew0afjo8dqan6q\", \"2jdbrnno6gdqjttooym98ovo0jevs2pje94uynj4q0xkcparegdnqrb94f\", \"e649tcpzakht0x8ak0pnuj9dxx24rareq7iivl5nu08500juxrg5ml8vyxechxura5f6lxw5ad641b78wl4rvsw6hxkdmef\", \"ej0zqeivmfqsf951k4r2anfqdbtpbhd2vdcsyqdw2mu5a6qsy21w8brz1f9o8z1p4g91gffhfnkvxlr8bj1p3v03cyl7y5rzdktysqo4ltnnwzg3dnkcfqad75kdqbfii9vb4mkj8inwujs762t1z0s20lvmzq9wgbw52\" ],\n    \"location-type\" : \"6xg82yk335brof5dgpnxcfmhm1ezef479llu28j5t17p8zxkgjbe015r49msllgs7y6opanjqaf2jsu0sslmcjai0lclae7jvgij776sm98gut8ss71x4zcmq0tih\",\n    \"state\" : \"West Virginia\",\n    \"currency-code\" : \"KGS\",\n    \"country-code3\" : \"i2vvs705xd21trgtg5o3sagwura33vdajufc1snt1awzwqde3p5j33vx1numw4mqozaequ34ki354zszclg6s70r7bptlo78yqmf99z9sdncf44nsl0v1x4lhd3qes7kxj55xw7p53clgv5zu9fy1m60fcbf\",\n    \"longitude\" : 2.8464520067564075E306\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c697442c-1541-4803-b121-b8818b8601eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.24924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "32b551c3-e774-466d-a5ea-5500fe2ca1c2",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "i5d175js2wj2jxrrcpgl1pz017z6grf7x9l8gom7ctnv32db6ep2o3akocrwbl2tkc7squz90n0mljmmnmchaqtpqkjl1hiers9s8ihv9a3rj35t9znri54k673emzesqo19r6pfei1"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 320478397,\n  \"apiErrorMsg\" : \"h2377pl9dc4c9i65b2w1cm77ee86hbyeqpp51qrsie7ood0b57vg3gtc1vw22djqm1ud22t5np25g799lvbswzvh2ta0bef\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32b551c3-e774-466d-a5ea-5500fe2ca1c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.247787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "716de6e7-5337-4f6f-8a6b-ba4f55f42fe5",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "k54y75v59wz1kq6sljrijjewy0eb3l9ohldixgiknm62wykagjmhpracjgjkg996kxfg5b2awm6p4n0u0pnupd9d68jh7ntz6iji00lspvi5rbxd16xaxoa8m056w70397sdahk95eno24j95hhp5kldzvpn7dysguwtb9g1pm0w1tqiuv2zf9uq62cgz"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 642917305,\n  \"apiErrorMsg\" : \"lwcdvy8jsxmel3lica0manatsbl0cup8ocvfme123d0ym4pkij2gs9kdieuc8iqeu7s3c9l529pinr0ncdnfjmbo6kogfjsn62v99774kyt1weewvudd355hohn20h708k0qdevtugkvm9jbecigorstbx753xnlxn6gkhlaov10bvgvm0vb6a34kg7is6xy9ifpad\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "716de6e7-5337-4f6f-8a6b-ba4f55f42fe5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.247707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "82f863ae-92f7-4547-975c-f611bc12ffd6",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "iikh8hdnr9uxucomim2f3g"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 566242208,\n  \"apiErrorMsg\" : \"8go8349rx2zfss4s1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82f863ae-92f7-4547-975c-f611bc12ffd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.247623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "a9a0b1ef-4e47-42d9-a28d-d3813bcf1308",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "m39113cn8d4xbw4861vofzjyjz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtp-status\" : \"s36iaoc4myohmpygptu8tx7ee1tclqr49cacq9drw4p9qdl1xkoobuf0adnzusf596rrz7hheolg5h0e2i118rpqz9dj3x6b0s5t6mx1rxiqiyk7k6p9tiolahv4938mekwdmf9711mna6dn2tkeqhlkf1dqf21obs933x8xzm\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : true,\n  \"verified\" : true,\n  \"is-freemail\" : true,\n  \"is-disposable\" : false,\n  \"valid\" : true,\n  \"is-catch-all\" : true,\n  \"is-deferred\" : true,\n  \"provider\" : \"tciiyl\",\n  \"domain\" : \"9v314n74wa8rvvgw9ag2r432sjespuvqbpzxon87nz1xhdlo0uofvs02d98ib7wdt5kk10v0jooictw36j0tqrmcdyexdjah\",\n  \"smtp-response\" : \"fx7jfsj37afg74xbwloh6kbumcb0f\",\n  \"syntax-error\" : false,\n  \"email\" : \"l3gr82x934hjsglf93fdp50omgugkbtdchs3ushyltt6wahkqkxfkqfu7qp3pvta\",\n  \"is-personal\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9a0b1ef-4e47-42d9-a28d-d3813bcf1308",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.247536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-catch-all" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "is-deferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtp-response" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtp-status" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typos-fixed", "syntax-error", "domain-error", "domain", "provider", "is-freemail", "is-disposable", "is-personal", "smtp-status", "smtp-response", "is-catch-all", "is-deferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "f4e8c79a-7a79-4e73-b0b8-e11b28018bdf",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "owsxu7o3v4pn29prfh6ons2zrh6q7kjb3wv3jqdho"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 258935621,\n  \"apiErrorMsg\" : \"3ycbu81w6w8gtkunkuo6fg1qacs9mbwy959iace5w0mwuf9bh1mfb8p1bb6nrxv1hxpij1m5lcfz8or4200zxraa3cufm7m5ccfzqux43if3evllc8miwls1syckccgwfuzpe9ri1tq5hc7egohvgmmcbxygte70gqpfkp3wrmoo4npgw54ji5ic8m6kkvcfhwmpjxe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4e8c79a-7a79-4e73-b0b8-e11b28018bdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.247231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "3a66b971-6456-4794-87f9-76d3a1ee8fbe",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "fm3rbtts6zoccrg7bldasogrr7puj3ty5ws0a8s"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1338039585,\n  \"apiErrorMsg\" : \"jsmgmjr6cye03hv1a12t5qp3znmqarc5qxvuq9e04qlqwl4k5cziox44y6f845dwpc43tyi36m1dl60kqp1tclr9g7qdc1heeusdrjkiyylt6i3qj6cuxjdg2ugy7jrpjbcnh6wqvtxzs0ce209y8pwdkb0lpk92x36ci5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a66b971-6456-4794-87f9-76d3a1ee8fbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.24715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "830272da-4ab0-454f-a943-75490f680491",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "2d2iifwfcizvsncfci3xf3yicpne2airdzh45yzxiucpbi2zpzfr8vfgujh7w9fryr6q69o58hc0m2orqyqevq53pk05o3lz8kg4ygrjpfe8w7gastc7e2q1hu2rawk1xuj5dzvcpiq8y96o"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 171102859,\n  \"apiErrorMsg\" : \"qzex4hlpj1m754nfiagpimacdpp5yy6a296d6aq7j1fv3pk8xio1j4pe7hescrpavoy2ue5g2gfp5yb0ble2ssx5f6llnqpnr8c25fimw85z25sghjs6iukp44fl79\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "830272da-4ab0-454f-a943-75490f680491",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.247071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "8a7c246e-3686-4435-9d41-e47abbae5bd9",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "l7uo93v3gr2cfom49vyrtlwjylzr24eeomg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"provider\" : \"grnswc4zmw2p6xw2n2v2d9td30v658axh1tqh02edoicw6j9mgp9gdhm4j6z7v1uoqdrzmv\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : true,\n  \"domain\" : \"tvb6em2m341zeev72nxt3o0txxw2xnjxsh78qqnbohlnnzpt6ipd676kh46sowpeyfnfq6z8wiad1mmaqcjs4p5p6hof65\",\n  \"is-freemail\" : false,\n  \"syntax-error\" : false,\n  \"email\" : \"36ld33zdjv954v7v1ye6f4dykjtoc9rny0ba6jxgdr0uyj23587x20b43ljp0rk5fvbsfw8pmdak8npnktfumil6jod90za4u8sdjg24m16mdxuacq6grm7rcu4v3iw8fyuyt0ty9v0xm3zsby\",\n  \"is-disposable\" : false,\n  \"is-personal\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a7c246e-3686-4435-9d41-e47abbae5bd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.246985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntax-error", "domain", "domain-error", "is-freemail", "email", "is-disposable", "typos-fixed", "is-personal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "61f49614-d8ec-425a-b62f-6ec7689567af",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "gur0vg6970iarprmpama0mxmxg2ox7pevo608hb2dm2cozr4s4ymnmc7lrlr31pguorxfpg1gkcpwupk0g506f9nftceuasjo0aubd9wr2h37abqll4ppv43c5wsa1zq5z"
        },
        "from-value" : {
          "equalTo" : "zi4anq8q844s7yadwb4jz4muktp8dy3zgzv303wjrue096ddlc2vftk1if4tvratq4d8udlwl5z15856iz05k9cmxcsk5zcay6swnce6l6fr28mc6l293wb1othpajd2ksx85sfs4gamsmdku"
        },
        "from-type" : {
          "equalTo" : "58lb40kc51i1dsdipuxct7x3jaiqsu640csu7p72cp1nx0tzyg"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1645690538,\n  \"apiErrorMsg\" : \"2xttxzp114sxy01r4dwb4kkqe0yxnv8a9n47wtfkgsy41oor332m0ik4v1ixy87vkpt853mvf6g30ixhy792va08d97cdgryhkzxoy8pndmp5iljnhl0ygwuysz41kdcuibl0pwovp5tprsa1kvrlesq2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61f49614-d8ec-425a-b62f-6ec7689567af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.246753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "9a632ddd-85df-4e9c-a482-2f3d1b9f80e0",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "3fw"
        },
        "from-value" : {
          "equalTo" : "1t0d9c8a7vuqh7hc0fpkpv5q4dsv2rh1"
        },
        "from-type" : {
          "equalTo" : "51m89hlpzkybxatu1imeehl18bzro5c8iev04w5hkapv97xkviq3lplmltjpz4j0eqz4cuh1dxvcslvn2ols4z3friszj6gwdu4ab9xveoc3ykx9f2pz3vzvs09kszx"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1261455133,\n  \"apiErrorMsg\" : \"9lrvkzh4qb6fir9yvv6f8q4pd2n94bahd81qyhigz4uuu75zb431u5dehv8oe9dbe9a81ix66yzu6cgfl7l5dh6xta466po8ktzzfupwrfjzjkhr3edjymnr8n2o8785mse5kun66dcp49cug1ib5hgb812sdgxaa2xg0kfx7ygcxv3pzmotl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a632ddd-85df-4e9c-a482-2f3d1b9f80e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.246632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "328a0298-7cb5-4af0-bb47-99b21f5271f2",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "s04ghmosfb"
        },
        "from-value" : {
          "equalTo" : "fjjb41wazwh21yy0z221rk9unpbracgj2u4t0rw1brz6b4kpq1pn9ktj1gg2y7bkoors55qovsxwa01an7lbceyld12ws1om5ccn8tv6b5lk1y3z5utup0g4a7"
        },
        "from-type" : {
          "equalTo" : "6emwugw9rgxbgofxn7noy0i808zsj55x"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1996347317,\n  \"apiErrorMsg\" : \"dvhjuj65ku7j2u9np6bk0hzlyfs2w537144en3db927367g5azh6uyb1ekpiczyn8ua44hg5tcacv6dp7e6mztymrbv1nl1fcs1up74083zmpfjqzok7pz0zpzhndif3e3ygeq8b17c903\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "328a0298-7cb5-4af0-bb47-99b21f5271f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.246516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "9d28794a-31dc-46fb-8e46-091b6cf30dc7",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "wkd2gc052e16rqydeavjv9qc6290ha5ikkph7uzln55izs1pjiu46u"
        },
        "from-value" : {
          "equalTo" : "wy2nsnysdnz4q6ijytm3xukflkjp57v47sbktdp0r"
        },
        "from-type" : {
          "equalTo" : "3ga"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"b79z8ehkcat9n64h2y09ks4x5m6n7uyl7bdq1weaiob3g00104avnoz8h7qfsr2yi9jrc856b1dbrgekual7mciagtw4apjnkkc4culvf8nl0wq9sf5qspk3wm7sg4ghc4sxduixz19lwvtonw23d5pbd100yox7sezw3fp9bpnathqxz\",\n  \"valid\" : false,\n  \"to-type\" : \"rhuq3sq50lw2ay830kkldtjksbgyqli5xr3jjn8ykic6x\",\n  \"from-value\" : \"vtyd5ezwdpph9huvlnhpey2mo48km6lg4hmzsp3nxwyimscscvx9g42qk64swd465hazqvb93wh3n4hmhwjq7onjswri8zqovhr7fm7vm4hrga4k9vtdr2lhnkqijwq7poe9zg5broofd4ren4dn9a957qpgodgd4b5dafo7518oyvawo1s7fgj2130n7cpx815tp6\",\n  \"from-type\" : \"umlt13pa9dc1fzee5a8qk247v3bpodycp7hrnmb7yko9s9lilqedb5u3s5b61jfczj9ot4yj474l7vlb13sc69egjygxyvh6m6ffonhe4acgrqkzp134ee962tfh3x6y483k04xg3tvmdhxvpn9jy54om57m7if78kl74ar0q9pb9psrurl7ka5wkokd3m0mmw6hd\",\n  \"result-float\" : 3.6964541957054364E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d28794a-31dc-46fb-8e46-091b6cf30dc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.24639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "from-type" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "from-value" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "result-float" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "to-type" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the conversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "from-value", "to-type", "from-type", "result-float" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "7e864ceb-16d9-4d30-bb30-19a442975341",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 89016114,\n  \"apiErrorMsg\" : \"iosgdoy9gf535e7luk6wmfchn34cwy2ac6ejamv96jyptce39lutxsg992awp82c8fif7aqy0je83ykv0polj17hgq156ifbbs5cy5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e864ceb-16d9-4d30-bb30-19a442975341",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.24616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "83474164-ed9b-40bc-9681-fd6c1aee2798",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1843934897,\n  \"apiErrorMsg\" : \"s63ak65hzvpa4qs97wb4fj8x17uepq2eyoj8atrunt9z51uf48rxmk40rk4n1reazjc1i5rs8x7l56s3by60lhtewwyfnine5zu7hcliimt5drmop4vq11760sz7e96irso9rnrm6qda55fssyidmd654pvirc32aimnvoseq8zcku55aqkzvx5fyh7ciou94x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83474164-ed9b-40bc-9681-fd6c1aee2798",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.2461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "ac1861ef-c262-4187-a225-a60f4c06f084",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 948455182,\n  \"apiErrorMsg\" : \"8ljo1iwq6foe3ugseba119v38z0x9rvdpbx75d69tt5li8nceq7ffyo0g4nowh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac1861ef-c262-4187-a225-a60f4c06f084",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.246039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "44a2ca41-442c-4b64-a562-904875658519",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exec-results\" : [ \"pebcgi4o0ozb7p61g\", \"u0ig00uvriyfitykuo3di\" ],\n  \"security-details\" : { },\n  \"mime-type\" : \"dc9ysu1ed9olnrrxeh8az76iq944lo7clazcwipnqjgegg2sqab0l7ym2\",\n  \"response-headers\" : { },\n  \"language-code\" : \"o4sw5nsego31bwic4snwfp1j8iaykh26rnyq56vn1kmy8ixiy0jjhtdz7o9059xjm51nwd9bcxmq1u8p72be7wekm9cbcs9ju89mbfim4796zm47fqhnrwlyccfpdfpeil6w92z4619dsnbatnagcq5a2mq4046evb8i2dwih4f1q5oh6hdm6qjisjw85\",\n  \"load-time\" : 1.6543896119400687E308,\n  \"server-ip\" : \"m42l424mlbs2s9wa4k8ye7q2es2zjp5t3c6pi2ckgohtfmps8p07l9pskom5m3t1mveonuknx4qi9x6jbaosth6929xjccsxb7cym87z53rz6dvprg6akk4dpo9gegh5qaa9b1684mo03fe8qptd0msgpjohapptnnbrf886erpj73\",\n  \"title\" : \"Omnis porro nobis suscipit beatae.\",\n  \"content\" : \"Voluptate voluptas dolores aperiam dolore dicta facere aut. Quos eum soluta dolores omnis non et. Harum vel ducimus rerum est necessitatibus cumque. Dolores eum alias quia aliquam dolores exercitation\",\n  \"url\" : \"https://web.example.mocklab.io/043686\",\n  \"http-redirect-url\" : \"https://web.example.mocklab.io/320215\",\n  \"http-status-code\" : 2098339061,\n  \"is-error\" : false,\n  \"error-message\" : \"Consequatur ut consequuntur. Reprehenderit voluptatum dolor sed accusamus ut hic. Nihil modi rerum voluptate ab. Eum voluptatem et aliquid nihil.\",\n  \"is-secure\" : false,\n  \"elements\" : [ \"8beusayufs7yg00iwed2as65qd2jsyuvo2zy6wj67\", \"ozgcb0ll1pozpjmvuscuchpbglpnrmpgy2ebrv2ljr22g\", \"v9to8yzi44s0cp8lnemy4eixiqhocf8ywguyniqqw59z6hlwk0456opfmpj5q\", \"yuwnl385snq135tzexk5bap3281thqli7rdq9yf85gro7wvgpx66egyrva6n6ay\" ],\n  \"http-status-message\" : \"Molestiae ut velit minus. Laborum delectus delectus ipsam dolor vitae quos. Officia officia ullam iste dolorem rem repellat praesentium. Placeat exercitationem repellat ipsum optio. Consequatur mollit\",\n  \"is-http-ok\" : true,\n  \"is-http-redirect\" : true,\n  \"is-timeout\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44a2ca41-442c-4b64-a562-904875658519",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.245965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "error-message" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "exec-results" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "http-redirect-url" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "http-status-code" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "is-error" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "is-http-ok" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "is-http-redirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "is-secure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mime-type" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "response-headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "security-details" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "server-ip" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mime-type", "title", "is-error", "is-timeout", "error-message", "http-status-code", "http-status-message", "is-http-ok", "is-http-redirect", "http-redirect-url", "server-ip", "load-time", "response-headers", "is-secure", "security-details", "elements", "exec-results", "language-code" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "931388a2-9490-4ffa-8826-6beb27d0dd8f",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "u1mlmrmijuag6s8"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 734015596,\n  \"apiErrorMsg\" : \"l6a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "931388a2-9490-4ffa-8826-6beb27d0dd8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.245227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "8264257d-b92e-49f5-abd9-8f31bd21bfc1",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "7jv7uofassxlr4esfl9i6zvlarj101hi2g2uoc5ci2"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1456717000,\n  \"apiErrorMsg\" : \"s3rrq4fxdkm6n512n7q1d759wmklah1nm74iij93scymis9yzlh5xneplvi9z4xs7w9llmj6cftn2vp8jukjgt55pkxffdu1wuo2o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8264257d-b92e-49f5-abd9-8f31bd21bfc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.245147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "dd6070e6-cc1f-4e31-9386-d45049191667",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "8kg65akhuli08u4xtjnnow0lrug11u9qz4fd6wgrlfl2h713tiv8ft4yhouo6fdwxvh7x6hxmivbgx"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 511942853,\n  \"apiErrorMsg\" : \"5jysx9ztrp5pqdgch1sgb70evgfah3726f783wx59y9lzc1ktgz020wyvabrzteri7clkjppeo7ke9abtln3zvd9vuus0iygbqqumrggyb1kbkjk946wjw3f3dxh0j8qyezp5zhk17svkojotcfx5ctl9bam8v4tj9h1gz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd6070e6-cc1f-4e31-9386-d45049191667",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.245065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "ba514d32-ecb0-4b18-8a5a-5618ab1ec6b8",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "nvmutkedfic43re2aaqelnogq4c9msb3hyk883s2jjrgmu29p8eg58bzvrq0sj9xzzsb9jlwj056b7ngad6s6kzfnv5ucboa3aymzb9sbgruf6bjn0v8obzk0kq0eiuo2cueodjzbsrflji"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Jordan\",\n  \"country-code\" : \"eeeee\",\n  \"card-brand\" : \"rrc26nz6in8b8xhuqqeb6kefbm82rg326n8vi6rk4ol0zio6oikvyyr1b6lyx06job8rcrdg3tu8cnfynqwbr8j8ikwb8fyutsw9hcteb90jx4dksqlbkw9vwf6cc73af54gnokzg8z8udnurz93h86b8gjyt2i7ojsh82xi53bslykzrpyn2eoenaj1jqjdgtcwfsl\",\n  \"ip-blocklists\" : [ \"m1ywoltxt8vfvuwmlw3e98vljlm990fc3lqsejjxu377i81u1htlv88uxq3fmg96v03blmrs2a3mij8fdf7cohj7w5esiui14aswljbd5p6ok\" ],\n  \"ip-city\" : \"Weimannchester\",\n  \"ip-country-code3\" : \"p4llkswdriygu5otardc7wj5ggia5wz225fynzmycx3pcb6z\",\n  \"is-commercial\" : true,\n  \"ip-country\" : \"Finland\",\n  \"bin-number\" : \"3sm3ldjagib2r6bxkhm51zxv30spvhjyqsj6jkk4wjhk\",\n  \"issuer\" : \"6i88q4649haakcacoasfvk772glckhu198f3guxi70hb9ymozzq48n3luf5tj5smw455yvi4uz49jtsigoq0zfi1e3gxtwkqos73n8prwmkfxst2kf72sp5fmthsdw4m2245kgpi7trz07hjve8\",\n  \"ip-region\" : \"tkzp7vhsvirlwjpwerr7svg1930fk5mj2xa1ixa33844y\",\n  \"issuer-website\" : \"ybsze5zt6r9bv9g1nqdgkofug68xyyl0lptni4qawg0fbf75cm80xvdyacybkl\",\n  \"valid\" : true,\n  \"card-type\" : \"2ymoglnk58aknq6\",\n  \"is-prepaid\" : false,\n  \"ip-blocklisted\" : false,\n  \"card-category\" : \"pa3vudiow1f2jss1asl1vqjh3vyzrd1529hebd70zd324kazpl41p3330jkv2hfo3ie1wsjtz7gnlhcbdi4ruyk5ffnxvzrnsve7df35jjgrkx72v91mwejfh7\",\n  \"issuer-phone\" : \"864-766-4535\",\n  \"currency-code\" : \"DOP\",\n  \"ip-matches-bin\" : true,\n  \"country-code3\" : \"gw9ptxit1tr2u8dn1dwrmz253h33y499hty4f6gtlx18mce195iaiuztsala6uywnizwhkxafzsgb15z03id77lx9pqwpvhpkmc9r5h9g1ommwh33n16rf4obvqfgguxrbtn2fj9kgm6iccp69uyqoneeotay8derfm71egfg\",\n  \"ip-country-code\" : \"ccccg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba514d32-ecb0-4b18-8a5a-5618ab1ec6b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.244966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "bin-number" : {
                "description" : "The BIN or IIN number",
                "type" : "string"
              },
              "card-brand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "card-category" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "card-type" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ip-blocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ip-blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip-city" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ip-country" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ip-country-code" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-country-code3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-matches-bin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ip-region" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "is-commercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "is-prepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuer-phone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuer-website" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ip-city", "ip-matches-bin", "card-type", "card-category", "ip-country-code", "ip-country", "issuer", "ip-blocklisted", "valid", "ip-blocklists", "issuer-website", "country-code", "ip-region", "card-brand", "issuer-phone", "country-code3", "currency-code", "ip-country-code3", "is-commercial", "is-prepaid", "bin-number" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "dbc494ee-4240-4e0e-8044-f1e8ac17e0c7",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 989816296,\n  \"apiErrorMsg\" : \"8kkkl1dvotu6y622q0hsh5qqmuar8u6zyz7ojqmp3l0ou1gwo7tqhbqx4fbwray6y4otpjbp08xd6kjlurrvbygrhphitgtumvuzzpvzvexpnu65meyr2m82ncfz6f2igw97hvovc3aylj7bqebvvy2nw4tm1cr0b3eoqv0oz03anc4lxh8ity9la\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbc494ee-4240-4e0e-8044-f1e8ac17e0c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.244286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "1d3ef4f0-8b16-4072-9b21-5ed744192230",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1643607964,\n  \"apiErrorMsg\" : \"9pxzrbmxrtdk5kazesrpvg82gc3dy9k4mw9za3farl821he7ireglzf3b6ahtrx2yn8yhej8a7vk9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d3ef4f0-8b16-4072-9b21-5ed744192230",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.244225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "af31ecd0-caf5-4f77-bffa-d134441087ff",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1538999729,\n  \"apiErrorMsg\" : \"1mwn3oznztly9er2x1qoj3dvalfo4f4as64bbwsab6mli9f7b6otc0eelwocgw4jvatzu38thcs0r5osc9l02j6xzyg7v8umapuhc7vv92ousedp4x8nyfyqi6tvwjv3i79qy624j5m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af31ecd0-caf5-4f77-bffa-d134441087ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.244165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "1fd50c65-e1d3-461a-804f-ba269e74857a",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"8ln3scu4h63f19utjw5pqffxt72\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fd50c65-e1d3-461a-804f-ba269e74857a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.244104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "c18c4b22-1345-4116-a912-92fa43a2d459",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 145921035,\n  \"apiErrorMsg\" : \"fp6yxttxy877bll26ob716d9yr8xthpx9arx359amyuckss6i1scpib85fr1ga2uwcgcvhxg8m6sawgwtg2ph27ur39b0hn3wdm943mvkfb4o3y4nmcfdzr32rn2ol7cuo4l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c18c4b22-1345-4116-a912-92fa43a2d459",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.244053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "37e6a239-968b-4de4-a3ef-187465dd13ba",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 95744175,\n  \"apiErrorMsg\" : \"wi8l3dor3soydslnv9436jrbrviiyym9ve9j3ssmjh32ccptueolmmc70kp9fpxvn8fp5gk5lf7kufoccvg2zd911zwf0p4j9a9d52u7u8i57c1zmyfyzr51mwjaykbe4up6vphpdxej440bo18h0ck647ax5xf8hh5gbi6eb68ozuxkl1070tbx3no\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37e6a239-968b-4de4-a3ef-187465dd13ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.243992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "1a7d3e31-4816-446e-8988-893804fb29d6",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1130579186,\n  \"apiErrorMsg\" : \"ptpirk47d8zgz4qlxwtlo4d98zoh5qegjhxdijs8250ooonb2k3xmy0jjmmzfum8t2inv88twi89hcj6hwhq0wi301d3vjp3m2607kcp7ljp53ca2kv8uimgd2919d400zsstmx0qza\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a7d3e31-4816-446e-8988-893804fb29d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.243928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "1c9fa894-a74b-48aa-adb7-de4e92a9a9c7",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"censored-content\" : \"In dolor dignissimos eaque libero. Ipsam aspernatur dolore ullam est ea fuga quibusdam. Dolores suscipit velit necessitatibus esse.\",\n  \"is-bad\" : false,\n  \"bad-words-list\" : [ \"bqx5150ukcda0nj52lgduatih2mjrb0ri3vmpamf7ryss56crg00aeus7i5dwrf21awcieywccxrfc9s6vh6abm805ugte381aqste007gbtzo8h0hmk1bgyyt7rq8\", \"t8p9rbyfp1pwv1wj5b7igjmkvnmj161a5ckcgr03ycc9mjf1g9iflvdaqsvzecjempv0q44460p8aqlhc0yk5ps7v47ei9zfdp2yc5wnk4a6j63vfqdj2ipstm3q1qo0i4dcb6afu6s92k5p7xqirc1g3vleotnuhod8a72s688m6zmouyxfplzw7nnyr\", \"a6nqm8xs5k3a77bz62amr8foest9tm9943c51sz379kqterolral5af4f6kqlw031pld8ial1j31tw70t3ukb81tijg0266bpjwoxpsx2gcf\", \"bapeo04mabr8zo6qsgdbyfe3zrepsjf6adwm8qptqdjp7l4kyh82433z32\", \"iuvs82qvtulsqqzcanh9ius225i24nududerzq3l03sty72bvecnjf3n4c7veme4ld6n\" ],\n  \"bad-words-total\" : 1026780433\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c9fa894-a74b-48aa-adb7-de4e92a9a9c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.243814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "bad-words-list" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "bad-words-total" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censored-content" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "is-bad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "bad-words-list", "bad-words-total", "censored-content", "is-bad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  } ]
}