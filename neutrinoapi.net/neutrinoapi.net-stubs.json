{
  "mappings" : [ {
    "id" : "3d5ea812-dcbd-4c59-8224-bd4d4ce3328d",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "nhxmqp480bgt9valgvhnyc0kfv3rrnmy032sj09ipkdtvrgliyf0hylr8bc2j1bcg1a1yl8vfv2oxs"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 515400302,\n  \"apiErrorMsg\" : \"gnxc2ubtxsfz7plvi0rqlxai03rfauuc7ehxrzdaiax7ugzgqf9h9x1bpi6tqyv1mzhniteo3zg5sqxzhadz95xmcx87bmame9uulg1eud2wmj7z7c8fexi1no54jzg7io88150qyyw0gpcpqltxwkvylnh5olrfhn1nln6a3sku9vm9vo06qzium\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d5ea812-dcbd-4c59-8224-bd4d4ce3328d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.139935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "0fd5e36b-1212-4085-b28a-97915b8da077",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "4o1t4ytjmrvd4xie9pur0e9yprmft5yc15szwjbpqdvq4tgt5cfzk4oodimlu6ifq4et9bw3zt3df7wbk7jtz8dqsd49zfutco7cjhejdkxscnspu6opl7893txhp60kyjteuiomlerdfkuqe5r3e1qhdm5gatrt9r6l54773nyzf2ek"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2033757778,\n  \"apiErrorMsg\" : \"pbdxgi6w7t0b0yyf7ha1veuoby\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fd5e36b-1212-4085-b28a-97915b8da077",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.139856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "6a2de12f-f3eb-4e36-90af-d9d0d2685493",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "wjpk33iszksr0pmh9fzdm397da3aw0zi7vib1ptfqlbtj95duqimkezsos60e6s9ymwr0y566vjytq2gwf4pp2crmvy0d3cg1hwfpzwvr1fvqk7lgt"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 239356550,\n  \"apiErrorMsg\" : \"6he24j4q9jotazsqunfddyb43ikgpm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a2de12f-f3eb-4e36-90af-d9d0d2685493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.139779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "05a2e27d-43db-4d07-ac0e-d0afd63e11c3",
    "name" : "Verify Security Code",
    "request" : {
      "urlPath" : "/verify-security-code",
      "method" : "GET",
      "queryParameters" : {
        "security-code" : {
          "equalTo" : "s5tbwx0c"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05a2e27d-43db-4d07-ac0e-d0afd63e11c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.1397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "VerifySecurityCode",
          "schema" : {
            "properties" : {
              "verified" : {
                "description" : "True if the code is valid",
                "type" : "boolean"
              }
            },
            "required" : [ "verified" ],
            "title" : "VerifySecurityCodeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "e0e6e02a-0956-44bc-9f63-e68f84833051",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F816162"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 822179248,\n  \"apiErrorMsg\" : \"5q2o3d1s4flur7gnlu44a79pc9udboc0dsa1fnxjpxkcdrx2d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0e6e02a-0956-44bc-9f63-e68f84833051",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.139629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "610b53ab-dbbd-4759-aa0e-00b1eb675e10",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F124628"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1842223182,\n  \"apiErrorMsg\" : \"5d3qo2z51g6z63g00ocsgfhnejcf237avo0ph14lxycqkbmedsxxu220ttrf2w2ghzzk78\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "610b53ab-dbbd-4759-aa0e-00b1eb675e10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.139507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "13389220-e4db-4a1b-9864-5b0b01c93114",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F667877"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2101131301,\n  \"apiErrorMsg\" : \"e0ucjsvmlhaxr7q04eph6ruuxaspp59h091gwgh2aav7gpdelhpunyo1ql4t0eyedbm7xmn9k0nyrql4i2g5ywo2og9krbjbjl2rj09peouuqxvciywlb0quuynuc8bfq332coomqygfn92hudogmweclk1mxtmiwnyciljqt8topkmnmefsz7dkl9xlpm5g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13389220-e4db-4a1b-9864-5b0b01c93114",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.139381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "aaaff461-c06d-4f8f-a118-f560c49b8e02",
    "name" : "URL Info",
    "request" : {
      "urlPath" : "/url-info",
      "method" : "GET",
      "queryParameters" : {
        "url" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F107608"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"http-redirect\" : false,\n  \"content-size\" : 921464453,\n  \"load-time\" : 1.8849631487015044E307,\n  \"content-encoding\" : \"5zl1sbzioqwe7lw4wodlr54478c5yfub5j7me2rxzguro40778pq49sbgdjt1ct1h2f07wslrlj4po3q2o3pmagt2gwllnkjv07ejtyay3hzqbgfn5mvuwzdz5jjxkkwxlygbxrrnwemsz8izi92b89bg8t9qo1lgpoaa51g11crmz7uah7chl4xpogxu\",\n  \"server-ip\" : \"3uv7pohzhaecc2f123ohhzggwlu9a3at31jypw96damyelqffnzsgecexpehz4it542\",\n  \"title\" : \"Nam rerum cum exercitationem provident et.\",\n  \"content\" : \"Aut molestias temporibus qui. Quibusdam error nesciunt. Accusamus facere impedit ullam magnam ea. Sed qui vel doloribus. Et est rerum.\",\n  \"server-name\" : \"Bao Bergnaum\",\n  \"valid\" : true,\n  \"http-ok\" : false,\n  \"server-country-code\" : \"mmmmk\",\n  \"server-region\" : \"s6hsa5c59f6zyeenpkbait4m3zj28i93my6ja6ao973rtar5v7jjlz65wtfm6xipxh9n0uk5034v79dzd0b13xdxlxtdxx88ikv2kvthg8od8fehyacixfh624h25zhl83s11nt77uobod7my2tp76mz8966lp4b45b0td4s5o3\",\n  \"server-hostname\" : \"Archie Bernhard PhD\",\n  \"content-type\" : \"hgmjqhv6qqfsendrz9mish1sr12hn66qtpzki34mdcpwyfhk2kzve3b0vxmeoamspmiebm104yxed8yvnks6jr7gubjtuh9if2uoik22gg3xiq4cx9pch56ag34xli0f2h3j3yb\",\n  \"is-timeout\" : true,\n  \"url-protocol\" : \"hydkjqqu39ebf3h5x3q8q5gvaqobxie09x6nvkye255cb\",\n  \"language-code\" : \"oojo36lplx3ter15n96wwyesuro3o8xmzx0fy61moot41m7r3j5hg23m6wll4pgdpweuohbkl1cumhw4yojnd3ftm2di958hc8tpcd3pdgvioqcw6osq5qn4w8mprvkex15vecobp2nu04i3efl\",\n  \"query\" : { },\n  \"url-path\" : \"2vq1brmq33wnhsu88gcxvrxysdm0p837g2r8ig7y3yms\",\n  \"http-status\" : 1827629502,\n  \"real\" : true,\n  \"url\" : \"https://web.example.mocklab.io/032317\",\n  \"is-error\" : true,\n  \"server-country\" : \"Nicaragua\",\n  \"server-city\" : \"South Chanceberg\",\n  \"url-port\" : 1924434183,\n  \"http-status-message\" : 1620922775\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aaaff461-c06d-4f8f-a118-f560c49b8e02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.139243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "URLInfo",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The actual content this URL responded with. Only set if the 'fetch-content' option was used",
                "type" : "string"
              },
              "content-encoding" : {
                "description" : "The encoding format the URL uses",
                "type" : "string"
              },
              "content-size" : {
                "description" : "The size of the URL content in bytes",
                "format" : "int32",
                "type" : "integer"
              },
              "content-type" : {
                "description" : "The content-type this URL serves",
                "type" : "string"
              },
              "http-ok" : {
                "description" : "True if this URL responded with an HTTP OK (200) status",
                "type" : "boolean"
              },
              "http-redirect" : {
                "description" : "True if this URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "http-status" : {
                "description" : "The HTTP status code this URL responded with. An HTTP status of 0 indicates a network level issue",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message assoicated with the status code",
                "format" : "int32",
                "type" : "integer"
              },
              "is-error" : {
                "description" : "True if an error occurred while loading the URL. This includes network errors, TLS errors and timeouts",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the URL. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The time taken to load the URL content in seconds",
                "format" : "double",
                "type" : "number"
              },
              "query" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "A key-value map of the URL query paramaters",
                "type" : "object"
              },
              "real" : {
                "description" : "Is this URL actually serving real content",
                "type" : "boolean"
              },
              "server-city" : {
                "description" : "The servers IP geo-location: full city name (if detectable)",
                "type" : "string"
              },
              "server-country" : {
                "description" : "The servers IP geo-location: full country name",
                "type" : "string"
              },
              "server-country-code" : {
                "description" : "The servers IP geo-location: ISO 2-letter country code",
                "type" : "string"
              },
              "server-hostname" : {
                "description" : "The servers hostname (PTR record)",
                "type" : "string"
              },
              "server-ip" : {
                "description" : "The IP address of the server hosting this URL",
                "type" : "string"
              },
              "server-name" : {
                "description" : "The name of the server software hosting this URL",
                "type" : "string"
              },
              "server-region" : {
                "description" : "The servers IP geo-location: full region name (if detectable)",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The fully qualified URL. This may be different to the URL requested if http-redirect is true",
                "type" : "string"
              },
              "url-path" : {
                "description" : "The URL path",
                "type" : "string"
              },
              "url-port" : {
                "description" : "The URL port",
                "format" : "int32",
                "type" : "integer"
              },
              "url-protocol" : {
                "description" : "The URL protocol, usually http or https",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid well-formed URL",
                "type" : "boolean"
              }
            },
            "required" : [ "http-status-message", "server-region", "query", "server-name", "url-port", "server-country", "real", "server-city", "url-path", "url", "valid", "server-hostname", "load-time", "http-ok", "content-size", "http-status", "server-country-code", "content-encoding", "server-ip", "url-protocol", "content-type", "http-redirect", "content", "is-timeout", "title", "language-code", "is-error" ],
            "title" : "URLInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "6d186922-fa2f-45d6-94c0-309a0af87fa6",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "csa0s0eta1n3m2skas4x5palb5l8q0mewyzbd3u2c8rya8erf0r1lxxrrydvrm1edd7lh1kpwlzwmkb1yr7enk3ackgp8el4wazpqox8mw1a47zrtm0f7kid5qhggaafc4nkucjazujzih7tw8c11bi6aldgqiwhezjy6voj"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 837513015,\n  \"apiErrorMsg\" : \"ykoetu9oxdfachmrfx8k8lephb8uuiuuayi4j7fcg4xsnwgkwdw79p29ua0z4tqj6chl7pe9ngsmapg0rdmcasgxg7fj51esocj2fm11tb4hlwx3abthdii9cm1egq1al8l2uw5y8fhglns6qe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d186922-fa2f-45d6-94c0-309a0af87fa6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.138449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "409e560f-cb66-42e8-8307-5009e97af00c",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "dmpqhipfluzdld0jc5qjma4gp5n10d8pjhf7w8oaww"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 901275537,\n  \"apiErrorMsg\" : \"2clvxp2zejjdh8z7dmv8dzzi6ucajwnboxjglbia76ug1dbn8c1wdjj81woabynhjivq7uk4e54fkh6q7t8zh3h29tpp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "409e560f-cb66-42e8-8307-5009e97af00c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.138368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "ad60181d-ed2c-498a-bcd1-3483b6c314e6",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "wsfem5hizwgy6lr6z9njkj3y93yvjuuxwxzfxsu78w4ndxbthapg3eolj32g9b5r2j2mhto91adejshwoqncdetokofebx82rjpx2xw127pru6b0si63jucl5uz79ow1e1yl9eduiq9qogi34aip"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1649388962,\n  \"apiErrorMsg\" : \"xkg4rfie7i17boyy7fdi3vwqez8r2j12p85duvdqwk8jjv52x2g5drovkawlwaora4jqnkfcvsqk3p8s60627f9y98fq3eofz1tcyjtmc20jmc744qud12so97uborbzwv069rtghec2hfyq9mc3g434th0z24\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad60181d-ed2c-498a-bcd1-3483b6c314e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.138291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "1b4dc5cd-2c25-4789-b26e-a35b63497009",
    "name" : "UA Lookup",
    "request" : {
      "urlPath" : "/ua-lookup",
      "method" : "GET",
      "queryParameters" : {
        "ua" : {
          "equalTo" : "7k3ell8nj67jalhz3y6dqgocxcaey2ey67d5kep76np2aldi4whm0ixokwr0dlh1z4coej3zf6dbwb7flwbwkow5gnw0ik709ly2klpnijdk"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device-model\" : \"smiyyt61fxvss6guaxmgxa9ukuwurxcjo54zt9ahvmgq8l6jbj4jod3gbrwh79tt8itae585y9wjq0ny449b4fmby5pc8okyik7ndllc2ubma4o6bcitu6mglbmf1xp5wng544lwc\",\n  \"os\" : \"t9qeqc08asjd2tf42o512tgq1wngq9fc7jj8v98p9ds4fxzitug7y7afmbucepqwhacg4pp5szevh4tsaqpstdrwp5x72t5prpfn9zkooin0gj2qmtmzu8gq3f8em4glkwi77co6huhuwqt8eytx58hpobft\",\n  \"device-brand\" : \"jisckh9pmx5zwmxa1l0\",\n  \"browser-release\" : \"339m5lhy2frog\",\n  \"device-height-px\" : 3.914060400588848E307,\n  \"device-pixel-ratio\" : 6.968953948505222E307,\n  \"os-family\" : \"mymsou2yvkwe2j723tfccexqml\",\n  \"device-ppi\" : 1.4774882580002313E308,\n  \"device-price\" : 1.6751545627410935E308,\n  \"type\" : \"ooa2rgmbxnssi0sooeqhcnwu91yl8kloyvsz7f5sje984xk2c94p5xczg50c28sq6zqbj52p8buzzx3scc355fg1z1pcn5gim0g9m121jy01bgtfb54yy940f5xy3ix8kvqx6e7gp4a\",\n  \"ua\" : \"8fyi0gr3k1aniofklrlxqsooovdxgfd2j3yddziow4dtglex17e4vgl85sjxek6lp0y83cm8ccb4aa7nz5m4zwd59wd\",\n  \"os-version-major\" : \"llq4pkbr2a6yx6m9kd2q\",\n  \"version\" : \"otlfjyhe2q805k3d9l4h7bh3z6gqouy01wlrnzigqf14mlt0crk5t0ltjjfp6zpyvuq6dcb88yl3bovwd7r4pi6lov7e300ped8kzhv4woeqtgu9qk\",\n  \"version-major\" : \"cv0p12ikchc6dhbfsgye1peho2f7aozm3jgvwybxpro57taiz6zka0d3p0ktm7kwq4c2nyx7un5ntzja3g7tgybacr60l0ysk4l0uz0e4unsl6acw52foud1xmukelggycebtvdlyvfox53nab3ln5td\",\n  \"browser-engine\" : \"n0n52b0spnwq0hrd5wdxfv0trprzugf01652l2n4zokmgtmjji1406iy5bf7g2ilog5w97hz3hob3vx0wlu11ag74woxw2vv0ecp32lo1i3tcl89pe84160dfr6b0ft3ib6jv0x3utmzcevlc\",\n  \"device-model-code\" : \"wlk73k20ousz6c1torzr0ishxc3n261vwkmbs9u1asgom7yfwrwm3nbl0a7a2et2efzfnlidgstzuq311bbdgstfp0iezdwsirsxyxdxwtagyly8i936tiwmb2bx3ujg5wo8fbxgo4wje9lns9l3reteqz\",\n  \"device-release\" : \"i4fphlmngk4ty9q41oh4llt0sl6gc78xxudshg15pcyerhyn1qnh935kgefsf0vbjbgodjfkxkatpjudpfvxfwqf53a7e4smqc61lnowomeb5bh29ltpjkz2ratbosr108psinr2ucsauzk1t15nu51gug3nluzlr58vs75trrbnt5ny8j34n54\",\n  \"os-version\" : \"552lao21injpduq3gss2kx1z2qfk76ys4qdqzb0gxl33z8ud0byg9ob2uqk758p603sd234kmoi4p7t5kkd5nqh9dm2bkpcmw11xs0gng04vvfq1p3pxe3p0n863pacfgzonxum3gajtdylcuhddiv9w9y8vdvzoxdeuk5oq9phibqehghel7xn32bzxiwf\",\n  \"name\" : \"Era Schumm\",\n  \"device-resolution\" : \"i81emhpm7l5zd9gjg1shosgixj1jsnmzvgvpka08m8fpnp0viqezl58mr0qrhjpta8tz61mw3rnt0x4mvdlclt5ie7p715mxgfjdwf31ovrjtfjnxufs3ri91drwx\",\n  \"is-webview\" : true,\n  \"device-width-px\" : 6.168887559769842E307,\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b4dc5cd-2c25-4789-b26e-a35b63497009",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.138204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UALookup",
          "schema" : {
            "properties" : {
              "browser-engine" : {
                "description" : "If the client is a web browser which underlying browser engine does it use",
                "type" : "string"
              },
              "browser-release" : {
                "description" : "If the client is a web browser which year was this browser version released",
                "type" : "string"
              },
              "device-brand" : {
                "description" : "The device brand / manufacturer",
                "type" : "string"
              },
              "device-height-px" : {
                "description" : "The device display height in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "device-model" : {
                "description" : "The device model",
                "type" : "string"
              },
              "device-model-code" : {
                "description" : "The device model code",
                "type" : "string"
              },
              "device-pixel-ratio" : {
                "description" : "The device display pixel ratio (the ratio of the resolution in physical pixels to the resolution in CSS pixels)",
                "format" : "double",
                "type" : "number"
              },
              "device-ppi" : {
                "description" : "The device display PPI (pixels per inch)",
                "format" : "double",
                "type" : "number"
              },
              "device-price" : {
                "description" : "The average device price on release in USD",
                "format" : "double",
                "type" : "number"
              },
              "device-release" : {
                "description" : "The year when this device model was released",
                "type" : "string"
              },
              "device-resolution" : {
                "description" : "The device display resolution in physical pixels (e.g. 720x1280)",
                "type" : "string"
              },
              "device-width-px" : {
                "description" : "The device display width in CSS 'px'",
                "format" : "double",
                "type" : "number"
              },
              "is-mobile" : {
                "description" : "Is this a mobile device (e.g. a phone or tablet)",
                "type" : "boolean"
              },
              "is-webview" : {
                "description" : "Is this a WebView / embedded software client",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The client software name",
                "type" : "string"
              },
              "os" : {
                "description" : "The full operating system name",
                "type" : "string"
              },
              "os-family" : {
                "description" : "The operating system family. The major OS families are: Android, Windows, macOS, iOS, Linux",
                "type" : "string"
              },
              "os-version" : {
                "description" : "The operating system full version",
                "type" : "string"
              },
              "os-version-major" : {
                "description" : "The operating system major version",
                "type" : "string"
              },
              "type" : {
                "description" : "The user agent type, possible values are: <br> <ul> <li>desktop</li> <li>phone</li> <li>tablet</li> <li>wearable</li> <li>tv</li> <li>console</li> <li>email</li> <li>library</li> <li>robot</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "ua" : {
                "description" : "The user agent string",
                "type" : "string"
              },
              "version" : {
                "description" : "The client software full version",
                "type" : "string"
              },
              "version-major" : {
                "description" : "The client software major version",
                "type" : "string"
              }
            },
            "required" : [ "ua", "type", "name", "version", "version-major", "browser-engine", "browser-release", "os", "os-family", "os-version", "os-version-major", "is-mobile", "is-webview", "device-brand", "device-model", "device-model-code", "device-release", "device-price", "device-resolution", "device-ppi", "device-pixel-ratio", "device-width-px", "device-height-px" ],
            "title" : "UALookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "af723c88-8053-44f2-9e52-781153e48e8a",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1154027604,\n  \"apiErrorMsg\" : \"vqwrah4u8x5koor8qyqrz9tt993qohjp0a3oo1h7w91ssjxcy2e7vfdq5hgmg2jybu65aa4urpax6bbf63ly1zxjjnnm4vp7sm2gpryuoz5csl1sh6a5h6uz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af723c88-8053-44f2-9e52-781153e48e8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "e4fa38a2-88ac-401b-9574-14d4e0ab0256",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2068310749,\n  \"apiErrorMsg\" : \"r55oxau97xq1zhflz811k1k6wgi97l6fyt8jp7jxc3qb10vxoefz34zsdhfcvspi3m9mtm5y7zk04actp0wh8kwiva036foa8xvn4o2x0zxv3ox3g2ki7xaz8ll3vctb737m3gfljlokv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4fa38a2-88ac-401b-9574-14d4e0ab0256",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.13766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "fa75e638-55f5-4879-ac54-4ad1b6d0d9f5",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 830952305,\n  \"apiErrorMsg\" : \"qxcs6mbvutw79b1361hkhppyl6bi2wu4bzdsdggpk805zcwoi4ksvzuuawtkgh2a35v2v0u81nznp92kjqf82541w9lujm7cebvqkqozizggep78gte9qkq28dxqsye17tmw5fnz2vgwwokb6u0qso4uq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa75e638-55f5-4879-ac54-4ad1b6d0d9f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "9a0c1b94-924a-4a27-aa73-e34683d38a04",
    "name" : "SMS Verify",
    "request" : {
      "urlPath" : "/sms-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"5v9j6xf48y36g6ovjgkk6jow6pblelwdpgyt00p4cxr0od9ymvxe8lhnze6803jpjmk59hnwq9yahvzf04uz7lxlkuabhhd0r85mwfi5wncqj2ztmkfllp8hqyfodfjioq3jadpyn2xaysc9omccl40b9i909phsrt3b0xcbibd7rfnh1rguv9j0kx\",\n  \"sent\" : true,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a0c1b94-924a-4a27-aa73-e34683d38a04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SMSVerify",
          "schema" : {
            "properties" : {
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              },
              "sent" : {
                "description" : "True if the SMS has been sent",
                "type" : "boolean"
              }
            },
            "required" : [ "number-valid", "security-code", "sent" ],
            "title" : "SMSVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "0c220b4c-cfb6-4094-ab54-e4bfe9c0d10c",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1965513301,\n  \"apiErrorMsg\" : \"mnrzsxssondwz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c220b4c-cfb6-4094-ab54-e4bfe9c0d10c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e7cebc68-1e89-489e-9cad-1eef20f5cce0",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 801418977,\n  \"apiErrorMsg\" : \"wj8gsjdkni07lh0kojs6erqw3ralpn8cz6fod85by4g9ktr8d1ryi9arhcu28eczmsrzfvvf3beu435j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7cebc68-1e89-489e-9cad-1eef20f5cce0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e01e2a93-462d-4487-84b6-cf39a79e0786",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1009682434,\n  \"apiErrorMsg\" : \"tfpy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e01e2a93-462d-4487-84b6-cf39a79e0786",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "da3bd3eb-0dd5-4b68-9685-a09dcba28142",
    "name" : "QR Code",
    "request" : {
      "urlPath" : "/qr-code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"xfczlpigxfi61bwhkdh08nyljjarrvpelg4wn828jjagwhszb7ahl73rlangxkardrbqyy1fqx1957j7y7j5g8d8vg9p7o0quvoyfw3m7pv85m23fzttfcfjs74jxzxwk37utavxun4xja0ovyu41dafe1w1r92h3l45w7lczgox32im28nniz1lvctwallx3siod0z3\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da3bd3eb-0dd5-4b68-9685-a09dcba28142",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "QRCode",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "b144d68c-f962-4a97-9857-481d315feeb8",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 33836692,\n  \"apiErrorMsg\" : \"3zmdw9b5q2e8y0761ol6pkh3kelea3szvwk2acqh49mqk2rtb07od8ed4nka1701kzuq8b91iqccgz4qeb40zp0512y5j8eedxuy00\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b144d68c-f962-4a97-9857-481d315feeb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "fd5a80fb-bf1e-437b-9d23-5433ef81ded6",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 469266571,\n  \"apiErrorMsg\" : \"po0fqz59llmoshganurpbbd6x6sqy1rdc8vzhrb8zz3zbye8k02gwdemnci7sykec53aiooud0qgdz75o51t6lzmloj4nd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd5a80fb-bf1e-437b-9d23-5433ef81ded6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.1372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "057b2274-bed5-4e9f-b391-344f76477f57",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 594257946,\n  \"apiErrorMsg\" : \"4mkmvxyz8dhzr0dnrfrqzsz9zl083d7zbgoffifsi8rq7bu9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "057b2274-bed5-4e9f-b391-344f76477f57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "86911806-abac-43c2-8f23-dda33c18c7a1",
    "name" : "Phone Verify",
    "request" : {
      "urlPath" : "/phone-verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"security-code\" : \"nqn0l3eyie8gauzomdhqa0rooa60ej0duv\",\n  \"calling\" : true,\n  \"number-valid\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86911806-abac-43c2-8f23-dda33c18c7a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneVerify",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "security-code" : {
                "description" : "The security code generated, you can save this code to perform your own verification or you can use the <a href=\"https://www.neutrinoapi.com/api/verify-security-code/\">Verify Security Code API</a>",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "calling", "security-code" ],
            "title" : "PhoneVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "014e7a24-796c-422f-98ff-18edf7846955",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "gi9pl6t0ggqio7e9vf779kh795wbzhwtacuike5p5hytth08rh7b3t8ve7um5sgj0nb4y6cmblbehzaa0vi4l43kmqrml2x6ymoweh0ga0hy9lcsnvqsf8299ffvxh07n7x9gir1p"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 743783288,\n  \"apiErrorMsg\" : \"dn7ujdt5wbljq05opi5zpgi14i50lgikdg0hos2go314fxt1zi2wfc5rwlvkx2e117qywd8i9i3x753fm1vjqcffr5n3jer9lojb2pbsnkxajpzers5v8sn09t8syj7j4uu3r326u967u4o9i73rc12rdv9abh604n0pmf1n9g99xbzhfy0trh7f11kz89q470\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "014e7a24-796c-422f-98ff-18edf7846955",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.137006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "b1cf11d4-1b37-4eba-a354-ee0d93318cca",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "n8a6jiau92lm3o7vgvrttr3zw5zafgj0qgkpf"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 459324982,\n  \"apiErrorMsg\" : \"8h6yz3l4yu6vctpj6tl550cvdcaznlkgfzokrfhifnksxlupnx6apkvq9eb9pjkdemscwygv7f1w9peweoaqc5vbls5fbnlm7qaeq5xdcd1if2hz0nn6qbzb834yyafas8idpw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1cf11d4-1b37-4eba-a354-ee0d93318cca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "070c534d-25ad-4fcb-b956-7af167e7c03a",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "kxga3ey7nvj9w9chmxn82pxn7g91y61uj3fnrf9iqeqvuhdi7dw5z5qqy4e26lc8gr79z35d2c2h6z3vutcay7i7s97txjz6ho8a24e1a54da2cy2duz77h2f33wvj7b9zgc"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1197926914,\n  \"apiErrorMsg\" : \"shro0iwd7q71mrd1h609hmcxr5e8xb9adobdmewgs1j940mxgp8vdpqe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "070c534d-25ad-4fcb-b956-7af167e7c03a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "3b8e94c3-b5e4-4b13-942e-f6f2dea20a4b",
    "name" : "Phone Validate",
    "request" : {
      "urlPath" : "/phone-validate",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "3cau0oerg5tmi3vmas23rvnhc1fqimj9m7ecxqoxn7phar0yweun8rju032dvjqil46inc72xo12kk6ta47pkphjfngcze95trphqj5l3c6fwbich5t1jthx6kl2zheles8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"country\" : \"Armenia\",\n  \"country-code\" : \"kkkki\",\n  \"prefix-network\" : \"3lrry2sfa2dh0rj23cud1jb2z3xrsd4xxivhgnpbrm7v1vtf0vs9e5f5d5hld17tuob5cqyq4\",\n  \"international-number\" : \"j417cduvuetho0y8aspp4m0u0wh8q2mrc2q0s2262hquujre80gmwpli5k0fii8l7uldyoq52nhla4oh6d8x63bwoxxex6xd1kv3tno7l8sh5g84xmgjuouf5fvd39enjaqeim9cllu361sfmc5cnwizhrarj1ic\",\n  \"location\" : \"4s841vycvov5aeq3gnih3kbs6x3lnzemiv2zoywn2f0e5gvvrlgzxf8tasftztto4l1luutyvn76s3hfx4x68kzfkejvlfu3nfxqvi6whn4zakuc6xsm0jjm32yuqr9ie0iyr62d1gr7y9p5xgrq5dwa9l6w4ar6ed7weleaat0i\",\n  \"local-number\" : \"hc113fec4u953biu0j222njbvokyai36g95kh5g31d4ha67jrx3nf7y7mau1paj2y2sce02puvpx5cmcc1ilp7gb6aif2nm3uh8mutpcbtid15b7y2vdgew39g1vxwdta0cwd0gm04kmwch14f6e11nj5k46z7jw4ufds141o3wcdm05v6\",\n  \"currency-code\" : \"TJS\",\n  \"type\" : \"vevrm4iy63t477faq3g0onxde6fdbee4c2z5xcxji0og0g83ys8wk5cwavypfdpdo27f8mxsvippf1ghr82ljoir9n91ehzssupq0n6jh1jkr5nubh8iok03nv088f7t4vg4\",\n  \"international-calling-code\" : \"3ldhk6uh5l3cln6bb66x1v74t9m0bnxugye7djk3tegnc1i1cqw0hy4ndbld32tbtju3e2ey\",\n  \"country-code3\" : \"vn4dbyvrskhj8gn117c6j5hrb0ey93hsv\",\n  \"is-mobile\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b8e94c3-b5e4-4b13-942e-f6f2dea20a4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhoneValidate",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The phone number country as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The phone number country as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format (E.164)",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number. If the number type is unknown this value will be false",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The phone number location. Could be the city, region or country depending on the type of number",
                "type" : "string"
              },
              "prefix-network" : {
                "description" : "The network/carrier who owns the prefix (this only works for some countries, use HLR lookup for global network detection)",
                "type" : "string"
              },
              "type" : {
                "description" : "The number type based on the number prefix. <br>Possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown (use HLR lookup)</li> </ul>",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "international-calling-code", "country-code", "location", "is-mobile", "type", "international-number", "local-number", "country", "country-code3", "currency-code", "prefix-network" ],
            "title" : "PhoneValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "1089f5be-4658-404d-b45b-7c0817a214c1",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 554605531,\n  \"apiErrorMsg\" : \"a8sfj6lbj8tkbexifx5jib9kqpaaowot1cnm22s6ez0umg5ro1w3laiuy8aaantqfkmv6fthk77pftjtr79zrd8nwjhd0i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1089f5be-4658-404d-b45b-7c0817a214c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "504badcf-02fe-47da-bfdd-d3a1e2716130",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1694397073,\n  \"apiErrorMsg\" : \"ibfx3kab1t6vlt2888mss0yi3tbg2j8oe25cbahmnzf1ewhy13s3f0v5c3u79hq7tb800xoa5q6p11gn7pt2m7hdsc529qbzn4hnipfqnfapvkbz2ui9pd5pxlgv24jpkxi72vtr5h9oz20s9y9o3z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "504badcf-02fe-47da-bfdd-d3a1e2716130",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "16c1cd92-6559-4ef1-8a0f-de36f8c7da0b",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1863835572,\n  \"apiErrorMsg\" : \"djme5gtebwgzz13ziuib86bln2obwxvuatnk4q1owfobjdtxnkvnc5i4u6ne06qh35xvzrp07hiu7432anja6p0emjq9ytwdqjcjhz5e9ar3wfqaph6s2y38etm5w5lpmq9t3x9pk6y762uw4r9ivyduqsmp7yh3okz4gulmahfpd4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16c1cd92-6559-4ef1-8a0f-de36f8c7da0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "62ab3f86-8acf-4c73-832f-01f05be6b401",
    "name" : "Phone Playback",
    "request" : {
      "urlPath" : "/phone-playback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"calling\" : true,\n  \"number-valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62ab3f86-8acf-4c73-832f-01f05be6b401",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PhonePlayback",
          "schema" : {
            "properties" : {
              "calling" : {
                "description" : "True if the call is being made now",
                "type" : "boolean"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              }
            },
            "required" : [ "calling", "number-valid" ],
            "title" : "PhonePlaybackResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "730e30e8-f01c-438a-b163-d6598a196784",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "x82oz2wt3h8y3zvl8zbgjzc6u6krurr17gmrdh2jl9y0skaoo0i6793cmvww6u1c3at6jfr5mwx2lb83z4rlkzm7pl6bpj"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1275243014,\n  \"apiErrorMsg\" : \"jt70hcm8zqwwu5wd8pcvtmg3cxv58qlc654fw0gzsdtrzpbzaxe7zgyjdeqo9bcq9h4wjpa6vtr92sjrvl1qgipumtbzetmf8s76eovdzdciqihfds9wj4ljebmbbcfgnv5yy28crlq603isufrjdh0d8v0r74z3mg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "730e30e8-f01c-438a-b163-d6598a196784",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "4aee6a98-5f2e-41d5-801b-706a1d9799f5",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "b1r5nwvo30a5vvjtml6y"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1610861775,\n  \"apiErrorMsg\" : \"gn1td8akpg5hi2hqeq59ca9dzxm26o0n0nmuf0ozpahpuh1y5upu38zwt3thvgli6snk7pyju0mgxar5bjn7mceus1fyibfphsmmu2vg716jkl0hhnmld46bkl28q6lzr2lt7sziroui6tuzb8tgo283cis7j59euffnqf0olri7gbtbs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4aee6a98-5f2e-41d5-801b-706a1d9799f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "4de8f6bc-6d67-416d-9132-95788fccc300",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "gsfgzsqfzh1yb67xu3m563hjw9p9if8ml4848d60yhvjkb1dn1fkkiyl3wwey9qkex7mlppluubtznxohljk9b79pru3156tzxmfybgsbot1vo4bmc2cw8bx1ddbr6t8oeqx38mv8b1"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 713525194,\n  \"apiErrorMsg\" : \"buyi3n2s1srhcmld648cj8n6tdpvk6oe8r3uv2hkh4004jpex1x8xbocwkq1zcf3a99ol1po4ur6n8qt4xo9fbk0rq3c34xpafvcwneyt5u7c86aljib1frs3nmxzqbvmy5cdzb5g2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4de8f6bc-6d67-416d-9132-95788fccc300",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.136083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "6730d9b5-08f4-4d86-b63d-673a8ea58960",
    "name" : "IP Probe",
    "request" : {
      "urlPath" : "/ip-probe",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "mhds2rjn5zrfxkokzfqmdsryuqy6yzhh8nikf49wlm83ntkqu8c1ei8v647m79qn6j1vyfxtqwhv1dd1f8hh8czthn9ci5e3w8bdndhh412gyx1wn8wi1qp"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"ned8s3l5j9kvnx3nfj3no0zu2835ftw0dkfyjabt44gkos2k3zqvsnvm7uiqbac4sscqloexeq7u0br61nipw3env5xhprvo6l4h0b2hsj4ns1agd7tn4gwmdwy2vizut5lbzpmgg69daa7inztyd007mgshj31m3mwg3l77kslnhu9xrmxyz5u4bmf25c\",\n  \"country\" : \"Bulgaria\",\n  \"country-code\" : \"ssssl\",\n  \"provider-domain\" : \"xzgqrc6n626ftpr4jjbavxdskdmvig94xqdt6z0q\",\n  \"city\" : \"South Shella\",\n  \"vpn-domain\" : \"k05jhfx30sginyo67govt23ygo4mfvp871y9ucginf0zmcmetmv8wn2lyym9l4yeos4ih90np8ly7wc1l70bbqzqk4bk7z7b11hskfz738aq7hvr80a057u6pzzu9z2pa7u6hd0eszxjsvom1xfch3o4h3l3jlhhc4\",\n  \"is-vpn\" : true,\n  \"as-cidr\" : \"5uexc2bc5ebv1ufdpgfdg167jr96houiafxr595qtxwaihwqlb0mipopz6l7iic30s0k42ws6ln6h042psuzjmt2zto23eqvianjorggycbty7m00kb5cg91v7u29w8w2kzhir0l8zc32t5pu6agorf4797ogkhlvf3d599jj\",\n  \"valid\" : false,\n  \"provider-type\" : \"xed8z2rua69gs84f0t\",\n  \"hostname\" : \"Eilene Zboncak II\",\n  \"as-age\" : 305704679,\n  \"continent-code\" : \"gsx3dhderpi4sb3ryis0sk8f951egf197wqktkb2o6yngaq0rhu6i455om1ha6nw2qxpuf80pptuimphkm0yu2f8kbw5rfcrk089qhgfvh714ppswe47sli5clsfbn3n9350jafwdky872li9qcy8mn3uuygjltvaox63f6rvhsvb71q\",\n  \"is-bogon\" : true,\n  \"ip\" : \"xpv4hkeysdke6ipyjlwbbust6qwie9lqynd1o9x9b8i43zmudpvv6zqbtwd82raejelehktcq2wqnnou9pphbspz2awnwqewbv3qppuybm98b60jf9oorm0hrlohz3nwsirkv1fc951me19gr0n0kk9c3phh39jz4ziuo6h973w\",\n  \"as-country-code\" : \"uuuus\",\n  \"provider-description\" : \"Molestias fuga perferendis sed omnis. Repudiandae sapiente veritatis sunt non. Voluptas maxime accusamus rem placeat. Cupiditate iusto et et id voluptatem ut. Nam illo sint voluptatem nobis ratione.\",\n  \"as-country-code3\" : \"jsshyi3o8bvxv1etaq76yvwsqf4pvnu53awlusqmjd7rpxnk168tda2ibalhgolvxxq08awngme562umwu0xo44am5zf3nu2mixfx0jd9qfw3\",\n  \"is-v4-mapped\" : true,\n  \"is-isp\" : true,\n  \"as-description\" : \"Officiis saepe dolor consequatur repellat. Quia eaque repellat. Ipsum magnam optio sint animi voluptate ab dignissimos. Debitis ex officiis ipsam harum quas porro.\",\n  \"provider-website\" : \"90vzt1lout0fgozvymhlby5mtf88noq1pjeuza4fvm9mo6hi0km9irhe9yu31cuf2qtlk1yd\",\n  \"is-hosting\" : true,\n  \"as-domains\" : [ \"kh7uhk92os65m8mqffwmxyyx4z3jgdday6gg8csv9zbp12bjrm\", \"s0of43izdxyai5n6n3w8dhv9xvcc7l01mk5jh6tneyd7zsjaex9hacnm8llsljtw8ibbcymuwzs3rq7dtw2rier\", \"z0a903r2d3oogn9bmwrz3wbf3h6wggyncy8okcqwn2dywbnina2u6gdbly1g588m68y1g2kiyuae2uuyhp39kfxkaqtthmhwfa7f1nqw6rvtefykyyx05mywu8wrpk9u0nj3m2w37glu7n2ad4pioxyu91a1krjmtvzg4nehwxn25js2q75clo7mnwh4r442jf1k\", \"e0dwzlp16tj8tzz36x0fxpy7wpfp2cf91c7n5v6whzjg0vgw29x3ywy6wl25ozcpls0xdku1uiniu9uocejlmznbg4gdam7yz0jkq\", \"oj4atgopj7gbeuw3n8k7tglh131xofucffquu7uqek123etiq91l0myrn7kutij4480rh124i8n2iocz2jcdjg13k4\", \"p06m74rtewlmfeoods4mg7ihkzj7j36zwru1vp6kbus9ka1bq6fgbyynn2omy7wcd5fpq7erekxuzbgyfxn0as0n4cyensu8u6xfyzkl\", \"ruij6r3hrmy3gm60tks852ln0k4m3nwmwp71fgmvwtduulvvhedaqr8y1mtd70cd5w07koe3wft6\" ],\n  \"host-domain\" : \"8d4xk40y77j27l9866mpi9ikdqdo84ml46fadg5esb5q7h8yr6sgl2thpd8rhnu33eg4ctnf4d7nmr2e4lq5zobk7sxxaqmisahjvcamklwrm0qcaw26d6pyrz0qwffx04c2nmbuc9249pg5xfzpdom8wr04h0soronaxhlfoa3zawtoxwk7pqa92vzp3f9\",\n  \"is-proxy\" : false,\n  \"currency-code\" : \"MOP\",\n  \"region\" : \"sqxmwxvf4mpnuurb86os3rp3cuadyark5ld24wv07jkqb23myufi9ni852ohu0hlqb3v56j9i8j3fspyrkj7hfqqk995ab61nh9xe53yfx38fpn3t68gg77jrbwe933d4uvuj7q35nyvypi167ylt7dxpqu0f4m\",\n  \"asn\" : \"c8tuu96f3sp84zj8fer8nnrxof9kjjd9wt893bn0vkm3ej8wf6scd2m2fw4yi65bb\",\n  \"country-code3\" : \"jpaqznuol6vu9g1jythyq5r5odhn909o5d4f2rdu4ss207gi6hhr9n86d2lq4vaobqqhu6d3rooss6t0fjkfu1t0we58i74u\",\n  \"is-v6\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6730d9b5-08f4-4d86-b63d-673a8ea58960",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.135992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPProbe",
          "schema" : {
            "properties" : {
              "as-age" : {
                "description" : "The age of the autonomous system (AS) in number of years since registration",
                "format" : "int32",
                "type" : "integer"
              },
              "as-cidr" : {
                "description" : "The autonomous system (AS) CIDR range",
                "type" : "string"
              },
              "as-country-code" : {
                "description" : "The autonomous system (AS) ISO 2-letter country code",
                "type" : "string"
              },
              "as-country-code3" : {
                "description" : "The autonomous system (AS) ISO 3-letter country code",
                "type" : "string"
              },
              "as-description" : {
                "description" : "The autonomous system (AS) description / company name",
                "type" : "string"
              },
              "as-domains" : {
                "description" : "Array of all the domains associated with the autonomous system (AS)",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "asn" : {
                "description" : "The autonomous system (AS) number",
                "type" : "string"
              },
              "city" : {
                "description" : "Full city name (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (PTR)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-hosting" : {
                "description" : "True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-isp" : {
                "description" : "True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "True if this IP ia a proxy",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "True if this IP ia a VPN",
                "type" : "boolean"
              },
              "provider-description" : {
                "description" : "A description of the provider (usually extracted from the providers website)",
                "type" : "string"
              },
              "provider-domain" : {
                "description" : "The domain name of the provider",
                "type" : "string"
              },
              "provider-type" : {
                "description" : "The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>",
                "type" : "string"
              },
              "provider-website" : {
                "description" : "The website URL for the provider",
                "type" : "string"
              },
              "region" : {
                "description" : "Full region name (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              },
              "vpn-domain" : {
                "description" : "The domain of the VPN provider (may be empty if the VPN domain is not detectable)",
                "type" : "string"
              }
            },
            "required" : [ "valid", "country", "provider-type", "country-code", "hostname", "provider-domain", "city", "provider-website", "ip", "region", "provider-description", "continent-code", "is-hosting", "is-isp", "country-code3", "currency-code", "is-vpn", "is-proxy", "asn", "as-cidr", "as-country-code", "as-country-code3", "as-domains", "as-description", "as-age", "host-domain", "vpn-domain", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPProbeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "f0d184ab-97e1-41d5-9138-5c0eb045830c",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "anjdwpr5orfur5jj6so69mjh8b59q8ifn7v9t3b970hejzow2nwmzam21rid9htfvpr1lvqaf76nigozpp2812ynxybxe7xmkc7mngsrcc3mtrtjteyk09b785njkw30ucozjjxui372gsuqcio7gsx5i9m9w7gnjd1d3v55mszveprul5x"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 606658632,\n  \"apiErrorMsg\" : \"cidcm20g5vaf3hov19jr1gt042lnahjhzq4o6nmjo4x6yhh8bsnsm97zpx844tko14q5lknhn38bsxyt3zwdjmuooelm3f2jb5cblk5872lz96nlsbwrkl6ki1e5v3mt5ljwgvuaod29t2bgn32s2xe5uthwt0f7yrhq51a7xwtntyiy84aormeyu6bsc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0d184ab-97e1-41d5-9138-5c0eb045830c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.135142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "b861866c-f9b6-4618-9245-e58c71b4d1e8",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "tfv2s031p6qmh0t3nwolqm0ekggfswrylk4qjh43ra6qpgcd24n349x3dlefnjnuic9bdbvl05"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 2140291729,\n  \"apiErrorMsg\" : \"v0g12mwbzctk5g8d411lg9r7hubt50m4r5grrne0v4zmt43kandvs6nnbv8oytug1dhifgtln34b8ucli2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b861866c-f9b6-4618-9245-e58c71b4d1e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.135063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "830c61fa-802f-47cb-b294-5db0725fbe26",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "h66raw5ymletnrsdbvfdef73iv"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1966290578,\n  \"apiErrorMsg\" : \"vonkcvunjzl73c6kkb7y3g3e5u1ltz69w2eus5n1x626x2ej24bl9hwfm02lbpxcwv4nxqsn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "830c61fa-802f-47cb-b294-5db0725fbe26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.134985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "ee9c351c-ee27-4f5f-9d81-7d227df41326",
    "name" : "IP Info",
    "request" : {
      "urlPath" : "/ip-info",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "v2zddnspg2x9tr0i0xcrnpun7abgtf5tpvrl6vnv7loy0flri2gqti"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"ktxmhlpxf8qgcnuby2ocncx10w516k4rdovc63ande5o8egeolcuyyswdigli320cfv606092pys2rg91ityzjeuewpzmzbvprhw66vz5a3udqoive1j6se9htq5hqwmk8kivceln9ic9j6wrcxior9kjeldvipdslmot2po4o47ai20gl53v168nyoodxliu\",\n  \"country\" : \"Serbia\",\n  \"country-code\" : \"ssssd\",\n  \"city\" : \"North Danial\",\n  \"timezone\" : { },\n  \"ip\" : \"k0bn5m75x3rtwgvdbp07qrs1xmpi04ky067pudtcrdlfcg7f5bug37xz16t7kr3a8oc39nhenpl78bmxgbjjjfx28havmg7bsyudbbi3z135ab7ut0n19lkivkyztmv6fk\",\n  \"latitude\" : 1.5618880879590165E308,\n  \"valid\" : true,\n  \"is-v4-mapped\" : true,\n  \"hostname\" : \"Clement Lemke\",\n  \"continent-code\" : \"6oth5hjk4b0uj0agm1aswrt2q3kig6z7umq49xr0g8yz2rw\",\n  \"host-domain\" : \"1yudyzdtw0l5523a42ex348o7s68t5g9y5iulp3x497jwogs3mqq1vlk76twfu0y8pswfqbagx7d2y\",\n  \"currency-code\" : \"TTD\",\n  \"region\" : \"wmvtfelx3479hpogfowp4fqb1gv3xpfe2gyyjy08\",\n  \"is-bogon\" : true,\n  \"country-code3\" : \"ghdmnvs4y6k\",\n  \"is-v6\" : false,\n  \"longitude\" : 1.2184507151935363E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee9c351c-ee27-4f5f-9d81-7d227df41326",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.134902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPInfo",
          "schema" : {
            "properties" : {
              "city" : {
                "description" : "Name of the city (if detectable)",
                "type" : "string"
              },
              "continent-code" : {
                "description" : "ISO 2-letter continent code",
                "type" : "string"
              },
              "country" : {
                "description" : "Full country name",
                "type" : "string"
              },
              "country-code" : {
                "description" : "ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "host-domain" : {
                "description" : "The IPs host domain (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "hostname" : {
                "description" : "The IPs full hostname (only set if reverse-lookup has been used)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bogon" : {
                "description" : "True if this is a bogon IP address such as a private network, local network or reserved address",
                "type" : "boolean"
              },
              "is-v4-mapped" : {
                "description" : "True if this is a <a href=\"https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses\">IPv4 mapped IPv6 address</a>",
                "type" : "boolean"
              },
              "is-v6" : {
                "description" : "True if this is a IPv6 address. False if IPv4",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "Location latitude",
                "format" : "double",
                "type" : "number"
              },
              "longitude" : {
                "description" : "Location longitude",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Name of the region (if detectable)",
                "type" : "string"
              },
              "region-code" : {
                "description" : "ISO 3166-2 region code (if detectable)",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              },
              "valid" : {
                "description" : "True if this is a valid IPv4 or IPv6 address",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "country", "hostname", "city", "country-code", "latitude", "region", "longitude", "continent-code", "ip", "country-code3", "currency-code", "host-domain", "timezone", "is-v6", "is-v4-mapped", "is-bogon", "region-code" ],
            "title" : "IPInfoResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "c0ced409-0148-44e7-a539-73e512fe5252",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1146561328,\n  \"apiErrorMsg\" : \"8d4phpnjd9p431tmajq5g0jmg0b9mft9qftei1mag71uz8n2dw6og0t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0ced409-0148-44e7-a539-73e512fe5252",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.134435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "32400e8a-58ad-4ed3-a95d-0ae99b34a97e",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1269807493,\n  \"apiErrorMsg\" : \"puuraqchn11k78jc3j9w620qvurz9sjqmup0unqqk82e9kg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32400e8a-58ad-4ed3-a95d-0ae99b34a97e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.134374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "8e6aa795-e946-4258-b38c-9c9ad528b333",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1722953488,\n  \"apiErrorMsg\" : \"gl9qrqj3wmd549srfyl1j8jdlvsaby30t91282r01h0du88qciwa1s594\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e6aa795-e946-4258-b38c-9c9ad528b333",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.134318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "4614d1bd-888f-4380-981e-64936785269f",
    "name" : "IP Blocklist Download",
    "request" : {
      "urlPath" : "/ip-blocklist-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"rg88qkp84vrfimsmokz12p6gfj4dxolr63fms3w2dtmz5m7as859f05knelcnh8q\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4614d1bd-888f-4380-981e-64936785269f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.134261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklistDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "ff9b7236-1164-4a42-b3c6-3e00baf26078",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "o6dl86rqwe4p7g0f3zgwa2e2o0415y"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1124702617,\n  \"apiErrorMsg\" : \"19pdw3mlv69z2qpoivejsrvd62vpsisucd7xjyafk594qj1w5qm6mfczid5hthyug7n0p9xiehx9m9fk7yocp044x9c9lvp8193saq1a3v5wa3znpm37tvhbc8dbf38f4dnwizu6hmt4yemqpzclr35t7w5p7x8lj0t0e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff9b7236-1164-4a42-b3c6-3e00baf26078",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.134216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "ba96645f-db88-46fa-8532-5a7364ba9285",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "lqyembabfo6k04mnts4mb2eav7p75gk6das46n"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 660794674,\n  \"apiErrorMsg\" : \"gir55cyt5g1g9d0gmgpofu4kg2ynnqygh4x3i52p2lqgnokzg171xav8u1noueudki\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba96645f-db88-46fa-8532-5a7364ba9285",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.134138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "2a893512-2a6c-408b-b8d6-0d40cc060587",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "u3vwp60s2k8gr7mm39q08yi8yg0lk7p8chjq6yy1t2pb88tihj06150p0nhkaj9orx7go5cf0nv2yl8fs6g518r78vqld2of274tbv"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1253763331,\n  \"apiErrorMsg\" : \"9xfsz97r2di259t3ip3m5zqvsbg2gmkb5ogtdme6fgfd0pspj9x6lc17cljf10uk12wx9rl8m7sl8igugl0tpvpfzo4j6y0nyhbbtttk307vnhhjadxpv44wiko6vfqno7r83n9fm0m1r93kwh849wemp9rp8ny5yayxmdl0tz19aj70k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a893512-2a6c-408b-b8d6-0d40cc060587",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.13406Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "61f09798-347f-48e0-a2ea-362725219c86",
    "name" : "IP Blocklist",
    "request" : {
      "urlPath" : "/ip-blocklist",
      "method" : "GET",
      "queryParameters" : {
        "ip" : {
          "equalTo" : "4jorjea4xyn6bdodkzrkyte2ur48whhnhr9s88a69eeildv67eqpsycsp8lnnrzuwlqyp2esxlipz69xoore8p5crtif2gl9np8zag4mlqkbvogtiufjuz82b3mkzw732qft6impyar4zz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is-hijacked\" : true,\n  \"is-spider\" : false,\n  \"is-dshield\" : false,\n  \"is-tor\" : true,\n  \"is-vpn\" : true,\n  \"ip\" : \"4p0clieqhqi6fm8tfk1o5vjgszm7avjosp71m4tm6dhnzoueerjn4hnhip3eiiwgrnemlw76i754xls5xisve8kkl8rqejgiknt6kbg\",\n  \"is-spyware\" : false,\n  \"blocklists\" : [ \"y3ozqkhsfxf3fwjynmm69q63fnje82q9218s6898lryozmuhaxv3oz2q29tv7lzr9uemjvi6yjx72fbj6j8nvhl47wec2lxq2rrxtkkl01swm7jfy1apxmgmizo5hqs5zq7xsrka17\", \"kanyg3bgu1npxwsh32n3xw\", \"doyqx22rhjnejd4h2oujubv57oxipwwm032abrc9el7utmldv7pipjlyh63erjgp8sht4y0eqtn28xsqkyem2jfgbx7z4483lqwmmf1asnl5v7qm7c06xapjq36mo\", \"dvjh5uq0xwjc8m2vabzrm5raa5odaj6pmska49on6mriekdewdp3ty6309k3b1actf61gdgqzio2c0q6r6geutr15bonzb6fhwkd3ccd41wi7t28b7mldaka5hb3usi13bjoao2hmrs027rfto3899fqu02o8ceudnrptg0pcsjhjur\", \"z6ww21p6ve2xigtd59polp0wcd222jf8xlipxpif28d29wxwi2mt3iv12nt0kn6rupguawxq0828414r3jbf12nvwdl6ouy2tz8u6c9rky6m6ruokfbervi00gmm2wnb56l658kio68twl2hlyasryc2lb6d\", \"gluoxjfsgomt6mjk7w6p8z43peh2d5681tto70drz7nslyi0a3jfy7ue7mxmvqbp0bgx9j3uh1bm3ggkuiuow2v3qntaarnloh\" ],\n  \"is-spam-bot\" : false,\n  \"last-seen\" : 1923599007,\n  \"is-bot\" : true,\n  \"sensors\" : [ {\n    \"blocklist\" : \"jbmlmynrgqm7fi2rwvk1haamu3mwm33q8yf87a6vk7a6jc0s5\",\n    \"description\" : \"Aut culpa perferendis. Modi minima provident architecto. Amet sequi et. Facilis beatae eos et labore.\",\n    \"id\" : 786946461\n  }, {\n    \"blocklist\" : \"en563g4kzc73xq60p35uqus50eanauiyphznpn8zqsalfsywz7bj0kxa5hajp6ffubfcp0vgbsc80tpaolqlv1o0rjcutyipttms7ztrmx6z0yd4h0m5h332pc3nas3osv7tesm9070czuka\",\n    \"description\" : \"Vitae sed magnam ea necessitatibus. Neque enim ex voluptatem maxime rerum. Et labore quia tempore id qui ad. Error quis sunt tempore ducimus rerum.\",\n    \"id\" : 541932204\n  }, {\n    \"blocklist\" : \"oftp1dnbicg7nka1nzhnetoq5snmjai1lltwi3d71p3eja9gd4pze7b2fla\",\n    \"description\" : \"Ut quaerat nobis tempora accusamus architecto dolor. Eum ex reprehenderit aut voluptas. Voluptatum ipsum reiciendis quaerat impedit ipsam sit voluptatem. Ut harum consequatur id quibusdam maiores aper\",\n    \"id\" : 11391735\n  }, {\n    \"blocklist\" : \"vd9739dsc04sqgj0ouhbsmcg5nnf5b8p24uod7j8fp9nf4jjc8fdgbazbwkfzja4cfy7k4ua0nq5q5s25cdiqlzi2jd9gy8k484s3ka0\",\n    \"description\" : \"Veritatis dolorum asperiores quod nam nisi qui. Est nulla quo ut. Ratione velit laboriosam.\",\n    \"id\" : 1152524854\n  }, {\n    \"blocklist\" : \"fmmdb1302wxks8o7wydqdwei6zzxpb81ny8\",\n    \"description\" : \"Et sed ea atque atque recusandae sunt ut. Eaque recusandae omnis. Repellendus ipsam totam est nulla.\",\n    \"id\" : 1684565505\n  }, {\n    \"blocklist\" : \"shk6r702ej0cpjwzjqiaqs50ho1eq96kxcslwecyvmc2jisbizkjin860bcdt6y97dh65pmupbq6gykg9wjwef3he30boi7cff98ckju1q8szbfiu8ts5tn7pepms4e2eu3vcev2enhtowyhpnv4npoure7a7lq7jqb0mc9perpkbmdxgtmmdqgz8auu3pjr\",\n    \"description\" : \"Eveniet quis possimus tenetur eum beatae dignissimos veniam. Qui dolor aut. Illo adipisci autem et omnis deleniti. Voluptatem saepe porro assumenda fugit error ut recusandae.\",\n    \"id\" : 121562874\n  }, {\n    \"blocklist\" : \"v8nwungutxipxzf5\",\n    \"description\" : \"Rerum omnis vel sed sint aut. Dolores est perferendis repudiandae. Dolorum ad et dolor nostrum beatae. Necessitatibus ut iusto quia omnis. Nulla atque voluptatibus molestias.\",\n    \"id\" : 1249882864\n  }, {\n    \"blocklist\" : \"dyhujwnod3xdbs52ekvkv567m8yc9ef17rff28uashr2ufbdhsy62yvsflanct45lbmtpcefg1eou2xzva5ljgvyfoyi6xyjbwdkkeg70\",\n    \"description\" : \"Hic ex porro tempore. Dolorem optio ea rem exercitationem itaque dolorem est. Dolorum atque ut enim et doloremque. Nostrum consequatur sint quos aperiam dignissimos.\",\n    \"id\" : 1423773855\n  } ],\n  \"list-count\" : 719399247,\n  \"cidr\" : \"6u4o7e3l36fjg42c4req472rw3i9e3aojdggxokxjv5uuwmpic7k9rb9s6kop25vfkrzira9fp457puuuyac6y44ywotofqwv3atwafljvvtnwc5ery62zld64aohlf1dr4nn6ul0ruhtpdo0urkijnpogzy25tsfqe0sqipckepdz1wm\",\n  \"is-listed\" : false,\n  \"is-malware\" : true,\n  \"is-proxy\" : true,\n  \"is-exploit-bot\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61f09798-347f-48e0-a2ea-362725219c86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.133968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "IPBlocklist",
          "schema" : {
            "properties" : {
              "blocklists" : {
                "description" : "An array of strings indicating which blocklist categories this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "cidr" : {
                "description" : "The CIDR address for this listing (only set if the IP is listed)",
                "type" : "string"
              },
              "ip" : {
                "description" : "The IP address",
                "type" : "string"
              },
              "is-bot" : {
                "description" : "IP is hosting a malicious bot or is part of a botnet. This is a broad category which includes brute-force crackers",
                "type" : "boolean"
              },
              "is-dshield" : {
                "description" : "IP has been flagged as a significant attack source by DShield (dshield.org)",
                "type" : "boolean"
              },
              "is-exploit-bot" : {
                "description" : "IP is hosting an exploit finding bot or is running exploit scanning software",
                "type" : "boolean"
              },
              "is-hijacked" : {
                "description" : "IP is part of a hijacked netblock or a netblock controlled by a criminal organization",
                "type" : "boolean"
              },
              "is-listed" : {
                "description" : "Is this IP on a blocklist",
                "type" : "boolean"
              },
              "is-malware" : {
                "description" : "IP is involved in distributing or is running malware",
                "type" : "boolean"
              },
              "is-proxy" : {
                "description" : "IP has been detected as an anonymous web proxy or anonymous HTTP proxy",
                "type" : "boolean"
              },
              "is-spam-bot" : {
                "description" : "IP address is hosting a spam bot, comment spamming or any other spamming type software",
                "type" : "boolean"
              },
              "is-spider" : {
                "description" : "IP is running a hostile web spider / web crawler",
                "type" : "boolean"
              },
              "is-spyware" : {
                "description" : "IP is involved in distributing or is running spyware",
                "type" : "boolean"
              },
              "is-tor" : {
                "description" : "IP is a Tor node or running a Tor related service",
                "type" : "boolean"
              },
              "is-vpn" : {
                "description" : "IP belongs to a public VPN provider (only set if the 'vpn-lookup' option is enabled)",
                "type" : "boolean"
              },
              "last-seen" : {
                "description" : "The unix time when this IP was last seen on any blocklist. IPs are automatically removed after 7 days therefor this value will never be older than 7 days",
                "format" : "int32",
                "type" : "integer"
              },
              "list-count" : {
                "description" : "The number of blocklists the IP is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "sensors" : {
                "description" : "An array of objects containing details on which specific sensors detected the IP",
                "items" : {
                  "$ref" : "#/components/schemas/BlocklistSensor"
                },
                "type" : "array"
              }
            },
            "required" : [ "ip", "is-bot", "is-exploit-bot", "is-malware", "is-spider", "is-dshield", "list-count", "is-proxy", "is-hijacked", "is-tor", "is-spyware", "is-spam-bot", "is-listed", "is-vpn", "last-seen", "blocklists", "sensors", "cidr" ],
            "title" : "IPBlocklistResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "2d427428-adfd-431d-8c57-69948d102bbf",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 882102737,\n  \"apiErrorMsg\" : \"welsu0frmp6vtbh19qw66wn3ev5lt1rrbjvr2s114qh36vveoxrme07t2ica0ay27m91ei5548lfcdgni84nvs89cty26jqywdq12x49rh9nkz8k02r0n8ded4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d427428-adfd-431d-8c57-69948d102bbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "a9284ed4-bf9f-4878-8cc2-6d5d7d13f7ea",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 571468693,\n  \"apiErrorMsg\" : \"9len9om1ct7wjw8bsgsjwum\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9284ed4-bf9f-4878-8cc2-6d5d7d13f7ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "992d1148-e055-447d-8f92-6662b45daed4",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 889772600,\n  \"apiErrorMsg\" : \"klir31g6pvmy9sv92mqs2d5hjz9h948q28vay8fvw8qspg2esefxmx7ioxc5s1xgd6t6kpxi80dsdv3ax3bhz0b7e7rtqj63yyxb94sn7jae5ykhdjbs6h1c77riq7daffe97au101hmf8eylfi7mx1tcsn35lrqaj8twn0dvunxoymiszholv6eye\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "992d1148-e055-447d-8f92-6662b45daed4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "e9a03d03-4cd4-4b34-a796-4202ced48941",
    "name" : "Image Watermark",
    "request" : {
      "urlPath" : "/image-watermark",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"z17v9fnozodraz5dm4mf75b5xkbyz7xhgqltybg\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9a03d03-4cd4-4b34-a796-4202ced48941",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageWatermark",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "6548d969-40c0-4f86-a466-ab31b516d65a",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 412526385,\n  \"apiErrorMsg\" : \"xy9w918tnus3hwfbzcgz6dr2t576dd6st6057cgj39cshzw514bvovmmik6ik89zmut6l2wlo9jxesaq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6548d969-40c0-4f86-a466-ab31b516d65a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "4f1728f9-cd39-4449-8fe4-7f8036dc8ac4",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1563707920,\n  \"apiErrorMsg\" : \"t3d64gngu2qwapi1ppo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f1728f9-cd39-4449-8fe4-7f8036dc8ac4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "ff31aa4c-9199-4145-8b84-9f09ba886ac2",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 169984076,\n  \"apiErrorMsg\" : \"wjc63d4y856aoblr2x9l3agpd1zjjo4dn8rata6x08km86mzr1dx4mcqag3zlr8j80ennygez3680x7u8dto7aazbsjwpn8fh675ckicw1l02bt33qcngv5g9xjhc02r0xm5d4o0r233\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff31aa4c-9199-4145-8b84-9f09ba886ac2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "65d58ab8-82cf-4fbb-982f-354519e21543",
    "name" : "Image Resize",
    "request" : {
      "urlPath" : "/image-resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"ipw3fr9yz3qbo9it7f7s4jnvxpktxmyo5wx8brh5oyj4gypv5f5hsz2wjxx345k8vydvhl2lpnozgm6jfi4u4k5d3t3posuhntoykx0z9jhs5mu2mao5f5soxm7aoccqmteu4cjet51no8k3mgtz9m9oszpwk2fokvzv94cic72wy20enji3q6vqg1p9\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65d58ab8-82cf-4fbb-982f-354519e21543",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ImageResize",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "b2d00557-5bab-47c2-9ae2-d4f57baa4d91",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1731394003,\n  \"apiErrorMsg\" : \"lve1qapyjfi6rv8gd992q7k1n6ebb1kbv0ll2ojp1qhi4de4pdw71mo3263pqj3c3ptc7oa0y3wj6vbmnwpxt3fwktq5egbbz23jqf7rcpsv48m8isrt8i3yz7b7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2d00557-5bab-47c2-9ae2-d4f57baa4d91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.13251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "e29bae90-0680-41cd-91d3-b8695c7b3821",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1199684011,\n  \"apiErrorMsg\" : \"2j7jbrudb24xxzjpr4s0b6k5ek049i57gqb1ocdpj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e29bae90-0680-41cd-91d3-b8695c7b3821",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "366795e6-7510-4176-aff1-8a35144753f1",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 692509443,\n  \"apiErrorMsg\" : \"7ehb4lo6i4skutrzt467phqvjkhknfqw53g5407rlv9wmdnjvu892vkhrjqzwtc8cbj8z3wgi2vzt7q8cdarcl8hf77iiwo3cugg0s2sqo7jz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "366795e6-7510-4176-aff1-8a35144753f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "f716167c-b5fb-4ec3-8230-a77ccc539ab4",
    "name" : "HTML Render",
    "request" : {
      "urlPath" : "/html-render",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"2kt6wlce8t3zlih48eet9jmbojt7fuuvjotowgukon08kuaip6589mr9dwkphzgxoh5xmsjm35l014e0fcy0y4g805hibmbtcy86m0tbjo7p6jlwtx8qm8dplwto6ezsfyqas991jp66prfgxj4duqtclmjd688ep3c5jybmfaowytsorfttp3y460s4vrxnmc\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f716167c-b5fb-4ec3-8230-a77ccc539ab4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLRender",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "763b0aee-fd63-4ae6-87a2-d7c4f1f5e34e",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1972648483,\n  \"apiErrorMsg\" : \"ate09apc7q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "763b0aee-fd63-4ae6-87a2-d7c4f1f5e34e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132274Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "7790e88b-1727-4669-81af-8d979fcb9145",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1418869061,\n  \"apiErrorMsg\" : \"g116jecqf093tsmc8u0nzy9q3slp8s600f7n4t3oaozxsd6gjb689pbaphg5k4e6qwlo89ivlfv071fn2wmqw4km1gyrjcdkvnc07fe1jz872fi5qjshce0y3azgkp4jneq3ljzs13ev6xaqqfzeqgeu6dj7c37v5pwqb0fuz39ve83ao9pkl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7790e88b-1727-4669-81af-8d979fcb9145",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "5a37ccae-952a-4d76-8b67-d680bf50ad47",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1343811539,\n  \"apiErrorMsg\" : \"o337pvjxstom7d6jfil8ath7lcv326tisr8hvp3soh3tpr1plgwy7ye9qnbjiw5oxpqktyz9dg4nrxaf66fbmgeuazzgwboi3d5s2pm01e8v3jczf50fr27guog8h4tdzne5fzmdfjfh78r6vfynt8alvmldly2p4bt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a37ccae-952a-4d76-8b67-d680bf50ad47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "b737d7a3-3706-4301-bfaf-d475a10b75db",
    "name" : "HTML Clean",
    "request" : {
      "urlPath" : "/html-clean",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "\"oszi0m71p03ij9uima0dgm\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b737d7a3-3706-4301-bfaf-d475a10b75db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HTMLClean",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "39bca61c-69d5-4ca3-adf0-a7dd6be9b793",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "cxamt"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1037210886,\n  \"apiErrorMsg\" : \"h9chqz5hc71nubrzytuufniysblawrpop6y7i9yxj4ubrxk5xfhe0c2zfhisqsf335re2m6p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39bca61c-69d5-4ca3-adf0-a7dd6be9b793",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.132042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "beb51f33-816a-472b-ad95-627d40d9389f",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "3cdk68e2jbh3bjwy6bsizo70bqnjrgkr71h6ltnacqpdn47q11m7ujqsw3soh7056seehi8c76gxglc1wjc84vjivnv534z0rrblyqvhpintjvbt8jj59hk0uk7"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 237290069,\n  \"apiErrorMsg\" : \"vvtalscv9whptloo7f1l8jqg1oqhl4o4hcnq3pfvccuyo17g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "beb51f33-816a-472b-ad95-627d40d9389f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.131964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "6e74e6f8-a458-4a60-af4e-c9459f8562b5",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "2vzgsfbwdxw4hpxrhfrzc8v89rvefngiugis62kajdgg40cn9casoykwfukicfjizk78d0nsitvh8uonnktw2"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 369147535,\n  \"apiErrorMsg\" : \"ll6w6tshqlsse8zkct1bw7wxnz4owco9ymzfi803drwssghdg9pxl2dbeb8mu6odezj533bnxqohztckyleormot83aj63m8at6i4de4i8ku2yflprvocnvygvd56ynlycnihn8ervknnk3tqcxtyyt7zr221zuqpczxu0lnwtj0smyowogwbqb48r59unwjv5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e74e6f8-a458-4a60-af4e-c9459f8562b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.131879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "5e3aaa74-bc82-4729-98fb-13b272beb73e",
    "name" : "Host Reputation",
    "request" : {
      "urlPath" : "/host-reputation",
      "method" : "GET",
      "queryParameters" : {
        "host" : {
          "equalTo" : "7zisthw88"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"list-host\" : \"vuqei0tbyop6v0rx1lp8prhh7w86kjlalvoxfhzf\",\n    \"list-rating\" : 294693358,\n    \"response-time\" : 1149770787,\n    \"is-listed\" : false,\n    \"return-code\" : \"fc49qtpv9syvbagybmg09e0qy3rxhhq8pyusky5og5xb6g00a6yxj6ppc60wm8u6l9df2q7qznhlz0g94zi4fomjjk7zbdr0ufvs1jgh41mml48l23wjqw7948murqiimh29\",\n    \"list-name\" : \"Clinton Mraz II\",\n    \"txt-record\" : \"vb6granssjmhxlxvk524p1q8yaot34nulpyk43x8k9pk0k4s7twhd3u40j3e4cvk5o2392geiy5vdqq8ho7afcu1z\"\n  }, {\n    \"list-host\" : \"0e1ty7jo1w9wp5h0iohi98xacq2bxve4giy02ia0r1riehrj9w534nbx4ravtn9vbyjfue3ztrptfug7t2itv0ke\",\n    \"list-rating\" : 375557965,\n    \"response-time\" : 1263759964,\n    \"is-listed\" : false,\n    \"return-code\" : \"0ykkwxzneedmbyymnf6esrjirbo9v32eyo5rg793ze\",\n    \"list-name\" : \"Raguel Reynolds\",\n    \"txt-record\" : \"yue28n69enhvddp5i9jb1tu5b3wtx67fmd06u\"\n  }, {\n    \"list-host\" : \"7qq05778pboq5rm45msw9dcm9w3kx2w63iyk3ad5eh2l4yezgd8ayplz8bpx6hk4xgbig1oclm6pmyaivmj24cc182sxentgx7x9381d7lwqvjc89v68e8smy63fz0m\",\n    \"list-rating\" : 1439763534,\n    \"response-time\" : 2089577595,\n    \"is-listed\" : false,\n    \"return-code\" : \"vt3q8oix8z6wuqcb4ja4xwtu7wern3yo9z7h7k186xee0\",\n    \"list-name\" : \"Many Bradtke\",\n    \"txt-record\" : \"3j8x4gw5wooop743ds2u\"\n  }, {\n    \"list-host\" : \"8lxzs69xskvif7876tc\",\n    \"list-rating\" : 1127898707,\n    \"response-time\" : 740494115,\n    \"is-listed\" : false,\n    \"return-code\" : \"9twbrxolnuivtyfsvt6e52mpy\",\n    \"list-name\" : \"Ruthe Jerde DDS\",\n    \"txt-record\" : \"uktldc85nwrqkndgsbd7axrse0jd2mmoze636u3ldxfyh6yguztmw49uk09bzflbzzd5egy3l6r3td0r6xw96260pb05kmjiejyo3y1qck1q8izf34v9s5\"\n  }, {\n    \"list-host\" : \"98sfnfzwpd3gz2oqwm2qxw19sbbqds2byhwkaqb683rtya4867myu2grok4st684ai285syxy3e12xfoh6qb0gj8mnhv08csh81p7or18vvtlwl2oumjzfr7l9wktkyh2l3hcva15okf437m0duf3e7a5eb5g6hh9m6fcs4meibxjk0nt6q8we7yjb7\",\n    \"list-rating\" : 1221009204,\n    \"response-time\" : 958972304,\n    \"is-listed\" : true,\n    \"return-code\" : \"b9voi2pgzk2z7nvtqpbku8bjr\",\n    \"list-name\" : \"Jaunita Balistreri\",\n    \"txt-record\" : \"br9owon22zfwfi9wr9wsyptcrt2021eogo9l\"\n  }, {\n    \"list-host\" : \"zdg7eegx7gldggj5r8kgyphp8jf3hypcyikgn4vqqsm6yv394q6ehi28sgzentebyej50xsr0z04of2\",\n    \"list-rating\" : 66707519,\n    \"response-time\" : 1764875320,\n    \"is-listed\" : true,\n    \"return-code\" : \"lvw5cb2hwlmkztvnmbwltit9o9lt231hppii2rrrb33peduricy0645xar1w6ylwxj3kbzbmfir8xwkx4cqec0kdq8rgpo1jdxus7orrpqfi48vnsmew742\",\n    \"list-name\" : \"Eldon Parisian PhD\",\n    \"txt-record\" : \"193o7hl061v13beuhxitz3k3k8pmmk42o0c\"\n  } ],\n  \"host\" : \"x8999m5r46zoj8eyvjm1m1y6fjka8dzsdlc0iajlxl2u6vsqw5getht7f6qhd03m1dqcnoszokh3qdrr78jadh2r1rqchzevgtoalnqhvcs6nez5cxg69lhxeihcxvks8kthbtfgv03oen89nke63hp1mg21gk4rbbdzt0\",\n  \"list-count\" : 732365000,\n  \"is-listed\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e3aaa74-bc82-4729-98fb-13b272beb73e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.131789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HostReputation",
          "schema" : {
            "properties" : {
              "host" : {
                "description" : "The IP address or host name",
                "type" : "string"
              },
              "is-listed" : {
                "description" : "Is this host blacklisted",
                "type" : "boolean"
              },
              "list-count" : {
                "description" : "The number of DNSBLs the host is listed on",
                "format" : "int32",
                "type" : "integer"
              },
              "lists" : {
                "description" : "Array of objects for each DNSBL checked",
                "items" : {
                  "$ref" : "#/components/schemas/Blacklist"
                },
                "type" : "array"
              }
            },
            "required" : [ "is-listed", "lists", "list-count", "host" ],
            "title" : "HostReputationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "9eecf494-27ac-4fea-841d-419de8741493",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "bzm02o467ptc5dwc7xmieoqyao7jz2aplwva9xl9tde4w3y9vmfs749ny6sj55nfc99ji9file4hy1icepiw8hzgask4wyfcsjni4kqk758x677qo640kb4xntcoryn3lsd8sitkjxd8p16ht57osibw31r5i7q1bb74lqlcp3zjqubzhfpd4ahy0hlrey2nq9"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1652872962,\n  \"apiErrorMsg\" : \"r7mj30q8bgwlxd7vfmt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9eecf494-27ac-4fea-841d-419de8741493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.131049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "043bed04-3b29-4094-a180-f95594ad33a0",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "l8tq5sne4vd3awxje2bdk1l36u7anw9l4xobjdht695d0xq"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 580809268,\n  \"apiErrorMsg\" : \"bm1hu8ebsmitzkou6wy91ylzynqzllb3xd8c41xex6y3l36y31t01m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "043bed04-3b29-4094-a180-f95594ad33a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.130972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "44094972-689c-459f-a357-ac17800e1186",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "g9nig0z9o1mzu1qhwgov50pz3t5bopzlmenkmbkh2oh0fumxxnwnkmzhtw9w4sjdw4ojh5q4s8auajct45vqvlnztqks6ssaiqau3yazj5p9hw96pgmvvd3qg3gcn6myjc"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1336889260,\n  \"apiErrorMsg\" : \"2utfl50dzqjlv860uqcanbju09sa1dljhvppww63dsuryho9eun3jomtjh6emapv67rvjrmlbu529wi7mmi3psl5o2e6po22amoias25sjfn9d004vqh1qtjwo3tyhdneef5k50\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44094972-689c-459f-a357-ac17800e1186",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.130893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "9062f148-6fde-4401-af58-0121cf8efc5b",
    "name" : "HLR Lookup",
    "request" : {
      "urlPath" : "/hlr-lookup",
      "method" : "GET",
      "queryParameters" : {
        "number" : {
          "equalTo" : "v4086ymf6wsx6zt4u2gg3oxdu6k6py6isclolb7qmjvai2myzy9y3000kj8w6rmmc48eeqxq5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Armenia\",\n  \"country-code\" : \"mmmmt\",\n  \"is-ported\" : true,\n  \"mnc\" : \"7236ionh9zh2paycfqtlxob5qp1zfl1orbwntt19qj8xj6140ogrmfbisptykib\",\n  \"number-type\" : \"vrkdiqyx\",\n  \"international-number\" : \"su7u2uj1jxbl27qe0np9y06wym\",\n  \"origin-network\" : \"mej4japfsf9jh1odu540dn4chixkrinzfrw0bc8tk1lu265svia040uusiyry6hju2h8v8as0wiytyakh7r9y55aqvlc1g5pcn3s4k7a3p9ia7\",\n  \"roaming-country-code\" : \"ggggr\",\n  \"imsi\" : \"7acmutdgbbksno1y6kflcat1k3a4l9pzxkw4imks4b711rydx36mzn53kjdhrpmc1c2pzkrkjk0fs5opbg81v7gbo2edkeu8ybmy52u8hyxy5hwigj76uqlt4l7wwaqzdksj2yqthm4hamlcexlsr4ode39xw6ha1gcon7yqokqll2zc7a7sq9qcf111bucj0\",\n  \"local-number\" : \"xbh2n4pfqehczy9564dixc46lhjfwd6dssgxax4o\",\n  \"mcc\" : \"dm8ol2r17jyq0q7cl2iffdimy4a30dc0zbiizthk0hb2whk1axlyyr6ijr744fuzzgboh8wcrjgm5g8jpoif3fq5dwit2s1ljzce61dcv8esmrqf883n1gt3eff8uj8j91jbafkoy5v6jbkct1usxq8njsyje4whre\",\n  \"hlr-status\" : \"3g36tsnwfdwqrx1rr2x05lup0xmczueb\",\n  \"hlr-valid\" : false,\n  \"current-network\" : \"171vbzvq07lnsq28p3iy4vt80tdc5u6x9uyf1dtlvfc9755jcg60pdwm14bcwrlugfbndlvltysw8stsvim3s0llq04i3aqz92l3df8dv8fiuwohrs8cikje520q7i1zgrg62ts5c2byz20w36cubsu6y1haylnd2f300l71tft\",\n  \"msin\" : \"0lmbhjof7xoz2e763axz3stmx7fe\",\n  \"is-roaming\" : true,\n  \"location\" : \"k6gqy7y5x91ewom1k2yq4ntl50k6kk0vrkcgpdljd5u55aq8qvkxcdq3h5n5vt\",\n  \"currency-code\" : \"SRD\",\n  \"msc\" : \"d385wb576iizb034n0h3ler1vwp1ufc1akh383mr4e2cpc6s06o28n94o0018uthf44rjhq9l45offhe9y45kwft3wojombluw86saf3f6b3md3d7rf0xailoq8h9fqh3pvjthbx7eku038a1vi0brobm4e\",\n  \"international-calling-code\" : \"6021bjpw8au2vtj7q38mcplghoaewk6mtmq5m738v3d4dqat0hvi5kpqbju0ir78qw2cqitp\",\n  \"country-code3\" : \"rk1p42dc8esal5w8m9w\",\n  \"is-mobile\" : false,\n  \"number-valid\" : true,\n  \"ported-network\" : \"od6cxqmw9mlwhhiyq4nl8rj4n2eqlmcz24n7cz14arel3eh9r2zbf2a472dw52ae8ef2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9062f148-6fde-4401-af58-0121cf8efc5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.130805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HLRLookup",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "The phone number country",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The number location as an ISO 2-letter country code",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The number location as an ISO 3-letter country code",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "current-network" : {
                "description" : "The currently used network/carrier name",
                "type" : "string"
              },
              "hlr-status" : {
                "description" : "The HLR lookup status, possible values are: <br> <ul> <li>ok - the HLR lookup was successful and the device is connected</li> <li>absent - the number was once registered but the device has been switched off or out of network range for some time</li> <li>unknown - the number is not known by the mobile network</li> <li>invalid - the number is not a valid mobile MSISDN number</li> <li>fixed-line - the number is a registered fixed-line not mobile</li> <li>voip - the number has been detected as a VOIP line</li> <li>failed - the HLR lookup has failed, we could not determine the real status of this number</li> </ul>",
                "type" : "string"
              },
              "hlr-valid" : {
                "description" : "Was the HLR lookup successful. If true then this is a working and registered cell-phone or mobile device (SMS and phone calls will be delivered)",
                "type" : "boolean"
              },
              "imsi" : {
                "description" : "The mobile IMSI number (International Mobile Subscriber Identity)",
                "type" : "string"
              },
              "international-calling-code" : {
                "description" : "The international calling code",
                "type" : "string"
              },
              "international-number" : {
                "description" : "The number represented in full international format",
                "type" : "string"
              },
              "is-mobile" : {
                "description" : "True if this is a mobile number (only true with 100% certainty, if the number type is unknown this value will be false)",
                "type" : "boolean"
              },
              "is-ported" : {
                "description" : "Has this number been ported to another network",
                "type" : "boolean"
              },
              "is-roaming" : {
                "description" : "Is this number currently roaming from its origin country",
                "type" : "boolean"
              },
              "local-number" : {
                "description" : "The number represented in local dialing format",
                "type" : "string"
              },
              "location" : {
                "description" : "The number location. Could be a city, region or country depending on the type of number",
                "type" : "string"
              },
              "mcc" : {
                "description" : "The mobile MCC number (Mobile Country Code)",
                "type" : "string"
              },
              "mnc" : {
                "description" : "The mobile MNC number (Mobile Network Code)",
                "type" : "string"
              },
              "msc" : {
                "description" : "The mobile MSC number (Mobile Switching Center)",
                "type" : "string"
              },
              "msin" : {
                "description" : "The mobile MSIN number (Mobile Subscription Identification Number)",
                "type" : "string"
              },
              "number-type" : {
                "description" : "The number type, possible values are: <br> <ul> <li>mobile</li> <li>fixed-line</li> <li>premium-rate</li> <li>toll-free</li> <li>voip</li> <li>unknown</li> </ul>",
                "type" : "string"
              },
              "number-valid" : {
                "description" : "True if this a valid phone number",
                "type" : "boolean"
              },
              "origin-network" : {
                "description" : "The origin network/carrier name",
                "type" : "string"
              },
              "ported-network" : {
                "description" : "The ported to network/carrier name (only set if the number has been ported)",
                "type" : "string"
              },
              "roaming-country-code" : {
                "description" : "If the number is currently roaming, the ISO 2-letter country code of the roaming in country",
                "type" : "string"
              }
            },
            "required" : [ "number-valid", "international-calling-code", "mnc", "number-type", "hlr-valid", "hlr-status", "ported-network", "imsi", "mcc", "international-number", "local-number", "country-code", "is-ported", "msin", "location", "origin-network", "is-mobile", "is-roaming", "country", "country-code3", "currency-code", "roaming-country-code", "msc", "current-network" ],
            "title" : "HLRLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "45e7168e-8069-4496-aaf9-026951034107",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "n3ldlbxpildqgpu58krxy0kpck77ggtlj0bp7bilmm151fudruxn6f"
        },
        "longitude" : {
          "equalTo" : "6a5hehy0cznfhtwd0x8g3p8w02j29qc5i06oeyqo9t855dogzsov2wslz11uzhinew1ehgfzbyccucagt6owdj2g11c0zdpiy2ajtq"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 82840664,\n  \"apiErrorMsg\" : \"su3yj0z7ocl049dtuqhkxp65eb22y59qofqehjmgh1hgvbigrs6rjlxyokzvu5ag24589uqpxb6fl0pdi05idb3phshmmwvhklp6ez3om3oit1eopc6ib5sk3ol2rdtzw3puwbt4e0sp0241y923ggb29rxc4bl9odh0d38pn65v9f5l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45e7168e-8069-4496-aaf9-026951034107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.130309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "886177e5-ea66-4f7a-a271-0336bcda4f83",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "51m12i19rwa73vfkfc8jrfnsln7s3v0v49smvagob99"
        },
        "longitude" : {
          "equalTo" : "z7dg1gnudmr72qn5aqbmty3c6qeobl4oq01v709r6yc7x9s3t2t027dtxmhz0hsays79gft9g6arwzgvzid01h40k3i"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1783553395,\n  \"apiErrorMsg\" : \"so0hdlgwm50thon6vkfhherpsx2et4hu2w6kzqsrs94xhs1304wwisfop8c6ui6ncfckpz9cdc9q0pml4cj1x4uy2p19y208fd5rufot342gk5msv9fb55dvbgzzfkmzvutmmj1i0r3bpacdlmo830we4kf4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "886177e5-ea66-4f7a-a271-0336bcda4f83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.130206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "524fc462-9029-46d1-8bdb-e2f7a6b5a5df",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "ky565nralui0dmiqcv2em0280igp1lz8hxg73vmzgbtdvk09nr19mhdro455befaz5vyl7byi6ti6lkoyld97ix05a0vwopvzrdwviqhq81q5x8no72yy7c658zigbkhsibs0en39oytybf6t0e3380p77j33u7eyi1z2lq4"
        },
        "longitude" : {
          "equalTo" : "pmuiwv9nhw08s1dh5qggdpt5yxddnyyk1r9dwby3ip79rba01dhxi4na0l5p1omgeldhmq2y3twudey2eoz2bcdsp6jjcsn9hrsr6dz35xx"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 887398528,\n  \"apiErrorMsg\" : \"tvbjvz1f7zw2xvoibtzjhvjzadj1g0akbibnnjf9vlgfx7ivgoscd36038b9imabsrud7wv8qpjhr7uii7mfsu8b2j4yhsrzvlgv1vw5ukblvpl8glhl269q7ffag\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "524fc462-9029-46d1-8bdb-e2f7a6b5a5df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.130106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "51e570b5-4144-467c-865d-2ab7800903a0",
    "name" : "Geocode Reverse",
    "request" : {
      "urlPath" : "/geocode-reverse",
      "method" : "GET",
      "queryParameters" : {
        "latitude" : {
          "equalTo" : "fehqj"
        },
        "longitude" : {
          "equalTo" : "bjdpamwyhy1e4u0gp9x3p51uryrhvn6vegk9igqh4mb0z6lapu208vogzjdluwfmha0w5guwt8ar96mmz6xjcpblmbfg8zqssu00js5k88ywq8ns817wwaz9s0r7y9iuzuxgrzrd7fsif0w4rowkhzs82dw9jgxcm72wyb1vw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"region-code\" : \"pllhl8fk0jbnkpb6pgx1q4th5z6ipk\",\n  \"country\" : \"Uruguay\",\n  \"country-code\" : \"ggggh\",\n  \"address\" : \"mi34ohq7djjzza6ac8374dwgyul0mkip1rs2gusfbw124mhic74b9h1g8ptxj3y9v1d5s6go03kiq12opi1lqudnfef2gr2qgdk4hc5m1p64vmec6k4v9es9nn7yiwyrbj2t\",\n  \"city\" : \"East Mitchell\",\n  \"timezone\" : { },\n  \"latitude\" : 2.441921628545191E307,\n  \"address-components\" : { },\n  \"postal-code\" : \"76560-6334\",\n  \"found\" : false,\n  \"postal-address\" : \"6o57q3pz5fkzbks1dy3qrvgtyouoqtyc2i87dnbvdqa1rkiz125bckx6z5ryxlcd3zmap1kxji3jaw5wdlb614nrbtlr5x83ujeqw5gignn3zv75zgana1qd1nh613mvy3hhwzv17cfvkdqx926anuvzmgzg7maw7bioas9vkyfdb6wgj9yvjnkd0kxex\",\n  \"location-tags\" : [ \"2oq6xlau7688thapinw5mvctjdbkqow4tmes41zx6pvep3wpm9flokhh8fu7y72zniu7i1h0227ntcch4rmdvf5x05cnsp1ipvj0g9wgy2h\", \"rlymd9beiv1ijru1xy1wok2wciyf1skbcb4a36ndvoi8wkf8n5d91fjo62ogmysw3o3lxqjibpzqaoalhdjkzzvbudxp95ryh56opybhw7l5kzbhcin0zm1ao1yfr0ihuckmth1lokg4uklorttto5y5bwp0bgct5j3co5mzohtwl7kek\", \"r9bh1b62gqvevrpeehn9mu1rz8m570szethiyjy7kyjmstmk7vxfv8czdmgm25rebyor48u8vntevst8knv3ql6mj4fe1xejhrer5tfpp6qbb2llwephv9621unl7h4sxhhgn8ozubmtkme31gz9bgtmxbcv869\", \"mge980ecgo74fqfp5qeelj6vrow5dvdtvck7loxec1ntmh3ii9vncjyaxdt2w7act1wdr900ezv06yy0zg7be79xwy72yf2jxaq2d4j7qf9rr\", \"iqxzisrmdmv031i1xqqi68fkbs14i7l04myrwkxp096mimyyo5l9961s8tqw3oighxp35xlwzzfmyom2s857lkliqmdcn5hm56rse406ql8vz95rt490bc1971lgximus5ue2fia6awyv78zn4mbb7l5i1ufm3hxebts2bfvx2jm9gjcqhbi013\", \"gprgwu5c7hc3gfb7mf5wm6e7trl46ml6jp542xz09vs73e34paoi1sykocd48lgcnjn1nvc3fstvld34ehi3o6denfgwvdlfuo94xjcc6djpukmzkgp57ydjsrahcg7c4n6pav5siq2ubns548vmu7ed79n7hsr1zhc8l\" ],\n  \"location-type\" : \"5duxn2i0g9hyhgtba1ipcep2up0\",\n  \"state\" : \"California\",\n  \"currency-code\" : \"CLP\",\n  \"country-code3\" : \"kn9uened6hflicox5gq5w6b5klw0o4pp18kjrzgo0ydpp7pwpcbn5twteozff8mhq77e22lm\",\n  \"longitude\" : 1.700148672866769E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51e570b5-4144-467c-865d-2ab7800903a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.129996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeReverse",
          "schema" : {
            "properties" : {
              "address" : {
                "description" : "The complete address using comma-separated values",
                "type" : "string"
              },
              "address-components" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The components which make up the address such as road, city, state, etc",
                "type" : "object"
              },
              "city" : {
                "description" : "The city of the location",
                "type" : "string"
              },
              "country" : {
                "description" : "The country of the location",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the location",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the location",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country",
                "type" : "string"
              },
              "found" : {
                "description" : "True if these coordinates map to a real location",
                "type" : "boolean"
              },
              "latitude" : {
                "description" : "The location latitude",
                "format" : "double",
                "type" : "number"
              },
              "location-tags" : {
                "description" : "Array of strings containing any location tags associated with the address. Tags are additional pieces of metadata about a specific location, there are thousands of different tags. Some examples of tags: shop, office, cafe, bank, pub",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "location-type" : {
                "description" : "The detected location type ordered roughly from most to least precise, possible values are: <br> <ul> <li>address - indicates a precise street address</li> <li>street - accurate to the street level but may not point to the exact location of the house/building number</li> <li>city - accurate to the city level, this includes villages, towns, suburbs, etc</li> <li>postal-code - indicates a postal code area (no house or street information present)</li> <li>railway - location is part of a rail network such as a station or railway track</li> <li>natural - indicates a natural feature, for example a mountain peak or a waterway</li> <li>island - location is an island or archipelago</li> <li>administrative - indicates an administrative boundary such as a country, state or province</li> </ul>",
                "type" : "string"
              },
              "longitude" : {
                "description" : "The location longitude",
                "format" : "double",
                "type" : "number"
              },
              "postal-address" : {
                "description" : "The formatted address using local standards suitable for printing on an envelope",
                "type" : "string"
              },
              "postal-code" : {
                "description" : "The postal code for the location",
                "type" : "string"
              },
              "region-code" : {
                "description" : "The ISO 3166-2 region code for the location",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the location",
                "type" : "string"
              },
              "timezone" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Timezone"
                },
                "description" : "Map containing timezone details for the location",
                "type" : "object"
              }
            },
            "required" : [ "country", "found", "address", "city", "country-code", "postal-code", "state", "address-components", "country-code3", "currency-code", "location-type", "location-tags", "latitude", "longitude", "timezone", "region-code", "postal-address" ],
            "title" : "GeocodeReverseResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "59fb38da-dfab-4b31-a65c-aa676a579ce4",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 904376816,\n  \"apiErrorMsg\" : \"cmdzvbck0un62p7djkj03zun75nce3arck0rgivms6gkogndcq81nrxqkjfx4edle2xuznqajjkm6ais05q866cx9vtuex729k9xsqnds84mes22r9hll2xcjbgxtyen9prkbzg2fak68l68hw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59fb38da-dfab-4b31-a65c-aa676a579ce4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.129502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "c4092cf1-b117-492c-9927-5f10cd6b917a",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1565614216,\n  \"apiErrorMsg\" : \"ghqxqalacb1w0yhy1r6ns4g3u5i64al23p8067153flyht19vm1mltuzdq87zr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4092cf1-b117-492c-9927-5f10cd6b917a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.129444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "1baaf4be-9de6-4c5a-a62d-3d46beedb9c0",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1433621259,\n  \"apiErrorMsg\" : \"woxi20ohbg3qoohe417zsk6c87w8qh8vgf4dt0l3i1mv8l8dh4yp9dt9mad18o4qvvwl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1baaf4be-9de6-4c5a-a62d-3d46beedb9c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.129382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "7eabdba8-9f94-4a96-b6ff-7fe6a2518424",
    "name" : "Geocode Address",
    "request" : {
      "urlPath" : "/geocode-address",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"found\" : 2083172585,\n  \"locations\" : [ {\n    \"region-code\" : \"scfv80vu4s6wlwfl7n0iizjrqy76vklou6iscy2whmg941dnxt35isbfqivpdhyttnledd97d4fbp0z37akr4ose7cegrem6qvtke7tsrvqogt1mw4znpqmp4yg7rznrpkts8q1jxo7a0yufe8p7tfwsve92jztqqcxxu9b3hdej9\",\n    \"country\" : \"South Africa\",\n    \"country-code\" : \"aaaaf\",\n    \"address\" : \"rpxaijm36iypnxgsn50z60ts4aw5kgxg95vw\",\n    \"city\" : \"East Arianna\",\n    \"timezone\" : { },\n    \"latitude\" : 7.680981518649652E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"88877-0127\",\n    \"postal-address\" : \"kbbv9tzugwvraxruh7lk8yw10dl8wnokd73o3jz93vwcjwc3zz08igkp8s887ej72vzlhebvdfr9f82xgczilspy8lner1x04j94qork0fkdk\",\n    \"location-tags\" : [ \"iojgo7jv4ef8puar2y1c52edkkrbbgj1pvh7rvdp3izeicbg8eehqp8z\", \"1sd8htzy85oyw49fu4ibqpoktly267x6d4zxz0674rz7mqbwt5e2dzyzpfr57pdodr4wdxsxg6g9alkcn3f6848t4299kfjz90l65kzh384xpb3jv97ztkiji84oki5aegln5rxzqx6qo66ra\", \"gppdq9qef17t7r1ureprxvir8ktshhhgirhoputgccm4547dhu9hzg1nsypa92yhpqyts0ekwlih4bsifofd8v\", \"3dsmx4f02ucwacdy5qdwy31cj\", \"151mxkh5tlk25s5y1j76bycz85edmxkn2xsqr18w3qnp9lqx53x4pjx1w2betfjei2u6ebl3msvxsp3o2xwbnamhbi7lp0m7tuza0hrl97ske6uggdd7ogr7k1hjx16zn3s\", \"4wwd1a6xvl918b5ofgin915b9hoki0pb06vo7bdt7x\" ],\n    \"location-type\" : \"ornnhfdgolxzoelvnkrj3cdkwd1667i1puiovw1drqjhkz6n4\",\n    \"state\" : \"South Carolina\",\n    \"currency-code\" : \"XFU\",\n    \"country-code3\" : \"9z22jz0mdzk1tx5ka1fzbw3uvkkh89dvppdojnxckrs4chccaw9a9pk1g0q6jtf9qt25c03x1p0o5114s1yqb8j2xahdomktyqluxope2fffiwv8zbsk2e6s48di6st3yhv1n20vl3tn22jtxd22ix2srv69m89gqqirwvbr8iq2i4h35it5xo694bsejo1z\",\n    \"longitude\" : 1.6322270413717107E308\n  }, {\n    \"region-code\" : \"4bj6mbv54at8zk4iigwhfha3uovwdazs8qj0ofvxgb8iffv4tzbr6ydnxtdsvl28u7mcpb3a6suinrrjzv3uhuym8f8id0n06ec28vv5zs46u56t2rgphdd\",\n    \"country\" : \"Vanuatu\",\n    \"country-code\" : \"aaaat\",\n    \"address\" : \"bczs2r48vr4fzbw4d56iu5e28heepdlu0eayu8fkr26gkrd2szer7biwriicj0wc3x0uxcbw5y1z4b7scsgmlm1i3isxfquo85maj3i30gkoggqb77b03u2zoipucqzbf1\",\n    \"city\" : \"South Kent\",\n    \"timezone\" : { },\n    \"latitude\" : 1.3984711173835082E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"02100-1426\",\n    \"postal-address\" : \"lz7pi03l9kle9jeccf80dmpqk9trsmhmo6bgn1gepkox252mtu7zbonxsabrf7p1dhfvj0e5hvfw\",\n    \"location-tags\" : [ \"s9p20y16ra0dk6c7thmrypiwjuqp3fwr04i30df76u4u94kj9gdfss9np6ji1\", \"qetluxc7irq0e6c9ra6jfynv3l9jq7bgnntwu745qiawnpwwr0w3msk0e0keadt83oiuq2vlh6lzk3c28\", \"gwkav6mvhjri0gtyrsa49arano9h9a4vbw6cao1ibc9fxw7qq1ebf7fx90mix292li5o9wkvw90synryfzsynnqxmvp90b1rhons39v1850e4cg4wqcc0r0c4jrr95xgo2yrk1zy57h5lff9yq2a3yj3ca0rhg8miacy9xchlwczgujp9v22rhi29voty\", \"31zuqzmzaelubch3xvbmopn0g67qqn3lj73cf17fl\" ],\n    \"location-type\" : \"338pc0w9df40g8es7\",\n    \"state\" : \"Arkansas\",\n    \"currency-code\" : \"PGK\",\n    \"country-code3\" : \"exlr4i2iiu2a24jn70kg9kbcgog1wr1dipqu0nwdef60pt71il70w2idoorl6wms45sznbh1mc8c3ebu1pt7w1tgdnyjp1dq6pwapmsetax8xae8x68vls1fgaiun120p1lcyelvohcb0xgzid\",\n    \"longitude\" : 3.6072397959799625E307\n  }, {\n    \"region-code\" : \"02gh388lx3vdcgjnkl8fiihbqqo3j2itkk0iowa3foan5j665lwcixm0u82w3p0euzn803wk13d4ltii2gkwz6u6itrp0fu5za7q7yqdyg4i1r6az5rq8r77o6upssfymehuw409uud29u8iwlbwzmrckvgul6u2bz3vcpet\",\n    \"country\" : \"Armenia\",\n    \"country-code\" : \"sssso\",\n    \"address\" : \"pfn3owsl7h0nk3onjm2bveiorqteffoj53cdkxcyf6tj3qx5eh31ioki533gk6g8g5qnz9al5hc\",\n    \"city\" : \"Champlinmouth\",\n    \"timezone\" : { },\n    \"latitude\" : 1.678937251703415E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"50492-5716\",\n    \"postal-address\" : \"43ch50vhapga3c8g5xqpki8p0jziz3n0jpp4yha5wn5o8jyl4ck3evoxsjv85lh1\",\n    \"location-tags\" : [ \"43uadnvnj6rsu47agx3f1qdy070v60uzm37uly5dwnu0txxc7f937ynwgzznuvm77bs2yyhea\", \"7ypcuv62b4w74gc4xotoyaib64ab0t7mj9zj1iv39zac11ymrhomcquo8sxhles7y9z5bpfu3h25fz3f6a1mzcpeuhkyb6atu2ob8vrvn9hzj5rj5hy7mw1cl17if4tgox2cv6yjmk6xsxiuwh716a0imyrg1mc\", \"okntkluysp6feow8q8bvdck3zqbpfbjt8wzld85q7hlgf9fazfbu12mjvyysft6cbts5yivelipz4ebj90dl71mw4a7jxi82ojj\", \"llaj38tuevm66sfrvbkni2opj5q0f76r8sy5nddxmecok5q46dh5khwgxorrhngnxml1gk2sgt1lzybtqjq45\" ],\n    \"location-type\" : \"555ucd5tszsrbx6askxbgknscilmgppt334ykxqexzcx66kaqp4zvqpps12son6hht7qn5x8wqr8t8d\",\n    \"state\" : \"Vermont\",\n    \"currency-code\" : \"OMR\",\n    \"country-code3\" : \"xamwidgsd9c7fjjlcmcx3qcg3df3sodu59yj483zt0p4gothlbj6611no0ccc4do1ztweh7v9zn30b8lp8s7sw091dzvnsc495b6dfibvntpct8rezholjwo8c1hydh0lele98dft37ame8u2w4csyrp7uw5h7589righa3rhs\",\n    \"longitude\" : 3.9171112042017965E307\n  }, {\n    \"region-code\" : \"4jmv6mu8pou10qi9qh0048yorddmr73irbpwqba1v78q9zlk1mnl02gy2gk2x71o05dyragesqt1ca22wngdovu6hg\",\n    \"country\" : \"Lithuania\",\n    \"country-code\" : \"tttth\",\n    \"address\" : \"2uwlaby4wvpwmgnt1hlcycettfjcmcmhp62nlsr02mq1xzsowkzbv7afpk72lzzzyha71c4iq8vhpe4f0kpmnpu27wlho03fhv\",\n    \"city\" : \"Nienowbury\",\n    \"timezone\" : { },\n    \"latitude\" : 6.003495590276822E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"55449-4884\",\n    \"postal-address\" : \"ya6x7tn4o89msht8swhbbah362ylzw4wzj68qd5w7e15tx0w6bh1relv1rm8bl0t8hxqk3j47bpd61du3uywj7fkzhzpdkf85ix7s7i0cyhg23nwt1jc04wn83dfw0dmyks33mifitv\",\n    \"location-tags\" : [ \"bxearibesjfh63w7mjpup0lkula4lxb49q0hb8unhunch2voe6fq1a7ite0vtj7046ngbgmmj0jjqvyn4v9f74ebwbu3lx8oj0ckpx86fa95x2z9kwil4ddnlj9xk6n02tjgrfws00tkigblf27sctrz6k0l\", \"fz2d23tsgmicvttyovckxi3dqun8l14cfv1f8mu3ajamfg7mp9wtdxtr8e2ioxy4ydnz9cvu1r9xr6vi5zs7k1ifpaiu1jgeqwincr10t5vf60sryloa0tu504\", \"43bpzat4n0cgjkf7efhjzoxpyaqbjo4721x7xv9kfrdnh7qjv1yk7kg6y8qhin0p1n8zhg4zcewue0lrt4z5drgcmtu9ru391sfz15r9j5pksqx4n4b3gwmwdwdnfc54l98p4e5roy4vu9h5z21e0e18oewjclk1i5x9nkagem5xkl9ze67ie3arfv4h453gglg\", \"nhd0xk16ovkmwu6ng4brin5iweowsb\", \"7zt8cc6uuxl7l1rdbzwnby8ttf3hnllr8oh1oybcvb6cjbjywi0wnb99rakpgxl57ilzso9hz77upt4vev51423ois704rou1skrq8e1yx9f6om0soj8pdojze57dv6okzrz0sjxx4jew6peuqnmzqn0pk1modnumzpggfc8fpemtlx8p89rekouo9z10p\" ],\n    \"location-type\" : \"mumk4znwpw3bw627a420azyxx6dfidblyw1ern6ksdvm7l4xunl830otmwcl1ln8bxpa62tm5hi4yobxhefs1pxmfsrnmfe3yfy3xzkhs4ysuev1\",\n    \"state\" : \"New Hampshire\",\n    \"currency-code\" : \"HKD\",\n    \"country-code3\" : \"r42riz2\",\n    \"longitude\" : 9.767969161691102E307\n  }, {\n    \"region-code\" : \"o4aju9m1w9692q7ev708raesxann41qtnby6u1d7jp762n8ul86phn49ykhv9j5hg34z603b2mbhwix6rswfdjwiwqcol8vm9bqqozqiaxh8s305rm8wuzycxkeqnmvs0ga2\",\n    \"country\" : \"Bosnia and Herzegovina\",\n    \"country-code\" : \"mmmml\",\n    \"address\" : \"vq9bcwz2jaxanhjkj3gkqq7x6dv5e9twb1gl3ko\",\n    \"city\" : \"North Marisela\",\n    \"timezone\" : { },\n    \"latitude\" : 1.0014535229196722E307,\n    \"address-components\" : { },\n    \"postal-code\" : \"58711-4717\",\n    \"postal-address\" : \"v4gm0dt3n8rv614bh5jl23lxajj5ufcinaw785fnxsr71302una2md3gmuk29855eds3oex803dieevyhl4qb2jc46g945i7dykg8nx5fl04c673hqgqu837dyz05yf9zxtkk813b15tuvmmev72sdp0wzigqhgas5vlj57pq0fp1x2as0wxycfsy5tt\",\n    \"location-tags\" : [ \"ef87xjgulo7ettcuxqggrvq2pc1ooxw3mm2dahl61oyjgj7lh62e8gqp2cb4j5vjst0vbae5k91mvxskmt9vhh1llz47nyq28sdvmez4us5byaq4na9qz0en8vvrh1ck3py8s1oys1da0g1gcuz5up\", \"73q3bfonejcbp0dqpsj1o5hiebtv4pigqspynk1mjwlaol7ruu2987prhsnf1i8eehi8uxind35akqe7doiavznle2r01h98skmp1xp23o2mhthx10j8okmaqnp0ojk3anh9os4aabyiync6ukhn6faudc9lpjtv8k\", \"85fdpw9uga1rs7v41rdwv3fbvu1fw1tj6lcp1nppui0vyh6so4mquhch4gi5twblep6r9mz2rrh9qpgi\", \"zvr0po8w5x9g1g1zqfrcjz6fvlhrkbv8ph2d3x7mwmufsw1ltlw33nzpa3f9d3e2nc6mn3q9cw2svy00nmko0bom8sp2\", \"16rr14z7shdl7gqfy0hspr3ez8wr7bfz8f4cukrlngauhog4pz59knu8vjlm0timl1xll4z814d8eh4v09voxw8fgt1xry8okkt0vj8hzyj84qp1017ru6zoucnjw4phpf149d8ubdyqdbng8lb0wllnimc9vdwjdfkgoykv37e1ikiolumlb9tmzj0k4b30b\" ],\n    \"location-type\" : \"0odj36ssxne26mpwvb8pjtizxxyl7vh9gofjwlwm00kc1hxrpm0fxb8nea37\",\n    \"state\" : \"Wyoming\",\n    \"currency-code\" : \"TJS\",\n    \"country-code3\" : \"0oy72k88rnm77gje1asnay4gmhtj59ypvbmnpf25gb4zklg1qpjf340e5rnf9jet76yht4u7bdezsybnmq\",\n    \"longitude\" : 3.3874655508081207E307\n  }, {\n    \"region-code\" : \"3gpue\",\n    \"country\" : \"Syrian Arab Republic\",\n    \"country-code\" : \"vvvvc\",\n    \"address\" : \"3zob2p2tkzfak918u3g2r3ifug0679kh3iqbvf7emwdle9efzo7rvwutuoz5lac\",\n    \"city\" : \"East Lurlene\",\n    \"timezone\" : { },\n    \"latitude\" : 1.0910801889351158E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"69674\",\n    \"postal-address\" : \"d7o42zp62fn8sxcdew2jg6it4aq8ke013cat3vtt9hy5kcsd7yj08lndme\",\n    \"location-tags\" : [ \"rded10go\", \"rlfhb4g4sv4o533wsh8z7to7alpdr0llst63kv9lh6ep9pnjabzowqnmr2dp73q8hay4jpz933m94qlb3tmbe2xo39bj8n35alessp5oucqubrtrhnea07pza8ejupzl36vw8wc8ynxrqyrspgmqy08v00e2t8bvb9q2ix8uv9r8niypvui4h\", \"ejx4zhjgb7hwt02ymxe75drratuq4iwrxhd0nzvo0ezfyto99vxi6oht6s2lhsb49wvw7n84k6\", \"2i4ipk8qxfdi0ebil7l9m7wb0owqzq23l1wx00h144pob5gupmjjx7n15z27usuondh4cbbj8vmkgb46bwkcu5aoxe1ego24xtjb74ogdfu85x2pezw7d2ccbtv1q9fdf5e70nlwahg6k6fhg135nhe9526vjw9oh1u38eka0bgqkse93x5pbgsnp6s1n8ndamjoxf1\", \"1n71628twh12hi3fuu00m4b45cyk4erdfz5wo8worvcpjwzt9z17e7m18a33iy1bl2z0chfhyrsq41nv5gcunz1jtann6noli3ta\", \"gtlajdbvrzk24lmzx9cwamp8wv44zmbgqlnq546ibfcysh4wpa3a8p3i3jlgzd5lj443bsgjne0jlrqsrrerunis1b8jmflhylyk8948317lvv8s2\", \"rrpewlk7hsdwtwmw6mll0oihuc2g61u8f8cipt10u6jhxh20o9axywbe7ka6gzooommfu5fjw9q800rbpvxwy2obzrood9i694y9hajwwy4tju74sisbmj0oburqgq9xzmlhvl86w4p5i8qhtwv\", \"i5t1l91n560xszsrztfgz94h893nmt9vd6tdmngrfsskpshd0il\" ],\n    \"location-type\" : \"nv0qkbc8bc4bbjd5dajn762v58ookl2qhb4u0icy54zp5a3aerdjuu2vq7u9mbc8a7prbsxkvdgaw80d42usu6ath60zifsttvcjh4ygdqkv6esauz4wjv3a20jb04uyred12qc86pbaljzoompt5ssu8se\",\n    \"state\" : \"New Mexico\",\n    \"currency-code\" : \"TWD\",\n    \"country-code3\" : \"3ptw3dz3rnmcco5moabtdw9wjexssk46ex9gfb364ldcsauk5lcy9mujixhj8hnrt07wrtlamrnkxq31jhoonfjp1e1986ywgmq6liq3m13sdt2ww9vbxjs77xaso3z236rz7nwmbqmomhxdrau7dzl8clwqngxsj1dnup9e2q3w1orl0w5sw\",\n    \"longitude\" : 1.0153558698034835E308\n  }, {\n    \"region-code\" : \"z52xdd5hnbfrzpsugejrfnh9px730bw4vdaywzg8xc6vbqdv82ask5xdue7089989pw63enc3aoclpf7s0oqyi4otno3oqufli4rj677fhxy36jjk1jxveyacvhgu0i2y0ybi7zjyn0\",\n    \"country\" : \"Zambia\",\n    \"country-code\" : \"ddddj\",\n    \"address\" : \"akzhd424b4th7p8d4wsdiom65yfhwvyqv6bwkkjucsjqe59vlwmiw99toxxntc3hdlra6aijjflivo8wizub01wx8xlz2yu2d5z7p6bboxg6taz6i6nsu9oachk0q1u9nzz6boumcofyrrp7hseiu5kg8phf4oji1m606nbpamvx7a6t\",\n    \"city\" : \"South Frankiemouth\",\n    \"timezone\" : { },\n    \"latitude\" : 1.6787842249164035E308,\n    \"address-components\" : { },\n    \"postal-code\" : \"75353\",\n    \"postal-address\" : \"xctezof1rp6dmr34j6mlxqkui7o2pyd4pddiy1hb1xxoiir262c47de7at2mcapfmd7ck3ssy9y2tvxlg2phuk7aw8fmsy26i0p24eomdw1evr5s50it897aadxj1jyrut0yq3trvsqksan86v0\",\n    \"location-tags\" : [ \"5ys8gwxnk61q0asqr03izc04bx9imf63ku771w4v5q8lue1shhmc8otyphwscqekw4a6bafwpxpue8pqnrgeh0sq0ijlw0m5h67bg5cgnlv16\", \"8yqi8z98h3k76ivti7ayfockwt2n0up2a664qqr8uvba2p8lulha1xezjg\", \"z3j6cgdmd7lx4nyvuhmxiblvxf2fhwufilibl1du1omhcssf\", \"dbnooyskk57fsxbsxclsr040lxwommjimgnlb62w5c\" ],\n    \"location-type\" : \"zvhrocuxqt6ws7f8xcjx6lra0yhaain6snrlw2goegpbboo6mc454b9iqujohgqpm9l1wqlinym0vki6yxphrew9obpmjw4g9syioxjlzvu4sk4ixtt\",\n    \"state\" : \"Arkansas\",\n    \"currency-code\" : \"CUP\",\n    \"country-code3\" : \"s7fffjvm24jmg3gp6xs1xb70lymjk16tvov8e35nsodady1ojzzesxkmy0k3isyj8btnnzve9fzuli2gkc6sowyissrse\",\n    \"longitude\" : 1.6003054021324356E308\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7eabdba8-9f94-4a96-b6ff-7fe6a2518424",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.1293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GeocodeAddress",
          "schema" : {
            "properties" : {
              "found" : {
                "description" : "The number of possible matching locations found",
                "format" : "int32",
                "type" : "integer"
              },
              "locations" : {
                "description" : "Array of matching location objects",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              }
            },
            "required" : [ "found", "locations" ],
            "title" : "GeocodeAddressResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "d5e6dbbd-add4-4588-999e-f79e0049cf84",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "dqraohdsyq2yko7phkw13yk02wbylra9of4fzuemuxjk2wuqsj4nqxalisfc47wubyxsg84j34kbmhohqmn4gj8fdyahyzd6rjmxl7q7y1i7svit9xf263765os1ld2as5ua3x0qaxp5ozeo0h0jytlprr1hfbi9xeajupmr"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 203213058,\n  \"apiErrorMsg\" : \"wd6rdwjlfar9oitupzq7zo26m082q5kane3zoua2kd0fauiqkngvnlixm745waoeryn9ggv9clgdujpu7wmwf31qvg6um4v3e2hhscxsgpfts962avlphfazpgojs5j7zo9s85j1mpet7jd2y6gydhf15dx29hqvaewp29b9wxhs3h1px7vw9w2sq8un7fde365k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5e6dbbd-add4-4588-999e-f79e0049cf84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.127156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "37ca5d1b-191e-4e65-a2d7-874c91b6cd13",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "lvsfjf5o1nhkdq8g3ndnv40ldmc9njs21ir0w47uxovqfex0kvjnc1"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1138643744,\n  \"apiErrorMsg\" : \"k4mkirf5j1topqx38\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37ca5d1b-191e-4e65-a2d7-874c91b6cd13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.127075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "8b3517cc-9cdd-4557-8743-f56316addaa0",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "tvrfzfiy7cmjr8x129s0ka0a24bfxtt98mnhy6lbnrkc77b3ojbt89rymleiz038jsyi9j1ucl"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1606283504,\n  \"apiErrorMsg\" : \"jaa4k9lp8yz2k3qn4uh67hn2lrmd7kc0nxn4cwc39b5qjrr12sff407p9bqqjbweu4ng8pqxex0nq6uvlyfbrphd320y54biikrlmi8t16nboyaid1of279ve4du5jxgthafba3ld0zcrlfdg4qlyiq2ey5x2o6x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b3517cc-9cdd-4557-8743-f56316addaa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "827199eb-1274-4459-87b1-d19e3bac4ad1",
    "name" : "Email Verify",
    "request" : {
      "urlPath" : "/email-verify",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "2uj8icpkjhl5vr1e2moxjv3obj2yghg1e2403grm9qnvffhs911iob"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"smtp-status\" : \"hfemia8ag63hhjrily4ypiqrbhbny9hzmla3ipc9udz2w7jojz0iq85hn905byvw26kf1z3gdk62nqqta5sqgb4mcht5p\",\n  \"domain-error\" : false,\n  \"typos-fixed\" : false,\n  \"verified\" : true,\n  \"is-freemail\" : true,\n  \"is-disposable\" : false,\n  \"valid\" : false,\n  \"is-catch-all\" : false,\n  \"is-deferred\" : false,\n  \"provider\" : \"ckri6batn9bzlczhfd4s5ut5q2admee36lev64nwdcrewnc45leg\",\n  \"domain\" : \"6qzior5eyoa187dkd6s20skcah0qiwux1r5fro2d06dk0y7agi3px16wgtaqhtmcmyb58e94wwhzrzmfg9ct7chcbe1k\",\n  \"smtp-response\" : \"ojwd\",\n  \"syntax-error\" : false,\n  \"email\" : \"12jzwowo52myckg5kqqzgxnycsaupi3ncc2sv4o06yjibpdochp0c08o9ozs5eu661mi8xcsa2yocgbc7pvl8o9zolcn1yh4phfqjz6oc2iw4asx3znkzudxqp1xee5hhcg6kja84idirmwrd43brspfi\",\n  \"is-personal\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "827199eb-1274-4459-87b1-d19e3bac4ad1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailVerify",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-catch-all" : {
                "description" : "True if this email domain has a catch-all policy (it will accept mail for any username)",
                "type" : "boolean"
              },
              "is-deferred" : {
                "description" : "True if the mail server responded with a temporary failure (either a 4xx response code or unresponsive server). You can retry this address later, we recommend waiting at least 15 minutes before retrying",
                "type" : "boolean"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address is for a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "smtp-response" : {
                "description" : "The raw SMTP response message received during verification",
                "type" : "string"
              },
              "smtp-status" : {
                "description" : "The SMTP verification status for the address: <br> <ul> <li>ok - SMTP verification was successful, this is a real address that can receive mail</li> <li>invalid - this is not a valid email address (has either a domain or syntax error)</li> <li>absent - this address is not registered with the email service provider</li> <li>unresponsive - the mail server(s) for this address timed-out or refused to open an SMTP connection</li> <li>unknown - sorry, we could not reliably determine the real status of this address (this address may or may not exist)</li> </ul>",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email address (syntax and domain is valid)",
                "type" : "boolean"
              },
              "verified" : {
                "description" : "True if this address has passed SMTP verification. Check the smtp-status and smtp-response fields for specific verification details",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "verified", "email", "typos-fixed", "syntax-error", "domain-error", "domain", "provider", "is-freemail", "is-disposable", "is-personal", "smtp-status", "smtp-response", "is-catch-all", "is-deferred" ],
            "title" : "EmailVerifyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "3d00d7d1-21e6-4794-9091-0423f9e1c597",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "vfznciro18vpwrblaenq7md95cwneubvmt3biduuc8ffj18rlkylk8nv31wp0cuiv1pnc3x0mg5m4ndrebz1xaem74wepbbrjb7hg72mgu453dyvimrnwmnj70o9v890lkest"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1174459464,\n  \"apiErrorMsg\" : \"a0f7jcqnzghu7m30aazdy5un7bg7ijd4zzrl8qbb4xawst9rhudw1ydd42hyb6te413fs3io6nke6gfkmrc94149134lu01vuaaxwsa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d00d7d1-21e6-4794-9091-0423f9e1c597",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "690eaf1b-deed-409b-bc6e-16def1b2e951",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "cz7qd9039aepdfoxgyev7r4wuioogkcqaf615aukkq66d4u13mr6xkuargmjyna17ttc2zd0hs39m9xh4quye7ixcge99tvyalg3bt3znlp46glsc3apm58c4kanfq31gevzan6"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1299599157,\n  \"apiErrorMsg\" : \"siv1mvqkdsgtceho70uq3060tptqh7a77mmet48yenf8y2d9iv230o8h64zqc34sfeo9kkfbz6qu66y6x0zxo252j0nkuc6ma5wrhdan25g0k3h3x2bw6t55yrgnwtjv337ry8zx9wttfgqototeru4gekafa89pvb4hjv1j7fe2ox5hs0adqwtpba21v9qxovnmm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "690eaf1b-deed-409b-bc6e-16def1b2e951",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "ba01e29a-8ce7-4d74-bc4c-ec18bb140ea9",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "sk1kq22lgal0beb3pe9agddjbi88dbdgm04fmmcil6wzhi81ffgol65xxdw6wpd5qvwydsg6tq4wasgfqlxyyidt0q3fz49arppflfpavhjvdw1izkenj9gibx51wj"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1063910766,\n  \"apiErrorMsg\" : \"ufyqk3y49w53icnks0q9fqajtatgantf1m9v5d5retin7emcgksec3x3ihg8atrcksv54v9w4jrxrdbgyy32qobbn8cisut3b7chae6r8f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba01e29a-8ce7-4d74-bc4c-ec18bb140ea9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "bd6dcfba-a8de-463e-a236-b5ca77fbadfe",
    "name" : "Email Validate",
    "request" : {
      "urlPath" : "/email-validate",
      "method" : "GET",
      "queryParameters" : {
        "email" : {
          "equalTo" : "8muwa7q1lr6whl6m8atklogti4lldhgvjmi5ean0ho2raxplwuijyv5okurfuq9v0c7nt3xhfk0pf9kbqfx9x7g"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : false,\n  \"provider\" : \"2tn0l08khiyfo5bqzz6f2m7v9i18ztn6l9aupumi1rj8ozzmxtz389wo2iej4s4pzzynfufep39374oi9vsgiv75aa30hz0u85jlh745p8i29jxl53jdb0omb9s6nnb4ksa2iy5ipvlfwse42et\",\n  \"domain-error\" : true,\n  \"typos-fixed\" : true,\n  \"domain\" : \"gglm3ub0mqeuyq5ra4orcsy3tjw3ohi5v7pntyxbwk2i3kq6s\",\n  \"is-freemail\" : false,\n  \"syntax-error\" : false,\n  \"email\" : \"ejgu9xenw8pd3n1f9fqx3f8yln1rc6qeyjy8vufdk13uyhod84oxz05hsxtib9y9nppgl5o5b56te3r2c8qgom\",\n  \"is-disposable\" : false,\n  \"is-personal\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd6dcfba-a8de-463e-a236-b5ca77fbadfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EmailValidate",
          "schema" : {
            "properties" : {
              "domain" : {
                "description" : "The email domain",
                "type" : "string"
              },
              "domain-error" : {
                "description" : "True if this address has a domain error (e.g. no valid mail server records)",
                "type" : "boolean"
              },
              "email" : {
                "description" : "The email address. If you have used the fix-typos option then this will be the fixed address",
                "type" : "string"
              },
              "is-disposable" : {
                "description" : "True if this address is a disposable, temporary or darknet related email address",
                "type" : "boolean"
              },
              "is-freemail" : {
                "description" : "True if this address is a free-mail address",
                "type" : "boolean"
              },
              "is-personal" : {
                "description" : "True if this address belongs to a person. False if this is a role based address, e.g. admin@, help@, office@, etc.",
                "type" : "boolean"
              },
              "provider" : {
                "description" : "The email service provider domain",
                "type" : "string"
              },
              "syntax-error" : {
                "description" : "True if this address has a syntax error",
                "type" : "boolean"
              },
              "typos-fixed" : {
                "description" : "True if typos have been fixed",
                "type" : "boolean"
              },
              "valid" : {
                "description" : "Is this a valid email",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "syntax-error", "domain", "domain-error", "is-freemail", "email", "is-disposable", "typos-fixed", "is-personal", "provider" ],
            "title" : "EmailValidateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "db469f82-7d20-4404-a2f3-70c8978e6734",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "hyi30z3zjug90qtzv0bp7fhl2tfbba8yvwluwgfbecezg3dr85han4twwwhfx274be44vekdsvwhdi97549i94cu4218hqyiae3d5qthzywz91bxjw42t8t"
        },
        "from-value" : {
          "equalTo" : "drvrdnsli21c4z5ioqtojivatwyytxapfl7uznp0ofl3gkbuucxgjf8s3kn8g2wj9fg7te3rrz5s7h432dlruuadxwa6vhxsx3455h9d160rzgk060dpsi4zfhekz3zjhc19jc5gke597m9r8jd3dsnnt2j6v4euva59lijyp0eikao7p1d0qoqxu"
        },
        "from-type" : {
          "equalTo" : "8cr7e8705hky0x3asmxtqbytfx7k4kmgmpz6ma19vkkgeynsbgzbicf9wpi5d83magwk43juc3cpirjaydzju6a3yi5p1rz2x1pmbu3uw4zgw80mqnqwc8hs6honx"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 893080400,\n  \"apiErrorMsg\" : \"3wvyjxeu8ue3467hpz0eowrxb22vk2ph9p8ijh4nf76psmgveodp1w98x96oixiwdy9luebqmhvtcxzz3u8ung\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db469f82-7d20-4404-a2f3-70c8978e6734",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "c4b3dfb0-86c9-4794-9385-f3b652992f77",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "t2210tgyap13"
        },
        "from-value" : {
          "equalTo" : "l3636o8kzp8rfah1isafk6ixbs4i2cuh1ihzyjy31drn99gk89l2x6y3xjiafl9kdqlth149sr5jbwoc7579nmwi5ulvq3ct1jn660vrc8unz2ao81q1130zhptaqqmpwbs3pbew0baqcbqx3xub70o"
        },
        "from-type" : {
          "equalTo" : "6ox9ntz159alwg914s3r4mrkrutzbuqf3cjg1xxqx974t8d4n4qk86bqvnrhyzyrch0jtpq0vk2dibh5rffj1dzqe8wqmw7qqe6fcombl4bgfc"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 182582049,\n  \"apiErrorMsg\" : \"tlbwbnkv6zpu6yj9vezgnz1ej6ont\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4b3dfb0-86c9-4794-9385-f3b652992f77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "e0953ec1-75d0-47f2-988f-6bbdad5e735c",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "ovsmrfhufati4yyy8og9bs6j9ghg2oac39d9ytu3y7det133fa39nxb"
        },
        "from-value" : {
          "equalTo" : "mlkbqb6xme4l4mn62zk7s2860bkwcjuc37xahoj0d3db1twd6v7kx78k5bidi39e3e4upbnxpy8xxqqo7aqxpcu2oyv8gf"
        },
        "from-type" : {
          "equalTo" : "9p3krvxvdbj0bo7nhz0d2sx0pbruhk0fsrhazpgp883"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1029867650,\n  \"apiErrorMsg\" : \"nujag0mspdrwhlvv6h0aaevrv21fn2esixo222ardjdffqcur5wpv02tkmxwtmi45xz24fgwxm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0953ec1-75d0-47f2-988f-6bbdad5e735c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.126002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "45b1602e-2d70-41dd-b187-6532709267c0",
    "name" : "Convert",
    "request" : {
      "urlPath" : "/convert",
      "method" : "GET",
      "queryParameters" : {
        "to-type" : {
          "equalTo" : "e2seb39u1ltocemymecct4yjzhg7lvehw3qqabyj0jyrf3cexf30awmevzp4pqqx0q2ck8hdqugzcf947xcsavsn0my2afbcykee8rgqjw"
        },
        "from-value" : {
          "equalTo" : "a1v8eni8gcr64mvj1ikj9iwhd5mvmxn86v3fprtki39bxtihbu17uypvsqna3gewn199zvqxaq3c"
        },
        "from-type" : {
          "equalTo" : "y14q41it1zx09yfawazi0w71iow3alzk50lvjr7w9d0c9yfdwd56eqo4uusasmnz48yiga24itt21lc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"result\" : \"f4pfs8v62bfkqkuz3188vdwkq0785zzyst8jt8ibtg2k6ffktxm5f3iy\",\n  \"valid\" : false,\n  \"to-type\" : \"n23azxote19fx7jcspzhn62cbi7wggwjx8liux73zkhqh77uiixuuk4kleiikcqy0d0d2u3ndqmtzdlvi7dxkhnhtrp4l90zrg64038e1b8tzhw0twre585jlxrwi0lxq8s\",\n  \"from-value\" : \"hdr9585y7zxmvbq8xh6pl5mfrevr7hwkoh8b4ajgqvtv72785ea8mg6k5r5t02xjbs5o8nv8dyh2almef0l3non1ulu7adsvpm9ufzxj8pv4wpyoz3tigtsj5apuq6pcsqymkem4cneyecxt\",\n  \"from-type\" : \"2seechfxvtm978kuyeslnyzns63uzkdxdcw47y9eloyu81v6i1ryp5byec1jqcqv0gw9h62707ckx\",\n  \"result-float\" : 5.387767914142151E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45b1602e-2d70-41dd-b187-6532709267c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.125882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Convert",
          "schema" : {
            "properties" : {
              "from-type" : {
                "description" : "The type of the value being converted from",
                "type" : "string"
              },
              "from-value" : {
                "description" : "The value being converted from",
                "type" : "string"
              },
              "result" : {
                "description" : "The result of the conversion in string format",
                "type" : "string"
              },
              "result-float" : {
                "description" : "The result of the conversion as a floating-point number",
                "format" : "double",
                "type" : "number"
              },
              "to-type" : {
                "description" : "The type being converted to",
                "type" : "string"
              },
              "valid" : {
                "description" : "True if the conversion was successful and produced a valid result",
                "type" : "boolean"
              }
            },
            "required" : [ "valid", "result", "from-value", "to-type", "from-type", "result-float" ],
            "title" : "ConvertResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "8dd55390-a407-47a3-8e2b-86eeb969aa7f",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1840220630,\n  \"apiErrorMsg\" : \"8c7y85kxc5ob8o8n7mvfz17wroj7n9q6rdl67xbbzh03vlhh0o2cvcwo292s5mneadbmmwce40cz7rw87zzg5p92ywnxqtm6288mkb6t2b7tfhyt6uh9oeu39gm0mvwxrm8ex4ewvmrvbnf37rskohuy0asr4ysjqune514cd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dd55390-a407-47a3-8e2b-86eeb969aa7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.125687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "8c78d5d3-5d8a-4db1-a6af-ce7257777631",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1341963866,\n  \"apiErrorMsg\" : \"w9rqr4q3i1bcukh6enmbzh1f1jzypj2o650ubc69fted3wht20t7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c78d5d3-5d8a-4db1-a6af-ce7257777631",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.125629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "a235145d-4cf8-4733-8d75-ce1f43879272",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1257080627,\n  \"apiErrorMsg\" : \"zy6ajhzsev8kszzsdq89szc5f1dg5l5q38f84dnpvot8766cn5aecl6kw9dz4zj876jte6mfxzmr8b3pmbekvtnhbn90kkx5eo7dnbv4qec3067a9ingxfok1hig5t4tceep98tl4vqv3i6hnsp585lk41\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a235145d-4cf8-4733-8d75-ce1f43879272",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.125573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "a42a76eb-bf2c-4cb4-9fcf-bc2930421da7",
    "name" : "Browser Bot",
    "request" : {
      "urlPath" : "/browser-bot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exec-results\" : [ \"xq4kgi1mhws4bvwa2bddnacso6op2bb6l586bp3y1gn4zuh\", \"lnoa0poqnw1hr36tnrqj40x1pmjo8cs1cxgo83x3kdoheyxuzto01sp8av7znlppnm9ri2z5abivp6ept3ym5iwquicdnluo1z1y6gco0p7qz7g28vr0m5dnw4dabwuwm3dakmmozzqzngnttvd7e3lc0gkzpxhjnmsfk08uiucla3r2z2y\", \"6jmff8rbdlzc9er\", \"6fjgu4omqpvn2o6l75mza65nqf0cnziperw2xvwl1y9wht1lvttiysykibhlvum7oo2rbpz9vl19n8ql3dvvnwfamjqk08e1reusknz8873ftre34z95cd3o4g7un5jxh6r9rdtyco4qvrx1cdyt2to1rtcewh1ilv1px349rb8x7kfuwr7rkusnjbe9\" ],\n  \"security-details\" : { },\n  \"mime-type\" : \"0xom974jwwbqyjfj7w1hg1p1ulv98suz6e06caijiniyw2fs130fo2uh8nbe7ewle8zsvfivgxlf44qzoeok4ghnz92k1ddrtctqsaz519g66lgt001sf1cassmlkwv\",\n  \"response-headers\" : { },\n  \"language-code\" : \"tvwtbl4p1\",\n  \"load-time\" : 1.1468482463016913E308,\n  \"server-ip\" : \"irdl60z4d8pgzf0tom73vijiso1f1yx1qfom6wrr0jb8g6d4ndcah8jslchhkp3u4zj90xo65mbbfqlspx398xygnf5esguekhoo0s6lo98k1qolbyu67qkuxjssy8sk0dh9zwmn6rfc7fwesc3n1zua\",\n  \"title\" : \"Non quia soluta aut ad eos accusamus deserunt.\",\n  \"content\" : \"Non corrupti ea. Fugiat temporibus voluptas nostrum sequi ut. Ipsum libero qui ut omnis debitis.\",\n  \"url\" : \"https://web.example.mocklab.io/036517\",\n  \"http-redirect-url\" : \"https://web.example.mocklab.io/743754\",\n  \"http-status-code\" : 666556273,\n  \"is-error\" : false,\n  \"error-message\" : \"Ut et libero nesciunt voluptatem. Ut totam est. Alias aut ut rem ducimus autem atque.\",\n  \"is-secure\" : false,\n  \"elements\" : [ \"at4klyr7dnot55k9escykxupn0f5y78z2g0llf5ru79syatjt95qff4sljof70a55cgc79fe6w7m1llh9tixdnfo55uieqqkudy13ps3zodnzj7rxsm5bz\", \"u83499n5fxajfbi66v0ls922w3zy0d5prs5r8g34bfd1gg14kwfts52zt9skbiogysn56zjsvfoktalhrxcavnms2vmco1eceurzl1160h22o4m1ck1hn2k48a6qpj2hpsqoom0y6pdpva2vmf35tb445g\" ],\n  \"http-status-message\" : \"Minus sit accusamus suscipit nostrum dolores. Temporibus aut voluptatem quia. Velit aut corrupti expedita. Consequatur eos ut vel rerum illum. Adipisci consequatur et aut dolore.\",\n  \"is-http-ok\" : true,\n  \"is-http-redirect\" : true,\n  \"is-timeout\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a42a76eb-bf2c-4cb4-9fcf-bc2930421da7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.125506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BrowserBot",
          "schema" : {
            "properties" : {
              "content" : {
                "description" : "The complete raw, decompressed and decoded page content. Usually will be either HTML, JSON or XML",
                "type" : "string"
              },
              "elements" : {
                "description" : "Array containing all the elements matching the supplied selector. <br>Each element object will contain the text content, HTML content and all current element attributes",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "error-message" : {
                "description" : "Contains the error message if an error has occurred ('is-error' will be true)",
                "type" : "string"
              },
              "exec-results" : {
                "description" : "If you executed any JavaScript this array holds the results as objects",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "http-redirect-url" : {
                "description" : "The redirected URL if the URL responded with an HTTP redirect",
                "type" : "string"
              },
              "http-status-code" : {
                "description" : "The HTTP status code the URL returned",
                "format" : "int32",
                "type" : "integer"
              },
              "http-status-message" : {
                "description" : "The HTTP status message the URL returned",
                "type" : "string"
              },
              "is-error" : {
                "description" : "True if an error has occurred loading the page. Check the 'error-message' field for details",
                "type" : "boolean"
              },
              "is-http-ok" : {
                "description" : "True if the HTTP status is OK (200)",
                "type" : "boolean"
              },
              "is-http-redirect" : {
                "description" : "True if the URL responded with an HTTP redirect",
                "type" : "boolean"
              },
              "is-secure" : {
                "description" : "True if the page is secured using TLS/SSL",
                "type" : "boolean"
              },
              "is-timeout" : {
                "description" : "True if a timeout occurred while loading the page. You can set the timeout with the request parameter 'timeout'",
                "type" : "boolean"
              },
              "language-code" : {
                "description" : "The ISO 2-letter language code of the page. Extracted from either the HTML document or via HTTP headers",
                "type" : "string"
              },
              "load-time" : {
                "description" : "The number of seconds taken to load the page (from initial request until DOM ready)",
                "format" : "double",
                "type" : "number"
              },
              "mime-type" : {
                "description" : "The document MIME type",
                "type" : "string"
              },
              "response-headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing all the HTTP response headers the URL responded with",
                "type" : "object"
              },
              "security-details" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map containing details of the TLS/SSL setup",
                "type" : "object"
              },
              "server-ip" : {
                "description" : "The HTTP servers IP address",
                "type" : "string"
              },
              "title" : {
                "description" : "The document title",
                "type" : "string"
              },
              "url" : {
                "description" : "The page URL",
                "type" : "string"
              }
            },
            "required" : [ "url", "content", "mime-type", "title", "is-error", "is-timeout", "error-message", "http-status-code", "http-status-message", "is-http-ok", "is-http-redirect", "http-redirect-url", "server-ip", "load-time", "response-headers", "is-secure", "security-details", "elements", "exec-results", "language-code" ],
            "title" : "BrowserBotResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "f033cc01-27b3-47fb-aae4-9a44b2f11538",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "pric9lwejuie3tost8kbsylsk5o797m78ld6ly13vyv5pwttq2lvsogmfzr605ps57lhnj6vn75mbuqaoesqto5qwxtt5xbflivd8ugri63k4dto71s9v5cm5ihwwzswj26aghhqkvul6g5ulm1aa3sxtww39o"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 1383150260,\n  \"apiErrorMsg\" : \"865egt2bs0v60ppc7sp3ososy4cezqafx2kipmhv865s42bd9e1uzy6s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f033cc01-27b3-47fb-aae4-9a44b2f11538",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.124842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "c9b1e05f-351f-4e38-9215-e958a49e75c1",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "rmtoo3f58b9mb5w11e4nayns9f4womhqdcoa4xd08xjgihiyat0k9wwm48y2u8egh4la7lam9a3clr3nswczmyahm6e4nb5t1fpafpujp6fx9b84unlthqshea32jh2soobq1bhzp2ug9s9yenlhlm83zrmrxfwhybj"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1368304235,\n  \"apiErrorMsg\" : \"5o0jv3n5lf66488blx2l9z716bdgxtdn8i1aw80cvejorr03fwbmnn4poyeavtlqac831pm7muqfkieyea06gg0bh0bo4ny682cv2z5smbq4i0i9s6csry459lclczfx2kxk41m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9b1e05f-351f-4e38-9215-e958a49e75c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.12476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "6bd47b14-0c05-4035-b16b-6c4e4ac331f9",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "456vtava60q244vcw0fzctjuoaras2bbjgg"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 267949507,\n  \"apiErrorMsg\" : \"1xspgjbizdwijmxhhtmi0l9zfcndlp8fphgympk3oes9pxztjmxcbcxsf8inlwd5ajiy33p9j14b811rtmsevivs7pkzuf9k6zkbaldr2w0x5vf7eft5y3jecn0c1to6n1lwkd1bjqcii3rhgongbe04ey9283pltyl77pwzro42i8q5ddi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bd47b14-0c05-4035-b16b-6c4e4ac331f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.124665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "771588fe-9fdb-49aa-8982-0825a934df72",
    "name" : "BIN Lookup",
    "request" : {
      "urlPath" : "/bin-lookup",
      "method" : "GET",
      "queryParameters" : {
        "bin-number" : {
          "equalTo" : "lzjl1thlgliuupoyydwwsirilmyko4ss553rkmlamq5fo9tqffxbte7qvihm6rk43r9bbevmwjsucgl6op160sefqhtowh4m7jt6ymdshkq5ldfmt9rxxvd0ixes5ts5yvg3nusex94vfmia6d0kq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Libya\",\n  \"country-code\" : \"ppppe\",\n  \"card-brand\" : \"ok9xkt5wi8cuhruohv1orqtv2oknql1x8qiygdif465ba0nseijraggaxabrjfs8umoi02\",\n  \"ip-blocklists\" : [ \"udiqitywfw3fmw28n894zvn8jfc8dej9a9q8s5mft7paxgwkeb65ei807ku2a14yhkyokrpsr98svgar23ix9lx\", \"mmt6tnlpyob82muufp8bc3jgvrcmaojtpu9dw3ek9avyxs7arxeav8vycbmativinxm04phuxosh9b2mtavfwpmx0qd5kdjixp04gudr\", \"a1h0z4mgz9rkm5a7tc5e2o05hje0ur6euxznrwtfrgfidvdqgk6curowt0dkhg2oxqo8k7m38didhfjksao30n4ek6yf739jzboxwpjhpw5gu2jwe0fi0xm9crsvkcyexiippfr8ax4v4iun2ki7eodbwo818n9en93gx1u2h4iq\", \"8eg4gqeitlrofeghayjhjr2gokvfxm9q29wpxxto8s69st98dmc723kg107o0thazwnduw\", \"9texdc\", \"omddaeukmrra0it9jgeptp9r63jxmzi6wzftgvdm9rpreh9v05kdmcodcfzzcd0juwo2waxnzbuseofopyoxxpeqn1azyy7inoiqct975cyorwm92hnpj0udj0t47a9i6jsgo4qatkevuksav5nqb8ptlymy5o7ty9jwei5v18hiqd\", \"0o21lky8ppkfrly5gc59o1051v5gqsx0qb0ckgy54ytkb6qoznzq6hnr0iatm4hue6aqqnh8gt1h7hqmp7x8kqnlsgkk6pyu4xi99jaywn2chsawy50gm3cvwh33krymqrs7ux7bh3d026apj53i78xvk0stlastu1pyx23tx3ocqsfhju75gt46ca3p8ubove1k9pq7\" ],\n  \"ip-city\" : \"Morarberg\",\n  \"ip-country-code3\" : \"bmbmb39q089b9l2wv89f46q4jjr2xswxv3a056vnfict0jffbh8lspangam0tr9jclsi0vug42p4h4hcblagj4tntci90uds3kk8ngh1b793r29ev74ivlyaw1ngmhdcsnhmqvlnxuofbn956we96eh7fa9u3so36q87h7\",\n  \"is-commercial\" : true,\n  \"ip-country\" : \"Egypt\",\n  \"bin-number\" : \"d7h30v7xepi9ootgpvt6y0zalijk8gff7zwrozyn4t0rb3qt2h7nto32jatxqva0sn90nk8y2itc9x3cc4kfhtrl65vbm6muf2s0tw4p0naxbjvwypyb6hg6732rfv7ixi5u6zi9pa48ekza04bk4qdq9bisfx6ftp8mfbrah56nwlminpk4b8mc9rmepxyj\",\n  \"issuer\" : \"qglvlg3lrkjpkpw6cwgt332elifmqarfiusbjirf0xjjqi2017crlznyfje4bsm8ifqastr04qc9sqttsji9fffhf9b0zad6gnd1pecb4vikm8pla9i9jme81mzupectcnoflcdr04mjcpr\",\n  \"ip-region\" : \"9cdbw7vc3zv6utfqszakfnrp144on0x3u7ftkitl9g2awbbyx40atkrg9n2w08r1szpvs3927ffrxjnz54lynllhcnbfes7uq04qul11w8pxyp432zngmi\",\n  \"issuer-website\" : \"mebibuh8zansm4yj1il0yrfh4sowk5n0gsd9u5qfa3d48visovxboamugef29b5a88bk0sz7nsvo5cw0azpainuucu8xkwacm23kbdfon09k2u59doml8vn9hf8\",\n  \"valid\" : true,\n  \"card-type\" : \"imyyrqmzcbbt2niw69umtoy6ue8o9i5jpv53c0smnkjq1dxod6m4gjph96dofke1d9zi5w5943bpnggh2u959vom420od\",\n  \"is-prepaid\" : true,\n  \"ip-blocklisted\" : false,\n  \"card-category\" : \"j76rrui8sxjahw5zbkn5j4btqo91tm9sezw2gduqjnul3f137ujgnfntztnizf4q3r12snnmuhcl1i1grqius6q31arrbu3b3gqbzp47kyz4jpmxrh68enaf8be4s382tqu10ho6hcjox5kfgf384444gn317687dtiwpxpddkj2\",\n  \"issuer-phone\" : \"(011) 808-2283 x716\",\n  \"currency-code\" : \"MMK\",\n  \"ip-matches-bin\" : true,\n  \"country-code3\" : \"99vtl5757auppcc040207j89eppvq6fmanr96obbpt6zqbpmgzqzjaj\",\n  \"ip-country-code\" : \"llllb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "771588fe-9fdb-49aa-8982-0825a934df72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.124573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINLookup",
          "schema" : {
            "properties" : {
              "bin-number" : {
                "description" : "The BIN or IIN number",
                "type" : "string"
              },
              "card-brand" : {
                "description" : "The card brand (e.g. Visa or Mastercard)",
                "type" : "string"
              },
              "card-category" : {
                "description" : "The card category. There are many different card categories the most common card categories are: CLASSIC, BUSINESS, CORPORATE, PLATINUM, PREPAID",
                "type" : "string"
              },
              "card-type" : {
                "description" : "The card type, will always be one of: DEBIT, CREDIT, CHARGE CARD",
                "type" : "string"
              },
              "country" : {
                "description" : "The full country name of the issuer",
                "type" : "string"
              },
              "country-code" : {
                "description" : "The ISO 2-letter country code of the issuer",
                "type" : "string"
              },
              "country-code3" : {
                "description" : "The ISO 3-letter country code of the issuer",
                "type" : "string"
              },
              "currency-code" : {
                "description" : "ISO 4217 currency code associated with the country of the issuer",
                "type" : "string"
              },
              "ip-blocklisted" : {
                "description" : "True if the customers IP is listed on one of our blocklists, see the <a href=\"http://www.neutrinoapi.com/api/ip-blocklist/\">IP Blocklist API</a>",
                "type" : "boolean"
              },
              "ip-blocklists" : {
                "description" : "An array of strings indicating which blocklists this IP is listed on",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ip-city" : {
                "description" : "The city of the customers IP (if detectable)",
                "type" : "string"
              },
              "ip-country" : {
                "description" : "The country of the customers IP",
                "type" : "string"
              },
              "ip-country-code" : {
                "description" : "The ISO 2-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-country-code3" : {
                "description" : "The ISO 3-letter country code of the customers IP",
                "type" : "string"
              },
              "ip-matches-bin" : {
                "description" : "True if the customers IP country matches the BIN country",
                "type" : "boolean"
              },
              "ip-region" : {
                "description" : "The region of the customers IP (if detectable)",
                "type" : "string"
              },
              "is-commercial" : {
                "description" : "Is this a commercial/business use card",
                "type" : "boolean"
              },
              "is-prepaid" : {
                "description" : "Is this a prepaid or prepaid reloadable card",
                "type" : "boolean"
              },
              "issuer" : {
                "description" : "The card issuer",
                "type" : "string"
              },
              "issuer-phone" : {
                "description" : "The card issuers phone number",
                "type" : "string"
              },
              "issuer-website" : {
                "description" : "The card issuers website",
                "type" : "string"
              },
              "valid" : {
                "description" : "Is this a valid BIN or IIN number",
                "type" : "boolean"
              }
            },
            "required" : [ "country", "ip-city", "ip-matches-bin", "card-type", "card-category", "ip-country-code", "ip-country", "issuer", "ip-blocklisted", "valid", "ip-blocklists", "issuer-website", "country-code", "ip-region", "card-brand", "issuer-phone", "country-code3", "currency-code", "ip-country-code3", "is-commercial", "is-prepaid", "bin-number" ],
            "title" : "BINLookupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "bd8e63f3-f9d2-4339-8403-21dcc48eb4b5",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 497428994,\n  \"apiErrorMsg\" : \"tooqqdgn3w3ocwlcjhlknnspl0owu10whlmvlqozusyos3ckkg42fpb02wszw4nxg3rvfanhupc7heoumuc9p97makuw148\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd8e63f3-f9d2-4339-8403-21dcc48eb4b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.123971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "05c2e328-4a98-4500-93ae-c3ad36b760f8",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1501199359,\n  \"apiErrorMsg\" : \"5gbe6uh0c7em04ae4krunb7i2ka2nkn9ki2is2w07mw9zpsc8erzku4o7a8w3bpb0ttfpfdyr9j3qoj5h3lx2vt7wkz32njhxwupx1fnwygopd4a1uql47520tsmum\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05c2e328-4a98-4500-93ae-c3ad36b760f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.123912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "91861b6c-63d6-4ee3-8d08-ac817d06cbfd",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 2024155690,\n  \"apiErrorMsg\" : \"3eww3kmedie7rio19lbck4fpaa1a4yqwwb4s0unofvnlj9n61ufl2uaeu0sm306hfdkjj0d96q9cq9642dfibex9sxpg7zbh6yrxo7u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91861b6c-63d6-4ee3-8d08-ac817d06cbfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.12385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "ffb74fb3-00d6-40ca-97b6-9aab0a3295b7",
    "name" : "BIN List Download",
    "request" : {
      "urlPath" : "/bin-list-download",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"zgdhcjyiwowfxttmwkfyyjubtvp9zaxhpzyafsnb0e5q6\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffb74fb3-00d6-40ca-97b6-9aab0a3295b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.123793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BINListDownload",
          "schema" : {
            "default" : "",
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "4456232c-401b-4bbd-adce-8f800d308b59",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"apiError\" : 664258771,\n  \"apiErrorMsg\" : \"r8qdj0cq37abc4ma2nhf67owrcjyywjcc5z5q9sij0n6lmyntt7m3btunird9n7w0i2qpoy1onlen8bnnlou9a9oyz4js1bm8ytjgddjtzyzfd83mszp2j47r7xlib4lf4qxrhy9otoesqqrz422pczz7yqmvg22zxznr0ckvv9evzonazj2uxioyt7msyoem66mji\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4456232c-401b-4bbd-adce-8f800d308b59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.123747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "b6d3da2f-c255-4cd7-bd4c-a48c940f2169",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"apiError\" : 1356793523,\n  \"apiErrorMsg\" : \"298j5f42ioewpuejyby3aw6zw6q6t4dm7gvrh9eyg652p2sq0wd51jpdpqbej5rbqn2gkpqgmhgyvgn65692eoc7c8jv5lus7mtew0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6d3da2f-c255-4cd7-bd4c-a48c940f2169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.123689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "dc1ae79e-697e-4134-ad64-6443975b99dc",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"apiError\" : 1786846640,\n  \"apiErrorMsg\" : \"3dr7c0flf9ic09hd8ntxtry5h6qslwfb04taqe74s4gftzl2yub02b3uiq7xlgrlsc0716uihtsq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc1ae79e-697e-4134-ad64-6443975b99dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.123628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "apiError" : {
                "description" : "API error code. If set and > 0 then an API error has occurred your request could not be completed",
                "format" : "int32",
                "type" : "integer"
              },
              "apiErrorMsg" : {
                "description" : "API error message",
                "type" : "string"
              }
            },
            "required" : [ "apiError", "apiErrorMsg" ],
            "title" : "APIError",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "0a668f72-0989-4348-9fb3-20b017f6e632",
    "name" : "Bad Word Filter",
    "request" : {
      "urlPath" : "/bad-word-filter",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"censored-content\" : \"Adipisci quia illum qui qui neque. Quidem et aut in consequuntur vero libero voluptatum. Accusantium voluptas asperiores est.\",\n  \"is-bad\" : true,\n  \"bad-words-list\" : [ \"dkvrvc6ie40u6uh209libk5rp28mgd7y54fuv57vawcjid88aaondanw3u57znl6a\" ],\n  \"bad-words-total\" : 1322434239\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a668f72-0989-4348-9fb3-20b017f6e632",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:36.123521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "BadWordFilter",
          "schema" : {
            "properties" : {
              "bad-words-list" : {
                "description" : "An array of the bad words found",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "bad-words-total" : {
                "description" : "Total number of bad words detected",
                "format" : "int32",
                "type" : "integer"
              },
              "censored-content" : {
                "description" : "The censored content (only set if censor-character has been set)",
                "type" : "string"
              },
              "is-bad" : {
                "description" : "Does the text contain bad words",
                "type" : "boolean"
              }
            },
            "required" : [ "bad-words-list", "bad-words-total", "censored-content", "is-bad" ],
            "title" : "BadWordFilterResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  } ]
}