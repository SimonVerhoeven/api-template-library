{
  "mappings" : [ {
    "id" : "478936a3-f07b-418c-95e0-b89f5ae43520",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Sigrid+Wyman:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "478936a3-f07b-418c-95e0-b89f5ae43520",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.817351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d15ab76c-5699-4a38-bbc1-6cefb51f071a",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Miss+Sean+Pollich:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d15ab76c-5699-4a38-bbc1-6cefb51f071a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.817268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "15c668a7-b8a4-4721-8b77-265272c0509b",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Doloris+Dooley:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15c668a7-b8a4-4721-8b77-265272c0509b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.817186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "526902a4-9fda-41c0-b88d-b4c76c8fd3a9",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Daysi+Steuber+DDS",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Mrs. Glenn Prohaska\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"k08chtvjcryoti3rp61qqksptt95nu1s6ozdqbrhgxc523mgcuz98ltj28553ee4w\"\n  },\n  \"name\" : \"Ms. Young Prohaska\",\n  \"state\" : \"CREATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "526902a4-9fda-41c0-b88d-b4c76c8fd3a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.817101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "0f847ebf-0e16-4d3f-ac16-3d0648960315",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Manual+Shanahan",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "fai781tk4wbtrfw8iusk8fy"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chadwick Dooley MD\",\n    \"error\" : {\n      \"code\" : 315706275,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Facilis molestiae quas et id provident. Quaerat accusamus vel maxime dicta similique sed dicta. Repellat nobis maiores aut quisquam explicabo nobis. Ut soluta est repudiandae dolore dignissimos sed ve\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Britt Watsica\",\n    \"error\" : {\n      \"code\" : 342850368,\n      \"details\" : [ { } ],\n      \"message\" : \"Sit neque sapiente dignissimos. Occaecati saepe doloremque ipsam laudantium. Debitis occaecati magnam porro. Soluta asperiores itaque harum.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kent Gusikowski\",\n    \"error\" : {\n      \"code\" : 1291919122,\n      \"details\" : [ { } ],\n      \"message\" : \"Minima perspiciatis eum quis autem omnis odit. Reprehenderit qui laboriosam rerum. Facilis excepturi excepturi perferendis facilis quasi. Voluptas ut labore fugiat totam et omnis assumenda.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Tony Wuckert\",\n    \"error\" : {\n      \"code\" : 306201189,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Omnis nam aut aut. Quis eum dolores et magni ad repellat. Ullam architecto quaerat.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Benedict Gottlieb\",\n    \"error\" : {\n      \"code\" : 1663193397,\n      \"details\" : [ { } ],\n      \"message\" : \"Autem similique dolorem error amet dolor in. Voluptates magnam rerum. Ea quia quo. Quisquam delectus animi error possimus dolorum fuga pariatur.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cyrus Frami III\",\n    \"error\" : {\n      \"code\" : 1654412422,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Rerum veniam nisi incidunt saepe est. Veritatis ut facere. At consequatur reprehenderit fugiat et blanditiis omnis qui. Quis consequuntur nostrum voluptatum aut id dolore culpa.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sherice Ebert IV\",\n    \"error\" : {\n      \"code\" : 1182269310,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Non est consequuntur vero ipsa et. Est et quis similique maiores. Quo minus doloremque quis delectus et culpa. Rerum expedita dicta sequi repellat laudantium laudantium.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"yvl6p4fo6unx3aa2uvdxrh2uffezbmkaqgr5sy3tje9sbxo66l0znr68csa7k9ms3pka16c4xhwu2crsxdl12ew828a0iirz5mymo9pw68lgovwsfo58xiasf854ssly845d8wfk15riw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f847ebf-0e16-4d3f-ac16-3d0648960315",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.816825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "1e6742ad-9b92-4a43-8728-72f98ff890c0",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Tammi+Wiza+DVM",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e6742ad-9b92-4a43-8728-72f98ff890c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.81562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "3b867d65-57fa-4e61-b749-09f49e2e8c42",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Kourtney+Kautzer:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dedra Murazik\",\n  \"error\" : {\n    \"code\" : 134832051,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Amet laborum sed. Veritatis rerum aliquam eum dolor assumenda hic saepe. Rem dolores et tempore id dolor voluptatem labore. Iste unde sint dolore. Autem ea provident quis quia nobis qui.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b867d65-57fa-4e61-b749-09f49e2e8c42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.815529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "62ffc46a-9c4b-42e2-ac9e-21273d8f9f66",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Sandee+Zieme",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-10-30T11:27:01.813186Z\",\n  \"lastModificationTime\" : \"2022-11-01T10:47:01.813216Z\",\n  \"description\" : \"Vitae illo odio. Quasi eligendi laudantium ab nemo. Commodi eum repudiandae sit voluptatem. Ut ea rerum nostrum illum necessitatibus modi.\",\n  \"deletionTime\" : \"2023-03-07T09:29:01.81331Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 2019285957,\n      \"year\" : 2053116421,\n      \"day\" : 2107520435\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1675687087,\n      \"year\" : 1653176925,\n      \"day\" : 1210934459\n    },\n    \"repeatInterval\" : \"nv5uoow9c0ffd6163bd90t83y780\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1464362975,\n      \"seconds\" : 1559147940,\n      \"nanos\" : 1520032804,\n      \"minutes\" : 1653971123\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 951305585,\n      \"seconds\" : 827604572,\n      \"nanos\" : 464064449,\n      \"minutes\" : 1521590898\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"FAILED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2023-01-08T10:03:01.813511Z\",\n    \"eventStreamStartTime\" : \"2022-08-23T08:53:01.813542Z\",\n    \"name\" : \"Trenton Renner\"\n  },\n  \"name\" : \"Margurite Herman\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Nitzsche\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Alfonzo Bergnaum DVM\",\n      \"path\" : \"1jm25jtrqvztmrjtfzwhk3k9nwh4e9ssvmtf15xmt392yth1awpr1vjbh1gyf3lq4r8zkn5z91n0qw3hfpniszws4pm5vbx4l4hm4f0pactq33x714tuh5id7l\",\n      \"endpoint\" : \"0ucnna0rge4pnwfa5agklflok48973tjso\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"3h6jclf9ee2pp4f65cedg46b8egucvdjzctmuxkpjnz2e0chdkkrof15ii8ko0h67r6f6b6bmnzzhe8i6lk1jc87nrs53s6y7bcryirxeqd8mu7xqbpkxt84zqtvbpo\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"guqhytfohprx2loi61qns7hfjzc3z0gdfkz2cutgkjxcp8lwfub5lcwn1e2myajhupii2k9i5xxjyllo2cs8t8njinim94mui9ikw3017349dtdyrb0jsz9q2y9s82avln32gvwxvo2ohnr3e2g45dk9au6wj1w1p4mn80qrzsiq\",\n      \"path\" : \"bcvr441zidvkrqa5858h8y66omfpyr5q4k61xou8rf8p4c\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"5fwcsrine4p8pmn32knkv0e4fb6a4dfrnubr4qep1b1lswgkp8o0350n89wnn1bg1xyt0ealg13icxnhyiy27ekpylh2tgmpl25ja4vbq3hgl1k0z4ippn77qbuwl91o47wp5cc2h6d7p7uydg5qtbki7bd4j2obqvu\"\n      },\n      \"storageAccount\" : \"4a7b5hpiais1q56prtd66cdbsivb824wq1h4wajhwjjevnfblaoslt1jk65mrg24a1yfgtrvsve01vfmba1qiz6sdravgjeirz31va9p2qihrerowy381kqmmsmt132y55g53lh5beu9bbezgxvridvhgl1\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"nsq5umjo8f89hobd77rz74glkkvhhzvlmlhcjd0l9x9t6ttrsedv51md29biqqc9q752sjwflegd5rathmi0fdke28aqnj7vuxlz7sy9x3\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Lamont Hoppe\",\n      \"path\" : \"ytkdm0hlplpbv9arpc2of2enw4p5srhodv5wutuds\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"gyco\",\n        \"secretAccessKey\" : \"s6ldjsnjh7g3wqpxef92p2q1f5pocwuyo2v6foi6nkizuskoddbnghb77jqp3x0qj2qsa8yh6aapemjmtwtbg6m124bcy9m9ddyv7nhi6nicxl8dncuxjcbtf0hcug3pf4t2iy5btl8t8caj2aiuqpqdrxs\"\n      },\n      \"roleArn\" : \"bjpt1eegjirzrm03u0ava5tgl8hnfxwdkkfkblsketl5wnkdkg2yk8t539yarnlgjbpxx2wfod3v6y6f5ugik7u3pqaf5eylj7vxjcqqwoaodh4glx3z5qenbkp12tx4tg58x9ufue1t5iwatq8kg9fnayu9ydxmovq56v03jty5q6g893qqhjcwmki\"\n    },\n    \"sourceAgentPoolName\" : \"Blick\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Edythe Sporer\",\n      \"path\" : \"jif2g9ko0mpskctsr3x2v0fbgpnd1wfogpxu4irvdu2ddq88yo9y9716ix1360zda2zj98ws2ydvzeu7iknhut3q67loi8svvgu9eagr98scaiopp93r902oywhlq28m1qcwk4bvry13ng2dsg14iqaz7cse\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Nanci Schiller\",\n      \"path\" : \"1zmktynegqoy\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"riap3p3keo9sg8szwidixceaazn\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2023-03-11T08:25:01.814376Z\",\n      \"includePrefixes\" : [ \"gmxlbnk5n103obbrp115anjpap6ilnqsmkh2dek7c8q2bgvpeihnzr\", \"dv6t5ozicyeevq8ivbeuijd682osw2u1zs4ujhg54pkm0ea0pntc28igv9k1h5eziowidativlclerxqfskqk2tyryqf2kmy7ff\", \"xu5q9v3xo61to7pdru25h31de8ondror5q9zvo8p9el1mnezafxv6eytt5p4dq7jd8nyrvav71vc8v1qwb75yipz3zbn6nbqtgfkqkciqk1g6eyebw6802r3vuqw1k181maqrgzju0msmg8bsox1izg0buy8hkgsseeam2et\", \"iee3rubwszcgke8435v3m3pydl98xhspf19am0sk4pnr41tluodwcsw0gavqftbikd4p75hk2uap2kg8vme1xdp5va9p6jz8idviawviivj7mutxn6h7qw95122rxj6qei3t2ryyoups9pn5b0udu0fsk5i11x9oujeorh5i53d93rkrx1t0ug12\" ],\n      \"lastModifiedBefore\" : \"auja99tv7teuo02ke9tlibjmoxrzvoimsc8o0nwz9jgohrtmfmgh803x1xvnz0yqwha61zkjya019s2tzoez1o5azj0ag0axtgtaoo6mlkmgssuteyjx773tdvvuqgi6w7xn93dh3fdii6v5li66o6gikl7mtd6b\",\n      \"lastModifiedSince\" : \"asl26he31iypampo6bij331g6pqc3seu32x6hkd8chm2lryf0lspej9puw744uqpg1djr9r56q8xkiabdq0xk7ud1wzuisksd524cok48xn528zdnuzgkugj8zm026lj2ivxj04zvanecsk1oxsxk0rk9mhxglr18odbx27r41hsabcvb7b09eu0eyjaj5\",\n      \"excludePrefixes\" : [ \"9tgcpqmb8nq5qtxseklamhydk9e6r3fyg7crr0k6u6w4s1yqgdvadv5ne4bdv9ja6399x2ie96s7ni\", \"t4lvoneu0mgirus8k6ifomnwh4iu558i06rwzsqglurzwb499okcqbx4pxxzxz6ow1prkpongiwpontgu4fzj4jfwi8yemwpysblb8m7x0ulu7wqxru9cbz5knfurkujcfyyq\", \"ec1u5bm1dgreke6yzuwmvvm6ibpigmwkwemdrko63po9wl4youi0dvh0q4aw79oh1x6fq4oi5i567twla7h6zg4y8ml6n6ufeoaqjbnccvgzxc18zozflq7142bpo1ef7xqnj585crz6yshtcqf5nlvc43l92m3zfkixxnj7\", \"749n7a9n2vyu6egl4yfvxlvexw2zhkb1alyh4mcdi59oibyphdushs9hfz7yebkiufwl2avfbiq5pi4mc3pz198rt2yind756ml2l17xyofce5lka542t7sqmm6ilqvjv2vk5f7r79vm5t9vvlrdrvg7wdezvyt\", \"xz7qqqku5su8empx5exti4jt9l2ua2frpm57kpni5aiczl61qytozdb57rc9jhqa8pv8livd9lqc\", \"vdmp2ht32505r4i94pvaei2feknk76cyermgqpai0c6e3ky91hvdu9cxjg1zozhb2docn01g81zrloy9midiyoycoaedl5decvdvq9r87hzmvuioaa3ldsijdij5z162fwxbvglzcbj97o62pqpe1vyqrau0iims7xziepmsnpux1hmgj5gl8nguprzrm0jrp\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2023-01-26T09:16:01.814522Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Vennie Marquardt\",\n      \"path\" : \"k8zt1b6ykan04e1diol15ynlkckfsr4dl0fi3i6vdsf7py1y73fxgx0r5v6a4fw8gg4j0ptg28a3mby9lt1k9rc02d8rwb7qsd\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/603358\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"16q3jtxfl5n5ogdccf5a5ta3qat0wl3iboxq06b79wsz\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_STANDARD\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_UNSPECIFIED\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"DIFFERENT\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"EVENT_TYPE_UNSPECIFIED\" ],\n    \"pubsubTopic\" : \"dgecpkj73xapf5bkhr5nyor2o2lapnh7xzkui0v45c0pwm2cuq6\",\n    \"payloadFormat\" : \"NONE\"\n  },\n  \"projectId\" : \"7ik3\",\n  \"latestOperationName\" : \"Tyree Ratke\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62ffc46a-9c4b-42e2-ac9e-21273d8f9f66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.815199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "5e9eef9c-1f76-4809-9ce6-7a1f9d762d64",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Latia+Kilback+V",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "e4gq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-10-24T09:52:01.811072Z\",\n  \"lastModificationTime\" : \"2022-06-14T09:15:01.811098Z\",\n  \"description\" : \"Dolor eos esse quis in dolorem. Voluptatem vero tempore necessitatibus nesciunt quas facere accusantium. Culpa molestias eos. Magnam maxime qui molestiae explicabo eveniet. Nam nihil id accusamus dolo\",\n  \"deletionTime\" : \"2022-10-22T08:15:01.811204Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1713032237,\n      \"year\" : 210362434,\n      \"day\" : 1258694540\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 475189395,\n      \"year\" : 1243252721,\n      \"day\" : 1681564373\n    },\n    \"repeatInterval\" : \"51t2nt2p9thqsd26bjh1ln873ky3iiu6lc8voyzrttvk2wdbw0yjncde4upqwhk9a7p1wgpfyul9t93bcusfegl4\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 683877619,\n      \"seconds\" : 609859425,\n      \"nanos\" : 121186060,\n      \"minutes\" : 1397799254\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1466991456,\n      \"seconds\" : 1216701409,\n      \"nanos\" : 909719927,\n      \"minutes\" : 1638719283\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-12-18T10:03:01.81138Z\",\n    \"eventStreamStartTime\" : \"2022-09-25T11:29:01.811412Z\",\n    \"name\" : \"Angeline Bode\"\n  },\n  \"name\" : \"Edith Koelpin MD\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Kiehn\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Mrs. Ina Davis\",\n      \"path\" : \"hc6d33jbtrl72mgg2jzbsuovpb43fqaa6rjj86t7vydxmsckpl2g3sarzzeabxi9satr2mxzlkjla4qxzk8gylcw1c81bnfpgj0o6ctr4y23ouez5d1jpl9rro6ohj8xlv3u\",\n      \"endpoint\" : \"jj3mfu0hxyms2fogvzcprbtfjaxavqvmya83tfpu9wpt2p3yoee469jlbi1kg45f36\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n      },\n      \"region\" : \"wzd2c6nml50y\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"abyap54ls7rvabqv9gra8kyv2xhwypy2ampxgoqu9obli17yahx9ul4r4i4sl5zr9yc5tus25u7dakwbcdlro0btjrelqozzar6mmbm6la4va3b76zy0j4lw7jrt5oqlmkj3drcl3gtz9uj84wln7l90trquujricu12vmrjprihg1sayoe5wo\",\n      \"path\" : \"cy600xn225kqktrbut8tzws48e3yo9vpsoorm9usp8uj8lax5xijo6b6ck48azgfe21j8zm3w9fkdbusb3p2vbxnmdetzi11hlj3xlvudkbu7g7lcfoudwpmbqh5r\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"ip15k1l116scisn509nlxv9846gw0hmht1olipypnm7xkzh232y14s35t3yi4qs4ymjaeqz8tc414kckrkz9mqrbxzgxpowh6k4ys4zmr4f4rzfp0uoy32p2qbewzxfjh\"\n      },\n      \"storageAccount\" : \"70zuei4lp4q18zuw4ef1vcxsravzysk9g24l4gjtyuusuo9zqy642g1ttxnp5yw8wpnt2fswykh2wjw6qaymrkdn5xbib3q8rvwtjosmjwwkbje1ujyah2uv4r5fvw9760sfrpzrc0uluy49\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"mj7os9nwgbgjxt84n44nyheqx98i7s0fkcf30\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Harris Murray\",\n      \"path\" : \"b5g2ftf60yyusq35\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"3132\",\n        \"secretAccessKey\" : \"s142qep5f5yfdznnu6k0rmid82r8vqikk8tpn29mempz69fxmhkgz030mawvkb7abm473psgsvu7s7z9xr3og20ptqycfeek8whnmv8iq9t5i8x3lb6le81xys9xgq2a06vlxz3d3kk77w0mms5tue\"\n      },\n      \"roleArn\" : \"y0ja9so0iyw2qlw3knnpy97pcggoccq8lr0fanyysuv2gbkzky69gsqk5s4pejuuff7sbwgnpct0rn9w0zlzxqkdbwmkr11ca30gwdmpxe3m45s2s307rcgclrku384kfw2xp\"\n    },\n    \"sourceAgentPoolName\" : \"Durgan\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Juliann Pollich\",\n      \"path\" : \"cdw4u1eau22nmxk70klwg08ixvdt9baykrsujc22jcd44zknfq3uk9w8citskwtk\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Ward Buckridge I\",\n      \"path\" : \"9tagyald6jey0s8xxh2qa3dyjanfisxbf4a726zbbc7rvfoszth9qqfmdlvk39dfzd7kk66uj3712veviw6i3zxms9nc4tj5tbqetd3k2hs47goowy71pmiuw1vmjwtr13630pi8w187p2gw3srarnk356ojgx4zbkwg64r22zfzik3wtpr0heh77zlzaac\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"ql2igw6nmvyd8ihhxtvbqv5qfynzus5s3a919spdxhkw5heezq5opisvrdvs4a5wg079ajlru67q4omy5ate6obpfou48ay6cfhxf7n3albrrhtfe26o9rykrckh8q9eczy7hl0q02ccr5zofg5i9hh548hbavwcatw7utv81etl1\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-07-28T10:44:01.812217Z\",\n      \"includePrefixes\" : [ \"w8j97hlfjgvm03z74hqju2dckwz0w0jitoi1geab9d6vnrxo4gv7w2gsyukwlrsxdqansuz4wqiwjdyfium3cwtyntk190dw0ldb4zilvtsnjgoj0scrdlyq9xcn3h5ujmuww81ii67pts95ktkz1ndt2\", \"pywtwzgt0nv2jczx4ay93mgcxeif9yff1exl584n\", \"59t5lysivem206290av06va7rvshesasjkfj61pq1di6hc6iol\", \"um2mpufv2zhhxe2ejqb2udzloazeaq\", \"fnsnrdf6jemot5g9b73v2nylh98938jk22zzqzmaex516it3a1bejvhig2jitwborqpurx25yetr1xcarc93shcllzwx7jzzgq7hxopwxvwhv2e11dko127xd3kvay45cm0uawifdah3sknuoxsbd5qvy1uup5ul7m13vsoqpthtf8z7kum7dr5zmji49vd8621nv4\" ],\n      \"lastModifiedBefore\" : \"z97ufrysmf7rxg3nmhxp9b5gh1n4k3jqd8gj8tcklnbn3gkokb8z1nae4f0mejho4id6p4t0p4vdmrubonc\",\n      \"lastModifiedSince\" : \"z6avvfsghyxj63agp013s9i7siw5weg1ikjry9vj5gzbmg7ewg8yzxtu98c2dv1tfncmjrrz0063thmt\",\n      \"excludePrefixes\" : [ \"ovj6gijmtsi3x3z0n3cb1tg758efrdefyek33hmn7onxb57vz65g4i9anwq6cin7sv6mndx8tdbycxcdzk96ye7t7femxu9x4g1b1nknzg0nnftb8\", \"ym4sb5i6d\", \"98m5njs7690wdyjjm1t7aqayng97jnl85gvvryyjlxy00a1rvv93kh2658k7hesut0zuz6xouuxhy139zmzzloon1f0cfm6s143zcgnkb88mo3hf0vh6fn7n9s7lkn2xxbe22plciqbh5clj0ldxxt920b38koqotxousfn1qsfj7b9wxhfslc\", \"j346on364tc46gm2mvam9zq2hl40z7qj54g8f56epwgpej0qd9mattog1g5152sf7kqyuycb7kcn43zcma770ebujvoob49kkqbr46ifaebpun6t01x14jsw7dteb0o2l57j7y7cq6ezysm9dwocyi\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-06-03T11:44:01.812343Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Nick Hessel\",\n      \"path\" : \"pb5ktq6oq9y515yztbza3oixc3bcr09txk79pw336ecyl3ntiiy96iciho6668vrn3k0gensxlpzojs5edmtyyo37bniqswin4s12p7ercjnnohfu5zh6dxneb2s4crglzfdl0josqwetn3nqllxmi85xcv2v7h\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/151325\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"bl5js1xmwm49tfi25bmkex148ege4vvd1pz6w7f3otszwn22dijbpdemyl0wnlt6s\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_UNSPECIFIED\",\n        \"uid\" : \"UID_UNSPECIFIED\",\n        \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n        \"gid\" : \"GID_NUMBER\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"NEVER\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\" ],\n    \"pubsubTopic\" : \"yuh3ebb47uqsx24guxw1022jroclynwe061l4w02ufeixf7x5f3jqfn87egluuzl1qw0y0x0wu7tx4gngfokoclz0379r6iq8b3oq8mtpulzc1u18a2w72ufrjklqd4u5xm9pyjhys\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"361r\",\n  \"latestOperationName\" : \"Mariette Kilback MD\",\n  \"status\" : \"ENABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e9eef9c-1f76-4809-9ce6-7a1f9d762d64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.813131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "6a7683bb-661a-43ce-8b90-76e1b6d6b781",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Mr.+Loren+O%27Keefe",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "269i"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a7683bb-661a-43ce-8b90-76e1b6d6b781",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.811037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "8d441378-fe19-4386-84d4-f163ded51303",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-08-03T10:29:01.808942Z\",\n  \"lastModificationTime\" : \"2023-01-02T09:37:01.808971Z\",\n  \"description\" : \"Natus doloribus illum dignissimos facilis ad. Quae dolores est eos molestias qui non. Possimus distinctio et amet eum ab veniam tempore. Suscipit quasi aliquid occaecati. Eveniet architecto velit porr\",\n  \"deletionTime\" : \"2022-10-20T09:39:01.809081Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 2100272477,\n      \"year\" : 1333354841,\n      \"day\" : 1792957761\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 2066407542,\n      \"year\" : 994742773,\n      \"day\" : 850952102\n    },\n    \"repeatInterval\" : \"bs27gadp9w3ogqdteoog7b46ddgp6xsw5mhqtommrishzurh1uoihnn739uvf71q29e4mc1w7dgpuawmoaj0o0b73wte5\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1401083949,\n      \"seconds\" : 1084754917,\n      \"nanos\" : 189197427,\n      \"minutes\" : 57383730\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1113709959,\n      \"seconds\" : 232288949,\n      \"nanos\" : 585988511,\n      \"minutes\" : 1469220332\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"DELETE\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-06-17T10:55:01.809258Z\",\n    \"eventStreamStartTime\" : \"2022-09-24T09:38:01.809289Z\",\n    \"name\" : \"Miss Leif Skiles\"\n  },\n  \"name\" : \"Bennett Ziemann II\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Ruecker\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Greg Wolf\",\n      \"path\" : \"yqx2gvt4u5440tt0rykriagfyyv1qjp2wl10o2956shuq940h8f3n1rvhl6s\",\n      \"endpoint\" : \"2b3md6ier6g5tfq3tlxh577fbbe1c0knp3fiac436nqmjuvzch2qno1u4ufizd7rxxvxy2od1lak5i4abujlhcfx\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n      },\n      \"region\" : \"fpqami5g4xogw4yfskeossvkxaudow24fjk4t2ecz6pzkrbe164yely8kxkrbjwyxjkryx2krxc4uugaokab2o82elrtu4jufjlkj0lgp\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"ulzsd4yg8duu5aolwykap66vscp456fp7xa7tc0i35t77cjwr8flg7ziiptzr45raqfywggmt0vp5vh2vm25wazltqxx7xwqz91tiw\",\n      \"path\" : \"87tcwbaku42b52zaag3axta65nbgxu6r6j46z5e4h23bvkmhdudphlhb78u7gvdfaddonpsy3rkendfh8wvspq7fz1elvldehwtoobj9972mi9r5o2a\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"2a0eo8flw1ucrv3iukfbc1anryut8lmolmixl6hsnz2xnzcgb6509r65fcme3l8d87mf8dwjwk6b318ex0crjht91uq8gfu2fawj9roptkdoanph6dyfx8\"\n      },\n      \"storageAccount\" : \"ajaz7drqoy4gbmyeba50y1pmd4isqv5rn3s3ahj7dtunjf35mjov43iluvpdnonrlnl2yqeti5v7eb8gxeb0353tut9opfghte4ugxvrodkjsuhqe7o357qd45jjggzt2hi98747l60dpgm3vh4noxa610io41vdowbs1b4lscg7xtjk0de2l\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"e1qpg98l2ci0at2wvpq1o5m4s0tgr9crvni2nand9n3xyk5sdad7l4r0rd0fsbkcf66q7p3ekrcgd2jjrup0pv43o2omdu4ppobg8hht7qskl3j76dyn0f0imsa5aa12qy0y2o44us9i4fqea4gymqjseb\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Brendan Kertzmann\",\n      \"path\" : \"25pxzej03mikm61a6e4yc5dxa51cyuipu7qqd8b7ngrlhs8dnxhnvjbtuau37aw54c0ne8tl92ekowayvhtqa9lfvi3z5zmznjvy4pgj9oehem67uiv55a6qgz4azk9s0am6dw0pchgluvcklj0nknq\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"2267\",\n        \"secretAccessKey\" : \"lrs0eyoflpi8794bltvwsqamugacxr6ibpu\"\n      },\n      \"roleArn\" : \"ffsndva4p8am0u7vj0\"\n    },\n    \"sourceAgentPoolName\" : \"Feeney\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Melodie Leannon\",\n      \"path\" : \"es9l24j6zcun87xbi0km6jduqjf5w3faehnvtr8pdso7jn0e4jxu2smjcjavxt8buwv9r2d544ok1c52bw5pqalvgths8xxg9rko29nhflrna5z53b499auxnlsmssxhkanw7n\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Randolph Johns\",\n      \"path\" : \"17nlr37am5lm8d3f9hzxzncvqor7wettlxw81ci3bg1gmzlksjkre479e8fy8uvf0z2ja2ll8fu75jwcfqy7e14spba1mnsym17dbe15x2wy425n867wkt0793gdz1p9qd42b017x1vlwv7k5sqizuq2f654yziuhwebaou82hblfzidfi3yc13\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"whai0yo5jcvlptt080ne1mbb0gmv1sdynbs7u84l0czlsaqgjpuji4gtqazcfzkfng18a3ohfbmhncgzmyqcjkntwkynjmuvhad6l3jjmyihcsar5fj55crh8nrkg4uo\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-12-21T09:04:01.810079Z\",\n      \"includePrefixes\" : [ \"ttsxycrnl9wtlr9ine3j8xb6prhhwx9nlfdatunkjdjnnr7zfl3w2hv6wcs6lyqmz81on207or7vlm11szswwbxelx13xdzbv7dvvytysffyei07977jfamx6p13qfyidasnmtx\", \"p4918o20j8upo9gcs7k4j22twv4dtf852jd35xx3bnxy6opnaxud572rrrji3bdeuymk2nk86wuct2zjk6wometz7i4etrduzii9nqncsvbml6n46tv05tm9wd999fhp2u8q4m3pp722r4cmvr5rp7t11fwmtvxb3jg3a23i4g4yljqi8offgkvvn1zijordxkpvwgc\", \"37ngvzeen3qn42nz90njsxrstush5djghjnudnz08f4vyvk8i699hjp4zdzdto0od08hjeg4ohxxxyu81sezkyhwx9rqwls5x8zygukiebkec1t3om3olacckdnshvzf7m7sla9ta4e14glg5kwkzugonv3d\", \"dshhq2vyyohjvxabto02n0fihs3823axx8ot9j2vl12qj5hvl3i7mijmv6vwm0zvpfrlg3468hj70vpj2a7no2tmh9e6e83mdft5hovku8t48um3v1c5811mjxcj\", \"06rxj7qvvd89j88zy9kroy76e92r7o9bhr67nt771ogfqldgf9eoc3y3b61neq8fqsg8frzwjm85eurrxs0eea5n\", \"vecq8sej7jz7si5ucu0bpt2jjtgwd24t5fbj33xmwnu5wm8d9q1hzhggejso7msesyx2u4a0z5z35gasicm70d5562edckowg9nkkf1mhyos316yfmu2msnzr5j7sqasdahxv4qmhtilap\", \"rux8nj2zmytd8nnv93pzhl8mof10z7nvuffmvgtho81i5nk4946snmsxwmb4ossp35n7f3w2go9szum50k6qyufudsqslhk717djfawkj146vm6wmiiq4m9e7hd2oaxw1210s68rwsxpvcro5n7gk0sktqebjmgcrxr48godp0x159q1bub\", \"xur61kb0nqm3r66vlcye7atahu3w0zpjgb1edngn1kfxzzlp4gb9qhjub6vow1aob0hmhu4pk3wos79eg74a0d6d42mm\" ],\n      \"lastModifiedBefore\" : \"3g09n49mkuupm84j6wls5glo74gsjni3rn1r8zkvvv9m6rlhi3hjnf1gjr1t1og2cnw8gmlug5er66lveic0q8087r38grrv0ht9qy0v9u9a2es4a83u1yzjxr5\",\n      \"lastModifiedSince\" : \"udpnevoq9vmq9enk8t3hddrb7euclgv9qjv0a84vp1hcg67efjml62my195j6dam1avdobgx5q109pea3ox8azt58xyt0ain667f7valgxoyl3fcrpma1wru41l7qp6s3s1uvuduzfw6evf9otj74x0jmdia41yh1kre1rmstw\",\n      \"excludePrefixes\" : [ \"ui0wmw3x23gotlbv89\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-07-07T10:51:01.810207Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Mr. Mitchell Hickle\",\n      \"path\" : \"pe1hj80byu9mpmcryxh4yqyqcw6q2s5sll\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/381510\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"siwkzulfeok2jkvril0yogp8gqzmjhx62t3hfrk\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_UNSPECIFIED\",\n        \"uid\" : \"UID_SKIP\",\n        \"storageClass\" : \"STORAGE_CLASS_COLDLINE\",\n        \"gid\" : \"GID_NUMBER\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"DIFFERENT\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_ABORTED\" ],\n    \"pubsubTopic\" : \"bf48wpdob44lc5a9xpkc5ridp0ix70ksje2xj6rtu2g0pj7im9gtj\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"21l9\",\n  \"latestOperationName\" : \"August Marvin\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d441378-fe19-4386-84d4-f163ded51303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.810841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "46944508-1330-4c89-80c0-b2a3c2b3bc81",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "ohhn7lmhxldjurfjbgp7bp5pbkzdkhmtct0ybg9dqb7anlukuj7fjwjo4abus3m68gjs9fxhum2qy0w7n8jp8d4243yx0kz3q"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"amwyt1abw7r1gk98cth3sq5x7bkt0l7wi10pp8pg9uk0hla75xn9gavylebxe5zasnt2jmkuxa2utishdvn30nk\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-04-26T08:53:01.799715Z\",\n    \"lastModificationTime\" : \"2023-03-12T11:37:01.79975Z\",\n    \"description\" : \"Animi voluptate nihil quae sapiente qui fugiat. Et sunt asperiores qui. Consequuntur porro velit rerum nulla et aut. Natus tenetur necessitatibus unde eaque libero nihil numquam. Et et qui consequatur\",\n    \"deletionTime\" : \"2022-05-15T08:33:01.799889Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1829028534,\n        \"year\" : 946786451,\n        \"day\" : 180606683\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 976419692,\n        \"year\" : 515424553,\n        \"day\" : 1843895616\n      },\n      \"repeatInterval\" : \"bfyxkq\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1173717862,\n        \"seconds\" : 1356433154,\n        \"nanos\" : 1861349768,\n        \"minutes\" : 1649872709\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1782948534,\n        \"seconds\" : 199039739,\n        \"nanos\" : 603489513,\n        \"minutes\" : 426272521\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"DELETE\", \"DELETE\", \"COPY\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"SUCCEEDED\", \"FAILED\", \"SUCCEEDED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-02-18T08:22:01.800117Z\",\n      \"eventStreamStartTime\" : \"2022-07-10T10:13:01.800153Z\",\n      \"name\" : \"Son Roberts\"\n    },\n    \"name\" : \"Clinton Konopelski\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Connelly\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Burt Corwin\",\n        \"path\" : \"azz0nd0o54jalsprqgkyzejak77bbn2e3u2o26sb5hpcsra9wqnfwyz0jj5fjep8u0fnrmgxoafml8s0yxv40oejcusnywxs8pfkcvmauw9nfg9y40ouvf7bxf49sxk\",\n        \"endpoint\" : \"vzcaq8brdz7v6dfhnwmmgg4l5opgeghl62a9f5e8ge\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"yh46l86yr0scule30q1ixvz4t2qlemkzoyhbxhfuyi2wrq0w3q4secr9gmcg17dg8x4si44g6xdciz6ldjo1k\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"tw2ac58gue04tctf2wr24ki9ezlb9pq6g4tklkegdtgvzycqxi7s0fr6gstztg9f4pj8ps7jeqw5hzdugjc7mx501qjl3wey6wx32luh11d\",\n        \"path\" : \"xak3g2xwvyto0jd8zb9zbu616jpfwb5i8s\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"ap5hvwg71ojqxv7xis27svuxiupvr43dzwvj2ctxx7138y19dz130o0oi8chrvv8uoxen79fg93ertp1ldmvgu00axm61fam3ki7fx27nfau5gpqtl8txi7ykq6rw61b7m6sqqrvto5t3kej58866enqrn\"\n        },\n        \"storageAccount\" : \"kzdefu41xc9kohijlbxeckpbj5nugr\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"3kg2usty1izw5dtrato7jorschegc4fbahq3qthqw3toq5t6wm5lysulp3t\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Gussie Pouros\",\n        \"path\" : \"bwlqbwvkan2exxispcd0cgvdblywmp8whx361ugwy5grkc84wn3fzz68nq\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"03a1\",\n          \"secretAccessKey\" : \"xor7d15o21gbgwvv2mthjyhmpf4gb06tdf2eb2crbulq4epusgixqnx6te2bt0mjiyl1892tb1eqoz4xeuc4\"\n        },\n        \"roleArn\" : \"ir5ds4hqgqfuuszco7uvezctqiw47qwdfysv1x8ieeeab4zo1uifto67z6sbwxwurbi21yygvr9b9e3ji792nntv2vebzbqtmz9545j2pif\"\n      },\n      \"sourceAgentPoolName\" : \"Kling\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Dr. Abel Rolfson\",\n        \"path\" : \"a2g20vgibl7gfrqbxh2kht38or3uzcdd72gd4evy2oz93mn7jgolp8byvac\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Breanna Olson\",\n        \"path\" : \"xiyt7whuvuhnpn8po91tx7eivhdxu4sk47llywuif41vcu6o4fstzbq4e1rh24mqna42jet9fm\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"7age2\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-10-12T10:30:01.801014Z\",\n        \"includePrefixes\" : [ \"x9kqhhy415wojvsqqezjic\", \"k61tf10618xjhyhf70kshnlg4jlyd9vlnj3sfb6s3fmq5h0kjsa1dpw6vfyx1ezslvmaffi2\", \"cj7lainty29ulm7t95hm4adk8vdkcmgi6dkow8rlpxzzpwo2qdxy6jy\", \"g5cgbiln41qp0ve\", \"50epktndlrsfb741ou8t0j73dyhbtb09fp36sjm0aditvtzhb46is7k5kkp0aewyqivwdihyk4t52l3oislp4zagnxazk9vdmqydt0ni9gmpk8ynwmkyw3h3zkpuyl4tbbrqeccp9c470zx9mmogcg9in32fibq3urrn\" ],\n        \"lastModifiedBefore\" : \"r0692il2x85t237wdynvd3xiua42ionaiz1jmlzthqgxgh81ufhelik20h95c85am0xwv9fqv4ipw8c8290i4o2x6i2aiss6agb8wvdome7gxeb6wzmztytnbxv14ocyzeuae1xcu3mcgidegvrhx67172xu11hj3zzo\",\n        \"lastModifiedSince\" : \"xgi1fcks32ssdeubvjya4lgzh745skg948yzzv1qo5tp0hrlwozbpc9r4qbnq1x13zq6kjrgz82a6tp2z8b4eqs3j2sxgahofvic5fkry6xl5ise9xomy2dk9fgqmdk0cp5rg8624iolvxljldfalgg17ccagkjtx1xe8h0rbake7pn3sqgdaperknhdfnhdf2s\",\n        \"excludePrefixes\" : [ \"8jybhjmvq6bjeaioy07s00i0pip428knqajsfcx46603h2tv0olqryrww8\", \"5gu8zo4qc7g3o0n2dacd3zrtve7l9k4e8unpw50lrq1bmdxo9xkya3zzrps3yyzqxcg7npgndyrhg1leojeyvwlvg4kqhelwsmw5t4oh7kadeia584x8o2sca6qk2gxwxm7p6ulezs93vv4ocrme6tiyqwz315pvde\", \"1kjcev5lkxvmrhc9o44h6um8h9i5rwcf0uz1ky3awevonhjm8e745tl0uk8zkrn969p\", \"uidpsf2dh60b2h9tyvq3elp7lbe74sis1xdrx4ygkmt81rmlwn9cdka8h89unhentr0wiz1aiccfx8u0sm1tdv3r6w3vdyzwrhzfrbhveh\", \"hyaubw8nf2xb92iqn8hl4w74\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-06-22T11:34:01.801156Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Babette Wunsch\",\n        \"path\" : \"cjcfayz32y\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/467611\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"jey355kuncp9t8y3utt9pb2zafkdi0k6fxrxmf20qp0eagfabivilrgmd2rp72kn6cn29uem1mr7phvt5gvg5xmg5j0c2fdqkbvqapnsk1b1z4uh5p33sq0zsoft18rstimd8s6hbdbekcwnhbividqj9olsx5qdq9xv4go\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_UNSPECIFIED\",\n          \"storageClass\" : \"STORAGE_CLASS_STANDARD\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n          \"timeCreated\" : \"TIME_CREATED_SKIP\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_ABORTED\", \"EVENT_TYPE_UNSPECIFIED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\" ],\n      \"pubsubTopic\" : \"4j2qp0cgcja5047po09fb1e5x8qrx09pdkfh8ae1m7ovzvavul0i8cu4m4tck4st0229j6lqn1gdfgeub8cff1t\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"6tb9\",\n    \"latestOperationName\" : \"Patrick Mraz\",\n    \"status\" : \"DISABLED\"\n  }, {\n    \"creationTime\" : \"2022-06-16T10:44:01.801731Z\",\n    \"lastModificationTime\" : \"2022-05-23T08:19:01.80176Z\",\n    \"description\" : \"Et voluptates qui saepe veniam quae. Dolor officia vel omnis beatae assumenda dolor praesentium. Sit et ut rerum.\",\n    \"deletionTime\" : \"2022-04-09T10:03:01.801849Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1426014899,\n        \"year\" : 1571224170,\n        \"day\" : 1446572335\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1800125473,\n        \"year\" : 1029400905,\n        \"day\" : 1637750674\n      },\n      \"repeatInterval\" : \"63ckune60tbyw3fb77cdls895iyh3poy98a25mpyov3pot743dlqj83z6i3lbsx38rl375df4v27585hxi6nazlgmv0ii95jig4xphfwlaygul5xoztowoan81o8jq6azi06zcp65wrc9fzqcnmlbn3kwgsvzin1gys4xsco2k2z4\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1546258885,\n        \"seconds\" : 1022740682,\n        \"nanos\" : 662700747,\n        \"minutes\" : 1380312315\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1599316821,\n        \"seconds\" : 201141575,\n        \"nanos\" : 7577680,\n        \"minutes\" : 1341083936\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"COPY\", \"FIND\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"FAILED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-12-30T10:44:01.802007Z\",\n      \"eventStreamStartTime\" : \"2022-04-06T08:44:01.80204Z\",\n      \"name\" : \"Porter Collier III\"\n    },\n    \"name\" : \"Dr. Quinton Gerhold\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Hoppe\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Mathew Nikolaus\",\n        \"path\" : \"ooei09uw7q1vemds7v6aupialsv9tvi9jiam036gynotfg3cf60h2dh1ni7nh8i1tjjplkezcf6cf46tgqhmpjeirqj05a01pf1k3j03yj07c5w45u0cfhsu0qefxi4z40jqelqfs9xzj57nmeu3k0rnrs0810zs5cmg2mrnx3njge6js\",\n        \"endpoint\" : \"28c0erjy1chj3va8xjfifxw46tfoc7pix9pe\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"73ylrv1fy4f13noiwjf0fn9fbzps0j1apo42zsfxc5jw3iccsdw84l8s2kcs6dbaildpv7c2y2ud8n1a51qntaxrpf1wbrcssxhxow5kucexz7r6pm29vbv0ic9oo2veespraqq62y24fq9jukjkdw3wzsb6ty2zkucf87b8gdbxhl\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"wz1mnj9rc360c3g5yl7xlx2dpqmz9ap82s7m6tzenyzat8\",\n        \"path\" : \"kw0pn6w18p76drzjkxtu0v53wj0izvw863hi54h9wktemagcl9a5ux9lcy4rjakby5z87n134bzcbc46v2z71iidqm9knoegylsnkjct9lwc5vp06vcvxawqlzj4s95r58fytoem1r5u\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"tsa6\"\n        },\n        \"storageAccount\" : \"gbjxganh58qgloqdq9smh33ex0rzykxrk2bviuffnnzt1ipgouh5e3g4ldehr617j8ljf64e27rwj4ap0z9q3sc5s53m0abq9q8fiakihvhl00fzuut5k7etta4zylxhqfqvmx1rln2rogacxt1v9wqos6pol\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"pc1z9zdlptl27j8enadepqo5u6n7n5bfa79k1vsxt19qn9fzn6pnvm9pjrqrk3y5qdia7vsmlpsnbg3i9k8e2\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Leo Fay\",\n        \"path\" : \"sjgsejqigssymm9ydjlri27t6vipjonuzb145dsimw4eqw6v1lx6pk374fv70wv3nma0ix0aug7g502dfildhmz180gaqxbm909aaigl9b70o73zmpjj5o9izjs\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"7y70\",\n          \"secretAccessKey\" : \"lco8epgfy15mtvtuxqaat85a1ln9l7v4jc0uv2honscmsp9dky2khqcaqp8uh7jdp6vyby079uwpao4i1nbed5o2if8vuppc76n34ha1bslafmq7kkqo5pwew22lhd9osufuws6\"\n        },\n        \"roleArn\" : \"cazy52bl13cn1r39nlzqwzbrb4zdwkurfem4hsgnovm68d8tb4zbmwaz\"\n      },\n      \"sourceAgentPoolName\" : \"Wiza\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Freda Altenwerth\",\n        \"path\" : \"k6my73k936mlhv00xtw0l72jsoth15uvrzl9pmdrnw56srlpv7ifko9175sld5vzc3cqadhaixxxhl65sxuvj3vm3ntmltj7v191gpkug255ygty94aj2dm287s0j5xfbll7tukwodkj2u3qqun72mmx9zt8j\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Jackie Gutkowski\",\n        \"path\" : \"ehruihbl2p62gey28h8vi7o62bmv2kvyrn1m4gw4lmme02e0a86g8gquc4tkorj\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"ky4g6e3jcy54vw2t\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2023-01-19T11:53:01.802801Z\",\n        \"includePrefixes\" : [ \"7aft32x6h5cmh6o0voyui4ikms27xadjyc7modzfa5wz8vovd5oj2qxg4bf1uvh1v7lo0v1zlsvq7kd92x68gwaoint6dxwf9l700vvxjew37tvl2xfov7608sv9n1mnpp78falsz3bz79mk5yfm0zf\", \"112vgoejbsf8arlfcmaxqvc8v8oj8lj5rd5utc7686w7r8fez581cnq8ycv2ijpntcdwbxufqs4u6igfx97i4xbrkp9mzmhpwmvlq7y6ldjxfa839l94m7op6vl\" ],\n        \"lastModifiedBefore\" : \"czzm3o37dyapiij1aet0xe8c3ms60feb2oe87ojhfj7v7l\",\n        \"lastModifiedSince\" : \"ivdmmxuefrg64j8010ovekcyq0r6177cji96wt7el3\",\n        \"excludePrefixes\" : [ \"898l5sch1wnnp7fk54vybhmf2wbq57ndkazqrahomhq15xm1600yk4kjarms1qt4vkiq38cmffqk04ougx670it9l2o0fiox6i8d9fxk\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2023-01-29T09:32:01.802891Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Lanny Paucek\",\n        \"path\" : \"iick269rirjpoqo1oievcdn8k2l81mgt335j68ojhmelruh68nyke3ic96l6sd730i86s1gtmw8i\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/030540\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"vv0yjnvr4xvsfrfr4a7co5dbz3d6ltqw9gck8v2yd2cp5zjxegan9aa01du3cmwrky3qzgpbj26jd4grb37l5eke5ge7ytxhj2mkuooyv51mgr6gyma0lx6gu8h61dtbrc5ei64x1ihy0wq5gkmez2xbisu18vscgwkkw7sq4bxgea6qce42ttnjheq2v\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"DIFFERENT\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"ccrc4w5weit7efu1kelp4juh11030t25sg5aaia2fxoh\",\n      \"payloadFormat\" : \"NONE\"\n    },\n    \"projectId\" : \"58oe\",\n    \"latestOperationName\" : \"Migdalia Jast\",\n    \"status\" : \"ENABLED\"\n  }, {\n    \"creationTime\" : \"2022-04-21T09:43:01.803382Z\",\n    \"lastModificationTime\" : \"2022-05-16T11:45:01.803412Z\",\n    \"description\" : \"In quibusdam molestiae officiis. Et maxime perspiciatis ea numquam assumenda. Odio error sed voluptatem eveniet. Adipisci cupiditate placeat possimus. Amet ut distinctio saepe.\",\n    \"deletionTime\" : \"2023-02-14T07:57:01.803508Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1228309935,\n        \"year\" : 1564519021,\n        \"day\" : 402586799\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 630643791,\n        \"year\" : 1198517480,\n        \"day\" : 2109682901\n      },\n      \"repeatInterval\" : \"f7ypjbs0j03a3gcym1xdn5wfd7htwck58gh7yoks199tei4dcqn4yh4ppnucdo55cv24a8umbwekhtbgijwxm4ckxbglbbrjq3cd65t6syhws5gpw08ra8gfzv\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1200725497,\n        \"seconds\" : 2122692237,\n        \"nanos\" : 646508209,\n        \"minutes\" : 931168902\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1207614140,\n        \"seconds\" : 323788128,\n        \"nanos\" : 1881832935,\n        \"minutes\" : 201361399\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"FAILED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"SUCCEEDED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-01-04T11:43:01.803657Z\",\n      \"eventStreamStartTime\" : \"2023-03-03T08:11:01.803689Z\",\n      \"name\" : \"Ervin Towne\"\n    },\n    \"name\" : \"Pedro Pacocha V\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Welch\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Kerry Luettgen\",\n        \"path\" : \"8116tkdxss3kik7t8ik2wc8k4toel59xy9tt8hm2ew6qkyd28av5t7egexowvdd2hqlwgnlu3ih0yetk755s8urdqenv4mb0as9l\",\n        \"endpoint\" : \"y8o7k8eft5jcr304tfq36vn659emmdg1nzwk5hj6j\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"4zuna2692mv3jv6gu2lqpgku8h4hv28v6epypv3o\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"bzzp7mzofirgjr646e\",\n        \"path\" : \"33vlt9xezj1utaylrmc64de16wrkgair47huupr3jfh9guqpxes75pv90z60vap0h00brzrig5jlfjxghsrmb6f1cl54dr8b6119l\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"l3wylujko53px\"\n        },\n        \"storageAccount\" : \"6o1bh94fp6o7exzfgcg53t6f4l4xa0r6emrpf4zp1emch6pp233pzvondri99oamvz7r96xznrcjke947rm6w6y12n9z5ewup32qvwsakr7arfrxr4zef74yn8fd4vch7yh089kma3tjvhgnt5sfjtdyjgr6qi8w3v3yw1nyy7sp72kvr8b350x3s1q\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"gdo9wuttxl8kz2q5wrxwoybl8gs8219ax2v7ixthfpwa4olz4287hd87o7qr79szx53huec28k58yf06gya4kpi7sovxkz8272fumyfy9vwbv9\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Patience Kozey V\",\n        \"path\" : \"am11pn8id6\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"7fqf\",\n          \"secretAccessKey\" : \"14q04lejlo2oo7c6yz8u3ts94v7ahoq65n7ut1uaut55isewj6xsgnd515tsyjkmnbo5fq183oicfj6288oyd8kh8yiuzzmftcjqv4cs449zmsq4vxf3pp0q4n469neqx\"\n        },\n        \"roleArn\" : \"maabmusxri0qynm7ecjr716ngif9wxgqfhuy07mef3xsupjrxz3s0csnemkkdniq8d3i11esu7o80tmckyyymhu8xj9319kxnjx9efqu7mgr3a0idcvrz5r4bspbjje0eb3p6dk13zq9qdv\"\n      },\n      \"sourceAgentPoolName\" : \"Hickle\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Mr. Yuki Schroeder\",\n        \"path\" : \"syj636f66h85wzk20kmhh62vkidvoo90xf1vmy9poyl3cmwm84gygsla42vdfckwa2bohe0hriml58r8cxfg8myc8fzh3ns0sd093lhq1q3t6g5r273sl6o04aatewckryse9n4fgtgu8bd8z5gr0rl7sffs3v9f36obukkout5ju3sivoufwh18w2xxjwzps96wygem\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Adina Mueller\",\n        \"path\" : \"r8so4ph3xn8j07c27k1rk66z51piwqdoo4jv7tnx4ge4xjhi6x95bdpr53za55vvirer5k1tiod7evgwrjbwhqh6dzjk3b55tdk7uv6kphwabn2c0amtzgjs0ltlgrkj1y9z7l4hm9radv7lcqu4rfakcly60l3cla9az6cqpxm4786k7rgilgk2bq\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"d8x8h392zmucus8xfyqvl7tlz3e9snsue85zne0h1vtgc9aeho90s1j53gf93i1z7w33vkqw0qqtcqbcuok8p06sfmqtmr0n56n9gybn4r2xzf4f25ukmapoagxmpu42sui4mfy\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-04-03T11:16:01.804455Z\",\n        \"includePrefixes\" : [ \"ypfmxayc9z3j38\", \"6fxnbk2eaigz897wrhqvgcx85yec1scirfkkw7x7dj3kaz1b2c1inmk8p4bontko9z3jykebjqz1dsdysn1q8fks526y836lx9950f1t3kjd5jd1ixazskz6a4w6j1g7uw75a7mrh8opqmfwbiawxxvhzj1ne5k4\", \"k3yzflvsbe76yw68798sw07sktcjurozvu23g48t8de9muly2mznut8v76wae8tziu9mc31jrya2qb72ja4pt1udqsg9na64yntavxtur1vztuto6h0wlksucdwa2ge4y5qqsvreryyu80ofr\", \"e4cngiwj83orvr6aocskbr4gs1mn0wkacxtwflzwqleuhylchhjj0jgoh17e00gu867bsdrcjoujd3ib57tuynilurna2wox91xmzqxbe2vm8ztaghtv7nossfrd45\", \"vtjyrl1cp4h1qlehbfutpa4y6466kfim1fzbniv4qs3mc1ffpe5ycrw7moefi3fahap9srq8hx18f3l\", \"v7yege1mc0x15hknbze8q18jel83h7d21twn0vti0ifrhyn3rqshadd19fc4idafb60tuvcjrpa7sa67e2rojdjrwg1zbgtikaeqdcywgpfn59p600y5ayxu4js6eddu5fvrns7uo\" ],\n        \"lastModifiedBefore\" : \"97bz0z1z357fo56o6904yghmnaw9m1wfik9dbnzeu2ip17jljbk165kp3cdsk29bptzac9zq2hjfww91gkbvtmh764dhtdty5bqlenjb1580pqpi0g35cp5oxktonylmq19g6zghie7993r6bxq0egkook8sy06rbzp0k75wk53mvc6z1h\",\n        \"lastModifiedSince\" : \"ebrq0lg637n4edh8ur63p8k3fs7a9upov7awldgufg2jfuj2c4q71sl7ambjzrqaclxe\",\n        \"excludePrefixes\" : [ \"d3qfv5bqmslur8r36eapcddefex\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-06-30T11:48:01.804575Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Bryce Shanahan\",\n        \"path\" : \"4xcsoo7zlbbf93cw746zsn6pw90f3osfnw2lj3cfq7mv0x1sa8t0ubm0dculwi4\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/161966\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"jkb6zfop1\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_PRESERVE\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\" ],\n      \"pubsubTopic\" : \"kxirygrybhscuu5umuuqyzyn8mqrr3ed36b841tt4815ejkj2cmhltpdzpjddvbwuugr2d3cevutzbv1gokpgreuwmt7zweu16co9v5v8fgbuz7458v8s1yl19q68mcjgtny\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"5eh1\",\n    \"latestOperationName\" : \"Phillis Hermiston\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2022-05-30T08:47:01.805104Z\",\n    \"lastModificationTime\" : \"2022-07-24T09:16:01.805136Z\",\n    \"description\" : \"Iure quia aut. Deleniti nemo et assumenda autem. Accusamus possimus est saepe voluptas velit ut magnam. Ab molestiae fugit.\",\n    \"deletionTime\" : \"2022-08-13T11:01:01.80523Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 2054444677,\n        \"year\" : 492004371,\n        \"day\" : 1236164917\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1917603909,\n        \"year\" : 1370441001,\n        \"day\" : 457695647\n      },\n      \"repeatInterval\" : \"f11m7gz47s5aseh5cgdryu21tueledrwsug290rtrg1pstftk7232cx6ua6t2eztnqswv9v4tgiaeut4b9orok6rj4pdevsq8t7iuy983u1mdrbxbs5dk36f2twxlf8kqxeqp35ibghrpmwg2lk7zkcfp99djusf7saic55pffliufen98hfc76ragu550ztqfqgo7i\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1061257534,\n        \"seconds\" : 871175275,\n        \"nanos\" : 724954567,\n        \"minutes\" : 734296223\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1420795809,\n        \"seconds\" : 985057730,\n        \"nanos\" : 1132425219,\n        \"minutes\" : 1751488931\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-07-06T08:33:01.805424Z\",\n      \"eventStreamStartTime\" : \"2022-07-01T10:26:01.805456Z\",\n      \"name\" : \"Misti Rogahn\"\n    },\n    \"name\" : \"Eric Gaylord III\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Sanford\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"George Ledner\",\n        \"path\" : \"q5vo1ifagwowvoq8wu731fq4p42voac6au47aps\",\n        \"endpoint\" : \"04eup5j7cd62m2ziexm969i4dr9jzzyvcpqapp3144j1bnhf\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"r8vy6k1syzx8z7vg9xeux1mleapzakynsfcjikhf7s6jrjwkgr1ep6tjmk9xunl9xl6kuojcy61lrab0kr0dyov\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"0djlsk22nnok0z0xpi0vgtgqklmvvx7cqu1hd24sp86pcsvcxv6vxto52zbp6xu90ooqbaud0bjhzsjs\",\n        \"path\" : \"idntbhxwzfxnuw9nv2z93uznzwrswoeyur8pahixi9lt3zu6pkiu4dzmebv02bzbjbdx1bh7evqv16hvekliyh2oglxz94t8dr19gytxw1zj7ufh2gys56gjv4hxzz883to2pz38kbz0a5r44mozutzqxtcxzlzc32y22crna4sadlj52zv94c57g4\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"gvs84pd9d2ngjv4fa6390c1a7gozdyp2sa0nblyrm1rqueecuuitlavh60pm50dp9fn1ny8wtj2opk9y45ddz5it14wkbv9n15cqbuj58c96ytqcvcs3hw5vma7k63gzx5mmwdu5c3upgqdb96wm7my\"\n        },\n        \"storageAccount\" : \"2d71e2h3jmw50r25xow5s2zp1878dme\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"1kdpcs7ib1tfustquapzrdvzo7m1o2v95oyjh31wtcg33e3n474lazy285qr0n2ial4xfa8dhbjone3kxjlwotumkgh14mvb85dj2e7cn0bvs7sk8n8my4pm4on9z6or622t3az2doniftq46z9eyui7r94h3s00lazccairyvtf4p9nvu7c5ylkyv7vrmgvwf\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Darin Kuvalis II\",\n        \"path\" : \"4nmqumz\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"73kj\",\n          \"secretAccessKey\" : \"ihd4k2pgd3cxi8sw90dt834q4xu43e8ia80u5rhms7l8vlzz0o5i93df24k\"\n        },\n        \"roleArn\" : \"vq504m2tnszf9zij4xkxwfdkjmltgxo4pv0daxxmih2y5i2jbwzlhtw76pn3lf\"\n      },\n      \"sourceAgentPoolName\" : \"Stamm\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Domenic Borer\",\n        \"path\" : \"3iyhf09mlnlm4v29szba070ii558cza3yyve5gs47wf347uk96tt3z8gcuqgzkmtipjpxajux9wgnurn85jyyg3bd7bjbf5ilhk4gyinl0olqwuvhskgatof016gpyh9h3jmi5bgim\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Shayne Fadel\",\n        \"path\" : \"5anqirx4z3xfxhsajtmk0ob7hn0wsrmdxtrvb91fgx85zschnwouxt0wnodibontz5ggiz3co1ksccbnfq12v5wuy17ek\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"p5as30z10y56i0ofz9li885vqwj2iac98mka33jir7ljzu8gb7suvyekiiit9oa\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-05-27T10:23:01.806246Z\",\n        \"includePrefixes\" : [ \"ifv6rxjuxlxq128icb2ro6wg945ke3729lbtsibjtpxxhua41g8pp62oanrvsi6s1i5ti2rfvdwxhxtitp67cz90fcgjwzfai0bu3pv4gwywq4pi0ufpspnf41i\", \"du70lf54ruidmjvjbdd8mytydydu9ohwonwpwwmn3eznw6bf29u3htwb1vx8zkfxzh4lc6g8w04ukwwvwccnnztd1g8auns1nqhf9h9n71uea6ryf70u4nxoo226sa5p0l1os78a31drmyblm6dz4dajmxjhb\", \"29qw79952k24bp9cpi48rdgarwibquhazg9n1sn9b33cfv0vj62ikeuf2yno64gyzpspenlgl2enryc4qdnkrcez3pkik1nlujr4w6tkuvu9k3ryfredwl24z5pdpiyb4rzqpdex8q4emgn6oqcvb\", \"htjgc8xq9m7yh353ulkp6x2aim1mzfjv8omom5xupzkalhwqilnu4dbrqjdm2k68a46ruoptq2n076oheudreweskgx8st8uudjzb0h2znhicx07ojqj3urmg952jn8auup19a8qjdp\", \"cofucpx3prwmr3il1twenhkm3nh6yhmb1q3mvj4shan0d30huxts8l078rx96mo2ad1ej3gzbz88hj\", \"gdayhfsv96qbf23am7ork94f932glt5fu23i5ohgif3izp1j7ctylbk8tq9txttcg05vk\" ],\n        \"lastModifiedBefore\" : \"58s73o7da4ovqv0pde96fb09hc4692vbytz9pezqcon06y33d1stoimnkjy5e617e0rrpfem9sti9oqy1lm6z6w79fb3j42ygdjcl7k3u6nxurlbip6hlbntj1o0godg8xpxmiinekgg018kbi1t2d8eiwl3h12ernyx00fguh245fkywqbaynhcns5sitduw\",\n        \"lastModifiedSince\" : \"p7aanar134q2rs3bahuawxa9iq3ssxualh7hjkfw8p08l2y0p2b514jpoufsucohbldjvdyb0abf\",\n        \"excludePrefixes\" : [ \"k0df2ve7e3bh\", \"kmd1httwaf61oao1nyfbqa38shmaoaaq69qtfhq0nmf0mcwtwuwsm2h4bqjdncabknwe2xr4lh85zid4rnhuijem89g4rc9wpgdc8w8uvliznxog3uqsy9dccmirc7g1h5vqn329lp43mt7ztp6j6ua9\", \"p4a5nrzidddhlg06yk4lc3i3wrihfiiv07q5qkxxg3taqjoyx01guqecjog8hdxns0vkym1ehhff7nf8m824axb96fewckiw8hlf79j4nybgr6h0y5btw63l841zu7jd8otoxez3i36553ff0vvrqrsttu5b4vp6\", \"e9922potyqke2nspwlz32033nn34io8jukob40n094zcnd8\", \"qw06vypf6f53tjbinkrp4mfe8ri01gus805se7gm4ynch6mwopujgmdh1my0ad0sig2f1vhh6njgx9jbynzh3pxpx6zlalxgv780vgq44bdfqub8m727qxwonjaqxwza3\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-05-31T10:25:01.806378Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Breana Krajcik\",\n        \"path\" : \"08f2y3f91fbeki5hl7i3hj8yqqjt7fl4hfgzlctrmf2514b0om6bx6vwga8kg3fm60hrn2102kqd2ct3ix5ov81mais57s1ee6926qf13gawxbypn7wqifwy4bevymtt2xxzk834zznqw1588l2o0l2ej4zan1i5se1rmr1zmnlkkpsfsxt64zdo\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/909024\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"2e9zimykzsq1yksbii6acxhd4z2ww82lprjjpajli57cmfkhspeav8dvv6p1gkvnjzuxoh4em3kh7ui4gab21ozg1vujsmiwa6b0wicbb5q1u\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_STANDARD\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_PRESERVE\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"DIFFERENT\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"1009pgszpc68jpgorkfwndm09cz8uufef11a5142k2kwtdnaen8lahpihjd7nxiucjlzh4l86v2zjeakilaozijey256yh00jqt63nh2zslj9nrjd51rcke7d0rs7nlkph1pstxbko80yghaekqkenct56oq644fppki435fg1wwj10h22ltw381acbla3ngvmfzv3\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"42c2\",\n    \"latestOperationName\" : \"Eleanor Gislason\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2022-11-15T10:05:01.806877Z\",\n    \"lastModificationTime\" : \"2022-09-06T10:48:01.806906Z\",\n    \"description\" : \"Velit dolorem quasi non aut dolores deleniti. Iusto consequatur vel qui officia voluptas at asperiores. Quasi laborum eos quibusdam nesciunt aspernatur nihil. Iusto nobis temporibus et.\",\n    \"deletionTime\" : \"2022-04-18T09:26:01.807011Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1213887451,\n        \"year\" : 573861530,\n        \"day\" : 1247652281\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 664783272,\n        \"year\" : 39255140,\n        \"day\" : 1610040723\n      },\n      \"repeatInterval\" : \"2ar1hwe2tyuel77m3b4j9qne0sot6evot51k3fub5nk5027jessat0zbcmdr7vaani2kjdncn2n5qqr3u9j\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1662454354,\n        \"seconds\" : 859523753,\n        \"nanos\" : 1568553703,\n        \"minutes\" : 824588507\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 151509067,\n        \"seconds\" : 264103963,\n        \"nanos\" : 251350344,\n        \"minutes\" : 1701794417\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"DELETE\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-12-31T09:39:01.807175Z\",\n      \"eventStreamStartTime\" : \"2022-11-07T08:38:01.807205Z\",\n      \"name\" : \"Delorse Swaniawski\"\n    },\n    \"name\" : \"Shirleen Glover\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Quitzon\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Harley Collier\",\n        \"path\" : \"g9zj1hlxn5icmdpjkamvoq8mcjg9zcx16l0pa4sszy47dd6fspgk22dpsnln55mqhvg3mi4stiyuboog2o3ngqgukgwk0b6sj\",\n        \"endpoint\" : \"shutax8syw69azbp78cwmojd3b58j42tsf2on8b1vkzcpa8xi\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n        },\n        \"region\" : \"tpru1bj9bkg6ka23qo96c64suyngpaq9bmlug50lkkoh071qdhr90rsss807vcs23rdh2yorgdn2pzjm0j9we4sn4txof3v7i4m670extbory3w4zsr0otpdi90l58f4wddp466jkq5m2eg4kql077y5pgrkaacg4aqufd5uvmwdj8498\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"aqtlc4rhehpm3wdw9iwfbimktpjai08zdxg7vz70hai4wqd251tj2z9d360uqkubk1h107el1j1vjdi5z5yxqe22oqm9ybb3t770ea6i91b4xd0aybnu53pto3tkvov7fxrj3lit13kq79vqah3t0t7k23dv5kinrqxrpj28x6vifa7nsi733pqe\",\n        \"path\" : \"dpoei7zh7rgeeka3dlkskxr73gz1pyr9jhl4myqsz5z5iggi37v49hlfoylhdti3uxec8110ik0wkbo8oibxl7q9hvi4exg2pxnvgq4qrlab8y6rz5artxdezkysbk6cayx0h\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"romrsp1tzvwmusobrodzl59p694533zvbegbo68ahcwcd9anazgoctnqo1hwyr5kaydbkz6b81ko1txvq9zg1pu0orovbfpcww4j4xbfyhz6gunergnz8r6zeiox\"\n        },\n        \"storageAccount\" : \"ibfvy1z8ocs8kloufm\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"cgvhzk1aanlj4t6oqrx93uy0ppzhjkldk5m78h78kwprwm3syhohi00euzqf7egexwvn1w4kljc411xbpzjp2mrwbpie2dd4vp1c9uuxfp2lbdf93w59sl0240qpf5ib6x4zh3v1cvqntkn5oqrjzcj01t3of8hmfyd2hmpevn40smophsc9ok8irqwfa3\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Lloyd Orn\",\n        \"path\" : \"vlr5ck367eikpbwtyneju0la4xibxlf6ql4wqsr6udduqwnn9yism3ja362364mc7nr\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"22z8\",\n          \"secretAccessKey\" : \"hdvq2ae7mh5zkuo1veytmz7xcm88cx1fb3gdjdswkrszfg3mycurmcdscv35vz4ooqdy8xq578l1aw49611xgvxwyt6b4hr8s32d41mjic4vytqd7beac8xcmjxhcy6hc25mt5\"\n        },\n        \"roleArn\" : \"j6p2jpcknuikz74x36x2k9ddgc810w01t279h6vqsd3w3urb0wxc0egh7iekqcdqbb2nlgi6xy22mjjh7lcmof8er3g7g05gv4aeq39lr9k84y4qihi43ma3ycmcqcbxy7f8ckbq81784wh2iz3eq1yhuosp0op2omdj8m5mwrl8m4jyr0voc4g4lt64ch\"\n      },\n      \"sourceAgentPoolName\" : \"Murazik\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Abram Daniel Jr.\",\n        \"path\" : \"8hnofx84ish3dd7lfwlq6gkn1arw7qwp4y7wkpx1c4xyysf4dlqi1ggp1d5h2fosxsuh21dp0fyqk5gfae88ni2j15hhloshrpl65tirdxkrh2ne9j1ps\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Tambra Glover\",\n        \"path\" : \"o6awoyuhmxbuk31v0uvlczm203s8l7g18oqelhcnx2uvrzzteec6pmz12l6dhp1vpz363448ax12g3cvn96dyqn6fmuvldsfy7vfjratt7i37ghifbc96otscw\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"3ci1xztfevvsejirrdmr9ahwgywvvpcinxyd9k7qh306o5qkp11mszvkrxg57nhgb2mv\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-04-05T08:02:01.807988Z\",\n        \"includePrefixes\" : [ \"enzkqqmrirs67x65xclw7pp95g63oyew8ef4gm878ib07p75d14wz63jnnkw3d0zxc9y11k\", \"tkzpti91a8lhmr0nhxpw043eooajeigwsex1exiheg4j1c9ngf5yopigy0gw2ix3bg6zh5lojlr48cv21b4pw9x7cbh6l22w7r6bzdcoezdzr19\", \"0xbiaahqaab44zy3z4jdubb8pfzxl2dtmqufne86pcgo99s1glz3e5pubjqjud82ozoyz773ci2esy8jc2ggcbmykhn73d9v5ji35e6vo\", \"6w6it5c8jk1z5g484spy2vg6p6yaagbafxtdm8436i3hjos7uksy70qi4p6hrfuajyhm00819nib3u4ddne2np9agk2mc\" ],\n        \"lastModifiedBefore\" : \"zol260ri2qyllsah3442x1cctxc827ksd5mq7yomvf6pof6b8ma45ejbph9j54cgqt667d3p3f9qk4epa0c82zkvrn7yaehimjkjykx04n7wo0h8\",\n        \"lastModifiedSince\" : \"h594cf7wizo5ccyx5kbvcq5wknpa1xjtuvlrdj17r5hb68e613tdb2n97g77c1alxtmt0cw0oh5re2cy5yyred6739hliejb3tck0qm418ajc66aa3f1s7oqp93jx63usl4u5triqjquxwwisb67plf\",\n        \"excludePrefixes\" : [ \"gmp4wihg5mdjn8gl0u44jdtxb2ndq8808xup9xl8qhuuul10g71yp52o32m6fu95ldnyf58vm4dmajq1zakcoicqw9t70mn3codty52jh7otfj65zrdpj9qg97e842u2aruthl\", \"w3j2w14qlm9qjfo5f2jsx4h7ofyzrfmgl3mf1bshoft9pns0hdxcfbfyiufctej74xsm725eoyk9lduunnne1j8x7ubwk\", \"npo7kj8kpghwmvllnz6fjun2kfwum8eoj7tftr418wzcotln\", \"94m029cspb6oms9zqy\", \"unxxdqyrk2l9c65lyji6plj9cpdtsikwkq75ac9czsn\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-12-15T10:43:01.808116Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Marty Collier\",\n        \"path\" : \"ihj3nkcpdjb29jy67blffrmi7r9ek24kt9swl2v0wytvu312578vp3iqi4q9405jslj9jfwhkfe1f0wxltsh8u3pbhlu49gaifxll7m\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/753589\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"zpx313yaas90880jzekxcmmkv8ix1jv8t3horwn7ndl9hevr1utaupne0agxqd64rkwae3sb9q2133rzh1g6e1xm8f19vpgzmk3214tg4jnfn6g5r5fj1w1o3ury390dxk13kr651t1ogppcvip\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_NEARLINE\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"NEVER\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"5ofbawm4tjdipp8ii2stokoib1apx2a939fxzpgrqnrtjziwgi6vpep6rgzimh2sr4bdtl5c2u58jjvy28hz8cz2njng50at4njo2ywl5r8yvrs8b2q7hqo0s66so88dmsueo19otp7855gtnf13cr2e2qzpxpeqxb5m5tsr43funtbjjom8psba8dvz9vyuyy\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"svc4\",\n    \"latestOperationName\" : \"Geraldo Ratke\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46944508-1330-4c89-80c0-b2a3c2b3bc81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.808878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "87e78bf5-3a60-49b9-a921-6f84f2b1c42e",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/oc1j/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Oralee Koss\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"j8n80td9kb6dljjr9xb1tmt9c6td0z6bxfv3114htf8yqoxwg9lacjc3ggjquzjf2xqgwl\"\n  },\n  \"name\" : \"Laurence Dare\",\n  \"state\" : \"CREATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87e78bf5-3a60-49b9-a921-6f84f2b1c42e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.799641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "f88915f4-f510-41a0-adf4-e299aefa2481",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/7452/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"5333ahwte7r7h5wylu86ucasce9vkcfapjec1i33bembjd2y14itzj7agfla6sluj5dm0kkmvvw5jlu8izpr364z6h2wt4w7k\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Dean King\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"69rursmksz1ajm2gqbhszozdmzv3ngqv6fckcs3snrr59mb3af8yc9zls\"\n    },\n    \"name\" : \"Sergio Connelly\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"displayName\" : \"Daren Wiegand Jr.\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"2fia\"\n    },\n    \"name\" : \"Mattie Gleason II\",\n    \"state\" : \"CREATED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f88915f4-f510-41a0-adf4-e299aefa2481",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.799376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "3ab483db-9cff-4484-9637-2c25f64fbdf6",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/lsr6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"n0wfh582gx111ealyu623i\",\n  \"subjectId\" : \"9ok1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ab483db-9cff-4484-9637-2c25f64fbdf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:01.798873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  } ]
}