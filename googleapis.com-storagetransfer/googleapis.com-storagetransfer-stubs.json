{
  "mappings" : [ {
    "id" : "65b5b355-451b-4c78-aee8-8aeeccfe3c60",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Buddy+Kreiger:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65b5b355-451b-4c78-aee8-8aeeccfe3c60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.166398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6cda9950-1302-44af-a183-267de7f77339",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Mrs.+Hung+Graham:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cda9950-1302-44af-a183-267de7f77339",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.166315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "676c4c8b-af6e-443e-a8ce-11a40f8fb22d",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Reinaldo+Kuvalis:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "676c4c8b-af6e-443e-a8ce-11a40f8fb22d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.166228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "4acbc575-23fd-45ad-81cc-5e6bf50b6309",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Lilla+Boyer",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Carlie Kirlin\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"4pz5s6hrn8n6vf6wsm27swmy1ubfnyezf6oiwkppu6\"\n  },\n  \"name\" : \"Hosea Turner DDS\",\n  \"state\" : \"DELETING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4acbc575-23fd-45ad-81cc-5e6bf50b6309",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.166133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f28cedde-83ef-4670-89b1-3bc289a43350",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Duncan+Berge",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "hpcpwia0rnz6ewtog3q5vhamhtgntigxhi008slo178vuw6xup1pmptan8guk1ryqbttwvloslwwgykonutic8vrym1vxbdztcsrcodcjoy7ad0wtldp8i3z1fqzp9n"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Willow Reilly\",\n    \"error\" : {\n      \"code\" : 1375286864,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Deleniti minima rerum. Odit placeat at cumque dolores quam totam nisi. Alias laborum voluptatem ipsa veniam. Quibusdam ratione dolor officia nobis. Quo ratione nobis.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"m40aoov45ja76yaaz0304xlzlnmts09qhfkca2z6twirgk9ure3n4i8ps6roea5ji8gydv1esb5d7ibxfezlrsqjki2i4tp47mf1ppsyj5dklveys7xmuh7wj3jkmptih1wxrm51itsqwrs1iqfqzqcs7oual66fz6ol1tf880blqe1ac2iw0vc8wyvczb75f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f28cedde-83ef-4670-89b1-3bc289a43350",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.165753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "ea2205f5-6a69-4c65-b0bc-108b1038a467",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Madonna+Grimes",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea2205f5-6a69-4c65-b0bc-108b1038a467",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.165496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "0304f6ac-a5cd-4599-b936-8198daa62b81",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Romaine+Rosenbaum:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Machelle Flatley\",\n  \"error\" : {\n    \"code\" : 483975701,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Minus unde incidunt temporibus autem. Deserunt iusto voluptates consequatur. Et id id doloremque. Recusandae quod est similique placeat.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0304f6ac-a5cd-4599-b936-8198daa62b81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.165411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "694049a9-442f-47cb-a608-05cadfcdf997",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Merry+Koss",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-07-04T14:25:04.162985Z\",\n  \"lastModificationTime\" : \"2023-01-22T12:13:04.163016Z\",\n  \"description\" : \"Non deserunt nostrum recusandae repellendus dignissimos autem hic. Quibusdam corrupti officiis deserunt aut. Quia dolorum et. Voluptatibus eos est ut illo. Sit id fugiat alias praesentium libero nisi \",\n  \"deletionTime\" : \"2022-10-19T13:43:04.163078Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1850324512,\n      \"year\" : 1854721989,\n      \"day\" : 42162770\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 275087690,\n      \"year\" : 1009932629,\n      \"day\" : 1040864533\n    },\n    \"repeatInterval\" : \"xf9r3dtanp65qpbjshnp2k0xyqwsecjtscz1zcrwsm004mzad8x244dcps2t05lrcyaii7408a8gycaom6u8oyqnii9lvxxmvqefrmzrb46dnbv1w8rxk3z6slo0nc5f8zkgfcrk91bbg74xdq7bk9r9kxbty2z8nifg1vp66cqt14jdfuymt94940vhlaxac6cc6\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 436887590,\n      \"seconds\" : 528813426,\n      \"nanos\" : 59893925,\n      \"minutes\" : 658913464\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 637068921,\n      \"seconds\" : 786320334,\n      \"nanos\" : 1465332470,\n      \"minutes\" : 2103321166\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"FIND\", \"DELETE\", \"FIND\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-10-25T12:05:04.163289Z\",\n    \"eventStreamStartTime\" : \"2022-09-26T14:57:04.163325Z\",\n    \"name\" : \"Morgan Mosciski Jr.\"\n  },\n  \"name\" : \"Mr. Zane Schmeler\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Spinka\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Mrs. Del Hills\",\n      \"path\" : \"ezaw956vvgyua9ddige7hha2nltj7fk001dyy9iblr3ldhxlk78wp2p8avneletk1ewufaifb5xi45s6wlksni8f4avfipavlz7ob6\",\n      \"endpoint\" : \"kbjyf7urr65dkbaeg7jdpzox07zbgkkq9bjpr6jsqs9llty6kkebz0qtwat2s1f9jprjjibk0lq0u5uu6or2ixpyg2yvnycrn5e7b4pcos7jw1otgvmxf9v1l6dllomqwlxm6omyr2\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"2p7cngpvp1sew1prbfeftxz4wnn3zqkiq4ibsc772c5jr7bdxteblxu4wr0zy7jb72g\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"mzx1y78g9995e9yt9ad2lsk48p2cgxqb3giy3gzfn9rkis0wlv35xnd15hvelzx1wamxaxqcjx5etx0l47ystc5ewbv4v8n418dhcb3e\",\n      \"path\" : \"qk4nefm6uqzu5rccjc8199m06h0850pz7e39\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"xfugg4vf6rrb2h8h01795bf0yav7fn\"\n      },\n      \"storageAccount\" : \"rzzm8n51qilwcutc7dj4p0n37704i8b25bexfvrw90ocses2ozbl8ss910scar6qjv4gz1j9867ylc6k394hskpn2ga5dtuork4heju6bo5qbo4nujkffunjccahyvfojg6ukf8qa0789m32nmlkurh0xiyxqpz\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"8jki4d68kor5oru57naqcvaii92d8mcj7hbs8cg86waea140bn9a9gj96lq67zhz1goavv9idicv83xvdutqw95y12wp9ixkv3k\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Wallace Bahringer\",\n      \"path\" : \"pglkkcmvu9skcejtsyzw1rh4a6ussj1s6qwa06fmogxfmkvw233vo0qxnwfg3xcrt0qy1nhjd614l360\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"l83c\",\n        \"secretAccessKey\" : \"h2i2dpeqbwdsjh3q6em2gqcaik8hv3pcbuwxj03e4o0qdthy18vnljaokt7b2j152syo149s74whmtchxmje2qrv9318hqczqvzzdc\"\n      },\n      \"roleArn\" : \"2qyca67d11i0mfs9pbpyvt41rrf33clqkiusnsonxs45i\"\n    },\n    \"sourceAgentPoolName\" : \"Herman\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Larita Dare\",\n      \"path\" : \"t469wc7zovcicrko15ho8r3dl38x583s4gc7gn8zaza6mm14e02nctuzuzy6zx344uk9txjclykoe1xxaiv68ti\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"China McDermott\",\n      \"path\" : \"s0np82qfjap1zi9kqwtetwgo811ndcbygv6w8oh25x9pfd3l8oyd9t2ylt9j4fz8c1h8ew6dzwnu9ndci52d5ioj5reqm3holtibwvvklmzcht4zw5s4jccdpbu3w41gp7bdk5bjho5qbkrk7yd3ky567rezu\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"ekveez5sleg7tc84me8zd7bllvud2utmjre6nnkglp9qyz4p3euvz9k7vkptugbt1yhakpuglxcnta0bym7pib30f9hsjsi4a74rijbq7wlxtzfgo9a1igjvrej7\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2023-01-07T12:05:04.164257Z\",\n      \"includePrefixes\" : [ \"610v3h8ucet13pi2qqjo83uaxgpvikwxzrs8t1fs8s6hqqoy7vw93aq82upa6zhwon0mvtyits5gtdwpwj46kv6b4lg2h2uq0xdissm0vje6tlu4rv7yj3gd1x7jrgzorsypds\", \"1b8fhjg7gcooi40vcht9j91ugkgcvf52fvagklhs71f7axzmtidphrt9tr8331y8dn9ks3x3a71ic53tz2g99kj9zpom7ot8dgdpykptdnsgsv7j66udpsaqkworcbz50a6lhhltz9qorjj0a04dpvzn\", \"1kycxrv75\", \"se0a3gnqvsptjj0wh6sxmv\", \"lst4ew25q131l91xrxplsthtkwky6etx77w\" ],\n      \"lastModifiedBefore\" : \"w65zebm91j28p9x1gg62y5i\",\n      \"lastModifiedSince\" : \"9qky9g2pwanjjmgmzv7juguo1uimkl3m6nbugga9py6r9tzyvj8lkxwjip1dmshq2e8\",\n      \"excludePrefixes\" : [ \"fg6l15oamh4rm2st2gsgqoh5es5nwq61d8ohz3q23tpdhpl26tt1iaajylc6w3hqzjqkm7r5h8nqzs2e3nommqo26zhmttwn0pvgnb2hzb1eon2axh5imz2xwz2n3qmittohjaggep1do6e16c86alw5pg1t654y2zalpk4xq39rsm4zwjpaa\", \"162lsgauyom50u5ey4uc5v0ee8dpz2u3urjawl3jjnpn902g99wtgmsv0f1jgxg1t5vgtya1wi6fb6nc1vkl06kv49km5k04yuwrr3dh7r41r6bboousolazshm4xa6khu5g5pmyqkjhwff8jaqmlicn6w770zxwq7mpvyptj2b3vm20zyp01yeykqjafkyd8n3r\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-06-17T12:32:04.164388Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Sam Langworth\",\n      \"path\" : \"1n21bhdryl2o2xd6nr7nt70vtnig16uuouosdi11k4x43or5e9cn587vbogzshh0p1xj5ls20s30enyayheuta0ayj395xxuo0t6ya75a99tx19rk3sewzd6d242i53rvqjpp1kr3ue6iicjui70g5z\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/783227\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"i0bevhyni75fin1testbxl1xzg5tkkvx5b9c2di7sgn9b55d4t6cq51on4cuxq11jetsee5my3yq2895vc9sykq3o7mk\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_SKIP\",\n        \"storageClass\" : \"STORAGE_CLASS_NEARLINE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_SKIP\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"ALWAYS\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"91jzemnqimx7iv8tb3yid0eq4yxn41hmxlai7sfj1n6cph8qctoiybse8sxtnzvwq7k82i0vemrb9weiq8o4bdsvzuk6uke8gb371kwd459fnpei3ylc6da0tdaphlzd649x6fx6vabswz66fsxql4q17mm4clcso8rw72yt1mbqy\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"1390\",\n  \"latestOperationName\" : \"Joan Murphy\",\n  \"status\" : \"ENABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "694049a9-442f-47cb-a608-05cadfcdf997",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.165119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "725f0919-776e-4a58-8e3b-8a2da18bc940",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Ms.+Paris+Padberg",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "01qv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-10-19T12:22:04.160685Z\",\n  \"lastModificationTime\" : \"2022-06-14T13:42:04.160719Z\",\n  \"description\" : \"Facilis vero odit veniam. Exercitationem totam voluptatem sunt est doloremque. Delectus non a culpa eveniet dolor. Rerum excepturi sed et neque accusantium delectus tempore. Ratione consequuntur volup\",\n  \"deletionTime\" : \"2023-03-12T15:00:04.160819Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1800801135,\n      \"year\" : 760515588,\n      \"day\" : 752820594\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 301940956,\n      \"year\" : 752244374,\n      \"day\" : 1560727738\n    },\n    \"repeatInterval\" : \"7uo4frj73vrwbdxlzi5\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1910426425,\n      \"seconds\" : 562391122,\n      \"nanos\" : 546046336,\n      \"minutes\" : 446469300\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1946003616,\n      \"seconds\" : 1147343137,\n      \"nanos\" : 1502337942,\n      \"minutes\" : 781137123\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"FAILED\", \"FAILED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2023-01-31T12:05:04.161049Z\",\n    \"eventStreamStartTime\" : \"2022-12-11T11:58:04.161083Z\",\n    \"name\" : \"Oscar Kirlin\"\n  },\n  \"name\" : \"Alex Boehm DVM\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Feil\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Charissa Gutmann\",\n      \"path\" : \"622igzghnbgfw438yn0pcbl2y0s71thi489fp1zypn3io2lgtgr73znnkj8pedsqkvg87x81kxhrarhxcrfx9r4k3ai2r7vm006iqmaxqacuzj8lkn3oqfh49aqb0meaxzixeuqqvuyze1x3lppjujtfw27cyeqfi\",\n      \"endpoint\" : \"r6uawna5aboi7kfnjtlcc39ywgxcmsxdmc0h4we7litoi1a9m9zhvzi2h17y75vtfanp8ppvqum5nbkiq67pxmze3tof4dzjlkxxl7vczm0khqflh58ki0ilnb5448hti6bb6lb22jg1ljlqcz859bx0vcx54jg7hvee0z\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"jdv7wfinna00n28bmhc20g4hjd5184rlq3dyn32yy4x6k1amkwomjlg6afg2t364cig01x0atocjmwnijmcaqilaihpok7aboklvm2gj04qzcyo06q\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"6syklggbemwvh8hgvm3z8m2tv8c6cwx7cvo4cf39paskcqa1by3iadnq51j4jjhsw206wagsjkm0l8zurmvospdo72b6il3jcnxmdd8bq84ecarldx726f4wxfn12ayexdt78va5zr562eixevznrbna68lgatrjn82tbh77a31pxe6xeg\",\n      \"path\" : \"ebgkovd3xswb4mjyol0r5b00plxzw7m66aa5y1mgc0tmh6kqzy7pssl\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"wkkxxe2vf7m7nt2rru2qjxvfb7dwd4j7l98u7pw7wk03lojr1s9txw2532lg96v649s0pp5pny7q7w\"\n      },\n      \"storageAccount\" : \"auxbeyyymv5vnm1bb2njerg7enycb8cy57s9fydhc258zsj539agt58vw429oltmjspmxnmn6yp5q3td4xfu4lbx4\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"h1wcbvhn3pk23qgkjah0lxerd6kh1s0nyeztapov71c8q9n3qj0mg81\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Reynaldo Langosh\",\n      \"path\" : \"r6ilpq9mwzle2rnnz89470svuvfr8sdyvzxb5fo0vtpn6flqehs2l1hpzix15osdrnh2ehvqianaxbwq7xrrbk79rn8ez6lw6akiu776m4oibsw9xhuzhl01cio22jt30l86vc67fmns0i2dxzwkjczso0smq29eujhfi1uwkgevskpcueip8swlr31yy505r4h87a\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"v7j2\",\n        \"secretAccessKey\" : \"km05cqekv5dnkhxrv0akual4fuqoba0vfyi2nbva6dky4eh47nhrcc4fdkto241a8sr2i69nb6voemveuxu6h133b7yufnvvm08hpad7jns681dbgu1d32ic1iel7a622s1i0902xldfezzomftdvz928ll1xne7niu63p0ot26wufj6jfnph4sd\"\n      },\n      \"roleArn\" : \"29tdw4tqnhrfd9289e3sp1bjrd6dktmhh07w0lgmwdaeodirydl0n3iaruy1w7wr9lk16pug9hpgva6ywdsjeqkgm\"\n    },\n    \"sourceAgentPoolName\" : \"Kunze\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Mauro Berge\",\n      \"path\" : \"r0b8ku6076d1nnb8ybuhaukau22vvl9krf4wsv1zbt76fd9a0rmbwr1009hh2vh9wete1xw\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Ronald Nienow\",\n      \"path\" : \"y8c106di2u9n7l7nxvvi5jvvw6f6xdwgo38m98wdzbmbgaqvdzlri5a7t5pj9vx1zlehs6septnp05wawpkb8x4i9buorlov6cus6dtt4x8ik2zctqs0cwuix9n12ummefi6b5gy5toekt1mkos\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"2ncywwtw640b9b35h93axnwc9qhs051w0vyogt878zm3otm5v1jsf4ld2tskz302sc1qoncv6nfbcgzrpr7fio\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-04-08T13:15:04.161914Z\",\n      \"includePrefixes\" : [ \"78sr705b97ot03cluiw4ttu7l2z81443z6egicqzf24as6mbu4kkl2w0uug0csvsog1p0q6ykafn4b66x4sefdczr4e0jc9nvkiirc7qb451m2nrgz8jvfilhfdmdfqynreey3gi1gecpnx9\", \"ht3mk8ivq8ci0phdk8u28c3wsxl2q85sr3cim7ajo8eyeosrsoq51s9s5e80vjbp2ydduywodnejkwqh0wduqao9vgj12xiccfsx9scwo8tk9h3146kpbne951ac6idsbd8s67xif32e2mupw\", \"8kd6ehfj3v5rlbowslwbuf7u3rs57y1yy3aflvp8239t6f3i9fhjjn4w2glu3ybf6hgz61gcd6p134hfl8u1q80m6qblx1mhff3nynaxvfu1ra6nl9lc97c0r8hv1f1wf8oexh9t0za9j5pjudct4\", \"5nxsbl534wyt2hfejhxw3zpp79b5xwk6h8rkn7o8igxotjf8h411cp8atjkyk7ux1tjed28ux84ewb0h8xyhpxbsi0uah5glpre6j2yrinbb8lkhj04twx85fsmgkvvh64brfr4acm5qjo67z9e4v7kyo84lg\", \"iyc3r9d139a7hwu39incxddzqr7qquiw9vu4fmwslta2kfju0gjycoa392pxdu1it7x0iv06jojl86i48bxxwaunr7u96o8pd23r9rld1wxpgvepdv8yhogf37e5ty\" ],\n      \"lastModifiedBefore\" : \"vp7retfyccsfg17dfrzo0smq7x6p4bgfu3h3i36qvz2mqkqgvsws281ilcicwjiif0fktw6qozlmpzooluf27044m0gqre551zk\",\n      \"lastModifiedSince\" : \"2w8yc21r8bbwqge2mrxmm074a\",\n      \"excludePrefixes\" : [ \"8vx88dzv6g2ememihq0urfcktcx6vqaqm3d9bqv5gto\", \"qhz5avl8ienvd0jh\", \"vyc215s9du5bckao86fwc8xojym47krqolxmmw5p5ach5nonf0p40y42wg22530wmqzvf2v3s8u1env0qpw7ddh0dj\", \"tk2ru57wbqeym3a4ap12650vw0ja3352ig3m0ppuc4h4xkhcw09vjiieqg6jhrj4crf5ssuifagmfdnyoxidjvk04eav40rgcztgpwy4phztg4aconve75bjibc6sf1extin5ne5lpxxgnder7psr6rbhnf0oilw3ceuu4gkjq3qysrfudzo\", \"yiai5ah6mqhix584ebor4rb8f8lcl2ybf4j2g8br4rrzflbmgc3rs9figoc98a9fi2167s29lgnd7m7p54norjqnu8rdy6oujsmhj46603ncrhdh6q22lbfisfwk6qhxpndgfu9oqkd0p7w6jfpbgr7oaihd2q3uta13vk2ivau18m0dfyo5\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-04-02T12:10:04.162066Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Buddy Heaney\",\n      \"path\" : \"iftztc6cib2hc0ibnxjb55e4p1wd5mqyawvv2yra0i51om9hiderm1nw7u9kx2pjd31tvh8o76g9x7\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/788314\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"8uz2twuqmposh6pc8k5qaezv9txpdh6mvolah4g97ep1n65ukzcl4j1jpgv9j2cuhxuxe4ncjsgqnzbxaswher7avqb8msbk3rqr95tn8za019cgojqanyhiv4duak7p856ke6\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_SKIP\",\n        \"storageClass\" : \"STORAGE_CLASS_NEARLINE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"NEVER\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\" ],\n    \"pubsubTopic\" : \"dgwypkhkxsl3srhaxco07hgecvewp78o0go0lw5ejil96qauy\",\n    \"payloadFormat\" : \"NONE\"\n  },\n  \"projectId\" : \"2l7v\",\n  \"latestOperationName\" : \"Sharyn Kuhn DVM\",\n  \"status\" : \"DISABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "725f0919-776e-4a58-8e3b-8a2da18bc940",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.16292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "7d39fd8d-8dd8-4f9d-9050-39912656eb03",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Claris+MacGyver",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "144a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d39fd8d-8dd8-4f9d-9050-39912656eb03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.160623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "866a44fb-aa59-4e89-bbff-dca2c8999778",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-10-17T15:09:04.158045Z\",\n  \"lastModificationTime\" : \"2022-08-30T15:00:04.158078Z\",\n  \"description\" : \"Quo quia ducimus accusantium. Quo magni assumenda et. Cupiditate sit et nostrum et.\",\n  \"deletionTime\" : \"2022-05-16T13:44:04.15814Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1919945211,\n      \"year\" : 2114747411,\n      \"day\" : 1623241928\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 441351473,\n      \"year\" : 972134570,\n      \"day\" : 1917154409\n    },\n    \"repeatInterval\" : \"tsrh7wk9au055ipo6b0jvzh\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 998048000,\n      \"seconds\" : 687532830,\n      \"nanos\" : 169312603,\n      \"minutes\" : 1032479693\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1164413713,\n      \"seconds\" : 1145213661,\n      \"nanos\" : 1612012231,\n      \"minutes\" : 61404602\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"DELETE\", \"DELETE\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-07-18T14:31:04.158487Z\",\n    \"eventStreamStartTime\" : \"2023-01-30T15:22:04.158526Z\",\n    \"name\" : \"Reuben Harber\"\n  },\n  \"name\" : \"Josue Osinski\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Durgan\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Mrs. Shelba Stokes\",\n      \"path\" : \"tarw2hjp79zfyhahyz6bfs4nqg4raacmyh5tfes5z5o2k7dkjuz7rdlgyvo0or4jvd5y48sr3np6jbtahoo02scw492z1u7u8qc5qtj2onpxfio2l1qnv4dkpgmspbdk8busfluwidhx47og2s5ualy8wqrv8304\",\n      \"endpoint\" : \"3oc68spanklmkdaa4xypotpamag31kjvovimi9uoragv707t8afu572dpn2zzz2ygvatkpmiqo6fmzcehsrnveokevp1v3ydamnmc43ddz364p4sihnwy97dki\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n      },\n      \"region\" : \"7o65p9l9\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"msudhcyq1aahicdu8faoqom6o64hlp3w0jtxr9bk\",\n      \"path\" : \"zpzw4wewb0nir2u9y318ioyvsixo14em4od9\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"mwip4yoe9jgqsp0ikokiiz6iq46fnxxt38ipueo80klljmhwctkfx19kgsm5mb1lijio32g3lse6xhivny40xh65ahdrgog13zkqqgbfl3nj2dndzkqaw0ot5odcy4xdaq2l3l2s4igknvi0qdx10yc8xbs9m1l9vjf7r4cy6fpjzvs9pu4sty9ttows\"\n      },\n      \"storageAccount\" : \"gww9a663t1c5hstsjpz11yig7tm6wx5rwc9qz5iwindrvpefrm8w7df7fd5btme89za0xlhqqeo4g8vk75zhqekegk7webgrsywycxbqpujmxjns3x4m0mf459dm9mbtq1927t3j7q8n0072v\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"eoxnd0lpk1cilq8jd7rfhixzeql5jvvlakxo5poxzmmqlgmom1xjj48o8pzq838b1v1smbgpj417f4ct1sj99pf3t0v88wr5gvss503g2wg9jegv4lwkut38sdyd20ap1nqz2n4sysvqqh46th1sf3qnla70077b27oq16bb6iv0\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Freeda Kuhlman\",\n      \"path\" : \"m0fl9a8aitnypc4aebg3z7d2nobduoxbse5d5mbwmkxy89g8p32e40l7zq8d8ix15acgg2it3tmeh2hz37wie611ukezmx5ljfdq9radpmmzax81mjez8cmdgktvyuxolj9rd779w9if2g5d3zl1urz61gekw8k9aoz77l4g438j2u0hqybcxxih0\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"kpgi\",\n        \"secretAccessKey\" : \"g86n478bre0u5pkwsbfqn9qiostfim1koobrwajo8zqoj76xumfw57nykbsru2edps0umgnr0ledgdas3wehjffpc2laorn7vl1oxpczepnh7bc1rhncgrqr9s6mqqjpiaz01l\"\n      },\n      \"roleArn\" : \"qsdk0c8lmuqxij8ron4o0p7jtqslb9agf4w016ar31h2hqg5x42qn5fgr9efw128tv5qjyrfq4721kordhfuu1kwk1lv9e24ohc4by54yqkavka2jgoibcxvof5k12w0q5cw2opz74v3bish3zhf2l6an6\"\n    },\n    \"sourceAgentPoolName\" : \"Kozey\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Exie Wolf\",\n      \"path\" : \"r0rf7ksnggyon8\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Mr. Ruthe Leffler\",\n      \"path\" : \"4fqiv37vfkoy5j17unfe6v676sgm9serxlrxm5tjlghg7c7wthrooi21aqc27go5zb2lhuttxlowyk4g2k5989no5onmp2xk4l5wgdzi4c98jgjg1yulvhudv8fxmxryt7ttrbeqdzg79wpo96a3ge9yfkngqf6x6eipboe1m4mvkfecg8\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"y9669j86ttzul0ed2wrzzlnfhzmj9ifx\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-07-08T14:51:04.159384Z\",\n      \"includePrefixes\" : [ \"j1yri87yqds7lvzfo31z0kjrz8y397x55b7estdvcadq92h7hfz16ku1z979sahyqevc3tx3yz23gql6vsurktdfd7q7g7v8j5brgc45to9katyhc\", \"33ndklgwmezd5z8n5oa4hqg3hje\", \"avvg70cwrla03w1wjnvhn8jukshw8aj0yzpctkppw8xxob71z341k7ujdyfuk3a9r3dkqf6bix4a1a1156t64oagc4rmz2glelwf4mqf8k2vvqsogwq41qj4yxdh2gsbect6io19rd4cr2qlccxjwhecfbg6nkv9xn\", \"pni1zs9vqfzcip00h2n1aa2cbofu6webz6erhm8zogw3aifamwai0gge0uva7k13k07o5q3lpd2eet80w3gw8u997brp7wxnkxnclf7dieo5ff70e3scxohjwuqilsn5vdr0sefmjw813n3ga551odzlevgt1mu301zsnz\", \"q8cvc8r52rwqtcefe2kcaw30kfs0d3a18mnd5dpdsx5mpqgsucn0h7pn2t3y5sbtz1a4nnxwhxzxtzuc1u31eag35wlvotafzax7os3qrcmf7b7tjbdix560\" ],\n      \"lastModifiedBefore\" : \"02wu105yw8gu4eskywtofd3lgc2cnorlj47m3grtcipj24fmtjdbx8g838z5f1afo9377jh1wgqwh919helpuk794\",\n      \"lastModifiedSince\" : \"nxeht7b29rtf1bfix6tcdeghumxw563ohvvhc3z2irrrqv0u\",\n      \"excludePrefixes\" : [ \"wobbl6w13pohslwxho128dqh72301jb4gracpvc9dinek7zws31nn6unihyp8i1mfrwa22pfqei5q09ijh23enh9jwuyzif5gptxfr7ao5hmfwle03kx4gjzqjg3hjxo4wxlf13fker4pbfh5cfrd2lzi\", \"zwcmk554pg0lwqg2pthqice9f86nfta9n6o2\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-08-10T14:29:04.159522Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Shay Rosenbaum\",\n      \"path\" : \"q8xjmfnck5mxbvla6da65figg9c3a9hab4obum0fff3cta8kk2lex0g4338ymvtprqcwwukh2zjmh90qn1zu1c3gbylnr2e3a4q8j0we19cawhtc3jde9o0d1gx45pfh\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/650209\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"7jqn1v6gxz7n45jz7wnv33pfsgazxrweul1pqyhyc6acy1bxunmktvbyygbfv1m1yllcz7fvep3s9tzfhmgryb7581on0gq28orlw72temu991hrysuyooxj3wyrvoibv8qr4qgl874htg7enn4k8axydfx8q7s9ejbqcvim8msz\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_SKIP\",\n        \"storageClass\" : \"STORAGE_CLASS_NEARLINE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"NEVER\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\" ],\n    \"pubsubTopic\" : \"lpzdh3gdgy0xbangk60rukjr6tx8pcuudkbzrq4ljc66cc6eriripiazktrlbrhislar7e4m9s0385uttpv40pvirvqjaheqngkliz0wmou3bvhf3583vou0fagyyjl6l\",\n    \"payloadFormat\" : \"NONE\"\n  },\n  \"projectId\" : \"08k3\",\n  \"latestOperationName\" : \"Wes Wunsch\",\n  \"status\" : \"ENABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "866a44fb-aa59-4e89-bbff-dca2c8999778",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.160316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "b9ac2237-d338-4ebb-883d-d0db11591991",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "hxnf1sfqmgscx7ojafzxbrzn8s2utcsdxtkqcwaknwe6rtkbk5cu95eae7o66lfmfaqhb5hgsqwtrhe1q25g63brqxq82l5au0j8l7hjz9s0s7xs8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"osbsjqk66u6ndhw1ncc078fkrzxom63itz98v6c0td1eps0ambfb1sjb4595d7kb3oug8ntx2vspfda3kjktae2jl\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-09-29T12:22:04.1463Z\",\n    \"lastModificationTime\" : \"2022-12-14T15:39:04.146332Z\",\n    \"description\" : \"Ex beatae ipsum inventore autem eos hic. Quis animi laudantium assumenda alias eius. Nostrum illo ipsam incidunt beatae possimus odit esse. Molestiae reprehenderit eveniet doloremque qui ea voluptatem\",\n    \"deletionTime\" : \"2022-08-03T15:07:04.146409Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 787057894,\n        \"year\" : 785137089,\n        \"day\" : 963481131\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1157746584,\n        \"year\" : 442411465,\n        \"day\" : 230150123\n      },\n      \"repeatInterval\" : \"wrb6lvlneyfe0a4e9x3qxzt0gg8r8nj3j3xdeg9fct8dqo6niqahr3ci5qi88n1b6inc3htmoy5e6flw0zsida63lwspdejxqi5o9fq0qakf5gmli7bltzra07cgy1fh69r3o9ys9drutejti8kyc75hsanz2wjyndc3h\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 27257862,\n        \"seconds\" : 1933618945,\n        \"nanos\" : 1996257540,\n        \"minutes\" : 535704511\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 2056843218,\n        \"seconds\" : 1115430418,\n        \"nanos\" : 1267038696,\n        \"minutes\" : 974509524\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"FIND\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"FAILED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-02-26T13:54:04.14665Z\",\n      \"eventStreamStartTime\" : \"2022-08-04T12:07:04.146684Z\",\n      \"name\" : \"Glennis Gaylord\"\n    },\n    \"name\" : \"Chris Cartwright\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Weber\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Floyd Kuphal\",\n        \"path\" : \"1y5amekkm62dgiufb8f2ldkrl5kq3simz863fa3b54unst03a93t99ivonzn2ii7xswuiy951mcx1puyknbuy21s7u9mmkkmrczktuzzvhk76x5y92yfgaa6phof0hor7g61b6wz\",\n        \"endpoint\" : \"i4p4dfjkr2h6hessy9o4l8511vqnslb73\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n          \"listApi\" : \"LIST_OBJECTS_V2\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"n579m7av1olhjzwlwmfnuc48kyypnr62fpoy6smpgzpcre5mxh4440bde4yckidux0zcfwm5qm5yk1gb26iqx16ql83ajkgxau1qlz8gfwx7k5tszj9g94vghy1k7z3180ll0je67jz4063k8tbqsk37rep0y6jah837r19z7t50nfocxgzk52qnlobxxzdu8\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"zvzfdanzia9rrxvy4fw56q5r93brevsy0bnq9eucz0njlwjuw4fg0tkw4mrvpyv6s2gtelkyumbodwzo2aaldeake0ojtohnwomd1hu1sxibxplf5t5l3lu7fxmiltbbztytmcxlkksf0rvll2kbou0p6z50vc831msqdzgejjkh9ifurc6sak5avksq\",\n        \"path\" : \"ie0482cr5293gi09hmp429cfwet3wz7v87xwllx\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"n7q103cuoxrgts5vz60h2qp2o3udwwyffk77h6xtc5ileped95tj4efk8upxcb3p7um5t7bo14x2yq4vs43i2mps760we6fcrznur7xez9yb65v2\"\n        },\n        \"storageAccount\" : \"qwwpspev1vjdt8baa0kuknofm7sk240vo9l5b89552xx95jtuubeinda6a4o1w9q9i80pq\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"0cm6o3htabl4aa4zaid7ndwmo4b3xdz538c49sufwovsc1\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Samuel Prosacco\",\n        \"path\" : \"e7pu8dx01c1saf1k1zbn9v694lc56kh486goa5pp5104t9mm3f13znzkm0wcrqdick6sgyfrffg7mga359pn7e0a6i\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"vpi6\",\n          \"secretAccessKey\" : \"n7pd962ly1hecu23xet30uacdrwmc5jrmgp9zjog3v4pfxrwxkns16eg8txmb9ajg9wwjbqugmoeb7e06w6uni0ood64gyms4won0g4xdwamag2bvovmq10gez54rfwikvwdr3wmuzwbyjc5hi2bbkf4rrnixxbx29ne67z62ab42ls2kx7px3lrcd9wkw807yvbclwr\"\n        },\n        \"roleArn\" : \"xwss5szn2qrzv9sf21j2vg28h\"\n      },\n      \"sourceAgentPoolName\" : \"Kessler\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Pierre Hilll\",\n        \"path\" : \"oqo4himhhoxzw2sue6luknq8lrnfm9p2igtnc7zj15a1d5eu2qxv1watmi41whklmvff0und5cc7d6vkflbculo7ut94mhyssframhc54458nuiqtmh565syr4vrdp2m2s82l2wz0ftnz8lkf7eytcxd2f9c4ed5fh51lhron7ma6col36arw2sdn\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Wallace Zulauf\",\n        \"path\" : \"ydhzp39utixysn9hhnw7csid50psv3022a6mejra3tteeea72ga6nxhgot63gajbwwki4boe4io5aujf14b5ecd9jvnj50r3m31k8ecxmadjgmccbno3oxlglxizq0l5l7gjd\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"9tqrdyeyahoo90ggcqrss2kw0nc1uil40qs7vwcpy60jmtrwjj2xise21qgk94fzbs25vofm1a4ntwwee8qwcabawkmitvp60beb79gjop0t6fsb2rzegdk6w4x\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2023-01-19T13:42:04.147539Z\",\n        \"includePrefixes\" : [ \"ptt2brj5yk3zzbkhojoi2bby4am6q1mqy09bjl8fbl46k7aw3zhleoq013gp28k1lr0d3ffo9aced20mw8zerozygpgf9frzgfy76u2h6iz\", \"uffvdz52vz7yqxa7gkouxq0fvcma1oxxkeqay9nvzi9hvnq9pyjlqj1iiktb4hqsdh2xekxuv99g87cd8ygt195unva\" ],\n        \"lastModifiedBefore\" : \"uxdpbjnvt8y29q97ox5rtilkmatanwn1bf7c7f4c5r4f20epg03tghodkjazxx0gzdai2a2f1qhiqq8165d176x1wiccglkvraviql0qmupiwg7klfroxpxtabfwvsfleim14sie3hjvq8jktjwy05rrfau489pk9u2iwnxotlwir082fzkeyfvhe0y\",\n        \"lastModifiedSince\" : \"8ilav8x26syo27pvv2azfh8zvbowxmfuc6rbfe6y9yqy5l1snfx3jo5bi5aktvoaxu1a5j8o56sp3nkr28bzv45zafga5r9963nsgqvesnfjotw43q30flfd5g1lrgu1dg6xp56ukircjm3rwzx6\",\n        \"excludePrefixes\" : [ \"5x66aeq583vc31o6r94r1ir44p81d5304jqu4dvlnmtx8twvuzu4e4dt06n8rxijbacklju8e5hqstyl295ub2h4j7zwytohqn0ac253qapfczhfly4t504sdlz\", \"rz3j1bn5drtxyp4fh4wv\", \"l7z5bjkhi\", \"ykuuj4ij6ccyjeltln7cjwt97vplz9\", \"slyjx8l15tz91a3xaylp8vol04pc4lmavvswo5048lcpxsz8oc2wkxf5x4gn0tcnu3y6ukf6h3jr5a822bbjavnsb58yme94jh3646yl1kpkefpsf2odtqt8pkchfgoal5wvqbk2e9tuok0rf17imxtf3zxcjkb1k87h8a7gxw8cvt4mer\", \"2l43mw8ehq2leks5ebrmy67rrtwelcs2osql5qi7dqx1sm0un1fcrz7zm798d0btl96y0g6bsidn2dq5h7ubqjz23ulw8syte0qc7au50g2paaje04k6yo5zjpx1\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-07-07T13:41:04.147699Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Errol West Jr.\",\n        \"path\" : \"yjw513fj4z86co93ouvi5hvr3cibgwl9o\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/644517\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"4luoxdf23lkinqpkfnlfz3znlm1xdj2r9jevcmm1lzhxqirz42bldy8f01e6uhgv218lcb2qt1lyfw6lt3uzzykv4qmlvay5olp4g7ji5qovt9bk5sm5fv7096uh8e8pk40293gpo4bbi4yui2hz5m9invoasodr3vha\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_UNSPECIFIED\",\n          \"storageClass\" : \"STORAGE_CLASS_COLDLINE\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"DIFFERENT\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"buz5irlngcm0dajcd3b20w4rsfha501pl0v9k6d3d0csvh63dzzu19ejp8w8uv\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"xcsc\",\n    \"latestOperationName\" : \"Clay Heaney Sr.\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2022-11-08T14:01:04.149009Z\",\n    \"lastModificationTime\" : \"2022-12-21T14:24:04.149042Z\",\n    \"description\" : \"Hic ut soluta debitis et iure. Autem qui sed repudiandae nisi sint voluptatem eaque. Exercitationem et quis consequatur qui repudiandae dolores.\",\n    \"deletionTime\" : \"2023-01-29T15:33:04.149107Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1794697443,\n        \"year\" : 1400719985,\n        \"day\" : 177847208\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 2028460900,\n        \"year\" : 226342768,\n        \"day\" : 682132458\n      },\n      \"repeatInterval\" : \"6tsrjoymh0d77o9hcgho6g771wfddlqnu0zk4go05ms7b3owt786wjt1nptimnn4tv05inba7wqbxdd2\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1923113123,\n        \"seconds\" : 1091373014,\n        \"nanos\" : 158971155,\n        \"minutes\" : 389489474\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1751998435,\n        \"seconds\" : 1262489172,\n        \"nanos\" : 788643908,\n        \"minutes\" : 126677480\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"DELETE\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"FAILED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-10-12T12:23:04.149322Z\",\n      \"eventStreamStartTime\" : \"2022-11-15T15:12:04.149355Z\",\n      \"name\" : \"Rich Schamberger IV\"\n    },\n    \"name\" : \"Beau Bergnaum Sr.\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Breitenberg\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Alysha Kertzmann DDS\",\n        \"path\" : \"4lu0ebv2zu8oiacofw8zgd1exl7mnkg32rpcfm3g55kekhh2k6sa0of7\",\n        \"endpoint\" : \"607219k3ovzmrt5nvhf8j8byzr2luw6knq390uhnqijyow7w2k7ldbquuwn8xwnnhrfufrr93leaafmmhrz727wbvip480p46ax1uk62ow4oevbbswjx29ttw3heamf7xhpjr4q6vfeesgfw\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n        },\n        \"region\" : \"fmyc5czorxos8w5hf46jccw11bxblw45p0sd097qoz24wacz134bmk5j4ea327foutf6tme5adj4fio8bvem4upshp3y48533hk082esrwabwa13rk70pmav4h20e4aujly697ux17sr1b3z4b8j2smaqotr6n262sbxonm7oz50gdyefz1ag\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"drn4o8bcbrh9yxw9q2278dt6bteeuogupfgm3is72ofhd6uimddy0fufidjeu3zrbs6v1kmsowj\",\n        \"path\" : \"vcgds4evmn6t855pdkw0k5qhysajvjwjvmhabrmld976ovgdm3l8b7o\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"u4d3dpjq6p6m7uwgmgahyc7zv328wkqi9ravnb1xxrwt2yxe5xpxxpehdev2\"\n        },\n        \"storageAccount\" : \"cmdttj12na41mgtdrb547z9dvrnxcfs054lu3bsljz5dwda6o6xnx89krzsf4vfx9y3b6voglu1xkc58r8lgg4yxwu5sw62x296g8sxsdvszw1xoj51yrzzg5drj3uwkdg753ea4xda52x68yos63m9q7\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"gll72d26b8h27y4b4n7eyvkyixykztyo25911rxxfhun3u1y6d4vww1un3diqvy3h64m39pola7nafbm3s2oq40lk3m9zxnyibedmc7s3ep7dryl1qki8fc7astihrft5xviwo21z822b44du9c4ftmc1m59c4mc6dfyok4jtqfkh2workt2xdl84d\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Scott Luettgen III\",\n        \"path\" : \"qpfmaamkta0xk61x1jirr4yfxhf7d2otd5lny3b22u3xc0xq6syjjej\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"yw11\",\n          \"secretAccessKey\" : \"f20si8vl0e4o1r58cxcki0ggu5hkirix9nkdcu1a414j5pdyd5ha51jt5576wrnay64odnz7nqpcqzim74ufysu8q94wx15qqaxt69jp3288wn6nbq4kg9jluphnszvh6wjbf3fbvpsnqkz5wdylchglsfurv0tntwlgw956w2i6q275azla2i3\"\n        },\n        \"roleArn\" : \"fyzpm0jwklt9rn8l1l2pdqwdc\"\n      },\n      \"sourceAgentPoolName\" : \"Moore\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Jan Fritsch\",\n        \"path\" : \"lhi704ynzhtwsznb62bp87hxwv9l2w623k0tjv5yuna7kn2q5d740xsj4wgk82um7c0igxx41gdqorz4gkbt0h3axhs436uc6q870o7s2zvic5ry26pztb68kz9gzav62lebfqben17iy7q393ky6rkv3mlem8961uubo4p2a19n\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Agustina Ratke\",\n        \"path\" : \"bjm3n65rromcoxukxy538h87iyy17btrt\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"ageq67y0jro9c5t3pmzt9a3cnyh45a1peqhoq9kmxn9plkx94er1i8ia7tnvxkjjhakg9m4d7ycr92v9tmmp3\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-12-08T13:05:04.151039Z\",\n        \"includePrefixes\" : [ \"84be5lv3jf2epn6no1m255cmmdht29lgckaq1cgg1ipa57jebnjnhxalvnv0jpk3a8usxakhn1n9yr86ebnrhttjpx6hxy8x6l8w3le0o58c7fsol5n8n1vbehmadxpj61rih3ensb02cqg3t4c1d6m2fcv94l8pjpxu149v49vb9geo5moxhjlsev8tku0i\", \"iwdfxqr37ytrquomw0mjeqedmc31j826\" ],\n        \"lastModifiedBefore\" : \"bqwl5rodlrkywn14yzh4jb1ajaw8uje4c8f8hva95kizkg6s8nns8djv27rr5yke114s3rpl010pjizmwhscxsj8bufmw0m8ppq03ff3t6jl44mxa\",\n        \"lastModifiedSince\" : \"yxityh8jpeq5ikcehdgapexr3p60x3zm8j8s727q9iiollus4veq21iz3mhs3zx9tqbam3d04g55e5du70nlz7cz8ygss4myde712n0cccpd9bcf4481nossv6726s1tf74ibj6rv9klnsogmuft3s5tcuvs5hzh10jqi5g0nw9nba98k8u\",\n        \"excludePrefixes\" : [ \"09ucnf0v9pt3u10i68m3w3nilbwye3aucq9rkyii7135wis904zswkls10ghflarx11zvudwjwqmkm2pa1j4oceoaj8swf3y38lppfqfhg8xv\", \"eghzddp5yyys3fxhlupgw7j07c94wmuq8ihzcgyytx9uah4uovuweyzqaezd4031bz27iiliyonjhjckyqd0tqzlx71gr\", \"4cri0iqfptwjgb6mhzw1wxkcjoe7ya14ng7fiw9q87io5vlyz24imiwoa54abxlumsm0c5jngs82uox8fpobtgxzjf2ve9sywuo3algesr9z1yom46p2e70iv03e1stmd8ha0doal4atw44d3ammm5nl6tq7f2t7if\", \"qqk\", \"po3wmpzq497a7bt6t0ptjbx72ky2o6qp7u6lq6km76toqmk9ngjwfe8us59wkhw556hfjv9a3hlo73hnftz5av1br4q6z8hmogvct1n8hwt46c8t6dlwo2kstgui3y6xk0heozldkytinwv23\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-11-07T12:37:04.151251Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Kiersten Raynor II\",\n        \"path\" : \"g5awhkmol2olyyff58rfhzkdqnag23g63hlpqqdokhg4gpiqsyzaledifd9lenvrkibxret3120vfuzp3w85\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/314713\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"6ie654qdu2sbepen1yekr287episfh7gm33a1fhmihfbovw6jzm84rvkpwdbjros8drxsb4j0znay33myc3mxyvf0bhn0p\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_UNSPECIFIED\",\n          \"storageClass\" : \"STORAGE_CLASS_NEARLINE\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"asf47zn8pv5x0xaony1l6p6zfzyp3ve1t8oqkbhx7sgon8wy0nys4galth12u6oxmnfzxedyrsjkz0kilht1s0y2klaqvsfx09itx5uz1w3xfgb7potkqeit67hhbveli2c6grphh8vf7ssuz7i94ttn9664ppyg29983chwj\",\n      \"payloadFormat\" : \"NONE\"\n    },\n    \"projectId\" : \"h260\",\n    \"latestOperationName\" : \"Adan Wyman\",\n    \"status\" : \"ENABLED\"\n  }, {\n    \"creationTime\" : \"2023-02-12T12:43:04.151856Z\",\n    \"lastModificationTime\" : \"2022-10-31T15:11:04.151891Z\",\n    \"description\" : \"Molestiae commodi harum perspiciatis. Alias consequuntur fuga explicabo quo nostrum laborum. In ullam quasi distinctio dolor ducimus quas omnis. Pariatur animi dolores maiores molestiae et. Pariatur n\",\n    \"deletionTime\" : \"2022-12-11T14:59:04.151963Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 22418347,\n        \"year\" : 1807940529,\n        \"day\" : 1728220979\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 846630980,\n        \"year\" : 2102381000,\n        \"day\" : 1913947690\n      },\n      \"repeatInterval\" : \"d918o01r44w1xr2yphlwzutg1dzn9u36vw96a6gjedos5c5163p55cc3av0zyabd46ljierpbim3dvyu8urrh2dl14o6eueiwktwmfbdojxj69k7um67ejkba3rb8e5jf4awq2r7hc9qyh0imc0glxe6szw3\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 435028531,\n        \"seconds\" : 604841268,\n        \"nanos\" : 166684990,\n        \"minutes\" : 1696118307\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1340075901,\n        \"seconds\" : 1032161765,\n        \"nanos\" : 1049531659,\n        \"minutes\" : 90552467\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"FIND\", \"DELETE\", \"COPY\", \"DELETE\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"SUCCEEDED\", \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-02-09T12:07:04.152284Z\",\n      \"eventStreamStartTime\" : \"2022-08-26T14:49:04.152329Z\",\n      \"name\" : \"Hung McGlynn III\"\n    },\n    \"name\" : \"German Torphy\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Moen\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Sherman Corkery\",\n        \"path\" : \"ofsmrmpye56kys3hpf96ffnjdpxi3e33p98xp95mnmwjtbqjevx17p77yqde758sg16d43h94ght2\",\n        \"endpoint\" : \"8x6uwlgjrnlzr3v01ywxa9r5j054y5r2s8ed39cwliajkroflf4awvji5jqspnpo84fmzj9n4lxsp3nxq6nazzm9lhw7utv4svl2n9g63qurkq9f2ntk1fdg1hxa3yuukz830lwvr4hz4lxafv2pt0sxnyvc00l5nzscpo2vs\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"rskc\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"3s650\",\n        \"path\" : \"wjsqg7r5tamvnfufg4tjavg3djkl2akyrpdko4dvvojlg33in42d6wwbsh264xod0fnb5adx47260qr6n0qve9c8gtzjzx1rz7qvpeej8tq0u39\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"oeau7s7ro8cvr4sgd1p2qcnsma2ywnq1yg124csz1rsofvvswnbxpx\"\n        },\n        \"storageAccount\" : \"18q50em37lsocgube23xteweou9ah7wagvdpwq2zsv1xl3c8dw5p40wyz4r6885voh2p827cie9rbap\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"3iqf1v2iqnizyp67c023h7f4lwbp4yc8khc620im6phuk3mvoh5ns7l0qcpa0322k6q3w0vrjeigfvkgmqzupxaqo46d72lzvgca5hxkky4sigc2ou7qvhaj0g21tpbvi4v3a15qxgskr2myob2p4whqnpap93mv89n\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Necole Jacobson Sr.\",\n        \"path\" : \"ifn6nfy2l82d7ptqnxj80ss4kvyy070zh1cnxh2g76zlvfipb90grbf50kd2ovjd1wekh8prmbxz3zmf8c8ra3r4rsrq1gratxsx4sj7e955rp71rnese1zed91d4998t6bbqq3wb56u3mo210ebm0566e6zpzdhtlu\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"bm2g\",\n          \"secretAccessKey\" : \"x35qkzosoyzkw2pggsnvflhxy3wx9lttwlnc476csvwfn85g8\"\n        },\n        \"roleArn\" : \"9krnmbfe7jatl43ia0jf193chkbn3448qprb9j2vwao5hpx6ekkqbbc65kapa8p317pb7j2fs416weh2\"\n      },\n      \"sourceAgentPoolName\" : \"Kessler\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Mindy Howell\",\n        \"path\" : \"ach13tdohhntxd3hvuqthkgs4cugvbsx2thzimryibbp20bj5h63av5aozmrrajun466rb0lf3lvyw9sjsln4b9syh7st468ncw474e375xpqhqstu38jiyyhwbssp2fg5bi1wmb9yj8yb20nztvy6q8\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Walton Cruickshank DVM\",\n        \"path\" : \"h2btspzphpqb7cfuy926ep0d2wuziyzzrmwpje1eqm6ur8rxptadbtwj65jymmzhb7z1f7fmpt5f4xw2j8lzdlhgyyt1peiho0kleaqb\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"v1l7ai1d2irn5xpuef99\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-11-02T12:31:04.153247Z\",\n        \"includePrefixes\" : [ \"rdrbru5j2gia9cb4nk3y0sny9dwtkn55ovqkl8tim8p33vpo9j1cp34sq5c1vcnmpjuw1wdybpiio58ripslahqi9h77g4qnrsq9wyr2y\", \"9li9vptg3atha65ajkeergs40o99e6qibjjdtqljtf2m3411le91z5exthnijh68qyhg3t56q264xgbuzfk20da0j2qizbytz\", \"qus4d8gq7birsd0pdouw2fbqyfx36956yblqcuej3qq9jmvgokmz1lkagezmo60oasx\", \"btg\" ],\n        \"lastModifiedBefore\" : \"x70nrhrieasrvgqgyh16h3gp6poia4vmu\",\n        \"lastModifiedSince\" : \"st7gqrsyb7p1zjzj321yfbiwc1u3aec5qijxglry5abxtn6regzivjmoxuwy946rsfjlrk0l6my290zkvlazzlhr0e840udnhwewlvj4kil2wfc5xbqlnm53lkv00\",\n        \"excludePrefixes\" : [ \"55funwq7q4jud32zh603mnu4y7792fkho7fpgjm6veeapx8i6j3169ogjug80sombtf67el5dafu5c3qqu2r26xdjz9yohneo6cf5pj6kypt6ciq4v3ew1iwn269m1cnljreb553ema9u9aadd\", \"b7xwtnpv3trntejomtp4p9z0t8k3xok4691ssk35njqujsw8f0aavyftd1tyy90ufhlh6h8qgc8bg0dkmb8qntpn4g61uxnmkseawwfzdkql3eecl76dsw7vgchc8evvrh2s\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-07-02T11:44:04.15346Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Bryan Nienow V\",\n        \"path\" : \"vcnepcdba8flvvtr73ikyjje2wpiegdcrwzmr0fw8p0dpmy9gcejotl6j0v1hkok7b5tjxo01ykzi03j9eb0enl7df36hyl0i9d80lvi4b89a2179a024q2bqdcbd08exk84nvqilaj94mys5g67q0stoh2u2k4ue22rov4\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/526412\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"sf1lv\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_UNSPECIFIED\",\n          \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_SKIP\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\" ],\n      \"pubsubTopic\" : \"caq9kujpw2v6xi986x3h9ptxo9xlc41g08mvhvq93bmfnhv13ffwcuygrri7oo1l3sizwrcb2bjyxfo16u06v55r43ixw6drqe699i4k6zkctl9t2hclbd7m08t4\",\n      \"payloadFormat\" : \"NONE\"\n    },\n    \"projectId\" : \"sghv\",\n    \"latestOperationName\" : \"Mui Bernier\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2022-09-12T14:44:04.154044Z\",\n    \"lastModificationTime\" : \"2022-07-08T13:59:04.154074Z\",\n    \"description\" : \"Iste perspiciatis necessitatibus iusto distinctio eligendi soluta. Id ut delectus velit ab est. Qui repudiandae est. Ut perferendis omnis numquam officiis quas itaque non.\",\n    \"deletionTime\" : \"2022-05-31T13:30:04.154141Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1503984571,\n        \"year\" : 1978429562,\n        \"day\" : 1577820177\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1553525073,\n        \"year\" : 1399305505,\n        \"day\" : 309364364\n      },\n      \"repeatInterval\" : \"vldtp32oivz63ytvm4ajr1klkro8zuhb5sf1w7nvj4n32n4ddxg12d3tv45s2phkv1xdoozccwaf7hei3vxbo9pnworiloul9x6v5appvjjgyqqd72y7kjrhax16kzgb8rskimgokynsqhmnh5qvsxpyibkvj6j2bc8td2u15xykkm97u\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1793847544,\n        \"seconds\" : 1853754086,\n        \"nanos\" : 1677784164,\n        \"minutes\" : 233172555\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 370713429,\n        \"seconds\" : 2133553170,\n        \"nanos\" : 846368460,\n        \"minutes\" : 1754555615\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"DELETE\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-06-16T13:42:04.154332Z\",\n      \"eventStreamStartTime\" : \"2023-01-29T15:09:04.15437Z\",\n      \"name\" : \"Ivan Kiehn MD\"\n    },\n    \"name\" : \"Darrick Abshire\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Klein\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Genaro Beahan\",\n        \"path\" : \"t17giebvfh68n0xywm8bcly3ttix42rxh09kb0cpsujp4hmpw0xhlztcnfc8gjpkl6q4hifa8osi8jbh0grzm75ffr104zp1k16v1p47d7yzrvihm2j366cvdysfl0laqnyl21ns2vjlg553pm4sm3v9q0qcznrlj2\",\n        \"endpoint\" : \"q4y9lq0g3tt6s3r7b2dck9yken0yyzacwiudt4sde9j5lxdu2ag6j5g2014jbww4d2tarvk744y2n520li7jxupe0h6dsa0cgbqcn9fz2101g9grxtof66tutw6ydor92tun3pyss4y16wi9eoh1naxqs5kruo7hq1erci3z129cbupyne7ruaggh1rgw5vy\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n        },\n        \"region\" : \"ot0204xmro7mj5d90h4e9mxmviirpktrus2lihkoxe0r2qv8n85tt4qrot9xx8smxhkl1su9zo279c4r1k5d5exkgufc7hweale0zmuca5lxim81k5672tna\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"mfl5ftrjm2lq3p8csx698bdl88l9ujn4olylxkpbra83mf979lf87lab3mdah8aatb44byj8yr3lhfj8ony9b6lsis1mddm7nfh434bte689sqgfxpkpgrksci8ybulglbcsh46ovoneartn9e8f9scetkzljgxsbp2pmi4fp7qswb2dupajj8tjam9b8f0xp759\",\n        \"path\" : \"sn1us4uidbnwksd19jkpmkr1es2i192mu3wakf67ayfke7iodjvzlumf338d4kkbt8vdvm9o5mdzswbsblcvp2ia9xzl6v9nksg6iwcb1rhh2xoocgtfr54b5plbasogjz13bnuabvrkw4ugw14sldfdmfkfwli8c2kq0yrk7pqa339p2vfu\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"7pze94wapv2fa7vokp3sqfcuptvh98z6jhngu5088kdb6oa6se99ylr3838ylceiwckxc1gv1jxbkhre36suv41cn0\"\n        },\n        \"storageAccount\" : \"7e9pi99xpnhwe2z852wed43wjul7ebxo4cozg8tglxv3cwftu7xwkdss0264htv90tlu5s0qdvsqiz4v9w78kli58nos2rqxr4o9mlmfet8w80ktdypr38lzmu\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"rjdvmjej32dg1r0ua2gid6ogvrdj1q4zs3gqxoat4\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Mr. Rheba Gleason\",\n        \"path\" : \"v7tsnqr3rjfy26mup3mhbjg4ejhfe4sht2uc\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"0156\",\n          \"secretAccessKey\" : \"w5keifx85ze103yl142lkwmw8zjezcyg1wez9l6wscet7hotvxquomk0rzwvuq3pajamf0d9l390mxwlov87hjkkq2boacv04eie8vth3rgl8uakg8qg7q0sc4rb0e0o6a34ccuaekr57h7l27ls9wjgud15cs5t12g4yx\"\n        },\n        \"roleArn\" : \"8x6b4hnjabrr6q1dhxjddbrseltwz1vsmmxkrwirnjj56d38i0jbzyhs93wfdqvs9wg0p27xatvrrnpebepxkuzyhqz0mbw6drm2k9yq8ud49cex80wc2i4k6xo3ehy3qw3yb5svspip80ykb1l3qlarexz\"\n      },\n      \"sourceAgentPoolName\" : \"Koelpin\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Ms. Ellsworth Kihn\",\n        \"path\" : \"v6my976bsd7bmuxoyq0uhbw51etp2mvojb1jm0d9sqstky63c280x57vn8y7o0aqg3u2njxku2a08srt4fjmw6qk6ksjnr5so5ct17rdai3q5se9agh9a9hxnhas5lantqz2jk4byibkpu1w2pr2io8t8kswngzeqxpynie2c29yyva\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Carlos Parisian IV\",\n        \"path\" : \"cvzxhinrsk7sfbe4xhitd8w8p7fl48kb0mo3apgr8kdhlb0u27hdd04ltup2xf5wq83thzxeua8q6je0d39i8ki3nzdd7o5robofyfkcj0x4q13hw952jt8xsjivtx2gwkcxo1ukyb2r1r12mcib6lrf1y\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"iyzr1trcvmwi6ika88bgp3gy69a1yb94afwlb60sg2mp47g6da97vmgnkl60skbqq7o51kji52ul2itg0xibq1an8ju\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-09-25T13:52:04.155256Z\",\n        \"includePrefixes\" : [ \"mbv08rikf8yfz4hn1xx0d6gk2017gkuo6cgem935ffpt2dkux11mz0d40ve2epq62twvq0z2k45jjk5thzmmipdismqw0e2rdinfsox\", \"nxq5opnr2lip7qbuz0l3eafilc8z4ah8tkvfm0gn9u2klz3sx0pi9rptpmwmmoabworyufleqenocqnde1uwny\", \"tv5jvbcchsaow4g0smeypoy2305b296ncfsthw61uty62s08pfk4iucl0jfi5fj\", \"osoa8yd20qeu54oyzh5x7fdb1gtbcc1ur6uaci9jwh7ji6ifohhd8rdx8pggeams30u7q76uoogf0hvq7ju9ieoff9s3lgn6q2oy0hkjy69xivxc4fvc4gyo98tlmi8lrlijd\", \"voq3gjr2ricmijfars857fc94tcobldhpck44y6dakevzac505m7iz6f7in6r2tyzak1vbhoty778vl93ilczuyff\", \"by8dymhajliu5qexw63uzrjpk2hqk3kiuv2x6lw1c8t2a5jyv0xgtibxlis7osiap8p9r7hb1muspo6mvla0dgfm9hor2q4w4phi\", \"bh7lpehqnzyxh03bzrsx2s0mize0cqzsku7rhdszv2k4rg0t1c4zkrf5wtl8t54ap1i2ewfgpzqgjix4i2rjlc0wubogpe41y6wpk0av9o6x11lxefnaq334wvpvukfy00rw3gmdhbm39e5f3sd211o0tb167dq5r5trjtidw5fiz3vsk98tr205e\", \"ps4cc93b4awg95j1icb7e8ofakj6ns7vm6xfxw6k9g9vea0teg1h6ky0g6uax1ft3d5kumx21kn1ynu2yf57y5zxekt7cz8v6c60mfdqid\" ],\n        \"lastModifiedBefore\" : \"h3yenlvw6f6i0s2uzl7ljjvxc9tt30be1wmdp6czrpwsbypbzo9rpwsslaht7pyjuuju456zy0qyscajvhmti6venckr3xhbp0xipnxdrkus0qh9dxh4cla8d4uisuw7krmp3o4fnu8mrot12gingd3diws6tdjwgmkiv4kfw1avwyf7jgqf9ev94n497nt1ele\",\n        \"lastModifiedSince\" : \"pnkdyc9w9sb1qbymewro8ip7yu00q6x3op0vx8d7mhzmvm\",\n        \"excludePrefixes\" : [ \"armabr94a3or1bc828x1jlpw2gsna7puwyw1r9vwrrwyt3m0y0cftgvhv6b6q0msu8t0d7ok59w4fcjejqcrrmy8ink6jywpzzpx8qq3v78o0evshvio5r15sspht2blr6l6thuvteprommagt922\", \"gm5\", \"2tqa39s84guxhcpjrxub6onjr56oyji1lnkpxg9u3hvbz5xv81lh5764i17tccmk\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-10-15T12:32:04.155439Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Lenny MacGyver\",\n        \"path\" : \"bkxtv7hggtsofsgjbww1aufzclpgdjkcb4ba270uxutrj4ufu2pdreu03cqmm4k4itn17oc3a4vd8esby35ok53ujjngity9wf8\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/062817\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"fujjfzv3v8lelrev4at4zpvig5xdp01fboe5y3e7iddiv60t5dodom6rl3svjgxes0elxut92mkrmhnaory5a3ujzu75kadlv63ykjo5pxsrajv5bifoi1p7wmq8oib26m6gjirem7s6n50ow5cqg39yqgumy677n9ys9khtmttu0mqhxndgwm\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_COLDLINE\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_SKIP\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"njxhwqew3o9ispzpxynhsug02u60oxggo9josj6rb4uz544o6j5yqj95g99\",\n      \"payloadFormat\" : \"NONE\"\n    },\n    \"projectId\" : \"l014\",\n    \"latestOperationName\" : \"Veola Bayer PhD\",\n    \"status\" : \"ENABLED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9ac2237-d338-4ebb-883d-d0db11591991",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.157961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "b9f3726b-c0df-4039-8d61-d88276a8cce6",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/t2p5/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Aldo Dooley\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"9tniry7lvulzfqey5yep0syxtd7id4x6srkg5nbnt0fyq1ugx2pxwz4ze\"\n  },\n  \"name\" : \"Seymour Bechtelar\",\n  \"state\" : \"STATE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9f3726b-c0df-4039-8d61-d88276a8cce6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.146221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "c8058d1f-5a53-4ac2-9bfc-202a971a550b",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/p727/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"gc9do2godij7th546tgmeuj23dvlg1bvr3tg19pyc32acg4csggegzn00hx30071ss1m4dud9wl0qg0d\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Bettyann Stoltenberg\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"ee5jpeym0wfqcgn4yxp7tlrob0rju3nr3iipupouskc3hqeaipccndihzzdc48d43rb9hj21weyyi834yo0rmqw3glnplftcs\"\n    },\n    \"name\" : \"Vergie Langosh III\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"displayName\" : \"Sam Gibson V\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"zdneyujrneryp7ikzlb1wc353dk59r0htvldmj6he3pm7a0vuahcb1n7jorpv4cvbrcqfp75hh3z6sdpr0uhi5ilv1br9ykmh\"\n    },\n    \"name\" : \"Shana Koepp\",\n    \"state\" : \"CREATED\"\n  }, {\n    \"displayName\" : \"Adriene Heaney\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"4rkc2qg5udfnx8fsp0421g5h\"\n    },\n    \"name\" : \"Kirby Dickinson\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Alden Johnston\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"5l9t9yeaj1gu6tbh34w6pe4yx44zkm4cr5\"\n    },\n    \"name\" : \"Angelic Thiel DVM\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Santo Collins III\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"ks3lb1zbe2lhpemx5788rfs40poht13o0ky3hfoynpuqrkd1oavlmx4ud2tbdaix632omy53odtnetunvtrzynbcvhywzou7gdpt6zv6x11h44dpb\"\n    },\n    \"name\" : \"Mr. Malisa Denesik\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Jeanmarie Lehner\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"q2p82ebk8xzjrukvsxbxebxu\"\n    },\n    \"name\" : \"Kitty Deckow\",\n    \"state\" : \"CREATED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8058d1f-5a53-4ac2-9bfc-202a971a550b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.145929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "5e333b49-516f-4adf-baf5-e5425f4593fc",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/y47s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"js06005xj72kyi9esf0ictzxfrlr4\",\n  \"subjectId\" : \"c7ls\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e333b49-516f-4adf-baf5-e5425f4593fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:04.145046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  } ]
}