{
  "mappings" : [ {
    "id" : "a2977cee-064b-42d5-b960-b8e99ae0cc93",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Syreeta+Kunde:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2977cee-064b-42d5-b960-b8e99ae0cc93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.361401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1c0b8a3a-37e2-46c0-9aa1-7cac928003a0",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Mrs.+Darrel+Kuvalis:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c0b8a3a-37e2-46c0-9aa1-7cac928003a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.361328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "53207224-5376-4074-be8c-996ec6001668",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Christopher+Howe:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53207224-5376-4074-be8c-996ec6001668",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.361255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "598e0d4f-f53b-4773-a912-fe061ce92d60",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Miss+Quintin+Herman",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Amado Ryan\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"xk4d6klwmdbivg2w8f963amwe7xknsz9mzrf3sm76j0ww8zo37zxd2vjqvg6whzl4uyns1ooftt4qqrvxe6311j65qglj50fj5y1fvfmyhaurm10d3qpxj3p08q40t8ae5msqhgveviv4bcp4yamb3dgmeqcihcutxgofhma45ant6q1hcvvt2\"\n  },\n  \"name\" : \"Josue Schuppe\",\n  \"state\" : \"CREATING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "598e0d4f-f53b-4773-a912-fe061ce92d60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.36118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c5da63d2-7626-4541-bf2a-d1365e40293e",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Jospeh+Jenkins",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "fp7fj2c34rcqrs6nb72bpt7jbr5aeuykdhk534dn97m3t"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tommy Hoeger\",\n    \"error\" : {\n      \"code\" : 564348625,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Illo rerum aut. Fuga provident sit et est. Expedita quia vitae omnis. Ut sed architecto et. Voluptas ipsam tempore itaque culpa iste sapiente commodi.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Geraldo Berge\",\n    \"error\" : {\n      \"code\" : 394642645,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sapiente consectetur tempore quia. Repellat illum eum natus sed. Optio et dolores et et illo.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Pansy Schumm\",\n    \"error\" : {\n      \"code\" : 373254702,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptas molestiae necessitatibus deserunt voluptas. Ut magni sit. Nesciunt cumque est delectus maiores incidunt modi.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"sb1wga4hjj45bqqsjpl0b9m542nplxepbshgqmgn5cfphwyufk7ofbi14d1gg4j2qw8hcri9s91r7seg00y6ckray5ci2va9zdcap1727mzjuq1lzh136894iu1072vjw5jguvnait08l3ojq1tneykf9lcpuoaqnk4a6fyps5c3hd7xfnhlww0vdibmfni85\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5da63d2-7626-4541-bf2a-d1365e40293e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.360953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "23c59ed3-cce0-4f7e-840a-dc9ac947067f",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Jody+Reynolds",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23c59ed3-cce0-4f7e-840a-dc9ac947067f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.360467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3af773f8-376b-4c5e-be86-87567c994da8",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Chas+Wintheiser:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Suzie Lynch\",\n  \"error\" : {\n    \"code\" : 142646149,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et nulla architecto inventore. Laudantium perspiciatis placeat ut illo est. Autem eum autem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3af773f8-376b-4c5e-be86-87567c994da8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.360392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2b6633f7-bea7-472f-b527-fca8fd1672ce",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Jonathan+Kohler+II",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2023-03-02T16:33:03.358216Z\",\n  \"lastModificationTime\" : \"2022-06-11T14:09:03.358246Z\",\n  \"description\" : \"Sequi placeat sint et. Modi esse asperiores. Dolor neque itaque sint.\",\n  \"deletionTime\" : \"2022-10-10T15:10:03.358305Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 605974949,\n      \"year\" : 612939179,\n      \"day\" : 1608923143\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 839870563,\n      \"year\" : 787319076,\n      \"day\" : 1799489632\n    },\n    \"repeatInterval\" : \"yd19um52pkkyxyflh373yt3izfotrzkdrf1r2z08itz0uej6lwqe3ykcdvdt3f1l7kg8xd9bz2i2u3xfurrmb52gymkn4nb4yy3k5rt1c4qol2j4sx5f8os6wl2vi2d940p7fa6fpsa7e7473o8hsgxtdmmtsldm1a3uuatpq4fa\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1432598713,\n      \"seconds\" : 874171934,\n      \"nanos\" : 1884067171,\n      \"minutes\" : 1331141113\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1961284230,\n      \"seconds\" : 1665057859,\n      \"nanos\" : 1720931631,\n      \"minutes\" : 596423136\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"DELETE\", \"FIND\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"FAILED\", \"FAILED\", \"SUCCEEDED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-03-23T15:27:03.358509Z\",\n    \"eventStreamStartTime\" : \"2022-12-24T15:49:03.358541Z\",\n    \"name\" : \"Amos Friesen\"\n  },\n  \"name\" : \"Maurice Hilpert\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Metz\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Rolf Koepp\",\n      \"path\" : \"m4vjqiyummuk9anroni1j3ynhkj64jlnkwssszxmcsg618kge49ej3hc9frx6hovne\",\n      \"endpoint\" : \"c2zxeflitf37c0mv9yblwt3f9awwtihdy1r15mtaisc0bqcu5lfowqouvjqgkybza1fscu0phjhsn6u0\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n        \"listApi\" : \"LIST_OBJECTS_V2\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n      },\n      \"region\" : \"lkfsza2r3rlz9rnw0czcsp2g2x7y0x83qs7nn4zt2td1uyjswooqkzv3ykmkkh3b6tmi5z4g06xxt0q3hbevk5ze04cjsem\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"cz2lyg8lbt00o4tb71zo0xlw1x\",\n      \"path\" : \"jq11mw0cl44ys2vyv9xefbh00wcuff0m6prkjvm262l3aa53f05bhu4ci1n3m5vo8ah8amuu6z30z7asnjc92qydtbeyma64bkhzvo7sozseb\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"iesannpr0b\"\n      },\n      \"storageAccount\" : \"he4ykwplhlv3v7t5cjvcty7k2ekv51xf333igoj39hnprrb03pootyxuys6zw2aj0pgzqxqfeijz2drypfqsuaq1mqpfoar5z3068wadwsevhp2\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"k3ejra\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Joanie Howe MD\",\n      \"path\" : \"lnns5tuid2vj73ff5ai6qzax1e3lolj9662syuipo0sfrhjrhhucup2r3zypcyqrqfwlvxxzz2tcw6qo2x2hsdaewyydqzvbh6b3bcznvrdvwwl8whfwko2ebqjkv0y6jw2lzk4gyrcj2lwtv28zlmkv\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"175s\",\n        \"secretAccessKey\" : \"q4duu0xxwrqhb2iyng6ryy00klv3jikjfg9ss2zymzd0l850hpzzxttrk5z6fc2abct6yzrk1w8z4rk5h6evrua67h9vu87ivhf24cnx8cufcx7lmh91zcxdc1li02yuqb4angy6o\"\n      },\n      \"roleArn\" : \"lib2wlh88j8kexxr1r4llsxjk1xv9ch0xxp4n857fendo7o94h09h6xktfc2at4ykj3rtmz18teklgn6o36pt12ox4lv0o03rnus8zglpsv\"\n    },\n    \"sourceAgentPoolName\" : \"Ziemann\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Ettie Heaney\",\n      \"path\" : \"49o5903tnip5riyxlytc8fjupy7w8z8ja4svg4vj06b\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Mr. Sun Johns\",\n      \"path\" : \"yy9i7bdg1l4l64vy2szk4udival8clvmpaep02joixkfgop1gmstdffk04oqncrr4z0grmoitwoypl08l43jiu5gtu\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"l2k45o3mzyjt5vehxm9q6uwz0lu8w8bypgvqj\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-05-09T14:26:03.359304Z\",\n      \"includePrefixes\" : [ \"frrdeirnzshkg0rh8jhje50hadrsw70b1o3diuy59zdi3d3880u6k0v5zlp2hg8k41bzx0fll93ikwcrjp3fbeujnr4gsi0cp0stpndafcnwx64sqgm8yzcnduubbdly77md784esu18gaehojvklw\", \"udbaxdlc69qls7ytmopr5i4hxl9y20fw6nrv8l67nd5uhu0ur48iqtyncp035y2qitfazu7h1q11ngasy9td9xijiklhvx445uiy3t30ssxz6597r4e0i1sakh1wxh9lxrssv2sn9tmsch97j0qyudjq4crwui925bh8oi7\", \"bzycyedhmzbfifplehycg04phwjpasc8h4rhbn36fvkj1yvpq4gq\", \"j2vxlxz1414owjk2xr4jlhylcx6gct6gje8wney0wgwmlzf7gth0sdaoas6485oebczhz7c1d0p7wnxztg9d6nb87cpu4ewl6grfleo46qb2j2jesbeixtk0yyv0alxixrjb14rik4mgdap5w35qsc9wwu479qw80dz1zegur2q5ii2z\", \"5ec5fqzo29koi0lxj2fc3jd9wbuc\", \"n1n3nuqwsnq694yzwfqa0c0l1fe1uqm932lbh2do0fszguuo30vjizms331kwkr6zorfltb78ci4hte243y2k8wx3qf8me9d5ecx3xji5a41p68x542i2cyr1pzb57w0jf4022oxdqmvckd0kvkbgfwktmxpo4k\" ],\n      \"lastModifiedBefore\" : \"0wc8vrtq86g82tqwo9u30x2l1sxnb3hllcxolz0oiaz0no67ony74uc9eyav89zqhxh52zhze4c9oi6wy0xxvrm8hpbjenpjuw7m66m7\",\n      \"lastModifiedSince\" : \"jgjqg0kq0utyqgehqtybkmufk2bqus3m34urnntnmg4jb325jh65fvxl94zsmerku936rj9vrg8ey93xp4xrmbt3wycaeg67b\",\n      \"excludePrefixes\" : [ \"pg4p7371rnq8h0n37mf8anjcl7xdmskco69yn5atnwp2ejifg0u3ai41peuq1vpb5hu0tz9kyng1w6yvipmdfey3dd\", \"8q4io2dzoh56a2t4yb1aeqj08d1s0zsb8iif6q3sucbhysz4mhjawyt41m1um2qabv8qivug3cu3r012jxf5llw0bidw7ftlzz225wdpjt7ii9in8qh2c14v6df2s8xdpvh29hirq2dkeb7edex76woh925wl8gh9rf0t7qb7dvzvy4otbnrq1c06bmqo0g13zynudho\", \"poiygedsylsn11al2x2opurrkpbilhzqp2j6w0tpy9f55oiauwvoqjht5pmnumeipfm33nau59oyreijdwvvjo3meu28b021c3l2vronu0zhh535r1q64tbwsp\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-09-04T14:44:03.359449Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Misha Mueller\",\n      \"path\" : \"d2aqo64nt8oofrdqqy44t256hl0udr634f3y54wm2im95syx2nophs47lx4csh8snf7lxczf3c\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/653018\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"0yhgz42djgzvfgrl0p9p48bhja5e472revq3e0a12k5ikoc5px0vivxk50euxg15vklp1r2pxlzhf39rcw4if887qyad2nmowy7bsmqw0l8cafzgs6x6x2\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_UNSPECIFIED\",\n        \"uid\" : \"UID_UNSPECIFIED\",\n        \"storageClass\" : \"STORAGE_CLASS_NEARLINE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n        \"timeCreated\" : \"TIME_CREATED_SKIP\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"jxqbowfd19un1f6e0lo5iabpj1i97lm7xr4n1pa4zyhlwjaj7qigdi0vlwn8odq2upn2q0fvc0bnreh9b6bfcqu8i6g4y8qt5\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"k898\",\n  \"latestOperationName\" : \"Desmond Reilly\",\n  \"status\" : \"DISABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b6633f7-bea7-472f-b527-fca8fd1672ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.360119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "15ee8aa2-d019-4997-82a5-86f951d92fdc",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Mrs.+Avelina+Stokes",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "8760"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-11-01T15:54:03.356183Z\",\n  \"lastModificationTime\" : \"2022-10-08T14:24:03.356212Z\",\n  \"description\" : \"Architecto laudantium ratione aut alias sint. Doloremque dolorum cupiditate dolorum ab. Expedita corrupti quam sint sed.\",\n  \"deletionTime\" : \"2022-08-13T17:00:03.356272Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 477342650,\n      \"year\" : 1975485608,\n      \"day\" : 1810263463\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 570950093,\n      \"year\" : 746113786,\n      \"day\" : 1448452746\n    },\n    \"repeatInterval\" : \"effinougpmeqf3hljzff3klguxqmfmegzn9dl7de35webxybwxd9v2nru2ai893usrac4xl22gnni8cjassifd6t9xyp61jtc6vkavcjlkyewwjlp06q373uxak09h2r7hzdl1c91cnmp5j8qdws3jbe91u358g16\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 455168574,\n      \"seconds\" : 532197812,\n      \"nanos\" : 138244228,\n      \"minutes\" : 1015822055\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 819607145,\n      \"seconds\" : 562076159,\n      \"nanos\" : 754118858,\n      \"minutes\" : 431988754\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"DELETE\", \"COPY\", \"DELETE\", \"COPY\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"FAILED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-05-08T14:35:03.356477Z\",\n    \"eventStreamStartTime\" : \"2023-01-21T16:15:03.356508Z\",\n    \"name\" : \"Daphne Durgan\"\n  },\n  \"name\" : \"Damion Skiles\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Wilkinson\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Angelica Abernathy Sr.\",\n      \"path\" : \"099ypxq8e9y3pa38fn\",\n      \"endpoint\" : \"7caifh64o59xqp1yhwufbsnq50kl3cdkxvcfnyy6xdqkivjdczxmqxs0ekpm4a2p7bdl6gtcbzlfivtzmt2cuy2oq96tvp6450vvorbcfnxcy1v6iuaozmh4xxmw0sfgri9mlt7\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n      },\n      \"region\" : \"ncjl6np8910uukphp05o6i707qimstxdj16yhrvwl7spu6dk1ezlm8069nc17an2zaws6pwszz5d9rmgas0sn71fesdf0on3bk42rxfetxvz\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"vmb3z4rco0meuv4lm1ulid9tvjiu1w6qk53i273kefjvfnhlhzdb632vp2trm8daqli4kp9b\",\n      \"path\" : \"nhvazm6p44y7r7bj85ccgk1ec6hacutdfb6qatlop86kt1zpt5b50orbm3zrnaeef99hm3b9v4bnuwaa99kupith1251jwtp6hokl0r4m3ml3utz9xqu3807welk4slo57j2exiidt1a29zqoave\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"i1u3h8qr2x3jh0tl9ypciysctbz066nlwo8tz5uoro8oiz8cm9840vzb115af0ldh19gtjggjek03sfjgpw4w4igb0o4f5dzmpkovzpj4rn\"\n      },\n      \"storageAccount\" : \"o6bjc9pqg04r769cp3t0azcjl3izn49p4hzfylehz1juusvs00so8v3gmov0cjssjzvlltyjznuyv98ogwxq6l7s60qgq5c7txq7ie71ji267mnitab4oyzdrrwl439864ws98m2cmi255asvyr\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"rdxsm3plxjgjnlnzkq0yka0xywzphxbj5tibrjtrvcqvbr\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Naomi Okuneva\",\n      \"path\" : \"eiwbi35gr213ibeseryzkxj0hrhu6kljc02i57a4qmojrrhlhwmp9rwxm53hphhblwzphotb9qbxxl4ytknucw3vhkffbejudv5cwyoh15d9ftrz36llssm7658aburnko2cudhb4w67q7dktoewyfy3tuq7qzxiije14g1\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"33fw\",\n        \"secretAccessKey\" : \"4bs8ehcek9zgkrkmlja6efivj0aypak8e74kn9bdol5t2d6unf9ym8xq9jm3p9wk1u48ckgxtdgngzin7bm4vm93a007nvaz5pa93qypk063725abcr42tvbs3cq78061589ycf15jh3ah7m6mei26yd9jysayu5zpx6xc8ycu74iwbwvsm6ko0mf9mqj\"\n      },\n      \"roleArn\" : \"gkfxacorwwgzlz13o2j525o4y5tilmivums46rwxuupw5pvk68ma7510350wznq\"\n    },\n    \"sourceAgentPoolName\" : \"Hammes\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Faustino Kshlerin\",\n      \"path\" : \"y9z1raam67jbjoeyzfnfk77nxoc271z7m9g94j1vxtw\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Connie Champlin\",\n      \"path\" : \"t7fo9jsfvp3cyud25yhfianmug2aeknh72apigftexxpic3d8dgf8i1jnne8zz1esh289w00tb3l6xtlwprzq27khwqryrg330tiopcvwd3su2e20cl3i3dj9onr0507xfx5duanu\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"n082zb7ggdlkxnxzmuisiog9f9h0jiubhpk5zkcmrdb9o3sodpw9dbbobp85y37c6i1g17iada6fvv0l4o7n\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2023-01-26T16:00:03.357285Z\",\n      \"includePrefixes\" : [ \"vlw6vx7lwy5inr6r28tmi2wt3ml35wsdgywucdgr60qm2425t16vlnrogn8fu5eevrjmgxhcnlf36dwvlzkz4138voxb1bwikppav3i8czt6tujlp102jpuaqchziwd0kzv4thjsgqs4gk2gl11k4hedvobzcvogyqlbl2grvor\", \"4rdqyz8ahfxn0ev88ug7r\" ],\n      \"lastModifiedBefore\" : \"psco5o8zew5am863zz367cmutu9gt1cpt08hk0l0b9hds85ied5kcw1810bypsla8uop7cbiot132amaevpauybnw7olwxneylo2mt7d6o08ighcf5zgq2lye295lydmf2ayox7gslg0i0ivy24m0shalrhmdejmscz736\",\n      \"lastModifiedSince\" : \"nset5h4mtpnixvnqr1fjvkb0bk1fdbva1290o53dutdubnqh9td95gevhdudjyug3c1x7kzk83dvjzr2tb8zjag829q1\",\n      \"excludePrefixes\" : [ \"hp6q502e50xxv7uuqofu0zp87vamu4jwzb5tu48mjiwf1nshfugm56eo4h9dirn90ayiyii0n6ppzdzku0pettu2zxua6rb8ans783tjw1euo79gz1usy01ya9nu1gqdv6me12sxlrhgw47cx7sa842n3iev8i1\", \"qwis5i0kt7u0ldwsv5d6qemv5a4ae2v\", \"s7u21qg54spmwjcyc5ptf3hnm9phddiz3j1a2eihjl78iojuf5cz98aggvyeqgr1y15m7toz0dz1kyrhwiu0deik6ybb7tfinl25b323vougkfoul6ftzoj08es9izixl398bjo8h6neknqziqo8m3602r27ojgspmh1em9b5n768v\", \"prse817dhzo5dkuetj9dtn39z0smrp4a733wcca6yq96tvhrggy4eipm4dmtysec27pw3klgfppi1nqci412jf7wvwxr83f0pnxxtcedyydshm50jq4nakgtrkr2vut900gs6y0nbdl5s2mfae446nwyxmyakl3qvhdhtgvkxgwlw0lkbc4xmtjrj4um7\", \"aytggvfa06c8mfvmy2ocxr9zfdj2dgbpqeg8423q88n9uomzcpd8ipw79eq3hvg6wv4hcy2r0naozde2bv0vis7jkzfx8ojsgjjrcrfq6ffl2g985e91sukirug2ry3f1\", \"8refzwgly7y0tvzuvs7mk0tw815l5kjy3mkzpdetzgs7mlkibfdcv8qdubclkzo5luk09ljuf1lm3upw3k0eb4n32pg7l4uzyhd4ln6srgln8va05jqpott5bhwpry121856kc7q23rfez9277vryebh98\", \"twjne48xc9lfcx28wrrhb2p90adu0htaoib87uuterk1tmvey4crc2pu26\", \"z715cogvxu4rzcxew3tg414wi1echa72fcx31pdl95kk5cgx1d0158cugye5dx7xhf\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-12-02T16:54:03.357424Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Alberto Rogahn MD\",\n      \"path\" : \"ccntwgs5n2l54vnnvfso32502e6i4j4l8vw7nl2hvhowpvyfgiwp1crak8aa1bva0bl4iu99w0yiz8jlr5n2mh4q0vhbkai22ynahnluhgcndf6g3gdfofodjishu16d8iyej4e820wz86bgsqtroozaozmvv29k1rwcmyolkeipw3amm80oyflhv887bbd6yikws\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/707554\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"4at7i2izt9szzqhxt4lfrzgtlox8lf9ns6fmtij32nh0xlxy2quvslgkd0fv0mthiz0h58ejanxjlc8afsfu877r3drrjyaz0ej5a3y5i224020nptakvp6d2f9yiucq7uil1lc8qcyatr8zwyltu37uvh0lx0yt2wbrwl7chgq\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_PRESERVE\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n        \"acl\" : \"ACL_UNSPECIFIED\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"DIFFERENT\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"rhmhxjitsgpohsz59e7cr5dk423mgwt4bv8z2xv8jr8x9091l5692dbfj4397odqkj0acsmfw0iwrxeaz742t7prr5dpyeu3ho7q4esekf4ij2w048nfqj49mr7itv4f7qb3d8tw0cceqskuo0uu7k7l6xeucf0t6ddun98jrkndf6da77h6omr7xnjz0d\",\n    \"payloadFormat\" : \"NONE\"\n  },\n  \"projectId\" : \"2lkv\",\n  \"latestOperationName\" : \"Mari Schoen\",\n  \"status\" : \"ENABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15ee8aa2-d019-4997-82a5-86f951d92fdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.358168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "46907f09-8c65-4875-8efe-0e5e6057f1b9",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Janna+Upton",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "w3jc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46907f09-8c65-4875-8efe-0e5e6057f1b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.356145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc297107-ee3b-40da-86f9-7469fbf6c265",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2023-03-06T13:29:03.35411Z\",\n  \"lastModificationTime\" : \"2022-09-08T16:07:03.354139Z\",\n  \"description\" : \"Blanditiis ut et. Eos nemo sunt nulla ipsa quod porro. Exercitationem blanditiis excepturi similique soluta. Iste autem ratione eum. Suscipit voluptates quia eius.\",\n  \"deletionTime\" : \"2022-10-25T13:37:03.354212Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1857502336,\n      \"year\" : 623698672,\n      \"day\" : 1107852950\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1894856650,\n      \"year\" : 1232340229,\n      \"day\" : 1742704765\n    },\n    \"repeatInterval\" : \"rds32p39dzqri5vgbkp6f5qmit3wq6sergjlglxb7y4o365sec5m1gkrc3y9mmxonmlcy2a1hw1v45akq8edgree8n2iemg41ix74zrtc21v6qopnx\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 2044277867,\n      \"seconds\" : 208877666,\n      \"nanos\" : 817898049,\n      \"minutes\" : 51240586\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1597738917,\n      \"seconds\" : 1981747274,\n      \"nanos\" : 227307446,\n      \"minutes\" : 1889733171\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"FAILED\", \"SUCCEEDED\", \"SUCCEEDED\", \"SUCCEEDED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-08-15T14:42:03.354395Z\",\n    \"eventStreamStartTime\" : \"2022-08-14T13:56:03.354426Z\",\n    \"name\" : \"Darnell Gislason\"\n  },\n  \"name\" : \"Beau Hahn\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Franecki\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Jeremy Rohan Sr.\",\n      \"path\" : \"fo5ngme0lbxx02sr7ktb6e2e5v4u1k4crql7tgb5iy2d6da2rxj2rxur2ann4b3a8mh60s8z9f4djp2b6k4akl6r71668klcll201sjitw00n80fr1muth4yon3u47oy4l7s7e5y0gdzl80cwt7rlfkgx905d0m802l7qohjx03i\",\n      \"endpoint\" : \"mn3ba6smen0rtw6uqou84ve05npk406jjg608v20szf5rk9hr975m79ffew719b55uz1j4wz\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n      },\n      \"region\" : \"8f5go1kwcreycbafl90q8bko9op7y2og7e1rujabjvb7a6llud3hme67j7q65dm5vgtgl0zuhrgbzy7xqy3tsww4y8ok5rm1t4z4fz8r2m03z33znylubgc46e1qadd90m1e4alk2rlpqfvmvbbfujekjlzagj7x2rt6uih29g6014vg7w34h59ykhvw4k7\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"xpud6dvsiy88zcsfgnx89r7hvt8oisic1qx58hheywbovc88p2b8a3oykrbutlfzc0zydw60i8vaq1222r6n4bfpjlw4e1iph29ph68xpt7hptgsfjv1e1tmr3gugrchftmccoai3lw3s9nyh2deub0fs974kjtndwvo5p3asddyze353r1i23d3v\",\n      \"path\" : \"lnzfu6vshcl7bh0wjxeh7mh88316o9czzauq3xfemdj3z2xucx73ep9piy4p1vv9rpy46\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"5pcti3quhv70gzprs6u9uqp7yll6lbzlbo5p3b904ehzm9q3mmc7v8oh599uw0g0i8zbe21o0vg2j3dmzyli8uuaso81nsmn9s9sq46sr55xqlybuf9ulpvffez1zh3yy4fb05k1r5aj8upd5gaedcfay49248k24p1eopbkmad\"\n      },\n      \"storageAccount\" : \"l0urx73x8qai4fsguaf1xk3axbbebultchpvc78x00mh7653ij9pbkeh5uxabek7et04lx8bgebc50m6oaq5kauof72n70c70b6fcy5n5jthe3fbv4kgmwnrs2ed99dou7hg5jxmzg4pqej4kwo303jm86lc9fkysucahakrq08bhdq9jgqeis1q2jn\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"8r9jeacb0yebx08ihedk5wp0ndy3\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Dr. Amberly Schimmel\",\n      \"path\" : \"drla7as6n8klejsv7rsi89mfup7nehf07inksx82svkx0zvdbtcrcp59hdegs9w8a9rq80msarv5onwzdqw7mm85fppdtumior7dldqxkkj3ofwxcgie6o6lrwkqextp2idwikbaoi2ri2y3d8k71zf6jiy9ee43v9ng4ee1wtu79lj18jsia20\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"2z05\",\n        \"secretAccessKey\" : \"naww2gurmophulvbueflpwb6q7faoxv8hgyl1avdh7i9eyfb8fqvvpnid0ihkvzzbmv4o7r8gq3s7dgrcazkoaownviwzy6axa\"\n      },\n      \"roleArn\" : \"thes9o1htz8l8c\"\n    },\n    \"sourceAgentPoolName\" : \"Abbott\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Mr. Pat Krajcik\",\n      \"path\" : \"mc8b8ilydf5nefi908tsdrz85o5i09\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Jamar Lang\",\n      \"path\" : \"f3vqaej653g116\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"co3mx1xgrz619vv5prnitaya95vthurq8v5x9f93vul7cigr3rd6i3xzvux3ni2wurcgqwawdyomep7yk4essxi8ibrmiduusg7pg0wq\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2023-01-04T17:24:03.355177Z\",\n      \"includePrefixes\" : [ \"zh77f5vg15us1scuxizyaiua4s06co5g594n0bt19yuc3ftl4qxrfuqsj267953th1juuujgwlkzgsw9nc18bao1zg51ubnogrunhzt1bvcdr0n8b1di\" ],\n      \"lastModifiedBefore\" : \"dsu3pk\",\n      \"lastModifiedSince\" : \"b493ne9n6y3vsbmwc34xikexsev2mds9klcaktyj1tcv8x6wx85i2adgoczhfu4cpjf5raohthcmzu5zkvuuuizigqthiy54z4ove779e6kna4l1m0ktktcxswct3fqye2\",\n      \"excludePrefixes\" : [ \"f7f1em8sn1owsn27a6pbu9ree6hmwb22l00w5l47bp1kotx061bk8ttallpatb45r5sll4f9mymgb12ay9yrsk9z5i8kzsajfd07bn3b6sndtfe40rfwh\", \"6kjxwotjnegf6a31wtrwyqjybtofhi8b0f5jx8z01j7j8ncsl2di4gf5jchbyayxung558jq0q8wt3oa4yd2mx5uac2yofqbzw6sbzusw3eei9oxipbs5mv3ob2oos7kxqivnbtr5uid6mpepsgkc6uql3ueqt7yoimir82r4nf6j2l4jhoj5pmb\", \"11bwd9yykgz8ahg6eizyjv3vg3cdfo5562u6ec\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-03-08T15:33:03.355281Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Newton Hermann\",\n      \"path\" : \"92oxor5fhn6dfp00zkrz\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/918179\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"mltj48ixjwqst467yhre\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_PRESERVE\",\n        \"uid\" : \"UID_UNSPECIFIED\",\n        \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n        \"gid\" : \"GID_NUMBER\",\n        \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_UNSPECIFIED\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"DIFFERENT\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\" ],\n    \"pubsubTopic\" : \"ii2rcdxmi5d4m62myf8ifa3r0j46f5tzg7a81owxp5v9jgvl8i7pnv7tquo7ulaz6edclrlkqkhbyvoqdqf75xqeoz5n0ffbiswkpysklo7y8y3tpbhj4td2xm1ydjtintxtgj4xy3iao8hxflc5w13dfzwow2c88pehqkmmh2prv41f58zl\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"64u2\",\n  \"latestOperationName\" : \"Courtney Fay MD\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc297107-ee3b-40da-86f9-7469fbf6c265",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.35596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bf0606bd-3deb-4b41-8239-c1cf29509e61",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "u3a2sqh9jc15w7p3lbm3zpb54i04ex3pbp7s5ia6bfn21ptdhy891063i7xxkajbkjjj7d0wkywk5vr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"k05wdqpuwb8mugf3bwlf9kv4wdb08o0xuch00gkpnc5d2mc0km3ye3tehtxhwjv2jpq6ccan9n863bpq2f\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-11-19T17:11:03.348337Z\",\n    \"lastModificationTime\" : \"2022-12-16T15:02:03.348373Z\",\n    \"description\" : \"Qui repudiandae beatae molestiae repellat earum. Ratione nihil vel. Repellendus sed culpa corrupti rerum sit dignissimos.\",\n    \"deletionTime\" : \"2022-06-30T15:07:03.348445Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 401958949,\n        \"year\" : 543192055,\n        \"day\" : 146716568\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 171313197,\n        \"year\" : 406517070,\n        \"day\" : 1406535599\n      },\n      \"repeatInterval\" : \"qak8r4kf2ts6gey3ca0yfv6le8bd1ttic9tir8wlyp1oo78rj9z9eonnbchmin32mp7vrz7o1vkvk0ls9vsqaolsblihlaeqoakhg61zsiwo86fzh0fin8v3i5ik6ln1ukn8p76n0cyer75gusxs4grp1tq799udsz1rwyqc2g9aanaf2vu8ubceqyl0hmvkvbpt2mc\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1355014550,\n        \"seconds\" : 1280554324,\n        \"nanos\" : 397035056,\n        \"minutes\" : 260802644\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1499506090,\n        \"seconds\" : 611926639,\n        \"nanos\" : 118764103,\n        \"minutes\" : 1837261289\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-12-07T17:21:03.348679Z\",\n      \"eventStreamStartTime\" : \"2023-01-11T15:55:03.348716Z\",\n      \"name\" : \"Marvella Strosin\"\n    },\n    \"name\" : \"Felicitas Sporer Sr.\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Stiedemann\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Gerry Ankunding\",\n        \"path\" : \"y9jjv57mzc7l3kvkxwu1j7wdyldubpstvm\",\n        \"endpoint\" : \"qqcjcwuhvmqc8uy1nsponlw9fe57qvio37szsxabd6qouhg09cr8x0hahxujxdci53hbfomn94hdg37ijwxeiwg2g03\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_OBJECTS_V2\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"mtu77mq6q4u47o9yydh5qi84lhy3xdufokr0hrbk2sfdv3my51guslwj6cpztp69d21f7a9nu89hbgdwoih1j811m1zdnxdpknmacrk9iw8a01de18wxnfyrnx4yvqvhu3040tfdp0czgrjuuvdr5qlxm2xhtjd6zu96wlrzxwa9hhndzzwi3kevfi\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"wfn3r75vk4lul4nc4bkmeaqv44woob166uqzmewgb393b3\",\n        \"path\" : \"j1zwe8r30yobqka7shbk0oclzggf43xzwafa0h7su4lkfpgkil80af66y4el22mqbmiq8wgx4b0xfia2o711yy41n7w53ddh16680twnhm3ggyruvzxliayyywzmdrl8e3k4qxa12f0rp13oqxauwv1iy0jb59a65j0\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"50risqvwhqrov8peclkb9ee1swdkiht6uszi95waodyp92od8c2etrfbjoexijleazwk1mvlnfbniaq00vzshkwiu1wacm5hr8qsmsbz81ao69eo7kvx9x0khl1jbupfd\"\n        },\n        \"storageAccount\" : \"dnlabsq65452bly123fryhp50aofxl2wkeofx66q530v6shs3bvbwf17mir3u10t14vwgmfzx0ntyqf5li1api11pacwj7b3p3sqsc5xc\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"eafkksz0sm9j4nmok5bakyhqnwa171r7td3ewyhlqmfknh3132qpzfrh8le1snjq18ncgger37awcsb4asoch\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Kent Hoppe\",\n        \"path\" : \"oxkee1dv4ik9xqipr6w434khzs0po9jz7ayw4jo8ra7jbvoy4c16hjly7a0a14hlg9fxj9kjlb1wb5fi\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"3001\",\n          \"secretAccessKey\" : \"bxr1676mijkciuij8nobyrmnav3lguzegu6fpgaspkjaiff08wpj8bit7pawd6llp8c1mzvssrt4pnxlbdbvmjp62bvaj\"\n        },\n        \"roleArn\" : \"2mgshp6h2xplkekfjecf6p747rh7obvsrwky3qfbpm6peetc3s6oe5ojgfsd5lo0pb1s678j1q0ytjvk8hd\"\n      },\n      \"sourceAgentPoolName\" : \"Hills\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Ms. Travis McGlynn\",\n        \"path\" : \"jtdkf4l9v1fr2wz8d3m2ytln2e349u6lp0v4lf4ldgcdk3auxkqqnzu983g6hcmflty8jg36963kfefvxee07xovbieo8og9hvzi5ladjeci3807cvdeokdsx68rqipbbo55ej1tkiguz2uaig7oujjhorm6ip53\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Willian Mertz\",\n        \"path\" : \"5a2yklb7tozntwao3aofn11ms2c97w12c4pdzw5\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"b033eotywl6tlgztldeahevqyomq6yv7j7rxaa909lm0yjr9sb0d7uacg1h23n93ipbxb1l\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-09-30T17:08:03.349559Z\",\n        \"includePrefixes\" : [ \"lsczl1q5fsnj2lkayoys1r331ow12ar5d30swc7b75u9g71dvk84o3815t9x9goy3yonpll647lz9h8xfb7sgz4ax\", \"tfrov12k2geq\", \"km550rqcf8psn\" ],\n        \"lastModifiedBefore\" : \"cbtebhiwacw9r0qpc1nqieof4jd64g78wglhege8otonue0zaqg3y2e026m852nqe18ow27gz8suicf2p97n3g2jeh6ic\",\n        \"lastModifiedSince\" : \"iromtpim5p4bl22rjkfql8fkrlsmzh5bj2ds\",\n        \"excludePrefixes\" : [ \"rpxrpdillsmqkmm8ifl28my8wr1eyc5knsytcooow6gfs5bkxjs7f7mlom46bxmahhxuwnaf7o5co0lhzogkg6cry40w48y59mn58ey5l6dsqol8adois5qhdblgperegavas435isk36x7s14lf33n455wglqflk5lum\", \"4r4dfm8d0c9w8dxu5a6o2hjcx0euulbaavbt5sofmqaka1rgxm3utul8z3fo\", \"gqp6c39iw1rz4g9m1d1dsqwdxxmn8y9ckq5y08a4sj25pa2adtcifj7s1mr9xbpbdenlfnlctufo2bftsezpdhwrd8e5axgrjeslbwo3aeg0ljo47d7i0r6n2aedkcxtbt0spve\", \"3l4u2dg9oeje1qf7ntskhe5upmv67ib2htfnel9bzg05snxoyynkd9xx1s7ffqo7tdeckyo85r6uub2p4so4mxzmajc4fn863jurbovlmly1zpcryn1n6zt08xtyh3qbqwjfdoka1n4ivtlar0g9eiqch0d8coj06ktn5ar2a0462o0\", \"38906a1z5feo3rrm28ly8tefbbzplcky8my4no0\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-08-31T13:34:03.349701Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Miss Keith Stoltenberg\",\n        \"path\" : \"xhel3trliuusdf64ojs24a269xm5rvaasnmc4xda1w9sz6nyswkwtqvstn016ispnbn695benqbgxa0ovi7azsmwhn5i40av\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/147599\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"o93in85x10fet4r4n2ddk4kdyfp88y9iu9zy7hl4md1srwsjr6mdoprqgku\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"DIFFERENT\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"zlxsb2vjg7anoelww5iyc3hgnpzdp6a9idqmtkbgnqecz6ykgi13yocfp0vpbm1us0w8doy8e8h1tn8ulzvan5j95dschgym\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"688c\",\n    \"latestOperationName\" : \"Tran Cronin\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2022-11-05T14:14:03.350273Z\",\n    \"lastModificationTime\" : \"2022-05-25T15:55:03.350306Z\",\n    \"description\" : \"Quae tempore fuga. Non voluptas quae fugiat inventore alias. Alias eos quia nesciunt libero est aut. Voluptatibus in repellat.\",\n    \"deletionTime\" : \"2023-01-09T14:31:03.350386Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1095702905,\n        \"year\" : 1466636147,\n        \"day\" : 2047942320\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1434463289,\n        \"year\" : 1136008676,\n        \"day\" : 1564460024\n      },\n      \"repeatInterval\" : \"9ahhnm3bfnr47ih4p9yt9pdrisii2cnjdw9fgd3\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1084661454,\n        \"seconds\" : 1093079109,\n        \"nanos\" : 1501072201,\n        \"minutes\" : 824172260\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1137314590,\n        \"seconds\" : 1194087482,\n        \"nanos\" : 1606256697,\n        \"minutes\" : 1936099354\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"DELETE\", \"FIND\", \"COPY\", \"COPY\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"FAILED\", \"FAILED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-01-26T16:12:03.350586Z\",\n      \"eventStreamStartTime\" : \"2022-08-15T13:39:03.350618Z\",\n      \"name\" : \"Lawerence Kovacek\"\n    },\n    \"name\" : \"Melanie Jones\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Blanda\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Dr. Abel Tremblay\",\n        \"path\" : \"g2sh6hebz63cgy33e5rx7nnmogw0mq1snzx9cejh23espjucpjzo0op9anxil380goyuukns3h6m8yqglj2pwrgccxqpk851i0j8l6x8nwrbgtdfgk2l3xfv7y50ek8e78lc49uymwyp1q44fgpwg1797hc2wv0o18e8szi98sl54lurhhe3vnzrs49phlymekcd\",\n        \"endpoint\" : \"q6nmzqze147ap2r505r7n4g2g1fqyusnblomn5ui19wyaahdu9h5b7twqv259axcn1ji2mbc2s19nzsryt4nu4weq06eut55jp2p5oxznumhyk2cm\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"mmtc7sjh1k8mer6spr7ec0bygvcjn9vr4h2559kgmghs2mk3kl7ld36p0hnnvb2q9nlbhs7om7zck8480ffnsftj2dn77ukeoa35l0327801o1uvow8zbyvh282305kaerhgbfww2jtkmxv5t1qq0\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"3tsgoob0wxkk6l4lq5jpu9p2fjozm3t5h2v84dtscscjcrw8srkjb2m4pe5i9lu1inqf809li5oy2lxit19tzdwyq5d67l46ym7ek\",\n        \"path\" : \"6am6x57jpr7wluxg5zclooqhnt1vusp7y6xj7s85hs8n7pe5rao5h5lxa1jitu33n9t0glex2owvxk9lgh4187edqyhl\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"speuauo8fp2ddrws74jwgjdln0yb8879dgzv9byage6sdhwhkg78njg43g2ssbexv1vfxjfdgxizzbloaafdkw4ednzy89qln39a9uw7ayy3pheuakt4ofuvyjynuelqstml5xkeo19mc8rnwcnf979p6yzikgyjwka2dor7618upg56boq4c5\"\n        },\n        \"storageAccount\" : \"vwde0cuvkqq41rfeij6xy9ah0yrm4or7ww2j4hoi132z914r77e99dmko12j5k5ne0947ldd6eqinb4ueqim6by2i1opsu2v3u0jnl97zj2ytyh8a7v1ea8\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"s61nibvfwtkmq8vg305vankl3wl6qkqcjktkgt4i8cddtqu5idnq3y5ephrk1nakl72jol5fs5lb2r2t1kwafv6kpvt\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Leonora Jones\",\n        \"path\" : \"wyuisrnzqwbjuweq81qxl0w1ggf5i9vasev1t8wf1ar0q9u1hmgf7z2uuf9049ubk021degtfmlhjlak319q1xm7mdojuihlm9i7pl0jxgdwws4ab2ottnrhcneoh7uljgbg76sy7k7nqwd0nr7k2jmjbhl94gxi8cdav4wthhgsbb0y0a5zhjnu\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"4z31\",\n          \"secretAccessKey\" : \"k5od51dhf6iggfi82mtydm67mvq6pp3ktmpek7ormmr94ht5mfzvw864ikbbrp14x110g2d6tdsztrj8rgy2yyxzk594h\"\n        },\n        \"roleArn\" : \"baqiw9sfiyqgdvuod2vhzqcg0emlfiwsyweg9822fpcutawd5lumc7h21axzedbi4kfdjtfw3mv9ouh7d0r4sxjyyfy8d2h6grpmipj\"\n      },\n      \"sourceAgentPoolName\" : \"Vandervort\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Leida Willms\",\n        \"path\" : \"bmzqb0v3foejk515zxr3x6wrbjbqsdiq6s2y43u4vfd6l14iziid3daz8fziqnsx7xjwcts967bhdpaxvdq4e7pfnbw86mn4bzeccmlv1ngyeg09b692i3o472i7w2oedw7qq4zd0pcv2ik\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Ms. Hang Von\",\n        \"path\" : \"ylx7jood4bxgq2n4dl5t9gnnvec7t120ous4l7m2272dgg88mtjaynk8n7cmn7iv78r1ql2xjh4nqz932npw451aprqj607f5ow65n0inp5qvss92emcdk1w4cj4y8tvxabm64kmuk4xgxpuz3megq\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"nrr7bhlnn5whtgadv78d6jsf50nw27akoe4e5lpzg7n7j2a1fsvxdruz508uq3saknefu6y0gskle6k9s5tomxrpz4d4hjujbp9azqs1x4uaem4kntlsk1ba8kicjy1bid8v0v7uuuihvse86iobsju\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-10-15T15:20:03.351402Z\",\n        \"includePrefixes\" : [ \"gthdurjgj3lnlqmuf2zaj86wm2d54vx5ub3wy2e53ir0uc528hrdiix7bak1ug7vk7nhcn9ma7f6uumjk7opp76jv28u5i00ed59xfd23nvoxy4h9mguga2sq7dhtehwn1xtoxq216i28i83wkdlg09j\", \"cndxviuftx\", \"0pcnv88nd8kpp32o1f1qrg59uq8suumupud2uqm70nbahi6ax0gw2l8d1n3mibjnis0wmcjkdr3nuiqfgk47a8kd7gsqh7b5ezaw15n7u6qjganmf71vp5x88h2x35xjyf3s42iffm14z6js8t7s267bniv145aymsikwd5i5\", \"d5h86zcsrw4ifn8zpgznumtkm7ryp3sxsu7nlbe98qikv0m51imjo815o1mcd1gm1u55kwdv4s4rkop6x1s8suzi0x99s4n85enq170vxecjpbi69ur3l3gyi3y4\" ],\n        \"lastModifiedBefore\" : \"fpz6iid2516l88y8dgizmy9h7xtmyuov8m7cnhqrvseif0j3v25zmsf4der9u6ds3m3k10ea5srwrh1cseev28tfzyg8zacrcrzpnz8pex1tw8qwtc26kn0l3xxf2d8d3rbfu29vxrp4fs2f3gswk8srr\",\n        \"lastModifiedSince\" : \"62wask8hgyxlu7e\",\n        \"excludePrefixes\" : [ \"5hya6b1zpmu0ph3wbzu9a4w8osvy5dafro2l9rq666xj3od7uxske62xe9dz10plgp8t4cu1cp7cu4e2i36h37hvbvwxs31ac5859a1ftvojeyrx3dl6634yezt2xeo8nj22zhjwad9rd748p8gsb65afgym0wod93nbw9\", \"0fglga9eeq4rhd4vmiqoy8pm8gpzp4765yno1laeiq092m9c8gwo7v0lurjk29ql180gziwtcg1dsbgcnw0tanz9ol9sqnatwj2goeo7mv1fv0e9dv0d3khiwmcolfb30y8deomv1r2iwk2l337jmhff7amr45s3fdsm899bt\", \"kb4ndxt5suq187nvq6o1fw0vazfbw5cmlsvzwuesldz42n7w4z2u3ly80ouuosw4524m2gpd0dxzw598x3vh7o3m2eu\", \"098a8hg1txob98djvr8ewxuh67bmp5amhz90\", \"k9ajzk7c6uuky8\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-09-02T13:42:03.351541Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Jasmine Zboncak\",\n        \"path\" : \"v1zjn96f59irty5oihl56kuhl5grkee6x0e3fnc9zebfqkpsf64ktrprunuxcsd154fmqcr0wtfzmq54zevl1o1m8l1\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/615384\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"4ps6g9cqb52mizq5n0179qfjk8bm0kmgwnklogsasukv08xbw42b908br6d2arm9wvvnpfrg2ng4o7kok1zco6popn8pwe72s6vp7kvw9\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"DIFFERENT\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"ht76kekko3q9np1zgdipdyjnvt7emzl5sx2xdi0momdvxc5xat31lgr6dd22h6fkmmv0skokptqmuyn7r\",\n      \"payloadFormat\" : \"NONE\"\n    },\n    \"projectId\" : \"3caa\",\n    \"latestOperationName\" : \"Cammy Pouros\",\n    \"status\" : \"DISABLED\"\n  }, {\n    \"creationTime\" : \"2022-08-30T15:10:03.352063Z\",\n    \"lastModificationTime\" : \"2023-02-22T13:36:03.352094Z\",\n    \"description\" : \"Necessitatibus suscipit quo aliquam eaque enim nam. Quia mollitia pariatur autem. Occaecati totam rerum dolorum. Sed dolore et.\",\n    \"deletionTime\" : \"2022-10-08T14:36:03.352161Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1634261686,\n        \"year\" : 1533521914,\n        \"day\" : 425398530\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1892976513,\n        \"year\" : 1730685593,\n        \"day\" : 405467396\n      },\n      \"repeatInterval\" : \"beqrpmley38tiwiwjfvpbztsl0u71azfy5omxpz9wv7eeduwfkpj9fowlr5ln11xck2\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 158744387,\n        \"seconds\" : 1448270800,\n        \"nanos\" : 1542750956,\n        \"minutes\" : 598741174\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1044864,\n        \"seconds\" : 868842514,\n        \"nanos\" : 108735641,\n        \"minutes\" : 883858837\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"DELETE\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"FAILED\", \"SUCCEEDED\", \"SUCCEEDED\", \"SUCCEEDED\", \"SUCCEEDED\", \"FAILED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-01-09T15:08:03.352366Z\",\n      \"eventStreamStartTime\" : \"2023-03-03T17:20:03.352399Z\",\n      \"name\" : \"Mike Dickinson\"\n    },\n    \"name\" : \"Mildred Murazik\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Pfeffer\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Dr. Dylan Hoeger\",\n        \"path\" : \"mjh8v9x5ypwz34xnhwufxc5qv2o390rxmmwho9jury4v7fn44bu31m2uu3vpvtaxete4hmn92skxj73s60zu2ux9dn5jmmwajln4ozfrtvnx7lxkzr1x8\",\n        \"endpoint\" : \"oq9lope9e689vwldc6ny05xqi9altevavwzigmlf0c0ql1ip4bg7hm2lmw8eavkxga7j0dgokscfzboazzgl9j5yrl7yaopu7kl4c8jev5eeqbkdqpgt76i2t7m8i5prrjl901rxhwkdbeyxo65zvxus0wq5g2s7w6rlduwn98sp168uqhxrxm\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_OBJECTS_V2\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"nrsfdoblgw7tyg5wt6cudfjv5x4zggla035m6kgoycwlsux9kk0927xurgub9is9ekc31djkpycrqunqmc88x2hh1i91t9qs9ga57ja6iqct1ojdyylm0wlcanfzfjd1jhr5h63n8eckb7u0ozf8ws\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"vp3nfenzyx8nnh6kb2uht18vrs9bmmbwoywg1ai2y9xzkawmi8zcie7glq7k3fqj1xt7jfqfan9eu8oxixus9y5g9ykyvc88xyfdwvzvb8t79waaru8o6c6frlt8mbjhpwxz1s\",\n        \"path\" : \"nrvs2ckoz5mhq3wwp3yn5vy2ewsd8rgvelf7df72hkex7zakj4zgbyaylrdy1mofi2mwqfqoe99bddtyailmclosxwws7nqkndoz5c8cyit5185y0zkomxbueilbzl8wv2htvuh0li4bxpp8ypc6c9823\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"zr63ostuawbcck40g6h9n5whi8gfgn7ts7cm9cij9mn5o9gj8ri9zjyof7oa1j52ch89xql46bum8pyaefmzvi2wcjauz8rpw5eq7mo0n7cradtm1fvlo8pafn5tzbxfk6nfc1ssxhhk1wyrrrwx\"\n        },\n        \"storageAccount\" : \"0jeyp8vo9z19crfccajcjm6qjcf5ptgbwvp1yosulyjh4bk\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"15xbsg28mw06hp3w7iqrnrs2kiv2ty91v51l0\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Jordan Fadel\",\n        \"path\" : \"370udg6j4klzukedxkczsdb2694fcvm0mbclysjvownvulzkk5xepsvihadruwpbzlps7mr3s3un8idsg1yiw31w75nd9m6pu9yq5krg72y0jamowydbac8v90v93i\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"0831\",\n          \"secretAccessKey\" : \"2z1fooy0u\"\n        },\n        \"roleArn\" : \"sa1btqgwziaiblrrel4a1tn\"\n      },\n      \"sourceAgentPoolName\" : \"Price\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Hee Roob V\",\n        \"path\" : \"jp5wxkevrpw474d1o0a2ta9viwrcbfn96yxbwr2b1j17qmn3fpo30ha2dlne7cujvsfmevoyz0txgmg4j22ldrq52frjw8igfcut2nzu30nh53cczig8mqq83dg6z2ilkib3gulxjm352k2wfek6vzhze8hon8w3rg8wi502xyy6ujb6v98t9h9rhbflwc\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Miss Julietta Funk\",\n        \"path\" : \"97nv6vjs11dwwviem260fjm5vyvasdcz826hku4aap3lda8ve32bdd332cyvmer4z72t7hbp99074y2ntdkqd71o9cd2g04ombwpy1pqs9jc2t29psbfpbjtz59jqdhdh2szqbckx\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"kl2zc5z7g\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-06-06T15:35:03.353207Z\",\n        \"includePrefixes\" : [ \"2f69vs2lmzp3mg724jaxuquxifzphjd10nohhmk138o6nl643jqelvg8ln9r0qdd5bn8a07wob5x\", \"jmsmxnnmev5zx8ehfynnce2hrc9vfx0df5qrmgk6scie8zrn6ijfc942uergli192kyrztltl5akgqhlyv1375pvvrasdlm6j1h1t93impid2qxj5xyw5ite1tb8qa3tm1mtr1iz6exh62whlpclhp41f9hhuujizkefag6qs33d8bkep9m60e65z7t86l4lbngcqzqc\", \"lj9b3gia4kv5i7mqvak9x2ne741548dglwowxpbizkodtqj88qc5loa2jfmtelevcn1hi8xagftly95vb5n71yoqhfwax2m3n8lweqotp0ltsilbrgjyhw0lqz3iltfuamizsh3379k98fvn2indhqssil7vfd7c5a6lw875e4mtgrmjipsuultu\", \"0kw9w315x52h99tqgw4zgo54swfuzg3lr31qlr1mch61b2j0zb1a619tat6dtq2r39jcqa1tiw93ubt41vlcae2vovhvqqxyg063er6qqaq313c7v7lu4oqk6adn6vuab5f4m62xj4hy9fstrq8bw2rxgrl68e2bugmii\", \"wh30whs86wefeq46kgtat7pu5e3244nf7usfypl3v1uoin0fw5ld37xsghkwg\", \"e7a7glsjj2z9wpwimu2lnfyhwccrrh68tdcn0g8dipf2dskprndq2otnooltgvn8yzh9hbrttt9y75jzlaqd2esteexmkgqkpg7ff\" ],\n        \"lastModifiedBefore\" : \"fsr9cy24ygr1yyf7nsg5tvvok8i2zcvykvfb5v7kusoijamthbr8b44qx2y4dynhgbylhod9uiwczb7lfxx69ux4otf8gfbwhoxjo1otgj3r29b8l6i98a9v0lg6pbcwxqi04liji2jzd41jrrbxk0x58dljfm9mrz01w61b3ne3cw3l57rgwodkqh3rvwrl\",\n        \"lastModifiedSince\" : \"6p3tar8lfamfbq2h8qzzgghobi9wt42lroquc0na5maj\",\n        \"excludePrefixes\" : [ \"2h23l6gs7o3\", \"n207ijq83ge0zc3y1st2shoaulnt246aw6tnokuzf5fy1s87osfozrhylwmwpsyjq470ghmeq4x275jp7c09zrlcxrc33acz3evm0d6s0wbsppjfj5qdjsyseq8xqm25itfgic\", \"ua4phsiz9s5snqevj1ootvq88me94y2rgv1czglyym3m\", \"q522sjv14qfkpasumr3t37doky9x4loqbux146bob9oj36npsvq9js30zdhh8foij3pf2ub2ux8\", \"5j28om64d727goh9hvepal5iydw55g16toutvb7tsi3lcbarcpouw3vck0s2wev8jkwcpiytqdryr1b281ywftlczxdfdpjpt1zljc4jjya57znrcugyjfv4s67u86oyd1d8zsoddzzomgm6om60p6qyu956d4ujbdgaqja8xq4yu4wqdsfmbq\", \"aozyg60ft6hee926ah5gvp3q7xof3uc979c1h819tctbmga5z3om0kbxojumgsditxlv0h2lnwmfhiorvn8lis6n8eza6fdkceynhp0q32wnfr0yy2sg3tjog3k7hlxmos\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-08-11T15:32:03.353361Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Sherley Johnston\",\n        \"path\" : \"r9vnv2vu8g002af11rvphbb2fmk4li1qk259zl8ck67qqqahws8gkyx4odjoh64bawcbqa07dizmhwx3o1merd0lb7148g8bnfr9rgjyws8vclkynsvanzkweyffsdmz00vsuf57z4bt2dbgsi2gj5danp4iewvyax7rlc2ssfzdxzlbg04lkmvos\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/129482\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"46objwrqgmbnv7hbymwedr3qftnob6lp94oh5yxrj88d2o4yabo5dz50pfw7co4z6zhw02griwr5\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n          \"gid\" : \"GID_SKIP\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"DIFFERENT\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"2dykovq3ua9yhnu055rlujp8yjx5fauni8gw55ddkiu1jmn3t1gsgusbexsfh7sj0\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"664o\",\n    \"latestOperationName\" : \"Jeffrey Ullrich\",\n    \"status\" : \"DISABLED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf0606bd-3deb-4b41-8239-c1cf29509e61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.354054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cabff302-911f-4bcf-ad59-b811faf873c0",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/xkr3/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Hal Huel\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"io80exr0qtlggalzyk5j3qeit\"\n  },\n  \"name\" : \"Elisa Lynch V\",\n  \"state\" : \"DELETING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cabff302-911f-4bcf-ad59-b811faf873c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.34826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "34e43d85-dcc6-4b8f-b2a0-69d84ace92db",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/007b/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"yom1zg12yr7\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Sandy Sauer IV\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"qwd8nmw7pmh23w2nv1al0zilafyfryqswpdrck17udzwf7mmyqfrcy3rsx0an5bzmbvp\"\n    },\n    \"name\" : \"Tamiko Walsh\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"displayName\" : \"Donita Runte\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"6hrk3oa97yb3b54uhhicxwrxa86kxgu880mx8taa5tbbbb9jes69k7zdg2rrnuwvi437qe8mkuv5p61hviiernpvxgyeabo1xxu76ntyde1uuitxi7xh4hi672xy1eaqxfz0iz4eboaecal9bkpo1wo4k9pi0w1ulbiuozee4caw\"\n    },\n    \"name\" : \"Wallace King\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"displayName\" : \"Cassi Gutmann\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"xfw6cj4l0q9zfkspp0bt6mvdkmi3ee52lcym0yjqfn38cninlydxuxkjk2w6k0dj240oq3vmszirsonalpp9rc92kpt2wai8xj0b\"\n    },\n    \"name\" : \"Clement Schmitt PhD\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"displayName\" : \"Peter Leffler V\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"ms29ebd5ltlqn4skn0xctsc82ofmx19b45xxsbme6bawwn6dg9lo74hb13fkll2zw8nlolk4vsjj\"\n    },\n    \"name\" : \"Daryl Pollich\",\n    \"state\" : \"CREATED\"\n  }, {\n    \"displayName\" : \"Genevieve Heidenreich\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"qa92qmxing9f0zibifsijut2x4yatn5h0yflutis2ivnqz1cvhyiverfvn0lc4imq4h833y51segf56rn05w9oswhrxszkj903j6kf00v49ixl7fxyf1z52fa4w3qznef1t93epjxvltpm2ey0mr4gomk2q0lu2kb4idy6vz6lyus87khxuw3ebek9bo8hho\"\n    },\n    \"name\" : \"Russ Swift\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Dana Wuckert\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"0k8m63ikaixav0km7q3qzmboqh544bznyzjdpz2tnepg7s1gx30fj44dju9f4b6qtklw5k26eg2n9ezhywsi1xkmcnzwxoo6omrzidi9axc8xuu6tdm360aw41d9qb1touxnlff6b5q1jiy2m2pei1muc\"\n    },\n    \"name\" : \"Lucio Wyman\",\n    \"state\" : \"CREATING\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34e43d85-dcc6-4b8f-b2a0-69d84ace92db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.34798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "52b9ac12-54ad-4397-9f4c-14f5758c1346",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/mrb5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"asbf6ji1hq9x09be4sykxglwjiox6xt0e3fzlbumludio10zj32enccpqe97hnxbp4lwwpw26q4x0v5d3vv2j08iwf3sb1vc7wthu7qyearqtmmugj8yhywls9z9kn03ba4nomy5akwwqo2guw1r4bps2102nlp4vi9apqlv3i5ssbyy19b4hjn\",\n  \"subjectId\" : \"9354\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52b9ac12-54ad-4397-9f4c-14f5758c1346",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:03.347081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}