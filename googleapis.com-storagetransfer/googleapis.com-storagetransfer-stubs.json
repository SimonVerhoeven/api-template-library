{
  "mappings" : [ {
    "id" : "a1ee5cd2-ef25-41e2-9610-0c8edc63c183",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Jerrell+Larkin+Sr.:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1ee5cd2-ef25-41e2-9610-0c8edc63c183",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.896444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5dd4c053-7d45-43cb-9bde-a52d89346f6c",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Ronald+Brown:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5dd4c053-7d45-43cb-9bde-a52d89346f6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.896378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c9478d94-b08a-4e4b-9310-0b42fa983579",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Antonia+Ortiz:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9478d94-b08a-4e4b-9310-0b42fa983579",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.89631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec80c8fa-3744-4953-a876-151b92615bbf",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Faustino+Satterfield+I",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Otis Ferry\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"jntb25nc9dewdtl685zwmmuc0fp2169teta1mbqnzh21516kseweoclmlrs8dnv34xslr1qxdh5oqzwe9wdt13z9ok1y8ymvsd9s02ap1d0zsw4cxyjh8fb870v67np0\"\n  },\n  \"name\" : \"Mr. Marion Dickinson\",\n  \"state\" : \"STATE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec80c8fa-3744-4953-a876-151b92615bbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.896244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4cf9d393-9733-40db-85f9-5f32b2729f4c",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Denna+Quigley+II",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "4m5tp2uzxci8kglrjdopr0jebo1ag5hiar5iu1uljraepympwrcsrfy8hqadeah1a7z0ftguxih9zz2bqylt9ip6kq43i33n6dv6ret2zsnbed3y0t9p07592rzgkg3z1ixoew12t5d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chanel Watsica\",\n    \"error\" : {\n      \"code\" : 1308244699,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Odio qui quidem et. Ut enim itaque fugiat. Nihil aliquid suscipit odio harum quia. Molestiae eum sed qui sint excepturi vitae quo.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cary Bergstrom\",\n    \"error\" : {\n      \"code\" : 1809390781,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Natus provident animi fugiat modi iste tenetur. Dolores ab nisi. Voluptatem atque quod sunt autem quam. Consequatur quia ea. Dolorem fugiat est quia placeat corrupti.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Aracelis Leannon III\",\n    \"error\" : {\n      \"code\" : 1943508026,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Reprehenderit illum sunt sed. Magnam non exercitationem harum dolorem dolores. Aut qui doloremque voluptatem modi atque delectus et.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"u39hc648ru62am\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cf9d393-9733-40db-85f9-5f32b2729f4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.896029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3e95c121-c8d7-4b80-8d63-d22b278f2d97",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Daron+Jacobs",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e95c121-c8d7-4b80-8d63-d22b278f2d97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.895619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "017a6b09-0c72-4380-aa7c-8eb184d5da16",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Marina+Volkman:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Hanh Block\",\n  \"error\" : {\n    \"code\" : 1583161356,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Doloribus vel est architecto ea debitis in. Soluta et quis in aut. Quia ipsam dolores nihil repellat enim.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "017a6b09-0c72-4380-aa7c-8eb184d5da16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.895547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "92b7ce39-7598-4bd0-985e-752816597649",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Granville+Veum",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-06-21T17:05:26.893789Z\",\n  \"lastModificationTime\" : \"2022-10-13T17:27:26.893816Z\",\n  \"description\" : \"Voluptas sunt facere qui quam rerum atque totam. Quasi suscipit nostrum dicta sit nesciunt veritatis. Est in temporibus. Est tempora molestiae impedit explicabo in. Voluptatem sed ipsam.\",\n  \"deletionTime\" : \"2022-09-30T18:03:26.893876Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 815576565,\n      \"year\" : 1455707808,\n      \"day\" : 66978293\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 286003047,\n      \"year\" : 1771045207,\n      \"day\" : 181743744\n    },\n    \"repeatInterval\" : \"g901hqfmbj853o2mx7h7sw20\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 200803047,\n      \"seconds\" : 1687496288,\n      \"nanos\" : 1350873865,\n      \"minutes\" : 1621702038\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1226119511,\n      \"seconds\" : 628879657,\n      \"nanos\" : 613835493,\n      \"minutes\" : 394537935\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-04-02T17:48:26.894022Z\",\n    \"eventStreamStartTime\" : \"2022-10-13T17:29:26.894052Z\",\n    \"name\" : \"Brian Lindgren\"\n  },\n  \"name\" : \"Ollie Harber\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"McGlynn\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Johnathan Hammes\",\n      \"path\" : \"tvgc8i0tocfzfq646o4n5yt68vr09xspbivf6w7gad5yz9qfm4k1p3s\",\n      \"endpoint\" : \"0sew5vch3bkp7957sbecn6qb62wazy88\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n        \"listApi\" : \"LIST_OBJECTS_V2\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"7q8rjn4kgcazthgnh3cbtjplt1gjzexwtkwtvrhqid6rwgxscodw5go37tef2uutzkgy5ifk12ow3ynd2lriydiy0a2lmvjcd25ulj6hlliopjb\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"p89rwpzuq9gxonmco2ns2us223ahxdtpzsp167b0u0swbtq48qj1eso4oxsu2xd01dsqyygssi1hbcn4beuwa0en23kbfo8ylk24f10ve3u368lsk5el17ubnb774fal859ypphhbasm6ew7vlgdf8xjfwlu5ho5oczwf5i55h7eh9hit8oezwtw\",\n      \"path\" : \"gqgc46orfzkdz99q6t6903gsdpl8af3u5jd1czqpb5ah2n165qvh3hecqrnkh5k62dzkf01nzr6gxbksgenh0ybqm5x2znduy82meqwujzzq2fgfda59\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"201acg9tcl1ugiqzbbd9djdwifuw9j1amzah36d85va41cs4d4qxeu6t1oagnerp8ro\"\n      },\n      \"storageAccount\" : \"70v03plot1qsh6vxnzmjl5ovlatita5ctt5ccv8\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"8wz\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Sina Bayer\",\n      \"path\" : \"3wj4gkvvdhu08c2etnafiyxfax1n4j31oge8ak2wcbw6g1oja36jc015wnezqmt3z0vtat1wru84i8mnt5x3q2rsglfz1uiiaxt1f83ulz7duyq2p2fjrfjzeispsa9bb3ke5bxfnmbddtmapa0njasb\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"o6ff\",\n        \"secretAccessKey\" : \"1328c3lg9opkzzfm4unmnhgjrn13w7hbqm0amm3njqz9q1x2dtp0g71sip8qhl5zva6i56flgdtvqcz\"\n      },\n      \"roleArn\" : \"k897msl67bqegvhm\"\n    },\n    \"sourceAgentPoolName\" : \"Grady\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Dr. Betsey Pfannerstill\",\n      \"path\" : \"ytke2ytzgxb423c7gdahbrdnxo8hvi4t5tsfiowj8u0frfworsmg19e2baydb1i69weihaflgf8ao1prajf3d94jxaqbhbngcgrjm5tnubpood7cde\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Valrie Kihn PhD\",\n      \"path\" : \"7h31sgvijaa4t301mre7uwt20ly\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"6bg1qwlhv2\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-03-11T17:13:26.894666Z\",\n      \"includePrefixes\" : [ \"gptn7os6cjtxyrwt2p6s48jrp5sx3dp19\", \"1lck6e82p2ba8ya0hztx32yaemptu3d69rj5rxc94nek9x88bxb49yyjtbc9m\", \"4ksntnte8el0s19zqdigwihsfkkwg4vjnnj6sn644dpjge8vhdie7v9ubrlo5lmegqic8dwi6pd6a4gtn8d9181f46\", \"n77p0rnac6\", \"ci80cwzb919gjlp2two2a5wsdi64yckr4fs1ja39jlhujf2edag9b1nb7qjxkv1mkswjayrv9u01w0km2f2aifbjjy8mtrmzn16te56v444h\", \"rmx2pxj5mlne7e79t433ln03nsxudtaiyb2z7ig3k36q4zja8qolr8a3t7agk3ta33vchk8hm1zgf9j23muvfr0q7xejr3afpw42wqauewg8r9i82473ipw\", \"wy9xfyhepcqqjjbbv8ruxkshhuri290qt1tqx97c3i2mwzjne1wjsczipos0ga9s74xrqdc0opdjr6mr5f6hz2fri42li4037bqw0oc7m5wx9shqzrh9xng448b9p8k44t2s49nk3dvne21xk40zooqa9ywfxsv\" ],\n      \"lastModifiedBefore\" : \"q0o4gmojy08nge4xm0gwr1of6p3f2m0nyeepmloaw3n9f4kckge4euy90knr1qtsjl2hq67b57x4cyz7h61i0303tnxules9hihi099m98b7wmz\",\n      \"lastModifiedSince\" : \"k25yoxz3echdpsm7ajq7eec2cpowj0i0qeefpr99q84k8\",\n      \"excludePrefixes\" : [ \"y7lyqlocsaqdxr2avev1hhog92bqn5tnamxvczhg3aalzsen2h5wscpbh08jtdlk7g6b9h0vfnosmfjddjpvwiwkekca1kn3kanflj3u0w88xfobyelrtq8aendvcx0tqjewceegky5zs0ppymz8kbuhl5ptdyz95wpxbs4dlk5yo\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-06-08T17:02:26.894771Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Margaretta Lind\",\n      \"path\" : \"le6lptn6jeqbrlhwyby1zexunjjdrwfxdg1jr66qbq4tx7mdmksxvydayiq851tf68ifeyiurdp4k0a1zgvtzbi5jig40zwxjpnr384oyqb9m943wn6ftvybe2rry6ik2obsosekt6xo2w4feyngfslc6qojtet7cwx6ze3w8gqw06f2xlpzsor5k3ut7r\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/872076\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"0o757txnkkzn3xd6wy48aw7epoybn5t9vwndd0i35jo16up3elk27vw6cxfl8til3zwdgfpwebvwo9cb1485oo69xstxscwx8k3300ub965urq2dfpjwnlbkfoge\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_UNSPECIFIED\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n        \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n        \"acl\" : \"ACL_UNSPECIFIED\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"NEVER\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\" ],\n    \"pubsubTopic\" : \"oqo25m8p0uq2i5x0dybcl5kj1alpgh9n23aqmagcye8yewodm9n0vcwu9uzg37g5fydx2x3lgrop1zsisptvhhp\",\n    \"payloadFormat\" : \"NONE\"\n  },\n  \"projectId\" : \"5vz6\",\n  \"latestOperationName\" : \"Dorris Kerluke\",\n  \"status\" : \"DELETED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92b7ce39-7598-4bd0-985e-752816597649",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.895304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2285b193-0bbd-453c-94a9-1df9a65d10fc",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Clemmie+Kutch+Sr.",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "fmno"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-06-03T16:10:26.892094Z\",\n  \"lastModificationTime\" : \"2023-01-01T18:53:26.892122Z\",\n  \"description\" : \"Eum est quibusdam a repellat. Qui voluptates quia deserunt. Dolor culpa rem delectus nam culpa aspernatur. Laboriosam architecto alias debitis saepe aut.\",\n  \"deletionTime\" : \"2023-03-06T18:33:26.892177Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 863322624,\n      \"year\" : 1271598226,\n      \"day\" : 807396376\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1842331532,\n      \"year\" : 738799476,\n      \"day\" : 2065387627\n    },\n    \"repeatInterval\" : \"xblcxmkp\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1504714292,\n      \"seconds\" : 1159507949,\n      \"nanos\" : 392244547,\n      \"minutes\" : 2141160702\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1456333043,\n      \"seconds\" : 1628068202,\n      \"nanos\" : 1845772756,\n      \"minutes\" : 559996347\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"DELETE\", \"FIND\", \"FIND\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"FAILED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-11-05T18:31:26.892335Z\",\n    \"eventStreamStartTime\" : \"2022-11-06T16:20:26.892362Z\",\n    \"name\" : \"Caron Shanahan MD\"\n  },\n  \"name\" : \"Mitchel Cronin\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Volkman\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Karine Schuster\",\n      \"path\" : \"ojrgemowfrpg4\",\n      \"endpoint\" : \"h529u1l96qczwlp22jslprp6u9v74cbyby3g1sqarhufl4mij2uoou4s2n9ruc1f2rro85edj7dya5mid\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"snqymkdxkjvhuvi2bkt08vd7un2zqm9i5k03kuf6ejcyly02f3b513lwz3zv78hxhrkc0kfpn\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"2zpmsf61g1d7qjf61k3ngpmiw1jvt6w53g9w68f38m\",\n      \"path\" : \"0bqpulgwt1gwxfy0w14j0j49a2lb5edz07lidbq5fxpffmylf0n9ol85qazs2lqv0z463it2qax7061ekqf8nqks8qjbk8\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"zjalcm2zcnyp99geca7c9re2yfwlshqw4oc0cj18q69mq8hvxyxm74b99nhz039260g1eogmso0fvti6yh57ef9eao7zygqzy5\"\n      },\n      \"storageAccount\" : \"kxta1l37ty7451wf8si39vxhicc3ywzji2xfi3l3ss32qlyjo6p82sud8p0g59x1h28mx3i4\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"w6s4wjxbps5j4snh0e6u8xtk4qhy63kl5p8yd91hllkjryp7ipzbi58lj44\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Mrs. Kaye Pacocha\",\n      \"path\" : \"vc4xalzz33orn4duzzgpoqnae1adjbonw3jqd0j7y69ha15nw4zuydi5ukjyx50yyi64oymiwdkthyak28fe68v1fisex6jr3zxedoqxxf3jzg0ynql0e1qf54qvjdhujorulddz1eenpxvsp28uq6rm51cn7eiswdk67s\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"339d\",\n        \"secretAccessKey\" : \"r6y18j3htx5kcrtopybcc7zmk87zn47jm66cwneiafc347dl415tlrb0nll5ah3mtki02r0e39zd7sd20c1dxvrfp3fsj\"\n      },\n      \"roleArn\" : \"8iooem1vtolv64jzmzgrpo4c3gflh00uv1ay5hf54hrgo01bddlofxixowv20iduzbrs7onb4e9d7g\"\n    },\n    \"sourceAgentPoolName\" : \"Lowe\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Else Rice DDS\",\n      \"path\" : \"ierezbj2wg56g31kt1khr5kfvxclg7kvuzwljx133n4rd6krpio55r2tn6bqch\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Vanessa Dickens III\",\n      \"path\" : \"eooznj0p7ce4vhgh2kjz24x9j2llkp4s62m09k85e3t7z0n5fv2cuqw4gyt4mjn4dw7fcwj7i53fov2nqhibgd0ig2jyv0opo3zie7hzfc53mbm1qea7riu8yemxnz0bvzplker4zqv717ucbispd09xzyjzqs2\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"38avjjf1ru3g77p\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-09-15T15:10:26.892996Z\",\n      \"includePrefixes\" : [ \"0ypcc8ba8hkh2mtz1x9d5upt5k81l9r1e633zbqyp49sh9fa3842301j7l7qjjrcsk8lp\", \"5jbxxi7txr3v6kmyqbmq1d9v92g949r8xgwt2dmot8m89e4bf3sreshecf8p8tavcbvjhpu8uwniuudd275gjz8opv70wu6nsmsocntl5smvacpewo6eudfuiso08z6ew\", \"1bo9q1r46bqqgoydr0kb8ghu2jcthi19x3eum6nqllnoew5z2mdyfnxsicokdhrbr05j9ggs7\", \"xjmulthiui95k7d39czya4izvnu8vwv97gpbr2tpdkiqlanhxmdp0t5c8mamih5qi\" ],\n      \"lastModifiedBefore\" : \"hzt8zhmhpcfozcjhrgx2sgvaj4x\",\n      \"lastModifiedSince\" : \"96flpri0csuyuip7n6qgomo2au3mo3b0l41pv9ybtxyj4rudsp6xlmyh8q9omxntl1kddc6vhq4e6vtb7tcfzlusc9yc5besj1e7p9emhnmp8hyjd7wv3psnyurqrmlvvkh2pjfa2wxse\",\n      \"excludePrefixes\" : [ \"u040fa0qzb9ywrxi81p9u765rsqzfvhb5sq3pbph6t3y93u6pvo23av4ykz9lljn2hmifsu57c8q2ig6un20rzuiu3cdvk9m0l7oen8iitbzte34\", \"tu3emzcgug19oycyyd9tlo4mfq8gqpza3y4lc71mbxdihbxbo08va1lruza98bjvttobxnf9266k2w1h1cx7o0ygi1ehl0fb9i62eqz\", \"2x9scdqiirar8jok7ow0xlsfq1t4y40mv5ckv0exr158w44ppst8m3r34n822f9wgqcd\", \"66v7k9i3o0n4mnd7rgftel7wsmes7d1ubdkaaozeytv3hgyk4rbl9n1jwootci7wc30khu1y0jnuu\", \"w604usbj4ha8fn6ubji9y5tp63ztvtv\", \"2zc38fuw489a4yce6hygxeesvxait06h4ht47ujti6cs632ogr2x0gwquqspn7tiy5t1n0osa22t1tkdn57218gnb6f\", \"1majn5ggh95x1jrms700xc54sqmd08uwu0mgsfva9jq41nzq1l9e6vtvglihr8uhxr04iquvpv1lwuv9jm10y63rlnmii7twbvjmhisfl5ym53xk6687tdj491m02zmgwwbq2waxs8iignnb6km5sqcluf2naj6hzdcc0usioi0xh0d5jmsbbvfehtmbq7c9ub7\", \"u0l577lh3slqvz7171q4l7ql9j3oq13tp1e0cqc7uqaee756dowohssr1zf1zav2aqti4yz9nyaqdw85mttac9pixs0xv0u7g4uthw2zf00z63xhrw3io00oi3aci69zwm2rya6tyn210ofyn2ls\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-04-09T15:28:26.893121Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Mrs. Anissa Ryan\",\n      \"path\" : \"p3lqu24u9qpwt003s9be4estigjazasoeenrfqpfudo2ohce3it3ldtj2r2vuup2nn2ulqoqxn28s9obsgjlh3v4lpfvqzcg8fn84fp7lxaebr6zrvwgv1st7k3s0zvmuiqdf2pxyyswfjj5wn5o9em9g1\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/611526\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"dgj3i5otvr\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_PRESERVE\",\n        \"uid\" : \"UID_UNSPECIFIED\",\n        \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"ALWAYS\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\" ],\n    \"pubsubTopic\" : \"hfeh2vt0key33otlnh03lf57fe7hc8hhh0tx1k92swdips59yac2dn6edfybxftm1h0vv5oq96lgrcslrf6c1tbl96c1khdxo4ee35tdfj\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"tbn2\",\n  \"latestOperationName\" : \"Nenita Steuber\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2285b193-0bbd-453c-94a9-1df9a65d10fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.89375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "058615fa-4ead-4c39-a81b-941ba63af6da",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Jennette+Braun",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "u16n"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "058615fa-4ead-4c39-a81b-941ba63af6da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.892061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9a3a1f1f-35b0-4d0b-8567-457d8530d1a4",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2023-01-19T15:58:26.890306Z\",\n  \"lastModificationTime\" : \"2022-11-18T18:26:26.890331Z\",\n  \"description\" : \"Inventore quasi sunt. Architecto facere laboriosam quo est omnis corrupti. Nihil praesentium et totam occaecati qui. Minima aut eveniet aperiam temporibus eveniet excepturi est.\",\n  \"deletionTime\" : \"2022-07-27T17:50:26.890388Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1595704394,\n      \"year\" : 1062800204,\n      \"day\" : 396631527\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1820418891,\n      \"year\" : 1500204819,\n      \"day\" : 1248924640\n    },\n    \"repeatInterval\" : \"bus1elb4isxxvmo712ai\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 148669896,\n      \"seconds\" : 1310265125,\n      \"nanos\" : 1537359332,\n      \"minutes\" : 27515112\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1599950167,\n      \"seconds\" : 313690398,\n      \"nanos\" : 1161982897,\n      \"minutes\" : 337254383\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"COPY\", \"COPY\", \"FIND\", \"FIND\", \"COPY\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"FAILED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-04-05T16:43:26.890551Z\",\n    \"eventStreamStartTime\" : \"2022-05-19T15:50:26.890579Z\",\n    \"name\" : \"Mr. Gilbert Hudson\"\n  },\n  \"name\" : \"Camilla Weimann\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Reilly\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Otha Roberts\",\n      \"path\" : \"wmzuvw2donn7280evltjv2d6yva4g\",\n      \"endpoint\" : \"3cxzqcowmagohuaaguabpiiy45fra2168ypb4giluz28gueswx53bhnv7dhqjmievrflbucah3cjvjzsn0twx6uyzioq0mgn8hte1shpjuehhbd5qfh276b0gki0ouqr7aepx6yczpo327fp1bjw2ol21fyr4dujf9\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n        \"listApi\" : \"LIST_OBJECTS_V2\",\n        \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"m0najhh01fb2lxed6168x5vziyhzif00nhvga13ts0laxwigmjfztbl46hx9wombnz55ine3yu17yc\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"a4df9ylr9bp97zn1navq4jjy259c7ve5bccrb12n\",\n      \"path\" : \"ai1jj9neum09tjsicoex1n4xarc131fn62a7ht7r3o18s0ldkazfialcq07ucafl3tzxvouhrvjw4ym2rwatuw73vy57wnlz3k1gtsrxib33e6qqvt7\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"yrboifbzvpug5zs38vgck877fq5t1qvqes8pmuybnu8bljtve5go5v\"\n      },\n      \"storageAccount\" : \"su0z5mgowha04oxsgoouw91v4ycdbjqii7bivhjj1f642zkrly4k33t0kguzazaalk8cgnmkxqicwun14jsga9qdoxlrvphoip8z6b7vauiy0zd3fh1uskljokhzs0pvoljx\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"v63sxdv0gev8isk4g5n7h2ktt9rho1ukmjx1h0mep4540dgj5w2ckux4836mqixqe91fn3a6d3u0an7d2njnbhuzxaxypi4p59tf8qdxsygd4ypq4x4bbtf6n5c9mhhhmeb08odx6q1u5ut6ter1sbvtysvf0fqj1cmw6fronxc9x38anz3spf\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Dr. Jennette O'Reilly\",\n      \"path\" : \"jlmywlramwb7h6f360fjrzdujly9fe2movgc5fgqi40arlyiuicvw8bjrcmp1qznxbwkv4wcu2h5m49zpkhhzzerhigsi1\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"7y6p\",\n        \"secretAccessKey\" : \"ukyo5umynzjbx60\"\n      },\n      \"roleArn\" : \"ij8oy1w796dls3w6wcrciybytplyo756psvs6xz22okig6a0ts6y8ofdn4i\"\n    },\n    \"sourceAgentPoolName\" : \"Ondricka\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Mr. Rufus Bailey\",\n      \"path\" : \"3alhxv8119c3yyafeowjahgt14fstvlvz4l9qv8cv5g5ksnonzqxu9pmuqlhl\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Karyn Vandervort\",\n      \"path\" : \"5znfftxq52ml7c86taib20h98n92c4m23rfs052m73u3reolkpexsambj51aqq0wse6rd6du409zo6dd49llnrg9s95mz1rxgw8q5zaw68gg\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"eh2alqg7nnm2bm6g1vqwn2mbmpnq9avzk14k4y8mbusqiom2zbdvk7ztaa1pvo3v3qc8n17h17k04owxvyvd3p0yarcw29pqzdy2g8k44uztsbqhbley7iy8elxbgthw7\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-06-28T15:57:26.891229Z\",\n      \"includePrefixes\" : [ \"aj46btgetr8pfnsk3t0fav41jpydlbmhgwpcx87hhyf47thwwyvu4kxwrn4vm5f4rb0dds1hdladqlbvbc7l34tukr8iw0ebwwmczluubzsylvtvbthh6uevlw32o\", \"0i6iufhpbwuvnzx32js2k5jfz\", \"49wp4hl0xcl03khg6jd9fyzk55mtrj94b6l84h1bli4y5f2148gv0gvgaq4gfzl6a5c54m87z35rx4m19vjdkpu49ketsztc57gi1g50y4phvg5i7i1lna9ogx08sn\", \"edis94vd59a55tq1tf5l13ycffqy20otz373u9cije2voq7y8mge9wgd9h2a2tdmtrpf2co8ruzfissc9vpephvwjvpe4f77rbvbt4jq4b5o96l0t4dwjyv74ljxg18wppq\", \"0kmi3h1dk38rqmiop665u4zke2evjexzyvpzmjqh2jzxqnd4qtu0dj37sqvhqamhfvigxu545mxofmvww0lt5b7n06kzsuqknfpqouovvhbd88l4fcmlq7plu5b95q32qoboy31wlfscp76w752fauvresnyo1im0kbsv\", \"f5lsphupjs9gq22vk4xmn3zm55oh7xmnq41dkaygz6h5y0395l4o94cytr961c1vc0hxcfhvk6o3gx0udff401tojp62fp0u2ri69ylom2wyvmbzv4kvmv1qdd69sbw2guskdze04cyv3e4bu7gcbi5x5pvc1m059qseu4pv4\", \"4bw65dp4fd2pz15ububepz41xxkwcc5bt861r3jml2apbfah0mqnh0u\", \"5x3wb4olwh6ih13rpz6vgr1rvxq0a247fvfbu2rcyfiss6oa5q5c35myh18igxij7wuw92rl3km2gff9aukmohmelezg5ac\" ],\n      \"lastModifiedBefore\" : \"v10hwu7yx3st7n8fdrheqypgbrdo1sre5xp7rytfpdvsgci8q3v3a3lquom430fv6txrs8g8wpu1p5xer1rqzhbuqskvvrqm9itf96mciiiwuxd08zsw44rzrk2ia7s0mo9sg79vziytvm3\",\n      \"lastModifiedSince\" : \"dv47zd3j4qoaca0picf955jv9hun77drn02f3vtyo0fvmrhra0dpjir43p5zf9lq\",\n      \"excludePrefixes\" : [ \"h9mssdjaam3dbom9ieq49i68vmma5l5njjopuzrrv7if1eu9sum1yhturiaia0eh26itrb94fy65pj52pxzfw7ods2nupwphfbki0l6j5k3ehrzmufyudijd4mc1v1g7xg13x1tthg4vi65naxi17ce3tev9ofdjczqqeiui0dur4wxcq7154pmlnvgmcdexlgmz3y\", \"z9pxg4rdvkryaiutnn6ckqevq8qczi3olyquf\", \"xkjpfsr4pr7mwgkvg50e385bhgm6zoi63fdw749nosqyrun5mr9409kwayo8ftth91qy2i0c295a104t5v4ny10muzu4l0o1u2s4t1cnj76fsgilkb2k69frn2maauidhzixzqrk9o\", \"9giasvjvqs0n4eicszyn\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2023-02-09T18:11:26.891357Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Candelaria Adams\",\n      \"path\" : \"pqrj0ccawsso7e6h944sjaltmsnmmzmxy4nldmvv4vkgaieyhowuya6qpvvrsn8pq8\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/085977\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"iuqxvp0h6k0676upb47wv4v3rkjaqthaaeobe5sehujhv0qg61rfxdfyxidspyppt2wjdcd8r\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n        \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n        \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"ALWAYS\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\" ],\n    \"pubsubTopic\" : \"2lcehadhxn1z0xnxh8zhmk7e7dddudo\",\n    \"payloadFormat\" : \"NONE\"\n  },\n  \"projectId\" : \"463a\",\n  \"latestOperationName\" : \"Wilfredo Jacobs\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a3a1f1f-35b0-4d0b-8567-457d8530d1a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.891898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39475130-9ea2-48af-9614-aef9a02b2853",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "6xsi0o9gtr7r76s"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"igpi9h10spijjocz5g1zphv1frifxi6v32nucmzg7y215l0iuybuszza1xdfif832pn1earbd155rlh3esls22a2gj4sufprljdobs0mkkxsp1nj9avlhpanavf9wrxbuujlx5\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-10-03T18:54:26.882347Z\",\n    \"lastModificationTime\" : \"2022-06-06T16:41:26.882382Z\",\n    \"description\" : \"Qui veritatis alias assumenda. Suscipit alias iste quis. Consequatur eaque non vel ipsum quia iste ea. Quas ut nam maxime ea aut. In quidem dolorum.\",\n    \"deletionTime\" : \"2022-04-03T15:40:26.88245Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1859370438,\n        \"year\" : 246742857,\n        \"day\" : 583994098\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 154584907,\n        \"year\" : 827347868,\n        \"day\" : 200682633\n      },\n      \"repeatInterval\" : \"y6kjk1iy03jth25dj\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 2116628976,\n        \"seconds\" : 1272033089,\n        \"nanos\" : 1437808197,\n        \"minutes\" : 982599959\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 2073078463,\n        \"seconds\" : 1813735072,\n        \"nanos\" : 1134978502,\n        \"minutes\" : 1873046957\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"FIND\", \"COPY\", \"COPY\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"FAILED\", \"SUCCEEDED\", \"SUCCEEDED\", \"SUCCEEDED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-12-04T18:18:26.882663Z\",\n      \"eventStreamStartTime\" : \"2022-07-05T15:05:26.882697Z\",\n      \"name\" : \"Mellissa McCullough\"\n    },\n    \"name\" : \"Maryetta Kuhn I\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Littel\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Dr. Meghan Mitchell\",\n        \"path\" : \"96y66m4i8gsfmmtp3072dzsjcottzpvmywxx3o3cepilvhrgrwezvc7ku33wvyd9iklj7bvc071j5ti1jmbzv2wcysgi0gva44wtzo7u6dtx4h3il5mck7o9rz0mk2832jce\",\n        \"endpoint\" : \"yy5rbx8x6r1u4qazseh7x1v7vhp6h\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"ufxg7tzy3ze8q73zdofrmt5dlrtgplr8sb32x0gbwdskdnzzrg0osvgf1naa8ro6e3lcsq1mtgxkd8nl6vabg7gkpex\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"aw4wjkerfa29flw4wchnwfsy\",\n        \"path\" : \"6a1juln5434y6uq72ki8ezjbx203x58lz9rfrma3284nfhwj19amzu5exc74zlx9xmbgh2412jv968swzmugz0r4hqf9lkjg3cxfh24mvplzcohlnjnxzfevl8gzj6vmjghzq6fwntmq3h1siu3t64ywxayqlfw7nwnhwlwy8m6s5icksc0lw3ezkc9o027is\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"gvtmz8y3r38whkqfp7phgb186qw9ffmnbmsasaz791gp1x6l\"\n        },\n        \"storageAccount\" : \"04ex5t3xopkz71p41ugvrfomh2fvmauluvvzo1dzhk99ohsr7nehnlx\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"8ktt4sq1ks183xfqknug0vpnidfgh063ne3uy3cdnhf4auz55rhca14pku2qud3iy016h09ikb4txteqc8qmsvo0a5nicsu77t47j39rolpunomfbuemi15e0rty\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Ms. Saran Maggio\",\n        \"path\" : \"8g4awuid8dru\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"09ka\",\n          \"secretAccessKey\" : \"2x99e9vbalcb4czurg6o6uz8kdaf7y0vsbnebaal4148pptgkw40ltxn6ey6r4ezk2u3uv4elkqalrz4tstyt5nq4fjk4wxt\"\n        },\n        \"roleArn\" : \"f4ghkz0vb0k2ufg696a0i6ul37gyyyd0rrxqlpjvb8ymhylc4f7fes1xbcd928b8x8b9pjuxk6il0y6m16ibk8lzbzlu16cufaha0h1vvbsgzbz897xkal723014ajjexas3bsv84qgb341rz5qpp5aj\"\n      },\n      \"sourceAgentPoolName\" : \"Lang\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Mr. Kathrin Beatty\",\n        \"path\" : \"wxeiww09k2c971yc6aa37912fuy9bnp86wyn1pj74qh89xaz32htezx71sbut1zigjcfe95fi3k7wmtaosa8ybrlnthclah74tydyarzdl8e74\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Callie Metz II\",\n        \"path\" : \"4sbjq5mqb1qu44qu11zthamqrqjpvzszc57cmb1klpaf4qyeccbgi6qhgi4bpm5uzq\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"0bm\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-12-30T15:49:26.883476Z\",\n        \"includePrefixes\" : [ \"pg4p575xx9u2jk2nsgc6jy5tvo3c3wo20aneh63rw3bdd2p3cu8io422bzh8ujjo5pnukngllp7nvz8hkdniimfachk2j4r6li6g7njo685ds8q85rtzi8dd6q7o61gw3sigs9wf3on2ms8xiugzyrfa62o4wpv9cagq4\", \"d9wn522jkmdoloa6aszggc99dfoof8m29attbn73ro6ka4qtnhunuwwoq089lf3l7cbi3w36hcitrp0a3lksl\", \"tu7xszuive849z5hjypvv6xd7v49apcksy6pl58e3d8slenlomhdu9hjyzlancn492cqiymya9xmhp2ymtuq5d3lrbaa686usgi3hyc1xu6e4wd7cax\", \"qch7k7rm4c74b4n6n8ngevlwqkl2ysfhvix95z24l1pfn74cl3g7m1aqx048ak2evbtth0es2aszbhnkvsgivrm863z68wxficd5wzuqjboj4xj0flez58wq84hdoavpzn6wf0b5c1df90wenopal1gssrabb\", \"4rbhme6xn22tah2z9uglnh6yghlwiak6yd1yc5wgrw1ndal6rqckfyztz6hsumkhut1ka9cl74jv6aqj2iui5jn0dcnchv0d0epn6kha7oi91linau9bz1a9faj4dlo1693qntk5mi4cf7k1ud8\" ],\n        \"lastModifiedBefore\" : \"k1mf6wlzsint0s8lmrxjwdvs73oa1xzzc2ex30n504wx3bj5p02c5dotwm6yvhhx0gpz1udso\",\n        \"lastModifiedSince\" : \"vnmkgpvgeeyls60htx8z6o92ly\",\n        \"excludePrefixes\" : [ \"gx1wdwzla6hft6e32a66akxf3nglhzush48ujw1cnf8j85fxpfet92i8y1llu2rkqoxuxcahkmzsx8xfh7epull97f3bneqo2d16acvfi8l1injjumnix2l6ioq3mdgdirstsyngwr35ovqxtb5grk2rkic2178q9uarad2xv4tz4fozegvfardj\", \"cob4id56bmooz6l7dv8xcn3zqo4i6rgk6svhtwo0qruso0tvnwuisc1fm8xs99n1ki1mwg6u3zy1np8di9o7zgvel6ugx076ebg9khqv4fhdwjl2gjl6xwtg79ou00004b8sonjcvvvpmsi18me\", \"54k6pyztnz7ytz3pej61b50jx4308exatxdqojedx4nh22itz5gupx5ut1tj4uamkda862y2w25cfoeh5sp44g\", \"cbjs5qpmaxoap8m7osat0lw2278l46yt7x2lm6d1q0op6jatihac9vzr8qjui4qn964bvza5b0wa6037b8qqjzg05c8cutq55ggyzhxfxi35zmvbyh3odf48mi6ycti9suj7x3gwp0u7r6d77tpxx1sda2qp8uidcwc63m56yswwc0ttb3kax26q1vkx\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2023-01-20T16:22:26.883613Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Layla Ward\",\n        \"path\" : \"m2qfr5\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/549791\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"mmaixzwvmk5me4cxc52ehomid1edjezkr5c02bsb68inxh13541uu6t5c9q5jtt69e9b77qtk96vvjhd021mguyk2kse9fkgjuhrectqjfbeyffpyad4m97f3eg7py2c5qvhlas40mbr0xnhawmz5nf2cnu1e8l\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_SUCCESS\" ],\n      \"pubsubTopic\" : \"aku5qqbh0kzw2tam3hccxtqz56i9o53ag6q0b1cu5q\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"hj01\",\n    \"latestOperationName\" : \"Ms. Mariano Marvin\",\n    \"status\" : \"ENABLED\"\n  }, {\n    \"creationTime\" : \"2022-10-04T17:56:26.884146Z\",\n    \"lastModificationTime\" : \"2022-11-05T16:57:26.884172Z\",\n    \"description\" : \"Aut quia officiis est est quae voluptatem. Ullam accusantium expedita tenetur expedita rem sed fugit. Facilis qui repudiandae id assumenda voluptas qui exercitationem. Provident inventore vitae ab. Do\",\n    \"deletionTime\" : \"2023-01-07T15:13:26.884237Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1948425717,\n        \"year\" : 1015336784,\n        \"day\" : 1620823708\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1851636048,\n        \"year\" : 849965916,\n        \"day\" : 2001250440\n      },\n      \"repeatInterval\" : \"468cda7nate4g0nzh56m15454yeb71d5127s0z8ncjsfs4kef1fz6dichx4gg5i09rbk4l0r7cuzvehfzomfs6x2ml5wzyg46t7hkozofzb072uudmopey\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 176424633,\n        \"seconds\" : 453618510,\n        \"nanos\" : 94999692,\n        \"minutes\" : 321027281\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 954992675,\n        \"seconds\" : 1849576721,\n        \"nanos\" : 2113319221,\n        \"minutes\" : 1537637818\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-04-18T18:25:26.884389Z\",\n      \"eventStreamStartTime\" : \"2022-06-09T14:56:26.884419Z\",\n      \"name\" : \"Helena Hermann\"\n    },\n    \"name\" : \"Lonnie Jast\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Tillman\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Shelly Connelly\",\n        \"path\" : \"ni9reejpwks4jbgz56qz0rte4zvizedvagx76hnlaer6hmp1cs3atywynreph21gfvwet0l2nx18u4u5gg05jlr1gyr5errgfugif0egkwhcv12vwawsykf2y7sfd1m995uhkz5ux58n1albhnho6se6p8exaxbo6zuuodyhxnmiyq003hp3fg2\",\n        \"endpoint\" : \"dexvijgjf70d3a9n56h136fe4w4nw1fr11kjgw2oaxzn3m1dl6qoxl836nnlf8gqvromc73epuzahuxtuemoyqiy6nym15k38ndk41nfs29x969xgvhq7v97w08030lnvuzqhi2h2i1pyx5u5w2\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"swpfam5jbrkih95b0xcr5ywuon9cp12bzr0trjv2v63q0brdboyfwyebh1u755hzwrdbsffr6r86ntw3f73pn494zq0lmrlfjts56wxy86zv1d87ypoku07qyg2ya9\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"rhuksxu75lhj8ww8iktmt6d6l9a42nxns6ro47ptf6iw2d4x0jcyw1oee435db0dhvrci4umx4reiwb2kjniamzbbyado6wahsvvpbookvpw1o689i00vauepnn630e6ruuxyuhpj7jfimfnjnms0dtelz334qsdt38mxpjmyglmylfya66w5mwlcyl19j2j\",\n        \"path\" : \"h96ihpwz8fcs09w7h517x3n4zeyoq9xrfgogjt693qh6vpcpy0mt8q54ejjfas6jbjrycigh62e05beaf7\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"qa8u7w29u4ogsk92jljrxwth8yt16vdyu4dmiel5cn8xg8n4olad3p5ev9cqe517tl\"\n        },\n        \"storageAccount\" : \"gqzqriw1kxm2hhzlb01ke\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"p6qalzj\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Alesia Beier\",\n        \"path\" : \"xjbxq1c3d734f5a95x5zjtzmyp3zlrw3nc5y5d71wal8tshoxpcgi3dfnhnu0yuw5wnslog6cygntnzi2v\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"44ry\",\n          \"secretAccessKey\" : \"6ebzmnese34niidlp82imbi4bbudx13aj4r6l7py6f7hxphb1h72g18quma830ki31fhf14r8kmkkt41db\"\n        },\n        \"roleArn\" : \"2d9y3pgdvy0cruvd27313czw53hl4nxlu\"\n      },\n      \"sourceAgentPoolName\" : \"Jacobson\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Antoine Gaylord\",\n        \"path\" : \"iak431x8101opofcr7ir8n7t6e9qmj9ui10924c7q4esjy7q4ykrkvxjrb7bpjn7mjbbay20cwf\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Grover Goodwin DDS\",\n        \"path\" : \"4vxbvq95gvqruyurms9hca133tjkg4jxld4j339nu2cvzxutl1gvjig1xvwd6784vjbxq8h7ap0cn6yvi7dag0qh0k462ek2x0oyl19w0oy4cjuyvclmp143ejwugfyqgclanq7zjk1ol2vxq5lv0301j4gs\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"uqgew225f85ne0p8oxltde1r58u0f4x9ig8bp56ptfiay8w6vwgvad8qggg1pchkdfj4clkwoffqk5emvscqr76m62ltowtp06ubk1weqdti5p6i5uyz\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-05-05T17:04:26.885083Z\",\n        \"includePrefixes\" : [ \"dm7l\", \"2w7nhcd9ozyapt4i1v558e3l2r9yqkjxvqh67g1u9t917r79mwghz\", \"qcggw9z0w1yrwfiitcmk5o5nfe3yap9ghdchwpks0561do8d1hdu9cv1k9ekgsnk6vzqi1n\", \"e3cw\", \"31hma3vi11kqxhfdmehe31vpcot598vw\", \"2nc2kgx5ja3opkyt3kdlod2df6tnt3xprwjgf5s8d096xb21chky58c4fpenp7i9hbj1ieuhwluu6larcf6m73sknlr0097mc0c6sd0cmaht88zsj00izr1zfrp5hh6sgcvhmm69tl\", \"7gh0a4r9c\", \"fgps12pr9x9ek2q0qr4g3yq7pema7wwij9uly4fe60chjhcozwkmjwrju3chouump6\" ],\n        \"lastModifiedBefore\" : \"a73g74t6s28xec7b1ig0y2baf636gfuuh9w86a\",\n        \"lastModifiedSince\" : \"5xghadm8d56\",\n        \"excludePrefixes\" : [ \"z5vp5a10468z3pxmei9bo350fopn6fc6onqora8dp10egttp9kysavokkm7lcgh50y6sjzkshnjpw9py72jqpkzvz8eb00oaaiozdj29s3z5c2j7huen8k5rrfyex4roys39ibus2p66v0s7s2i1sl06s2d1rizznj\", \"1322s7ykwo5u1pd6eq92pmsj8s9ksrwgqa8dg85u6va42sjdfbg9xuaim14kc0efks6u47bwx3nsgfel9vpsnh9kvl5do53lpevox4py5wp3jodmubfjnw7ojv0n4jmmqif0a6ns1hewo\", \"klzer3vdmzz5grfv6yqsscx2fwkco8jwyzj6lzf6buujwbrv353yzzr2s42tkj7ae4qz6280xg1a93cvu9am8g1nh2bwud4fi4cfj0nnirs6t7tycqdsel646yii65pkfbq87\", \"fkkaneremkjazqixpybjrn5m6zjfoomjlu76jj1jhz6pxbvmcu1u6r7zqb2g5ubpqtlynv74bkmpvk8vn1cdqpel36wqszeedgv417lx8bbgo6f8nie6\", \"pt8hrip7qi36ovtetou5ws29aya153atwz41l1z9y56r5kjumadnzpio02al8p1mdnvugki2h3kn\", \"j55ge1gprgjwiva9pjt75u9vbnx1qr1an0r1d48rlvhm36btjodm6jyro4rnnpmsjgo0iwmtfbg0q74vqzpvkzmw3djaqu3ymjdvh\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-06-20T17:20:26.885216Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Myrtice Schaden PhD\",\n        \"path\" : \"c6a9u4mkp111h5zxmgqx4xbwdl2ey3h\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/155297\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"qbf25858yb4fearqh3jno0f59pvff030l0okfzq90igkr8um8u4ewep127rlgqdou3vdpeh55lxbl\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_STANDARD\",\n          \"gid\" : \"GID_SKIP\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"twnnjtsne0kjapch7ky1j02y9x6ajzgswd11oev7sjkzuezpufhadut2zog4cz7jz6jmj5no\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"17ea\",\n    \"latestOperationName\" : \"Amos Schimmel DDS\",\n    \"status\" : \"ENABLED\"\n  }, {\n    \"creationTime\" : \"2022-05-31T18:49:26.885672Z\",\n    \"lastModificationTime\" : \"2022-04-14T18:10:26.8857Z\",\n    \"description\" : \"Voluptatem porro qui non et inventore reiciendis. Veritatis adipisci eum. Officiis magnam sed. Esse voluptas odit ut.\",\n    \"deletionTime\" : \"2023-02-10T15:12:26.885756Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 2046344457,\n        \"year\" : 1500078357,\n        \"day\" : 566813689\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 375793702,\n        \"year\" : 1220295234,\n        \"day\" : 1733705696\n      },\n      \"repeatInterval\" : \"4c06v0wq96se0o7228iuz04pv9z4wkzv\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1421008536,\n        \"seconds\" : 818250321,\n        \"nanos\" : 1292777902,\n        \"minutes\" : 208895647\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 2013257227,\n        \"seconds\" : 1072380842,\n        \"nanos\" : 1558386849,\n        \"minutes\" : 1466235278\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-08-05T18:30:26.885901Z\",\n      \"eventStreamStartTime\" : \"2022-08-20T17:44:26.88593Z\",\n      \"name\" : \"Calvin Parisian\"\n    },\n    \"name\" : \"Linsey Dicki III\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Auer\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Ellan Prosacco\",\n        \"path\" : \"2aihrseuv68fv5wtayg9o9tgyokokn2sdw0jtxr2nqvsiysw7runoauzjougyuacr8ue6ygp6bq094trfqpvi4cjhnrb7j17z3raxedg8matciqzczpbgjl9gvmjhv25ac4qn1euabizy49j9nr67v0wtu4mgknwmx0ggv7jf5uwgylrm2n\",\n        \"endpoint\" : \"b57gnwekmeutec6proa6ibcm6i7i6uqgyf75q8qj1tcg0198hvpt3pga4x6t3caip9bmea01opgszqayapganck6qgpvitmm47c3abf9dvrikry1cxxxk0gs6d7ll7vcm\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"z7x2ptq5y3q2b9ob31jlto6v9u0ocvvlfg4sfeh5l7vzphf45wdjc4t708e550on01yb43p\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"09tfvfwn3w5jt6tzt0uqs1nr2vb1phy5apkv16h4knau\",\n        \"path\" : \"55m9e0nnndbvibj6hdw5rddfzkv33de2kzyah9p9ar968368ejxua3qink8qb28bhr6g24kcchjurevd45zy\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"be1mmsfwa8hdv3h6s96b4w2v3jk5sh2x0mwqlobw10tttpk92iei3j9jl8cd4yndocfxh0itroi6tyo9lztflbp2t3s85123u9fk9twy9793zv0nbsrtlsiai34hmughf0jmb6xeadq5z48xeuf9llkscxnlm8clx6oomayfz3co9d8l\"\n        },\n        \"storageAccount\" : \"ua6iac9ylbptxkt2vvkpvzn4e9oipngnjrknv\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"me1xgtb5kanjdcdehjvhpnvo4yuci62w452lx5eqqgmh75guzqaa2ryfwjgxhtu5zhj9bijw4\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Christa White\",\n        \"path\" : \"lonw1hxo2sdmquuvrilo9s203phlsw7k8ojqd2968e280dbzs8soaa69o1t18zw9p7ivwp569grjubln6lxj8modri0smhgzxd\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"t8l6\",\n          \"secretAccessKey\" : \"5e37dxjxn79yk3dr167tg534sqt0zq3dfmpyg0m0sothtg1jdelz5xt0s6vhu588d8yow01q70lg0zj3vy63mmatbsw8m0ctbz2aqdxvjzbphjjevawhxbiape7byekw3oft4eh2thtv88vde5s5n1390odptvmx2v08n35cdi4x561c\"\n        },\n        \"roleArn\" : \"jrhqht74g5dt4icegstrw6wzlyr8nl9at4xku9ta40g3pbk8rsqe9y3lcm7lsxdyrfj58zee6e2lc\"\n      },\n      \"sourceAgentPoolName\" : \"Schoen\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Bianca Kuhic\",\n        \"path\" : \"e7i30d2k44\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Tara Kreiger\",\n        \"path\" : \"u3kdtdgm40z0n7lyh91pt8d8q0fazdqgs1gwp48ptufysgg1lnqksifawwy495dc86ywkrgo9huq0lszb0e2ze7g4emmcgz0oq51k1g1e8c7zfx2md1eig0p7mzwk6dogle62shjcflu1uc0bw5po448010hhr1cm4p7ra9xpmkym9o\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"beukjpf0plpxjjz19h8jaygl9s8tgyw\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-12-03T18:15:26.886578Z\",\n        \"includePrefixes\" : [ \"vvxrjfp9ke4yplh2mgb8f7xjy2bddtlnuajt39nwd6v112mo7sy6ffs42qvy9bw7etozw04om7pyjq8bnetpu3sqntxmumt9vnuy76\", \"mjdvs02h\", \"yhhlm2qokjng3tfscgd5bzjdl19nvg7e0s6z62so7ugq4ecofq3a1ijd6fv65izst2s8at0ob3owkfk5r6szblfn1v6ex64pp41ql6mod42o4uvc7kpoj94jlf5omfe3j2bzz6qh8ygf4i98crdyki52yl6i2ly4zh7eog53xx0y1kzjl12n26yo\", \"29l3ymid8cwkardl3v53wr2m0zt6e3f1fqd2x9ift2me2h00vjubjo1e9js3uaalzj0fomd5rcwfjyodh08e0aq05dmke9kfoiyuspd02fram2hilzvpobxcoxnql2x5c2k6ly8meu6jm4flnkonyp26us99nbpxpgc8ex\", \"uro4r78adb3jgg56bieorh78591lfvzt9p83qysl1g8dsqoy7798n9k4bj2ph\" ],\n        \"lastModifiedBefore\" : \"lz6h8tdx456ys82ggfirw8p30yrj9609ruq9hcufzke8av9g8gmmf5junryk8f2ro9hwr758asa5z7j2oulupstqkv0b4od0xw4izjft982bn\",\n        \"lastModifiedSince\" : \"vkkaiknbuefczq1dsi5tviqlpk37vxzjdaab5i86xt0snnh8p7p7lnukvttu6bvabr0qsz481dd3732ptd5ke4jq1ceda9it1ktj7d82\",\n        \"excludePrefixes\" : [ \"qh2zi24ua2yr33zf12qdgpxic2nzhgfs1f6ucsl1ir7d7qh71fh589fmyb7v23vjmfo2qv4fe3zkcucb5kgj5gx7pr03ni55vuw\", \"c3eu3h6x0wrmk84vaw52dl3wgc2t83xy8ffivg7gcyj9ern20d4yzjcoj4zncd4tytg20zdiqa4z7wbi5exjg8nkqmg4xuvagdlqbuy622hdx28hx6jzdjktn544\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-03-22T16:29:26.88668Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Asha Carter\",\n        \"path\" : \"2sf19agmh2wzz19fi0ah9d57\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/584216\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"lbncncy986ec0shod079jd3o5jaje8avs5w3w09i7xbmo\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_COLDLINE\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_SKIP\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"909mq9gstkodxx4id8dtrhxnoroiimpn43qgebh62xjhe8y0x6g\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"1a5q\",\n    \"latestOperationName\" : \"Marc Dicki\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2022-07-20T17:53:26.88712Z\",\n    \"lastModificationTime\" : \"2022-04-12T18:44:26.887147Z\",\n    \"description\" : \"Quos totam enim aut. Voluptatem repudiandae aliquam ipsa aut. Voluptatem in sequi nemo non amet architecto. Et et deserunt ratione error explicabo ullam.\",\n    \"deletionTime\" : \"2022-03-10T17:44:26.887205Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 268285640,\n        \"year\" : 1805387419,\n        \"day\" : 1501236289\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1535878189,\n        \"year\" : 541365880,\n        \"day\" : 147547710\n      },\n      \"repeatInterval\" : \"7esezdm2wm9ijza2g5gf\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 501137663,\n        \"seconds\" : 1116471424,\n        \"nanos\" : 990405218,\n        \"minutes\" : 1030297484\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 38717909,\n        \"seconds\" : 1999430059,\n        \"nanos\" : 1611750868,\n        \"minutes\" : 16623153\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"FIND\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-11-16T18:30:26.887369Z\",\n      \"eventStreamStartTime\" : \"2022-06-15T18:54:26.8874Z\",\n      \"name\" : \"Ruthann Schaden\"\n    },\n    \"name\" : \"Glen Reynolds\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Daniel\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Dr. Leonard Prosacco\",\n        \"path\" : \"t53ol6csf68jlyz9zbkq4gai45azxqinvr0ria992wu2rhhzpo5rzu3nb3drhypdh7fmskgkzjjnykud0qmnc\",\n        \"endpoint\" : \"t5mfkzx7g0pxtarxxb05hhgb43casv1pyoh30vl1uhsrj74uiv7nxllzhq5ncpu84qxgprotb79z6m58f58cs7z4b4iz36wgd88zzwif3x3lnrd2w8fshvqzq0ikimoob5sed1uae5lpl8y6p5kgtdtbirt\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_OBJECTS_V2\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"6j2fli\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"n4yvnech35fke1aloymu8g5c5huc68oiud1tmihauqg4w9wy5jcj023kq6lrv09rvjf11bx2t9pkup6v6b4ozw55u0fc7dcmx\",\n        \"path\" : \"64q212r7mtd55o6849uobnhu1s96uhepma3zro3y3v6xee7r76w0diknscgye643a5x07v6tick2iac4chzjg5cevpeqzukkxq0huvgpaigt6sk7079vso9wdmktbce6lb76o1tmry9a1dxgt1e24n6oz3dnz2yrtdqcc5cjucf70hlmx5x4ic1onku16c8n\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"gcu42x66vxqtmigtuwd8nvhnyegf56c5k8vi90irtj0p7gwwtrmyfm4jwq6cvupdejhhmwq60tjlocmfwz89wd6u\"\n        },\n        \"storageAccount\" : \"w3nx9ypgtu26jw5xyrdayegoehroe3q8bmg7h1ym6q5tmwfuzyp3a6zzbj8y390acw0r3ntgxy1wjlvi1b2gtglo6qmywu6anlaudhw0cnf6diozilepnb31i8\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"uxcatqru3\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Louetta Ernser IV\",\n        \"path\" : \"mri3u7jxmbkq7hkwgnye0np2jchu5tlf5ffy\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"2x06\",\n          \"secretAccessKey\" : \"szr76v7irdtzzmmsxdg38n13euaoqor90kuigz0lncb5gbeozwibpc383hrs8ino5q5skm9s77sn3zailfjw0uridx0f5xh1t74i0b0fuyy3c7y50jvvjgbb2ackq3hq0jtjdki2sb5nayzpfbd8k7pe35wbjefml4mgoz0iucbn72nizbaagnfrq5s1\"\n        },\n        \"roleArn\" : \"07679cdr2m5jhb4umsy2vjc8smng918ullpfbjgm4tzuplsp2r0bkw010p2dif7yxdtms89hiqwe76ak0h1dqmaiu9jkg1tpiv8sgbt726ltmnx38ry8o8uu41h9n826mbyu9djo7o9tfvm7eds\"\n      },\n      \"sourceAgentPoolName\" : \"Stehr\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Tony Hettinger\",\n        \"path\" : \"7lozs6gv02n2ht3yd5kppbqgqa5qb5w11zu771kw1tsybzmloi9xy8y7lmt5n3thasm062icj80w23mxsnlwkdju2sbvipkyejg2on37kd80eo9at9ydzc1u9z117vhiekh05dulerrq24wqwz0x8ecomj1335cccswfv4tf0rx17dzmnil42rfuixbtuvw\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Kasi Larson\",\n        \"path\" : \"afso91xkcv3cycmdrl73mxncs8lnlf08vofv9v4qlq8zri43akztygs0gsj4hldwp6zl15tr5ofjb19797xta9i7kd1k36faye586fvmn8hz89t3wp7nftzmep7mi5195z8i\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"wi1wfovx7he49x4rgsqp091q7sty9rijye5hu3xtc9vaclntkc\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-12-26T15:21:26.888043Z\",\n        \"includePrefixes\" : [ \"rtzw0fbmtfcqzvs2eya3mftup8a870vbzkzjglmeoijx0w5rvex3mmzmaicempgvs6qd98gf5npnxjem5ui7e9ug5snaivbvb28xt7tkpbn9if83irn0nmz\", \"4n2pub033kie3j2wqt9xct9kpowadyjn3yzahwuw2ued75v2fh62hr6s4wmbr26gf08xi77n2wzrfvjbytxs7lgv9dk7yvdmiwq25yq022m4i4n3ai55tp1zl48tyfii0fvw774s27lkwu6bcb\" ],\n        \"lastModifiedBefore\" : \"43ktg1ylp5roeg621d4dtzyanu6nqfrjo1kh7kc9o5sxb0eggrvduw7jjj4i8yharkejb1mgvrouwg05sk1z4yo5ag4zgrrrm1yhu59nzhgzrr3s7acql\",\n        \"lastModifiedSince\" : \"4w180wt788teh72a1khcd2w2nksrn0xyr3hf7vzeua41orh827x842rtjnn9i2dn3u6pa8gq57qfooglmy14isyoms0xxsu9nitxrpyka06174tkgegi6d9qhu5rrb1vn665wk6vs414ruiejebkhmvrvher9lw18swvaf9gjgieoy\",\n        \"excludePrefixes\" : [ \"k507\", \"xy2e7d4ggrrbnhhkbh9yjc4pqhoe1o\", \"0knz1h21pg86sfuxeznjvfcwq1mskh4t3vtn5lb8\", \"pfs2x4nnq6zbwjzliuq85zluplxfa45tho1uk6pwmmlks5gxoixkf56f2cy7aa4ri86a6ym954mr5nbxs52uvk2o5qfmplgrm9tzl9zsyncngx01t5jbdgyigb30s2wsiuww4jfi8jdsj3t94vqe241dpzgly1l09zlm0fbve8rjpwrh1sp7\", \"biec0y8rc26p7bmv7kz0ui2rvix5\", \"8cp81pwcin1i6a2ny3nu6uqrwiyzayba3k7tq9fv2socujx11g3raawxvk56wjrg\", \"rauyshztjh4478nuxqht9x0yjeaah28tpp97e8xkk3iu9i2et1v0bgd3y5udakkxd4v05ct6uf8wh9cfr22zc5xv3ecvwaww5ocjmcjg0nri5ass69z4pl186q0aari5475\", \"gei316pscuszgm4fq3dnbrdv6bewuz52l009wkdocyhvywfjf7583qhmev91pcxwnirei8tkizfm85g4nh7pquj933nsljgaip9ls86266ednjb8etf7hycufep0as49qk8m1b04sy3nicbzo4xygojv8pqqbfvwg4bj6kigo4tm69a\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-10-22T17:32:26.888158Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Adam Conn\",\n        \"path\" : \"ykwi3x1klelvggohkahfnpf11w4pf1u956afxayqab2n9awrozinlnl9i9jmvc857f21wmsdz13f9j1el168vrcsc8mvkl1apfs8uuy9o7654ijg8lakc0tyidun6i56ujfnhy0m21ct\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/241977\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"frjl8n5k97lm82bq96qk3me5c2nbtzje29s4iv879q4c0be9uoe8hmokl87mk0eg7rgelny2q5y9vu389v4iv8582x9fzdyuw4sj19h83xlrkaa1x\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"NEVER\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"h0duye6xy955nfchlw9isivxjeosx2riitrbakk5hrc0xv3\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"k98r\",\n    \"latestOperationName\" : \"Ms. Lesa Kiehn\",\n    \"status\" : \"DELETED\"\n  }, {\n    \"creationTime\" : \"2022-03-18T17:07:26.888592Z\",\n    \"lastModificationTime\" : \"2023-01-21T18:22:26.88862Z\",\n    \"description\" : \"Accusamus aut nostrum nam sed id qui architecto. Ut suscipit illo dolor non et. Distinctio odit alias. Eos incidunt ea.\",\n    \"deletionTime\" : \"2022-12-26T17:36:26.888678Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 613887391,\n        \"year\" : 1366804121,\n        \"day\" : 1381514638\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1316138506,\n        \"year\" : 2048806216,\n        \"day\" : 1278052599\n      },\n      \"repeatInterval\" : \"duqtv4a4qfqklxibkkclu41so1zlb7e77g6mipmhkl755vg3pbe51txazn2vg9hlhdahzgfs4kpdoqohux618k0id8o\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1610577611,\n        \"seconds\" : 1508340450,\n        \"nanos\" : 1026771005,\n        \"minutes\" : 1777217861\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 825047242,\n        \"seconds\" : 1121370989,\n        \"nanos\" : 1270187506,\n        \"minutes\" : 1036565820\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"FIND\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-02-28T15:13:26.888819Z\",\n      \"eventStreamStartTime\" : \"2023-02-22T18:51:26.88885Z\",\n      \"name\" : \"Guy Larson Jr.\"\n    },\n    \"name\" : \"Phillip Rowe\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Parker\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Noble Heathcote\",\n        \"path\" : \"owzuina9c01vel\",\n        \"endpoint\" : \"lhzfnq6z7z2fxt2cu8gvkjfm9sk7s55fk5jsvcopovf6f5kkq2\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n        },\n        \"region\" : \"6xj937wb1m29knvwywadgcycpev24v7jl0p9vsum9o8hfkgok6zmqlpg6wjnfa4ly1uxg3bpwt7hbx9peo\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"5pu2k13uyoc1y5qwt7mpmuxmhan1xyyr0eycyxn0riz8mzikr5kerwr5rqfvrmvtyu884lkxngdyni515kzqff4tangid8v9e8ly3hiprm6wyht5fnbj5ogyvzub614y4u8zu4tg5s3cbhztiwu13e7n1wy9fspuo\",\n        \"path\" : \"47kr4az9rbeqg93ymqertrhklybli60pru6nl7zzkzf8qn93g5n3ifa6q5k5o5ocyeg36y227ahzdg89ojpjogsoisnfp7iwkvsy01\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"q3y5z8bdhdxpim7ktalops9hcbtoir5p27x32s0bmicgc6uq\"\n        },\n        \"storageAccount\" : \"wuizh0xtnm6l43mtwngteghitlfel8f78u5ctvjinhxgbn8ncz4yz3p9gcrl85qi9rt6g79byabgjus2kx9lntz2cjjnii0d99frk9sxk8ft8a1i7euh8nz9t\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"es0na4nhbuxbktvesynagtuujdicdxz1ew0yj9hky2qr2z3bv8mwzwps7w5l5g6uqwa05bcmep1iyc19g2gvd6t1aktwiexf6u2poyxg8o2mw2qag56zmv56oi1eihmpja35wic0ouj6wjnumg8sqf1ilia1usn\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Daren Blick MD\",\n        \"path\" : \"f6o8jkpl8ek0s8lgdj26uyzmzptw0psyzarawg5a6xu80lv9y2zevb2xlo02fv0hexztek18llf20v\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"gp57\",\n          \"secretAccessKey\" : \"zkk37bks05crcpgy4qefvdbvfkiqfcij0ngrybj7kwznl1md5fmc699jcf25pufujykwbs0pnkx6wi21iow7y41ghs1or0gk7v6zfrljo\"\n        },\n        \"roleArn\" : \"g5g8xg1g40m7bgvusf0v7e1f5qb08jyrn9k4wgjpxzzypnbq1zajwo60jtxkp8wzr059kgcvx32vor7kiz6en77cyfm728u86cev457bwgu14oqk725856q86buyvrf96fe6\"\n      },\n      \"sourceAgentPoolName\" : \"Roberts\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Joshua Jast V\",\n        \"path\" : \"eb4ovj2aifob5dru0bzxl0hi2ttl6lirlorhruvnpkt0d0bachhs5jnxccfd4dk\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Jimmie Price\",\n        \"path\" : \"k2ykasq1nfcgr9jybxwwcaseue8510o90bkace5vcw9cr5b1hbhc7rw8jlip5vrox6ei2r6py\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"sjrhl6w40vrbhm3b5yhg0om0csc5m7tif20q8de5zecv9xbiomp5mbzkhop42w5bdgsvqknx28ex5x87kwiwhmadug8u7ngnkoj66m9kzms1\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2023-01-31T17:53:26.889506Z\",\n        \"includePrefixes\" : [ \"2ppfwwjbwyv2n94el09kwc4rx82fuose7l\", \"9mqe4brr3nlgwempbt6n53uf943h571didjh1pxsyb4u8y8cf1w4up703e3801a5ufehaoqphhfe03tvn664nm91sy17ebtogns\", \"sqr834viy64f6ydnuxqf652v5nqpjynvmwjrrqxh1gcevrutwr8bttrfuertd7nz4ntu5jmbhlvl7khgkx7x83msmp5g8c2tilecqex4ak5krcez5zerj48n5ewcp8puk048ynkt56z7q3wu5c6rga93vfwrnwwta9dwbabevzbq0m0q6dh48cp9gsy7bem3vf0\", \"si3j6v4mzgiem6jh2\", \"l34m9h15aq8il14d163wnoycor7noq89fkhxdo852npuh85ikyexme2fkpgdpqs2gdqxcnvd0yr35yj95i2cpc0x8joanv3g20v45ckmnwr9wuoqggy5tdq2790y8wsl3nt8xrwre7g5\" ],\n        \"lastModifiedBefore\" : \"0vv9s3vsiyw5bldycu1efjn4jxotq93cip9vyg\",\n        \"lastModifiedSince\" : \"2gnzdkns0q0pwfk7b9vt4ah\",\n        \"excludePrefixes\" : [ \"z08fg\", \"4ngp6s7vgt4qjz4iyprf4ezxf9ebzjuwxg8p8a1e1vxfz1uzdhl55axobgppadd38fp3cd89lszr6qvdcqy7ht24\", \"k9lycer3yga690vzor0dh69ju5ee64oqb2wdjk7ii3oveu942yp\", \"js1pjiwgnkcr7tcyth0qa0hcongmvmrdnh79uhq0498fazmvld7mltulqausnwtao0s7qd8zqrxwo34xgxzbiaqge3my6r92pv9zuf1rp5i1717bwot3qfnppzdpafcplm89jgrnmzncz737mjc3xgthshyhloyrmn7cs\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-04-30T16:51:26.889613Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Barney Zemlak\",\n        \"path\" : \"rk72a1qgc1ji968z9w\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/958067\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"ffkzm3qj6\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"03c7hbac35bk4lnjegupi8gh4kk3fm84agpha3u8tfvqx7km9chfcix2ebfn5xqr\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"7kfb\",\n    \"latestOperationName\" : \"Eddie Lang\",\n    \"status\" : \"DISABLED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39475130-9ea2-48af-9614-aef9a02b2853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.890259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9daffb7a-6933-4c94-8738-9df01551ea69",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/18hd/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Carlo Hane II\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"lq17yjq4uwwuf4qey2mf2t4teqfqqw58usd6hm2dwsrfgihnjguuv5oah10h5dprzy7iekc3xelle14wz5z08r95cg9lkynsyinwkbhkv3e7vge7htrugmjejibl89ihdb5frgkdj5re6wf63gwk8vh8deq5nznw5qpvr6aqdee0gc\"\n  },\n  \"name\" : \"Charlyn Windler\",\n  \"state\" : \"DELETING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9daffb7a-6933-4c94-8738-9df01551ea69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.882275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0aba23c3-8d3e-4a9f-bc4b-583f07c50426",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/qw46/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"r77mx7ta6eho3hyf6rf9q5rcjssu5lkdlrymkd3d53jnibvojdhw70kmvs2rp462ikn08tlzweecgcke0ilvntwh5rkd9nr0\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Gracie Rice\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"xrb18tdwil730he7sbpsnsenugwecedl5f877vf6693sfhlv63xc8aqb0ic723qmywkc\"\n    },\n    \"name\" : \"Dr. Olivia Erdman\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"displayName\" : \"Raven Treutel\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"k53j9mgsxncztslc7nfagqyd375tg0zhaas7ccy4etj0oiiwjppisj5k755744myaew6o13iivp66cjcnwzj3tk7fhqp94md72e2342n8ae5aw846m2upip2wk16eelix2bezal2garo5052pdmrkov9cyyeslacphnpxd7rumchzvy0mxqamy612i0gr9obywp\"\n    },\n    \"name\" : \"Corrine Farrell\",\n    \"state\" : \"CREATED\"\n  }, {\n    \"displayName\" : \"Marvin Swift\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"ywhba7a9vkfv7a488o1032ec3z3powfetxbttpbj6wq7uu5srw76iam4d1ktbe49po1sqokhvmrh19pm0zij6i7uez5dv2s4x4gb61jchq5072520h5a7mtv2tdsty9e8p7rso18r384mllche6r0d8nh0czku\"\n    },\n    \"name\" : \"Shelia Nolan\",\n    \"state\" : \"CREATED\"\n  }, {\n    \"displayName\" : \"Mr. Mercedez Grady\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"l8uj61kf8vrfmp19lg52zvap37mx16tsh6pf0gexrurt477gtv3z8s9tt7y56fxg0z2agzjcl\"\n    },\n    \"name\" : \"Ami Ratke\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Keith Kerluke\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"vlus4o6tgk06sd2zrd05fjpm5wzj63r078mapir5qjra0ptobaz3romkcncxhdha4d5qgjd47nx3794h76w9felt4qt724mypakej7qizign7xs\"\n    },\n    \"name\" : \"Darin Rohan\",\n    \"state\" : \"CREATED\"\n  }, {\n    \"displayName\" : \"Marc Ebert\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"7t8oh8hof3ei6pxon1nh2ua2ofzcxj5voxwiczjg1djjk2sqwiizxiif34pwo7i27c8dwsizi7it8t95x8gkc1a5i42bzfor36dyrj2lxp3a8vk9ybdw3745e\"\n    },\n    \"name\" : \"Walter Jacobi\",\n    \"state\" : \"CREATED\"\n  }, {\n    \"displayName\" : \"Kelvin Johnson\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"rzrwd0bpi\"\n    },\n    \"name\" : \"Cletus Bergstrom III\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0aba23c3-8d3e-4a9f-bc4b-583f07c50426",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.882038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d27a55d8-6d2a-4e45-b5d1-f83262dc8e3c",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/706m",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"qn0p09zyf9zbtus060wqu6uynqu3r19l14dyd467npjacn007qyin86im1bof3yimw8egu7iyhr\",\n  \"subjectId\" : \"5546\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d27a55d8-6d2a-4e45-b5d1-f83262dc8e3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:26.881097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}