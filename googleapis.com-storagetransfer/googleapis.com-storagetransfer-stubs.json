{
  "mappings" : [ {
    "id" : "d7251b71-4731-3c47-bf8a-6dcb8b36b1b0",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Maria+Gleichner+MD:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7251b71-4731-3c47-bf8a-6dcb8b36b1b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "eb6b6da4-d550-3056-b765-76c5e0e16eb9",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Lucien+Murray:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb6b6da4-d550-3056-b765-76c5e0e16eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "867cffac-791b-3f3c-9e32-a589f8998a44",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Arthur+Larson:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "867cffac-791b-3f3c-9e32-a589f8998a44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "69cf8907-2601-30cd-8579-dd5f3d23e7d8",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Reina+Rice",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Michael Quigley V\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"6v7n4mx525vibh1f6tw09iwgxfxhz4uoffl6vmzcb8pxfya7jy8iasthem25heewpepzynkh1nykpqi9uggs5aeiiujsbcvxnn60bqj\"\n  },\n  \"name\" : \"Darell Kulas II\",\n  \"state\" : \"STATE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69cf8907-2601-30cd-8579-dd5f3d23e7d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "50792f8c-0c15-34b9-a517-f559209e2ff2",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Bo+Aufderhar+II",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "8u5eqqh9rqhgj0x5p7125ur9472uu1nzh6gsymhkthe5jvqo4qy530rbloe790ywz1oywve7mgmk2c64im6gyym76i65iwkoa70almceiaf9grdps746djkhhv6u7cbifw1rzmgocxqg6h9ydx9rzjedztd0dwmrm8jd3gsec"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Wesley Lang\",\n    \"error\" : {\n      \"code\" : 1952262347,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Exercitationem nesciunt dolor. Voluptas excepturi aut assumenda dolor ut. Placeat quis labore sed. Unde ut quam consectetur vel.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Frankie Stamm\",\n    \"error\" : {\n      \"code\" : 331700627,\n      \"details\" : [ { } ],\n      \"message\" : \"Inventore itaque voluptatum et. Ea amet ipsum impedit ducimus recusandae necessitatibus. Exercitationem mollitia asperiores incidunt sint.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Abel Haley\",\n    \"error\" : {\n      \"code\" : 1948071655,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Id commodi pariatur autem reprehenderit quo. Numquam id excepturi. Id beatae rerum aut. Aut quas esse nulla.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Carlos Mertz\",\n    \"error\" : {\n      \"code\" : 275592346,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Rem voluptatem saepe. Excepturi odit qui. Dignissimos ipsum laudantium sit praesentium ab. Doloribus nemo veritatis quia ea quo voluptatem.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"ylvucoy4apbw4l9x2mn3xlaeuwg9u1sq1ph71pi4uq0tks37992lu6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50792f8c-0c15-34b9-a517-f559209e2ff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "d0a95747-65ce-35ed-b38c-abfdeedfaacf",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Lane+Fisher",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0a95747-65ce-35ed-b38c-abfdeedfaacf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "054edb26-db01-33ec-8c0a-a7ac1377939d",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Fonda+Bogan+Jr.:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Bryce Cruickshank\",\n  \"error\" : {\n    \"code\" : 77353541,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Aut fugiat aut ullam rerum. Corporis voluptatem qui. Reiciendis debitis omnis ex. Et esse magnam et earum. Explicabo hic sequi omnis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "054edb26-db01-33ec-8c0a-a7ac1377939d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "a3fe134b-a66a-3492-960b-b6d174b70781",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Collin+Becker",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-09-18T13:14:33.818655Z\",\n  \"lastModificationTime\" : \"2022-10-13T14:56:33.818685Z\",\n  \"description\" : \"Vel quis neque. Expedita sit quis laboriosam veniam dolores iusto vitae. Aliquid delectus omnis. Quo vel rerum tempore dolorum.\",\n  \"deletionTime\" : \"2022-03-22T14:29:33.818743Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 2009286701,\n      \"year\" : 863833702,\n      \"day\" : 12944404\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1079019728,\n      \"year\" : 143774460,\n      \"day\" : 1362673308\n    },\n    \"repeatInterval\" : \"90drrbbobwk0xnv21xbtnk78l22xju3sgb9s4beo64az5u7uagbildaa1vfs52qf6z0y39asl6rbfkqpxulpptlnbw6bofprmldgvx02zf02nh75g0ncdirz7paprphe94t4ofnlh3iqi1z1oqydpusecrdcidue7x1sqz0eikr06c1a1bbtnv9pbaay5pm63gjp9t6\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1686575792,\n      \"seconds\" : 1940571395,\n      \"nanos\" : 156558123,\n      \"minutes\" : 1475063001\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1695279552,\n      \"seconds\" : 1160934305,\n      \"nanos\" : 918136574,\n      \"minutes\" : 1715043692\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"FIND\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-04-13T14:58:33.818936Z\",\n    \"eventStreamStartTime\" : \"2022-10-28T14:59:33.818967Z\",\n    \"name\" : \"Michale Ruecker Sr.\"\n  },\n  \"name\" : \"Marcie Metz\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Romaguera\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Salvador Welch\",\n      \"path\" : \"09fjej0xnvskjs4n7ydba0qi7g60x19x99ovfxkl0iqlw2yndcv06kkfa4el54wou5\",\n      \"endpoint\" : \"vfun7iuflgykst5b08x0op52ap23uke2gz4wilu1iz8ydhuw1tovl6iyjmnorlj97aifr\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"h1yl1l9kv8\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"53dhtb7r00rbiffee33z7jywe9abx5z837qol4h4948g1sb3iurzjlwn6hvyrwio1zpzyg8eukzyrmpavai6r1wupypoym0fr9tbhlv2v099s\",\n      \"path\" : \"9s102kzxuxd3szhz6rac14f9xow25euyci5ejc9wr9qnnea7vbct4eiikhwxiyoi7lfcggejwg616o2o0j2uc2ungohvp78gorf3s5a9l\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"mje5on6onfsjseb2i8vqzqm6myom9i4g1x0wcag136o7qyx8apyld8g2hsvqby0eii1d1xj5qogd6ewqlzqd3kh3hoko10o9em45b333ka3j7z506uepuml0uliymovff1miipg55ppbex4yuqa5lpwm8t6qsgjqv3q65z25yrjwm\"\n      },\n      \"storageAccount\" : \"n28t58t14n5tny0jpulciqq94dpq0oqjjlhokn9zkp2h61sy5t86n0ww\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"ald6ctle18wdv0mrowid5oyfb0cn\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Mr. Eldora Gusikowski\",\n      \"path\" : \"8nkkt18qkt5zzg4woi7obfkzs03y0udosexpcsh8bnayps96zbunexbrer7eezta5zvr5ncew0a4o3aocrd2txvwj2rmgjzjf40i7xa3vzksi8ygnjw0bz0foqt7elb7hrqgyn2hjw6j916pyibtsipo9501guvuhvzyu5pnto7owuljj8mm0fvz91\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"5t9r\",\n        \"secretAccessKey\" : \"kagk40kjvm9dg29ohwendm05ik3e8ufapxtl9xb8hqz343ty\"\n      },\n      \"roleArn\" : \"f7xoeip00320cqdfy6gb2cgiytq3qb9367akgyco45ovu3yugfi8lc5j6s\"\n    },\n    \"sourceAgentPoolName\" : \"Weissnat\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Luther Botsford\",\n      \"path\" : \"37ll58foo27j3nicsag1wq2x59pihjjcvz0nixke2u39cdelgjp6ap2m6y9olkl1al4k9br5bi17z2zb5kpsutfyw1iwoj9ii2l4wpqf8p9ec7fy3t74691oc1mfg3k16laslh4eg7jmaww2l249cuw9tm2kzl8fbu0\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Iona Fritsch PhD\",\n      \"path\" : \"0v3adt0m03l6vjo9wpowc9rt0f4vd47z2kr04v45iptvzdqf9bdm3mgg32nz2flx5vylj1nx9xia6moi74sg2keik5qmwjwedmef7e5y6wcj4dtmonin6st3kg158flrofvhbnykrpg9br39nyy1yopvgbzr2nxo49bft7hvmbdcp3xt\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"j0zj6ctucte9pwz1956mhazqu8iq6qjf7bf1qmt8h5igubzp47gpz2q\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-05-24T16:30:33.819837Z\",\n      \"includePrefixes\" : [ \"dozkxpekjb9899v0xjxdnztfvkf6duf8ym9i8flyfiz6zy0c6p81yksrw64301dlptr4ytyqazc4tssmkqrnv0nkrg579jjie1giyjgohnfvu4bs5flqzdms\", \"0s8bclncq06v1pphxjv91xjabdcq6t1b2cz9p1qxg66socrjn7k86m1bweobi46s758tst8mocjaihsbwvrbk35yq9nyksis5h9ce6y5okwmwfbp8kyzyqip0kj9m6stezslxgow67lm8zuhtwfbgvwqbplvmxxdfbvxfqtd7ue2l9lrhx0rrcpyzqe\", \"gjhquxxs7lfipvtukq4eg6vdo2y2b31\", \"bhvc0bwyncb2t85crjwk7joyhbjcvinink9hkm0hgibq8hkuxkes8eqx106fi4r474phqzd4divabpaxct9d0ynto9blmfi9rbfpy27zvql5l08gdun055\", \"gi2j92gvm3lokoaxm5nk2ele2yfjsawyifuhgs2lccytwkkeokcebkhcc72y2ota1u64w614vrp99uot0zskecgsg1p7bap92ym1nptf5olfjgehc9u1fyynnvgdzvi4r0j3m0yqxdj52c6vavj6tjws8327d\", \"fncjpe01xlczrzod71mv8t0xabs5r8sb1xlfwe4uvg9jlog9yqifxzwrt34\" ],\n      \"lastModifiedBefore\" : \"dj5h3lpp5vkexpwx7x2r77lj1dqkegafq5kpa6jhiaco5kw2shaicwk3jq1ebz6sj3e0z00nj1jnb4\",\n      \"lastModifiedSince\" : \"mnnjep6lrsbc9a2hbmfmfxbe6pdnkquqxqmfh9wo600\",\n      \"excludePrefixes\" : [ \"x4tuvwafulmtun5edcxg7dlk6c8n9iolg9rd1iexug7mst9e9aye6rgv3x9d3cb2mhg0bdfmk5aej87grzboqgn2b2sbee9n6bvarkh84620lm8eolixfzaluu9igssmtky4y488p1ppjhe7nb5nxtr099j6j9wt\", \"8o4h3045rm8bq2keq4z4etfca908rhkmdz5tc1fpaihhahzqqg353og8vwpdcsf\", \"qzyhbdmjmi1ncnqyy79qdi2s8wrnw5brg1qfrw4wjbu2nl3dka\", \"2rnqfnawtu0m4p8xsgtif03jxol0cfmnq53omc1kkd89lofoztx0jh1qgdyhz9prky7apiwrox2pnu8iriqzs5ex0095dwso2u732uvgi5wx\", \"0unoltqwbwfqmi9uu35cfx6dcnsv1reji6zp6p6r53pfgq82f4ci14q0ppmbpz42v0u0h3mctp4ye4kljts8elj72o6kez6i1x56qo21sayqsj424mhy4oeogpgr86e9xjyutnx\", \"52fqdtqyfre82rnwmhn73lj4jrd98oznavufr5ai4em\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2023-01-20T14:07:33.819986Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Cordelia Hahn\",\n      \"path\" : \"qex53os0kc5hsebmw4ntvlcux0mahgx5oeb0efe6nopajsv23q56cd9eih36m65qxfn7ytoxrblqvcnwf3hjfycumuu4yvm72hup5fhmrkcrcfnl5g9ukt8lgn3opvesiwci8slh0qf7qv4893uizpp5x\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/747996\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"u3tgievbtgu6j84e1oezgz0dlmxq8uh2e0onjxwgadbopkjrnls6qjgxlgu6o54owomywa8aei6vn2nnmas6qm60bpupms274kxkk5d3ugxyl39ey0iz757\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_UNSPECIFIED\",\n        \"storageClass\" : \"STORAGE_CLASS_UNSPECIFIED\",\n        \"gid\" : \"GID_NUMBER\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_SKIP\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"ALWAYS\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\" ],\n    \"pubsubTopic\" : \"gt3v0z0omt4dt74a2cql8b4wfqaual8ugtig5fnbns1fcgv07lrrmejiiw2jesrmfq5gp34kofthaudy8tnb0vmz6\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"357m\",\n  \"latestOperationName\" : \"Dr. Lincoln Turcotte\",\n  \"status\" : \"DELETED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3fe134b-a66a-3492-960b-b6d174b70781",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "34539106-d23b-33c5-a6f5-3789b3784a66",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Conrad+Lockman",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "a2z6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-12-12T14:26:33.816579Z\",\n  \"lastModificationTime\" : \"2022-03-19T15:03:33.816609Z\",\n  \"description\" : \"Illo aliquam rerum. Rerum eos rerum esse et nostrum. Distinctio in aut incidunt.\",\n  \"deletionTime\" : \"2022-11-26T13:57:33.816665Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1364320981,\n      \"year\" : 1562327351,\n      \"day\" : 521382679\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 884674699,\n      \"year\" : 206439181,\n      \"day\" : 1569378817\n    },\n    \"repeatInterval\" : \"abj92fx9o9cagldux2vdec9rve4w\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 491912572,\n      \"seconds\" : 1985279944,\n      \"nanos\" : 1590108258,\n      \"minutes\" : 1270318501\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 2021707317,\n      \"seconds\" : 122205990,\n      \"nanos\" : 8320446,\n      \"minutes\" : 683829780\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"COPY\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-07-17T15:35:33.816857Z\",\n    \"eventStreamStartTime\" : \"2023-03-08T14:02:33.81689Z\",\n    \"name\" : \"Roseann Bosco Sr.\"\n  },\n  \"name\" : \"Darell McKenzie\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Stokes\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Greta Hettinger\",\n      \"path\" : \"xx475jppler443ywmv79kb171973pzhoaw2x2cbp0ihp690q8af14m1\",\n      \"endpoint\" : \"o319jm946qnw8e79cnury9eujjt71cya17r2w6hstnb094ps1ppvt8z76xv8qo9i8l4taul43rub6fv2e7p34eqfnx6rgoz64wpv3fslrfaxagil76fk4r7yp1jeff86zvsjbxfj72lzyz9rw1t9gi1wfbyj3efmv7a2knlep\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n      },\n      \"region\" : \"yry0h82kqyd42pgppt3jbrr418w6uc\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"mcxxxci5p89kticd34yw1hjcs3hl35t40tr8bryrgyopspa5f3yhuce1krh5z8p88rt8zsmz6qhxxu9tlhsaqro\",\n      \"path\" : \"0145dsg2wlgsaa3ill5e4s1lb3p75jegod10qgbw2x5df9b7n9yetlylw5r97e\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"qod7e9rw1yefaffz1q2lwoez1ztc7zmzut4d4m0633uk1a1z4htweazl4u4jb82vk3gzvc147mhl1a0b2zwpa0qsbls0fhyt7tn4mb3iia7vdx11fjns8xru6rtcqj1b88jlk39h3vs6jqgc096tpxfe71j284jdrjumv43wra0emlz5131rfkppgbq09lt9rb\"\n      },\n      \"storageAccount\" : \"3vi7uer7andzbm5kucuigu2gnspuyqwjp5ukz3f5oqqhns1g228dglny1\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"w2ctwk4g88xqee8a17tjazhjs30g5yyfo7f4rwbrnp2e7uhnyremxkes16zzqxmuo\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Stephen Johnston\",\n      \"path\" : \"xeu5m21m93g9\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"ap3q\",\n        \"secretAccessKey\" : \"07d6v7513cqhg5dnabi5eussiyp32h8n8cw7rjj9w2c8a2nldyohtm4tdqod6oa3mtmzz65khp6a6cvkv9va0pyvk5xw2lkcqset9gwip03wvloyuedj9sb5x5zp6924hzoe2axykvr86gss50t0g6n5j7\"\n      },\n      \"roleArn\" : \"keymeqiuuu0xw7gh9hlcyw3i6yrpmpz49ugif3cgfdub83episzquzfewuhiy4q1y5ma9wfwybtx1z90tbfa2sugdzezyz5k3p4z7mb7a0st1dpvahsoxc3uqt5nydv0l7azn4mlssdafl\"\n    },\n    \"sourceAgentPoolName\" : \"Murazik\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Abraham Weber\",\n      \"path\" : \"v108sjt447lvvdq7ui91mt1oirmw35z86utt4mf4lver66btoggffz06h1m701\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Delila Windler\",\n      \"path\" : \"wd6k72qdl78dt1vgs8st1\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"7t1tqacwmx6oup0itfoaj7y8vzng6vc17sx0kq0o6apmae9lib\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-10-15T13:29:33.817692Z\",\n      \"includePrefixes\" : [ \"bwex4xl14yt8gqlu2itbmk72li3gnx655eay24ngnk9smjlkcaqnkc5lwdqaemqmwt5txyxwcta4vsq45ppj9d5gfrzma062s8t3\", \"6vxnljgfiqtkhm3twwjh0zr8pbreij757zrmtyvvj6mw4p50yu67bl4bfoe34pvstlgzba9w7lorm6ksjhm5tbx8pani7al7a107zyj2mvlyjszz4kvo8n881lydfbf2dcrp5v5hj0ys4hbztzd3zqp\" ],\n      \"lastModifiedBefore\" : \"gwdbv15vtoasa9ni9mqjygfbcfq6kc3s8210gajyq0wfyfqg5dpo45z7d2c4txc19212uwr8hrb910ju04k1llzsbum6b22hvl\",\n      \"lastModifiedSince\" : \"8mdnsfkngq7cgb89v9aefgaxwv2mdmjvaz54tn3js64g9gurumnic5p7yq47qndqna3rb0n3txk2gim2ab2arlzra9hheck0jyt0s8\",\n      \"excludePrefixes\" : [ \"ve1iljqtqjqvu4vbwgknbdr8oezgv1i2y8nxc3p6cnxlj9be4iegn4vs437seu20ktpt82nxscw42bzwoja9stojh\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-06-04T15:01:33.817806Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Jennifer Denesik\",\n      \"path\" : \"bmni1l18j5b7w6i5r1v0x7l40nlk4pz1mw69qp1brhth3cfbpwifuiai2kc0g4ud35jkowgaae644l4t9oy7f9chlatjkgb6oprbxh6eunzwd12qheypj43cdcjphey4cx5lfvjptmod8dbnk23pkwvosgmmngf8s5uomsf33p8qp39vbj\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/397428\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"d2w4vc8u4wj8cwp70mgietjgetgje35c6dyfqwnw57yk\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_COLDLINE\",\n        \"gid\" : \"GID_SKIP\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_SKIP\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"NEVER\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\" ],\n    \"pubsubTopic\" : \"p649tm9pvp70j7x31tmr2gqz6ncblh\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"1nj6\",\n  \"latestOperationName\" : \"Pilar Stanton\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34539106-d23b-33c5-a6f5-3789b3784a66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "b5d03ed0-bddf-3bad-8ab3-4bb1774e588f",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Spencer+Ernser",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "t27p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5d03ed0-bddf-3bad-8ab3-4bb1774e588f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "83694e03-d10e-3af8-9607-325bf2112e9b",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-10-18T13:12:33.814493Z\",\n  \"lastModificationTime\" : \"2022-08-10T13:21:33.814523Z\",\n  \"description\" : \"Accusamus at enim nihil et commodi veritatis quisquam. Omnis error expedita non. Aut dolores impedit consequatur. Tempora veritatis dignissimos ullam architecto qui. Culpa id aliquid officia.\",\n  \"deletionTime\" : \"2022-11-03T15:17:33.814588Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 818788736,\n      \"year\" : 2109309010,\n      \"day\" : 1151337540\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1402176289,\n      \"year\" : 722876214,\n      \"day\" : 1742800566\n    },\n    \"repeatInterval\" : \"583tpuxx36nachmle7xdb179ya074e5s23k5j8wwl125zw2ky2d8q93ftm0o\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 845511603,\n      \"seconds\" : 578415965,\n      \"nanos\" : 777281966,\n      \"minutes\" : 2014936270\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 70408437,\n      \"seconds\" : 119290230,\n      \"nanos\" : 470295900,\n      \"minutes\" : 1967172767\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"DELETE\", \"DELETE\", \"COPY\", \"DELETE\", \"FIND\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"FAILED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-09-19T15:08:33.814777Z\",\n    \"eventStreamStartTime\" : \"2022-09-18T14:55:33.814809Z\",\n    \"name\" : \"Skye Hoppe\"\n  },\n  \"name\" : \"Elza Kiehn V\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Mayer\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Ms. Isabel Dicki\",\n      \"path\" : \"2g3nozv57nn9c2o3z271cufim6z9gm9q9wlvmwcsfh0omn56rhqlhx\",\n      \"endpoint\" : \"og7zilj8fv7hxo453iky5zanhzib3ky62jiywemuse2zrylcgv3953ua455lq28tribqrmhyez4ezx0y3hqnwddbpdfbyntpo8t24m0yj7t7fxhdf89n04d7kbzs2e1hktg3fmf72gouyxi24wvawu8nq3vtoh9xcaq88i2uchm2fqg\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"ts4wna0fqyeoc6o8wu7wpcl7gesn84b47lk5f2c6uqk58qdlsk6uq0lf4vcov465td8vt35ok6yrv3vkatryjugmwrx6bs2vgi2rbs47uw48m2gvy3vfuone770ve7xf7gadbuv83zl06fz49shz\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"o71xqse801dnaz48b2ksy227v4w2laxn2dzm6stmhq0gscp928e4gul60l2qdjfd8\",\n      \"path\" : \"s6ydp3c8fugexx1h97qbuekzx3e9kysox0qz9vxuepkrs5ln8wa3jozllr3g5vnp5dkmo0g5wkzb7hz06fe71iree30romzq4yjoa1ltq1wm3citijqbkxyt913j8esqt8w4bbgt3mt9uqn9xm6cgdyouyapbvr6klwar0uqkscj1c4auiyxkoyck2ao4if12yse\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"vz3gsqtlsroz5p60qugg7kuekpnhfk8jlr3hc6guzy36ibys8wbrb09yb2kbvq7hxrmvdq51ehczxqdl7bghdae5atdk63fsnbaaez9p7eym56wids3utmmz3v9y8wxnbbiyrb0b0flnq0e93n9b088iwcx02vtn462wtd57ztan16dadslq2p6vikz5jmz7cpb67\"\n      },\n      \"storageAccount\" : \"7000vyl0ah8eerpdufnn5soo3n4qgweacg5zol56ib0ur00u68nlezue2jkkpybhshpg98o5h307a5z9gvrcc3gsgztlaapd4vjxlefamg0496em7tdgptw1g71391uy8f9m6g5xrk41yb924yjtvnhq3jqs0zlbz31hb5mis5f6ch1xuiaw4wobknpnhmawecc\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"sferzuczejw06i8p19apdkbk5oqy1e7ypfvwwntxqto0jut1f3odkuihyawuib16hkrwpzoivnzsgpcpm9uay5svt4cf89p0pn\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Ethan Miller PhD\",\n      \"path\" : \"9cgfwhm2c1lr0xf91hta84a3diia82d6r9j4eu2pv\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"l89s\",\n        \"secretAccessKey\" : \"ldquafd28taeqd2ovfp3p19xfjfeo531fqetkn8lhdo4ufftjx4e3q70yph7x8g8ettd4u2tojn1xwsnn2l1mu6en1yuwa8zsa3x6j4efpqa89jr6kmptobbcusencembpp67g9ggyc7yhhy65oqs52vmw848629gn1ixiqnsmvjr\"\n      },\n      \"roleArn\" : \"bvh54vx1ojw7r5bvvafmr1u8atf41pktqps6emf64bqe8lvoabuoyj0al1xn8al9i0fvobyiko5iipes6p8585lc7pn6imbft4w8vje4kmnoh94cxq5sgrmscf1o37dbszy6pdo1\"\n    },\n    \"sourceAgentPoolName\" : \"Pfannerstill\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Hazel Monahan\",\n      \"path\" : \"1d5yi2byx63uwegg1t35phmcolms56p6lw119yql53vkz39gmgzv9ax0fn4xw9wm6l2i7dan0qgczka69omrine3yt2iqt9kplhnxm5utlljcc1jb8h71lp369lnrre6cal66a4fge7st0cvx0k6awemippxe2l55yrvns8u5\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Raven Ebert\",\n      \"path\" : \"3xr856kymyuh7tt7o69xu2wcv5ptd23uc9ynkrwwqxosn9y7oxnx5sm2lg0yfmtef9x9wpay7cnndrqnpvyi80h1iimxyzv4mtqfyc\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"3a1jhmzlljmvdmjgjo70oiv8h7c2d99krrh4ij4hazuau0u403ij9wp1r25r90ruaa3xp0eu1o8mlvo93occudsynwe45ngctx3nhsojz0hczyadzq2ojbei10wwmwwin7k\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-10-08T14:54:33.815598Z\",\n      \"includePrefixes\" : [ \"9o8q3vd1a7y3j6l27ykamkn9kxf61rf99nhspsr0p11wr\", \"ncfrw2nz441luoxbgsy619jb6qw2lnk88ur14ppwiuy73xeuk0sjpha004j6zc1n\", \"99qcf9pbjuh\", \"zih4a1csalfzcegsvbkorv1dx3iojl3p6hkx8ubc9k6p9u7bzwy2iqx357roed4sgd6z\" ],\n      \"lastModifiedBefore\" : \"3kblpxhgp3997sgecbdqpz89zdbnnd036pqp99uh67r2ataw0esa89hpxup66fxf3r9ewznpmhxlayk6ojrtcp3zx\",\n      \"lastModifiedSince\" : \"9m7t6gakmhl075tyiml1j588d535jvwxemcxh1aomfpvkzoyawq73k9a0akcfyghmfjar38vbuv\",\n      \"excludePrefixes\" : [ \"3wpm7hh4l1do0fz\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-08-08T15:36:33.815711Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Adriene Moore\",\n      \"path\" : \"c059y7mh0xmxptuihne8b00o7xrtnyumb2jrjzfxnvmxqa3h6ceyrcni2m4qqy30w6ia4eo2s8dfga1njlxfpbb8ahq68rvehsvadopmvp6vaqcz6l4slry1ycszo665wo945khnw82m5986tyjrisq31kao7f81gfxjx6\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/800299\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"127m5b85pkqt7pn7zon7w3t9ka6abkdyaoxfg7e3mtqihupf8wd6yrh5hkk4dr9uwctli4gaaq\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_UNSPECIFIED\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"DIFFERENT\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"5kiurk5fio4qedin3wg2c\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"0334\",\n  \"latestOperationName\" : \"Hollis Reynolds\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83694e03-d10e-3af8-9607-325bf2112e9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "22dfb9a3-1f64-3b3d-a6a6-7f200e1e05f0",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "hougzzyh0vvrbe2k5zzdcjh3p8653afebzs6pxe1hrf4jfwposedxxqlr5jny9a3orhex8mewnac19qrf52ae2xatbpa2r8keethc4hwfttfn18rqrfostpq4nyy3xg8yncutszawu129b7h4otxh3z8oblkpvndwer1cd56rn4s92j96i0vr8amtpqo99"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"v0ej790350fm3x4ag9fssjykar7msk5\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-11-23T16:33:33.812365Z\",\n    \"lastModificationTime\" : \"2022-10-14T14:45:33.8124Z\",\n    \"description\" : \"Eos odit neque. Iure est qui nam tempora nostrum est. Nihil unde fugiat nisi.\",\n    \"deletionTime\" : \"2023-02-15T15:13:33.812468Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1292046459,\n        \"year\" : 1392067943,\n        \"day\" : 1386253754\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 595532426,\n        \"year\" : 108125330,\n        \"day\" : 425022265\n      },\n      \"repeatInterval\" : \"aiad2mr5cv56hcvwbp3ifeiz9ih67prx702sufgwyx02g9xyn1fwqnw2s9by0pl4y2wg9j1w02tnvmgykqju2pdd2ege1km6qo78u4e16k4y8wpkrgeatdjyi1j5beu1t0ok\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 702065345,\n        \"seconds\" : 774748583,\n        \"nanos\" : 1856294120,\n        \"minutes\" : 1041264707\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1956023544,\n        \"seconds\" : 917535412,\n        \"nanos\" : 999149685,\n        \"minutes\" : 2004224225\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"FIND\", \"FIND\", \"DELETE\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"FAILED\", \"SUCCEEDED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-10-02T14:38:33.812698Z\",\n      \"eventStreamStartTime\" : \"2022-10-13T16:21:33.812732Z\",\n      \"name\" : \"Mrs. Graham Russel\"\n    },\n    \"name\" : \"Jacqui Kiehn\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Murazik\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Cecil Conroy\",\n        \"path\" : \"ddhc\",\n        \"endpoint\" : \"0zmntbazumyfu53mv1tdubh77suuyao5nnun1oooptsyfkmehnb5wbqw5ny4xn5r20r09pg942bw48ej5sjd7emzugaoizal8mggce8jr78pjdpaq\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"ipwi5jew0n3q2qqi21nowa8otqo7jxes44j0e\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"n28mnkecipz06dwfhnm975fsqlha92z3c\",\n        \"path\" : \"x9ahtw4y207a3plm26je0at0ukqez2shlwfqmvh3tovfhfstu1zqiq83kcej15ovvcqjnjb9mppk4fd3equdrgxo1criy8ng2424c8pr1kj69i0p5qlc9d1cwbeseeupn8d8d2wtohrhya05cgsuetsy7el1y1cl9ypcra375feckslm35bipllqj81kc3qc5\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"ayknnj9ro2m4u117scspvx61ezb2vnabts9dh6f5suzzf8qrelq4zjaaek6py8917omo48b7xohi1z0jll4asveeo9sgkcox49sem7faulpvzc0xe47wsi8d1vyw8jzad0yqwqthjk2zb6r1wcimlaym09wxwted5ltrdxodkvl2\"\n        },\n        \"storageAccount\" : \"w4j8yjck7umxjfum44p5f3u0u19arkuf5713eq5gu237b2ec25t6qky4s1ijndemu7d702wtcdrjxvgg\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"fjkmkjyx2w3qpn8j8n5n07tkku269q79idrkdg2p6t0yew6r4my2orbph315lzjwo6ihpfrcle2q6rqyx2xe9ek5v9n3363shampxb1kcb53rlrkbvhwgxrm85wzbhv9clxdr2j6rgxsoq29lq4bw35vu0gau0tvmf4o1ht3u5a51aal0tp4puh4qdnnbhsqfp07\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Keesha Sipes\",\n        \"path\" : \"lyg9s5gzdebaeyofgwa57mmo8eil3c9cft4\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"595c\",\n          \"secretAccessKey\" : \"8e9w6s6xkf5rofhfxnwnikbw0dmhiu58vrjj7503z8yxjg682uxzyl2fubq252j2ghf9z4s1m3ae7sxn579navleqb31x7yi0mtw1un4culyan8jnhu70akmwnk0caajvfwun24g2nudduq9riafnpgmzl70paj7coumogowfwf040odi1psvcosvqmakr6nnd\"\n        },\n        \"roleArn\" : \"58gp26m162av2w1709k\"\n      },\n      \"sourceAgentPoolName\" : \"Hintz\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Demarcus Kuvalis\",\n        \"path\" : \"wn20vyus7aub9i3tywpxsgulpec96uho898fnzlnvtlio3r676v96t60yfx3zbabus84cea3hljzd9vn2ry049y9qkahh7h488mn6y6mlo8ogsutccd3whicniwsvmacbhajq5wlf4la\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Carey Nienow Sr.\",\n        \"path\" : \"rksy5u3zixzjlt52qrnxct4m50idhjk9oprzff8op35b79o9bwddg2eoj259zr33qexnxxcivqio3j3e3r3jdy25l7aslvtke0wwigdnobquoqt80th78x5s0wvu24u4rumo0cnhbp\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"s761kdh24cg3cjqdq55j4zla6l34vnmcachdeoum27o675dkg8zvh1hldk6eynhg6molr9alcbd37clzjhoejrfxumdjuivjgxjzuiz01\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-12-20T16:12:33.813622Z\",\n        \"includePrefixes\" : [ \"erhvr8xezurg7y7d5274kh1hd69659ud6xkg401uwsh2jn8eyzonfv1fsqk08hf715nxxxpru1r1pg6apmhm8j5lq9pw1wbekpclmk7for0boh0lpozfaw3nag\", \"wca6tdp0k9xy1g3yjvsuenpi6b9\", \"0fextrgpn7tynqz4t4ekniarcpl5xe7fzdz1cvv3ivhfmbk5idqn\", \"6l8rrsnx9qo6ycru0sz22gkhmza1157fy6ipf06hty70qlfamzmiob0a30xkha3tz3fnvzyyramb3ja3vmicick3b\" ],\n        \"lastModifiedBefore\" : \"vvei4jd5662gdvyhw6c9gml6nnf9kmfoocnk5479waln45cpvv2\",\n        \"lastModifiedSince\" : \"o108ec9d38kgbn5yna6aknw2z7v1m303b2j130hx9jeadn064pi1o582mo5dvhpzn8kbnx26nog1h5dcd3hmauf1m57na0vzlzf4wj77qu1129wue75pyeotiynhd2vyt6clobk49u05vfju660tg9n0cq7a7tzobhbed7adefqvqrx368fj1ndlem4hw\",\n        \"excludePrefixes\" : [ \"jfc66obtpxjhif8cvmupr0qg3u5sl83yg8rv4ndvp8t9bie971me5sgmn25taalmt6e0edn5ylbk9dh5je5jmh47v10kwrne4o5rvqrhirrzjfjgi95ai24ezrm8adhj0ex115nqjfhevais33hcz1ypnlfattnk9ghmk0lszvfc\", \"3tkbr2a5rxot6nwl85v4vb3axw17kby6xhmw0sd7k81z9lqcaqxa6lcsa72j00j4g3ob00p034smb9inr09ykvo1gkobmgzho5juu561xrd08v8vwmfmrw7vn3dgopcdb\", \"g5l6kkwvn3kegd3f0shnvdtd2u6nrws3sdv1dj7z37itm2jwjywltk7wra74u4d8sx9rr4iza0qbuylwq9u4ltcb8xfltip4qxcvf4eh2b4puetn00y3ye0llsq9tp9d42fi5sqkd7u3v2in8whma0m26mdehj9igfa7cig4hka406uhwvm7\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-11-23T14:41:33.813764Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Karla Jast\",\n        \"path\" : \"gwm6dxffi6pamq\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/311665\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"oyp0iafilypeloeuzzneuqywxhdy8jtahi872k0shyynx428lgxzc4dp34qv696q51mv375xie36nquex7posvdkzusdgg6c5gc1wxh3sbw\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_UNSPECIFIED\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\" ],\n      \"pubsubTopic\" : \"bzmvhc3ghub9befvgzzdhlubl6peypi0pf1q3vak1p28c0h3eqxtplksljkl2mbnkifgugo27q9vvd2ujewjsdbtmroa6grbwdf6jw6jfi0bm9ss74bmkhkuiqie3b81m3uxmty2t0yhbcqe34acbxh0nb991zfzkas7z9lzieknmbzniqf76djit3uwgt\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"w141\",\n    \"latestOperationName\" : \"Herminia Ratke\",\n    \"status\" : \"DISABLED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22dfb9a3-1f64-3b3d-a6a6-7f200e1e05f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "334ea95f-c232-304e-a985-8ab6aa1dfcbd",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/2289/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Miss Wade Rau\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"w7gitkf1jvpqb1u2qdbketyc69ng5cwrucr02w6r4gynd2yg8saovb6loz4hcsmzxany9wioa0khdf3iw331vrdfhmgtyk3gcqy40558if748uhr7tl13yydtlapdzvbgklysm1ackmtkn8s1giypam09y4nc2rbxgkgqg1j3lf26gldd\"\n  },\n  \"name\" : \"Glendora Kshlerin\",\n  \"state\" : \"STATE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "334ea95f-c232-304e-a985-8ab6aa1dfcbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "91e71540-958a-3f27-9fa4-c20193962009",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/ikgi/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"fsdc7u0sc0o8xbqlhmmz52za5jbdyj90yg49ojq7rvb0ex16rukt0an3z8tlamnhflfp66acxguw5e6png10a2qc1d3u5v4zc6icpp2pku80r89qqxc7gogjzikwmyao3fi5z23glumnbl6xp8tcqexq51lh\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Oswaldo Kirlin Jr.\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"liflvv7ez4y6gefh2isy0qi00n579xrz4bmgnrzcx23y6l408jcwobmlkq5cqunlxqzjfd04wzjs20sm2g4xbwhx\"\n    },\n    \"name\" : \"Emerald Kessler\",\n    \"state\" : \"DELETING\"\n  }, {\n    \"displayName\" : \"Yolande Graham\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"pivg7pq2z0j7znnmii3pqyfsgispywm99bctujwrz36h6s1p12vol8b4al1dgi5zt8weqyw4f02c8n70u5xk7pweu45vjz5ov17a3lacwpr643b4ghz510gi89f7ifbghyqubptgdgkpr4j4frb8rqo3din567\"\n    },\n    \"name\" : \"Bo Wyman\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91e71540-958a-3f27-9fa4-c20193962009",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "30ed685b-66c4-3529-ae34-6fb3f60c033b",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/mp47",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"jn7hniwtw18j05e2mikjlwsjd57r7qzde303exvp27dn35ghnmt80oz606012at09xlj6gmugg8fbjrdkicg1ntu60mf0xzinwil\",\n  \"subjectId\" : \"fc7s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30ed685b-66c4-3529-ae34-6fb3f60c033b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  } ]
}