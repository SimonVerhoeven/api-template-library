{
  "mappings" : [ {
    "id" : "c8b94e16-c566-4cf3-a3fd-b2e851a9cb30",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Albert+Johnston:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8b94e16-c566-4cf3-a3fd-b2e851a9cb30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.636954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "2335f159-0863-4953-80f1-208f00785d88",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Dr.+Michale+Towne:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2335f159-0863-4953-80f1-208f00785d88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.636888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "012db548-af77-4f3e-bc63-67f96b1f8f07",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Ozie+Schoen:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "012db548-af77-4f3e-bc63-67f96b1f8f07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.636816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "3de04642-feac-4ff8-8766-723b9a1e7b3b",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Mr.+Neva+Lakin",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Mrs. Leslie Wiegand\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"5muohd0opjxixud7h7mtzoqiunmf90nfzblilu55fm13wi8qwooswxaypcssanbrcx2vc8zg4nrdow9gfxkha8vikufslsnk6pbh15r5n2ob6rp1a54ck13mpsi2x5kanr6udjdxagbuoi\"\n  },\n  \"name\" : \"Carissa Schinner\",\n  \"state\" : \"DELETING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3de04642-feac-4ff8-8766-723b9a1e7b3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.636742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "476bcf8b-f799-46cd-ab8d-039daca1c7ec",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Pedro+Anderson",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "8npeclcmxeyjsdsywrzi0pcnjwpctdph3l7jmhm2lcq01eu8oi0eqkl72cystu8jw2nvx8vytuoedox3b1f3zgcgzg2wdoug04f7dm0h4nnwz5bnbkhmf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Doug Stoltenberg\",\n    \"error\" : {\n      \"code\" : 889245939,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Earum ea voluptate aut nisi et nisi expedita. Delectus officiis voluptas incidunt odio laboriosam. At sint id amet reprehenderit ut illo perspiciatis.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"1z6pdhodrg3su5otf0wbck05kk6xbz6gozo5i266fubgagy9ds017zw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "476bcf8b-f799-46cd-ab8d-039daca1c7ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.636525Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "ba0912d9-8022-44df-9e0d-c17c3ce7782a",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Romana+Goyette",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba0912d9-8022-44df-9e0d-c17c3ce7782a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.636289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "b3a2735d-f154-470a-af31-42de735a4a95",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Jamaal+Fritsch:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Sacha Yost\",\n  \"error\" : {\n    \"code\" : 477835742,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Velit aspernatur aliquid. Harum suscipit praesentium vel. Possimus explicabo beatae et assumenda sint.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3a2735d-f154-470a-af31-42de735a4a95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.636212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "c2fdecfa-21cc-464e-b5f1-72e7e2244f0e",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Maira+Purdy+Jr.",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-08-09T11:15:41.634198Z\",\n  \"lastModificationTime\" : \"2022-10-08T11:55:41.634226Z\",\n  \"description\" : \"Autem non consequatur ipsam sint ad impedit. Quia laboriosam mollitia molestiae aut. Molestiae dolore aut dolorem officia autem quod explicabo. Asperiores veniam vel veritatis ipsam officiis iusto at.\",\n  \"deletionTime\" : \"2022-10-16T10:46:41.634291Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 267726401,\n      \"year\" : 869006515,\n      \"day\" : 603831769\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1481204336,\n      \"year\" : 2029896579,\n      \"day\" : 1642577269\n    },\n    \"repeatInterval\" : \"qqjguizdid35k7xiwv\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 724195987,\n      \"seconds\" : 315287257,\n      \"nanos\" : 1984454821,\n      \"minutes\" : 1975194915\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1653457033,\n      \"seconds\" : 665413860,\n      \"nanos\" : 1123182019,\n      \"minutes\" : 804325482\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"FIND\", \"FIND\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"FAILED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-07-03T08:36:41.63445Z\",\n    \"eventStreamStartTime\" : \"2023-02-27T11:42:41.63448Z\",\n    \"name\" : \"Alex McGlynn\"\n  },\n  \"name\" : \"Leandro Koch\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Gislason\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Shawanna West Jr.\",\n      \"path\" : \"hyl2fx6d8zbr8qye0k2qi1mgt1a78hfpmgqct72t4z2zl3be0s3qd4o6ycfxefofq5nzblm6vpr8d097ktens5ai1ncd4ofg8jp8ad8iyjl1rc2sob3etui3d8dguh9so0weykiecg1fu0or6kwnh8njua9ygpwnzf7fbibjxsrtjs2f\",\n      \"endpoint\" : \"xsmf25z4q2abaody13n\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n      },\n      \"region\" : \"tgg4n7esshp78jmqlsqaq6q85fx8x4bzr4pwfup84cc9gsbf1xroanh0q82lf31oa8nv4a8o6158urkilkw38nudfppstbnl0\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"iz5fiqvjfsa2ytnq2qq25k0yo8hsky6e1c4q3nb7g226n8rpuhm4uk7e4fqffc7o3w7d1crjpz8iduz8vn9o62czujite0b6syzb4n1v5jzeplztky7lpk171kl9xuhaee4gctmfg3wr4jvbhxk0ba4wibhcc5hqg1519xnr75bp8\",\n      \"path\" : \"hjyyhyjn53squb6ksvzbb4lnq0bhx1l7i451n8l3u8zb1vrhzn\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"ssn36brukgommmobrtitm5w0ykyo9k165peygz2wa1jqt854lsyneqrgjrxodt5dhadsz2fj0fzj7xsyggwath7uvdyjl12fcn3mfuyt2xnwjj7xsjbbkr2ywhuv2qz8mgorerr84tr1ees5tcwx37x3glci4htkgitje41xi68737hhgqepl2p7e\"\n      },\n      \"storageAccount\" : \"ixr5eamd4ufb\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"reo2cnou332ordtdj88bbp4pdifscof5co8wcc36y1s698eax4zg\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Cruz Rice\",\n      \"path\" : \"bw9u132ih2wkyp6cxow9c36g5wgmabsgxlcd84bxain6ehlxicwe115gpb1grehkt1u\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"96x7\",\n        \"secretAccessKey\" : \"nk65ylc6r2yulrfjzwv61xri6e8fnq9gouwg822p7du9xsrm72hpplf8knkiljcgjcfpbj8m5as8ckhfyhyld2p9iowq9rbwn7i1ku7wpg3q9k93gk9upcah0wbcxk5ngq233wraybvtog3cp1ufgvik7vmjhgnfqmegfd3fegkn\"\n      },\n      \"roleArn\" : \"pddbywz7as0u6ahicpafmxca49i0amc3oapcjzb21vx701583w8wu5n5xr73yaimsnprf82wlpvl2jgupmf940ee31jcgissm7sojinlo5612sn07bskc3ikpw\"\n    },\n    \"sourceAgentPoolName\" : \"Renner\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Jewel Glover I\",\n      \"path\" : \"8nz2ltotk4hzv97w2gzy4fz14vdihwdbjo7yf2bf3d976p\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Rico Torphy V\",\n      \"path\" : \"l8i1ucuwizam4ear3loftxumb4dvul0ijatwjwulu61agv942y7azjo69hec06id93a6zq8ix2rkwyviy97wainlbwydjtqk89hime8s46c2xy8fb6evq92nw7s09e6ij6usktjynkczd05989dhj5h8pw7slfoor4g1xqcylu2\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"afalkw665001z3jnrumb937szbkl37ahb85cr5jr68coaovmzqc9ztuxzw9q6csv2kofwxdiqevolt91ahapt9cqgty5inr\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-04-01T08:41:41.635173Z\",\n      \"includePrefixes\" : [ \"0tyme5ai2xk5didohq7zpavm2qtdrdljx6hocjzthollq6q2nejgb0r620puist9meuc2u7njfceq6wrk7t1iw4ziug4eeur8ejrvge\", \"er777v3bm9iumwvwi58n4ii4yc37hrk0eut616ncx9llgkeq1m2ew8rh3ptpfv3fmhp3c4nqw5ahh8a6yrwwgbrpuci8npxl5ma496jps15bh2b0guidvc9sgmdycyvf735d4vn9w\" ],\n      \"lastModifiedBefore\" : \"8vbsqpstswr5jtohzdhdx2pb24ibjuhcd1lfkcq60okbv3l8qkj14j7h5kqwp9i1z1ekxf4564k1zaultftxkiqtopg4ca5qvke8o7u0no1mfjos3a493s7c0jo\",\n      \"lastModifiedSince\" : \"f74beld7w5ca9trgvyshvgv4ipaffa3xc12u6j18muvv62tnqu8fdc0qchgz5m0e0rck3a8sd1ibaya85bxqzmse7o9lsiqer5aae9cl7l541jeombgboblwpxgurth4qby7b5eh11hqul5ub90xhqu7taqhzjtqc53bphu4g3dbq9r0y8l02sig0ae\",\n      \"excludePrefixes\" : [ \"5t2mi3ik6l4aceyfqk5hkzuanx7lsrzdrc5yhb2268j48an9pcjroeznjfpi1xsgrh7ue2dj0x4psn62k7weo6k04x7dob6dyollq9gpptcon2cmqi\", \"w1qxwlav92uvfkpyz92o7nruvfrgd94rcgp42jwc92g4qqveij73s4bdru1xl2q96dqss3im\", \"ecxe50kv3zqwo0twy9xcfjjtkpy90vlbkgh1f7jb5fvtgynmogc8ylim8535f1bexiycm2z6nfdhnc1jbjcx4tt3a1nlwctfzrf6gwzef\", \"4ymz421i228kw2x4znul5wn82u88w6iqftpajeopfg8x8e6fwajkxan8oqn8aq92xjli63yr4eztyowrttkybj01orkffza3js82102dpz1ds49bjsyi7i9wydxi7z0j336cubid64bku2tkjnw5cp47f505tckpb06dwaoc64gcday8j3mbv6rg5a\", \"bffrf85rrqx36qfvgjak874diwipwev22d8dglse4xu755gbotasp0pyqet8csrlrucox3jlzqgdhxc6j\", \"g9g03zl9n8enlc2cu1fv1oycbvsyg0mt5ku3wqtg474bqtfxxsxn35kgofsrwkj3x4cwfm1ipswyt5wa0u2uo1y9uqh58x264pgu3zw3q22gbzat4fihk0zuj1m0xmsbezq319bm3j3hnkhph61dkjxsho3wivt6rl4qg1lsvt11irtwe88s311yx38t34c\", \"p6ukevsx2n5d0eyexe5jc3enbzmlnakvx7ei2pb8t7pl8njgpruaa0tp9n9m6e2pv4hujzv6ijpd5c9itc8djj\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-08-27T10:50:41.635301Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"James Sipes\",\n      \"path\" : \"za0riht2kj85qrowvhi2wp08u3ne0zvfrbawponac\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/578910\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"3jz3uhug18p1mzsbfzvkq8hxiy73xp003s2pozj128apugo8w0vvayntf3wl6y49vv1b4j3yg3cyd4le0t6kwgl1f45uhd25rq5pb0plfro14eluu0okl\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n        \"gid\" : \"GID_SKIP\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_UNSPECIFIED\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"NEVER\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\" ],\n    \"pubsubTopic\" : \"bvphvjsdxs7aw2qyujsu1hhjeiax2l0wybwohyvz8b6v9et29vyo5sl3g1am4m7eabd\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"q1b1\",\n  \"latestOperationName\" : \"Bart Stamm\",\n  \"status\" : \"ENABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2fdecfa-21cc-464e-b5f1-72e7e2244f0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.635925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "bd426675-eecd-4525-9f42-936d315b7ed7",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Benjamin+Turner+MD",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "4f6a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-06-16T09:35:41.632329Z\",\n  \"lastModificationTime\" : \"2022-11-24T09:39:41.632354Z\",\n  \"description\" : \"Illo id sit nulla assumenda provident. Quia et at blanditiis maiores sequi magni. Ut quo est vel repellendus sit. Eum voluptas dolorum nesciunt voluptatem veniam sed quia. Cupiditate similique saepe u\",\n  \"deletionTime\" : \"2022-11-29T08:28:41.632419Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 261858158,\n      \"year\" : 660678791,\n      \"day\" : 1853659518\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1821066910,\n      \"year\" : 823616007,\n      \"day\" : 1588329850\n    },\n    \"repeatInterval\" : \"4uxi472fvu6gm0adg393kkg49vskiv9l05zk23\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1006636723,\n      \"seconds\" : 1499282381,\n      \"nanos\" : 1849821488,\n      \"minutes\" : 623805994\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1946184892,\n      \"seconds\" : 1482638627,\n      \"nanos\" : 1767326024,\n      \"minutes\" : 69416005\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"FIND\", \"DELETE\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"SUCCEEDED\", \"SUCCEEDED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2023-03-11T08:27:41.632591Z\",\n    \"eventStreamStartTime\" : \"2022-09-12T09:22:41.63262Z\",\n    \"name\" : \"Maxine Schultz MD\"\n  },\n  \"name\" : \"Malik Lebsack\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Altenwerth\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Eugene Reynolds I\",\n      \"path\" : \"5lw931jyg7a23nhnnm1te64pr9trqg8f21wnydqpt4cvb60p4gparwn4pjuedtfc8yd57bq8wrmqumzcph7b1g50ok6ha08yl3lljdufgs8v61c8m8qm0d02cxg9thxv1lo1aquo\",\n      \"endpoint\" : \"0ls89gdokwm7vobi43sbjqpbxuncsru7bx0k88j517fy5rre1fqzgg2sr9lshs4bv0hps4g3lne38f3kiv6qrnvwy7yf6c2o2gm3khrfccmxs824zel45m\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n      },\n      \"region\" : \"mn9mnga9keqdwcq9n8dk32jd2nwoxj679dfiq62p1phvtu1wummduruoty90h1eeg\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"javq1gttgzmlgbd1pgg3caf0lvl3tobexdvap1xt7345weji6orxsmx5vk6s1h\",\n      \"path\" : \"tjj6t63mtbgjuc2ai7ahmxlt09duii6tjh181knjx3ojkexnappsxwe632phpoou6gye4ddxq65dhq4yt6qiparuiwof2nhfls0l52u0szjkfkn3dyuqt05s81j1tazww57cyd6ob6b1guatr54xum\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"igqwm4awlwu5vacbar1x7b4esc3k9x7z121257srpjt9o7dgrwswqe6imj477l9n5ztfybok7w0hkr17buag1wh401plstcvlrzv70uap6wl9tkxo1g02hfjkfe42tcv5dyqi3651vn48c2p4kxmmaaglgo9r1l8mi7\"\n      },\n      \"storageAccount\" : \"nnniza457pzbsajacsxb7n1g26ohossugc13d0rbqitczsmrkh3oxtdgajx72ztmwjlphnw3dsau4qonx6evbzk0l1ff8ck66bcnmkr7j9fzougg6nmeldvzcb006x6a81e7h0v651gptiu4krjv1z5lqxqh40p3w4j78585rghst8vrvy9jshyihsqxn49k25jw0\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"gppumjrqi97nl\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Marvin Roberts\",\n      \"path\" : \"4xveqzfhblddsy1bklb016gfpt7dp4ihr34v0uv00ebkm8tll3y41p0z927qtxqfzf9ouqrmvv5p20ird9y7wya0vze\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"1h72\",\n        \"secretAccessKey\" : \"z5dhctnfexhkr5atqfctn9g5yj52ahijn2ucxdhmskh114kgr89k2eb0thly3kl75r81ngq61mr4dbpvarzz1dzhw6vpblp7fep6v8m5q1d9fkq4g7wd223k2kud1lj9yr0igfzhmjyps5ai1h57fww1wbmu6w7f58sailcoku2jnq2w0uazgc\"\n      },\n      \"roleArn\" : \"w899w6evgw59i0si8yruz9cd0dxinj1d4ru6e2fwzurju72mv8ketypgzsnqpcrunefem4pgijply5qxrjb8dydcndb8svpck78am84xxpl42t3nrwrnumzc6kz1uev29s\"\n    },\n    \"sourceAgentPoolName\" : \"Rolfson\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Candyce Mertz I\",\n      \"path\" : \"oj4ojn2y5g5\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Leonie Carter\",\n      \"path\" : \"iiup\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"g4ycf9hugjhyh6jdi2qwa36mtppwse4u65z4r\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-10-18T11:58:41.633317Z\",\n      \"includePrefixes\" : [ \"xokf0l95givm33ci3c1nbmehpj858w118egcwpxyedmg5vvuwrg2joutppuhxn691whecayynerrl9wr9tcbtpp7dex0ttwhny8z50fzz403e5ju95zy9hygti8lzoknnhgsh7s59srvsf2iq\", \"o5z8xjblaiwlvvbka70c1o9zs2um5cb1j5j846fejok5bvbo6lll8lzhifsd9u2vo5rs3346gxt9kica2k5jrijz66hvko8mk0c6hhtsgzv2tc3jfzjrwui9gzpwtex6zl84yhznxlqnft87pcv0u787su4foqqbhi4uay\", \"7i8saylticsii6fmw9cadi0cyki343jcec3ilj9wsr3jx01chb9lgn1n4b6jxuoutqi73yk9r3snc5vrb3xmjk4tiyt67ts3tu3hkaqif\", \"9dl2mbiwq6vnbqwlvh5a8djew8uyxtar\", \"psc8duh9oz0lsik22p66kxjei5baaqbnpzohkn8sh4qrnv9wdabbxs0e63imkcnk8iavlh8hpnv5ueddkeuqjkguz9t8g0galoxctqtp89dg8tgejuhq23429nohu426021w\", \"yld9cyh7pkbh2sx5hhhdeha7\", \"ni0siz394zb71b8ppqnkerjymu65tao7lmag3hd2vv2hkd2s2o3mhry6b4rf7i74t01lmhpuozvw2ifvawewhbb4t7d1uqiny15wzumebbq6gyyzu4\", \"4g7d34437se32cbbhfh2dgsz4hmvaov1qrzr7emjbxipnk41x39u77btdn9s7o32h70g01q6d947tbo009a3ria1ydifucc2hx078p1oy32ojpb22nq59y9q8n\" ],\n      \"lastModifiedBefore\" : \"8gau9fco25cu4h5trfa3ipal5ul106x\",\n      \"lastModifiedSince\" : \"faix9a5tfo0r8pq1lvvsudq2iuf0ypoidix7n4a1kb7qhwryil8hirqh48uhb9z6mwmrj37gppsrryxyc7dl2gw5lu2o9hpjm\",\n      \"excludePrefixes\" : [ \"t7hxkodth26hizf76ordrlgla0wrvomjf5zyzn7dafmqkhfw7qcygalgqs3fin2m2e3ly64uqjqmpd8rrq195twvalx4e5ta4wm7m2x7k2tmue58mpzru78hcwkbs3uhvx5n9v5mxt55i5bbuszqjkuli8pfrk99ogyah4t51fx7l218psrm1v9g\", \"edndprt55kmodh84a7k42zulut81ip2ynqz7kcfuucpm3nox6x7f6mattvjl3mu7oedwypx7c1qcp7hfhhoro3y8vbymrxwu9ivkwb5zguoiok9w3a9zuecja\", \"8i5ejgay33idnse7gotm1jq6rb2cuqpxqlcxwzhgxiir55\", \"2ac388ny1ogp2nj5ug42r5uwha5v1cstnz45slsy7lhpj4mm2vympam21e3qeeglb9t91b8v9lts1f1j79\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-07-09T09:47:41.633461Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Larraine Fritsch\",\n      \"path\" : \"frv1c32fn2tlb9iiv8gbzrxmoak2eri6czy8xuvm2cbfptxxh5jvk4muulwyjuhactuy2ef49w2d5f9vw8lzchijrv8ec07v7fvpmse88uk2sf6o4qrrrcns59d0tromdhqnm2ajv6k1xavdh6bg2zxe5\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/205668\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"vpsrjk77xd12fiy67i26iv9mhfmc07ff7hqyh0arbqnp5mt7wssggqqw6wea3ootnpxg8vlp08551hsn1jm3y93w3on6u6mo183ilviymuri1rnm1ft1jciv16i1iq3dwfk4cmf5n2wgzoya0q9olr6vfn2rr657pi4plbrjft4ncxxsr2lemfq8ovow98i3u4xfoqx\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_PRESERVE\",\n        \"uid\" : \"UID_UNSPECIFIED\",\n        \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n        \"gid\" : \"GID_SKIP\",\n        \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_SKIP\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"ALWAYS\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"l88821gu596nsyw3umamtww04q5bvptjnthins0p1aqnzeb9x4yqzikqsyczvnivjso1i3d67lk88ju7r1oot3bzy2ftw87wl0fr0hktkbdpetfoetiko1v9w2qm645y26ctx8drpb0zi4r495z5r9ibnv\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"48tq\",\n  \"latestOperationName\" : \"Reinaldo Bradtke\",\n  \"status\" : \"ENABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd426675-eecd-4525-9f42-936d315b7ed7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.634156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f519947f-e7a5-4e26-9200-5c740694ba45",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Miss+Rosemary+Klein",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "9b2p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f519947f-e7a5-4e26-9200-5c740694ba45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.632294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "07858772-91ea-4a59-913a-7226fe2c1bad",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-11-20T11:43:41.630351Z\",\n  \"lastModificationTime\" : \"2022-08-21T09:43:41.630382Z\",\n  \"description\" : \"Officiis in qui. Sit impedit doloremque. Ut nulla ipsum et.\",\n  \"deletionTime\" : \"2022-04-30T10:43:41.63044Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 355613476,\n      \"year\" : 822288867,\n      \"day\" : 642660377\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1532630479,\n      \"year\" : 1585552284,\n      \"day\" : 1843224764\n    },\n    \"repeatInterval\" : \"nzqmy2dg928eb6\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1016220096,\n      \"seconds\" : 1672317717,\n      \"nanos\" : 1104016438,\n      \"minutes\" : 1371621452\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 552859515,\n      \"seconds\" : 1348150476,\n      \"nanos\" : 573658162,\n      \"minutes\" : 172576652\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-03-22T12:03:41.630618Z\",\n    \"eventStreamStartTime\" : \"2022-09-21T11:21:41.630648Z\",\n    \"name\" : \"Irish Hagenes\"\n  },\n  \"name\" : \"Carlo Considine\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Marks\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Johnie Sporer\",\n      \"path\" : \"z29d6nml04hqbigijj\",\n      \"endpoint\" : \"kjdbqw1agbbkjkcaej183bpkfhz2jo2u2iq7ox51opi56pd97pcfa6asheaup8nnrgjdxwv69uqtwl\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n      },\n      \"region\" : \"yy7gf3gsaadm2fn18yk9no46arlauwqvqy0yp5sgwsn7fx7ienvjlywqgf577bhxyl7lpwh2jjxutyha1if9sknbmui1ya8s6p0mxorubofwijqa33we9ombi9lsnszo\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"4x4w4n08ppd9cqo0z07uesmjivtgedw8j0n9da1cckjr19j1lfg40xp40sdnd85l90xul5nreheka4nn0sd1fr6ibmf2qop1t83c37gmocxuvfsi398lrepy4z1loysrwp1rlo9gkwle4i2dabd4fa2nar8oc3q807emlh\",\n      \"path\" : \"k089ghdkytat0gmhhky8eb9qoxfl8iuxbcl1tqvua70ftel3tc\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"5pziy4a71k5yorm6ujkt43sady1sb8x0eed4j50yeh130869wldh5sqjdpf011dqeiim0it22aubhqvqihsgvvuwimg1r6u8j2g6tcgt1p41w5en8mi29995c7klslyjuuav3i5g3srlo62d6upjo\"\n      },\n      \"storageAccount\" : \"qtockw4ktstvrc4lorzg6r27bg16bhvl88wqs46lilv82jg8z6t3u6walgcbzujxwtuoa0912sm2kiei9tbg7f6vwkszhapaqz1qvkiaxdc8i7gvnggv13zv0k5pglr4i2pvq356bxko8pc0yh8\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"67ps1imfacm23ew\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Davis Abernathy V\",\n      \"path\" : \"98bn14iuf5v76qr7mq4csuxz2c6wd4zof12rcndgglayyb9l1xw6wi6bhk37v4ta0kguyuf76bpprcn4xshci8yrf8acs41p1n85c8okwy4dxaanr9bn5nymfo2zn9jstswmmdwzfwfc4wdgr5l8b3c5tw0469cglleblmwrmomw4no0g4cuvdzseg0jgwz9ozjj7y\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"7wk7\",\n        \"secretAccessKey\" : \"ctd40438rcu1fnpbgagb42hxuutt0tpk68nd79p63zik6ql8hnimfljsj4kfp6v0f4gmmrc1isxtavqh671yjfjo5kk7hk0\"\n      },\n      \"roleArn\" : \"a87coy9vgd3q514yp8jgzxn1y0x5kn4kmt099inktqxn6rqat5yjth8x\"\n    },\n    \"sourceAgentPoolName\" : \"Upton\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Reed Jast\",\n      \"path\" : \"bci4qop6z4prx0jyet6jjjnh5kua1atip21ox0gfcd4ciffa\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Lakesha Zulauf\",\n      \"path\" : \"axfmcxlns58sid978l5i1ztr5hhsremc3whyos6ktlu9sshfbir7dkuzyvdubg4w5z5xk4jcbzamv97hy992yh91rpe7exew\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"5oltob0ffi1syz7fq113ptwlymt15wtot\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-06-27T09:29:41.631387Z\",\n      \"includePrefixes\" : [ \"jfv7s2kqg439nwypqwx3id3yxy3rlaqsnlw916rh9zrwuun3s4duo6ui2zhjwxi803nxl8bzivr69ivt4mpw\", \"5ppwg\", \"59lr8hk6\", \"dy7wmszfp2nutwt2eh1df34g1ovuauwbj14sau\" ],\n      \"lastModifiedBefore\" : \"hhjx5kyusrlojceybfxy9ba6cvifd27toqhvttzj1zsxwxz37my8v73rt1itp7kwf0x29aed7tr007jwy0ve63jga35jfw4bfuw7w5dpv0my9vhnkv9fh1n5y45evhk0voaihcqc8ww7xthyvljkq6patwf\",\n      \"lastModifiedSince\" : \"s0ov4q9xe4txqdqlvoe7pgsjqqftvieg4j9reg8wl75jyj0lh3s8we9sxiukfv1fl5t77ywoa2h1ehtkisfw8dmfogovh7kar5snbrh0o9hhb0cfut79u9qpnc\",\n      \"excludePrefixes\" : [ \"3ydfv7d13ep26297ax6mbqla86ef1cel6zmmwz9uqj0z4mknndcd8xae0a1k0n2gbvfmplg9vsdiid1xk5qcv8t5w41yigkc9oywqif1vzgwx4qrcxr2n3xonz1kbm1sw8ba\", \"wc2eqhdrcc49fykrhuke20akrt8nrvbobtqxcvpms8msefpc\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2023-02-15T08:29:41.631496Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Dr. Preston Watsica\",\n      \"path\" : \"xhd7h9zu5lx4wfonjdp721b5j8xc\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/925578\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"a0pr0lz25e3px3nwv84z1jm9ssadlp2ctxau2kag0qvfsl\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_SKIP\",\n        \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n        \"gid\" : \"GID_NUMBER\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n        \"timeCreated\" : \"TIME_CREATED_SKIP\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"DIFFERENT\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"lizw1ghrjbdy56jqztmyagfl2xlt0x5aamugd0jvgq1x6gs6ywbr4mcrhl60vzd67c1scsnodj1wpftwmlo1b12dysaxmv07jb6qsbr3fe1w0y\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"8kk1\",\n  \"latestOperationName\" : \"Theron Moen\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07858772-91ea-4a59-913a-7226fe2c1bad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.632106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "6e048cab-8c15-4db7-b2af-23adad900681",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "fv7is9vdfxzjmovxxna9zb2kcd6mi6rkbgkj5gkox070ury0u33vfyc0oa3i7wzev0b8js01h6m95ofmuz0z38tjwk0ps6c0f7rjlx9k6tn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"qrxc9zca0t6igm38xyf1agdpwptogt4fyag\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-08-21T09:11:41.626298Z\",\n    \"lastModificationTime\" : \"2022-11-10T08:34:41.626333Z\",\n    \"description\" : \"Maxime quia aut velit adipisci quos. Et enim accusantium ea earum deleniti cupiditate labore. Rem ea neque quibusdam explicabo aut officiis.\",\n    \"deletionTime\" : \"2022-03-30T09:49:41.626407Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1400444035,\n        \"year\" : 883670679,\n        \"day\" : 1863212103\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 237870673,\n        \"year\" : 417134767,\n        \"day\" : 558533450\n      },\n      \"repeatInterval\" : \"235ukpk5mqtxvfg9h835j71z\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1499966587,\n        \"seconds\" : 790192929,\n        \"nanos\" : 1598733211,\n        \"minutes\" : 1234696151\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 657702137,\n        \"seconds\" : 1892559273,\n        \"nanos\" : 1487849937,\n        \"minutes\" : 1428155996\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"SUCCEEDED\", \"SUCCEEDED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-05-21T10:16:41.626619Z\",\n      \"eventStreamStartTime\" : \"2022-06-11T11:47:41.626654Z\",\n      \"name\" : \"Jean Quitzon\"\n    },\n    \"name\" : \"Leonore Rippin\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Medhurst\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Barbara Harber\",\n        \"path\" : \"69968vjhm2jk9m4modvo2gk215ghda1fb975w5nqq6idfz351s2luimc0gi74x9slowookk1wopip31x62uufzw2ninjf46r1r895pgnpokusyi49cswb\",\n        \"endpoint\" : \"d245dr6td1xpg6djz98i6xly38wlzocmbx7ttoh9te7ur\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"89na03h7o6uzj3sm2zidjtozgpyzxgsge0d73wye9dnmq85sidbi6hex5bfiullds5xx6s7rog6bqmflkve\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"jh48jy2qtruy94iz831u4glhn6hv1kjesh3lvhr9zmfgd02ps1pb790gc93uwfq2rin6h4aijnjqsc1yzfrxmfjop1ocdhpwttt32gytvi48jx32j8p9lg6ogdr57nej0ucb9nc7hgos6fvt3lyrpedg8ipg3frkyw4vr2wmbtmc06iv316\",\n        \"path\" : \"8ghvn9a6a4d38c87p9y69oxmsxau74wla8z9lyp5mu7rt1y66o6g4kbovvf1d7cu7ayln3uvmza5if6nt2ont34x5ba8mdsowi9jkkgeuuzjg6vyh4dp47vrdzx9uuck4ntz9hnimkiruv3dial7tyqlzr0ahng4juxteu72jcyf2wx6sbn57n\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"tamdevod2lreass87x6vd27lqsfh1w7zucaxw9ur2ayl3531kdic0w11s3mxi15zp94cqrub0ux293xdiru1y76ys9y6iobhuxc54we226z4dggxvesnzziwhlj8zd9gp47gghn87aocq3m\"\n        },\n        \"storageAccount\" : \"3e4yclp26y6p8y4161u306xzkpqmgp87tlr2465j24v6zjvwrwi8ard9642\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"p723ou8zl79ptzfos8hmxgu3y8xddmij9mu1demukt7t92mi5itl0rs4hlji2kzxwof5r1gjafy4r8nw3t9stghbkl6xa45oc6f090gw8g7za0aa8i2nx6ci0i7kmbqp3e54siojwag9bw3bhjvqweze69dlxpgoguabn0ahco12yo6w3q41lj8bhb1o\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Coralee Nienow\",\n        \"path\" : \"kz7iij4j21xkyxhfi655cvvz5ff5man9aw2t1kk73hcdvlzpvmw7px2m7fenb428j4cldlrfz21dhd4i8bqtgmle16h1wp7jxgap1ikaxbem23d\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"bzrn\",\n          \"secretAccessKey\" : \"k312f3077tdn6715apj6800wmzwigwely50wxjplbl4vtae5cwg9n162hw8bbusdlj4lmj2jtxx3oz89wpvw0wap34vfnifvcg8wmfethqo7fgy2gwm9x646xbngq15b8pavmiyxinx7i7dzakre7l3cb0awj0te15d0ky1d95o36eklay80rijf87xx6\"\n        },\n        \"roleArn\" : \"6vw73pyljrv0gkonati1rt06elkgetkzh7kxtuu828c6hg6qeuoc9hdzs8nklmp8ijrjv7co7hn9ci0bti5fpkl8qhus0iku57y3uk8uo3mishpj0uwo01nnmxnsrtp9eqif2e4xzm366le1zptth0lr2s8csf48shu95vlmpi9n9nr6b2p8hds6zhggy\"\n      },\n      \"sourceAgentPoolName\" : \"Runolfsson\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Jonna Wisozk\",\n        \"path\" : \"yf7zp2i08z9fd6k8pgd0mmf24ovo1dc7u0mgb4fn36zek3rjxed08vvkm19f72t2bo612xg2hh32l5jwisp6s9lheqohlogtrdu52tz5j2hzg6yine3xwzfvz9e\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Alfonso Macejkovic IV\",\n        \"path\" : \"6hgga\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"b1z2z9y6yztrfjyh38f2epsicb8td9exyhtu8fzxucvxqlyd1evygycd4182360khabt8xy4n8ayy5z31gxnoe6pj4swzludu1ettv57orzy7lvd5pygicsxrj\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-07-28T11:57:41.62747Z\",\n        \"includePrefixes\" : [ \"cwt8onkv0fv50o0n2qy24lrjtlzxml80yp7skddj18bkzf\", \"jewo2rzixfs820xlblgfiuwdv4f7r9\", \"xq4y6692s7w1gcajm0sla9esmaxp06vawas7rq0qbhotz8ff1gml7ksjgtts19l25n1clhtpcy1ujvz4xcfjr0r839oaiah9cvb44bm8mqwuebgiplbj6hfn763jj13r6h9kck6kippo6255ue10w2ok54uisp8oymcotw1zusv68k2tufd7xdm2g4ds9c2gl\", \"0ln6i7jllku2euzojpivkdwxlru1pk6zclm8meljjyd9bcnqv4qymxabjc9gsuw3g6gnvl5ma33rinso5bazwjh78teygu7tts0sp\" ],\n        \"lastModifiedBefore\" : \"92znuwzjx1d4medp1zod36fr6qxxvjshhaw3ztqcuuv5z4n1m8jw1e58qs4xe0n1z1976ln9jyzuaq266q5plu72g4es9ft4rzbetbcb45loyss04c1ksojzsgsy09d6auehxc38f4cyxm7fxmjgeysmpy\",\n        \"lastModifiedSince\" : \"kf64xuxzcsjw7zopega0tjv8uqsi5rq5uxbjjr2wfzhqzahyn50laaaj7hpv79ct1fm875hr4k6hcgcystqubwh7o4n73bqeb5oynzxkq67gsjelaf5jd0rycfbo188kz85ilqqbmyfl80lr78gzxf5q4cdqg62jr7cb2mpwvnv\",\n        \"excludePrefixes\" : [ \"spcyl57g96d45fwbij2w3o6nrxa3s6n5msp74lq3k5ywsxknolonkadrdpu6gdudmkw9et5chs16tnt9q89ahwhfb6exemu3nyolcrb7sxza6w\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-10-25T10:48:41.627592Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Kacey Jenkins\",\n        \"path\" : \"ggq8wyvmnbnu66jq3on1v3jx\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/769058\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"97ne8nj3y5zux9537lv7nxmzcz8y753\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"NEVER\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"1u5b9j8oisgqsy6p00vhjhf4xqn6f8jy1sgajrcg7ft787qxvn26bzrjzdn2bsfuj8nryc6yrzzo2aexdtq85x47ldkszssnju6zwgz0p7es551xf2gzde9vo5tjexq\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"095e\",\n    \"latestOperationName\" : \"Miss Antony Considine\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2023-03-06T09:07:41.628154Z\",\n    \"lastModificationTime\" : \"2022-05-15T09:12:41.628183Z\",\n    \"description\" : \"Architecto optio reiciendis. Repudiandae dolore ipsa perspiciatis eius est. Et eos harum voluptas suscipit. Beatae accusamus iusto laudantium ea quae illum sit.\",\n    \"deletionTime\" : \"2022-08-12T12:10:41.628246Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1726477191,\n        \"year\" : 1943812219,\n        \"day\" : 326084903\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 2107414117,\n        \"year\" : 421812564,\n        \"day\" : 316659076\n      },\n      \"repeatInterval\" : \"w8y62h4iibetdvfm5xy7bhvhxgtc1ecbku4663kofzuz9ese0co74ex8afhplwfv8g6zhipd9fzwj33440k79z24zs0yvyjanglh1u0l\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 2044623272,\n        \"seconds\" : 1724432119,\n        \"nanos\" : 1334059279,\n        \"minutes\" : 201750498\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1443722018,\n        \"seconds\" : 794173996,\n        \"nanos\" : 1903617353,\n        \"minutes\" : 420760830\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"FIND\", \"DELETE\", \"DELETE\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-10-25T12:10:41.628433Z\",\n      \"eventStreamStartTime\" : \"2022-05-06T09:11:41.628464Z\",\n      \"name\" : \"Emilio Kulas\"\n    },\n    \"name\" : \"Winston Hackett DDS\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Carter\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Enedina Frami\",\n        \"path\" : \"elcd0u9jvarnuc9ynpg75e9d7j5nyvz2fnsedc7p\",\n        \"endpoint\" : \"tqj3ip1biqq2bw97fbdglgjvbaaj59e04m5jb3x70puupksbly0258b6n6twi\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"bydu4ucrlh6xn7oqd4japl3o0b7yyl6x1qaksrbjzb4dek3z4kb82yo5lam6pnmw4e9mkh7voshaec4ciyr7meng75aprll1enboc8rf0htvrmubjf7h8l9ui63algfep1eyk8jbq9gpmie7sqmczrp2xw8m5m12lnf74d4oc5aod4zc5gi4lgj4ldb\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"zvdfdvskpdjzp7r1vyafq29zg73gl44ju2vlw9ujoig1xfmu9zfeysx60g6wbl7b081exz1en4us3x735rqy9s12z8gnvxb7aq2vsizx3ywfwxnu65r0kih40jgfz559vgv3wdmgeez2cqixz5dbbb\",\n        \"path\" : \"g318ghby6em9p2hz08tm93o2x585w3xsejt8vt380x4vo77y6t07s2\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"ui5da6cxa5bixuwx66066xlsedsw8fsuvqflkvoa3rmbjzkvvh0u2pbjqfkdp99udqjtv5w0rn8my7xmcbtj49jdbixxuggalyhwujhuhcd1y8gfswdylodggry4iqr478t4\"\n        },\n        \"storageAccount\" : \"l9ttpp48edrt5p86c8pcj7x3l2j5ruva75pbzfh6cldy2gqwekdm3z7zcpdcz16qmijeutkz9sd6x8o88vez3kdqn0g9m3b27kf7ub6ozg0sjxhgwl38ljkjlzgams5wrfdl0w296r28mq5t\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"9ca80ub8humt5ipsf0jdgufndc8eq4zkoq3htin84bvhg2p0tc70xphsu6ovima45hqc36pchjr2hjc9mwm71y70rd1vpr6jrmzka91cz1fjosiflv2l19zx4j0c9qw9dwvlrk0c3mxth25\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Lonnie Jacobs\",\n        \"path\" : \"k5m0bji7tttvyfrsrcqbocb3g73jocx12a6l2qcp2mpp5y42am2sjgjq6ksb5uknunrzawjaacnw04jdw2l8bghid7k77ks48uxihabq09ruqg8x6yrf2n8w844gerrnnwfiqjwuligmrffxb7rax194sa442a3hn670k03adrzkzg9qoy\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"5p4z\",\n          \"secretAccessKey\" : \"ww7jb8wyndvaxdrrofm72kutkwweqx282exgz0z056akwurdbxvjkkwt\"\n        },\n        \"roleArn\" : \"ut0t3uu0knwo0808t01e4kltp8zd81aavvriub3s1qlcusfr3nv1rtvr9hmo4yp0vxy0pkbxpdj\"\n      },\n      \"sourceAgentPoolName\" : \"Braun\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Rossana Dooley III\",\n        \"path\" : \"37knnk3l9kjl02n7d2ba24bfh6jfsn\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Ms. Fabian Kiehn\",\n        \"path\" : \"gy908emsnfd3ncrx9o5np0z2hmxuve7gf5xl2usz5d9v1cn9o8bbesl1vkdq0d5w\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"kdklqr0wxwy767tbgl6\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-08-05T10:13:41.629211Z\",\n        \"includePrefixes\" : [ \"szsys8iyde6mktadh5rlf5sbwx74wkkkyuwp2cf17mdt6nfs03i4zke4n9wxcj3mrzmpdt38cd7ep05vg94h8xxuj48vr6ojibuxzviyxkspx2ue5oflch956f4kc9qddxg\", \"ivjlnwi7219nf50s7j83glx895i3gprvz5m8u7w0qb2c4pfpakq3jp18vltyl8p4cnv5t93wbe1qyh1wisipse8xnxx5d5kgdq0ttmvnwz6i2gykcep1r7rnyw1rcsvlxxyadtx1yldvaj5kg78ohap21us03pn8irij17delg\", \"i2naubbb3a1w9si1zjk79ey10ric5lvut6wjsl6r2lezjcuqjfxwl3v49ob69macdahlwjm1rmwt4b7in94eda71qp063xkfqjbnpnafpon43u38yyl40\", \"0drg66qubwe3j6niwaml92pt79q9ru5u1k7surbbic4xd8lf0ma3m12lq12vlvqzc9n3dd2zq23fkweo753zhkkpxaxh90op98vgldrptej8\" ],\n        \"lastModifiedBefore\" : \"t3qrb6z1z6l5fybu9ap8xij577ptpuhjoa9nwmrv94r9cl0u7c3da79fb4cbdy281hzuiv8aneh9fa7o90iruprvh52n5xtr2k04id0keyrxicpdtnzmy2mp1pylzns8ee9tfzqmxeiyn\",\n        \"lastModifiedSince\" : \"pbwaq0fgpkixuuo4xd3gtanianxiuqljoccn7v1iuwi2xv0bzd9x98f\",\n        \"excludePrefixes\" : [ \"u63sve54nf2qzebs669wq9\", \"ydmpjbyf2cbks6srnh9oyelmli2tlg00fs9o6z0cmk795xo56kx3h7oqeyyugkq6ucjg2pfbi6gbxwuemzmhjj15d8040h1vryglrt0vpvd8m9q9udbtlsrnehsx4wohwer3ywf\", \"tjv1gj1\", \"xpsxn1h8eaw74xful3vg6slx1lbb95jp2bcx5qewx2gxswo75srrzjhlz9nr9sstd4hsy\", \"94ife7wcpxwh4kwlysyw1k7bchan7\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-10-28T08:30:41.629462Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Walton Dooley\",\n        \"path\" : \"4ueoelhubgah9gw1hgz0zbj0xp3x3hou8rxeye3bjf9foqtz1t790ywhnhv87c4easem5un406bg4j5eufeiy38szc88u1p9qtotbo5bcyws7cxej35n9rxusaqtbykohm1t04l2vubvyr7gpaws9ca3evgnedo2rur4oy4pukddijpgc6v1m9oibeffv\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/287666\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"h7o0yiqdqroyds0rjgft4wjrwpxrx589e5ek4nkvc44o4n5tpuyfz5xg75o4thzlphokxx3oisiqrruancl2ag3tc5vozxm1z9g4oiwramzl2v53tpuvih0nxu6vnfene01btjjwm7mwoxvv\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"4ksweg7plq3zj6vndki3653fw2lfpc1uvx8aka6c8uxnxoc9dyn6wegill0iiqgj89wreaxk3ifbrdqy69bff27pzvzka2q9to4sj8prmer4hcuefxo97mdkn6p5oy9koao037qv4ucd8an1deswci97l457\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"7za6\",\n    \"latestOperationName\" : \"Eric Padberg MD\",\n    \"status\" : \"ENABLED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e048cab-8c15-4db7-b2af-23adad900681",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.630287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "fd520658-5637-4969-aa1b-20b1b79a6ee1",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/r509/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Jospeh Leuschke\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"7ciz3y2uvz\"\n  },\n  \"name\" : \"Jeanene Lind\",\n  \"state\" : \"CREATING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd520658-5637-4969-aa1b-20b1b79a6ee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.62621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "6c6ed847-39ae-41cc-bae9-07e2866c074e",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/bu65/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"j07p\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Dick Jerde Sr.\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"5snbdgwkjbi88hjrazt2fz73zv0y15y2u4mnf6oi9pj4u9pdp3qfndijyukvfdgrlulb9ni5hrohs1qosxw7bzclkvawgewm5r7vuc60ncxygh19qqvd63eqji7s660xlz1oesj0yhihfl3galv8lkfuxqufo040eexoq\"\n    },\n    \"name\" : \"Rosalie Parisian DVM\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Miss Karol Towne\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"4p7hujr5b1dy0vkmrz9mfzt0o7uacyfc2ftzmqchhgrhvjxe7od9s0\"\n    },\n    \"name\" : \"Constance Cormier DDS\",\n    \"state\" : \"CREATED\"\n  }, {\n    \"displayName\" : \"Dr. Esta Prohaska\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"3rzba4ce81zysyebx1e2ghzr26k82kb4uet3rynjon4qem3j2pdxc1on1kzytppiug6nhu1bqhdiz0cne7sz8yhfvgvahj6kj69c0o7h2wp7j60pmysvlrcc2vpxeeowagz828cys0xm2v58snxg\"\n    },\n    \"name\" : \"Betty Reilly DVM\",\n    \"state\" : \"DELETING\"\n  }, {\n    \"displayName\" : \"Theda Abbott I\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"1z4e0nr8p5fjpekz3\"\n    },\n    \"name\" : \"Peggy Bruen\",\n    \"state\" : \"DELETING\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c6ed847-39ae-41cc-bae9-07e2866c074e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.625951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "99bdbe6e-a9c2-45ef-82dd-d0c15a93815f",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/a0in",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"udmpa0gz7c58r5ux3q02xa22vq8j31s64ke0dnb84qug0d4nluueb41069ah1hsqdez6u0b0e2mtttr2wpkv9incwctciig571nf2c8ok6txtgcud165bsfpxkxa34rq5\",\n  \"subjectId\" : \"v4m1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99bdbe6e-a9c2-45ef-82dd-d0c15a93815f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.625276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  } ]
}