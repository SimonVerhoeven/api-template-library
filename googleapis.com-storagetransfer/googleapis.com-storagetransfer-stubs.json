{
  "mappings" : [ {
    "id" : "f9925ffc-cbdc-40b3-a2a0-39feefa75f12",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Dr.+Loralee+Grady:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9925ffc-cbdc-40b3-a2a0-39feefa75f12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.115579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae448e55-3952-4038-9dda-4084b6838ef9",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Maybell+Breitenberg:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae448e55-3952-4038-9dda-4084b6838ef9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.115501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0354a42-babe-4114-9229-c4c2712299ce",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Leida+Pouros:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0354a42-babe-4114-9229-c4c2712299ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.115427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4b186791-c0f2-4957-bc86-53f9d2db666f",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Sherwood+Wisozk",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Miss Shamika Koepp\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"pfkx3s0shn6ebmcnse6kfitxij156gyu097144uj4vshc9uisjnk03tzjda6n7ji2nvhev6kb452qkz92v7u3ll1ebjn7fgtk1c68o3143cc96u5ltyjozsxpb8brcia6shrl49od2xr2kfsihnyg6jpenu76rw0z689wztu7r70cp8fhz8ruudmau3ewcjlsx\"\n  },\n  \"name\" : \"Mr. Ilana Gislason\",\n  \"state\" : \"DELETING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b186791-c0f2-4957-bc86-53f9d2db666f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.115343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5089135c-bda5-4f04-8018-25a8f1d2ce95",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Ressie+Frami",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "yzqmhyscnrir1753lk88supifxu4ykkjo8v"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Raymond Jenkins\",\n    \"error\" : {\n      \"code\" : 1995159363,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nostrum saepe dolore voluptatum. Ut deserunt possimus. Suscipit aut ducimus qui. Vel odit ad nam et.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Asa Swift\",\n    \"error\" : {\n      \"code\" : 1063695301,\n      \"details\" : [ { } ],\n      \"message\" : \"Omnis quaerat dolorem aspernatur aperiam amet perferendis labore. Ullam in minima magnam quos porro soluta. Animi quia quos explicabo dicta ab. Aut incidunt error. Repudiandae ipsum eveniet eligendi e\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Albert Fay\",\n    \"error\" : {\n      \"code\" : 201653477,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Sunt voluptas eum quibusdam libero. Quae a sapiente vitae dolores error in. Non id molestias provident in quasi blanditiis nihil. Accusantium tenetur corporis ab odit libero.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"buxau5em08teu8uusu7l4fna10z8hfsitywknricz57qvjyn0jwcxbabn4lisj8mhp1071d6hqeoc0ixl1yio1jf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5089135c-bda5-4f04-8018-25a8f1d2ce95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.115104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1d62af0a-c625-45f6-a89c-2803060cee31",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Rolande+Gottlieb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d62af0a-c625-45f6-a89c-2803060cee31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.114626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "373fc787-c40c-45c7-aa1a-cdff60eb2239",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Ms.+Patrice+Donnelly:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Charlie Berge IV\",\n  \"error\" : {\n    \"code\" : 1736277877,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Iste eveniet ipsa nihil et et perferendis in. Quibusdam est fugiat quia minima reiciendis. Atque quo cum et. Hic omnis fugiat laborum ut hic commodi. Praesentium magnam molestiae laboriosam rem qui.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "373fc787-c40c-45c7-aa1a-cdff60eb2239",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.114518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aed12ef2-d275-429d-9fd8-0103ff577b11",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Mack+Koss",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-06-25T16:30:51.112138Z\",\n  \"lastModificationTime\" : \"2022-10-12T14:30:51.11217Z\",\n  \"description\" : \"Qui soluta delectus voluptas dolor quibusdam ut. Occaecati eos quia. Et quia atque optio illo et doloremque tempora.\",\n  \"deletionTime\" : \"2022-08-30T18:09:51.112233Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 450335794,\n      \"year\" : 895256553,\n      \"day\" : 952368218\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 642401406,\n      \"year\" : 1984819741,\n      \"day\" : 1358034331\n    },\n    \"repeatInterval\" : \"0k15wuynoodxm002g2b2fhsx4d5afr\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1185841169,\n      \"seconds\" : 864496335,\n      \"nanos\" : 1876937695,\n      \"minutes\" : 709407232\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 636449638,\n      \"seconds\" : 812333371,\n      \"nanos\" : 2114858606,\n      \"minutes\" : 1247060863\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"DELETE\", \"COPY\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-11-18T14:26:51.112448Z\",\n    \"eventStreamStartTime\" : \"2022-09-20T15:36:51.11248Z\",\n    \"name\" : \"Rossie Orn\"\n  },\n  \"name\" : \"Gloria Mohr DDS\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Weber\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Dustin Farrell\",\n      \"path\" : \"uk9\",\n      \"endpoint\" : \"jn13bfr4ohy8hyuaw10vz1ql2huiwu8d8ngxtypdjnov1msicmucspxzqgllejjdoi5mv3b1h51m3mrtwocho2n20hud0fkwed99qgybzuygyv13lw6nbssx643m2tis6mnap1i98syefwoalc1tgcgqm2r17q86oqkyyxjpky5\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"s74onzgu1z5xaikxxe552inn2zg31rfpkhd3m3qzwhniavheahcezjfkz0loy0y0vzgoe9w1gz55ukqxlapjbvwg3ptantvnf87n74trp6vrdz5xiwzoazb16zr5g83iq4qbkm3pv\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"f1utbksrxeiiorb0q1mo15h9lek9rzv8g1c8d3c66dsml50x44b4re3e9xgmb0sr8xjogv4gv2k5k5hlj6cvgmd6ogtwfkfir\",\n      \"path\" : \"kd2wntetdp47pou4ih65v7mnasrcoq8brhl8eq92diut98o8jgxgevgc2o791pw5uc171z82yqyys82aeovwyh7\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"h6n1qw085t130tbkvtznkdecbdfjmvxd2j9qk78vqilcbtx8q6dsc1xt0489b97ux8jn2go84wbpuj162fcid8nibxv669xbzzhkn70nxll62hqsbidmz7jbv0ulbln60au00nlfivt4yth8papza2ytmh3ryag5j403b\"\n      },\n      \"storageAccount\" : \"x2aoe6tbwzayca7pcddcpfy8bbkp8l86jpllpoonfxz8kxy0j4p28x1uz0gfhmwywt0yb7o9i2i7wery2jtvt5s95y8co7o3enh7rl6drt4rvfr4xl8lanjrnzw7d65qy23rmw67crg7qy64jyytfqhi3i96j5r29vmvza437rut91sgmnbq9w7on117zqyj\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"nw1jfl6tn8i9vasiyna0evs3kxayx8zt3eyhv7a7vizdmnt8nd75jftnh6yiw1xkme8eo9kq3nkz154wxn329k0ht02fpevas3f89vjdc78k9lilk9t318vyonu1dthg16al9uiwl6pv69yg56i4e295wydsckr0qvij5gvsqj36vfb\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Kirby West\",\n      \"path\" : \"y399fn7g83p272be8zupr32p5t8b9twke64wfacjgol82exy6dofz13lh6jhdd4ins36zlts2un60\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"0y42\",\n        \"secretAccessKey\" : \"pz1906v9yrxey4fp3etqfk5u1h9tnv3tik49fa5huefvyttiv3nzgl6ahmmf239qjlegk4akcq4ehk0r21le1h4kmegjyf9xeaizm0mh0yc2mbu0phwz2ir5bhcv3lboty1ve22sjwsqbp5kbzoqbrfrpu1dwsrprauupbsd01kzm24\"\n      },\n      \"roleArn\" : \"z4zktftumun1k32h67vyopvwldhd07wufev70dy9xp5uc6rrckd9j7u2lqgfqhhjwmwr42yq6yp10ohnp1qvgwyn1531m5lg25usbazwmr4y6uz3luv0brwrhwbvpuv3d1ubmkjkg2a\"\n    },\n    \"sourceAgentPoolName\" : \"Carter\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Ethelene Ward\",\n      \"path\" : \"xhuv40sayp2dxikl4an2f3jxvzvc1zpm8pbx\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Antionette Wolf PhD\",\n      \"path\" : \"ngcu\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"ahi8hbzec1d94i7i7ajue0qcpgs3suguqu7d7hp2wwcgexer4fb\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-10-18T17:17:51.113325Z\",\n      \"includePrefixes\" : [ \"2xhetmtdd8jlp4s4qmo66zah8rtfztdejy3bibj00k4zp2n94wemdbo0lbtz6uv5if5slzl7vat3cdfymeti5k3crbsb7khu4x\", \"16gqjbxnzpmbnixiw3gl4xf2j2y7rnixr8v9tcring63rjl50lq0tx2re0a1po9sy2iewlhjo4c6qb0entjs86s0w0e6xwfw6hl2tw4tsa30fnbt8zal0cps6chkt9d0jwtk8q\", \"c1x710dng30o0vyfpk4u8r2c75a9h1lxbjz0evfghx1w0wvjfnv5d2boouspdrh6pk8a7zrh7utycugyeiiqjss5vwv2fe7tez3g8wqgkro6t2chiaa6b46kccju4gjyucgr0xgzafaj74ctvaqpkst0vq9pv7t5q8k770lxjukid8goqaqqbn\", \"36z6yqd8azzefkh74xln0xj3rtj6i5nuqt5d974mbt4v57tcnigyzikqgu7ylzmnn0l\", \"bgzgzi7nutnglyqs2z1l34fup8i1zmim51ik0mfkshp15ed0lrljqwglgq27tw3i94o6v\", \"8fyuiq861a2c15k43uhl49ep5ekgkk5d1ts5gq0n7xgprb8u1xnine1ut\" ],\n      \"lastModifiedBefore\" : \"yslj1hy\",\n      \"lastModifiedSince\" : \"v6jpc1f30oa5jjekru4cqqvzfeofbb5sdr2j1x8jbfzt6u65w3519jmy0cgyzkyzmo9bode5y33c5ucgru2ltosc0f6tytrr05agr3llf0v\",\n      \"excludePrefixes\" : [ \"vud1g3gscherppuzafjpdw3k0oeuvutbbjazthrph0acyogyzm7dh98io1v60jn6uxev767f\", \"dkx2n52pycagdllc0tuagpwzpza70i5ogc42d068gyp2ymuug46ikn8sjdwierglmrmc7azxqhvvdn5w44erquqqhp0qb2w4i9m8vjt16v53u9yht1jzbjg\", \"vdgmmf8l6u6rg5s0bk34b0jg2sp2dpvlbb0ethmc2o42uxozyrtd7km2lz0w2svrwxd8voznc2gare4mp4u67eqmf97z55cvd27tjr7gj5jmpp496bew9yovxiabelkmuryx0lb5tkztr0xopntfdhzl6hkye5rrdvpcrkmuzcdc50mcw9muplfwf6\", \"vcn7m33w1k90f60lgvmqztbe37xy5iqvswroi3kv78sftmjjnlzi2zsv1xwtohku1d5po0b2i5oj544yr90osoylped\", \"2evz4\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-06-13T18:06:51.113491Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Mr. Edgar Williamson\",\n      \"path\" : \"aj0ais7l50xa5z8wmsq4nj0ebloxso4ceansjb1gblyhwhomg2sbtw4arvs357rb7ue8ccv8jr0v4a3ah09a036iw1k3eki6ai2v8texl6ndkfvdl3gmdq0d9r88xmx9p2x15k37qu7ai4hp85u3iqk0xzmr3rzw1n29f2nmgspnedosrm5kzbahqv4vmthjm\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/639999\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"lr39j46f17ubi00q2wehlzw04uqzdf5q9lh57wfyrytj807988hcmrjmawge2f8ptllfy1xse8bjx6z1rlcnszh9z7zfpx36\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_UNSPECIFIED\",\n        \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n        \"gid\" : \"GID_SKIP\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_UNSPECIFIED\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\" ],\n    \"pubsubTopic\" : \"0d9ssk1w03vkoqrpqxyr2mxnx74rhzwjgsy3sra0kztw6t7idq489ru3ph42\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"008f\",\n  \"latestOperationName\" : \"Laraine Mann\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aed12ef2-d275-429d-9fd8-0103ff577b11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.114216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9e769c7a-685f-43f8-8b97-b0104a448566",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Deidre+Smith",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "y677"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-09-27T15:32:51.110125Z\",\n  \"lastModificationTime\" : \"2022-11-10T16:35:51.110154Z\",\n  \"description\" : \"Incidunt voluptatibus ipsa quidem minus minus. Quis sed dignissimos ipsam. Laboriosam rem minima asperiores. Provident et eos.\",\n  \"deletionTime\" : \"2022-05-07T15:03:51.110214Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 2028167291,\n      \"year\" : 1746525004,\n      \"day\" : 1606198010\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 685158064,\n      \"year\" : 695139854,\n      \"day\" : 1860650694\n    },\n    \"repeatInterval\" : \"kn3eb9ntxpesqg8l7jrnl09qv6u7lyij1cd9xvwp7aix9wpuqf2y75rercajkhcsrcpynicrnvj5mu46jssrvmtubw3x40zccqiriyy2nnkexf70bdh12if5huoxbjmljchmendq9rbuyhxxwffv82\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1581063133,\n      \"seconds\" : 1368359016,\n      \"nanos\" : 1317504857,\n      \"minutes\" : 1694775255\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 593623529,\n      \"seconds\" : 2123658017,\n      \"nanos\" : 1704471246,\n      \"minutes\" : 1514408596\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"FIND\", \"COPY\", \"DELETE\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-07-12T16:42:51.110397Z\",\n    \"eventStreamStartTime\" : \"2022-09-13T15:51:51.110429Z\",\n    \"name\" : \"Benito Nader\"\n  },\n  \"name\" : \"Weldon Gleichner\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Ratke\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Jona Kovacek\",\n      \"path\" : \"u1j68zox9jflhc6l2msz9fgnxduf0\",\n      \"endpoint\" : \"ag17eq5s6kt1pclh6y7x3iz4fh29rdoeirov6rpsfn2w0d091vop6w033tzm19wa1q8ppmganojqi56fstti7eyc83oat26ieqeyzkd8e5ezh4jigmprck4wjc2yf94h\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n      },\n      \"region\" : \"c13sr10f50vfn8u1t5h0ukdw1yq9s296sj577ju52qw1\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"xxxzaz9oual1nm0btp56d8mmckkjr7j44em1b4awfiwi8jds9cd4y0wbayd0nwjf74r1qa57iwgao9dxge2alo4k2k7v9cseb6yi5wobta6khajk198wsuz1yc3ixxc33sb827xxz6xdpbn7t3mh1zeeqlhh3pxsbzwdyzqmh4n8tfl8rr556fc3coctqpq302ry64\",\n      \"path\" : \"ittlhpjmlpmk1qrhoj\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"vibyp7q30sxv73m8j7rebdib0yjwz4ei0tffk7gm92qyggonl6ir4xent8tyhps8vkp8e4yx9xeicmwwtb4ta8ceeds8iruk78qpaal\"\n      },\n      \"storageAccount\" : \"pekai9jjrai4dohtoj4kc0jv\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"r4kr71ud78eczhbc5i1l9y58znj0hkwcb1ept4hmmsjs03wpz61pz2rbxwpadk7b4u101hknp6bxc76nbocjdvk4yirrzrdabe6vubfa9jd0nv5gg3f87eq5dcjw1aa9mx0ay12epp2odwmee8ybxjr5f3e1jbysls\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Scotty Skiles\",\n      \"path\" : \"3vu30rlfvlclxviry7o1jyqjdeat4ajv303s54yg2o3js8ex0907plqoqpdutb3n4gj5lavtrvfwfzb8lndafvhv9xq4fgmfnhivb50w3ia0mz0ebl36q851kn5r75mf85908doza3qcnlee8vvh17yn3tq4g9arbmq07\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"ntw1\",\n        \"secretAccessKey\" : \"bsigcjct2bfdf131ag2al3uo8la914wlez2rner7gl2ocdcmfarobi9wu3ub4860tqk11yj5oce7l6t8a3ufj7elpvrbpbnhlwjb79ueiv0l6gvpsshz7ykjya79gt7smy3eb54ntas78fp7\"\n      },\n      \"roleArn\" : \"rmirffmvagpd9e7rulvrbz3r5g56wvhdfaqa9nv8znaslfjhth049sqmml06503qffd6dy0l53bmks9rx4aogjymo2pmgz1uw9zn8ghmlxptges9lhinsipg4m16o8mk07i5xmayt90i3f30tqz9dzxf5\"\n    },\n    \"sourceAgentPoolName\" : \"Blick\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Dr. Winston Nicolas\",\n      \"path\" : \"9n1onfgnqytxmyk00mbs0h5vneb1gnph9epe2qujy3k6z8w191pdjbm2zkb9316m8iao6swbai5ftb92rclsh6d0zuqodx2ypdfxup0j1x8ghxdld7p8l290xexhwa4slhp684gfjncu73ytvnau1u69944d2ax2jtkibn7vx\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Lesley Leannon\",\n      \"path\" : \"bemwin33ep840iyyok6bknw6fzg67j54cvrajw567qcqsv39qy7v4fn33mu25g9iwnp90e9zj49txhf78m32rj6wcsbrud\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"8y2od35moxxzc89qzx3uv52pqrcimphi0zvmeeq881vt07dmt0ccql97trvty8whrilnp\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-07-08T14:46:51.111193Z\",\n      \"includePrefixes\" : [ \"pfp883be6oroa0ic29fmcchp2a9iint727rg8ce6edkosojlbuxw3x0lw14cjce\", \"r7mho02me65xwqdybkt1skv5tcsgxokzrz95sf37c54lk\" ],\n      \"lastModifiedBefore\" : \"9yg30mbldyn7my0ojyrbzhndnkf6b65cz5fazuvzhzuits19387jexz3xia5y6r3onb5ak8ajoqx5n05cne9kx3w7eexhyac7cyqf7gi6cicfoj3wzobspbdwkewk29\",\n      \"lastModifiedSince\" : \"onvz5rturgfvlylxzvd7mq6aafajiq8fhi45eiu0385esecduj75zy1jnlvohx5162dww4glcptncmd6js19iqzo8rwy0mb537jbtsz8lwfiplsy9k\",\n      \"excludePrefixes\" : [ \"4v6n7chw5etbu7uo05azx0ourwfvhjcnwywjwe1ip9k9ylj7hskkph64if42cvinrmg69mel92wmw42hre6p11a3vay9agextz1mgbqo8ogh1axj26rat4b2zxgiec\", \"a17thft6dygavufb051n\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-04-10T15:32:51.111302Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Arletha Parker MD\",\n      \"path\" : \"8h7z7zbf8k8drmw8fhvly2gjwacfmux2omutrzhg16oregkhj5qa6akkumw63cpuabzlunxq1\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/236974\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"hxzs10ywszqvko64eidjqzoqp1h4get\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_UNSPECIFIED\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_NEARLINE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_SKIP\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"NEVER\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"j70x1il047os0v6zces58w5thk6zhs7owowchi93nfc7572hsjts4k9vph13t1dkn37duby8dmfhjrfyssffns03umef4ccddv8eha9qnb7o8hs01wx0anrfd4\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"poch\",\n  \"latestOperationName\" : \"Todd Herzog V\",\n  \"status\" : \"DISABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e769c7a-685f-43f8-8b97-b0104a448566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.112081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1431ede0-2c0c-4eff-b25d-465b4748ddde",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Margarito+Barrows",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "5990"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1431ede0-2c0c-4eff-b25d-465b4748ddde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.110088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "16899af0-9834-481a-ae4a-7812a5f76bae",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-06-09T16:53:51.108114Z\",\n  \"lastModificationTime\" : \"2022-11-13T18:01:51.108144Z\",\n  \"description\" : \"Reprehenderit aut voluptatem eum sint autem voluptatem ab. Quia itaque sequi rem accusamus sed. Et nam repellendus.\",\n  \"deletionTime\" : \"2022-06-30T17:33:51.108197Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 1228156419,\n      \"year\" : 717070186,\n      \"day\" : 980773821\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 1841053535,\n      \"year\" : 1120697807,\n      \"day\" : 1092935394\n    },\n    \"repeatInterval\" : \"6k3kfhi6xzjdyyr6zqh707rhenkn52if9l8udo4vnrs5f0mf3am2opkxfyggf8bf7x37rzazcy0ty6bvrz8p25xex7xf8wcdeclui92qpdr0uhir\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 10912922,\n      \"seconds\" : 256247388,\n      \"nanos\" : 2121337803,\n      \"minutes\" : 490485758\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1392244607,\n      \"seconds\" : 1186041539,\n      \"nanos\" : 355102517,\n      \"minutes\" : 2065731533\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"FAILED\", \"FAILED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-12-17T14:39:51.108354Z\",\n    \"eventStreamStartTime\" : \"2022-10-12T17:18:51.108382Z\",\n    \"name\" : \"Cecil Zboncak\"\n  },\n  \"name\" : \"Alan Heller DVM\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Rice\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Tod Schneider\",\n      \"path\" : \"cubt2zzi3mlroaj7j1d4808i0wph3no17kt9rbk7up1x4xbmnpi7koosmg9mofjcmv93sz4o3jooacuers3dgxt8bk1pd6fqmzv3jff42mf6v4578yfjrk6mskmkijir\",\n      \"endpoint\" : \"6rwdvphr3\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n        \"listApi\" : \"LIST_API_UNSPECIFIED\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n      },\n      \"region\" : \"1j0kr9dvggfyohxfxqysi5knftyst0csagyp0igwno07wy9l9g4h8s2v9oqxok9knl4fc1\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"r08rin7mj8u9ouy72c8xwmhtenchabi2q2x5s42n0ky6svsrumpnix473c275b740tbsoucn9yvxag2nv7mxofi\",\n      \"path\" : \"d2tjkzc684a7qzhfvuwal1k4ugot804cw3blllv91anjs1jk1f5zdq4v79lrahztigo29i2ife8j2dwpc2bhvstef9vaqo4a0bzqiz7wmsone4m0itpw3k8lhescdp0o56\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"unmms0njce9ip7d02e0o6rp4deyn375sb8jfgw3ur7yr4fqkzdlhbig1rex4h27icap1q662smchit2mmfws3wzlolr946fk2xj7ytjf9nfx7r75n1yqlpgcrldxtywmk5d5y2cpkmwuk3rf21eafbdpmsugk6w4ajg8cgv7wve09dba8wxse7sq80eycj\"\n      },\n      \"storageAccount\" : \"0zo5ls1rlq2yivfetgdwmvkvui725vzn80npppjnfovops84bve14ecgvc\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"fyfvwt4bi7w43v1nho2onwg\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Carey Brown\",\n      \"path\" : \"p5h3aj0b2f7yt4uhbtuioa3qfxq09a0m3paqur5ck0v7nbhpkrp1abk0x294i10e3id299lxmuevee8zlzt42ka1oexpaxuyqy6pjaaj3wwi4xuizd4jnp1t88x0kz5afq0t75i6kv58\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"2s02\",\n        \"secretAccessKey\" : \"m7e1ve0at4rg40cc8o3kq43hgeime8ew2l13b9eyq7xv24ibaa5dtx6eqbhc6yhs4t3n3kgtzy71u26lha8h4b9sqd5cq0zy49rlkqf\"\n      },\n      \"roleArn\" : \"efurdrxemu9tujf1ul0asvwx76th1p7ahrdhnijzfn3dlvjls55oqh7b0l63onh4bw6vm84usy51dns3jzfe2l3gj19jev1\"\n    },\n    \"sourceAgentPoolName\" : \"Wiegand\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Rosalia Bednar\",\n      \"path\" : \"4wdzku86khq\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Shaunna Farrell\",\n      \"path\" : \"99qodd35oy302r9f4o8zalofuu1t259k0a6kjeqam7v890z186kqk7ee1uprqoiqp6r8yhbkbf5a67ftjtbhmo621otqno77rh9ic5x9rggaj1adm5tegs2h9sdt4o53bzntgygltkxk758agtx72vi5eyhobhni17uph9petl4xmnrn234357hivus3f\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"w8zdbslwacluur\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-08-24T16:26:51.109088Z\",\n      \"includePrefixes\" : [ \"2mfodmogc6f1v095rwnx1eciv93o4ie1kem7\", \"w3sfyu5xjgwv5ug2gizbe00xdmyur50oaamjymuqijpnznl95emhl8dhgcdtldx0egr4lfbdutl867u3yze2ifitl8s11p3yxkbx0dekyv9f1ge6ww65s9wjwh00spn6o7or2comptf7xvfxgpu73m3uicmnm9p89082ckhf9l1hdkrskz3rshra98t1ic1plbi\", \"aar8slfqg8x8lvwdnk83awd7aplectmej2kg7abhj5yfm5yyxm3ok8e6vnwt\", \"vyfwejzx89zu4lkju5xj51l5h3czrf105b5g1yk47r9jnocl96kd7roi9qf4ccb65ora7ut48bnnclqo73lotdwedagwr90or6rfaedp8n4qhvr1ybu4bhx52fo8vusi3yiic7xinyepxwu48c8bd7gfc1dy8\", \"jufj7toqliwz8qa3m1a\", \"e55utjjvudrqhkrwsqzirpq6k8zhhis6d7hxs7v9byzx0231m\", \"took61mje50qozycnhily9jfrbxnbjoujz2ihd984nun9ovq3eocwizdrg1atphefs0vpg7gf0uhtch5wopx830lpiu4bldli784ah4kko3jiwbdya4vb2e7zqug9uyvbk0hoyg9p87itwdmck2b\" ],\n      \"lastModifiedBefore\" : \"2i44ujr0r0idi4tw7cz5jayt8aj8jtdk3maro5mdnc5x28keu38b76vjwu73vf5is9rwvkbwoocfbzm5l1yv6u0gduymf7qg3l3dzyh8w1fjrsrjpf929u04d224jvn7huentlo6nq25xdx4e1toa2zwys9zjlweu1c\",\n      \"lastModifiedSince\" : \"szeal00g2w8wil5rje7l2n1yvqvuqg8inu7lj5428u3u9k8m7rdf3ddag1h419yaem8zb2yneoe5xcqdtupij6\",\n      \"excludePrefixes\" : [ \"83boxdnekra0h5bjw73rnj9vcwp65cbc0fw6qmuj804ck3l2q2a7ye8obv5rv3q9e2mp1hag25c5y7e6gf4vm5j\", \"f8m7v891uvcysg0ofbvph8o1etxv3u9b1j6m01npjlgslqf1nmj9cp02ealli2m8gzm4uqepnth1c937mv5mvaeznm4wn43t47ntq1pep2bu2vp8j\", \"hnwud1hbzg2wvgofl10vgde614wqtvdn24ksbdf636pmz5g1wplyhud974s06epnwsu5sy8pd5nbufu52dd61xculahjjazciumxrtyq4ffhr1gviu1330n8y1608i\", \"xl648um8zjgq4f1tagzzh2j45ow0r0pb5o1f182h05n1ahi461azgb3namw3rzzix8km3\", \"nkq7968dmfcdy7l9e98xqdghr2kma3796nynltmvy6le9qryc2ezlqjqxuo8vvyj7fc079q1o0g1y43ztobkwm0y4kj5abhs63uq3r3n43t7m82t2bfo2q5vjg3fpc402msp2y9cvqoquub7uj6f9xymvyqy5lgm7oodquch98w0cjfqizjm4c1qvqcs3f4z74\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-08-05T18:10:51.10923Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Alexandria Murphy\",\n      \"path\" : \"wdwecr1uek6q2ij7v9ik5cl5y1heoay91vhc0if6g2baz1btdtolfx8y7pxdmvdttytdlhj56ykl7lig47fbo4jki80qozpz4\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/812662\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"j75sf1yzwvn148euqumacw9x3fn25bcvqvparrvnoxip7eag6cd1q81q3w88l7h9w8wcs6357l9\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_STANDARD\",\n        \"gid\" : \"GID_SKIP\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : false,\n      \"overwriteWhen\" : \"DIFFERENT\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\" ],\n    \"pubsubTopic\" : \"rngagth3ytqbhooe2fv099b1gj17tbvizp8odl1gd1xc1y0chudg59yykypj2m5bu3p\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"ab3m\",\n  \"latestOperationName\" : \"Jasper Hessel\",\n  \"status\" : \"STATUS_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16899af0-9834-481a-ae4a-7812a5f76bae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.109888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c6d157ec-fc46-4328-9c51-320473a69aad",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "3zwxnoxrrp6ughdgx98q9qojghmb5q0w9izxe2hhbhu44bxsat"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"sc92657q7b807p6co3rssie1z9lie8fnyra9bb518tfq0gk5oay4fyefft1f5go4tya7ljg9s4dcr2h0e7xwugob3hseq1h6pmrj9mzjaujhpgnho2hu4aubg06ny5lraq0mvlw1yoreia7stknwmhyhgn05g\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-10-28T16:48:51.098712Z\",\n    \"lastModificationTime\" : \"2023-01-08T18:10:51.098747Z\",\n    \"description\" : \"Adipisci excepturi ex. Qui id blanditiis aut iusto ut autem. Assumenda recusandae tempore dolorum ad optio laborum. Aspernatur molestias voluptate dolores quaerat. Modi ullam ullam quasi dolorem aut v\",\n    \"deletionTime\" : \"2022-12-06T16:35:51.098827Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 2040345917,\n        \"year\" : 1562404741,\n        \"day\" : 762898277\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1460318907,\n        \"year\" : 1278374753,\n        \"day\" : 885124770\n      },\n      \"repeatInterval\" : \"hbo6btp9hmpbryy1m2lznb5ldnuewt8d0331ztj0fg10s15ny1vlk6l8j8zwjhu9xqjqaw3ggwk0pwfapue7umiesvhf7ftss6dy4dqgolejy2t2hlkpc6zu660neuirudhbkdepdu71bb61my\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 2059940585,\n        \"seconds\" : 293138433,\n        \"nanos\" : 1277549014,\n        \"minutes\" : 1806233589\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1688826607,\n        \"seconds\" : 1996433228,\n        \"nanos\" : 1328132312,\n        \"minutes\" : 832258966\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"COPY\", \"DELETE\", \"DELETE\", \"FIND\", \"COPY\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-02-27T16:55:51.099068Z\",\n      \"eventStreamStartTime\" : \"2022-04-05T17:42:51.099104Z\",\n      \"name\" : \"Santo Welch\"\n    },\n    \"name\" : \"Ouida Feeney\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Blanda\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Mr. Hanna Ritchie\",\n        \"path\" : \"144q1jx0mvvzgs8pp6ce8egvdm3dffgf1ojd6j5dn\",\n        \"endpoint\" : \"mn53y4n7hbllaigpk7qdqdrays4fxqg1f5v6p7ev35tsspbvwu1er662jq3h8qkfghbp469psl32r7ajs0bilnnbl1isl8vbjnsq3jc870syvmi7y75x\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_OBJECTS_V2\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"umug72t63dftdltihnb19uxzfwhp2vrytsa2qpmywi4o2ujwx7258xb9avr71517mx656m6gwzhislcc8s4girirzwkif2nwer3l2qwv7e76c9h88r0aebt91kt8la4uz4fqr72\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"qlldf54wa15f4bvf6hl0u3jdqb09iudpdfs635oz6uds4ls9zo2u4nm2m8o8ysj2i4jnj6a2sm6dokdejo\",\n        \"path\" : \"6giq7npq\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"oqto1l4yd3i0ufvxz2iif09zcs26milf5yvzd9v86f47lcatzod8wjpie3cg8jfk2olxwfx0n2md4ekgd3fuheh847pirqryqpykts03elutlsu78ehwmj530d8yossumcne0hjj8smsqurdxqmis8aj657atvibx5hw1czuwacelojy4elz9n\"\n        },\n        \"storageAccount\" : \"qhw64b01ihk9wd6a\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"5ndcfwo2wujtkpzifbw54o8wjxu1j60kd8m0s2qje84kb5j8l2395kgnpb4xo6w5iu74dm99xiciv4hoz1tgnlmhc9uuv2watibqlh7lzudez7nvv82abia4fdcq20a0hpb6h2dv8etww23tznbngk4a99zffk3eypdexi72u44068jt2ykcfzrkszu8mx0q8890\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Marcella Stoltenberg\",\n        \"path\" : \"as23evypksnaf0i51c5etbz7afq4b2lt31hosoz67hxy2o55ig760s5qk8e0eewvxivo1evjdku766c6rnt09s5b32ursnmg1om5zhshh125vuqsb1j39nguarnhlnjcj\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"7igk\",\n          \"secretAccessKey\" : \"mr7qft67tjds5fzu8plm7dfh6mdpxj40mbbfxu16nihqvbyga96a7al02sbiyxqpuofw5nsvmcznzdqpitmhv1yllr963qojfw7ha54jzxpsuwzehx31uel207tmcnyw51yyrnj69doqm01zy9y\"\n        },\n        \"roleArn\" : \"ckoxfjnf5acubiqq9by10lnkdqg7ex\"\n      },\n      \"sourceAgentPoolName\" : \"Swaniawski\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Meghan Zemlak\",\n        \"path\" : \"dt46ww11n35hhkzm8rqn5hns\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Dena Nienow\",\n        \"path\" : \"ukzi3f0ybnnzsx3ovj3vw2n4g1xn3vhetpysdck8kfi2568dl7bx60i79ea4dl23si8nk23ezsxnnyyj9worjfb9t\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"oetcenir5mzr682q6yk5acpfwl75xucfnqpoky7viab9ytukb18nw7nzb2kbxu5bzlu0fm68rqbk3kigvsgiw14zc9yvxuc07mdyq7bzydsantsqx8bl8yuithd0pt7tki5welanm45ssxlnp15xmingmb8gkmredtb0z4b0siwa7mda3fonnhlehf06waowqi\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-07-16T18:00:51.09999Z\",\n        \"includePrefixes\" : [ \"0wrtx9l7vq48rvoaprftfqh4qlk3u7yah9d1wunpn1xjmf25clsl76zj6ndq9cj7z7uajbqdwzc51yjjmfqg91kdiohq29o8a1yp45ivmxkwgq9tum\", \"wto71xatmcg1ored955uo2rxhoaoestx95g916wwtt650oi5wfyies9ei9mnwdwemqf3yyq8sjooxlvw30r2mogrdqvzxgik600bahbms82j4nfixkqsk54c6nmvpd6u9b5fvo4as2s\", \"6v0a48m2toz35xr1ghgvw11nh58du2y45u6mziqu6k6j7k\", \"iyw6on41nzbawayfk3bda\", \"vs5vkl3sv9pk4h6z3x929rqx62dzv1yeycusowtryd1lct4wd4j2pyh5y7vaibtfmrj78wu63sqv7eyf0762hfqsi9zr79nkkw6ptpsmnuac2p87ueijhosvnl1o063eg6w69eojqn3soxoy\", \"hi2uokp50epmwwe1fs\", \"q5o34lx26e2x7viuezbqxwi8c096a9uxhvu3igdss4yiirojs9eeytghkxfdi57f1uh4czvtg0olyso7nt5oumei799k4j4z0h5l6wewrqfa0gz8nsrhwgjx\", \"7ppkupwjcnfa3c8j0\" ],\n        \"lastModifiedBefore\" : \"0hu5megxwawo6ngfol479c71nhcenufzmfj3a214y4j86xko7dm86x26dyqypq0rp3ic4pj11outcv3h9uj2iu4lmbi4tz8yn9k4016n9f4pvcjbwi91738am1\",\n        \"lastModifiedSince\" : \"8hvzm5jg614dbomhyevznxhqvbnsfvoyfmv6mqjc1hn138vzdrrnbyjdk70xa7tvmnnszftdd2f1ed2qpm0pntevzishh64ko5vmi19x9koxbs9mebnwuv8ewsm7mhrvdm6buwrkljpivseig33oln6z82v\",\n        \"excludePrefixes\" : [ \"9e6aoq2gizuaah9m498\", \"vq0ypmdad4kbkafdq2hwqfur166oqtzbb1ms4xhonrnwner49ezvgw18gr\", \"21u1mf565opknp9c640n5qcxcxrdx6u12g764l96l2yeazgjbpptvsje2xco75fqcheev478nfbsewzir2cbemx7anfizktsc2605ag6ch6xrve9mqhmcok6tkqka4o8\", \"bhjrorzq9hlt7vucn1ueeq3waxa8yemjcre2choh1q11ganqk9mt2kyo08em\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-10-27T17:04:51.10016Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Usha Spinka DDS\",\n        \"path\" : \"8h3hmd4angvu526ndlrerr5anqrhhj744u2ydkelszpi7k7rntsidihk23438hva4qpfwhpjtjm7f14by0ztu7gbfnplibs97g2tzd6lk18is26njsualcb3reiyv4a6nxnn3c0o7j1afr07uvre2xaw69fyomkia66\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/224853\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"qb0jmv9roryofpf66uva2bxnp5xn0tryoy3pagb50lmvpcmhsr6igbuy1urda7ydtt543rvpla644erx4ztp66e7vnvupmqs4fb46o8ap2mfqjug0ulrqylwau8z76awy2vt5wy8l463u8g9x6efeab0nsjom\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n          \"gid\" : \"GID_NUMBER\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_PRESERVE\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_SKIP\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : false,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"bsiy5bqemi2vpbv6pbravnefc7e3eo3scqdb0xvylxwmt0z83xr1iwh58n8kmdwd9q3w9a53yrumt56b5hstn2c9rhgosg6g8i8xu2hohlonevj8te24xtaty81npac0rs9a6xyehi3579b7cna\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"xbge\",\n    \"latestOperationName\" : \"Barry Dickens\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2023-01-11T17:03:51.100777Z\",\n    \"lastModificationTime\" : \"2022-05-17T16:14:51.100811Z\",\n    \"description\" : \"Quos nam dolor ut reprehenderit quis et a. Deleniti neque cupiditate tenetur dolores eaque iste cupiditate. Ut sed iste.\",\n    \"deletionTime\" : \"2022-03-24T14:57:51.100876Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1798406495,\n        \"year\" : 1595284020,\n        \"day\" : 1113525321\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 2111583620,\n        \"year\" : 535713387,\n        \"day\" : 1255123054\n      },\n      \"repeatInterval\" : \"zjd5tnykewhdo3106h3xon021pqwzcsg5zmjq98xz9j3fwe5j244v4f5gct692v5acnkhy64egfag98jfo3ceuaf883mvauqn1gbpuuvj9sc19k865w458vt3qwby8c7d76tvwh46rr672ijc97x3kyij1tfd4\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 180128090,\n        \"seconds\" : 91794728,\n        \"nanos\" : 883304671,\n        \"minutes\" : 2051653920\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 119874777,\n        \"seconds\" : 2017504478,\n        \"nanos\" : 1879758689,\n        \"minutes\" : 282141071\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"DELETE\", \"COPY\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-09-17T17:00:51.101078Z\",\n      \"eventStreamStartTime\" : \"2023-01-09T15:51:51.101113Z\",\n      \"name\" : \"Miss Lavonna Dooley\"\n    },\n    \"name\" : \"Blondell Bailey\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Streich\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Inell Nolan\",\n        \"path\" : \"enlq3oeu5knjtyr3ui0lrl19va6m8vj2ag2p53cm0fqkynqojo717rfc62\",\n        \"endpoint\" : \"nxf9ply5kfs4s65ramfhe8d4gvlqkcag6nhlhhmcbecbmohky3f6s9dhf2mb5kp380ggk9bwieyjfwv7gqz9pcv1ocn4bjifi9u1g4j1efvivwerb2332x3kjoo8m9zu7xkxz7832j6tq9danby4f8pqlmf82m39kpxnra96ak8is6fnxytbf4in5y9ozqud4bzdhp\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"5qu612ymkj172k7ld8i4\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"yrp4m2boyx7us0aos518md0wfe8vevu8yqmp2yt9kobujsctnue8fo0mngqk8makqm3ypsp2jp1o9fyktu5ahqtzb5gn8pfz6j53ebgc8cs671ghx96jz4r3xnx2667ajq3oe0qqdp8blpif3si6y\",\n        \"path\" : \"ezbnvwncj37m4a3c7411shac378387pemeygw06xkq11m01exa4110cqht0l3xx1noec5ns6\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"j9c3sa6nhkfcsckirnfhkig94o0ctzziu60jx61jl58f9o6ieh6b9b119i2qwot78buhe54xnlwd8wdhcccaoqhqamoyf83ygqepk09qlm\"\n        },\n        \"storageAccount\" : \"2yhsfu89la8p2txntxcni0yh5pkmbeglg7qi60rpmamcxq4axwez22fhmyhw846f5lmromyu05txpfdq3aba32ev5bcislvw1x4qeonb1n65udsxjpy9b79kumwdmm0ohrxjbi1ovf5o7xswn3rog0nf2xb5ba\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"igx9m9l4wxtkw1d8utrezzd4h6il9mv8q9y1rqnl9u\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Alejandro Kilback PhD\",\n        \"path\" : \"x0mvhx47de0j6nxe4b00pptjvgttxyx16ghgt88w96bbd75ixxbhlhtopjapu3sdbhghl2t97bfkpf4jccfgm3dzgh9oarjc2emz9kgjrzrey7hezokllm8xu0i6o5sz5lvcg586taz57cxus4259mrdgd6sddwy9kbyeluhkmzuc0ogg1pyfgl0r\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"9b3z\",\n          \"secretAccessKey\" : \"0qeu478c9kx38l5ok1ocgx526zjz23zlqf7yqq3djbrjl09cfb1twqr5on\"\n        },\n        \"roleArn\" : \"etbq0nqlaxmkm8q7m262zblht00tohe3ptx\"\n      },\n      \"sourceAgentPoolName\" : \"Weimann\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Ms. Jessenia Tremblay\",\n        \"path\" : \"9em3yq1kjaecd4kmiybbgucislorvu1eb4q5dkml48les4b3wwycgcfmnck0j3x9yqt3ffwke\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Suzie Littel\",\n        \"path\" : \"0a3y4g1smdllak4j9vjkvvgfjj5636g8ddoll77m4jxvrwc96hzi\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"aqh287h7z2yyebzm7ak5phed6s4l7iigi316flduvprn1utoyl88tgsywpcu6cusqdei4brefeuugck77suqd7ch9777fykb1g\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-06-06T15:17:51.10193Z\",\n        \"includePrefixes\" : [ \"i6cwvu3b9l7xnc8unu80trwani18rzq50o62arfsia2uuen5j0adr9otauoylypcq4orh8g9z16mx9gpwuyazifureedy3wrfaftjimv5f09dujfichuddh1av88ik89k1jtp795fcnytkoauaafta6vc9qtog7qoyjyv9xgh0s7zu\" ],\n        \"lastModifiedBefore\" : \"yvienyri1t9hivtters8xnzw5kocak5fdpd2002e8y\",\n        \"lastModifiedSince\" : \"zgtte720z09gssl24z6guv2mc7s3d9dwdugkyq9ghxfx3a4cor62mnf5yi9sn0w2opxfwwtf9sgfengfe7aevffxrnfrng7nq2hcd4ulxiskdr2uanmyhomb0k6kplxhgx2w4f8v6fryrnu23ay3m9zr7u2vw47veye3ybe5sb67cis2jhqh\",\n        \"excludePrefixes\" : [ \"t4zkqu7nslt75jjfyrf6d8brpukfiedthcbf45nmivcoagwpquuu55j8usa6o7caq70le3sjnqndddzrf2b2rxm28k121ykh2tk1iom70oslefxs3r374tvlkaanagsasmbjtdc6vrlpgd3h0u\", \"b556rybnld4z0wca23q1rnz6nddbt9424q0om76zd9d468pnas33a6dezbqfjxdhrkp38t84g\", \"tei4ewq3zmkwytyctd8btc0gkat8son7g66wxlwid1dah42312oemmb6w2yb5utkj55\", \"3foh7w5630lpjo9rzqfmwyfvw381zsabphkeex3001a98lgswrgg11b2prq20qeh5e4s97vs7ul7um348hcconpjgrmfpw5bfyd0cpih6twoaxiq1l\", \"eqpiaz5cjectvrn7baz70j42m0e5i7dvpob98fetjdbc6plzq7b13f9oi3wlzg4ax3m3peb0dl8f5my54l\", \"ra1j48ywlpvpojeqg9n03fnt7tsfpz3y3fmrp0kkrz8fvlmor18rz0ve8rez4spyd91f9ncz53r93fwo6wt8oenjmqs10k8r9d46wq2o1h1x5mwz4e4uxjfol1vy63oazbll5xx7wmlc7q4a\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-11-20T16:58:51.102067Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Ms. Glennie Kilback\",\n        \"path\" : \"irm2paumh6vquisxjxt5lz8b1h94tv97nl3ujz892ahebjfni333oiw7f7qerkt7lhj7cmbk1ifzl91bwzyjw3b296ibqg2fgky781snb6hlg4hck7mhqxfvu70no6fbzu100suna5coa2o\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/862931\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"i0z6p8dnogac5rtb0n6e1msyqem64y84s657oqtpwwul3iw5rb2qm17di82q3oy405v3tw2ioxjh039km9zbznfmr18gz1tnwrwejipb1bciod687t9unreg4i1tgxwt769l75u8mamvux215rt2ra1hqt4n5hpd1cdbodk5vmoxfjgek763\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_UNSPECIFIED\",\n          \"storageClass\" : \"STORAGE_CLASS_COLDLINE\",\n          \"gid\" : \"GID_SKIP\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"NEVER\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"u5w28lpjexfdjfltj9vececfoa9jawfjofm4ykxza0f97utjupkqvvukdxk54vi2v498khnv8r2957k32dwbpk4p85fsbfdsz0fr3zbtzqv19my5llntqg7d4zjelnqbqehlb2t47w7lv7j6ey6c2bh96bfh7i87q49isuh5hiptabnh2o88ghbk4gci9jrr2nb\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"dj5b\",\n    \"latestOperationName\" : \"Deane Schuppe\",\n    \"status\" : \"DELETED\"\n  }, {\n    \"creationTime\" : \"2022-11-14T17:16:51.102641Z\",\n    \"lastModificationTime\" : \"2023-02-04T17:36:51.102675Z\",\n    \"description\" : \"Ut beatae fuga. Et accusamus sed necessitatibus sunt aut dignissimos. Quasi et neque eos aperiam cum.\",\n    \"deletionTime\" : \"2022-10-24T17:21:51.102739Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 1478334046,\n        \"year\" : 1154384489,\n        \"day\" : 3246878\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1470402899,\n        \"year\" : 1272949150,\n        \"day\" : 2096456744\n      },\n      \"repeatInterval\" : \"h5cqxeh604pgs6fdnhcs\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 627279975,\n        \"seconds\" : 1040782187,\n        \"nanos\" : 610189179,\n        \"minutes\" : 1744173329\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 365058487,\n        \"seconds\" : 256670248,\n        \"nanos\" : 2107940281,\n        \"minutes\" : 958418462\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"FIND\", \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\", \"DELETE\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-03-06T16:03:51.102951Z\",\n      \"eventStreamStartTime\" : \"2022-04-22T15:44:51.102986Z\",\n      \"name\" : \"Weldon Lang\"\n    },\n    \"name\" : \"Carmelo Roob\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Berge\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Sparkle Green\",\n        \"path\" : \"45hrhqlc6ilgsptgmy3s4hlqss286by31w5451a775hwv2qmuv87arji3iynkw6pm90jk3u183q76ryec1kanlxq1ixbvn0tudgb5z0gr500bsuuwo5tdpse9br3gfz2uzgikr5mqvypkp1dpz4o6qny42ct26rot8bupygfhgicw20cgbpnsczn16vv5\",\n        \"endpoint\" : \"6mcq9charh4b471ooeapsvue9nef3euodv5k7innudrxfs9t63efuyfz6etckn2o6itsv0w8nwr6jyp549nilkp2xqeeb08kynof138n7eaidmb79nluntdcobxh68xkfva8xy9aaf666oozm1wtus36\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"ipsdgmhdkmrjudx5jche6k8245m4uvupkfy5fo7xnqjgo1rgrw9o2f4zg7somw\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"4wegvb51ch75rs848kcy41b10fc6z0o1d56k6um5rw3gt2e75klvlswwaazudadwbdxrx5w7ysvp58ahe5u54k\",\n        \"path\" : \"3inlvowrngbdco6pflm62hmzb6yp6qfbe4k3cxz9p0e56vaqt6v6pb2mqlg28za2k9m0f02ra7k1x6mw7w7nvisn3luuy90xwwl52bz42pf22t74pxa5cxbiwzv4\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"a7g2fgguq0vdm3i2m3o\"\n        },\n        \"storageAccount\" : \"xszwdfo6t2cwjna\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"igb6wa79rzrbb6mnkeb7slpepg0sus6yob3h91xsmfl2i9bznoozzr3grnpkpre2peqf03g3gamp316cx8p31v4b21n6w8ys7b73qd4nxyjnd1vwc8b728jf287tj4lc83ulmexzta38s62kn\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Margy Powlowski\",\n        \"path\" : \"qaqganje84dukp63jmxuvgajtp7q09e8nkfo7197i5hgkm66ozxnhplkgmcrx2s9pg0c11vk6oje2ccpsr0btb2l5xnrarxj3mpohshe7f5t70moyww19hafjkqryvqjiu5wx8rk6o4e1p2qroudn8glolvpzm65dg2934ig6owo2woxe8ivh3ko0u\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"jz07\",\n          \"secretAccessKey\" : \"439ymgnuf9g16jgbun8kp734oud28whupcnuvf1urym9sj60n9qxcwnwyhba38qnm5zwuh8f8gs6g7s2dchcj4xzbap9em2hus\"\n        },\n        \"roleArn\" : \"b6ueqqqtu6wbic27xeu\"\n      },\n      \"sourceAgentPoolName\" : \"Ankunding\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Joe Mante\",\n        \"path\" : \"rhutjarpc43o2v3vjuuryj4fgile44ytt1avtnmdumfl6y26nwufua6a71qfz08qyy0lskpjsrjzjydto1fkcmqohjhycddno45uz9jmnlqdm78ietxygzfqaauc49jh03lylw08\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Pinkie Rutherford I\",\n        \"path\" : \"0zrvie8aq8ibq9tcguihqibbjb8bwd4twb3dirzx2yzj3x3fs4kohzbnto9oeurhlwn3dxrvvsxbck81vev590ww7qlrvkrrkm7nc1e5z7zi2ml4i205wk2emsbjgvojs66d3ebpylncqvse4yu2k0f9ti8t73vqlj9uiqhkvhuf2b\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"t0t62us5mq2n6a668mvzg3noabvb9d2tm7ivt56nh4ej3rd6vm5wncalz6whzi3zdylcptz71z6geuc26hvqypeeci7a1wyikdv0fcrqky45h045w5hu5vbftezlxwfvpv7tjpe7l3\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-05-25T15:14:51.103789Z\",\n        \"includePrefixes\" : [ \"6h27eo7d9g2tbzct9e812agp8okrvu643\", \"hf0plx9bc5evqw3je5pw7me11znlqsdy2mn60fsgc3ctvsat22mgzcktyvi20wpr6mv60ma4grl12a1m3qawslc6xvtfyx168j17luozvsgtwqxzc428jqh7yz4isq\", \"8mpesvh6zw1qso1pbn0l6x8qen8wixbmgbd2crey7xzmojds7iianljxyls7cq6jgiipr4s2blvxx3wch1yam35\", \"pc5kw9ie196katmauvn1xerhyudpyv2p5kq9750am2gyvrnx4oont29x7lkry911i\", \"3nu3yylfrkz8acaaozj1gf5mzf7\", \"09h2umz5m2ah7h8z71s3b7mgsv2rdlropgbk4klty3ig0kk9w0hi7sgpupfkbjq32owt4ts0zqlk87ze6rua811cfj6zyvtw7q6hb77f\", \"2f5lux24o2kqmcx9\" ],\n        \"lastModifiedBefore\" : \"3pfvqd90n2zqyynqsdd4i1rjdf84czxh9k3vzdviikj3h6h5p8bv2op17opmjc8nrnxm0t3mhgwnayf6r5eowi9okwuiekutsoqxlhk0ku8sva2v4te1pc7uvsa4jy20c92renf3o5stafpq19f8vc5bwcs4srxokrpk3me0pzwhhokz1f88g6xx18jr7lu5wmmswfs\",\n        \"lastModifiedSince\" : \"v8s5e408kf8eb5rggpxch0gqfxge4sl76wg407aav4gnd4kyee97fam2g120rokf\",\n        \"excludePrefixes\" : [ \"vjev8m4az69aijdongs12ohtcaeye3n\", \"kvcbv5tmowevy431r0lbigepmmwo5dd6zrdgue6yqukzi9lzxv0egd6dd6urt6ya3jguvsjovhfsl6qgz5gnt2cyohqitrq9429rum2pe8xh3d4k0vcdv4uksqfbqmv82te871t8b4qz4gys149i02ylweebjyal1g4hq62qmxjakyoz0yn8tce0opafyf4\", \"5log5k08tboctqpnay5c1g16k2vocv3ktmz7133nn26a8h4bl42b98omjxvn7tee1jz\", \"fw0i1sbaw759fyhuyg72kjl87ipm9xt5wt6fh7jfm3ufzqpib5jotdijept7z32i74hfndtirap9oj4pleqjat66f1gnjcgh47ynow5jb86k00a8umtkrby289kqcfvt7lbyryzu6860wjr6cqi7d72qu208rejyoweiloanw2\", \"u183a3kkg100zht4tcfwyn08469uqw2vf91y0ozvagry3t4mztx9e1gylagyf5o9br6pof99c6w0qsepfgfj4as6auzp2ucf8ig8r7t9g5mk1h1r53iwyfimyryb21mdghv4dt51h3ltgl7mp9g8cnps8\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-12-19T14:51:51.103941Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Sydney Toy\",\n        \"path\" : \"7t97b3pp1i4c9a9bsifbwn11inxazw5yznh27d9g50ak5tipibxmo\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/792430\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"62eg9fasvmo8ppqawfzagsv6wgqzty955adip3dgm7wy70j1o22w0bdts6mnnjixqok15a73prpppct\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_PRESERVE\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n          \"gid\" : \"GID_SKIP\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"DIFFERENT\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"7vb1zmzb1iuagfm98scsneij3excb5lpbi95lonfe1ecur8lygn5o7a29rnbr45aotekfvsaa9\",\n      \"payloadFormat\" : \"NONE\"\n    },\n    \"projectId\" : \"1rcg\",\n    \"latestOperationName\" : \"Elisha Jakubowski IV\",\n    \"status\" : \"ENABLED\"\n  }, {\n    \"creationTime\" : \"2023-02-17T15:50:51.104471Z\",\n    \"lastModificationTime\" : \"2022-09-02T14:49:51.104502Z\",\n    \"description\" : \"Esse dolorum qui quia adipisci et incidunt id. Incidunt omnis unde fugit ut neque iste vel. Velit nisi magnam cumque quis vel. Totam labore atque praesentium.\",\n    \"deletionTime\" : \"2022-11-23T17:39:51.10457Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 454380174,\n        \"year\" : 1653788357,\n        \"day\" : 999129985\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1804403159,\n        \"year\" : 158375750,\n        \"day\" : 1109398022\n      },\n      \"repeatInterval\" : \"po3ad96\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 270435914,\n        \"seconds\" : 1535565464,\n        \"nanos\" : 788115518,\n        \"minutes\" : 1479156111\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1233605209,\n        \"seconds\" : 1126242263,\n        \"nanos\" : 1313129518,\n        \"minutes\" : 2116623856\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"SUCCEEDED\", \"FAILED\", \"FAILED\", \"SUCCEEDED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-08-02T15:59:51.104748Z\",\n      \"eventStreamStartTime\" : \"2022-09-29T14:19:51.104781Z\",\n      \"name\" : \"Yang Grady\"\n    },\n    \"name\" : \"Amos Steuber\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Cremin\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Elisha Lind III\",\n        \"path\" : \"l4xs9v35h1fwmbz4kq8msqj0xxld2f3qh7408k54o7y1vmbof662adkpta7stmink1hshelp4xoaxiuu9vbairhmnxu1n9akgazyd9vzu60f81c2ksv78o961lp3d5\",\n        \"endpoint\" : \"cyr0wskeh8dzkwlruek67ee16wa2lihtt1y9ecez5z2t4b4ak5f6nl7qwso6ivonpxvwg3n8tea3w5ozz675vgg1f7fjtowc3c6h4w7q5ip007yhehqd10urcej8rvetn37447cxw06wkko1ddhdrwcrybz4mkldfal\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n        },\n        \"region\" : \"g56ja3p2ozc7hlpou108j2mbdjklfz6w1hfbdfeqj2\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"seayfia0mgt8hbfkt9vyea6gxpaw4f5ylxcs00r50ojd9yz5jwau\",\n        \"path\" : \"xwoeqt5hc8j8bhn082ccoyojb225u22ittt6oo456mcqzy2d7hdcwjp0x00g1k8i7cwhsn38r231i5c2xgy04p5yn3ez9c3rfs7wyuhl8dp4got506p356ljiq9obrvq51cj7l9f\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"1km5qgsrjy2xw5g8l0vm2mxa9h218ejs7jph66ucguha8zo7l3noh4n3i25k15ynd80mlpfhpppxbcr7uum4w9zq2r42o9viaisrmdabcqbo3vj1losnhmgktgio5pas850g6j1i9si169ihf5friex5f27xbln6fhs9p726al\"\n        },\n        \"storageAccount\" : \"zqttz2fqxavobqpllzi2bjm1kk1xd2m85qenpcmqdxdcveso98f65xxfrldvzml962j25mb0o9vyhzvd7kqhilxpfonephdfc6tj8hiouhz7bttkm17jdvl7crtxucbx0p3k4wlh7a4hcd8ad06pzjeo\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"n22ke6mwnnjgi7dyjwectsxg54ifon7iu4hh7uv0kp43ftxuhtmm4em4hfqz8jz8v1cvazm8s6zerq2zyjegn0v9\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Geoffrey Johnston\",\n        \"path\" : \"d8meqb3kra13pubohl8ankmvlii6exgpt3c6hs0ye3evnjib799f0\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"8jy0\",\n          \"secretAccessKey\" : \"wnhc54zeheaykt0s4snw6fazs1\"\n        },\n        \"roleArn\" : \"c04qxe9pvg7chu7mwu8p4xbyilranav853c5e4yd93g12w04ed98kf7y6ni2313abgosprbz1o132ehqz5hd6fe\"\n      },\n      \"sourceAgentPoolName\" : \"Heaney\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Mr. Remona Rice\",\n        \"path\" : \"phfbilh5anfx0r51toye4ich1kkmxkzy1wafh74tkoni1nbxw1f7ev5v0oo8oskyfondvbrungl5mrxh1yo7iczput5py5xv9jp5de3uh3em5m1vmosrcmw2sf2fm44slok6bgin9l5u0tldh9cmvou876galoaia31fh89yoaevfja0ke7wwbfpyuugulvt404ny2sq\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Joshua West\",\n        \"path\" : \"8f3zkdy23bim9fnnjjg1jcj8kl4pbg2mcxwbtmxtume06kxcmp3k68gk27v1gz2j03baxu8uhj9643stzerckyernhcm8dw8c39xtubt9qpkztj4mm468py6jujivaw\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"1ent7udlp4ta2qawdd978kcsfq0h8kke1gth1detkt9rpkxiavb5ua87wadjlriqgqdf1v2pzjkoo5f9zj\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-10-07T14:15:51.105535Z\",\n        \"includePrefixes\" : [ \"qsnc0bvmjtsc6uu16pzgwo37q384z3lg94e4y19kf8xkqz5qicnql7a9itlp4h3eksc53l7uc47897b68bxyjpuhdoxyfcq8fesimuvyuriaphxnxd2ttu3pbbxyk3w5io3ct96e97ntoezq3t6ywjtz02whea3n1kflq58b2q16at0vslrqwgswhh\" ],\n        \"lastModifiedBefore\" : \"o3cmcc6sdlzx9st3c2m12jf7y4yt9axeg0cof5t7mf1s2ofqtra70zjc1d8rljxhk6hp\",\n        \"lastModifiedSince\" : \"s5y6cmrra845toroj8da5zv4ijouhbbozn\",\n        \"excludePrefixes\" : [ \"j1ryp6a33m6ui4774kut\", \"mappgeu7t4ager4drygedwycjy3bv3ffffcsglim4u83si0zien2plc4d57jnpi3jcg2almony88khc99dhatardazjk88w4u69pej28ygp9fl5f577ildwagik5qb\", \"q5727mwy2y39tk83odckc1hcgu1xgtxyz1ps\", \"e4rii3fp0ep3bdjvk0ocju2sct3aesdfi55e4qj0kcdesoiau2lqotv5vtx4dz391m3yav647j60ex0vjz574fotbbrqomr3hil\", \"wnm1i7ulsbyiqczp14cbtnz\", \"4ng2te5yrj9bdu0toqeiu5lxkj2zsg9lz0qhez8klk3l5655gq1jb1o630z1tmf7sp4klgghqdzspik8ji4tt\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-08-07T17:37:51.105648Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Dr. Hershel Vandervort\",\n        \"path\" : \"c06w8f29voywksirf84y7115lz39ba71r94dvutmjzuiu3ejsq6rovyuagyva83mhd0ngpvkjzdlqa79fpo6pb8uqn6h9tayectlnrigrnbul6th0u\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/443874\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"cl06xrf3ebggfhdbvg4wt8qhbzj0nxeg7am63uffk76w727j30p68j151ulcfxcrfqqj2a9ibpwym61idx26s612jv0szi03p6p3it3uxj1c0x7x7gs8r9ygdjkyn4x58i3w5dsa1huktb2qppawasbaoxqr5slgxdv8hgojjxewcp80d4\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_STANDARD\",\n          \"gid\" : \"GID_UNSPECIFIED\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_SKIP\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"NEVER\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"pi7h2jwyprjhnbq4nd1axqgp26cl\",\n      \"payloadFormat\" : \"JSON\"\n    },\n    \"projectId\" : \"qf09\",\n    \"latestOperationName\" : \"Miss Johnathon Huels\",\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"creationTime\" : \"2022-09-18T16:55:51.106139Z\",\n    \"lastModificationTime\" : \"2022-03-29T16:35:51.106167Z\",\n    \"description\" : \"Quaerat nobis ut possimus natus animi. Eos id officiis assumenda consectetur repellendus sapiente ipsa. Assumenda autem aut quaerat voluptatem. Dolore dolore natus ratione dolores dolores eveniet.\",\n    \"deletionTime\" : \"2022-07-03T17:23:51.106228Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 887505732,\n        \"year\" : 1793820828,\n        \"day\" : 1508390999\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1325042221,\n        \"year\" : 936269634,\n        \"day\" : 554793151\n      },\n      \"repeatInterval\" : \"7zdcuaiofwkuan1ts7ml3veb2ddgptbg385kcid3u1jqzlxn4u9de9ujqobmpgctx83kiv01oqi0empkqu83ve7fk0b8fur4ipv935hy7jbjoo4ykvnsu2lplh0a71odnhi7sgx66b0o0wz0n3ecilctb8qwycmd6sra44rp96tj0626oxm2zb\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1551126217,\n        \"seconds\" : 1020987742,\n        \"nanos\" : 625038695,\n        \"minutes\" : 13772455\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 765602991,\n        \"seconds\" : 250495727,\n        \"nanos\" : 1366068555,\n        \"minutes\" : 505618735\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"DELETE\", \"DELETE\", \"FIND\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2023-03-01T16:29:51.106394Z\",\n      \"eventStreamStartTime\" : \"2022-08-11T16:50:51.106425Z\",\n      \"name\" : \"Mr. Christian Davis\"\n    },\n    \"name\" : \"Cheri Schimmel\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Stokes\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Madie Roberts\",\n        \"path\" : \"7zlmumke3sxs8b3uyrxpgw57mg94lq51yafauvz308rijz8b45o4cv7kexk0r1ken73ulpwyp\",\n        \"endpoint\" : \"i2lq96st0dvl20y2axuxbfvr9p6806m8kmypa5frghklr5koi8zjfdqhh9pcbbvn7xsjroizwhjetb7a5lz24pm9gjwunox9m0fk6ik737r2\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n          \"listApi\" : \"LIST_OBJECTS_V2\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n        },\n        \"region\" : \"r0awi96sw3vtg52q9y7cql0esr8i9vajekr0odjn3h9fzm13k74stnzn9q14jbvvp494oq7yvo5utnhv8f4mlp0yt6pino27chfd0cq78lbbf98wnf\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"yn9sbggby81eojmtmmjvyc67zhh6ama89aplmd225sqgrye8ffue3y5x0crm3wx5g9wbp14xpcgl70nhlxbtqo6i8u61cmi5jk3fheh4pc6l9lt6ec13s9p9qu428a9pamp1upe0bpoj99b90qo5ojpmklrrkbggljeczm3buvi454jxxogbz1ry1aygv5lmckq\",\n        \"path\" : \"x4creshxobgzdkaqbjkzab2y3vxxajtst5ftpdseyjhxxkne20hkkmyy7\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"tsi6nhqbl0dhs8n21rvtkmsbbiz62e3epxxshnspdsm9b96zu0mejy8phksnrc9g0ah16npgwl21itplougvbfm6717p6flny63cy9f07a8\"\n        },\n        \"storageAccount\" : \"fb8ysw3gahrw5z9g8dc369ghfdlj8eot1648g6h4o3vuj9xsonta9qdhihwb0i7u9behbtv94iyiai06ormvmd4o5sk27jppur2nbqxar2omewzlotzulvnt9nlcl0b0x9hoznccpkdqr0slkyv67pn8daz9ehcnqm95ntzelgpw5enyju452tax2n5kb5h\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"0uozcywt64vkqoctejgc9qwblmoavxlf5s6mknxvsj1lqz7z98m2ouw2focexdqyriq0oct0gath\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Winford Jaskolski\",\n        \"path\" : \"z339rylf229tkazvhur4mvnae1ss6b0ppk4t4p6ka2ybwyxsg6ze74odh1q8hxd8ywfqi8zamyx7n6t6ggqfkjirfb4w9qx3bzzc77gt2nzopsmv2edyxvzsv0bze1srbq2dla9lzw4jaqty1usf651s6a2uw4qiisdcltqe4iwbmm\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"q57a\",\n          \"secretAccessKey\" : \"xaqc3f0n23ik43w52z4tehaux1xf9vwa\"\n        },\n        \"roleArn\" : \"ydxuvwwgznefmbqaxzr8dzocnau7vc68az7tg0f1ocq8n45nz6wto3hgavxwaoi3fkx\"\n      },\n      \"sourceAgentPoolName\" : \"Abernathy\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Ellis Pouros\",\n        \"path\" : \"z8mdf303sur8ernid3wixc017khd21bbm5ewqctqdklp8d2j7rd5i6r4vk2htx8hh4l5dqr2pey0is69jewx0d9dpsut3s1f2xxwzkaa3as79shwohaw3325qdvrkzyt3r2o9uxe4lf40yitugbjdi1fl3ulr442or\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"William Gulgowski\",\n        \"path\" : \"avnfr1a25i8lmgycfsemtbwcty4u4lpk0gmr3hem6o18pe1o92m179wtxu9c713y5989gtn6nsejmprui241kdgt0e0l8s6sp\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"ldzxfz5umff2c9ypp8mpl10msiap5zvl8irenbrdsndue3jddxgzrel8hb7mg12oudiqpyo3aah4e8fwf3lsac2iq16njuh50nxb50aqtld26hzjqp0i4rc08lk1g5ejizsyz5w0x7uup6itnggjn72f6v1o664ebpzenl801xwcrwwvpzioa8odq6dfhlkjcall60\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-12-10T14:59:51.107143Z\",\n        \"includePrefixes\" : [ \"733kfecxazpfzl3e15m7escx088hsjag9go3ms9kmwq0r5rtpcbp818uzh6p5bo1o4adhl97r2wsumfhgef3woefnwwqk6f1rjcprfpsacfsug35th9vx9gy2eju5smfc64tsw8lmeh0ezoax5rrjglah6lzx1mfohkvgeqeludbqfe7szb0\", \"rcunj350karpqgqutr8gih9o9zh3zlr3rztgg978i10cmmtdh6h8qpym3atsl6cjccqz608ui54wsluakjuwsg71xvl7kcb7hgnalsrdecinkvru1ka6gbgy21ac2bvrbnnz5qficaye52fo4t2wcolfidvi854cwxs4ycqkogp\", \"nmwyl0yu1wo4jdasnoqplnexffns5o8g9h9wpgt7mrbs33uvfhdz4jrkhp25npf\", \"6lznmo9qd01qd83mfgo8hhlbjjku4f02q\", \"pr4xpyw4hip1hg75oq5ybohfg4jydkde7u087ali93v2ec8xcmbppgq610al2pl7hxuvcbn7mek6rm4sidun9njdo3erpl51kc797tny9yc5liqyya6tdtip7pkfpxpwusak5jri9\", \"41wwe28cuujajbkhlw8yo7guojda1modyk8s8jl6bsn2swcti0vdjnunet3i35fd297zya5nvgjefjrhivo8k2cdksjf42rvcfngcvfblihqndme61e4n6aoj6\", \"h69mtb3v2y2ho4af9z7d94bp433088u8tv1bezxizvtz6d1hrh1f6id44g56eut03izz2svqnsc2e45hpmd98v0hwie5ujq5f744jxle1co3apxbzc5s6mpues2iz5epcjsl\", \"estrlo6c1wo55upi42dm645ud4umtrl5l65p1sh61q3xmjqzwq50w2lylo5p\" ],\n        \"lastModifiedBefore\" : \"ftcj7ms5bmw1q4gh2uk2ecma2q4hbi21ygm3808u0ey35v9v0jy1ufjsizj9x6xdv1ebjhx1s8jaf48fhsszl4h1wg6wwktvvvvq1qgi0pyplterbltpinazid65u9qa8b5ylztte4vx7sj65ham3jv0anqtwmw5vo5os0bz8tmq7feo7caoom0qa1a8\",\n        \"lastModifiedSince\" : \"eiw0pmk04c7ox4q4adto6s\",\n        \"excludePrefixes\" : [ \"coheizp0il9cavwklwb4ip3myrntntxsgdtnvd1djudbf7ney8f4pbmkjotzudevk59zj7datoepnozg2qe9u6vkocv3mthldxzmuxsq1mlz076vlx0n1vl9smkc1ni5atuw4a6h316h1uj6qh8ao2\", \"kp2ct3ebgh1f5329fw3aezujd1xifbi1219d247aothyecfr8sz314770vaw2xzu1bn60eho63cbt2y1ad\", \"7do6bofipkl9i7nbnll8v1i9rb5y8md2bo8s59tsv\", \"8xr1j0go7tq4p70a3c9pcyb0l9k2lpa4t3ae11ms6cnygxyvlc1stprc1gob7te8od88d412sc64vy6wfxn4es1obdnf8h6lqams508xjvi\", \"5c8pblxxo7f9621009b14bhc\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2023-01-12T14:24:51.107294Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Isela Blick\",\n        \"path\" : \"blhqv5bccfzazbpdgmt153zo2oo95ce1mq5oj9i0\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/187909\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"8jwlvcr71fsoujfraigpe1lxvu796mekhqvmixa8qn0846tp4ubdf0lc7gb1xfss24oq6vvqywttizrg80034yst5tqgt8yix7ay8yyjny22ppwgxgzlpugo1hjcppe04dydcpb4ja3zwlzka66hd138z0ej3p6li\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n          \"gid\" : \"GID_SKIP\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_PRESERVE\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_SKIP\",\n          \"acl\" : \"ACL_UNSPECIFIED\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_ABORTED\" ],\n      \"pubsubTopic\" : \"8k7rdda6sy3ij44mqdohv58n0cu1ecibfxhr4en4hmyo951ibung72gyoz6li76r3jrmrkk0gtlzln6y7689n6itffasbpuwsvsazn5f131zcjdq6nv4l4nlurv24r5z\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"hb2g\",\n    \"latestOperationName\" : \"Carrol Gorczany\",\n    \"status\" : \"ENABLED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6d157ec-fc46-4328-9c51-320473a69aad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.108057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "89c00129-6111-4001-9a4e-c0e6294ccafd",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/13ph/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Rusty Halvorson DVM\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"6vw5n2yuajj658q3i8fkaegykk36ybenzmidl4375sjjkeast3d9ysmti7nbords9ul7wqddbekrucvi045yeu8\"\n  },\n  \"name\" : \"Deirdre Mohr\",\n  \"state\" : \"CREATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89c00129-6111-4001-9a4e-c0e6294ccafd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.098633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3fe5e13f-0135-4770-b14c-17302d2ab67d",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/3hw1/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"6wlh1rym290gou3elr31x0d8n7tn3z8kmtjbjiz79pt03k2fcnn8y5mp8d09p90bthed4iycqtozx3j8akyv3m2b600uvbgtko6pybd0mt1wlajr4m08sauadxjgfawhian13\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Marty Gaylord\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"0syzqrwvwn5r1a67lbbzgk0yrcnz7rfp3gsdly6c2aoip96vpyagyzwfnd14jy6zejn307egkziinokzv7187ngkxqkhzelvlfzm7rfvn1ms2rdnjqnn2ojqq66hu4t4jistvh1938c8i9dntvgnft2dat4clsxbta6c32dy3og03z7v8ngn6f0p0bfbyxu5znlkr\"\n    },\n    \"name\" : \"Mel Dach\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Karren Brown\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"u7qd56iv9c52ni1wtk89yysphvew\"\n    },\n    \"name\" : \"Joelle Nikolaus\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Colby Stoltenberg\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"4i8vevtn70\"\n    },\n    \"name\" : \"Grady Blick\",\n    \"state\" : \"DELETING\"\n  }, {\n    \"displayName\" : \"Hunter Hills PhD\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"s7ip30kpzer0\"\n    },\n    \"name\" : \"Roseanna Olson\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"displayName\" : \"Barb Runolfsdottir Sr.\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"ljw4amc49pwb643y979ireuvgkkyh090i7flaprx8qqdmp0td5f1jsvi1m0d1qh79kdorncugynl4yhhr65kikl\"\n    },\n    \"name\" : \"Adrian Bailey MD\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"displayName\" : \"Genia Nicolas\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"runlowdddvfu9p57dmyy0rvemxfyxdw4yqp89vr9bybb9m23ti0s2nai2kb4k1jeklj2utdxaajvryz4v4ylzf8ndahz2x8f67gdbgf2qyvm6ltanwq6ya7rj29yv38st1\"\n    },\n    \"name\" : \"Chester Gleichner\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Randi Senger\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"z3p661nmdunjexcw842rw5bs817t9fgevutsc9znqoz3sofzzznawb8ke9njy2dzrifcv56gdrh998i4phjcj21q7l\"\n    },\n    \"name\" : \"Jacques Koss\",\n    \"state\" : \"DELETING\"\n  }, {\n    \"displayName\" : \"Jody Beahan DVM\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"gyqz12j52fp9zxg4irszcv7f74c1rv054e59n2597ndvwy3lruzusoq60qldb0g066fhvdq15ldf0z6z2lzgov5kshsynvaak82absx5xljelpguk3r9qv5jdgbcv11bvbvdx7mgrjsfl4il5wfykal01zb10uvjzjm1o5eoroh6fkb2\"\n    },\n    \"name\" : \"Darryl Borer MD\",\n    \"state\" : \"CREATED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fe5e13f-0135-4770-b14c-17302d2ab67d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.098368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a3f0490b-2304-4a08-a1ed-d6f029e14dbd",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/whb2",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"9n993bslkx1wt9yimmhz4xvqio0bpaef9vlss9f8hb235\",\n  \"subjectId\" : \"zmt2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3f0490b-2304-4a08-a1ed-d6f029e14dbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:51.097253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}