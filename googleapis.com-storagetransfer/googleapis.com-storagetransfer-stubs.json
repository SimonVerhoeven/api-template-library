{
  "mappings" : [ {
    "id" : "87839541-4a84-487b-b50a-536d3f1e1a2b",
    "name" : "Resumes a transfer operation that is paused.",
    "request" : {
      "urlPath" : "/v1/Tomiko+Crona:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87839541-4a84-487b-b50a-536d3f1e1a2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.417968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.resume",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9d6a6d19-a3c5-4c1a-a0c3-22783c282f20",
    "name" : "Pauses a transfer operation.",
    "request" : {
      "urlPath" : "/v1/Miss+Lesley+Lind:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d6a6d19-a3c5-4c1a-a0c3-22783c282f20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.41789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.pause",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "57c18beb-59d1-490e-96fc-23c649af685e",
    "name" : "Cancels a transfer. Use the transferOperations.get method to check if the cancel...",
    "request" : {
      "urlPath" : "/v1/Michelina+Bernhard:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57c18beb-59d1-490e-96fc-23c649af685e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.417807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "60395a9a-5904-4dd9-9d86-5110bfb17d87",
    "name" : "Updates an existing agent pool resource.",
    "request" : {
      "urlPath" : "/v1/Rodrigo+Nienow",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Dr. Neville Bode\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"mfuiex4ulfurcl2s59crmh6zwbxp4ryr2g83zp1uhv8my5n76lfe7uukiavwhwww77xz8n11\"\n  },\n  \"name\" : \"Leonie Carter\",\n  \"state\" : \"STATE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60395a9a-5904-4dd9-9d86-5110bfb17d87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.417724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.patch",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b0ad9741-5465-4ad8-b325-b22660041b9b",
    "name" : "Lists transfer operations. Operations are ordered by their creation time in reve...",
    "request" : {
      "urlPath" : "/v1/Ms.+Rena+Kunze",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "f49o2luspl3t2owo7r8jy898vx704089pd53ngksct5c6mnelov53a9thsw0och1zbk5129fro2zj42uwkvkqi9mq7majy3awa9r2ou3f0ieln5sxr3sbbn6u1r3pjw05ihbw6adkivpor0in9cp5aiyss9amurqivty1u19le"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Kristal Kemmer\",\n    \"error\" : {\n      \"code\" : 339292660,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ipsa eum quasi assumenda eaque laborum quis ab. Iure minus culpa. Voluptate ut temporibus non eligendi numquam. Et vel animi voluptatum. Est facilis ipsa iure optio corrupti.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Moira Parker\",\n    \"error\" : {\n      \"code\" : 930771552,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatem cum ullam et. Ipsum earum cum reprehenderit qui quisquam. Et qui quae totam consequatur sunt cupiditate dolores. Qui reprehenderit maiores est. Similique nesciunt voluptatem voluptas deleni\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Clarisa Herman\",\n    \"error\" : {\n      \"code\" : 1660917214,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Sunt rerum error. Voluptatum sequi rem magni. Impedit corporis corrupti. Ducimus modi temporibus dolorum ex commodi.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tyron O'Kon\",\n    \"error\" : {\n      \"code\" : 789319216,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Delectus cum impedit velit. Nihil quibusdam eaque pariatur totam. Veniam itaque ipsam modi expedita repellendus eos quisquam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Malcom Schmeler\",\n    \"error\" : {\n      \"code\" : 1046856743,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Officiis dolorum distinctio aliquid quo. Impedit placeat quod deserunt quos. Eos sit impedit sed deleniti. Quis tenetur minima et dolorem ut suscipit et.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Svetlana Schmidt\",\n    \"error\" : {\n      \"code\" : 1124011625,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Provident magni non quam consequatur qui voluptas voluptas. Deleniti autem quidem. Magni dolores ratione temporibus ipsam nesciunt sint esse. Cupiditate minima consequuntur et consectetur sapiente. Et\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Patrica Balistreri\",\n    \"error\" : {\n      \"code\" : 1813211550,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Id et quis autem placeat non. Rerum error enim. Recusandae qui itaque quibusdam facilis quo eius. Id tempore incidunt minima perferendis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"James Hammes\",\n    \"error\" : {\n      \"code\" : 2101264180,\n      \"details\" : [ { } ],\n      \"message\" : \"Eveniet cupiditate molestiae tempore. Eveniet at excepturi architecto ea accusantium. Cupiditate illo sed doloribus blanditiis.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"q6ah8u8ddec85spmsdg2ds3llsxf4fvixfh0mltgkg00s4u7o59mx875xslzmxgmlb5qa26yxfwiu6gnma2kafwptv67x9z4nuh9k5xypi8szo1fk9ps673udo9hx2siqxab777ki7f4a1nidlfh9bqbp0ibpkzz64ndkuo87gisdhcc1sa9trawubrvub0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0ad9741-5465-4ad8-b325-b22660041b9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.417489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferOperations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7a368a4a-635e-469a-8eb5-4c1393cc9c7a",
    "name" : "Deletes an agent pool.",
    "request" : {
      "urlPath" : "/v1/Marleen+Halvorson",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a368a4a-635e-469a-8eb5-4c1393cc9c7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.416547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9f18ab08-1253-46e2-b9cf-af80715142fd",
    "name" : "Starts a new operation for the specified transfer job. A `TransferJob` has a max...",
    "request" : {
      "urlPath" : "/v1/Kim+Gerlach:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Michael Braun\",\n  \"error\" : {\n    \"code\" : 567391610,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Et eos cum impedit. Dolores dolorem labore. Perspiciatis et dolorem quisquam officia voluptatum ab totam.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f18ab08-1253-46e2-b9cf-af80715142fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.416459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Represents the transfer operation object. To request a TransferOperation object, use transferOperations.get.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned unique name. The format of `name` is `transferOperations/some/unique/name`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "78923c26-8b01-4b14-b2a3-e8cfdf237e0f",
    "name" : "Updates a transfer job. Updating a job's transfer spec does not affect transfer ...",
    "request" : {
      "urlPath" : "/v1/Lucas+Hills",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-12-04T10:24:42.414251Z\",\n  \"lastModificationTime\" : \"2022-09-20T14:11:42.414281Z\",\n  \"description\" : \"Tenetur quisquam et. Doloremque accusantium aliquam. Sunt in a in.\",\n  \"deletionTime\" : \"2022-08-14T13:27:42.414334Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 825668123,\n      \"year\" : 334211175,\n      \"day\" : 474450620\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 773808743,\n      \"year\" : 1130065558,\n      \"day\" : 644707966\n    },\n    \"repeatInterval\" : \"dw6cuzwknybb7t4is8m2u1x5136wy27x70gu0p2v1k1iwj3h5qk6f31v7lyz3ahasbg1c9nirimj7r2tzovlp0zazs67njd1g9qcd96nac61hkdwq2a6od9v40guuj8a39z84egs80mqpsro6lh\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 442684545,\n      \"seconds\" : 1111012617,\n      \"nanos\" : 690118798,\n      \"minutes\" : 95935580\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 1102806250,\n      \"seconds\" : 607581226,\n      \"nanos\" : 2048386110,\n      \"minutes\" : 225186622\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"FIND\", \"COPY\", \"COPY\", \"COPY\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2023-01-30T10:28:42.414523Z\",\n    \"eventStreamStartTime\" : \"2022-06-15T14:11:42.414555Z\",\n    \"name\" : \"Avery Hilll\"\n  },\n  \"name\" : \"Joaquin Lind DVM\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Kuvalis\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Deedee McGlynn\",\n      \"path\" : \"7w3ja0j1oxa9tkjiuww4kbb2wng1m3nq657by2ijiiph5bb29t9i7ujio87w4g4amvq0okpg61ojlvx63xige06v89jz4cweue82q3aivh2vqdlo6zl1qd9k0556e4p0isgzavbmmmcragv207gpo\",\n      \"endpoint\" : \"jg2gzj44i1qv1n5tjyamlniqndemt9w8dvbvwcz5kw0yk\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_HTTP\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V2\"\n      },\n      \"region\" : \"dfan9fq054h3wpv7vfuk9a3mtjrf4xf286ydyt0m12kag5smqhhkmyni1qqus1y37nhn8rzmibtu6j2en32miwxcly0tdt8lvmtp3id1xam4uqp0b4tt9wpas31qh0qi47w885svd5z3w2ub5xqob3vou0h7mnnb\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"qp6r7zcwl0o5sxwe7zj5sln3njz6pttgwxp43mpnmqdakpgnjyq27xir06opc4r9jnp9p9nk3k0kslzc78dc6cdftqen16v7omemd0g4vfa3jm88\",\n      \"path\" : \"67h2xv3nw8iztujp8xb7tyk8hu91a1fdtul6ig8sbe8qppj4s6smjfq486fja5j0oustxntg3e6g9bw7fbprlsj1fbqvvurp0wovrwf3xawn14rngbmsfargcd2ht53lb0jxzj1rn00yo188y3\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"o9eqyetorsrw7axc0hag6l0ov5ucstfq3spxhj0o29tl5188umt8m1cix259fpjax45jpn1rxntzk7d4yd3ut64guq393je3koiakdwpkmfmcec4z20rizbj5hl1923myggew2gud\"\n      },\n      \"storageAccount\" : \"szyq3rhvshdrq30qngvakh0zwlo\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"wv05d7hvbyo38pbeqi1djqmzwpa2d90zo93c9pwop07q2xgie7fmx8f4al8ijhtyov0vudu34rmn71au0z50zzuugw\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Lamont Hills\",\n      \"path\" : \"jly66oyfh1hl98z21ez08ii5apf8mb68a0g0xz0hpmw18bcx4gkuc7lwbktfsrc3n543uf9q0b27h84o0lgq9294e8kpou03k06ysgxiwvvb53czynx2n12hrlsnu2ty7yubtljyg3w038cysuik0f377kilfdov1u1fx8ts8a001\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"7k0k\",\n        \"secretAccessKey\" : \"r7xfnholyvbbdgee3pkc\"\n      },\n      \"roleArn\" : \"25dekg7n9gsiave0flmpatesxua5evxnww1mwnyxso7cll49v6b15d2ciavqsh4o106j3xcomtg9bgxwp9tmpd372w2k088d4slzd583vnsaea98\"\n    },\n    \"sourceAgentPoolName\" : \"Smitham\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Tasha Friesen Jr.\",\n      \"path\" : \"t3qy3smeeh40c59ysx1jvqqwtz0m0r4b8n8szwtnw58itqj46yvnalr8yzo0tulr6mzfqoui51ils5\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Hunter Dibbert Sr.\",\n      \"path\" : \"7uj26hmmgavhqdu73fijl6df5fz336cr5zoau8pjymk7xgsx94l6uhhea7l5xxj3sl3ttn8wig5l0m1szwsz1i0r3ztpnpdu044ghsj6u3k\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"o4zz4tlw92k3lymuigvdg2fispaywnqrk159642qeax685b0ylshz80buku5x80qund7fmw7ad9ag6aau9om30qgx7i7k9\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2023-01-19T10:26:42.415361Z\",\n      \"includePrefixes\" : [ \"czty5ebe5mfcijv8k9evcur9scwj4kctuy90996l749d6vpp3nw7jwgodd8mgviu2fz6fyn9t0zv0ld85wn2gaxy81pld6ocwmke928iiq9s8qnlld3n1nxkh740t63ue6821fwhvz2uqv05ddwr9t89g\", \"rqvuye444jn4qm\", \"9xynuhmgfqka1fezjrj8eqwgekk3z8cs5yhi6vrrvfs1qxfhrnzb90vwdv486n5sb1bzu73p12lp1m3o3exjnfv5kn6rwyga2uyze04mufio0ta27wsnqlfr3y3z5nh9rrs52snuluw2zsgkiii\" ],\n      \"lastModifiedBefore\" : \"3rk9w4muxfy\",\n      \"lastModifiedSince\" : \"gm9kq6vh1sxnll\",\n      \"excludePrefixes\" : [ \"lfean8fjvs4v5eavkyu341ns23mwekwf4n3ebb93md7o39mf67kvg9libl8ajvmnmhfeb9x5kldf4fsv1f29vdrzdbo48c53m1ts91mrbkgkmc4o4faapls8wj2ttqovq6fypukj19yfb0vgwm6yalcw22yeqpb7rgrst28wuwwz12gmdp49jh0fdn0\", \"ek5ihbfymjmxeg8k15j\", \"mj6h6vijc33w97fiov9fxlag136jjmp1sd278syawqahlxyv3uyif7nsr23sv9bddiagu6urhh6bpqvyfu1yiazv6yks1g8qpfxckyna10ctuxmlvjyf3su3ctf9t\", \"8j0fn68dsqh\", \"igarqslmrhdfyleg1is8akfry9s6hh5c4\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-06-16T13:34:42.415496Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Everette Kunze\",\n      \"path\" : \"jss3v2arocbs972k95x1bq03lqtfoplj25yrc80hvttxx4pz8uj9wrwibrqpjtc4b\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/070565\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"z5psqlcy434jztj5jduhqo\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : false,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_SKIP\",\n        \"storageClass\" : \"STORAGE_CLASS_UNSPECIFIED\",\n        \"gid\" : \"GID_SKIP\",\n        \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n        \"symlink\" : \"SYMLINK_PRESERVE\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\" ],\n    \"pubsubTopic\" : \"fuz2kufzmtxom03ota2d14myz13e7dizlubyt1ks2zbhrsaly9g\",\n    \"payloadFormat\" : \"JSON\"\n  },\n  \"projectId\" : \"avdh\",\n  \"latestOperationName\" : \"Essie Bogan Jr.\",\n  \"status\" : \"DELETED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78923c26-8b01-4b14-b2a3-e8cfdf237e0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.416162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.patch",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d25f1ca3-a35b-4d43-813a-ffd519b68bb0",
    "name" : "Gets a transfer job.",
    "request" : {
      "urlPath" : "/v1/Tresa+Cummings+Sr.",
      "method" : "GET",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "hr61"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2022-03-26T13:49:42.412472Z\",\n  \"lastModificationTime\" : \"2022-05-18T12:14:42.412503Z\",\n  \"description\" : \"Quis minima beatae illo quo. Aut quis officia a neque voluptatem. Modi fugit nihil. Deserunt cumque inventore. Fuga maiores ut inventore eius optio.\",\n  \"deletionTime\" : \"2022-07-08T10:42:42.412565Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 236391767,\n      \"year\" : 996249827,\n      \"day\" : 2042067086\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 235409094,\n      \"year\" : 1172777635,\n      \"day\" : 18163610\n    },\n    \"repeatInterval\" : \"yeu2qj2qq98dgqynzukvvdlvzj26lylsqvn9y24bn4zyz2kobwhi3whyliidppvtb4y8rejpjj8d4l9lnoh73mwzbjdxxoocabkt3n3ylbaipysj2s4sv8nty18w3kqmnhknge5bui7as52idxyw3x996mncpc0el7hajj77915v3nu\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 1464255295,\n      \"seconds\" : 1900780788,\n      \"nanos\" : 212594508,\n      \"minutes\" : 19829585\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 335802817,\n      \"seconds\" : 549709512,\n      \"nanos\" : 602805409,\n      \"minutes\" : 1400523980\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"COPY\", \"DELETE\", \"FIND\", \"FIND\", \"COPY\", \"DELETE\" ],\n    \"enableOnpremGcsTransferLogs\" : false,\n    \"logActionStates\" : [ \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-12-12T11:58:42.412739Z\",\n    \"eventStreamStartTime\" : \"2023-01-09T12:57:42.412769Z\",\n    \"name\" : \"Makeda Grady\"\n  },\n  \"name\" : \"Beata Erdman PhD\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Lemke\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Mrs. Brian Satterfield\",\n      \"path\" : \"dty6drn3hr0o507fe5xn8ud8kdblchyss5b30dkfod\",\n      \"endpoint\" : \"98iq8usvez5hif07ojpjncptswuzedidzyrq3q50om7cfvsh2pybkj6x1m00bh44y8ufz6upq55r5sys9zsf3rlrwf3e7gqnkkw3ft90qknx0it6rfzwquop494xbdx5dg4eov8liv8f2rvk2ri1a5h7xt2qbhnljiquupkqxi471ib25ppiyy5vf4hkmrpur8\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_OBJECTS\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_AWS_SIGNATURE_V4\"\n      },\n      \"region\" : \"5cwlhltt8iwr0pb3d291gin63ebaqinuhlgg95drexc3lwt6oaf5rpsiawc29o5wz4l8sg9bq474za4g6h17nlzvdgte7723qqs2v29l0po0iws9v5ptt14bs8373ox3qxkt\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"owc3f1yualprqzp2e0njm0a3uxk8f3bkk9nbach7ad6xp6tv6u00xt2ds97mt69syxaml8feq6o8k6zq4hjf5ipe3upijmj8cpldoenbmu3vk2mg3un7yaa3gyekuqo5wrdvh1up2u2mkoma67axpe1sncxdz35c05kx2zbiljnukhda2en\",\n      \"path\" : \"qdn8sl560wkg4j0jbzisra7d3j5idxtevigivyx1pjgfxfd2nx7tse946obsftfdz5ikc2hm3yyv64sawkwpif\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"438d5w3ec1myl8mcudoht7ccghk6bvbeinfzkpc6ejnzbvwpyzc61aimmxxz5\"\n      },\n      \"storageAccount\" : \"b2zffnl3dxzymstff54nzvrl7t94otewxpwxk24o8y2l63eeoq\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"j4r2tlm08vdo4aoqffmetu1hbl4ao1rwrvr9zwnzif8e3cc0vnhtwuk79cqtyfb7cyig5gxgxbxp5xk024j0la3gfib7kujyx25lvx5e2fh7dn26madc2ta8fxebmhtdiiy5vj89kqzpy3sv95m1prxorq1g08gknsto364\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Samual Wilderman\",\n      \"path\" : \"z763cjbtuat2untm21wha8kvacy8nevq06s3knlf3vjzp3n7uznziyys8czj5xuzwex4is44mu0hhh1e9qe3xz6onrlxpblsozwwjj27lysou9x6015k23olm\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"uya0\",\n        \"secretAccessKey\" : \"eyrmdugoc5pvifzekxt3iqfdtm0o6aox8viw6m364d00wkai46l18yu82bquvct8cywv14vof8fw47zdasumcq9fdpjcrizsrz\"\n      },\n      \"roleArn\" : \"jzl221g0tbxojtcs8kqw68lvj1p0nkmwrgk91bpt8735ozkxk7qn8np0uxxaplqkgy3b13ejpw9mks2xrdt6j2849owfk3ik6heomvb7zrpfbtdz5h61obh48\"\n    },\n    \"sourceAgentPoolName\" : \"Braun\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Khadijah Strosin\",\n      \"path\" : \"rfyctg0ikx60mkewqq0wq9j5lke4gm128efqqvstk849o73vb7gw29hjx09l25416esw0xx6q6w7n7p134b9yn1d1d6q4ru3dwg2e0didz8fpsoi1121943j1zi1u4k2o11hmoac2r8fwrdkamonmrc\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Rocky Satterfield\",\n      \"path\" : \"5itot2g2dm3jg03hvjovrgwftckmouir2lqktlbwhqdm0lq1pv6uupcvoi6htlsoufanr15nknse20cso516wh8wd\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"qxhtyxldn0x2d4tdssob1timu7x4te77f7i4odz9bm5xbjux6nsajoyffveypkrj6nogr6zb2vwqdc6ef2ow1sa1puz41mvmyamtx4gmb84qicnoziy5n6d0jf0izlb7o45\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2023-01-03T10:52:42.413444Z\",\n      \"includePrefixes\" : [ \"hnbhnf9cbqq71a6gumhzvr7cuz25142w5r5xekmjcb41elzfxx3j5w2ff0wh1if7qpk480s0hms8rwoub3gcjclr92vzbswuy8woggla5zqjnk7jh042aiwizs693k678pyqmkb8ojf7b56sjpk7t1uavn90k3t10bd57curyyiji720ipjodnk5\" ],\n      \"lastModifiedBefore\" : \"he5zbc9zuqgk696fnibnhs7tot0b29j1ijh4v4n0t2wuhmdjbep9djc4ryeote1pubkrjqgehmdut9s1k3b6vp29xe7x89zd2megkq0j6qquqjgc0in737ywec5rp0j0et4y5vd1cfzjxsi762f4ahw1us65n4udvbhmfrxzn8c4usncyryc8fcwp\",\n      \"lastModifiedSince\" : \"calfg72f9s1li4r0vxa05xvei44pb4gufr4goqovlq34fnd1pmblwtwi7r2csyzbgbsfq01c4m3o9s2f7g2mljuxh8g4t2whfo4r7vhet6gn5l8lw8wu8s4sz45b1yvfgk4odejeeza\",\n      \"excludePrefixes\" : [ \"xc8vo7hl1ule96xxgdy7qe9qoid9a8y7k09uypbghw848xmnrtz30j8aokm4sabm58z319d16wd9ing5\", \"aodv1fiw004p538t2k7sgu8tarzh5g2v0fvpglfluq2qw4z2agnwjhf31rnd2ziezpn1r6x1e5c206182twxoqouc5wif5q75u173zskerlen9whz3xy485uhpq5n\", \"u1swbcf283uklkoq8eg5toaje52ztpuju\", \"gy1ujhcsazppfb1e9ldp76t6xlarxa83vb431ba8xdftxp522\", \"jsok1vxts2utboyu5t8dfygekygzvc0h86a9lftqb8tg20xrauxiwd3epggbpdnt8nj9f3bfvnssviusbpvpcw54fmbazls4wggcus3var4rvqzuyi7ek0ws86\", \"54ipmhkptpq8v0zesi59nhr50lkv9ybp83rsjt96buxr3l1b14yt7ekbcvx665ix7cpa860huy3itw2qkmal69qzfauuy4647c96ux5xmms49lyzx12b88b8djzkakjlvrum9pc6wdkzawh35dyxxqhvrq9jy41lvcpwkqhxfo9tq1jx\", \"yz9jvrkt5qo056559ss43p3g9m6wpn1hz8u76w7k04h3xdg6fuj59oss1v1bhuu8e4350nnpf2v36qdihhwnscsjvvvssbbtwjwrmszgdkezbyucoh269ninnco84kryxly5byoxjy1j49uenij77xyitc0mjdjp8vbmfy585cuoenn\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-04-07T12:00:42.413556Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Alejandra Medhurst\",\n      \"path\" : \"i1u0gxlsxcc4njv0\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/368365\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"sz754x6\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : false,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_PRESERVE\",\n        \"uid\" : \"UID_NUMBER\",\n        \"storageClass\" : \"STORAGE_CLASS_PRESERVE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_SKIP\",\n        \"acl\" : \"ACL_PRESERVE\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"ALWAYS\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\" ],\n    \"pubsubTopic\" : \"lbrfs5uh4r9rs4j1cojwua0wt1l18ehvbjozj6u70m0blm6z6p0ht1l\",\n    \"payloadFormat\" : \"NONE\"\n  },\n  \"projectId\" : \"uj7g\",\n  \"latestOperationName\" : \"Marta Schoen\",\n  \"status\" : \"DISABLED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d25f1ca3-a35b-4d43-813a-ffd519b68bb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.414207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.get",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "59f40cf8-1331-4da7-a4d0-2a17d7dcb8b7",
    "name" : "Deletes a transfer job. Deleting a transfer job sets its status to DELETED.",
    "request" : {
      "urlPath" : "/v1/Shirely+Jacobi",
      "method" : "DELETE",
      "queryParameters" : {
        "projectId" : {
          "equalTo" : "w492"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59f40cf8-1331-4da7-a4d0-2a17d7dcb8b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.412437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "93f3d345-f1cd-4776-89bf-852cbfbb9ec7",
    "name" : "Creates a transfer job that runs periodically.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTime\" : \"2023-02-26T13:13:42.410536Z\",\n  \"lastModificationTime\" : \"2023-01-30T12:50:42.410562Z\",\n  \"description\" : \"Optio ipsam est ad cum sed sequi voluptatem. Quia corrupti accusamus minima ut sequi. A aut qui soluta.\",\n  \"deletionTime\" : \"2023-02-15T11:28:42.410615Z\",\n  \"schedule\" : {\n    \"scheduleEndDate\" : {\n      \"month\" : 484226501,\n      \"year\" : 1000629053,\n      \"day\" : 1622586124\n    },\n    \"scheduleStartDate\" : {\n      \"month\" : 477375220,\n      \"year\" : 1767623133,\n      \"day\" : 1687466449\n    },\n    \"repeatInterval\" : \"xy75xiybg6uoudj0z2voi3q8rdk27wj57qn33i75a6o08581f0lezeltl\",\n    \"endTimeOfDay\" : {\n      \"hours\" : 68065847,\n      \"seconds\" : 1562197178,\n      \"nanos\" : 230535814,\n      \"minutes\" : 1786185838\n    },\n    \"startTimeOfDay\" : {\n      \"hours\" : 347921213,\n      \"seconds\" : 1634210805,\n      \"nanos\" : 368709659,\n      \"minutes\" : 117821022\n    }\n  },\n  \"loggingConfig\" : {\n    \"logActions\" : [ \"DELETE\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"FIND\" ],\n    \"enableOnpremGcsTransferLogs\" : true,\n    \"logActionStates\" : [ \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\", \"SUCCEEDED\" ]\n  },\n  \"eventStream\" : {\n    \"eventStreamExpirationTime\" : \"2022-04-17T11:50:42.410765Z\",\n    \"eventStreamStartTime\" : \"2022-12-01T14:19:42.410792Z\",\n    \"name\" : \"Raul Quigley V\"\n  },\n  \"name\" : \"Tonisha Emmerich IV\",\n  \"transferSpec\" : {\n    \"sinkAgentPoolName\" : \"Beahan\",\n    \"awsS3CompatibleDataSource\" : {\n      \"bucketName\" : \"Rene Robel\",\n      \"path\" : \"5r91biz3981wxqf90gtbosre0pp9at2z60ikih9e2c3q7apzjwakj74z11tiehnv89bd5pup1h6zdz05lfdvjkitycld7g9truedckawdycl7to0ufj6h3d9vwhmb7qe3694l0e1zogidpnv9gxdj4aufoh50k6djapmt8xumil\",\n      \"endpoint\" : \"orgyqcqxieo5120hnndydxpzenzsu5bsix544wx5iiapqfirhc6ejy490m1sj6p6bwufih19a1dsk9i71xhxy6m5kpuuvfsgbkkkfpeyje9e7xo4rqr5qwz7y97pyq29au77c2ovo1oejqcihz7ct8f0u5s4j5hqhq2gt631h00a4ni6trirhqirproh8n\",\n      \"s3Metadata\" : {\n        \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n        \"listApi\" : \"LIST_OBJECTS_V2\",\n        \"requestModel\" : \"REQUEST_MODEL_PATH_STYLE\",\n        \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n      },\n      \"region\" : \"siemjn55tyvtj6o7z43yxi92gjyslgpboh58qkg0cyfgeztqrxrz0alhcvmik\"\n    },\n    \"azureBlobStorageDataSource\" : {\n      \"container\" : \"6s2usbqa\",\n      \"path\" : \"fdkpzs7qekjamximwzx33mnoy96e4rg8mpdeqpz4\",\n      \"azureCredentials\" : {\n        \"sasToken\" : \"lpuomq\"\n      },\n      \"storageAccount\" : \"cumf04t6z3qgr43b6zy25cdww1xxkk0ssthdn6e2efwqj8qabu74qpkmyh3jghcd2pt7ysnrswg996fu0vw3lil2slazwhzpmp3\"\n    },\n    \"posixDataSink\" : {\n      \"rootDirectory\" : \"qny4yuk5ca0p3spwa1urqashtokshwd4wdta6cy75tgg93wyt647sy8fdt1qjewex18dbbxadidx1lhmgirm6qctnzln99sytyphakuv\"\n    },\n    \"awsS3DataSource\" : {\n      \"bucketName\" : \"Jeane Aufderhar\",\n      \"path\" : \"ul0rtifdrszfz41l0z127twkqeqr0hc5w6ggd2f072zhppcdwalqlqjyuj1ghjmg65y5g8di87qmnw34dxhwijkhpdps865985h0eprgmndogvhsttpup0oq78\",\n      \"awsAccessKey\" : {\n        \"accessKeyId\" : \"8sz7\",\n        \"secretAccessKey\" : \"nlsplkksgv6oxgy5b0x03jxtv2sot6d3yhff5ra4iz08lnp043b2esx7xaz97gjt9kbm1kweezg66ikq8xnoge350mpiowl4y\"\n      },\n      \"roleArn\" : \"tywx0erh5lf0ktllu7aqmtvu1bxsn6jg3l2e5atjqdjocgnb5v0tvxuq6skqudntbrcramuer5pne17jvl8m6eh1rdhhw0tx5yqyom6fmifrlropa9i3w6aw2c601axbwot1zrchlg31yysusr2agkbe1di7ywid26wamwtd2b86ob0i6rgpi9h4h656iod7qs33x\"\n    },\n    \"sourceAgentPoolName\" : \"Hand\",\n    \"gcsDataSource\" : {\n      \"bucketName\" : \"Miss Edward Dicki\",\n      \"path\" : \"dgkez02znt3sc5qfe5l3cmvd4j2zm0d0as6yw01kqwsnhnbp2lpdg1ruij1qqzezmk5j8mdx0fro6k3flhwes3ppxms6ors5mms111zmdivb5gc206y2407p93ne6ne6tj9051ujc5d\"\n    },\n    \"gcsDataSink\" : {\n      \"bucketName\" : \"Devin Roob II\",\n      \"path\" : \"2uf8acbj4zf3p5dcvtbj6re0dkiprlya46exvc3uewyj9kt9cx7qgjz41c54mf11h\"\n    },\n    \"posixDataSource\" : {\n      \"rootDirectory\" : \"lhy6o1tml9qurnqf0rlz3xg1lrm36vk57q6f962lwqvvzgrslga0ms7fkoq90twfx564i51itffz80n15m3l77z8v3zkpntqf75ft56sb0ivjpmbvt00v6isq7wiztn26oxtkvpj3ter4p9cgxgfqbag316icbft1fu7jxu0chefbey0v9cr4vmz\"\n    },\n    \"objectConditions\" : {\n      \"minTimeElapsedSinceLastModification\" : \"2022-06-19T10:25:42.411461Z\",\n      \"includePrefixes\" : [ \"7nyn3q9si0eglxjfwymnc2mvravljruuiwptaa1jfxlv53yn7o8xwhk3avii0ckeu48h3imlsupkg0jzq35znwq41xonfylg0noh6483ymyrqcmo4ut772ivw9bd6srdr81fjbwcsm6sv2ol9zkvyn2wou1iuzho4tqyao16jbbjjugvuc9ymg9rtau8jq8ius0iz\", \"anpbmphmu47mb5xv65s51h19ogowcr58zx9m2kdvpkuu330gmf8ket2uznhrjlhuprzyef71l24di6e5eohr3fv5y9afilv43\", \"0luowo18dl\", \"hhsjl1zoyvqayn2rucqx3otn8pset7nxdge257voso3e3ltyu7o8242uydiepszyicdzehxow0bei7kuttynfl330hdd9ws2nh7h\", \"dzw0wx61oblmhyk3p3h58skp0hmcylwxyszyttxn6pfpuj82dbx3f2237zco3gdl5gq1n1nyjgiextewdprd4h1dro94ge75idci0ywjegqx1kt0gos5j4sa889w4jjitpof7jfut8v3agzz4auwdo4vlq8v0skzyo3pd\" ],\n      \"lastModifiedBefore\" : \"djtnihem8046oudhueclnnvesn2fyra5x45lg87lm72tvebcsd6y6pc20dkdg6ja8fthsftf8txfp94vhppyd9he6tskbg10vwhnm4qmjndsi995rxujg1fvau4wrf179s8ifcyc2kxsa1lm76pnbydw5sfw1ornzr00ucgli\",\n      \"lastModifiedSince\" : \"07dws11yeguv48hjmxljfj62ryqxns58an9n0\",\n      \"excludePrefixes\" : [ \"g7dp6crg2\", \"26w9q9v8s22d592jlmda2s6kc83z0t0is8ipuuvzhp2q1gryhmvnc231pimydiozg5p9r1znk4lkzb4uaccyp8twkap0i87javwkdnh60ycmj92rjpwat31lxz70qocif8xe40e\", \"50m4e6rzm8ho77x9qfbr85557psk13ln111xlgrdwwjgcz944qzidnsnffubj035v3tbuvzi6e00s1eiv0756sy90ptou1kcke18scnagden7i08ghqcip5z8rwpta0ech8205202beoc9z2t8knatmud1nk1rq\", \"4ul\", \"ohxdwh4nt021zhneqd7tfijjhyz3pbjwlk7w97wp0e5osbyxfhxxmxz1i6p5pyoljd7nft1oi3vda8zcv0vhz5xf8a0n5b1z2830csx657rxgx01e8bc16gh2frtvdkxut5m971lyyuj76vmsn836rmek9ec79i\" ],\n      \"maxTimeElapsedSinceLastModification\" : \"2022-06-18T10:44:42.411596Z\"\n    },\n    \"gcsIntermediateDataLocation\" : {\n      \"bucketName\" : \"Bill Padberg\",\n      \"path\" : \"uv1jdm59nsy7jpnofxscfatkqaa8yce32lwpb28cglb2ju9n1f04l41s65xr45uxw9nwnujq0bc6nb1i3o6z56stns5ijslm0wds7cxsnc2dr1x2yoti1ygwxqptcl01edrt1ec5idgdj7u25qmaff\"\n    },\n    \"httpDataSource\" : {\n      \"listUrl\" : \"https://web.example.mocklab.io/279811\"\n    },\n    \"transferManifest\" : {\n      \"location\" : \"74amdlhf9ahppe0dc6s6xakeg0lge02673wqxi6scu4khy708tzwu36elmyzmeyatizuc34wbw5cg3hiteuzbp3uy10cwzzctrbhtnxt8wgh2927uw54phs\"\n    },\n    \"transferOptions\" : {\n      \"deleteObjectsUniqueInSink\" : true,\n      \"overwriteObjectsAlreadyExistingInSink\" : true,\n      \"metadataOptions\" : {\n        \"mode\" : \"MODE_SKIP\",\n        \"uid\" : \"UID_SKIP\",\n        \"storageClass\" : \"STORAGE_CLASS_COLDLINE\",\n        \"gid\" : \"GID_UNSPECIFIED\",\n        \"kmsKey\" : \"KMS_KEY_UNSPECIFIED\",\n        \"symlink\" : \"SYMLINK_SKIP\",\n        \"temporaryHold\" : \"TEMPORARY_HOLD_UNSPECIFIED\",\n        \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n        \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n      },\n      \"deleteObjectsFromSourceAfterTransfer\" : true,\n      \"overwriteWhen\" : \"OVERWRITE_WHEN_UNSPECIFIED\"\n    }\n  },\n  \"notificationConfig\" : {\n    \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_SUCCESS\", \"EVENT_TYPE_UNSPECIFIED\" ],\n    \"pubsubTopic\" : \"m0ljui1qii449y5aevkiw2pt9zqs\",\n    \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n  },\n  \"projectId\" : \"tq57\",\n  \"latestOperationName\" : \"Devona Towne Sr.\",\n  \"status\" : \"DELETED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93f3d345-f1cd-4776-89bf-852cbfbb9ec7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.412248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.create",
          "schema" : {
            "description" : "This resource represents the configuration of a transfer job that runs periodically.",
            "properties" : {
              "creationTime" : {
                "description" : "Output only. The time that the transfer job was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deletionTime" : {
                "description" : "Output only. The time that the transfer job was deleted.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A description provided by the user for the job. Its max length is 1024 bytes when Unicode-encoded.",
                "type" : "string"
              },
              "eventStream" : {
                "$ref" : "#/components/schemas/EventStream"
              },
              "lastModificationTime" : {
                "description" : "Output only. The time that the transfer job was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "latestOperationName" : {
                "description" : "The name of the most recently started TransferOperation of this JobConfig. Present if a TransferOperation has been created for this JobConfig.",
                "type" : "string"
              },
              "loggingConfig" : {
                "$ref" : "#/components/schemas/LoggingConfig"
              },
              "name" : {
                "description" : "A unique name (within the transfer project) assigned when the job is created. If this field is empty in a CreateTransferJobRequest, Storage Transfer Service assigns a unique name. Otherwise, the specified name is used as the unique name for this job. If the specified name is in use by a job, the creation request fails with an ALREADY_EXISTS error. This name must start with `\"transferJobs/\"` prefix and end with a letter or a number, and should be no more than 128 characters. For transfers involving PosixFilesystem, this name must start with `transferJobs/OPI` specifically. For all other transfer types, this name must not start with `transferJobs/OPI`. Non-PosixFilesystem example: `\"transferJobs/^(?!OPI)[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` PosixFilesystem example: `\"transferJobs/OPI^[A-Za-z0-9-._~]*[A-Za-z0-9]$\"` Applications must not rely on the enforcement of naming requirements involving OPI. Invalid job names fail with an INVALID_ARGUMENT error.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "projectId" : {
                "description" : "The ID of the Google Cloud project that owns the job.",
                "type" : "string"
              },
              "schedule" : {
                "$ref" : "#/components/schemas/Schedule"
              },
              "status" : {
                "description" : "Status of the job. This value MUST be specified for `CreateTransferJobRequests`. **Note:** The effect of the new job status takes place during a subsequent job run. For example, if you change the job status from ENABLED to DISABLED, and an operation spawned by the transfer is running, the status change would not affect the current operation.",
                "enum" : [ "STATUS_UNSPECIFIED", "ENABLED", "DISABLED", "DELETED" ],
                "type" : "string"
              },
              "transferSpec" : {
                "$ref" : "#/components/schemas/TransferSpec"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41d44e1b-4bf0-45ac-ae74-3ba9fbb29e6b",
    "name" : "Lists transfer jobs.",
    "request" : {
      "urlPath" : "/v1/transferJobs",
      "method" : "GET",
      "queryParameters" : {
        "filter" : {
          "equalTo" : "hi8gfu8vjfms99dkkb5zyulc36qe6xlj0yqw3acm43ps6xq9u279wgtwsiyjie3kvzl4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"junlc5b\",\n  \"transferJobs\" : [ {\n    \"creationTime\" : \"2022-06-26T10:23:42.406736Z\",\n    \"lastModificationTime\" : \"2022-09-03T10:46:42.40677Z\",\n    \"description\" : \"Mollitia quis aperiam non laudantium. Porro voluptatem error esse repellat sapiente quia. Deserunt optio animi qui officia. Dolores velit sequi illo expedita ut molestias. Placeat qui quibusdam.\",\n    \"deletionTime\" : \"2022-08-27T10:53:42.406846Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 924599562,\n        \"year\" : 1194282836,\n        \"day\" : 566170552\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 105698671,\n        \"year\" : 1972978566,\n        \"day\" : 1779720763\n      },\n      \"repeatInterval\" : \"e8iipmaxeouza7sgvtdj5lndc89yfy7i2iu6xbkm04ddno1oj72j4s25n7env6usrx08j11zkrjqnd21mgesek5odrbojy9yxu04at4w1shxtnij0tbz3e5wbq164fba7s34yip1tzdq9hxqwx8i82x2wm8klca0q27jce9um08yko\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1726543975,\n        \"seconds\" : 17733989,\n        \"nanos\" : 1719135801,\n        \"minutes\" : 552453937\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 1672546560,\n        \"seconds\" : 940602365,\n        \"nanos\" : 2048068935,\n        \"minutes\" : 108005066\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"FIND\", \"FIND\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"COPY\", \"FIND\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\" ],\n      \"enableOnpremGcsTransferLogs\" : false,\n      \"logActionStates\" : [ \"FAILED\", \"SUCCEEDED\", \"FAILED\", \"FAILED\", \"SUCCEEDED\", \"FAILED\", \"SUCCEEDED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-11-12T10:41:42.407098Z\",\n      \"eventStreamStartTime\" : \"2022-07-24T14:05:42.407132Z\",\n      \"name\" : \"Dr. Dudley Walker\"\n    },\n    \"name\" : \"Jessica Schulist PhD\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Wolf\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Dwight Terry\",\n        \"path\" : \"ifpfv7\",\n        \"endpoint\" : \"osheve8ervfym6xy22xpt4jz933gtb2lek97s2hy9udf\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_HTTPS\",\n          \"listApi\" : \"LIST_OBJECTS\",\n          \"requestModel\" : \"REQUEST_MODEL_UNSPECIFIED\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"k6o4k9ga8w1n0rux3z1bjg8zfldnwphu62vkiexit7x33ki49mxfwxjccrsltfry2091g501tld7jny3vo243qrt5drw59mh3jrult9mw0qbn6h68pmlcjq06841wl96h7dh33ojp3wi13vltpbi7nuwzib751r4x0im4rm383z1k3s4dl9dcs656p1feuxhmn\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"gwrplevm5wsz69iqnglwmbo5251ezjhnw0bdjxl8so8vjlux33pk2pe9r4fiw1uck586wubnby1gwuxe9kfiqak0jekeuodhhrt3cgk3423j\",\n        \"path\" : \"z2fx3epy9mq94u83zr8wmllto83pd7s5q2txy321l4fp54m9kw2s9czneehurzooel5a2aq2cg7pglxm9i1lfvqxdvdjd7hpks3u4zhewgbequb786opun6glziuw5x3rbgy02edz8mc32xf3gwek3jz4qdk8knqj1gquvva4etzfhceqwhuevpzc7\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"1vzs05ecwxarfyj0mivh76wu659covxv8bapjgmcgh4kdgeix86d3802zoj7hs867841w24qc8kri1976fsh7btjg4pg3noi2tiekvdmhy4xu7jj428cznibyudlu0e85g0hh4s46c1i5klbsue8\"\n        },\n        \"storageAccount\" : \"amte4q3c\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"bk5f0volzxz0egl9ef3qwoztm1inhhx4ar96i\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Miss Ollie Windler\",\n        \"path\" : \"k7qyiwx8d52rs9thtf0uyixfefqvu28gg1pn9qp07gwj3kz6lvoo\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"p80o\",\n          \"secretAccessKey\" : \"sskq0hgxgv4jzxjw5uixa55zfi7k6ryzelpmnt4m06qom6nrm05549aq714c1vrffmodx\"\n        },\n        \"roleArn\" : \"asqqbzpqsq58kgiwn6jf4lz80nqgurffql08gxopijh5jolvrp68w7vcja3ufy1fcftpwgx13sp6l7ywbkiupgw8nuyuj9hyb42li0vxyloiuyr7zr8cxbjjf3bkjfjup6dbz8cb1s\"\n      },\n      \"sourceAgentPoolName\" : \"Turner\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Teofila Jacobson MD\",\n        \"path\" : \"kt00zse01qyakjb285n5qjydedbzp6qg6m40t1sgyn7059eqq25qky73f0mri8wjhgwicottwswz3qyfy53b46ybntajz4aqjw3i7ti18ptevd\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Marian Keeling\",\n        \"path\" : \"savsdnl952t0kjemtxbbgj1av4zs6dc2iq6zpgt30pqt1qmng5fbigz8yfcrhegkcz5h36p142cja1762d6lhplswrhxpfh6iu8c8aro99gz7ef7ezz2dlgjay43vxprcxsr77wc4qdjvpfe3su4x91p2qwg6j7kudwel6sdrdf\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"yg7djgiyfosd4797fjcpqi3xax5phcg37sy7u1egcx\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-07-26T10:32:42.408015Z\",\n        \"includePrefixes\" : [ \"kiiv6bmp3av7111mxtv3xw7tw20um7014e8b7wcnijjarn87r8x0auhkhtla0roewpzalngiy9y2mfyfvfuu26c11djrxc1e1m8r4aq3rd86q1bilzb\", \"iywvu1m6p0kyw5lubby2q0x\", \"88rn90ou5bktz01sui7wmv4zn4pg\", \"id1ahey\", \"mo4ndirw6nsvogej0uemybh240vg3sen4i9hkgozn8de4cq7adxzg713dp7d2kdgyb7y1v4nycopipwp9gk1ke18a273pwks4azi2vpt6wywul2xngi075dkaebgjlplbwgdsx50oci78nic4lv0h6xsyrgu2t37exfbrr6pyfd20u2\", \"ao5iykwboxezq1zck8k3xkd0xj7wfrhe0mk\", \"axls5i71d4j3rcv1b9x7640nngluo2b5cmspucg4dxljvhcbdeiwh4bcn15fuzvwe9h27n392r44go4jh8bli3bp\", \"gtjbombm3ysar0znamjbxqiyte2ipqwyyibbw705jw39vfhks650x7u2f7trzu88i\" ],\n        \"lastModifiedBefore\" : \"jf36iet0789xqikpvqf4l5el06ej6i1beo8yxj0ds2i34opytlyxhijigh27p1obp2a1oswydidvmewh5w49r43g3p1hkokreywpzdhjza5bud5aeyw2ftnh4970h97twjrnlv\",\n        \"lastModifiedSince\" : \"idyqebij673g4r3q2k439s73wflep0himx3oatbubqmojp9zjq360c5a6dapgjebd14k9lz6zi2n71xg1cs2psa4yqj2l6m9ff25j6\",\n        \"excludePrefixes\" : [ \"eply1xapnl5e8tdrgfbc6klx2l2q50ughys94jobueod7fm7vezdkdohyeaujstku061m91hb52bxq45mdcrbx8vngw06w384de8q7ytgjwpe7qxhs21dvn0w4znm7nptwuysmidr1ir3mdaoo9j80ilew1jgqmxzhlyp6aiid0f2ydyq3pqfk7oqmxdr5bhbg3c\", \"u1c4s77luwx18jscw9utnydg0hvfpqa0h7c0xpwb74ivp19nbht5pa3d73l22xae0peixiosmg54vrz30m2yrnewifa2toxwk74q\", \"7gqxtqipbjlkw5lywoe9eyvk34vi5k8wlnoxddbfntsigryxc8u9380ubrg95q8c47725c97dsiv8753qfzktpwtnf216pblfuyc3skw\", \"gmerlx12v9d070uc3xot\", \"ozdj4eiat3xz6paw47w1bcos9jqwwz3zfeofdpx02yhgiypwgzo882bl5bqh7uc7cjr7zm49asia46xakjuefxv8mpqolsb6kr2nt36nty1\", \"ez0m75eq2rxx37tvpuh6azqbee3k6n3yhvq3oer70kz20v8ez78l\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2022-05-15T12:10:42.408192Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Ron Kulas\",\n        \"path\" : \"vpern5pw123oby0dp9psytyxe8cdokafhrp0cgk8xmhf00i07v\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/627130\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"i59s6gxt5bz2ljijpy2iwzn5e4p75hcu7n1ww7k686mg6262knjseb5krb5lowkh8vp4lhi5kvc536bvxqtvfhdon3r8plrupzfnqkga0ub7iq8n618b68hr9abymh03lp7az9d85zhy\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : true,\n        \"overwriteObjectsAlreadyExistingInSink\" : true,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_UNSPECIFIED\",\n          \"uid\" : \"UID_SKIP\",\n          \"storageClass\" : \"STORAGE_CLASS_ARCHIVE\",\n          \"gid\" : \"GID_SKIP\",\n          \"kmsKey\" : \"KMS_KEY_PRESERVE\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_PRESERVE\",\n          \"timeCreated\" : \"TIME_CREATED_UNSPECIFIED\",\n          \"acl\" : \"ACL_PRESERVE\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"DIFFERENT\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"EVENT_TYPE_UNSPECIFIED\", \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_SUCCESS\", \"TRANSFER_OPERATION_FAILED\" ],\n      \"pubsubTopic\" : \"mchd7lvwxfbau0gp5s1k34jy9q0218zpmuuc6je7blt7sh8r3p8isg59rwjwzblc7krbq6zw8k06zn8kgd97war4b8060m872moojpr2b740krkjdynomfqyfkcop05fm4tdkgil2nq3ysfxvtgfru1ohyky6t8k51f0p0f3n4p8yuml8hwaq7\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"i5t3\",\n    \"latestOperationName\" : \"Jong Johnston\",\n    \"status\" : \"DISABLED\"\n  }, {\n    \"creationTime\" : \"2022-12-04T12:05:42.408757Z\",\n    \"lastModificationTime\" : \"2023-02-09T11:39:42.408785Z\",\n    \"description\" : \"Quo facilis eum ut dolorum quos. Laudantium non beatae facilis. Dolorem voluptatem maxime sed ducimus natus et voluptas.\",\n    \"deletionTime\" : \"2023-02-25T12:55:42.40884Z\",\n    \"schedule\" : {\n      \"scheduleEndDate\" : {\n        \"month\" : 102793680,\n        \"year\" : 685433643,\n        \"day\" : 666142207\n      },\n      \"scheduleStartDate\" : {\n        \"month\" : 1351657349,\n        \"year\" : 775748594,\n        \"day\" : 1203370834\n      },\n      \"repeatInterval\" : \"ayke6n8dc0o7fxbgjl9vir8awgalsf8yyyytloy8a4v2btquj7jjrjumefys21\",\n      \"endTimeOfDay\" : {\n        \"hours\" : 1329923093,\n        \"seconds\" : 558491513,\n        \"nanos\" : 2044775861,\n        \"minutes\" : 1971235901\n      },\n      \"startTimeOfDay\" : {\n        \"hours\" : 679106017,\n        \"seconds\" : 797706142,\n        \"nanos\" : 2123569377,\n        \"minutes\" : 312567493\n      }\n    },\n    \"loggingConfig\" : {\n      \"logActions\" : [ \"COPY\", \"DELETE\", \"COPY\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"LOGGABLE_ACTION_UNSPECIFIED\", \"DELETE\", \"COPY\" ],\n      \"enableOnpremGcsTransferLogs\" : true,\n      \"logActionStates\" : [ \"FAILED\", \"SUCCEEDED\", \"FAILED\", \"LOGGABLE_ACTION_STATE_UNSPECIFIED\", \"FAILED\" ]\n    },\n    \"eventStream\" : {\n      \"eventStreamExpirationTime\" : \"2022-12-08T12:04:42.409001Z\",\n      \"eventStreamStartTime\" : \"2022-09-11T10:47:42.40903Z\",\n      \"name\" : \"Ms. Nanci O'Kon\"\n    },\n    \"name\" : \"Carli Kihn\",\n    \"transferSpec\" : {\n      \"sinkAgentPoolName\" : \"Blick\",\n      \"awsS3CompatibleDataSource\" : {\n        \"bucketName\" : \"Tegan Schneider III\",\n        \"path\" : \"vrea4wa3v68j4cdk7nh6n9p3m56lz70c9ly\",\n        \"endpoint\" : \"pigrrgzqm0cdeelq4ap0xkxtsf5nyaev31ggo7bycse74p9k8lix4ojagsvdk3nt3c7eetlkxqqzjtccxp9l93j2svos1glk8um54g28qcyok3v21n2wprve5dh2iv1f\",\n        \"s3Metadata\" : {\n          \"protocol\" : \"NETWORK_PROTOCOL_UNSPECIFIED\",\n          \"listApi\" : \"LIST_API_UNSPECIFIED\",\n          \"requestModel\" : \"REQUEST_MODEL_VIRTUAL_HOSTED_STYLE\",\n          \"authMethod\" : \"AUTH_METHOD_UNSPECIFIED\"\n        },\n        \"region\" : \"8531gb5q5g4oudtbx\"\n      },\n      \"azureBlobStorageDataSource\" : {\n        \"container\" : \"kg265gsxbjf7f6inh3f0vj4lnjux3shcnhz760k0a4vqvqot39u9n8leiw03a40jwh9yeyvkp1hlu5mtth8u852tajvm7w21pil6tv8koguei0r2k7n4mjwvwurfamc73anh7frdes2v\",\n        \"path\" : \"kzurotut3lzgn0dd250knj06c4p6gborafrboob7tfb36kkpc0g6idb4hwzw42krho7tqidq\",\n        \"azureCredentials\" : {\n          \"sasToken\" : \"2gbme1j8d2w1a1pbzm0xi2xnq3x078cjz17pjalwmol9dtekx5n8yaxug97o43svwf92c74iue4ypkrkbs9f8vz9fbxkww00zzwol9uusa6yyvlbrzmpk5fz5nzt6yyu3upj9m0goau53559zufn5bd1gnmq32rprazc4mufvot1pzh22krfc18nbdhryj\"\n        },\n        \"storageAccount\" : \"5cfgwbasl6n015rolj3mx3azwdxxj0vmw0odnpbjz8zz6c4je875acsnybhw79owyxamiea8u2471kniqkrqoplojgpfa81os9wcd929iqwuxnkd\"\n      },\n      \"posixDataSink\" : {\n        \"rootDirectory\" : \"ya5zbdg0f6iybz13sw6ere2xs3mooegxa801aqc5ebxipvq386e8fqag6bhdyhhlcizx1jx0fgkhsvm7dczjmwldt61o8v1ila33h30rc5eo1fbn680agz7v92q41fhp3e6ohqbwtiwuowjn\"\n      },\n      \"awsS3DataSource\" : {\n        \"bucketName\" : \"Rey Nikolaus DVM\",\n        \"path\" : \"9uamdkt5byj6c9pzn9dn4l6jb39vdmk5fqtdrb86tzxdtekoi4vqiayi3hel4kc9w83xn3xj63uy61mcqzh36qmx0w1uxda81tuxs4trsmvg821p0ij38sbm791zgfqk4ck63q8mehr8m27amehm36xgkb6bmpkz2yk3jcqooru6tr17tmwzfjf0c2w7\",\n        \"awsAccessKey\" : {\n          \"accessKeyId\" : \"cbe0\",\n          \"secretAccessKey\" : \"9jbmlccf2qhmftxgrq2m830uu1t7s1ip2x7wcx8ib1sryjs1xm62h7itbzpn86ty1onrpw220kj2nn9pvey52bwsh20yb4tc38hjfe1odcemu7125hnm63tmdylh361m07\"\n        },\n        \"roleArn\" : \"16pjfozuwtryygnxfb4wvctp9wv\"\n      },\n      \"sourceAgentPoolName\" : \"Beier\",\n      \"gcsDataSource\" : {\n        \"bucketName\" : \"Calandra Kirlin\",\n        \"path\" : \"y14sebj9zbdx6k9pk9p2qq68zzmerm0m9po69525afmprwj2l8x25nx3p13logvi8x1vhvgm3v69p9s6bhoa7f9u6xqr1yjy\"\n      },\n      \"gcsDataSink\" : {\n        \"bucketName\" : \"Antione Brekke\",\n        \"path\" : \"1kscenpd376g678e1o8b0ilhmtoggcsscbldw0akkyr0\"\n      },\n      \"posixDataSource\" : {\n        \"rootDirectory\" : \"vnxkbile4ulw5nnlrvrg4gvsik98ucc8rrlesh0vjk7p7n7gdebcrz6aue1lq55hc6v73hj7geih11gg6u2q0gaed21nwk21dsh2y1xjnufu0zdo1g882\"\n      },\n      \"objectConditions\" : {\n        \"minTimeElapsedSinceLastModification\" : \"2022-03-21T11:13:42.409763Z\",\n        \"includePrefixes\" : [ \"obsqfj8i5vi8xm156e9napn4t9n36jqzgbr0zcuffsbca393dun8rypouvoe0bnyf3t1vq16ocxxnjkb0uzy6793sv02hrs9p68etycvx9sf8d3v5whq2v83x1ri0sg2ts6y33721\", \"r558k96qqtek4dgdr3jns8ru0d7vv0jykqu29iuneo9y413bta24zgbx8yicsu69hryw3tcsmfx8322dlui3a20h5p7k6g9ssoatz0s8bctfhgrl9czncbw7lob2c1ah3d\", \"jcufp1uhka4xew865i8l2rynqnrd27wmf9wgozemw79avcpep5t7p3rytakn0cmxcqobihh\", \"qgd22l8hpqcokdu51wks2i0446y7mjkl59yaoda3v8i5swacmbxskyxli3b4lwofpnlmprlppg7ej8rvhyntobzwfc5rizfsofq1c3p6tov3\", \"nciumiojz0gjgrbgeufrsmvuvr8kzwtos6jz0qyfuybtinixstx1svcwv9963g4e5xn7rqv0ae27asitdw48m2epy0n1qatcd1iyi97rlst96xy7yekki7af0yojxrcchpjltszbus07zzm0legu9onv45a7yne3gvjmrqmd3ybla9a0qyhkdc9g6bu5ngiszhubmb\", \"dzh0733qqu4y0nrdfcuklds4o20sq4melcsmixixqsbg85f\" ],\n        \"lastModifiedBefore\" : \"zb1wepx01d87d9t3dtnnaq109nrjzwyyfi0pcdj1h3krcmcsbt72e5dn9hyldxl1oc26es66vs4tmg1ywyg2b1gwiqk3mgiz1xvmn7rgfx4j2xadjsactiz86sjf1x7d\",\n        \"lastModifiedSince\" : \"3cqkcfcc4x2razn8m42vofq9lris1hnw5bjccejai7yh2kppx20qly32a8tadrqw2g6ewnzzos9n20a2enxtfmntml092j423vcchr48vk3pdk87cc3mpyi1h42rs4jw837w9delfio303f5lwpk07f\",\n        \"excludePrefixes\" : [ \"lqhkxe256peifbrcnibzi566jzb2ksdu0bsski6qkbidl8f7qx2s0i66oc45rbg50uv9e6riwk5ekxynglam4xagkrk3tn4s1chuo1roiy9vfqg5d6vad6phlchte28n\", \"wurjbnzphpnxr6ji7latnuolqq9asottfxgtwxn9lom1pkl37navpyo68puof705l734g3xwex37ckznsyhbg4e4fyxrm1d8l7p3wbmuuy8bzms4u51btybb584tv8c4de0vb7anmr4g7u9mdh2sr2is145qm6obcbi0yttbqfvn7r6rsgj1fpix2dc0gczkubb5\", \"no7i30wlyutzqvzmzez2lxb376hsai3kmm7h3v5q8n5fayq7brqjmtfms393h4gf9rxgtd7kx1bttibi12zp27ak7madoj9bjv87hrw07j38abl7l1pr76k1p7k\", \"hbmr4l8e94xlrzdkoklniojqeb6fmtsaezvfqwctq3bzxiffoltkkdh585tpvm06pziw4jtran859tcqw8hzpr72rcycndbwj90o46rf9rpende5soa9\", \"rj8cyrvdm7a0bcqm5luz599phqi6pspsz0c07p0negr9xk8sf8mqvqg73mhdb4sr6bwh09rmg\", \"d9j5bnppnnpmulre8vml2dq4mw2vyyuinzxlt8o5gxuzl\" ],\n        \"maxTimeElapsedSinceLastModification\" : \"2023-02-19T14:10:42.409893Z\"\n      },\n      \"gcsIntermediateDataLocation\" : {\n        \"bucketName\" : \"Errol Volkman\",\n        \"path\" : \"e4vl9q1xk7m0t2f61oj2jt2un4fmwvea1qzi7\"\n      },\n      \"httpDataSource\" : {\n        \"listUrl\" : \"https://web.example.mocklab.io/579771\"\n      },\n      \"transferManifest\" : {\n        \"location\" : \"r64ps0e066af6i57im5l00j3yrxko0bpqepo0tu7sullymhlcwpw1dtmk3r4qmym43bgk3wn\"\n      },\n      \"transferOptions\" : {\n        \"deleteObjectsUniqueInSink\" : false,\n        \"overwriteObjectsAlreadyExistingInSink\" : false,\n        \"metadataOptions\" : {\n          \"mode\" : \"MODE_SKIP\",\n          \"uid\" : \"UID_NUMBER\",\n          \"storageClass\" : \"STORAGE_CLASS_DESTINATION_BUCKET_DEFAULT\",\n          \"gid\" : \"GID_SKIP\",\n          \"kmsKey\" : \"KMS_KEY_DESTINATION_BUCKET_DEFAULT\",\n          \"symlink\" : \"SYMLINK_UNSPECIFIED\",\n          \"temporaryHold\" : \"TEMPORARY_HOLD_SKIP\",\n          \"timeCreated\" : \"TIME_CREATED_PRESERVE_AS_CUSTOM_TIME\",\n          \"acl\" : \"ACL_DESTINATION_BUCKET_DEFAULT\"\n        },\n        \"deleteObjectsFromSourceAfterTransfer\" : true,\n        \"overwriteWhen\" : \"ALWAYS\"\n      }\n    },\n    \"notificationConfig\" : {\n      \"eventTypes\" : [ \"TRANSFER_OPERATION_FAILED\", \"TRANSFER_OPERATION_ABORTED\", \"TRANSFER_OPERATION_SUCCESS\" ],\n      \"pubsubTopic\" : \"hqicbjmfioa6w5j5qo1v1sxre59mvaa17196unml9qzk4zeow9ft7yh586jt0an4e6f4wmo0ycoc0eflggfoiwdq6y0mkgtf5n5q98z0h52ohlj74fblz8xtjbnympw5e61bqq\",\n      \"payloadFormat\" : \"PAYLOAD_FORMAT_UNSPECIFIED\"\n    },\n    \"projectId\" : \"y6t7\",\n    \"latestOperationName\" : \"Loree Block\",\n    \"status\" : \"ENABLED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41d44e1b-4bf0-45ac-ae74-3ba9fbb29e6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.410494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.transferJobs.list",
          "schema" : {
            "description" : "Response from ListTransferJobs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              },
              "transferJobs" : {
                "description" : "A list of transfer jobs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferJob"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a998c5de-49c9-494a-8fe2-c91ce1b7fac7",
    "name" : "Creates an agent pool resource.",
    "request" : {
      "urlPath" : "/v1/projects/0g0j/agentPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Dr. Lucius O'Keefe\",\n  \"bandwidthLimit\" : {\n    \"limitMbps\" : \"6peu9tmahwhuy3v1gm6afcddrel9xxogn9ka3jdokzfgwf756vnwkd1q5j9u29w3y9ir5hf05ieoo0i0j7jl8\"\n  },\n  \"name\" : \"Warner Brakus\",\n  \"state\" : \"STATE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a998c5de-49c9-494a-8fe2-c91ce1b7fac7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.406666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.create",
          "schema" : {
            "description" : "Represents an On-Premises Agent pool.",
            "properties" : {
              "bandwidthLimit" : {
                "$ref" : "#/components/schemas/BandwidthLimit"
              },
              "displayName" : {
                "description" : "Specifies the client-specified AgentPool description.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. Specifies a unique string that identifies the agent pool. Format: `projects/{project_id}/agentPools/{agent_pool_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. Specifies the state of the AgentPool.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "CREATED", "DELETING" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e3906044-fa9f-44c9-ad81-f4dbaec328d4",
    "name" : "Lists agent pools.",
    "request" : {
      "urlPath" : "/v1/projects/7nm4/agentPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"2zgs20oev3qrzyjioh68o100ettixnc3olz6so913fl861cbycunrm26x6osghlf7nff1s2jxzy89eunvtej7uyt7ic0khplnonfecyodg58wzgsi4tn074pp5wxrkfdfpx5ho69nx2kka7xw4a1b6yf3ivg0n\",\n  \"agentPools\" : [ {\n    \"displayName\" : \"Mathew Bogisich\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"1lhix0puwzjn\"\n    },\n    \"name\" : \"Liz Nitzsche\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Jillian Crist\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"8mdxng45sd4draqug0znfbfhqifyamfo30tr9qwychtozio8plh6scx1rlshrh6mz9f7ee85f1clfu7d9y28fh8\"\n    },\n    \"name\" : \"Tom Cummerata\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"displayName\" : \"Bryan Keeling\",\n    \"bandwidthLimit\" : {\n      \"limitMbps\" : \"3ojutk6fns8sjc39qsa88t30ntpi0006tbf96l5x75t606pggfzq5k9vsx2gt2ii1z4akvgqr90y2ywpku5fr1vdsifvc0sp9q6cwxp1jr8tkvtgwku84trld7kzzuus0l0ttbujz1mj8i18nua9ee3bld04gy0am7qryppic5h0sti5i\"\n    },\n    \"name\" : \"Dallas Johnston\",\n    \"state\" : \"CREATED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3906044-fa9f-44c9-ad81-f4dbaec328d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.406424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.projects.agentPools.list",
          "schema" : {
            "description" : "Response from ListAgentPools.",
            "properties" : {
              "agentPools" : {
                "description" : "A list of agent pools.",
                "items" : {
                  "$ref" : "#/components/schemas/AgentPool"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The list next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67cbd3e8-8e47-4d85-a1b3-08d7583155b7",
    "name" : "Returns the Google service account that is used by Storage Transfer Service to a...",
    "request" : {
      "urlPath" : "/v1/googleServiceAccounts/8164",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountEmail\" : \"onadgv6rwxfkdgsilwrea7lcvwamp6s0rymrab6b5ee0cn36kzg9582cdf6g2516jutrhj8g8agqlzeqe9tn8gkeyngf4vfa0j\",\n  \"subjectId\" : \"167z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67cbd3e8-8e47-4d85-a1b3-08d7583155b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:42.405889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "storagetransfer.googleServiceAccounts.get",
          "schema" : {
            "description" : "Google service account",
            "properties" : {
              "accountEmail" : {
                "description" : "Email address of the service account.",
                "type" : "string"
              },
              "subjectId" : {
                "description" : "Unique identifier for the service account.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}