{
  "mappings" : [ {
    "id" : "55f3f296-5929-3a49-ad14-2cc4f0418ebf",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/9817",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55f3f296-5929-3a49-ad14-2cc4f0418ebf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "edc5e195-165c-3c13-8966-4f101965bf18",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/c860",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edc5e195-165c-3c13-8966-4f101965bf18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "75f948a8-a899-33cc-8ab2-f3f22aab403e",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/zez8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75f948a8-a899-33cc-8ab2-f3f22aab403e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "4811b180-7212-3340-a7af-82dbd9e0442f",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/7rp5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4811b180-7212-3340-a7af-82dbd9e0442f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "262cf873-39d8-362f-9fce-ab408f1243ed",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/u9h3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "262cf873-39d8-362f-9fce-ab408f1243ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2e4c8e0e-dc2d-39dc-973e-633c18f8a5cd",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/vm0a",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e4c8e0e-dc2d-39dc-973e-633c18f8a5cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "3021c62d-78d6-3497-8738-a16b093282b2",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/s00s",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3021c62d-78d6-3497-8738-a16b093282b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "6ec689b3-6327-3679-b22a-737a03d4d65b",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/xefe",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ec689b3-6327-3679-b22a-737a03d4d65b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "90adf5fc-81fd-36d3-a2b5-4506a9813e9d",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/3748",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90adf5fc-81fd-36d3-a2b5-4506a9813e9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "36097b3e-c1cc-3b0f-a31f-a26ad73edd25",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/mxnu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36097b3e-c1cc-3b0f-a31f-a26ad73edd25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "e573234e-e98c-3999-b734-970aaa51fb37",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/5924",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e573234e-e98c-3999-b734-970aaa51fb37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "18f0da3e-38eb-3cf5-8674-e802ae0f5a99",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/211u",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18f0da3e-38eb-3cf5-8674-e802ae0f5a99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TimeOffRequest"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "TimeOffRequest"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "c6d4f677-69b0-33ce-93d9-ebbd3bacd464",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/yc70",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6d4f677-69b0-33ce-93d9-ebbd3bacd464",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "06c09026-11e9-37f0-88df-9059fb28b4bf",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/bd8o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06c09026-11e9-37f0-88df-9059fb28b4bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "0551237b-3bf2-3fec-8e6e-7807c83c3c42",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/ijlx",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0551237b-3bf2-3fec-8e6e-7807c83c3c42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "f80ca4b5-76b0-33d3-9070-217afc90a21e",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/xi26",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f80ca4b5-76b0-33d3-9070-217afc90a21e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "24cec211-4c47-33dd-9999-143f7e54e488",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/a9bw",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24cec211-4c47-33dd-9999-143f7e54e488",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "7a21e2a9-2436-321d-826e-806434b6c427",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/64s0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a21e2a9-2436-321d-826e-806434b6c427",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "341c581a-f72f-3878-b8a3-be97e771dbf1",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "341c581a-f72f-3878-b8a3-be97e771dbf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "033a484a-f568-302b-84f6-c7c25327a367",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "033a484a-f568-302b-84f6-c7c25327a367",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "92589796-5c2b-3b10-87c7-378733cd2ac6",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92589796-5c2b-3b10-87c7-378733cd2ac6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "2413d19e-51e0-3459-901c-b39141d4ebbe",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2413d19e-51e0-3459-901c-b39141d4ebbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "1fdbacbb-f733-3548-905f-3ad663e4d12a",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fdbacbb-f733-3548-905f-3ad663e4d12a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "a58bc314-8121-3418-b2b9-ac505267cfed",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a58bc314-8121-3418-b2b9-ac505267cfed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "03eb81aa-8058-30d4-848c-3d853f1fdd2d",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03eb81aa-8058-30d4-848c-3d853f1fdd2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "447bd7c9-1077-3540-8a56-53167e81766d",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "447bd7c9-1077-3540-8a56-53167e81766d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "1ae697d1-84f1-3494-810c-3402a54ffac5",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ae697d1-84f1-3494-810c-3402a54ffac5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "75e9a32b-b2a9-3e4b-aa89-ebb7208a83ec",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75e9a32b-b2a9-3e4b-aa89-ebb7208a83ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "6cda7682-1a52-3dcd-9584-36e72bc5e389",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cda7682-1a52-3dcd-9584-36e72bc5e389",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "e400faac-dc1a-3e77-b7f6-f2113c1383d5",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  } ],\n  \"resource\" : \"time-off-requests\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"bamboohr\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e400faac-dc1a-3e77-b7f6-f2113c1383d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/TimeOffRequest"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "TimeOffRequestList"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "6def4791-6dde-3289-a633-b4c28bc82650",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/v7h0",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6def4791-6dde-3289-a633-b4c28bc82650",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "81dec2a3-455a-3829-82f3-7ceffac333e8",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/gp2g",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81dec2a3-455a-3829-82f3-7ceffac333e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "0aafb43d-78d7-3232-bb49-9391b94562f4",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/3ze9",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0aafb43d-78d7-3232-bb49-9391b94562f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "7fd2bdf9-9dff-3744-8a42-38f56aa6e794",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/e70x",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fd2bdf9-9dff-3744-8a42-38f56aa6e794",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "697e0ee0-4998-379a-8497-52b87241194d",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/v40s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "697e0ee0-4998-379a-8497-52b87241194d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "8c7bde70-d6f2-3e05-bc73-e1acb45148e5",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/e5ol",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"schedules\" : [ {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"hourly\",\n        \"type\" : \"temp\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c7bde70-d6f2-3e05-bc73-e1acb45148e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeeSchedules"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeeSchedulesResponse",
            "x-graphql-type-name" : "EmployeeSchedulesList"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "4749833a-726c-3ae1-b153-d3083bfad238",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/2ec8",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4749833a-726c-3ae1-b153-d3083bfad238",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "80ad1e63-9106-3721-becb-e89030173345",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/qdbp",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80ad1e63-9106-3721-becb-e89030173345",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "22144955-8eb8-30e0-a763-f07508781824",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/c7eg",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22144955-8eb8-30e0-a763-f07508781824",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "caac69be-247b-3e4d-ae13-4545d7de0019",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/750o",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "caac69be-247b-3e4d-ae13-4545d7de0019",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "ce80271e-1cef-3ee5-b50d-cea560a8050d",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/2r02",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce80271e-1cef-3ee5-b50d-cea560a8050d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "d89c7ba8-0948-3b4c-8ca0-e65e6ed4c294",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/6hbs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d89c7ba8-0948-3b4c-8ca0-e65e6ed4c294",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Payroll"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPayrollResponse",
            "x-graphql-type-name" : "Payroll"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "6b545954-7187-35ea-a9e1-751d5936b8e7",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/civk/payrolls/c851",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b545954-7187-35ea-a9e1-751d5936b8e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "0cfdd6ce-ffe5-373f-801c-f97b823bc199",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/2ced/payrolls/708j",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0cfdd6ce-ffe5-373f-801c-f97b823bc199",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "f90fb6e7-4b2b-337e-8b58-847c7828db94",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/jfl8/payrolls/8fxv",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f90fb6e7-4b2b-337e-8b58-847c7828db94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "52188572-3170-3344-9d85-7015e701482c",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/2wgg/payrolls/vq10",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52188572-3170-3344-9d85-7015e701482c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "5592b918-6f46-3d18-9d8d-87d6865cfe4e",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/91ap/payrolls/43cp",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5592b918-6f46-3d18-9d8d-87d6865cfe4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "0e50e478-973d-324a-9da3-c4c6189c5ee1",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/df16/payrolls/0381",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"payroll\" : {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { } ],\n        \"deductions\" : [ { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    },\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"part_time\",\n        \"type\" : \"internship\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e50e478-973d-324a-9da3-c4c6189c5ee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeePayroll"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeePayrollResponse",
            "x-graphql-type-name" : "EmployeePayroll"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "1575d1d4-3f10-3050-95de-f324e6bb5140",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/8340",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1575d1d4-3f10-3050-95de-f324e6bb5140",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "58d73ec0-6a3b-3e09-988c-d9dfdceb21d5",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/tq9a",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58d73ec0-6a3b-3e09-988c-d9dfdceb21d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "a05c7585-a2e6-345f-a218-746c7baf8518",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/qor8",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a05c7585-a2e6-345f-a218-746c7baf8518",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "e1f101fc-6df0-30d1-b3ee-4b4928432312",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/zz9x",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1f101fc-6df0-30d1-b3ee-4b4928432312",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "69885aad-9f1f-3cd6-a98f-ddaa09350420",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/15a3",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69885aad-9f1f-3cd6-a98f-ddaa09350420",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "09ae0b94-ba07-391c-b207-c97299d2897c",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/agp2",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"payrolls\" : [ {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { } ],\n        \"deductions\" : [ { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { } ],\n        \"deductions\" : [ { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { } ],\n        \"deductions\" : [ { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { } ],\n        \"deductions\" : [ { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { } ],\n        \"deductions\" : [ { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"full_time\",\n        \"type\" : \"employee\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09ae0b94-ba07-391c-b207-c97299d2897c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeePayrolls"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeePayrollsResponse",
            "x-graphql-type-name" : "EmployeePayrollList"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "3ddd80d4-9eb0-32d3-b9cd-9c000c38dc1c",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ddd80d4-9eb0-32d3-b9cd-9c000c38dc1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "463cd1d3-7236-3717-baea-2a593a588ead",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "463cd1d3-7236-3717-baea-2a593a588ead",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "61468bfa-9519-3ff1-afc7-987adff8a216",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61468bfa-9519-3ff1-afc7-987adff8a216",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "31fba3cb-045e-30e9-839d-da72e4499e4c",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31fba3cb-045e-30e9-839d-da72e4499e4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "0186dff0-c532-3abe-9538-453dfe9f9d34",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0186dff0-c532-3abe-9538-453dfe9f9d34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "46b50b70-7bbe-3627-985c-2af55e3401c9",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { } ],\n      \"deductions\" : [ { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  }, {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { } ],\n      \"deductions\" : [ { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  }, {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  } ],\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46b50b70-7bbe-3627-985c-2af55e3401c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Payroll"
                },
                "type" : "array"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPayrollsResponse",
            "x-graphql-type-name" : "PayrollList"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "4dd52b21-61b4-3d64-898d-8e25f3fb89ff",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/d056/jobs/5612",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4dd52b21-61b4-3d64-898d-8e25f3fb89ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "80191f63-0737-333b-a191-22640707735a",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/hd82/jobs/7c54",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80191f63-0737-333b-a191-22640707735a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "f228f8b0-d51d-3894-8840-6c49b89d3162",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/l2ve/jobs/7ao5",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f228f8b0-d51d-3894-8840-6c49b89d3162",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "14d09e11-6e94-3ed5-92a8-2dd5e7e8dec1",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/854l/jobs/973x",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14d09e11-6e94-3ed5-92a8-2dd5e7e8dec1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "2188954e-159b-3636-8b55-8acd76405602",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/3ri7/jobs/fwf7",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2188954e-159b-3636-8b55-8acd76405602",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "b5fdd7cc-4e60-3b8e-af6c-46241cbbee9c",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/q972/jobs/755q",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2020-08-12\",\n    \"employee_id\" : \"t8rn\",\n    \"location\" : {\n      \"name\" : \"HQ US\"\n    },\n    \"employment_status\" : \"active\",\n    \"id\" : \"12345\",\n    \"department\" : \"Brussels Office\",\n    \"title\" : \"CEO\",\n    \"start_date\" : \"2020-08-12\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5fdd7cc-4e60-3b8e-af6c-46241cbbee9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisJob"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisJobResponse",
            "x-graphql-type-name" : "Job"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "031d1082-8de4-3457-8d51-f3c3b3d0aaf3",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/o180",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "031d1082-8de4-3457-8d51-f3c3b3d0aaf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "fe4d7c1b-120a-3aa8-b8a1-10aa52afd235",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/928x",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe4d7c1b-120a-3aa8-b8a1-10aa52afd235",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "e6cbaec3-ed98-336a-8df0-301bbe785083",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/y89q",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6cbaec3-ed98-336a-8df0-301bbe785083",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "2f01a0a9-4ec4-3111-b4c9-4ba21dbffaf3",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/sb37",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f01a0a9-4ec4-3111-b4c9-4ba21dbffaf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "7871c231-cd29-3e99-af0a-352299788464",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/z7u9",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7871c231-cd29-3e99-af0a-352299788464",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "eee3ab62-446e-31ee-a9ea-30f433d9b4b7",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/4kp6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"8k96\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"228z\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"hf7y\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"hourly\",\n        \"type\" : \"internship\"\n      },\n      \"nationalities\" : [ \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eee3ab62-446e-31ee-a9ea-30f433d9b4b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisJobs"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisJobsResponse",
            "x-graphql-type-name" : "JobsList"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "919adfb9-d1db-34e7-843d-5d25d525e88d",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/zuxk",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "919adfb9-d1db-34e7-843d-5d25d525e88d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "50e94a6b-aaac-3035-95b6-1adb459401c5",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/831y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50e94a6b-aaac-3035-95b6-1adb459401c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "0b743387-c3d2-3779-94dd-d05961dc1397",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/79ev",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b743387-c3d2-3779-94dd-d05961dc1397",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "e17006dc-1cee-35d0-a086-baaf33899094",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/k7o4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e17006dc-1cee-35d0-a086-baaf33899094",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "7b5fa6bd-9e8a-3b36-bd99-74e0716b6d00",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/efez",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b5fa6bd-9e8a-3b36-bd99-74e0716b6d00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "ef19abf8-4a4a-3ad3-9980-cd65f37e1de9",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/p3iw",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef19abf8-4a4a-3ad3-9980-cd65f37e1de9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateEmployeeResponse"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "f3275984-25d4-3018-af75-db6e78bcce4e",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/i5y5",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3275984-25d4-3018-af75-db6e78bcce4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "9abe1d31-fff4-37f2-8784-fce7d75c9f2a",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/lope",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9abe1d31-fff4-37f2-8784-fce7d75c9f2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "57f1857d-31a5-3dc0-b96b-a603c2038c1e",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/dji4",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57f1857d-31a5-3dc0-b96b-a603c2038c1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "af7a224e-97f8-3eba-aa59-bb79b3c4ceeb",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/xn3i",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af7a224e-97f8-3eba-aa59-bb79b3c4ceeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "2fbe640f-9c7a-3087-bc60-eafe2905eb4f",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/9tl6",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fbe640f-9c7a-3087-bc60-eafe2905eb4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "53df0203-ae1d-3709-949b-bfabe8f4e724",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/q4we",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"full_time\",\n      \"type\" : \"temp\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53df0203-ae1d-3709-949b-bfabe8f4e724",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Employee"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeeResponse",
            "x-graphql-type-name" : "Employee"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "7e6404a8-5b93-3247-9dc1-adda0c1f06a4",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/yd87",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e6404a8-5b93-3247-9dc1-adda0c1f06a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "d6300c8e-bc92-38e8-888f-adb7c1e546c5",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/4k42",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6300c8e-bc92-38e8-888f-adb7c1e546c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "7931a7cb-e923-3ab7-9abe-84f00130eb06",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/5n0l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7931a7cb-e923-3ab7-9abe-84f00130eb06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "e57aefb5-db6c-3697-99e4-380f8b28e77d",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/q737",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e57aefb5-db6c-3697-99e4-380f8b28e77d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "87089ce1-9231-3ef9-8cb8-e2613f146ebb",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/st88",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87089ce1-9231-3ef9-8cb8-e2613f146ebb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "1f90d17d-35b0-3e6d-8e3b-c6715c8d3ee3",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/b12v",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f90d17d-35b0-3e6d-8e3b-c6715c8d3ee3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteEmployeeResponse"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "7d09600f-e8d6-36ef-8b7c-b45453eb8817",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d09600f-e8d6-36ef-8b7c-b45453eb8817",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "9f01a951-3900-301c-97bb-ae985462ec82",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f01a951-3900-301c-97bb-ae985462ec82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "6c1e8922-fa9d-3f7f-9d85-c611158d8636",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c1e8922-fa9d-3f7f-9d85-c611158d8636",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "8974020b-93de-34dd-99d2-14986922bd0b",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8974020b-93de-34dd-99d2-14986922bd0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "440996dd-af0c-369a-b7cf-4b6c8b3ac055",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "440996dd-af0c-369a-b7cf-4b6c8b3ac055",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "54303fff-ebc4-3bb1-9ef1-a56725bfdf7e",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54303fff-ebc4-3bb1-9ef1-a56725bfdf7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateEmployeeResponse"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "095dbab0-7fe9-33fd-b05b-e7e1e8263922",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "095dbab0-7fe9-33fd-b05b-e7e1e8263922",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "bc73efde-a889-3288-ab58-215da0a1b521",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc73efde-a889-3288-ab58-215da0a1b521",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "a02eb0d1-8b3f-3343-b53f-9b618a3ba4fa",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a02eb0d1-8b3f-3343-b53f-9b618a3ba4fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "790de7e1-c012-3484-ad4f-db3ffa79c8aa",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "790de7e1-c012-3484-ad4f-db3ffa79c8aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "48c18d7c-9d35-3379-97a1-cfce6b531eb9",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48c18d7c-9d35-3379-97a1-cfce6b531eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "7bd717d5-a011-3f02-afeb-6665d6754770",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"hourly\",\n      \"type\" : \"other\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"hourly\",\n      \"type\" : \"internship\"\n    },\n    \"nationalities\" : [ \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"full_time\",\n      \"type\" : \"internship\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"hourly\",\n      \"type\" : \"freelance\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"part_time\",\n      \"type\" : \"freelance\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"hourly\",\n      \"type\" : \"internship\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  } ],\n  \"resource\" : \"Employees\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"sage-hr\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bd717d5-a011-3f02-afeb-6665d6754770",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Employee"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeesResponse",
            "x-graphql-type-name" : "EmployeeList"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "5f6a76b1-6ca2-35c2-9345-5948da9e5d35",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/or8c",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f6a76b1-6ca2-35c2-9345-5948da9e5d35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "6f011707-68de-349b-84d3-e533e1f70bb5",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/iqgw",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f011707-68de-349b-84d3-e533e1f70bb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "e28d7f9a-c8eb-387f-9ae7-62af2cb30328",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/op5e",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e28d7f9a-c8eb-387f-9ae7-62af2cb30328",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "786aa0fc-dad1-33e7-9738-f00f9cfa19da",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/r011",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "786aa0fc-dad1-33e7-9738-f00f9cfa19da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "0f6fc4be-d6cf-3b79-b988-6c4a60b1a665",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/8k2s",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f6fc4be-d6cf-3b79-b988-6c4a60b1a665",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "6a11af84-7617-3e29-b860-f4ad25042b51",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/t08c",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a11af84-7617-3e29-b860-f4ad25042b51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateDepartmentResponse"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "c11b8880-62f3-3851-8fe1-3410c0ba2dbd",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/q46f",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c11b8880-62f3-3851-8fe1-3410c0ba2dbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "e45e8994-76fc-3f88-ad2a-380dccb84b41",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/7lzq",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e45e8994-76fc-3f88-ad2a-380dccb84b41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "fbb4ca62-9596-3909-a321-6f76b01d1832",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/jgc0",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbb4ca62-9596-3909-a321-6f76b01d1832",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "0908e3dc-7a5c-326f-9c61-5d37da049c22",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/ku83",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0908e3dc-7a5c-326f-9c61-5d37da049c22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "e363af0b-cebd-3daf-af84-4e84a0c5f12d",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/eilr",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e363af0b-cebd-3daf-af84-4e84a0c5f12d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "bc0bb4cb-4288-32ff-8302-1fb439936434",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/tj35",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc0bb4cb-4288-32ff-8302-1fb439936434",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Department"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetDepartmentResponse",
            "x-graphql-type-name" : "Department"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "34d836dd-ae0b-363d-a6fe-72180821e2ad",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/tg19",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34d836dd-ae0b-363d-a6fe-72180821e2ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "f9b699ee-b11e-33ea-a94e-903a04ea5b59",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/u7x4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9b699ee-b11e-33ea-a94e-903a04ea5b59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "9743c87c-0873-3f0f-a5da-37b615e09cf3",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/3ju6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9743c87c-0873-3f0f-a5da-37b615e09cf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "ef6caaad-55da-3362-94d2-83320d3d4e35",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/1o5z",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef6caaad-55da-3362-94d2-83320d3d4e35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "0f5e42d5-2a14-3eec-8aa3-c1cb4e42a60f",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/2ve4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f5e42d5-2a14-3eec-8aa3-c1cb4e42a60f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "48317765-bca5-3b5c-b116-00c6d0257f55",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/du95",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48317765-bca5-3b5c-b116-00c6d0257f55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteDepartmentResponse"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "8df64962-5254-30ec-b9dc-881fd0b25414",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8df64962-5254-30ec-b9dc-881fd0b25414",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "49d83f07-4c33-3b68-b598-ca44b8c99012",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49d83f07-4c33-3b68-b598-ca44b8c99012",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "ea7f7ec1-3eab-3611-8e0c-ad795816adb6",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea7f7ec1-3eab-3611-8e0c-ad795816adb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "7f7a819e-2962-38ee-bb03-b9898d492690",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f7a819e-2962-38ee-bb03-b9898d492690",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "c06b155d-72b4-3803-9486-c840dc0645f5",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c06b155d-72b4-3803-9486-c840dc0645f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "6ea30473-7aad-3c0a-acbb-75d55a09d524",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ea30473-7aad-3c0a-acbb-75d55a09d524",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateDepartmentResponse"
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "8e91a5c5-d82c-32d9-b43a-e8cbc26bdabb",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e91a5c5-d82c-32d9-b43a-e8cbc26bdabb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "ff499d9d-675d-3cce-bd0e-2ccffdcb30e6",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff499d9d-675d-3cce-bd0e-2ccffdcb30e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "2b556e50-fe02-37e3-9e12-f1075de50c83",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b556e50-fe02-37e3-9e12-f1075de50c83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "547e51f7-499c-3740-b255-533eb684d8a1",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "547e51f7-499c-3740-b255-533eb684d8a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "5ddd5553-42c0-3805-92f8-bef439387964",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ddd5553-42c0-3805-92f8-bef439387964",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "b302ca10-7084-3d7b-a930-8dd51de8dde0",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  }, {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  } ],\n  \"resource\" : \"Departments\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"workday\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b302ca10-7084-3d7b-a930-8dd51de8dde0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Department"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetDepartmentsResponse",
            "x-graphql-type-name" : "DepartmentList"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "2b465638-af27-306a-bed5-45b04b55dc6a",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/7o9u",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b465638-af27-306a-bed5-45b04b55dc6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "c3c0a283-042c-3681-b8a2-5569e52603f9",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/2540",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3c0a283-042c-3681-b8a2-5569e52603f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "9d000f7d-8acf-32a7-9eea-adf0e8f6e5db",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/y1km",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d000f7d-8acf-32a7-9eea-adf0e8f6e5db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "d8b73bc3-5d18-3001-aee5-82bf84b1a0bb",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/90dx",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8b73bc3-5d18-3001-aee5-82bf84b1a0bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "9c681dab-4131-300f-9e8f-388c67140aa5",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/6ha4",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c681dab-4131-300f-9e8f-388c67140aa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "d07598e1-233d-3137-b545-bf54dbea081a",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/v268",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d07598e1-233d-3137-b545-bf54dbea081a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateHrisCompanyResponse"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "b213d031-65db-3802-b1f3-81de6535ed1e",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/ohu8",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b213d031-65db-3802-b1f3-81de6535ed1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "c4cd8300-cddb-3451-a18a-2bfbb5cd5308",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/ypm0",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4cd8300-cddb-3451-a18a-2bfbb5cd5308",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "d72e3b42-317c-3d32-a7c6-c50ab9c09072",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/vr5l",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d72e3b42-317c-3d32-a7c6-c50ab9c09072",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "948b17bb-6b43-3afd-bb79-15c2c063eb3b",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/h83q",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "948b17bb-6b43-3afd-bb79-15c2c063eb3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "c04debd2-b070-3244-ab15-ee25a782e32b",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/5z51",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c04debd2-b070-3244-ab15-ee25a782e32b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "e02899eb-e6bf-370a-9000-609b0a056377",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/p5gy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e02899eb-e6bf-370a-9000-609b0a056377",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisCompany"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisCompanyResponse",
            "x-graphql-type-name" : "HrisCompany"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "d65eab94-327d-33c6-9240-f0a322f189a5",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/9lx5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d65eab94-327d-33c6-9240-f0a322f189a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "78b29ff1-1f1e-3c1d-88d8-b2808187f4fa",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/x0q8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78b29ff1-1f1e-3c1d-88d8-b2808187f4fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "1f07f130-90e8-35bb-af07-61eb494247a8",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/r3d3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f07f130-90e8-35bb-af07-61eb494247a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "47147810-951a-309f-9b9d-e94c7f3fa27f",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/6uyq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47147810-951a-309f-9b9d-e94c7f3fa27f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "f0ff0ac9-f81c-33db-bca4-ac9a47ccd097",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/67t1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0ff0ac9-f81c-33db-bca4-ac9a47ccd097",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "24af4cf8-4dd3-3a4b-8221-a8b1643d8038",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/t07p",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24af4cf8-4dd3-3a4b-8221-a8b1643d8038",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteHrisCompanyResponse"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "b09c4d7f-9acb-37af-8e31-e8561ccd4f89",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b09c4d7f-9acb-37af-8e31-e8561ccd4f89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "71a4ba77-d81a-313d-8c71-01ddce5dca1a",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71a4ba77-d81a-313d-8c71-01ddce5dca1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "7615b5fb-a041-3400-8446-586b4520ab86",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7615b5fb-a041-3400-8446-586b4520ab86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "cc0b448c-b57e-3473-aa85-3d63e6bac887",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc0b448c-b57e-3473-aa85-3d63e6bac887",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "cf1f9063-86c8-3234-bad8-3627f7d89d31",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf1f9063-86c8-3234-bad8-3627f7d89d31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "33b07a36-492f-3c6d-bc67-200561a02fd2",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33b07a36-492f-3c6d-bc67-200561a02fd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateHrisCompanyResponse"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "8b2b646e-0ac4-38a2-8e75-2f0c247954ce",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b2b646e-0ac4-38a2-8e75-2f0c247954ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "2129ba55-0cd8-30d7-96d0-3ce829731621",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2129ba55-0cd8-30d7-96d0-3ce829731621",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "b711a017-0eef-3492-9957-e14d60380e31",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b711a017-0eef-3492-9957-e14d60380e31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "10f39bf2-e889-3080-b5c4-98b852082421",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10f39bf2-e889-3080-b5c4-98b852082421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "e70ed0d3-1c55-3170-ad86-92ed3bdd3f01",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e70ed0d3-1c55-3170-ad86-92ed3bdd3f01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "891539e0-0cd6-303b-b863-f4234d8b123a",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"Companies\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"undefined\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "891539e0-0cd6-303b-b863-f4234d8b123a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/HrisCompany"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisCompaniesResponse",
            "x-graphql-type-name" : "HrisCompanyList"
          }
        }
      }
    },
    "insertionIndex" : 161
  } ]
}