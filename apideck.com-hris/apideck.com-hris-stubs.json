{
  "mappings" : [ {
    "id" : "ff706770-c5a7-4672-b5c2-84e3c7ede1da",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/6y0u",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff706770-c5a7-4672-b5c2-84e3c7ede1da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.855856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e5dc3bfc-8598-4ace-961f-43cbaecccf81",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/f8ep",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5dc3bfc-8598-4ace-961f-43cbaecccf81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.855725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "2529ef96-480f-4bac-b0a8-c59085f50eb9",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/4ts2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2529ef96-480f-4bac-b0a8-c59085f50eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.855573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "40de3213-8871-4916-9278-537ab3d6acea",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/6nf5",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40de3213-8871-4916-9278-537ab3d6acea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.85544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "2a49feb5-6a06-45ba-a993-10ecac651863",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/0r2y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a49feb5-6a06-45ba-a993-10ecac651863",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.855302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "f6641df7-6054-4468-b09e-ec0287415cf2",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/3ja3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6641df7-6054-4468-b09e-ec0287415cf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.85514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f1cf95e1-4175-490c-84a3-f844438b5d92",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/m7h6",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1cf95e1-4175-490c-84a3-f844438b5d92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.854992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "232a8d8c-f434-40ff-a37c-37529f93fdf3",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/ujng",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "232a8d8c-f434-40ff-a37c-37529f93fdf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.854855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "6dfcb931-387e-4a16-993f-02029df194d3",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/h4s3",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dfcb931-387e-4a16-993f-02029df194d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.854698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "e2aee680-1907-4ed9-b0d5-e36a6b4f92cd",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/apz8",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2aee680-1907-4ed9-b0d5-e36a6b4f92cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.854557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "2c744fd5-7d29-49b8-9ece-38ba770e8fc3",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/gtle",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c744fd5-7d29-49b8-9ece-38ba770e8fc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.854421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "aa8e6ba5-73a5-447e-a2ba-2899cccf7592",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/n197",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa8e6ba5-73a5-447e-a2ba-2899cccf7592",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.854263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TimeOffRequest"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "TimeOffRequest"
          }
        }
      }
    }
  }, {
    "id" : "accbd61e-666d-43c2-afb4-f715367b7246",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/07cu",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "accbd61e-666d-43c2-afb4-f715367b7246",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.854073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "9f14cd45-9857-40bb-aaa8-f404353b9b8f",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/md21",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f14cd45-9857-40bb-aaa8-f404353b9b8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.853938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f6489f34-58a7-473a-98a5-199fff0209f8",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/y54h",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6489f34-58a7-473a-98a5-199fff0209f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.853783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "be6334c6-df82-4bb8-bdef-c8c0dfa39e5f",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/7xvu",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be6334c6-df82-4bb8-bdef-c8c0dfa39e5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.853648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ab579f7f-6058-4916-963a-82b4088dab9f",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/dtcy",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab579f7f-6058-4916-963a-82b4088dab9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.853518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d4faa9b0-9507-4bba-918f-ff4a8675dd82",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/3yna",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4faa9b0-9507-4bba-918f-ff4a8675dd82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.853359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "447a23bb-5a2f-4de2-bae6-af80ba8426fb",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "447a23bb-5a2f-4de2-bae6-af80ba8426fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.853187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "3610d9d6-dd64-4329-af03-8d86afd8a1df",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3610d9d6-dd64-4329-af03-8d86afd8a1df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.853113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5db7bd5f-7da9-45df-ac9a-7dcd67c862ff",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5db7bd5f-7da9-45df-ac9a-7dcd67c862ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.853023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "311439d8-d409-49f7-946c-5275838b0d2b",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "311439d8-d409-49f7-946c-5275838b0d2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "e1bfff9b-417c-4efc-bb28-eab9936793d5",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1bfff9b-417c-4efc-bb28-eab9936793d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "9353a6d6-65e6-4f05-b91a-97379e7418ee",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9353a6d6-65e6-4f05-b91a-97379e7418ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "62205a70-31bc-463a-9a45-065f3edab29d",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62205a70-31bc-463a-9a45-065f3edab29d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "f34f408f-e5ad-4d30-ad4b-77a21341af8a",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f34f408f-e5ad-4d30-ad4b-77a21341af8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e3c5b9e4-aada-47c8-a644-5af326cb68b3",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3c5b9e4-aada-47c8-a644-5af326cb68b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "384865c5-cc21-4fd0-b338-380d1895b25e",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "384865c5-cc21-4fd0-b338-380d1895b25e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "acf08626-4e69-4f16-93d3-1e8da539ca30",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acf08626-4e69-4f16-93d3-1e8da539ca30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "db9b2b2c-ed0a-4534-920b-91283c53f191",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  } ],\n  \"resource\" : \"time-off-requests\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"bamboohr\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db9b2b2c-ed0a-4534-920b-91283c53f191",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/TimeOffRequest"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "TimeOffRequestList"
          }
        }
      }
    }
  }, {
    "id" : "b5e0d554-7399-475f-8aba-fa5e8be7d05c",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/a1sy",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5e0d554-7399-475f-8aba-fa5e8be7d05c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.852102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "23c8d06e-bafd-4273-bdf2-e28a32a952ef",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/v237",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23c8d06e-bafd-4273-bdf2-e28a32a952ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.851961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "f55edce9-8e7a-47fc-b675-42d4684fe940",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/9s75",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f55edce9-8e7a-47fc-b675-42d4684fe940",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.851803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a56533b4-1ad4-43ef-9763-d91f754d4f51",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/8xeu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a56533b4-1ad4-43ef-9763-d91f754d4f51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.851662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "edc54ad3-871c-46f6-b6b0-a5b6332340d5",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/p064",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edc54ad3-871c-46f6-b6b0-a5b6332340d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.851519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "2b9023e0-0d3f-4c5d-bf07-544c44a309c8",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/c089",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"schedules\" : [ {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"hourly\",\n        \"type\" : \"employee\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b9023e0-0d3f-4c5d-bf07-544c44a309c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.851349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeeSchedules"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeeSchedulesResponse",
            "x-graphql-type-name" : "EmployeeSchedulesList"
          }
        }
      }
    }
  }, {
    "id" : "2b1bfba6-cf2d-4c57-9f84-8a0e2ec27fc8",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/4294",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b1bfba6-cf2d-4c57-9f84-8a0e2ec27fc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.850003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "0a243537-80b4-4471-9fd7-df51c56871af",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/tk73",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a243537-80b4-4471-9fd7-df51c56871af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.849866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "65dcd69c-8eec-414c-822b-1a8171ad2cb3",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/e06p",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65dcd69c-8eec-414c-822b-1a8171ad2cb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.849705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "a2939606-2c89-425a-917d-e380c171e60e",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/id94",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2939606-2c89-425a-917d-e380c171e60e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.849572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "111c5e9e-fa16-4908-b08f-b405344cec07",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/l40g",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "111c5e9e-fa16-4908-b08f-b405344cec07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.849429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "90730c7f-2c94-42b1-9453-39aad5cb6b1b",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/74ez",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90730c7f-2c94-42b1-9453-39aad5cb6b1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.849262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Payroll"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPayrollResponse",
            "x-graphql-type-name" : "Payroll"
          }
        }
      }
    }
  }, {
    "id" : "cc53d0fe-ca40-4d84-b857-ef725eb6d856",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/wdfw/payrolls/02bc",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc53d0fe-ca40-4d84-b857-ef725eb6d856",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.848572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "96a5e4e9-685d-42df-9875-476721065dee",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/277e/payrolls/158z",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96a5e4e9-685d-42df-9875-476721065dee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.848373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9c3a1107-41ab-445d-b29a-ad594f722bf2",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/p09j/payrolls/l49i",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c3a1107-41ab-445d-b29a-ad594f722bf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.848158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "8beabfa7-9aba-43fb-8dc7-6c8bd77c7348",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/6ixq/payrolls/929y",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8beabfa7-9aba-43fb-8dc7-6c8bd77c7348",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.847954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1e38c6a0-f6a0-4356-b769-390de597cfdc",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/7kx0/payrolls/427y",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e38c6a0-f6a0-4356-b769-390de597cfdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.847748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d582d8cd-6d2d-48bf-bde3-c2d06d75d139",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/c49m/payrolls/0e98",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"payroll\" : {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    },\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"hourly\",\n        \"type\" : \"internship\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d582d8cd-6d2d-48bf-bde3-c2d06d75d139",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.847522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeePayroll"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeePayrollResponse",
            "x-graphql-type-name" : "EmployeePayroll"
          }
        }
      }
    }
  }, {
    "id" : "2c7d307e-d0d7-4dce-9a3e-3b6494064142",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/21gn",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c7d307e-d0d7-4dce-9a3e-3b6494064142",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.846471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "5a3253f3-8e58-4779-98e8-9034aff57449",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/62v6",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a3253f3-8e58-4779-98e8-9034aff57449",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.846316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "704181bd-8d5c-4330-8916-ee096a1c81c6",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/t78u",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "704181bd-8d5c-4330-8916-ee096a1c81c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.846156Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "7fef9a83-5099-4c0d-8dde-f1968a3f2722",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/78ff",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fef9a83-5099-4c0d-8dde-f1968a3f2722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.846021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "24d6225b-dbc1-4b93-b888-0579de41d687",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/dqio",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24d6225b-dbc1-4b93-b888-0579de41d687",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.845883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "44767097-3d93-494b-bae1-6b39c607b9fe",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/294b",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"payrolls\" : [ {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"full_time\",\n        \"type\" : \"temp\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44767097-3d93-494b-bae1-6b39c607b9fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.845721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeePayrolls"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeePayrollsResponse",
            "x-graphql-type-name" : "EmployeePayrollList"
          }
        }
      }
    }
  }, {
    "id" : "bd9998c4-e843-4fe4-86e4-aa7ba3bcfcab",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd9998c4-e843-4fe4-86e4-aa7ba3bcfcab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.844588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "322c583d-a6fe-4c87-8343-b5d0432c82cf",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "322c583d-a6fe-4c87-8343-b5d0432c82cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.844515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5348f350-d375-49de-aed3-ea13c9d37234",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5348f350-d375-49de-aed3-ea13c9d37234",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.844421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "0144347a-ffcf-4e56-aae7-76f63dee281b",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0144347a-ffcf-4e56-aae7-76f63dee281b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.844349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f929315c-39e6-4918-8000-57fef41afd2e",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f929315c-39e6-4918-8000-57fef41afd2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.844276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "964c1684-9791-404b-97dd-5f144d53d3b7",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  }, {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { } ],\n      \"deductions\" : [ { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  } ],\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "964c1684-9791-404b-97dd-5f144d53d3b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.844178Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Payroll"
                },
                "type" : "array"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPayrollsResponse",
            "x-graphql-type-name" : "PayrollList"
          }
        }
      }
    }
  }, {
    "id" : "7e68b388-0029-4f41-9764-4ca4b20d07ea",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/3454/jobs/j30z",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e68b388-0029-4f41-9764-4ca4b20d07ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.843758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "c4efc8d0-41ff-48ab-bc41-a0449c4e3ff9",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/3tyy/jobs/8ohh",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4efc8d0-41ff-48ab-bc41-a0449c4e3ff9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.843564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "b8507228-8539-47fd-97be-37736f963da0",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/1o98/jobs/cjw7",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8507228-8539-47fd-97be-37736f963da0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.843356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "5b15bd7d-c689-431f-8b0a-c0fedf1eee5b",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/as9n/jobs/5k92",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b15bd7d-c689-431f-8b0a-c0fedf1eee5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.843158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d78aed2f-931b-48d4-ad92-2560135daa76",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/l32w/jobs/lgcy",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d78aed2f-931b-48d4-ad92-2560135daa76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.842953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "3fd66f62-226e-45f4-974d-aac20416b19c",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/1qy2/jobs/9zt3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2020-08-12\",\n    \"employee_id\" : \"i6yp\",\n    \"location\" : {\n      \"name\" : \"HQ US\"\n    },\n    \"employment_status\" : \"active\",\n    \"id\" : \"12345\",\n    \"department\" : \"Brussels Office\",\n    \"title\" : \"CEO\",\n    \"start_date\" : \"2020-08-12\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fd66f62-226e-45f4-974d-aac20416b19c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.842732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisJob"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisJobResponse",
            "x-graphql-type-name" : "Job"
          }
        }
      }
    }
  }, {
    "id" : "ef63d48b-4b0d-45b9-ac98-1cc1924c47d2",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/5l6b",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef63d48b-4b0d-45b9-ac98-1cc1924c47d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.842433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a6dabbbf-4eaa-4242-9606-99e6ee805c6c",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/zx9m",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6dabbbf-4eaa-4242-9606-99e6ee805c6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.842295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "122a4801-d440-44a4-8e7f-a68cc094a603",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/qvuk",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "122a4801-d440-44a4-8e7f-a68cc094a603",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.842133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "61e438b8-c890-48b8-81a4-361473266bdd",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/x0t3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61e438b8-c890-48b8-81a4-361473266bdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.841996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "2a918789-3995-49a0-9b4d-93d57baff89f",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/iva1",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a918789-3995-49a0-9b4d-93d57baff89f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.841854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "bed12431-ec92-405b-9b60-ae63faef64a5",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/iu7t",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"18st\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"9f6y\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"spb1\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"2d38\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"l2jr\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"k98s\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"st5p\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"osjm\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"part_time\",\n        \"type\" : \"internship\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bed12431-ec92-405b-9b60-ae63faef64a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.841685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisJobs"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisJobsResponse",
            "x-graphql-type-name" : "JobsList"
          }
        }
      }
    }
  }, {
    "id" : "fa3407fd-f548-4d98-8dac-aeab99f718a6",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/pri3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa3407fd-f548-4d98-8dac-aeab99f718a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.840084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "35dcabe8-e2c1-4734-91ae-0b7fd9c3df0b",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/n86f",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35dcabe8-e2c1-4734-91ae-0b7fd9c3df0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.83995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "97b48814-922e-4af8-954d-51a88db5c0e9",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/7m00",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97b48814-922e-4af8-954d-51a88db5c0e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.839796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "e1d962e5-65e3-49f1-8526-086138d5f290",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/c319",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1d962e5-65e3-49f1-8526-086138d5f290",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.839661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1b6bb625-5e5f-40f4-8fff-8e69acb555a4",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/x1ly",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b6bb625-5e5f-40f4-8fff-8e69acb555a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.839529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "58717161-1308-48a0-8659-91ee8b95ed97",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/705v",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58717161-1308-48a0-8659-91ee8b95ed97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.839377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateEmployeeResponse"
          }
        }
      }
    }
  }, {
    "id" : "594f21ca-4aa7-4486-8feb-66dac3ba9030",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/t3z1",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "594f21ca-4aa7-4486-8feb-66dac3ba9030",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.839232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "9eec4698-dabd-49db-bcf4-c0379e58674f",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/ivh8",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9eec4698-dabd-49db-bcf4-c0379e58674f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.839101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "425c4f9f-4fdc-4692-ba83-829b89cfd14c",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/qmc8",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "425c4f9f-4fdc-4692-ba83-829b89cfd14c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.838946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "f6ae3493-64d7-41fd-93d4-73cb15bff0b6",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/i6jb",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6ae3493-64d7-41fd-93d4-73cb15bff0b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.838814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "27cbdc9a-11f3-4a16-b2c0-712b271b14df",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/i20d",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27cbdc9a-11f3-4a16-b2c0-712b271b14df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.838674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "b138e0ac-dcee-4689-adf3-37e978a0b0a8",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/oi1m",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"full_time\",\n      \"type\" : \"other\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b138e0ac-dcee-4689-adf3-37e978a0b0a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.838505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Employee"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeeResponse",
            "x-graphql-type-name" : "Employee"
          }
        }
      }
    }
  }, {
    "id" : "84f56b28-3504-4c1b-b9cf-f833eaa081df",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/72im",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84f56b28-3504-4c1b-b9cf-f833eaa081df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.83775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "7c2b10b5-7ed8-4706-9445-bc3743c880c7",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/qf01",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c2b10b5-7ed8-4706-9445-bc3743c880c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.837619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "677e55b1-84f9-482c-88cf-957bf200ae98",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/4tj2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "677e55b1-84f9-482c-88cf-957bf200ae98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.837459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "39c991de-44b5-44e8-a0dc-2e51f2351cb6",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/6ts9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39c991de-44b5-44e8-a0dc-2e51f2351cb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.837331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d7ca3070-75bd-434a-86f8-74cefcc4fa5e",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/6a1k",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7ca3070-75bd-434a-86f8-74cefcc4fa5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.837196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "8ff7a099-b254-484a-921b-65ddded98d9f",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/o4fh",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ff7a099-b254-484a-921b-65ddded98d9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.837034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteEmployeeResponse"
          }
        }
      }
    }
  }, {
    "id" : "3b44efb3-c4a5-4c1d-b0db-1647b402395d",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b44efb3-c4a5-4c1d-b0db-1647b402395d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "59ed0f26-b062-4c5d-bedd-ca16f82542e8",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59ed0f26-b062-4c5d-bedd-ca16f82542e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "a9db63e7-cdb9-43c3-8cbc-e4f2bfd92e98",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9db63e7-cdb9-43c3-8cbc-e4f2bfd92e98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "d2b385de-5f55-4eba-8930-a9f147819f90",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2b385de-5f55-4eba-8930-a9f147819f90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "7ed35f7f-7a38-468a-a1c8-4e27004f4970",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ed35f7f-7a38-468a-a1c8-4e27004f4970",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "127c8418-569c-4c46-a133-d66a29bee994",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "127c8418-569c-4c46-a133-d66a29bee994",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateEmployeeResponse"
          }
        }
      }
    }
  }, {
    "id" : "fd7b2396-7362-4a4c-91da-c8cdf1dad2e9",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd7b2396-7362-4a4c-91da-c8cdf1dad2e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "e63adab0-4862-44ec-b611-852f69da4629",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e63adab0-4862-44ec-b611-852f69da4629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.83629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "945cb335-1b7b-4fa5-bed1-019ed5719521",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "945cb335-1b7b-4fa5-bed1-019ed5719521",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "f4737ae3-8461-4dd2-aa21-bf990ae7036b",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4737ae3-8461-4dd2-aa21-bf990ae7036b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "ba51c4f0-696f-4de5-9957-294c6d26af3c",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba51c4f0-696f-4de5-9957-294c6d26af3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.836033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "2a28b7ac-5fb6-4ad8-9d1f-ce28b7ef6cd3",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"part_time\",\n      \"type\" : \"internship\"\n    },\n    \"nationalities\" : [ \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  } ],\n  \"resource\" : \"Employees\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"sage-hr\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a28b7ac-5fb6-4ad8-9d1f-ce28b7ef6cd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.835926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Employee"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeesResponse",
            "x-graphql-type-name" : "EmployeeList"
          }
        }
      }
    }
  }, {
    "id" : "0f198a26-dc43-4099-9191-d0e470681843",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/yi48",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f198a26-dc43-4099-9191-d0e470681843",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.834544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "0b94b289-1f4a-46b9-b485-653e83f16e2c",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/17tk",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b94b289-1f4a-46b9-b485-653e83f16e2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.834404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "95832cd7-33d1-42d8-ab0c-bb5dffa23c46",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/176x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95832cd7-33d1-42d8-ab0c-bb5dffa23c46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.834245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "421e4c6d-3a7f-43a3-a12f-f00bc892c2e3",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/v961",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "421e4c6d-3a7f-43a3-a12f-f00bc892c2e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.834099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "b8245a31-bb2e-4cd2-8466-b6570be26238",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/ans7",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8245a31-bb2e-4cd2-8466-b6570be26238",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.833957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "95d9fe89-72f9-4ae4-8c3b-ff2fe19584ca",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/4594",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95d9fe89-72f9-4ae4-8c3b-ff2fe19584ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.83379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateDepartmentResponse"
          }
        }
      }
    }
  }, {
    "id" : "7230c7ca-7e79-4dec-8b60-ad9176012537",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/2901",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7230c7ca-7e79-4dec-8b60-ad9176012537",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.833628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "24991177-2ba2-4068-9507-54cdbda2a8cd",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/sdj4",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24991177-2ba2-4068-9507-54cdbda2a8cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.833485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "78d7a8a7-b1ba-4ff2-9c53-accee84183f0",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/bh50",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78d7a8a7-b1ba-4ff2-9c53-accee84183f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.833315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "33474269-b9ec-4a34-8f05-c7828f6fa72c",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/2p23",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33474269-b9ec-4a34-8f05-c7828f6fa72c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.833155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "8e85bb8a-d8ae-4aea-8009-878c9e5fab88",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/1xt6",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e85bb8a-d8ae-4aea-8009-878c9e5fab88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.833013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "200b9fe3-5581-4c3a-aa75-8fdad1f596d3",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/9kwa",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "200b9fe3-5581-4c3a-aa75-8fdad1f596d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.832845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Department"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetDepartmentResponse",
            "x-graphql-type-name" : "Department"
          }
        }
      }
    }
  }, {
    "id" : "64aab42d-0f6b-4c9f-99fd-e623920cd308",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/dka9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64aab42d-0f6b-4c9f-99fd-e623920cd308",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.832627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "cf8bc999-93c4-4c75-a3b8-fa384836a13f",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/8ya8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf8bc999-93c4-4c75-a3b8-fa384836a13f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.83248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5df43dcd-3ace-4b4b-aa08-962456f33f18",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/6471",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5df43dcd-3ace-4b4b-aa08-962456f33f18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.83232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "da424581-049f-4f75-88ea-d40203700997",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/19b6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da424581-049f-4f75-88ea-d40203700997",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.832179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "0d73464e-1863-4459-b223-cf0cc89b6598",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/h3b0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d73464e-1863-4459-b223-cf0cc89b6598",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.832035Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "bfb438d1-9417-483e-84ff-bd613416d604",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/85fl",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfb438d1-9417-483e-84ff-bd613416d604",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteDepartmentResponse"
          }
        }
      }
    }
  }, {
    "id" : "bf4d10f6-bc08-4660-ade6-d4351b906b5b",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf4d10f6-bc08-4660-ade6-d4351b906b5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "2d02dcf0-5d50-4843-9a3d-d50843ad1c5b",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d02dcf0-5d50-4843-9a3d-d50843ad1c5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "7bd3e2ec-c145-4371-a08d-b82e57a4fb81",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bd3e2ec-c145-4371-a08d-b82e57a4fb81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "d1020f7a-72bc-477b-9eb3-8679e5e6f2e9",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1020f7a-72bc-477b-9eb3-8679e5e6f2e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "84b89947-461c-4878-9353-2ebc153b913c",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84b89947-461c-4878-9353-2ebc153b913c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "1f40ea5e-90d2-4516-ae3a-f0e151f0f033",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f40ea5e-90d2-4516-ae3a-f0e151f0f033",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateDepartmentResponse"
          }
        }
      }
    }
  }, {
    "id" : "82ee27be-707f-4e55-99b2-b274e6b65c57",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82ee27be-707f-4e55-99b2-b274e6b65c57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a47a9553-143f-40b7-87b7-39496a93ac42",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a47a9553-143f-40b7-87b7-39496a93ac42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "5ab31f23-548f-4651-8091-86e91f2f097a",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ab31f23-548f-4651-8091-86e91f2f097a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.831018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "4aea9d96-dc6d-4e45-b4cb-e9b0790f3ba2",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4aea9d96-dc6d-4e45-b4cb-e9b0790f3ba2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.830942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "067ea94b-9984-4ca8-bb4b-7e8a8e946d9f",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "067ea94b-9984-4ca8-bb4b-7e8a8e946d9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.830864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "07c41456-4618-4288-8fa2-cff62731e5aa",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  } ],\n  \"resource\" : \"Departments\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"workday\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07c41456-4618-4288-8fa2-cff62731e5aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.830761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Department"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetDepartmentsResponse",
            "x-graphql-type-name" : "DepartmentList"
          }
        }
      }
    }
  }, {
    "id" : "b21cd150-72f0-4816-b14a-1f32d996b572",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/u5gn",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b21cd150-72f0-4816-b14a-1f32d996b572",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.830612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "6d38dbff-3080-44bb-a5c4-5d59a6c72227",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/dwz3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d38dbff-3080-44bb-a5c4-5d59a6c72227",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.830471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "32ed67c0-13aa-472c-bfc2-ef20a39f2398",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/n696",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32ed67c0-13aa-472c-bfc2-ef20a39f2398",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.830306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "c899686d-6fbd-4b8c-8158-1a4de34dd7b9",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/36a3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c899686d-6fbd-4b8c-8158-1a4de34dd7b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.830164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "1f1f5516-6d19-478f-92bf-bd841d068697",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/e1ul",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f1f5516-6d19-478f-92bf-bd841d068697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.830018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "e1170844-8200-4be8-aabf-a20db4cb9e52",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/w818",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1170844-8200-4be8-aabf-a20db4cb9e52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.829853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateHrisCompanyResponse"
          }
        }
      }
    }
  }, {
    "id" : "0e436618-a2b1-4189-8bd5-5912d8de0414",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/o1af",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e436618-a2b1-4189-8bd5-5912d8de0414",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.829694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "b097c4f4-3522-4761-a7de-51bc9e710ea1",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/023c",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b097c4f4-3522-4761-a7de-51bc9e710ea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.82955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "e0d3416c-7eac-4589-9566-219c2667e29f",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/1wwq",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0d3416c-7eac-4589-9566-219c2667e29f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.829382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "eeec6fa5-b17e-4af3-8243-612b3a7d7aa0",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/8837",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eeec6fa5-b17e-4af3-8243-612b3a7d7aa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.829237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "53331508-026a-43c8-9c78-33d2492234d7",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/052t",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53331508-026a-43c8-9c78-33d2492234d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.829088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "71397146-0f21-49b6-8325-d27c29cc70d9",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/8vl1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71397146-0f21-49b6-8325-d27c29cc70d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.828913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisCompany"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisCompanyResponse",
            "x-graphql-type-name" : "HrisCompany"
          }
        }
      }
    }
  }, {
    "id" : "a2b1b139-0d7f-4182-bda5-46841ec56808",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/l007",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2b1b139-0d7f-4182-bda5-46841ec56808",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.828565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "98212df5-f182-4b34-9c81-d20e97fbd112",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/1g8v",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98212df5-f182-4b34-9c81-d20e97fbd112",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.828417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "adc2fb71-5702-4271-9468-afca84362e81",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/f229",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adc2fb71-5702-4271-9468-afca84362e81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.82825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "0af0ae31-2661-4485-ad15-1ff7760d0eb9",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/s18f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0af0ae31-2661-4485-ad15-1ff7760d0eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.828104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "f869ffe0-1315-4aee-ab17-91061db3fce8",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/ak42",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f869ffe0-1315-4aee-ab17-91061db3fce8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "54eb2ea9-37c1-4de7-bae4-2cabc28f74de",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/eoq0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54eb2ea9-37c1-4de7-bae4-2cabc28f74de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteHrisCompanyResponse"
          }
        }
      }
    }
  }, {
    "id" : "2cf04f17-a5c1-4dcf-a04c-d10a618e3762",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cf04f17-a5c1-4dcf-a04c-d10a618e3762",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "a340e299-24cf-460d-aa2e-98789f74946e",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a340e299-24cf-460d-aa2e-98789f74946e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "9ece98b0-5beb-45c6-8ad3-1a9ab970d547",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ece98b0-5beb-45c6-8ad3-1a9ab970d547",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "ba3e1571-334d-42a6-8374-58d2f96bfa44",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba3e1571-334d-42a6-8374-58d2f96bfa44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "d8034223-6e55-4132-aa7e-8218fce87568",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8034223-6e55-4132-aa7e-8218fce87568",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "d42827dc-7b87-4fe2-a671-180df4e68c0c",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d42827dc-7b87-4fe2-a671-180df4e68c0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateHrisCompanyResponse"
          }
        }
      }
    }
  }, {
    "id" : "75554aac-4e1b-4446-bc85-a0a484c3f9e9",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75554aac-4e1b-4446-bc85-a0a484c3f9e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.827045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    }
  }, {
    "id" : "d682d8f9-27d7-4a51-9244-1ef0a890fa19",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d682d8f9-27d7-4a51-9244-1ef0a890fa19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.826961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    }
  }, {
    "id" : "35eece16-e304-44fa-98bb-b6fc05184642",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35eece16-e304-44fa-98bb-b6fc05184642",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.826853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    }
  }, {
    "id" : "3dc53a7a-47a8-4bca-a9cc-8b28e6014851",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dc53a7a-47a8-4bca-a9cc-8b28e6014851",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.826765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    }
  }, {
    "id" : "c102da13-c782-460a-ba2b-c97c83dbdb24",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c102da13-c782-460a-ba2b-c97c83dbdb24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.826668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    }
  }, {
    "id" : "e7a92b64-02ff-4f5b-b426-d6ccd79b3f8a",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"Companies\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"undefined\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7a92b64-02ff-4f5b-b426-d6ccd79b3f8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.826529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/HrisCompany"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisCompaniesResponse",
            "x-graphql-type-name" : "HrisCompanyList"
          }
        }
      }
    }
  } ]
}