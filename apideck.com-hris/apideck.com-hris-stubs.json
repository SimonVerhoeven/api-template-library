{
  "mappings" : [ {
    "id" : "58dde0ad-5469-485f-900a-daed273742e6",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/3c16",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58dde0ad-5469-485f-900a-daed273742e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.493217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "79140ee2-aede-47c5-9863-6cad004431a5",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/o56m",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79140ee2-aede-47c5-9863-6cad004431a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.493078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "51e0b199-ef8c-4223-b912-8473a15fa718",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/g435",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51e0b199-ef8c-4223-b912-8473a15fa718",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.492924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "0ae06668-11f8-41d3-9655-96d66ab4d539",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/5ul9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ae06668-11f8-41d3-9655-96d66ab4d539",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.492791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f875cf6a-2912-4071-8e11-828d7e17259f",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/j61t",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f875cf6a-2912-4071-8e11-828d7e17259f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.492636Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2606d8a7-cbb3-48f3-bed8-6545f812dde3",
    "name" : "Update Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/468z",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2606d8a7-cbb3-48f3-bed8-6545f812dde3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.492478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "23292ee7-d0c5-4138-801a-cf2c81e3bbad",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/wm69",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23292ee7-d0c5-4138-801a-cf2c81e3bbad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.492336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "b1767bd4-f20b-464a-b1d7-fcfe4e711bb6",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/t145",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1767bd4-f20b-464a-b1d7-fcfe4e711bb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.492209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "78b797f7-cda5-48c4-bb75-9fef91b6e133",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/af9e",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78b797f7-cda5-48c4-bb75-9fef91b6e133",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.492053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f5a08a2f-7f23-4991-90be-d6715cc0bc9e",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/odev",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5a08a2f-7f23-4991-90be-d6715cc0bc9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.491921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "ce5f5011-ffa8-4a1f-9011-9ed936e6560d",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/dncp",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce5f5011-ffa8-4a1f-9011-9ed936e6560d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.491791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "718e1692-cc30-453c-a7e6-d815634a78e6",
    "name" : "Get Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/f75v",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "718e1692-cc30-453c-a7e6-d815634a78e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.491636Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/TimeOffRequest"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "TimeOffRequest"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "1457ae0d-9552-4067-a98e-de947555d7a8",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/395f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1457ae0d-9552-4067-a98e-de947555d7a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.491448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "feb8666e-7cbc-4f58-9c8e-9383098a8ae8",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/my1i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "feb8666e-7cbc-4f58-9c8e-9383098a8ae8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.491305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "ca431ece-7609-4137-abc8-df0d6e7239dd",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/o7d1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca431ece-7609-4137-abc8-df0d6e7239dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.491149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "df0ba97a-f2c6-4c27-b798-c1ecc39a8661",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/79zd",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df0ba97a-f2c6-4c27-b798-c1ecc39a8661",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.491002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "c9ebcd5a-62cc-4f07-abfa-85e147562303",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/41f9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9ebcd5a-62cc-4f07-abfa-85e147562303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.490848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "d01b8d3f-eb9c-4c13-9249-f22bbddf2722",
    "name" : "Delete Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests/t3b9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d01b8d3f-eb9c-4c13-9249-f22bbddf2722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.490671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "91ae0e2e-6a77-4665-87a3-778d0cfd8482",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91ae0e2e-6a77-4665-87a3-778d0cfd8482",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.49048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "665274a8-44e1-4ac3-bda6-a216e7dc1a8c",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "665274a8-44e1-4ac3-bda6-a216e7dc1a8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.490395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "28ae9acd-aaa1-4f58-a7f7-1989398a124f",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28ae9acd-aaa1-4f58-a7f7-1989398a124f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.490292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "1a680f27-1dd9-45cf-8540-969f7088a12b",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a680f27-1dd9-45cf-8540-969f7088a12b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.490217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "2c434815-ca77-4f9e-a0bb-576965c38bc9",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c434815-ca77-4f9e-a0bb-576965c38bc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.490142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "a022defc-946d-4f36-8c0a-4cb1d94acf8a",
    "name" : "Create Time Off Request",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"time-off-requests\",\n  \"service\" : \"bamboohr\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a022defc-946d-4f36-8c0a-4cb1d94acf8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.49003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "ccd6f820-8143-4432-a376-6d65493215df",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ccd6f820-8143-4432-a376-6d65493215df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.489923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "bbc7842c-09e5-4c5d-95ad-366cc01c5b01",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbc7842c-09e5-4c5d-95ad-366cc01c5b01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.489845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "86a1b494-2590-473a-94da-c43dd3999b7f",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86a1b494-2590-473a-94da-c43dd3999b7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.489754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "b44dc3b6-7dba-41eb-989d-d84fcd6c9b90",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b44dc3b6-7dba-41eb-989d-d84fcd6c9b90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.489687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "a7ff5362-fd84-45c0-b1e2-2cad12c01917",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7ff5362-fd84-45c0-b1e2-2cad12c01917",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.489615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "d69a6255-639c-40ed-8c07-58c5ed1ed23a",
    "name" : "List Time Off Requests",
    "request" : {
      "urlPath" : "/hris/time-off-requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  }, {\n    \"end_date\" : \"2022-04-01\",\n    \"amount\" : 3.5,\n    \"approval_date\" : \"2022-03-21\",\n    \"notes\" : {\n      \"manager\" : \"Enjoy!\",\n      \"employee\" : \"Relaxing on the beach for a few hours.\"\n    },\n    \"policy_id\" : \"12345\",\n    \"request_type\" : \"vacation\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"Enjoying some sun.\",\n    \"units\" : \"hours\",\n    \"created_by\" : \"12345\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"employee_id\" : \"12345\",\n    \"request_date\" : \"2022-03-21\",\n    \"updated_by\" : \"12345\",\n    \"id\" : \"12345\",\n    \"start_date\" : \"2022-04-01\",\n    \"status\" : \"approved\"\n  } ],\n  \"resource\" : \"time-off-requests\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"bamboohr\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d69a6255-639c-40ed-8c07-58c5ed1ed23a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.489518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "timeOffRequestsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/TimeOffRequest"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "time-off-requests",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "bamboohr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-graphql-type-name" : "TimeOffRequestList"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "1c025da8-f67f-4625-934b-6ca84821ac5c",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/nf3g",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c025da8-f67f-4625-934b-6ca84821ac5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.489277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "1850df94-e38b-4504-8134-8333716ce9f2",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/fd97",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1850df94-e38b-4504-8134-8333716ce9f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.489143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "ddedc979-ec06-4798-943c-37475d2262be",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/g941",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddedc979-ec06-4798-943c-37475d2262be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.488988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "66d5159b-f970-41b4-929b-eb7caaf94d10",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/z9s8",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66d5159b-f970-41b4-929b-eb7caaf94d10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.488857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "558242a9-f678-40fa-a243-7660f008c894",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/fc78",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "558242a9-f678-40fa-a243-7660f008c894",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.488725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "28f78bfd-f83d-4abe-bbbf-5d58d2068a99",
    "name" : "List Employee Schedules",
    "request" : {
      "urlPath" : "/hris/schedules/employees/a3o6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"schedules\" : [ {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    }, {\n      \"end_date\" : \"2022-04-21\",\n      \"work_pattern\" : {\n        \"odd_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        },\n        \"even_weeks\" : {\n          \"hours_thursday\" : 7.5,\n          \"hours_friday\" : 4,\n          \"hours_monday\" : 8,\n          \"hours_sunday\" : 0,\n          \"hours_saturday\" : 0,\n          \"hours_tuesday\" : 8,\n          \"hours_wednesday\" : 4\n        }\n      },\n      \"id\" : \"12345\",\n      \"start_date\" : \"2022-04-08\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"full_time\",\n        \"type\" : \"internship\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28f78bfd-f83d-4abe-bbbf-5d58d2068a99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.48856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeeSchedulesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeeSchedules"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeeSchedulesResponse",
            "x-graphql-type-name" : "EmployeeSchedulesList"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "7cd0fb91-5019-4f42-8a44-b7b4cc391909",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/0uiq",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cd0fb91-5019-4f42-8a44-b7b4cc391909",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.487205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "75b279de-4af4-44d3-99e8-b5145d36ca7b",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/5559",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75b279de-4af4-44d3-99e8-b5145d36ca7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.487064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "21e73e1f-4a51-4437-979d-4aa0a7e821ac",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/veg4",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21e73e1f-4a51-4437-979d-4aa0a7e821ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.486904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "63420f87-25d6-4349-a7cf-e16830fa2cfd",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/o65e",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63420f87-25d6-4349-a7cf-e16830fa2cfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.486769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "1fe5b874-9da3-493a-8958-7b4a189e438d",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/s220",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fe5b874-9da3-493a-8958-7b4a189e438d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.48662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "f70ffb4c-f37c-4c04-a015-08b30bd1e179",
    "name" : "Get Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/r1eh",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      }, {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ {\n        \"name\" : \"Health Insurance\",\n        \"employee_deduction\" : 142.94,\n        \"employer_contribution\" : 141.14\n      } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      }, {\n        \"amount\" : 1.97,\n        \"name\" : \"CA State Income Tax\",\n        \"employer\" : false\n      } ],\n      \"deductions\" : [ {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      }, {\n        \"amount\" : 10.97,\n        \"name\" : \"Company Car\"\n      } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f70ffb4c-f37c-4c04-a015-08b30bd1e179",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.486451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Payroll"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPayrollResponse",
            "x-graphql-type-name" : "Payroll"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "18271a1a-b787-4c20-ab44-5cf21c8c76ed",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/q63b/payrolls/0o07",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18271a1a-b787-4c20-ab44-5cf21c8c76ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.485532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "9b01fe36-16b6-48a0-834e-3ab929d13b38",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/f7bv/payrolls/4o7a",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b01fe36-16b6-48a0-834e-3ab929d13b38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.485329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "b2eb2b2a-0bdb-477b-a9b8-45f0664c305c",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/ce47/payrolls/i1d7",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2eb2b2a-0bdb-477b-a9b8-45f0664c305c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.485087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "0a2db5be-87bc-4044-b657-5fbf0d823323",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/nu00/payrolls/2n64",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a2db5be-87bc-4044-b657-5fbf0d823323",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.484892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "e3db50e4-224f-4c41-a97b-f6c5d4723d2e",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/fdb7/payrolls/y2z4",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3db50e4-224f-4c41-a97b-f6c5d4723d2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.484689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "145be28f-5883-478d-8fa1-c680b7466d9f",
    "name" : "Get Employee Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/765r/payrolls/jx1v",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"payroll\" : {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    },\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"hourly\",\n        \"type\" : \"other\"\n      },\n      \"nationalities\" : [ \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "145be28f-5883-478d-8fa1-c680b7466d9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.484444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeePayroll"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeePayrollResponse",
            "x-graphql-type-name" : "EmployeePayroll"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "a21726dc-bd16-4ee9-8d95-2e13238d5ee6",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/80r1",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a21726dc-bd16-4ee9-8d95-2e13238d5ee6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.483029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "1e00bf73-38ca-47c7-aa8b-ddd334616bf8",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/9eqn",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e00bf73-38ca-47c7-aa8b-ddd334616bf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.482856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "5ce27823-78de-485e-aeb9-de8f41d4b9e9",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/7ns2",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ce27823-78de-485e-aeb9-de8f41d4b9e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.482669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "8d9ecedc-995b-4521-92c6-7f39824344c1",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/q4s9",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d9ecedc-995b-4521-92c6-7f39824344c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.482487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "748256f7-5b38-4807-b915-4342d9bc9eef",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/6jin",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "748256f7-5b38-4807-b915-4342d9bc9eef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.482257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "9be9cbc3-9d8d-40f6-bb01-f8cf7deebfec",
    "name" : "List Employee Payrolls",
    "request" : {
      "urlPath" : "/hris/payrolls/employees/5i19",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"payrolls\" : [ {\n      \"end_date\" : \"2022-04-21\",\n      \"processed\" : false,\n      \"compensations\" : [ {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      }, {\n        \"benefits\" : [ { }, { } ],\n        \"net_pay\" : 2199.93,\n        \"employee_id\" : \"12345\",\n        \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n        \"gross_pay\" : 3000\n      } ],\n      \"company_id\" : \"23456\",\n      \"processed_date\" : \"2022-04-08\",\n      \"check_date\" : \"2022-04-08\",\n      \"id\" : \"12345\",\n      \"totals\" : {\n        \"net_pay\" : 19337.17,\n        \"employer_benefit_contributions\" : 0,\n        \"tax_debit\" : 8655.32,\n        \"company_debit\" : 27992.49,\n        \"check_amount\" : 27966.23,\n        \"gross_pay\" : 27966.23,\n        \"employer_taxes\" : 2038.93,\n        \"employee_benefit_deductions\" : 0,\n        \"employee_taxes\" : 6616.39\n      },\n      \"start_date\" : \"2022-04-08\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"full_time\",\n        \"type\" : \"temp\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : true\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9be9cbc3-9d8d-40f6-bb01-f8cf7deebfec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.482012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeePayrollsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/EmployeePayrolls"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeePayrollsResponse",
            "x-graphql-type-name" : "EmployeePayrollList"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "79c4524b-4440-49de-84db-449e5643b0e5",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79c4524b-4440-49de-84db-449e5643b0e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.480836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "b5855124-d681-4e0a-b6af-c727e71412e8",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5855124-d681-4e0a-b6af-c727e71412e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.480766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "dc99a1b9-0b94-4f1d-a94c-95575e53bb17",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc99a1b9-0b94-4f1d-a94c-95575e53bb17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.48067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "e37eb553-09f2-4ddc-824d-d1c1b3a883e7",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e37eb553-09f2-4ddc-824d-d1c1b3a883e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.4806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "327486c4-d0eb-4724-8c0e-58268e507c28",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "327486c4-d0eb-4724-8c0e-58268e507c28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.480525Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "52795d40-39ff-47ba-b489-2b335e0ab5bc",
    "name" : "List Payroll",
    "request" : {
      "urlPath" : "/hris/payrolls",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  }, {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { } ],\n      \"deductions\" : [ { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  }, {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  }, {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  }, {\n    \"end_date\" : \"2022-04-21\",\n    \"processed\" : false,\n    \"compensations\" : [ {\n      \"benefits\" : [ { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    }, {\n      \"benefits\" : [ { }, { }, { }, { }, { }, { } ],\n      \"net_pay\" : 2199.93,\n      \"employee_id\" : \"12345\",\n      \"taxes\" : [ { }, { }, { }, { }, { } ],\n      \"deductions\" : [ { }, { }, { }, { }, { }, { } ],\n      \"gross_pay\" : 3000\n    } ],\n    \"company_id\" : \"23456\",\n    \"processed_date\" : \"2022-04-08\",\n    \"check_date\" : \"2022-04-08\",\n    \"id\" : \"12345\",\n    \"totals\" : {\n      \"net_pay\" : 19337.17,\n      \"employer_benefit_contributions\" : 0,\n      \"tax_debit\" : 8655.32,\n      \"company_debit\" : 27992.49,\n      \"check_amount\" : 27966.23,\n      \"gross_pay\" : 27966.23,\n      \"employer_taxes\" : 2038.93,\n      \"employee_benefit_deductions\" : 0,\n      \"employee_taxes\" : 6616.39\n    },\n    \"start_date\" : \"2022-04-08\"\n  } ],\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52795d40-39ff-47ba-b489-2b335e0ab5bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.480411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "payrollsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Payroll"
                },
                "type" : "array"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetPayrollsResponse",
            "x-graphql-type-name" : "PayrollList"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "c3f27a81-2c24-4d3e-9ef4-41a6a6e186ed",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/vr89/jobs/52zl",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3f27a81-2c24-4d3e-9ef4-41a6a6e186ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.479161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "56b10657-def1-461e-9cb0-d0ee8b089233",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/q57c/jobs/0w61",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56b10657-def1-461e-9cb0-d0ee8b089233",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.478956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "6e1e8dd4-5169-461f-8ddb-0d69e5d34902",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/j3x5/jobs/b6uv",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e1e8dd4-5169-461f-8ddb-0d69e5d34902",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.478737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "22e799d2-1966-4d36-ba98-b5da96fe6197",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/37t8/jobs/m1p3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22e799d2-1966-4d36-ba98-b5da96fe6197",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.478538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "88717cdd-e91d-46a4-87be-4dd795ed5db8",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/lw7g/jobs/973v",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88717cdd-e91d-46a4-87be-4dd795ed5db8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.478344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "9e4d9132-1af1-4681-adc4-9fb787b627ce",
    "name" : "One Job",
    "request" : {
      "urlPath" : "/hris/jobs/employees/5817/jobs/lxw8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"end_date\" : \"2020-08-12\",\n    \"employee_id\" : \"r6a6\",\n    \"location\" : {\n      \"name\" : \"HQ US\"\n    },\n    \"employment_status\" : \"active\",\n    \"id\" : \"12345\",\n    \"department\" : \"Brussels Office\",\n    \"title\" : \"CEO\",\n    \"start_date\" : \"2020-08-12\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e4d9132-1af1-4681-adc4-9fb787b627ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.478127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisJob"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisJobResponse",
            "x-graphql-type-name" : "Job"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "4d5e66e9-bd9c-47dd-be5a-9e8d20a2d314",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/j2t7",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d5e66e9-bd9c-47dd-be5a-9e8d20a2d314",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.477819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "237be17e-083a-44d5-95ff-3768dbb7b1f4",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/fhqk",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "237be17e-083a-44d5-95ff-3768dbb7b1f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.477662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "3853056f-27a6-48a2-b8da-c896bc0464a5",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/418g",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3853056f-27a6-48a2-b8da-c896bc0464a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.477504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "83ef846c-b266-44fd-a379-d678770ec509",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/48rc",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83ef846c-b266-44fd-a379-d678770ec509",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.477373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "5f37e666-691b-4f47-a77c-9f1d5cf008b1",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/5q1w",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f37e666-691b-4f47-a77c-9f1d5cf008b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.477242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "7944540c-73c9-4ba8-8d07-22bea84af812",
    "name" : "List Jobs",
    "request" : {
      "urlPath" : "/hris/jobs/employees/ru3a",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"1fk9\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"employee_id\" : \"u555\",\n      \"location\" : {\n        \"name\" : \"HQ US\"\n      },\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"department\" : \"Brussels Office\",\n      \"title\" : \"CEO\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"employee\" : {\n      \"addresses\" : [ {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      }, {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      } ],\n      \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n      \"employment_role\" : {\n        \"sub_type\" : \"part_time\",\n        \"type\" : \"other\"\n      },\n      \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n      \"source\" : \"lever\",\n      \"division\" : \"Europe\",\n      \"id\" : \"12345\",\n      \"photo_url\" : \"https://unavatar.io/elon-musk\",\n      \"compensations\" : [ {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      }, {\n        \"effective_date\" : \"2021-06-11\",\n        \"flsa_status\" : \"nonexempt\",\n        \"id\" : \"3404301363494309004\",\n        \"job_id\" : \"3490439050957906679\",\n        \"payment_unit\" : \"hour\",\n        \"rate\" : 50\n      } ],\n      \"employment_start_date\" : \"2021-10-26\",\n      \"custom_fields\" : [ {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : 10\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : { }\n      }, {\n        \"name\" : \"employee_level\",\n        \"description\" : \"Employee Level\",\n        \"id\" : \"2389328923893298\",\n        \"value\" : \"Uses Salesforce and Marketo\"\n      } ],\n      \"initials\" : \"EM\",\n      \"division_id\" : \"12345\",\n      \"display_name\" : \"Technoking\",\n      \"created_by\" : \"12345\",\n      \"tax_id\" : \"234-32-0000\",\n      \"tags\" : [ \"New\" ],\n      \"company_name\" : \"SpaceX\",\n      \"updated_by\" : \"12345\",\n      \"employee_number\" : \"123456-AB\",\n      \"pronouns\" : \"she,her\",\n      \"salutation\" : \"Mr\",\n      \"preferred_name\" : \"Elon Musk\",\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"social_links\" : [ {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      }, {\n        \"id\" : \"12345\",\n        \"type\" : \"twitter\",\n        \"url\" : \"https://www.twitter.com/apideck-io\"\n      } ],\n      \"timezone\" : \"Europe/London\",\n      \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"description\" : \"A description\",\n      \"title\" : \"CEO\",\n      \"works_remote\" : true,\n      \"employment_end_date\" : \"2028-10-26\",\n      \"emails\" : [ {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      }, {\n        \"id\" : \"123\",\n        \"type\" : \"primary\",\n        \"email\" : \"elon@musk.com\"\n      } ],\n      \"dietary_preference\" : \"Veggie\",\n      \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n      \"food_allergies\" : [ \"No allergies\" ],\n      \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n      \"country_of_birth\" : \"US\",\n      \"social_security_number\" : \"123456789\",\n      \"employment_status\" : \"active\",\n      \"department\" : \"R&D\",\n      \"first_name\" : \"Elon\",\n      \"preferred_language\" : \"EN\",\n      \"deceased_on\" : \"2000-08-12\",\n      \"company_id\" : \"23456\",\n      \"languages\" : [ \"EN\", \"EN\" ],\n      \"manager\" : {\n        \"name\" : \"Elon Musk\",\n        \"last_name\" : \"Musk\",\n        \"employment_status\" : \"active\",\n        \"id\" : \"12345\",\n        \"first_name\" : \"Elon\",\n        \"email\" : \"elon@musk.com\"\n      },\n      \"department_id\" : \"12345\",\n      \"jobs\" : [ {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      }, {\n        \"end_date\" : \"2020-08-12\",\n        \"role\" : \"Sales\",\n        \"compensation_rate\" : 72000,\n        \"is_primary\" : true,\n        \"employee_id\" : \"12345\",\n        \"currency\" : \"USD\",\n        \"location\" : {\n          \"country\" : \"US\",\n          \"contact_name\" : \"Elon Musk\",\n          \"website\" : \"https://elonmusk.com\",\n          \"line4\" : \"delivery instructions\",\n          \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n          \"city\" : \"San Francisco\",\n          \"latitude\" : \"40.759211\",\n          \"county\" : \"Santa Clara\",\n          \"type\" : \"primary\",\n          \"row_version\" : \"1-12345\",\n          \"name\" : \"HQ US\",\n          \"street_number\" : \"25\",\n          \"phone_number\" : \"111-111-1111\",\n          \"id\" : \"123\",\n          \"salutation\" : \"Mr\",\n          \"state\" : \"CA\",\n          \"fax\" : \"122-111-1111\",\n          \"line3\" : \"Suite #\",\n          \"postal_code\" : \"94104\",\n          \"line2\" : \"apt #\",\n          \"email\" : \"elon@musk.com\",\n          \"line1\" : \"Main street\",\n          \"longitude\" : \"-73.984638\"\n        },\n        \"id\" : \"12345\",\n        \"payment_unit\" : \"year\",\n        \"title\" : \"CEO\",\n        \"hired_at\" : \"2020-08-12\",\n        \"start_date\" : \"2020-08-12\"\n      } ],\n      \"last_name\" : \"Musk\",\n      \"team\" : {\n        \"name\" : \"Full Stack Engineers\",\n        \"id\" : \"1234\"\n      },\n      \"middle_name\" : \"D.\",\n      \"phone_numbers\" : [ {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      }, {\n        \"country_code\" : \"1\",\n        \"number\" : \"111-111-1111\",\n        \"extension\" : \"105\",\n        \"area_code\" : \"323\",\n        \"id\" : \"12345\",\n        \"type\" : \"primary\"\n      } ],\n      \"marital_status\" : \"married\",\n      \"tax_code\" : \"1111\",\n      \"deleted\" : true,\n      \"partner\" : {\n        \"birthday\" : \"2000-08-12\",\n        \"gender\" : \"male\",\n        \"initials\" : \"EM\",\n        \"last_name\" : \"Musk\",\n        \"id\" : \"12345\",\n        \"middle_name\" : \"D.\",\n        \"first_name\" : \"Elon\",\n        \"deceased_on\" : \"2000-08-12\"\n      },\n      \"row_version\" : \"1-12345\",\n      \"source_id\" : \"12345\",\n      \"leaving_reason\" : \"resigned\"\n    }\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7944540c-73c9-4ba8-8d07-22bea84af812",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.477075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "jobsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisJobs"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisJobsResponse",
            "x-graphql-type-name" : "JobsList"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "af11fb42-1923-4636-9084-f3e0cdcc8e0d",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/ak3x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af11fb42-1923-4636-9084-f3e0cdcc8e0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.475976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "09c82fbd-b43d-4853-9d6c-3158adc4a560",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/f58m",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09c82fbd-b43d-4853-9d6c-3158adc4a560",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.475839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "652cd5ab-917d-48ff-8202-4f1aa3eb4daa",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/5k0d",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "652cd5ab-917d-48ff-8202-4f1aa3eb4daa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.475694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "61767970-675a-4b65-ad82-b55a17d9ce67",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/zfcq",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61767970-675a-4b65-ad82-b55a17d9ce67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.475567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "53193cf4-e7d3-4180-a549-6de9cc20e70c",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/q04l",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53193cf4-e7d3-4180-a549-6de9cc20e70c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.475443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "ce4e1284-9aa2-4915-a00c-ba0e656e2bda",
    "name" : "Update Employee",
    "request" : {
      "urlPath" : "/hris/employees/8r90",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce4e1284-9aa2-4915-a00c-ba0e656e2bda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.475294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateEmployeeResponse"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "d2e684ee-0fdb-40a9-acce-79d4741b2f3f",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/6uu8",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2e684ee-0fdb-40a9-acce-79d4741b2f3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.47515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "28bde5d1-6a41-4642-a1c3-eb1ae989418b",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/4p64",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28bde5d1-6a41-4642-a1c3-eb1ae989418b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.475019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "15953026-8592-4a84-814b-8a67d3b765ac",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/89h2",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15953026-8592-4a84-814b-8a67d3b765ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.474873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "00fef83b-8c0d-4b8b-ba10-2a7c1f5eee7e",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/5op6",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00fef83b-8c0d-4b8b-ba10-2a7c1f5eee7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.47474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "c0cdb00f-cf8c-4049-96be-4826192c4747",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/5ui0",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0cdb00f-cf8c-4049-96be-4826192c4747",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.474607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "327cf413-4347-46db-99fb-14fc3cca96cd",
    "name" : "Get Employee",
    "request" : {
      "urlPath" : "/hris/employees/k35j",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"part_time\",\n      \"type\" : \"contractor\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "327cf413-4347-46db-99fb-14fc3cca96cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.474443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Employee"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeeResponse",
            "x-graphql-type-name" : "Employee"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "4ea945b7-da32-4cec-8e77-1ad9ae938beb",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/2i63",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ea945b7-da32-4cec-8e77-1ad9ae938beb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.47371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "6b6c9f80-b874-4781-8e3a-7b054a0ff07d",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/e28s",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b6c9f80-b874-4781-8e3a-7b054a0ff07d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.473581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "1969c56e-91c0-4a4f-a190-9cbb5d975d73",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/8ho6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1969c56e-91c0-4a4f-a190-9cbb5d975d73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.473424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "6b19743b-22c8-45bc-b2b4-e61d8553b47a",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/1j28",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b19743b-22c8-45bc-b2b4-e61d8553b47a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.473292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "dd79e9f4-9d3b-4614-b7c7-87f81aedbdfc",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/71ed",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd79e9f4-9d3b-4614-b7c7-87f81aedbdfc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.473155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "e336b076-ab37-4d47-885c-4a383a261e1e",
    "name" : "Delete Employee",
    "request" : {
      "urlPath" : "/hris/employees/0jzz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e336b076-ab37-4d47-885c-4a383a261e1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.47299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteEmployeeResponse"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "3756b3fe-bca4-4c01-baeb-3e81605fb5e5",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3756b3fe-bca4-4c01-baeb-3e81605fb5e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "ac398f1b-2b1a-4589-8fe5-6ba17f7fa372",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac398f1b-2b1a-4589-8fe5-6ba17f7fa372",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.47274Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "bc0c17f6-6163-4e98-80bc-11ceaafa912a",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc0c17f6-6163-4e98-80bc-11ceaafa912a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "012fa4f6-8144-44cb-9738-eb5dfb83c931",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "012fa4f6-8144-44cb-9738-eb5dfb83c931",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "9896a9fb-7b71-4234-999e-08584516d8f5",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9896a9fb-7b71-4234-999e-08584516d8f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "9f299e14-8afd-43e9-a523-87fdc7e9a2bb",
    "name" : "Create Employee",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Employees\",\n  \"service\" : \"sage-hr\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f299e14-8afd-43e9-a523-87fdc7e9a2bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateEmployeeResponse"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "79b744f6-b64d-4199-83f6-c5ba06708719",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79b744f6-b64d-4199-83f6-c5ba06708719",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.47234Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "b50638e0-2102-4a9b-8688-5cef4b740c20",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b50638e0-2102-4a9b-8688-5cef4b740c20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "a28a4807-66cb-4d0f-8ce7-5bfdb6ab84f0",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a28a4807-66cb-4d0f-8ce7-5bfdb6ab84f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "54dca77c-b99d-4654-863d-57820cbd0e50",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54dca77c-b99d-4654-863d-57820cbd0e50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "ed897c71-72bf-4b0e-8f43-ec049189c944",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed897c71-72bf-4b0e-8f43-ec049189c944",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.472031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "cc707060-ded4-4915-8203-cf15a9fd7aa2",
    "name" : "List Employees",
    "request" : {
      "urlPath" : "/hris/employees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"hourly\",\n      \"type\" : \"other\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : 10\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : \"Uses Salesforce and Marketo\"\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  }, {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"direct_reports\" : [ \"a0d636c6-43b3-4bde-8c70-85b707d992f4\", \"a98lfd96-43b3-4bde-8c70-85b707d992e6\" ],\n    \"employment_role\" : {\n      \"sub_type\" : \"full_time\",\n      \"type\" : \"employee\"\n    },\n    \"nationalities\" : [ \"US\", \"US\", \"US\", \"US\", \"US\", \"US\" ],\n    \"source\" : \"lever\",\n    \"division\" : \"Europe\",\n    \"id\" : \"12345\",\n    \"photo_url\" : \"https://unavatar.io/elon-musk\",\n    \"compensations\" : [ {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    }, {\n      \"effective_date\" : \"2021-06-11\",\n      \"flsa_status\" : \"nonexempt\",\n      \"id\" : \"3404301363494309004\",\n      \"job_id\" : \"3490439050957906679\",\n      \"payment_unit\" : \"hour\",\n      \"rate\" : 50\n    } ],\n    \"employment_start_date\" : \"2021-10-26\",\n    \"custom_fields\" : [ {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : true\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    }, {\n      \"name\" : \"employee_level\",\n      \"description\" : \"Employee Level\",\n      \"id\" : \"2389328923893298\",\n      \"value\" : { }\n    } ],\n    \"initials\" : \"EM\",\n    \"division_id\" : \"12345\",\n    \"display_name\" : \"Technoking\",\n    \"created_by\" : \"12345\",\n    \"tax_id\" : \"234-32-0000\",\n    \"tags\" : [ \"New\" ],\n    \"company_name\" : \"SpaceX\",\n    \"updated_by\" : \"12345\",\n    \"employee_number\" : \"123456-AB\",\n    \"pronouns\" : \"she,her\",\n    \"salutation\" : \"Mr\",\n    \"preferred_name\" : \"Elon Musk\",\n    \"birthday\" : \"2000-08-12\",\n    \"gender\" : \"male\",\n    \"social_links\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"twitter\",\n      \"url\" : \"https://www.twitter.com/apideck-io\"\n    } ],\n    \"timezone\" : \"Europe/London\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"A description\",\n    \"title\" : \"CEO\",\n    \"works_remote\" : true,\n    \"employment_end_date\" : \"2028-10-26\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"dietary_preference\" : \"Veggie\",\n    \"record_url\" : \"https://app.intercom.io/contacts/12345\",\n    \"food_allergies\" : [ \"No allergies\" ],\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"country_of_birth\" : \"US\",\n    \"social_security_number\" : \"123456789\",\n    \"employment_status\" : \"active\",\n    \"department\" : \"R&D\",\n    \"first_name\" : \"Elon\",\n    \"preferred_language\" : \"EN\",\n    \"deceased_on\" : \"2000-08-12\",\n    \"company_id\" : \"23456\",\n    \"languages\" : [ \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\" ],\n    \"manager\" : {\n      \"name\" : \"Elon Musk\",\n      \"last_name\" : \"Musk\",\n      \"employment_status\" : \"active\",\n      \"id\" : \"12345\",\n      \"first_name\" : \"Elon\",\n      \"email\" : \"elon@musk.com\"\n    },\n    \"department_id\" : \"12345\",\n    \"jobs\" : [ {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    }, {\n      \"end_date\" : \"2020-08-12\",\n      \"role\" : \"Sales\",\n      \"compensation_rate\" : 72000,\n      \"is_primary\" : true,\n      \"employee_id\" : \"12345\",\n      \"currency\" : \"USD\",\n      \"location\" : {\n        \"country\" : \"US\",\n        \"contact_name\" : \"Elon Musk\",\n        \"website\" : \"https://elonmusk.com\",\n        \"line4\" : \"delivery instructions\",\n        \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n        \"city\" : \"San Francisco\",\n        \"latitude\" : \"40.759211\",\n        \"county\" : \"Santa Clara\",\n        \"type\" : \"primary\",\n        \"row_version\" : \"1-12345\",\n        \"name\" : \"HQ US\",\n        \"street_number\" : \"25\",\n        \"phone_number\" : \"111-111-1111\",\n        \"id\" : \"123\",\n        \"salutation\" : \"Mr\",\n        \"state\" : \"CA\",\n        \"fax\" : \"122-111-1111\",\n        \"line3\" : \"Suite #\",\n        \"postal_code\" : \"94104\",\n        \"line2\" : \"apt #\",\n        \"email\" : \"elon@musk.com\",\n        \"line1\" : \"Main street\",\n        \"longitude\" : \"-73.984638\"\n      },\n      \"id\" : \"12345\",\n      \"payment_unit\" : \"year\",\n      \"title\" : \"CEO\",\n      \"hired_at\" : \"2020-08-12\",\n      \"start_date\" : \"2020-08-12\"\n    } ],\n    \"last_name\" : \"Musk\",\n    \"team\" : {\n      \"name\" : \"Full Stack Engineers\",\n      \"id\" : \"1234\"\n    },\n    \"middle_name\" : \"D.\",\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"marital_status\" : \"married\",\n    \"tax_code\" : \"1111\",\n    \"deleted\" : true,\n    \"partner\" : {\n      \"birthday\" : \"2000-08-12\",\n      \"gender\" : \"male\",\n      \"initials\" : \"EM\",\n      \"last_name\" : \"Musk\",\n      \"id\" : \"12345\",\n      \"middle_name\" : \"D.\",\n      \"first_name\" : \"Elon\",\n      \"deceased_on\" : \"2000-08-12\"\n    },\n    \"row_version\" : \"1-12345\",\n    \"source_id\" : \"12345\",\n    \"leaving_reason\" : \"resigned\"\n  } ],\n  \"resource\" : \"Employees\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"sage-hr\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc707060-ded4-4915-8203-cf15a9fd7aa2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.471923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "employeesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Employee"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Employees",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "sage-hr",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetEmployeesResponse",
            "x-graphql-type-name" : "EmployeeList"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "62b2e24d-9e9c-4baa-97d1-0eeddb5a6bc8",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/v94z",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62b2e24d-9e9c-4baa-97d1-0eeddb5a6bc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.47037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "1c5c78c6-e7e3-4771-8c98-212f2e7350c2",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/32le",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c5c78c6-e7e3-4771-8c98-212f2e7350c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.470244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "9ebccf08-ef83-4654-ae2f-6e956d713c51",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/g73g",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ebccf08-ef83-4654-ae2f-6e956d713c51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.47009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "3527e2db-fb25-454a-a8b3-d08e8bc5ad53",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/ogrn",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3527e2db-fb25-454a-a8b3-d08e8bc5ad53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.469954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "9f176820-4e2c-480f-946f-915bcc9c7217",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/26i8",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f176820-4e2c-480f-946f-915bcc9c7217",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.469817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "24eb256b-4c07-46ad-ba41-5e42944c059f",
    "name" : "Update Department",
    "request" : {
      "urlPath" : "/hris/departments/60x0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24eb256b-4c07-46ad-ba41-5e42944c059f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.469663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateDepartmentResponse"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "54574db0-f7d6-4603-b2d7-975b3ba16763",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/ih39",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54574db0-f7d6-4603-b2d7-975b3ba16763",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.469518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "f49ab192-788a-4fff-9132-89010b21cc75",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/owg2",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f49ab192-788a-4fff-9132-89010b21cc75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.469382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "f638f2a8-e4a7-497a-823b-de8c94524e5e",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/qf36",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f638f2a8-e4a7-497a-823b-de8c94524e5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.469218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "03d6b160-8e32-4b8c-b23c-bd8f948326f4",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/26hm",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03d6b160-8e32-4b8c-b23c-bd8f948326f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.46908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "004af449-c669-45b8-9602-0767adf0cea9",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/o218",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "004af449-c669-45b8-9602-0767adf0cea9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.46894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "d0832b5a-b875-4937-939d-3711b90d9aec",
    "name" : "Get Department",
    "request" : {
      "urlPath" : "/hris/departments/thyg",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0832b5a-b875-4937-939d-3711b90d9aec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.468775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Department"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetDepartmentResponse",
            "x-graphql-type-name" : "Department"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "1951ddf7-2fe9-4705-913d-a4cffdcfc6cd",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/e24b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1951ddf7-2fe9-4705-913d-a4cffdcfc6cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.468595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "ea91ba0f-6ffa-4d08-8e1b-09014c1c1bd5",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/ih4q",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea91ba0f-6ffa-4d08-8e1b-09014c1c1bd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.468452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "055d3fc2-a5b3-4e93-b4a1-332ecea8038d",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/9g6p",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "055d3fc2-a5b3-4e93-b4a1-332ecea8038d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.468294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "39c2b817-f2cd-4fee-9ee2-8437a14bc9ff",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/49mv",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39c2b817-f2cd-4fee-9ee2-8437a14bc9ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.46816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "ea9d9957-8af7-4f6a-88b9-b25cbc657d2b",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/d4j4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea9d9957-8af7-4f6a-88b9-b25cbc657d2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.468023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "163704d7-8bbd-4707-bae2-b458b3bdebe5",
    "name" : "Delete Department",
    "request" : {
      "urlPath" : "/hris/departments/f64q",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "163704d7-8bbd-4707-bae2-b458b3bdebe5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteDepartmentResponse"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "4561eac0-212f-4d66-ad73-24e370d5323a",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4561eac0-212f-4d66-ad73-24e370d5323a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "32527ca5-fe07-45d7-b287-9b92fa976a8d",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32527ca5-fe07-45d7-b287-9b92fa976a8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "ba633a79-5d4b-4cae-9997-d9b8e0468beb",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba633a79-5d4b-4cae-9997-d9b8e0468beb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "60c1696f-737d-4e45-90ae-ef023ca9c746",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60c1696f-737d-4e45-90ae-ef023ca9c746",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.46745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "3521e665-1bcc-49a4-910e-9b06708e93b3",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3521e665-1bcc-49a4-910e-9b06708e93b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "098b02b6-2d4d-4734-9075-eb1831a1f646",
    "name" : "Create Department",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Departments\",\n  \"service\" : \"workday\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "098b02b6-2d4d-4734-9075-eb1831a1f646",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateDepartmentResponse"
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "fa0f8ef0-2cdc-4c82-9b60-1eefb767dfce",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa0f8ef0-2cdc-4c82-9b60-1eefb767dfce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "56b1da37-69c3-4dfb-aecb-bec11a37beba",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56b1da37-69c3-4dfb-aecb-bec11a37beba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "c7f19acc-2573-450c-b1cc-d84589c06e61",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7f19acc-2573-450c-b1cc-d84589c06e61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.467057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "6d8a48a3-fc0f-4dc3-9700-2b1527624dbd",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d8a48a3-fc0f-4dc3-9700-2b1527624dbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.466991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "982703fd-7146-429b-be01-cba107721350",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "982703fd-7146-429b-be01-cba107721350",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.466923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "410a0744-efa1-4321-895c-8c333c9135c3",
    "name" : "List Departments",
    "request" : {
      "urlPath" : "/hris/departments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"code\" : \"2\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"parent_id\" : \"22345\",\n    \"name\" : \"R&D\",\n    \"updated_by\" : \"12345\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"description\" : \"R&D\",\n    \"id\" : \"12345\",\n    \"created_by\" : \"12345\"\n  } ],\n  \"resource\" : \"Departments\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"workday\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "410a0744-efa1-4321-895c-8c333c9135c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.466832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "departmentsAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Department"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Departments",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "workday",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetDepartmentsResponse",
            "x-graphql-type-name" : "DepartmentList"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "e7f161cd-dd92-4244-ad6c-402a698b65cb",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/0464",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7f161cd-dd92-4244-ad6c-402a698b65cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.466688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "e205633d-8a31-4b38-ae60-04e158805a0f",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/91bv",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e205633d-8a31-4b38-ae60-04e158805a0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.466558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "5818e4aa-4ded-433d-856d-bfa5285d13ae",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/hcjz",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5818e4aa-4ded-433d-856d-bfa5285d13ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.466403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "a9baaf04-d3ed-4706-93dd-b6594a6f70da",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/697p",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9baaf04-d3ed-4706-93dd-b6594a6f70da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.466271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "b9bd37c5-3688-400c-9f05-e15b031e731d",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/h1fi",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9bd37c5-3688-400c-9f05-e15b031e731d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.466123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "58fc6941-10ce-4446-9e41-74992de7e21c",
    "name" : "Update Company",
    "request" : {
      "urlPath" : "/hris/companies/1x3i",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58fc6941-10ce-4446-9e41-74992de7e21c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.465957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateHrisCompanyResponse"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "e9d1d517-3e77-4548-9828-a2809942c71a",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/r91m",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9d1d517-3e77-4548-9828-a2809942c71a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.465795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "ea716953-b1ea-4ec8-92b8-900c33697410",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/cif9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea716953-b1ea-4ec8-92b8-900c33697410",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.465645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "94eb5bb6-9be1-4e8a-aa06-b406b676615f",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/556o",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94eb5bb6-9be1-4e8a-aa06-b406b676615f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.465452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "cd4df087-fd74-46c1-b44b-0b8db9b0665a",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/esdk",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd4df087-fd74-46c1-b44b-0b8db9b0665a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.465279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "aa57b03f-7055-4ff3-8e7b-de8ba2607483",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/9t8p",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa57b03f-7055-4ff3-8e7b-de8ba2607483",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.465111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "da1ebd6a-df47-4c01-841e-9acc603622b6",
    "name" : "Get Company",
    "request" : {
      "urlPath" : "/hris/companies/q04n",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    }, {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da1ebd6a-df47-4c01-841e-9acc603622b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.464905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/HrisCompany"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisCompanyResponse",
            "x-graphql-type-name" : "HrisCompany"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "23676f34-148c-43d5-ba80-368166ff4d1d",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/5mso",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23676f34-148c-43d5-ba80-368166ff4d1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.464283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "18fc1c88-97cd-40b5-9786-59afa521e1b1",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/0m42",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18fc1c88-97cd-40b5-9786-59afa521e1b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.464143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "95e02eb9-641f-4063-8dba-2d8c35865456",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/sses",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95e02eb9-641f-4063-8dba-2d8c35865456",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.46397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "cd464208-4857-49f3-81f9-17560f734cf1",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/h4n4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd464208-4857-49f3-81f9-17560f734cf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.463835Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "2374e5ca-3af0-4585-a8c8-27f75da3a6ed",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/cm56",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2374e5ca-3af0-4585-a8c8-27f75da3a6ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.463689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "89bb50fd-843c-4fab-a677-8113aeb0d028",
    "name" : "Delete Company",
    "request" : {
      "urlPath" : "/hris/companies/mp10",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89bb50fd-843c-4fab-a677-8113aeb0d028",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.463518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteHrisCompanyResponse"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "637589d7-3f36-4287-b728-81267d1b3abc",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "637589d7-3f36-4287-b728-81267d1b3abc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.46329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "2da1b5ec-3a9b-4025-97df-a9598da74f91",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2da1b5ec-3a9b-4025-97df-a9598da74f91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.463224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "f786a1c8-d223-436e-9d73-d5498b06273c",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f786a1c8-d223-436e-9d73-d5498b06273c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.463136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "ba2ac0c7-fd84-4bd0-bfdf-e866210a08d5",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba2ac0c7-fd84-4bd0-bfdf-e866210a08d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.463072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "d20c4d37-2ad5-4309-9ceb-949ad1a175d9",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d20c4d37-2ad5-4309-9ceb-949ad1a175d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.463001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "fabca53d-3149-4d72-9696-bd101bc88471",
    "name" : "Create Company",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Companies\",\n  \"service\" : \"undefined\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fabca53d-3149-4d72-9696-bd101bc88471",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.462896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateHrisCompanyResponse"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "3e0e597b-5d80-4ffb-83df-c10e2d69a7ef",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e0e597b-5d80-4ffb-83df-c10e2d69a7ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.46281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "70535c2c-d7ee-42cb-8b74-d35e3e22ac20",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70535c2c-d7ee-42cb-8b74-d35e3e22ac20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.462729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "10164ef0-d5cd-4a87-9a84-e1bb734cd395",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10164ef0-d5cd-4a87-9a84-e1bb734cd395",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.462612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "8742d1f5-6542-4ed9-bbfc-9c1e0e24a7af",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8742d1f5-6542-4ed9-bbfc-9c1e0e24a7af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.462531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "168d581a-ca11-45c3-9a86-0dbb96ef33a7",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "168d581a-ca11-45c3-9a86-0dbb96ef33a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.462448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "e3233ada-7fb1-4829-bf66-ba8d2bbc54ca",
    "name" : "List Companies",
    "request" : {
      "urlPath" : "/hris/companies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"addresses\" : [ {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    }, {\n      \"country\" : \"US\",\n      \"contact_name\" : \"Elon Musk\",\n      \"website\" : \"https://elonmusk.com\",\n      \"line4\" : \"delivery instructions\",\n      \"string\" : \"25 Spring Street, Blackburn, VIC 3130\",\n      \"city\" : \"San Francisco\",\n      \"latitude\" : \"40.759211\",\n      \"county\" : \"Santa Clara\",\n      \"type\" : \"primary\",\n      \"row_version\" : \"1-12345\",\n      \"name\" : \"HQ US\",\n      \"street_number\" : \"25\",\n      \"phone_number\" : \"111-111-1111\",\n      \"id\" : \"123\",\n      \"salutation\" : \"Mr\",\n      \"state\" : \"CA\",\n      \"fax\" : \"122-111-1111\",\n      \"line3\" : \"Suite #\",\n      \"postal_code\" : \"94104\",\n      \"line2\" : \"apt #\",\n      \"email\" : \"elon@musk.com\",\n      \"line1\" : \"Main street\",\n      \"longitude\" : \"-73.984638\"\n    } ],\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"display_name\" : \"SpaceX\",\n    \"created_by\" : \"12345\",\n    \"emails\" : [ {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    }, {\n      \"id\" : \"123\",\n      \"type\" : \"primary\",\n      \"email\" : \"elon@musk.com\"\n    } ],\n    \"phone_numbers\" : [ {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    }, {\n      \"country_code\" : \"1\",\n      \"number\" : \"111-111-1111\",\n      \"extension\" : \"105\",\n      \"area_code\" : \"323\",\n      \"id\" : \"12345\",\n      \"type\" : \"primary\"\n    } ],\n    \"company_number\" : \"123456-AB\",\n    \"deleted\" : false,\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"updated_by\" : \"12345\",\n    \"subdomain\" : \"company\",\n    \"websites\" : [ {\n      \"id\" : \"12345\",\n      \"type\" : \"primary\",\n      \"url\" : \"http://example.com\"\n    } ],\n    \"id\" : \"12345\",\n    \"legal_name\" : \"SpaceX\",\n    \"debtor_id\" : \"12345\",\n    \"status\" : \"active\"\n  } ],\n  \"resource\" : \"Companies\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"undefined\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3233ada-7fb1-4829-bf66-ba8d2bbc54ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.462315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "companiesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/HrisCompany"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Companies",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "undefined",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetHrisCompaniesResponse",
            "x-graphql-type-name" : "HrisCompanyList"
          }
        }
      }
    },
    "insertionIndex" : 161
  } ]
}