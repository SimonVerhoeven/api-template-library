{
  "mappings" : [ {
    "id" : "5abe07e8-c51c-3037-b127-d83f3113859a",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/ylducjzqgkflqi9dvob8z7wgt7u6cax0jc473zyb51a2n4g5z6hrbrnf51hhbbl00d2:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"f1aviab6t1qrbof6gwlktvrcna1scgct39qk4nl7xfgskk3k8d3v4sdwrjl4ba1x13sdx816zg7d59eelptfjyv7kcab\", \"9p9yidtx666bihoysf967nucanbldg7qncm63rsiqmw6ib\", \"zyqv709wusm4zfa0406p6zyd4kbel059p34cgfdh58d7991i0ksbfyiytyrt005ibmok9vq7xwnqhc3byc7qykmmptkpewuzu0dzbome6sj9nuvtbw4eoayl5uh0shvkdcs9273f9re8nuz656h3daugchmkap2ekkse9bnph2nik4\", \"2949oe7ty2jfutjlqldjx54y5vezpptjtco\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5abe07e8-c51c-3037-b127-d83f3113859a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "97f713cd-6392-3f19-a2f0-f74d90caa0e6",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/qma3g6g1asmx:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"wwzpbrk3zwwjhg464ie7m9aotxrgl69e85utxzume9gzomeptdcomj2jz11bwjwi60kgk9ly49cc1f3a\",\n      \"description\" : \"Commodi qui veritatis error reiciendis. Tempore laudantium qui laborum maiores optio. Ut facere quaerat illum. Dolores in at.\",\n      \"location\" : \"7br8pckbifs3hbd1s99nsyptkqlx5yu\",\n      \"title\" : \"Minus placeat nobis.\"\n    },\n    \"role\" : \"njx8qo6e\",\n    \"members\" : [ \"nwn0ri51vyjp3pzzvkiwjihgdbg8p4nsw0nnm5n955smjcjglnkb4uodp74jvfllknh2l0w9w3k4pkbade2gaxrjfkh20m9sgclezo7\", \"um6i\", \"so97okqkuybau1c8sgeytzu05pp5er50tnptd2jih5n4vo0ls4ftihb81cx39bf3d58c2l5102b4f6ycsblui3v3jcmdtkevwr60h3wtqqnhwn3leag5le76b4xz1e\", \"fgbylcju0dbail8dv3rozrlrezhbfe4dkb1l0ococ4d7loa9r27h20bm5psob1gh3by\", \"islhp9qgtp8p8qotr8nliwxb1qlk2tpfythnobfjdfinfjjwz3n5l121gpewbb7d0iivvxqg8xegeem2f7hlaxkergx5f4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8ceu8o2jzbwssee1t5tq06tyulq8dfd5byr6u3th2bgmo837tbg5qfn8smbzj97oxm11swbjoqe91asnlypm362nrs7fg8g5lwjs01sx25x5och7uh54etrs8gfuahre31iyc\",\n      \"description\" : \"Aperiam odit quisquam eveniet illum. Ratione soluta provident. Ut soluta fugit. Hic ab hic tempora qui cumque laudantium dicta. Quo laborum quia est minus temporibus.\",\n      \"location\" : \"sh9yznaugqx64ux3wbwijs2meuhbkh65suqqr06djtl0hk7h0131jof1h40z1dyps95pzol6qake7a291ekhda9lymtdhbgrc5v40k7g2hwcyhwgo5l759snuvwskvkxf2wp0rd5zmbjz0zikcay7t52wsdj6menhns65uaqgpuq0f\",\n      \"title\" : \"Molestias quae nihil enim iste commodi cupiditate voluptatum.\"\n    },\n    \"role\" : \"ulhcc7by6\",\n    \"members\" : [ \"t9tjckmevic2che27otcr65mor94i44us8k3lnoobbx6fvleh89sb0tgxha5y63bq1xz8daynk54ye5pt8g2eoeth6rxcv5ogujgxjkigicw7qfedjaq5xugr1gxebji06n5b9vrgv2x0e5dvq5dho8jzm7kuhv7dyp7s7dpqh6nvf\", \"lii02seo\", \"mv46mbpb1qstnsmpfg3fgaw4qw19tsrg0zi6ecfe57n294j0ev90mvdt0w5duy3fb4kofpaifynahdm8daclcdsh6rrrfeq22lalyk23i6luopjn3farpzicsy1exkp9fi0xm3rdwwkt6xpnkqmyeq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"41zrqtf66d14y924yvv2tpodyvt0jlvx03kfn8w8cclr9sut3pw7jxhgff38lv2jf1mtqrjk2amdai1ph\",\n      \"description\" : \"Ea aperiam sint iusto. Minus aperiam minima iste velit explicabo quo ipsum. Et molestias aspernatur officiis officia. Velit cupiditate dolores et omnis sit. Cumque ut repellendus molestiae dolore et e\",\n      \"location\" : \"sg33x38lab34ki7bnt3s5uxxg0vzguqllm4jpmtqjean7wrr4kctt0vc0xclm9d50glvupdsmtjs003qq9run1mi8cxrryalwl71v4v055cw2hq4z8gh7g9oeio83\",\n      \"title\" : \"Qui est est distinctio quam ab occaecati ipsa.\"\n    },\n    \"role\" : \"rwmv7kpn5pxcpeosikd3cwy42goyet3djzl1qtwm5ltyng9ksjey6tyqil476gjyk0937od9df22u912om6sgue7de7jcgpm85misoyhbkx0wopa2jktnyfveju2vrp69ovxvelh6etae69jzo0\",\n    \"members\" : [ \"eunx4t4s27c7xdkw9vjh05vm7tciesa5blle7zt0d84j8f2x444rcqxifttbxeivtcm5le0a2bvqjy2gx2to1bl26kzo10blj3pd6ir9wv6\", \"ox5qq97g6ifa3gaya609ivv09dkpyc7y4dis3l9lqll6erwffato\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"zxt6vibhvi64ylh5v8rz3vipxpl5v2dt6k9uz1obl5kjzpg2vknqhyghar3wmla04u95ht8os8awtsjthlg1q93s1w34wl9vzwch2jwxdkhvca0sdcybakllvf9kqevomt7rhs33ik8e53d5kwaysuodp12x7wl\",\n      \"description\" : \"Ut minus magnam ipsa ut id. Itaque quia sit aut et. Odio illum aperiam dolore. Voluptas similique rerum eius. Tempora et autem.\",\n      \"location\" : \"kccjad7zd583bm0b9g42bxukw6w1whs6bo27dygbh57pwl46lz27ym8tq3siur9b3zu5pbf6u5hery42kqksspuxnp4gj44p20b2au1t4wxnk5y1dv2etcchf2l9wuz2icyrwu824yg\",\n      \"title\" : \"Reiciendis tempora sit sunt velit delectus.\"\n    },\n    \"role\" : \"wr6kul3hp0sc44sgv9w0cl9pb9ekj5jiap1\",\n    \"members\" : [ \"0ec1jn3nwg\", \"r82iqrab3\", \"iif95edyx8vb9wkbfbely00fl1vip2xqfs8m8on8nn6h1dgvjfxonu68k63smk7lnfj5lipgovjfb1pqn5gzhrd5t7eff\", \"sykci85vki48aupz04erq5usfemqiqwe5artqbpedx5o368i49ro4bfroidcl1yfmuanzdaqmm82xw2i6m6wbzghv68kjf8n2s6bqgzu02rwrvtjafcx8y0pk6yt30qqdgbte767pxpp6jryyv4h7q33s0g6e80e4uotluicoq8\", \"tdv1s4tsk90gjb3x8ueqmect6ana0nnrprosq496be9ozo1u8v1qvc009ha5dsp4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"nsnw8na6jbrzcddstdtelb90s6naa8ugeuju7aawuj0dngzou25svfqv6s52szgj7ezotpj442jcyg0g8lrz12w55lv9gd6ge75dps2u5gtsct43x0mw0618cz6ymmx2i1xbfz2alvyw6fvd6nzf3tmvtu1y968td9130ut5g2cdoi5mkdwrnt\",\n      \"description\" : \"Alias consectetur doloremque vel voluptas et. Esse perspiciatis harum debitis quia. Quia aut accusamus aut iure voluptatem. Repudiandae aut doloremque sed. Ab quo aut.\",\n      \"location\" : \"3l6npgorb\",\n      \"title\" : \"Totam id sit qui dolores.\"\n    },\n    \"role\" : \"3wqtwp4mr4sc0pv0ncxlhpcp4swqqr00vsdblaoyd7bgd6h5oi69njgwu3n4q2sj6bt6cuhcsuzy0scrf2j7g3yp2kbmi88ulhjd5mx3ben9j2t8vw\",\n    \"members\" : [ \"8ianfoa1uut4vvfo19a2ag44kc3p3zh9mffvy7idkkc0qodussqgxnjddb5un6bngtio3apdw1nrgjchmi628kr\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kaqhv3twzy01r24trtvusj05dodg2zw0cm7dort7227us24un6p4u4gcq0vj70979duihe1kbo8l1xkm\",\n      \"description\" : \"Nostrum totam non ex quas. Pariatur aut nobis. Hic omnis quia. Aut et unde asperiores. Voluptas dolores sit occaecati.\",\n      \"location\" : \"v9rbcndz8polmn7ul8qo7buoszsgfw6rgqhs2sak8a063nrluilnvlr1ehbcgd4iuxle0cveht661nke30fh0w9as82p011eirilaasypcrp8n26empaj3mmrf5y7q0befd2ff1bj\",\n      \"title\" : \"Rerum eaque rem autem aperiam corrupti eaque.\"\n    },\n    \"role\" : \"5qn5cscv2yls6drj5c1xp57fzx56mv9lwr9onac5cz0p0kxhtulnqj38j9gcqyot2zyxi2vn4k414zswjdsh5uy0j81jfung9mi0mgu1wpsbmdnckpvafky2ptw6z\",\n    \"members\" : [ \"69ffjj471lj62vt94j1tt\", \"beoiqus51usykdad5h3vs16ma8l1qdy0c6dgkyqvm93ece10z808co4kbgms7x0\" ]\n  } ],\n  \"etag\" : \"quaerat\",\n  \"version\" : 776688342,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"a9llpmmo88bbk74t\", \"6a7b3or3476gdpe1o3mi7d67yrxed1o84fr8a8txve5jcsbqqcq7gu8wrx1bj42but9r545b9cvou44s28fc7lnsunelpm95e9hv607xo0gcq1wnyjvoaa65a94\", \"3rwjr5h8ptrj8mq1aigsq7z2ixf77815rwyal1hhby1ipejqaty2ppy5vkrubz01nus56b177pzmhggm0ja3lbf72718hy55zoftxqfabln7em9vkrprx8ojlfwiluchoc6pn6c5xopum1myajqk2t6ueitj6n0o09yh040xcx4eljf7mq5kc59sjdrjtbv0lniq00na\", \"p938hjb9k3o3xpiejro5qnt7d88jnblp2hdke68wyqy52irytfwlx\", \"bud8zc7un\", \"hebujwnss4uasvdpnyq3rt3vthrfnue9728fue0w3aplhvwsgivodcozce05vqmyt7eyw3yo4302scw9kxw9a4m08vebmxlu0azqu70c\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"1f30gbtaqrs4el1y3uba2rezfv6r5hjod3zuk2dby9\", \"0ts58nscg9xgoyybeywjdn2e454v623ojwzhxgtt281qbdrbabld07t61m5exs591wsb4g4q49cds4km7jwyq7se8ocadkwuyqxl7l0x117mvx23obr2srrtd3hd5so0xdg0w5eu63jpsefanb3tlz1wburc0i8iz67vuylfzsaxbp\", \"vb5j6p26meqd5aa0dljjkwidynh0vx5sq9fmsyeper3m5t550ecgh28bvdmdodyqpi5aafzjgb23jq52m7z72o8l2ovoggu6akn\", \"tppo92eae89d9rw4sgrm0ps4cyp09pdtahspxfpkdme7b9qu434qhz9nqugatntbudnjs449b9jz6cu\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6h0nhoeu54zrzykkoir092on9oe1u48lxke6c7cl1hpiu0w68ug2yvzpmm6wddke01sgrg4jg90xqy4jo94ss5icc5d8wjkp5vekiv2w6b80zqrsn317ge0c2n7dtemerqfrpk38mjs5ds9id4nbrrrt86b0hx\", \"60bi6u417ki7sm3nfis5i75m93xovbkj7ambapyre23ottjgw0tl7ilywm80cmsb6kf7yysnwm0s31szp0jvft2xzsjalm8merm7mkqi1krevgrzui4ep77222zwktr4k6f3avlmpbadjxn92ztzhk1t3zpsf812fqxnbjh2rjf8df\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"y5s8ogsp1namg6piubaxm7zpx9qynjnxw0sqms1cy3samaab3tgjkux5zfpyvy0tgypdja\", \"yrpx5u6kd2xnxuzr3kwjj2datqiqnadr7bp311mpogqkjblxi6ylvsz9szc9ba7oesjew3q45l9smsdl914eomvck0inpc45\", \"pppygrni6y\", \"exznolgrejbesrlcsykzjq927elbz2mnzw71wm8g841rjtq8hucxorjoyjcyo3anaygo28aph1l6dtiy6rn78ftxth2lt8jqez2pfvdagqibn84z6tt0lvin5moxv9\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"h5u1n6a0o19njqyzqxv4krtwroo1o5v42aspysevjgzopblqgy9darst9n99vc3iob0asqssfct0atzwzt871ilfp59ytvohzd\", \"tvqtz0phmshhhy01nkaqmsgv5u5uddexuha3abn9u9dpq84uo60kda1fsw9z3z89whjtup5tlcan8ulsdltnrx8kxigeanclhk86adlds7\", \"tkb0sievhar8wmsc07rmushbby58ys2pe05zqdlsvk16myw5bspae6lae6vpjwq0h7e5zrgiejk6obq36ahp6llv8gbsbbr6oh\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"of56si43mrngo1etxy4l5kg9gznqjioumgw8wn5ahzenet474ckuf2iqihq4hc1mv0jgucghv4563fad08e85jrwbynldywk3h9k11x06252avyo92d7r7gptmjcgsnymla0yrwzhey9vf18z6yn9kqy69xul9jekq7ehygt\", \"nqon36ijgsmcwz8p41f3yjezfvnb24c89lmyckvi4v3w8ag\", \"iql5u582v\" ]\n    } ],\n    \"service\" : \"5fusa0ptc3ts2lbt4n06htu0rg88lziv21stvlfrrwu1zag430vlo052lyzxagvglqa4asj60t0z38fsuiankg7mz22anxkvtyi3zhkwpl8o690g58rtrqojq0075b2tbcxo2jfavuyzktj5v4q6zd97p4u90dk2\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ib1dlwam4fa6dvtc3qo7byryi\", \"aqmqt3c202u0zoj21ytaknccj8ivyp888ofjc8fm541eeb0k307lyqtuvxqjjap1bifa1uns76pltvui3fi1g0dpt2egdau7hgamhp9g3qs4l4bq9ppjr113zal5y6zihqr445nqpjr1zc29a15tvsve11d3s2hr416wq5jz\", \"aurmnz2hueus66rlrniy9arm54tkcsqlkvxxdf060gd9dspp6x3assoredfpo688n72v6857upkazjcjazqibtqmsbj290ta04vv4aii9tj\", \"w0tvxnr9lc\", \"bjha4tlo8u870qjvz86gosr20dkn7i1rdk9qeuraz267pg8az1gu3av2qjov57pi96lz83h9efgax6flst3fn6woehiwxbf2ol1xsyv2fqbi2sqkdogjw2cu6af1fh1is8s8a9qfsrr8qz3gqxui6c1uwnny25q37ofnsao\" ]\n    } ],\n    \"service\" : \"x6cx154yi3fmzduo45kvwrcbstn5shmzx13fw9ww15qakatbxpfmm33kbnnievnqdunbxnf45mheocndgkk0k9vxxon55gppohu9gdgqlq20fdenhonvi4zi561zx7se3jedu6gvuvfg9q3srh85kgffc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97f713cd-6392-3f19-a2f0-f74d90caa0e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8eda76cf-7fad-3da4-9844-0ab661727af9",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/7rgpk2rs13nudvcc32yuc3wn9gwqzzaa3hmlq9z77qia54si3tb31lwzd4zb84cyc979zejhuzjxral5h31tvui9ogwxqumpw3annm0zajwsemw99dm9d0fchgii1y7ahb3w4ftt2p0cj2lhz7kl06ed6i4eazdyl8rsxroq73jcox85mduqips350o:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"h1weul70lru2riqcj2cxhauphhd6v6bsgqtu2xvlslbfhwokkuktiai305r8s1rd39t396c0k5c3as4gvwhdkdx9v9bqjbcov3wub8iliy4\",\n      \"description\" : \"Voluptatibus autem accusamus quod dolorum eaque. Nostrum sed id harum doloribus. Qui non et eum. Ipsa accusantium ratione qui et magnam sapiente ad. Fugiat aut iure voluptas omnis.\",\n      \"location\" : \"d2qx2s5l5xn5oxytxzfff4hgplakqxe\",\n      \"title\" : \"Explicabo voluptatem aspernatur.\"\n    },\n    \"role\" : \"ii7mdwi5elz2p1twfn8f4mt9uncs8j5fl0fhfy\",\n    \"members\" : [ \"gdxrmpzm0vexkd0gcgz09awy62xylm6xchikajs41m5ow2m611mz8y2os9ut8ojy74wpxux01p6cjaqf78r2dyzb8ma3hr7btbhpkfaex9fc75r6q4ms692p2x1r9j3mmt79li4u\", \"o84ixpabd689u3smzd5gi345v7zr6l3\", \"mog87ddajcynwim1h5y80ewi2b32nvekwy6ifk0byfc51g9iigynfkbkbrxth4fjyzmg1h0b64lvxm2z6njcyy9obvl64voksts0y1c8j09dwv4xrhst14waag62gut31\" ]\n  } ],\n  \"etag\" : \"excepturi\",\n  \"version\" : 1654076150,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"z0z0zpldqrsr6dvte2xjquda0kymj777asbh5de5dog12kahjoc9cvqn3rntim4kdkakqvc4tufe503sqt7ioaq8qy257lyuxp7sp5ng7enepe3yj3ojwwxt0bvtqjsc1yfeo8v33e20c2477w1ju5ryuc\", \"4dq0yd2eqk36apx28qirjaojvle3n09wsc7jwpchwfqdrpvxdilltce68xheyoimr29x2fupmam5ayuw7mfcezpv7jo426ongm8rusz5ek51wu5ddmgdanlabm2gaus0rkssbr89reku3mkirnfcs86wkbx75rjb1gcxcev46yuf4mkk5c50a19z7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"diulnmvcmzt3kbp0gv11e5wo77rwqdc6z3yfhbqushtqk4o6py5hk5jj60l0k9w9rsggzal94x3hx7nal75hfvwnhwdndo0u1mnl2t1coyctnc0jied0lcbm68\", \"fxthxhnse40zekd7254eav3rku89uj0jshbiptp682nmgwh9fg5o8daikuavasm1oc7xpm2y\", \"vqal5ox5ibfps4sq6opbzm94rg8kxcnf54b4nm90g2joiicdu5y347tje9di7w8kcte228u8fme6t2k2d2zwtope1nrn5x7q48mnigyiv9b9b4jya849t7147059ntjgnigie\", \"fuofp7syz2t1de34xlxr37jeiij8wbdwy3e0d\", \"tovzrjraunolu6jlw9wkrzvq53obrkgnq37yfb4luy4zscz16xgruhjblfatac6yfh48uvgqn8pn5v7ka6u7dzs9z9yo2x\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"wzbhbxb0zt1hfnox7g9a1rzmmhjpbwlctjh2bko5gti6\", \"c28cpotkcu0hmbhidyg0zettox82vgytu5xodejrhqyc5i4u6yez553wqvf75fir020pbbv6swze7iijelbq8q64fu2500cgr0ojvp194cfp4u8d9vkhdhhvc5fcn\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"qr3s9lh0slztmm5g6pgjfe57lheg0\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ow2e76f5100tlss80gxsn09ymaul2ysl4k666sos7on\", \"48jzgijv4zqfk1jjz5s21pbxmc8p20jrxcm2xkybexjw2uif6g9u573doatwuyxfjkxctgcvalqyhhhon3xdi1cv6he68g139xl77tpsfjqp3bcnqsmxv6\", \"x62ofpnp0p18st\", \"ygzryd40b3fn993kxr6lgidl8vuitphohdor24wapwe\", \"yfpcvhhpqrbwapbpetu45l2qcdjofu7feuzgksmazf0jknjne4exl029orp6p1v56phi9iqsl8dhbsgb4cb656sq07ehqx\", \"560\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"36gt3f6lgrszwjx9o7qqpo87bx6vdxjr1kkrxj5g7ebk1lm5mocoiguzdap18n1xj4kjrl3yczn5vpy9n0vz2k4krdf1in5lj8n2l837zjnpe05avu8\", \"y07mk6x0x37j703979f0wsyn5o6yl2oeokgrngnhlks2p4i6\", \"us1p87hs\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"gajzv57y70y4tbffews7232y3edrag6q8b2m988k8b0snrtxdo4n9wm4h1rwdlltv41zg3gboujjbvp6onjeoq7y43w2zm9pf1c93qnsbbnc0duamn7k8n838vgz49ba9530id5ilw9ra4eox1md7un7xuoxxxmft2jta55aqijo6cal49bt1bev64malr8s\", \"dv9282qq7zx1i3aulb7xoqsen1pbv02do9dm3rudta7hvlkrapljm0nsbq5driv0bw2dewoikenfhnd989edfktq1yuvndlwuzox2nvujrxu8t0ao468yrm5a9ytvur3cq0leo0uv9tuovyby\", \"xg08gu7rdvs9x403yvw1ky5lcplzzs3j7jck5jiogd8qmavn4my3xekwviwly7vw\", \"dlach1xhric8s7ww3uk7oggy9ldb08wf\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"6s7eqwoh4z8n1rq1x1zrufxfz2tsxodun7dpfk28qcghhlmvnkifu32baql4t8f8iw86dpeez8iprw8ds1nt76u590u93se86w4ce4g9ewa3xzoogai7gtmspnmuxt8rgk93gwemc4zbxv38wk541ftle1ejhm417qfvs56wokya9mccsn6gy5foz0h\", \"9g40lhtc4zqwegnahxv1y62lz2nug27sm25gk0rthwte8o58kzs4fnl9xtcw9d5x4uurrc3hd5a863752c73logefw03x0s0werkmbmg7z35sxtic5z71tzo2frzrl0tdkgkpjqq30suwt5s5x5nzy6bp2gm1eywg7oq7tpzqriv90wtuwgg\", \"wdol31l1q0f3gvkdh0avuq13ls81od88r89ij575h42j5uistk8t5v1d9mtvttbxxarouoruysur4t0qfs3mloaf3xd1ss0sfz1dnhl6bgryv9mzemcbhz7x4irhcc791qunneq5lf4zl4yv\" ]\n    } ],\n    \"service\" : \"qln22tamu2scvoj7h5gebe6b2\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"j1otkqamu0jah5zlnsolzbfvbwecp0kgukkziw5qstw1thmnsi4e5y59g7v\", \"ejxi0ifgb487tcbi11kmmc3vm1dpeaky3v1l6xpsre1jztrgpz7811r8ty\", \"8nq7wsgbs9juc58ndxjavjz83200yuz912ogdvq26vtj4uh26ioh6uczueqdhxr33gte7r3vvif526h4emxylxi36yme4mhqm6lfzdwzqe5xzd\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"2lyej9tvtxzntfxg8ijq0x95vavat4zo2mz6w5jzzacx2ef6us51fx3y3a7qwhpqmlc52uhd6q33k3a8vpuul3frfupkn3mx7i9llb0a7hyn5i2atjc\", \"pw5oo8khlorw324mpn3cr4gr8g5n36dnpw5bhu068aqz0p9enevzwa8o1ctpcj3m1zewfxt4jcnx6twpmaasvvs1ch4tuhqlq58sae108a67v0fa4ztlevkkg0s3aqqhfy0olbrlfj065plqh0nvrjxkmd9i3jiazx6a9emni010tgy83ihyoalegvnowd8ytah\", \"xt9c1ti8e43mat81tmaqslpz3ug2gh7jgb8zll6lzjqv40fu1rp32nimyt6pneyak98nn2yn588am5kxa\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"smsrshpp0beo8p892n1zzd5ojeyk8ik74zeb8kq4wz0xxpzctxxy15x17hqmfy\", \"tt3ax7plbrlepephmxg1051qysn0wyqlv7hsoam95v6l9puquyzz111ep7ownk8j280jwpl6muwmuu6pa5t1cot6xlhzn17lcde\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"3cdzxpfq34yz4e8lxrzupgr268elccywson8juz9dqeitn6ffk4h1zxxjw47lw9uct7tmtb2qt3rcf2i1xl607mohxol7140ajzc2ui0bovzqzxx0izuyv2rh26a9gjvq7lbjt54zhfvxlitb6z576y07gpnknfau4y\", \"j0v0u17s2sb2nc40xq9m\", \"59x5a5me8l0ahc4m2t2vpvfwc0wkmet5qdnybu8m9432mhtgpg47pqjkkjsv6jsu9r2qu37c5xxr7f02gp5cujrdd3o78gkpp6x9o\", \"hw6s25diwpe5curm5im8bgojdhjbttjluwkwhwbqqfqqu3feye59nxcj9hje3kb58il0ckhq47vv9xwydcrg995vsk6i73a2atkqm\", \"ce08aiy2m9cplu3m9rwozmzitebdj8bnssam7xy13hat9gzho1rgc3q7oeww9orpwrair9odqrcp\", \"79wrep7jg8u4t79gwpabtnrzm1egwtng9q3tsecd2847c8cbqhm4nuj7am7y9lyi8bd5inu4dqqsww926o7xlzh7562b8xiuz0u3mdil1lfwrtkrxdc9obb3rdzy4w5aeel2a8ndut0qarp4e03w9a0nt35hzjd0uk7vowt21fl\", \"x2q6hewlr396frba0a8bmveqs61u\", \"nhach2b0ci77n050tat8use54n41gx9hxc9e2umzfd75owpoqv1ccrt102534i2duohhfdzx\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"aelv\", \"h79xo8zwzl2o3qxrkwx4ngrf0ibr9csjetq3llscxz3reqc6x14cqqec3in64jraoj5yjgrbbmwnhlumtkkmpoz5rcpszn7vsk6cnyt\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"raxk6il8j198067dqyff8\", \"r91tmvlfeczb47qtq9ik3a45gtzot10qgo4o2vg2vta3dvfsyp147iegxd0cd74vk6xrmlilh1ls\", \"7gqcw5i2cp0z3508241jyb4yp0wgpyrqhmc3or2t2n2w4ja9fa4knrdm6gf2rjr3ek1nbpiv7344c0kmwjcw8wxrcdg4j6qt1oa4wqbhcsyt06wr62rbbmz2fsxqo4wrfbf65ebyzkpwowh9gjm1u1ny8sb4gv92n8ilgu7e2w0qcz84vs05by9oi31pdp1\", \"yxh6hdfluxvjh35j27nxcc\", \"rxsvxbe5mmtqo7sb0yl\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"e0ecfyh06ojlndeke4elembgu3cv6\", \"coz7xodkcnlvag47g7najvlvmel284eoi45rt76y86endfdu6wp20shyckkeu6l9b8bb7jx01glk7gu6txxchl98pufh68\", \"moew05us2w017zjpaycgbcpopk3gy0bxvk0pwm0kgqvcm6rsybq1rueqvpfqy6t0xvjnqtv0gwdm07ocnxalgf99ioyofwfup5u6uxkf71wp56wgnnmd83kuu1ijxiqyq2e3sfangj1zts6a6f0bx36cmgylgdwdly7kg6dy4c87g9aglktl5ig1i5d8s0n3\", \"8x4igx7l22r9mbzwei6hocsrj6rrio0fp2s5pgncq4g7vcywfdutvq5hxyn1\", \"mkr9tvrtxs0mt3qcbj1ekjmxlocpl6htrcc8mvp7gr3j5c2nb7ir8a4n240jmmrm3u8nm538lo6olk8e9s2g04co3fyk5nxdningsx2oyzc1433alc73drn12kxe96bm7bjdp3u0kilx6mwm2ogaq6x9gqhrm99fv2hwccqjjjhuz83zu7d3o61xlw2pxb\", \"0wep0cpq4hqr1mq2gpm807iwkhps54b8x1fruau8i9kmwi215pm9t60nl1\" ]\n    } ],\n    \"service\" : \"6wan7mkymij869e4p3c8hm3q6yqh99spdfmtceye57j4pois07uputc50hqwqky16cnxidk9q40sdcr5kbn3euz6vppnvpe85cpml39k3or\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"l4uo6l2d8nbcbwqib430tbo429qcf92x03ayk22yayo50c4mp2wi1uzxlggmocl1iu7taw45rab8tppcritkrcfihdgkglarp48qxuy9fa79l8qtpcjo433aq9cxzq80mfgnh4uqm3kl5o71ngfrf1oyn0r7qeh7515ts2slklqirtnjoeuik5tlaql1gpml23z\", \"7sdrut9ttbi5r5pb6fnvjfdhjr1sxdoylnng92fsfxsv0ufacci8m5pt3snrzveml7obdlfejxgoyijke4jq3aaacokc9a601o95smdb9bwtkt3qrv1peb2k51wa2qi84ndps\", \"ip9td4o1\", \"qtzah3z1neoevidn86z5p6t2ybx0utottodsqze9nnua15714nwoipbrs6m0frr91nij1ij58iazmjkddujw9n1fld6w114elo8evqcqa2vibalntt9zoe965ltbagz65a7y8jvkx5yy05reivx8r3hj9cw5sbk62xy\", \"voxwkoufc90qjl2sxf2au3cd7l6z56d1i4nfdd68orhyhjmiqv5lxbri8y3fira44cdj7rqq7hzcn6ye4gafasva6b3gjmxijgnwdtnu9xq07bat60e0e8oedun8\", \"p6mlx7zjlwn1wodnhw2cau7tsmlvt2sstl16kg9gj5rahi74dnyyik2fl9204zbxco6nig31kovknf5188f7jeb3zwi1puy09gwdvid4ch0dgxpfcgacwu3cfjpus7ntpxldjcu0cn64ljmp8me777ca0dibs7s93ip\", \"d5w5nfv88roqdxcqxzlr6phxk2o78n6d1ks4q8toi0zne9wh9hqwyx9tw1swikhqv6f9z06ax7wuetaiq1jd7xe89rgje6wrzs78kt4sqqgdufokfqbrlug6g4h77uln66phw6xe4yvfedlo9q7povlvxkj03b04gg0dj5gupr5k7bhtcj7b0dz2nbdi1y\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"2z7tscbdzk43e605sr344j0zg0msn1r4zhyjrjzh0rdk7el1v62e\", \"vbxx\", \"ngpa84jox9fs1stce40dupdcwqwg90a2b6mpg4pmcjtpoi1avczi76ph9sqdy046qsdikqjjglbk9u39apkrfq2gdspb8qapu9hlc6l9pgqa35ppfbjgtida4jsq8o63l1j5ljrjv70bng86y2yd2fmhfkw\", \"hcueaizz6lnrnj475q8or62rhjvnn5d6vkyz4fw9b5g022a6c0cnzdeum66j7m8lweehzpfqwzuc0vi7necpy85sgdarwlixk5kfoijjw8bxocwjcn1hhk767t\", \"125mh4y8mwhuofoj1jgtilkdlyzsy0j5xlht\", \"qh6qwj83gdi8jvk6jn2tvgw\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"nwv0gnk39syztzipw0g2lkhnp0jf5r6b87gd4s42bx7ph48jk4ep5i1125ie2ncjsqbfkjcrkyfpzfeecl32umqzdb14t2jxmi85vye75nzzwvr0ifl3whbzafq2ydw5s5os6u4v2i6yna1fhso9wj97c448m0r\", \"60k0k6lfwcen4ydru6c2akausi81amtxyxjjhmnr8qoezr9wortw6onjyekm0mt5rr3hwq5ddm7qhmhwsj8993v88g3iqtjnge20og36\", \"yme\", \"qdy7gc67qqxfwqm7pv82dbpaosp5q\", \"hsce1coknsnuw2dhbl2uuu2cq884f6mxpzofq1r4vkchpnx7a6chxb0j4uxulb5zov4afjwbkmrb8j\", \"8vi2y5ch8ymcju9ylo8x21zjiojuvv5ltk3k0a3vvnecgikx8a691dd61r3k3r4ju5cueeftwtq5gr5qe9iimqxw9c51u1wct7vtnedf3irf909wy9j20pe88nxqi65osx67\", \"2zu8jme\", \"rkivzgziyr46jkl58yccvyahhnqxazj7sc24vgmtmrv2vs3953oo36ko6qesv9s2raad4mzv82tt7ivxe0a8nugev7lbac1g7swbrs8ci1wm96iymbrm758pxx1ndj3dokubd1ra1x1tblrr6i70ab7yfa0muywwb0pk02wzb84e3mq15ve5ydm4mdfq7uym0m4ua\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ycxxkfl13f3xcud3o3vqxf4ch7iywr86rlndsjpr8smcvpe5odxogx5hnm936fv7rcs70292iaisao4eh1nkqms7aay6gqowvbkx3kcz0j5jr7llohedhzd4k9lf0nre6sb6zindje8b0f3zprlj7medd\", \"op5bx0mbkpwq0ycdodlzhzr4gfmyofm1rr59x8bg3z3xpfid99r8kky4kqf3mvojfo37xnq4itfxbgwdk8pkimldntkfixumexm9h0tz9lmnr4c\", \"16vs5c4a1mdho307qs1b1q95i96i9c1k2qx0eyr1a3e4im8pv0fq7hcluz6wn9r4znkpa7ip1mqedd9rzsorn4pve16i7rkojfok7atwr5fuk3nzmgp4983em1zxbvolj8e4jk4omukwchmyo0xl0dj1ia8nk0ff0slybovhw3b8x7as\", \"nvy2ildz90kdh82g2cogu94f80ve3j86phlnqk6nunoqyek20l1jh7wt2r8l707buq9hbw31w7r8edur946pxlnfhkucsq20n6vfizskzr0015yyqvbg9a0vj0seh4852q790y6n6jpu3h2ilcif507b4q7gglsemh497l\" ]\n    } ],\n    \"service\" : \"4ro9jnn2bh6ep1cuwn7rj4mv2rpuh1x0m5bjjf1x5o65hacjgpc3qoxef780b7xl4tja7drxf1ni2l822ururk54zz00bxu2e97ydzrqng50h7oa1uhj7f2wf2apwwd7ha3ddkavfltn1\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yv8r74ghoqnzb9gt9oty5q3wah12yhjcptgq1bpvb6hp0m5m0bt13td4agneklzxl2x\", \"c7ub4zkkhgt1qapk8yngl1ijw3xhkkgrjdxbd08t2k3aszbtmv023579zny1qd029xgk\", \"7tg2jc434dw75h5e97ix5bwib1upvx6rpog0u31kc972ufetpzzklhol\", \"tsq5gwsf4ifebtg3w2rnu37rc7vd4amdzzu38595tepub5jxgcrvkyq35mwbhrkdrtvy9xig4ilm906rxexgtpm0sfc89y5cpkwvyk6u3orkdgtr28nroprc4gcjaibyy664hmioyy296rscn6a82xdeqjcgydcblell0bw6ggbg2inuxl1esj9ihoj0ih3yqgg6sm\", \"8m43o7g5sq9revpwa1\", \"ars553b4bca8xmuogvwd63uxzk8gwz1o50xrngbrtyg2orvrbbsdky7n9fumbg40pj1aiub9onfl1m4ygb\", \"zkgtcea92es5usjw6vzxgs0agx3bpfuiwtl12sqzyr08nkgz8ehm66rk2dr044tb4favt00rrrp3able68lbhp50cepun6shke6tzd8vbluphp9hy1mlj740nfmqoo91efdcpt7\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"y7s36r90b5bysrwsgw1jrt1v1tcodt1mziz7gwcc41yrmgqwkw0yp8peshtroahsmo0bk06mzm2i3s94b\", \"ynngt43yn3ti1wy7rw1w1i5cnzb3jw01wemnky5pfb6cblwkw49a1edpreu7mylz2sllv51pz342ydhn4tpd9ltd2z1c283hs5yirqnjq25rbbt5qeppj4mlselft7vo341twvridxh9\", \"e6ysnnu9htx4z0dja2j4x5aasku0ykzqg49rqoqcxfbbj8r14f0a9qgnrqxixxxa89u6x62zk67agqe5a21a06jy3swz953pdrxck92vafyqieqp3kews59ro1cb3qvgs6t3fqffu2wj\", \"8toj6bguxk0anmlce0o4ogh2rof3g172pp7zhyczga3zti6fwvbn4j73adlc094wu\", \"mya3j7vp92qqijregot8f2tj547jrey6myzbhhubbgftxas51e88autuwc7kk9s85opgmszlkq49dmcg3lryv15yp95k8bd9bdiabo3pagkrukpri9ik5323v8gc62f800p0w5r0bkfr3o1umoyw5soq8c8obs6lkly3g28fgglgwui\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"o7ulhsrc3n231tnr1nkv0binnuduc2436nx0alraunic8v86sn9l7miys7gx0fnhfrinz31vha2u7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9ie2y6ysxclmxflbtrog1acb\", \"urk0cg4ywy6ivvk5w6nwry2usfpd62wdaz6q40inkl9pafafgy0lpducj698d6utvomvo8c8nevlihi238x0k4o1ndyerrgkeml5opz2x8senh3qf1t9lp4grbgag8hqbndm00uod8gv9clbuhe3tqjdlpq6shyn2e7m4vaq8x2qkc5m1z27zxt\", \"kjcy4kd9z7bzkaunws8h347jvbnzlide46hjs7gy4k7hp1c5jbj25pw80s4ehkk5y2rxgqxdvqp9iaup9gs6toy1fwskl1ywettdxiclix5fxcvc4mcaf5slz2f7wtw4so7xi97\", \"aghrj4nizunmj8movkhi0guurs7vk4dhb5ga4oqhxq6n6uyh1i6xg9iqciqfkhktf7qonzvbrcekcr6w87wsvg1gv0vdst1z2clmcbiydf2hkhgqwef5iahspp72puejsda32kvgzvaa3ku2t24rdy8it9xh3hxbx2\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"s04joz0i1cnxdng72ql7qfb7n6ed9jzixg6nqczbu62z6lsd395u2wk6zteezpzqbcubx9o56uo1doyw8r2vdsk7sbnrozn6f187gw0rw3l852hgckay1zqbt48q0t2glm8avs9516o4u2x6srrb4ojlzensroo6kfa1idbnhbqp1ffhs4j5s9mpe6ys\", \"9gtr8l38agsfclunnlf1rti0qqlbyk8tilhcwdar2nbiv301ewghouvqr0beh\", \"yku70a05wyetkb2x1fn81vvbpz5qk19rga1naf1dyxvligyps2ma7891dw0dll86n8gtictm6c1kyah7isagsvjaqzmwct45pi3nlxj1dddcjp0k3z103w6b09fjj0rwsfqnd7cxvehb1dnjtg\", \"a7id9ubgcfyoot31vypp0y75cqboa6zw0uo0yw408efdc8r8uc1m2ykqw01rpbtilc7klh681pbzsfvxzw1dbnnqy5w16y1z629r2\", \"mwm43ab59e387039vzkxxo8ebepm13u76\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"otffkkj0nbjayizfqsjqw3ksej1j8nm94lor2v067irfica213k56w92x6us1ak4oc5fku\", \"gqdv4kevg2ibb5addmd0xrsk8xzhw961hncpc6d79jt1ria2br0aprlplykky1uchw78dyzta6z78ivnyfuc4bzuzbupkl5okbh6v\", \"2uxjkum61m2h\", \"rh1m9ngquqox26jfs9nx1x0yff5\", \"y3jamndm2x2mbuopw5g28vyl6silq0n34g1wud6pz2iwzbh8\", \"b3wrr4us7w9l128ok6xacff6bw2marc7jgu\", \"u4u8ssfszd51ow2lsni7j4332utjvu5ddqjqteypss2cv5czp3om12gh8adw5fde5w4rhcv6kuy4q3evd3034g9mqszhq71mt\", \"ya5vkn20dkfr730zlfyu3ve94xtsj\" ]\n    } ],\n    \"service\" : \"6d431x2do3c2ftkf56vlmqvy3z01w4afh1ssmou3wf889iag9kk676vgjsv\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8eda76cf-7fad-3da4-9844-0ab661727af9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "643fcb05-5d9f-34a0-9cfe-23195cdd9d27",
    "name" : "Creates a repo in the given project with the given name. If the named repository...",
    "request" : {
      "urlPath" : "/v1/pqlv9qaifrn9jrysek6qy8bfk752ndxdqv97b47w3lckumb13fdn9liswe6xv41c0pourjoxo5ibjee7u76iuffpo5ui/repos",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"size\" : \"jzvp5utckttrvx1pgjlw656tcndduvh2d2xwq447tuknkr6ctw80vxptd2d8nvl0w0ill87ie86emsk7tvw3zixkhw3jffd26t6sr5ymtytj5dugnc\",\n  \"name\" : \"Minh O'Connell\",\n  \"mirrorConfig\" : {\n    \"webhookId\" : \"6kxu\",\n    \"deployKeyId\" : \"0g95\",\n    \"url\" : \"https://web.example.mocklab.io/010206\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/220971\",\n  \"pubsubConfigs\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "643fcb05-5d9f-34a0-9cfe-23195cdd9d27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.create",
          "schema" : {
            "description" : "A repository (or repo) is a Git repository storing versioned source content.",
            "properties" : {
              "mirrorConfig" : {
                "$ref" : "#/components/schemas/MirrorConfig"
              },
              "name" : {
                "description" : "Resource name of the repository, of the form `projects//repos/`. The repo name may contain slashes. eg, `projects/myproject/repos/name/with/slash`",
                "type" : "string"
              },
              "pubsubConfigs" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/PubsubConfig"
                },
                "description" : "How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.",
                "type" : "object"
              },
              "size" : {
                "description" : "The disk usage of the repo, in bytes. Read-only field. Size is only returned by GetRepo.",
                "format" : "int64",
                "type" : "string"
              },
              "url" : {
                "description" : "URL to clone the repository from Google Cloud Source Repositories. Read-only field.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "552d3080-8fc3-3a88-84e7-b3a6d2f1fa70",
    "name" : "Synchronize a connected repo. The response contains SyncRepoMetadata in the meta...",
    "request" : {
      "urlPath" : "/v1/Ninfa+Heidenreich:sync",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Alejandro Bauch\",\n  \"error\" : {\n    \"code\" : 1605089801,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Est praesentium quo itaque tenetur sed mollitia. Saepe maiores amet natus illo dolores odio. Et excepturi amet aut architecto rerum et consequatur. Ad et voluptas assumenda dolores voluptatem magni ac\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "552d3080-8fc3-3a88-84e7-b3a6d2f1fa70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.sync",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e0e36ead-7723-3927-9c6f-d087ef152e02",
    "name" : "Returns all repos belonging to a project. The sizes of the repos are not set by ...",
    "request" : {
      "urlPath" : "/v1/Miss+Floyd+Leannon/repos",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bmm2ms6lr7wterlrup45o3mc782x1lt8xxyhq6ccpx8anselpm1l5nvpu6k\",\n  \"repos\" : [ {\n    \"size\" : \"x968msz4jaypb3ftaegd3jmqas5plhe9rwnbocfmubavjjpkc56sk8bue23bgub7t9ssevdygyt6tu16y96n5ybmgv09i0k51\",\n    \"name\" : \"Ms. Tierra Runolfsdottir\",\n    \"mirrorConfig\" : {\n      \"webhookId\" : \"02g2\",\n      \"deployKeyId\" : \"unr8\",\n      \"url\" : \"https://web.example.mocklab.io/117065\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/333628\",\n    \"pubsubConfigs\" : { }\n  }, {\n    \"size\" : \"yzyj7nwxmsygr43b65hyl5uax0u6412evgjyj253o4s6jh8qx11x4hl6o9f2kveutha9o4cjn8fmcvj060ge2y84b\",\n    \"name\" : \"Garry Macejkovic\",\n    \"mirrorConfig\" : {\n      \"webhookId\" : \"7g65\",\n      \"deployKeyId\" : \"48ie\",\n      \"url\" : \"https://web.example.mocklab.io/072172\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/656597\",\n    \"pubsubConfigs\" : { }\n  }, {\n    \"size\" : \"r3e9h2rzwjjle16xwf8cswjvnbg589vxy6676id4t2al0owmtbyn8t28v26r4l0zxze910yuy21r76ywommhs5u0fts92qbwdxj3n\",\n    \"name\" : \"Raelene Buckridge MD\",\n    \"mirrorConfig\" : {\n      \"webhookId\" : \"l746\",\n      \"deployKeyId\" : \"zl4h\",\n      \"url\" : \"https://web.example.mocklab.io/851881\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/482434\",\n    \"pubsubConfigs\" : { }\n  }, {\n    \"size\" : \"r52ld208hon8jale7osxbnmj7iitu1i5k5mb3h740ttba821qc8\",\n    \"name\" : \"Denisse Cassin\",\n    \"mirrorConfig\" : {\n      \"webhookId\" : \"r5a0\",\n      \"deployKeyId\" : \"hcls\",\n      \"url\" : \"https://web.example.mocklab.io/079541\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/282091\",\n    \"pubsubConfigs\" : { }\n  }, {\n    \"size\" : \"7z85xtdbw1uhipkjg9z7ty51vlbk8k03o3hlo9umbopmpzdfs73yjxmzz4qguv5deb2t6obscd6xrpk32rptme1vsncrexi5zg677q4p5vilqv4gfugiyzdrumt6nx63qu2p77lemf8k\",\n    \"name\" : \"Janis Gerlach\",\n    \"mirrorConfig\" : {\n      \"webhookId\" : \"3vih\",\n      \"deployKeyId\" : \"o9k3\",\n      \"url\" : \"https://web.example.mocklab.io/888813\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/724034\",\n    \"pubsubConfigs\" : { }\n  }, {\n    \"size\" : \"019yq8m7ozgz9avcshbkmkdrp9gp\",\n    \"name\" : \"Douglas Fay\",\n    \"mirrorConfig\" : {\n      \"webhookId\" : \"m0fl\",\n      \"deployKeyId\" : \"f634\",\n      \"url\" : \"https://web.example.mocklab.io/973226\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/290200\",\n    \"pubsubConfigs\" : { }\n  }, {\n    \"size\" : \"5pxa8rduih3ga5j724tsb41uhduaewf2k5mij5ps9gc0itxt58da4gvmkrljkvkpo8hsrs7jx6josi26me710z5yq3inq7qlbx5oo4n4j890n62td0y1i5g1wkfoc3x1rhnw1xdyqaus9zlbbic6oiyjhzczm41p07q7rvcymntv8\",\n    \"name\" : \"Carson Nicolas\",\n    \"mirrorConfig\" : {\n      \"webhookId\" : \"4ehk\",\n      \"deployKeyId\" : \"88y5\",\n      \"url\" : \"https://web.example.mocklab.io/580289\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/316185\",\n    \"pubsubConfigs\" : { }\n  }, {\n    \"size\" : \"niwhrglifnhlllbka0nyh0vw19mc2fxja3u6pz74jlb924gyhtdaz6sqfxhi84h444151of2vgbtjfoaqf71fwt66k4tcqjsglyasompe4ikcyswevkdzeap\",\n    \"name\" : \"Ronnie Okuneva\",\n    \"mirrorConfig\" : {\n      \"webhookId\" : \"83jh\",\n      \"deployKeyId\" : \"31f8\",\n      \"url\" : \"https://web.example.mocklab.io/013366\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/993081\",\n    \"pubsubConfigs\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0e36ead-7723-3927-9c6f-d087ef152e02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.list",
          "schema" : {
            "description" : "Response for ListRepos. The size is not set in the returned repositories.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If non-empty, additional repositories exist within the project. These can be retrieved by including this value in the next ListReposRequest's page_token field.",
                "type" : "string"
              },
              "repos" : {
                "description" : "The listed repos.",
                "items" : {
                  "$ref" : "#/components/schemas/Repo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c8406993-c2b9-36fc-82b2-e855521ba507",
    "name" : "Updates the Cloud Source Repositories configuration of the project.",
    "request" : {
      "urlPath" : "/v1/Eugene+Kerluke/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"enablePrivateKeyCheck\" : false,\n  \"name\" : \"Moshe Wuckert\",\n  \"pubsubConfigs\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8406993-c2b9-36fc-82b2-e855521ba507",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.updateConfig",
          "schema" : {
            "description" : "Cloud Source Repositories configuration of a project.",
            "properties" : {
              "enablePrivateKeyCheck" : {
                "description" : "Reject a Git push that contains a private key.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The name of the project. Values are of the form `projects/`.",
                "type" : "string"
              },
              "pubsubConfigs" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/PubsubConfig"
                },
                "description" : "How this project publishes a change in the repositories through Cloud Pub/Sub. Keyed by the topic names.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "d28075b8-51de-3bd7-9a8f-b75c2b451c3c",
    "name" : "Returns the Cloud Source Repositories configuration of the project.",
    "request" : {
      "urlPath" : "/v1/Miss+Dion+Wilkinson/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"enablePrivateKeyCheck\" : true,\n  \"name\" : \"Mikel Koch\",\n  \"pubsubConfigs\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d28075b8-51de-3bd7-9a8f-b75c2b451c3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.getConfig",
          "schema" : {
            "description" : "Cloud Source Repositories configuration of a project.",
            "properties" : {
              "enablePrivateKeyCheck" : {
                "description" : "Reject a Git push that contains a private key.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The name of the project. Values are of the form `projects/`.",
                "type" : "string"
              },
              "pubsubConfigs" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/PubsubConfig"
                },
                "description" : "How this project publishes a change in the repositories through Cloud Pub/Sub. Keyed by the topic names.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "25134fdc-5a0b-3f8a-b51d-e749da92c928",
    "name" : "Updates information about a repo.",
    "request" : {
      "urlPath" : "/v1/Javier+Medhurst",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"size\" : \"ool5c5bhf11iv7qxvdqvfu5\",\n  \"name\" : \"Irwin Hauck\",\n  \"mirrorConfig\" : {\n    \"webhookId\" : \"rf85\",\n    \"deployKeyId\" : \"18t8\",\n    \"url\" : \"https://web.example.mocklab.io/446896\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/689796\",\n  \"pubsubConfigs\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25134fdc-5a0b-3f8a-b51d-e749da92c928",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.patch",
          "schema" : {
            "description" : "A repository (or repo) is a Git repository storing versioned source content.",
            "properties" : {
              "mirrorConfig" : {
                "$ref" : "#/components/schemas/MirrorConfig"
              },
              "name" : {
                "description" : "Resource name of the repository, of the form `projects//repos/`. The repo name may contain slashes. eg, `projects/myproject/repos/name/with/slash`",
                "type" : "string"
              },
              "pubsubConfigs" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/PubsubConfig"
                },
                "description" : "How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.",
                "type" : "object"
              },
              "size" : {
                "description" : "The disk usage of the repo, in bytes. Read-only field. Size is only returned by GetRepo.",
                "format" : "int64",
                "type" : "string"
              },
              "url" : {
                "description" : "URL to clone the repository from Google Cloud Source Repositories. Read-only field.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "3a7554db-3963-3637-82b3-8b93d044eafa",
    "name" : "Returns information about a repo.",
    "request" : {
      "urlPath" : "/v1/Dr.+Toya+Murazik",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"size\" : \"kx328i5t6s5il2hpqf2dszvbwqxg96foe8a97aytzwr5btu811ww0xtrn3391puyrt4kp3mwt3h6a1na5vz9h6ot4q6uzs73f5slz5kaal7hxsgp2xu186osrdj313xtifv6xs6v7zrxdw9s44949tchcutoctt\",\n  \"name\" : \"Sheldon Walsh DVM\",\n  \"mirrorConfig\" : {\n    \"webhookId\" : \"b643\",\n    \"deployKeyId\" : \"gq0c\",\n    \"url\" : \"https://web.example.mocklab.io/082968\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/987933\",\n  \"pubsubConfigs\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a7554db-3963-3637-82b3-8b93d044eafa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.get",
          "schema" : {
            "description" : "A repository (or repo) is a Git repository storing versioned source content.",
            "properties" : {
              "mirrorConfig" : {
                "$ref" : "#/components/schemas/MirrorConfig"
              },
              "name" : {
                "description" : "Resource name of the repository, of the form `projects//repos/`. The repo name may contain slashes. eg, `projects/myproject/repos/name/with/slash`",
                "type" : "string"
              },
              "pubsubConfigs" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/PubsubConfig"
                },
                "description" : "How this repository publishes a change in the repository through Cloud Pub/Sub. Keyed by the topic names.",
                "type" : "object"
              },
              "size" : {
                "description" : "The disk usage of the repo, in bytes. Read-only field. Size is only returned by GetRepo.",
                "format" : "int64",
                "type" : "string"
              },
              "url" : {
                "description" : "URL to clone the repository from Google Cloud Source Repositories. Read-only field.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "a320c87a-d6a6-3f19-8f17-e8fc3fcbb448",
    "name" : "Deletes a repo.",
    "request" : {
      "urlPath" : "/v1/Reda+Toy",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a320c87a-d6a6-3f19-8f17-e8fc3fcbb448",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "sourcerepo.projects.repos.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  } ]
}