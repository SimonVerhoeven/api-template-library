{
  "mappings" : [ {
    "id" : "ea5dd1ec-611d-3f5f-b679-b91986a61b87",
    "name" : "Inspect a volume",
    "request" : {
      "urlPath" : "/volumes/Raymond+Hettinger",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea5dd1ec-611d-3f5f-b679-b91986a61b87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "63ec6670-05ea-3de5-8edb-c301abc63447",
    "name" : "Inspect a volume",
    "request" : {
      "urlPath" : "/volumes/Adrianne+Gleichner",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63ec6670-05ea-3de5-8edb-c301abc63447",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "9f60a070-0ade-34b1-a6b0-ab5ecb6c828b",
    "name" : "Inspect a volume",
    "request" : {
      "urlPath" : "/volumes/Buford+Bayer",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CreatedAt\" : \"2016-06-07T20:31:11.853781916Z\",\n  \"Driver\" : \"custom\",\n  \"Labels\" : {\n    \"com.example.some-label\" : \"some-value\",\n    \"com.example.some-other-label\" : \"some-other-value\"\n  },\n  \"Mountpoint\" : \"/var/lib/docker/volumes/tardis\",\n  \"Name\" : \"tardis\",\n  \"Scope\" : \"local\",\n  \"Status\" : {\n    \"hello\" : \"world\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f60a070-0ade-34b1-a6b0-ab5ecb6c828b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeInspect",
          "schema" : {
            "example" : {
              "CreatedAt" : "2016-06-07T20:31:11.853781916Z",
              "Driver" : "custom",
              "Labels" : {
                "com.example.some-label" : "some-value",
                "com.example.some-other-label" : "some-other-value"
              },
              "Mountpoint" : "/var/lib/docker/volumes/tardis",
              "Name" : "tardis",
              "Scope" : "local",
              "Status" : {
                "hello" : "world"
              }
            },
            "properties" : {
              "CreatedAt" : {
                "description" : "Date/Time the volume was created.",
                "format" : "dateTime",
                "type" : "string"
              },
              "Driver" : {
                "description" : "Name of the volume driver used by the volume.",
                "nullable" : false,
                "type" : "string"
              },
              "Labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "User-defined key/value metadata.",
                "nullable" : false,
                "type" : "object"
              },
              "Mountpoint" : {
                "description" : "Mount path of the volume on the host.",
                "nullable" : false,
                "type" : "string"
              },
              "Name" : {
                "description" : "Name of the volume.",
                "nullable" : false,
                "type" : "string"
              },
              "Options" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The driver specific options used when creating the volume.",
                "type" : "object"
              },
              "Scope" : {
                "default" : "local",
                "description" : "The level at which the volume exists. Either `global` for cluster-wide, or `local` for machine level.",
                "enum" : [ "local", "global" ],
                "nullable" : false,
                "type" : "string"
              },
              "Status" : {
                "additionalProperties" : {
                  "type" : "object"
                },
                "description" : "Low-level details about the volume, provided by the volume driver.\nDetails are returned as a map with key/value pairs:\n`{\"key\":\"value\",\"key2\":\"value2\"}`.\n\nThe `Status` field is optional, and is omitted if the volume driver\ndoes not support this feature.\n",
                "type" : "object"
              },
              "UsageData" : {
                "description" : "Usage details about the volume. This information is used by the\n`GET /system/df` endpoint, and omitted in other endpoints.\n",
                "nullable" : true,
                "properties" : {
                  "RefCount" : {
                    "default" : -1,
                    "description" : "The number of containers referencing this volume. This field\nis set to `-1` if the reference-count is not available.\n",
                    "nullable" : false,
                    "type" : "integer"
                  },
                  "Size" : {
                    "default" : -1,
                    "description" : "Amount of disk space used by the volume (in bytes). This information\nis only available for volumes created with the `\"local\"` volume\ndriver. For volumes created with other volume drivers, this field\nis set to `-1` (\"not available\")\n",
                    "nullable" : false,
                    "type" : "integer"
                  }
                },
                "required" : [ "Size", "RefCount" ],
                "type" : "object"
              }
            },
            "required" : [ "Name", "Driver", "Mountpoint", "Labels", "Scope", "Options" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "60c6fe01-b6fa-3863-a5cf-f21e1f34f423",
    "name" : "Remove a volume (text/plain)",
    "request" : {
      "urlPath" : "/volumes/Blanch+Mann",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "60c6fe01-b6fa-3863-a5cf-f21e1f34f423",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "ce70da2e-26f3-3369-b70e-83c3856a7335",
    "name" : "Remove a volume (application/json)",
    "request" : {
      "urlPath" : "/volumes/Rayford+Goldner",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce70da2e-26f3-3369-b70e-83c3856a7335",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "c56a16c0-48dd-320a-8823-752f3837ef58",
    "name" : "Remove a volume (text/plain)",
    "request" : {
      "urlPath" : "/volumes/Buster+Metz",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c56a16c0-48dd-320a-8823-752f3837ef58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "a969ae14-61ad-30c5-9a05-e8c7e247b8a1",
    "name" : "Remove a volume (application/json)",
    "request" : {
      "urlPath" : "/volumes/Tarra+Wehner",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a969ae14-61ad-30c5-9a05-e8c7e247b8a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "746a142e-88a0-3ab7-ba1f-871bf12f64a1",
    "name" : "Remove a volume (text/plain)",
    "request" : {
      "urlPath" : "/volumes/Dr.+Laurence+Prosacco",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "746a142e-88a0-3ab7-ba1f-871bf12f64a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "0dc64949-1f8a-3b34-bc89-27d727e9d1ac",
    "name" : "Remove a volume (application/json)",
    "request" : {
      "urlPath" : "/volumes/Matt+Wyman+III",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dc64949-1f8a-3b34-bc89-27d727e9d1ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d892e1c7-4937-3180-bfae-6bbff577015c",
    "name" : "Remove a volume - 204",
    "request" : {
      "urlPath" : "/volumes/Marietta+Kertzmann+Jr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d892e1c7-4937-3180-bfae-6bbff577015c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeDelete"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "204d183b-d8cd-302b-8a8f-f7d1d03bc93b",
    "name" : "Delete unused volumes",
    "request" : {
      "urlPath" : "/volumes/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "204d183b-d8cd-302b-8a8f-f7d1d03bc93b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumePrune",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "b760df38-e723-3f86-97f6-c91896debed1",
    "name" : "Delete unused volumes",
    "request" : {
      "urlPath" : "/volumes/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SpaceReclaimed\" : 8718152824098217492,\n  \"VolumesDeleted\" : [ \"0crcd09ac1yhe3hgnz5glsz44e0kniw361g1ngcecxn934bayle02imqisik0kulzkaxt4sux3yoxrbummtbxis6u7c6k0p77tcumklflk3hc6djbr3nuzpwovxtrcjkenud3hfg6kl28zht6fbessa9xc9otbexxblmwmaifa5qpxvxy3ellml0fph1d9khf41\", \"iornohivveg54hbpbyqs1ilsy9ht93l1t4c564db8xcjo4wiqk6h77sutzgvw9rskkust4sbzzeq42sgrta92gjrg110pnmf3q8r4u1tej5uvy0gtxv4twvehkflwi\", \"gyh1nm0dm7ou0wh9z1h3iykf7mzaop4732ox2lvepp89bmt07x2xa93jfah60llf14ohgkzia1uy11wjf5i4b5isfrwwtsv5g3tp0vggr8vu2xi4z9ahogcwd1jkc\", \"x3y0qggp6r2kup92m1sp1ot1mt9aja8knibjzce1i86flwjlec87kkod4t594ww46fvjt1nefsv46paw8l9v6c4v54jplrjo0svt08widmsfsai9k0k8mbfnutgei28vz9hxrglzo3t2c\", \"thmvsivwjxf1ifas7ts26gntf2mn88dydutz9ioq5xknh0q7dzuie5gpp7p2bfy3d9z08tk5xgnvzmxg71qi9f0xnm09w0ty0rx453y7536n3v05gsk61upufmplq7h63341x0jjmufpch6aabv152evegdeq9nsli28m5mewokejfsh2q156c8833t0mgyrj8wk\", \"5ex7g\", \"58wer\", \"t0mo9tqpv96w138x2o8hziq5hvxtcey50dsc0qxeb82csfm4fs1anz0wzeotzwf8w744ocjk9c6iivj4fi97p234xl06zoer5i62q54p5jkah8sumn2jz7u3vdt307q8rz21luvq68thri4kbwvv8teb50sk4tzwh5oi9i4edr\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b760df38-e723-3f86-97f6-c91896debed1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumePrune",
          "schema" : {
            "properties" : {
              "SpaceReclaimed" : {
                "description" : "Disk space reclaimed in bytes",
                "format" : "int64",
                "type" : "integer"
              },
              "VolumesDeleted" : {
                "description" : "Volumes that were deleted",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7087fa73-76f6-32ea-88a3-c3c57e7d08a5",
    "name" : "Create a volume",
    "request" : {
      "urlPath" : "/volumes/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7087fa73-76f6-32ea-88a3-c3c57e7d08a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "879fb3df-0b73-3736-bc20-aab05059716f",
    "name" : "Create a volume",
    "request" : {
      "urlPath" : "/volumes/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"CreatedAt\" : \"2016-06-07T20:31:11.853781916Z\",\n  \"Driver\" : \"custom\",\n  \"Labels\" : {\n    \"com.example.some-label\" : \"some-value\",\n    \"com.example.some-other-label\" : \"some-other-value\"\n  },\n  \"Mountpoint\" : \"/var/lib/docker/volumes/tardis\",\n  \"Name\" : \"tardis\",\n  \"Scope\" : \"local\",\n  \"Status\" : {\n    \"hello\" : \"world\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "879fb3df-0b73-3736-bc20-aab05059716f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeCreate",
          "schema" : {
            "example" : {
              "CreatedAt" : "2016-06-07T20:31:11.853781916Z",
              "Driver" : "custom",
              "Labels" : {
                "com.example.some-label" : "some-value",
                "com.example.some-other-label" : "some-other-value"
              },
              "Mountpoint" : "/var/lib/docker/volumes/tardis",
              "Name" : "tardis",
              "Scope" : "local",
              "Status" : {
                "hello" : "world"
              }
            },
            "properties" : {
              "CreatedAt" : {
                "description" : "Date/Time the volume was created.",
                "format" : "dateTime",
                "type" : "string"
              },
              "Driver" : {
                "description" : "Name of the volume driver used by the volume.",
                "nullable" : false,
                "type" : "string"
              },
              "Labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "User-defined key/value metadata.",
                "nullable" : false,
                "type" : "object"
              },
              "Mountpoint" : {
                "description" : "Mount path of the volume on the host.",
                "nullable" : false,
                "type" : "string"
              },
              "Name" : {
                "description" : "Name of the volume.",
                "nullable" : false,
                "type" : "string"
              },
              "Options" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The driver specific options used when creating the volume.",
                "type" : "object"
              },
              "Scope" : {
                "default" : "local",
                "description" : "The level at which the volume exists. Either `global` for cluster-wide, or `local` for machine level.",
                "enum" : [ "local", "global" ],
                "nullable" : false,
                "type" : "string"
              },
              "Status" : {
                "additionalProperties" : {
                  "type" : "object"
                },
                "description" : "Low-level details about the volume, provided by the volume driver.\nDetails are returned as a map with key/value pairs:\n`{\"key\":\"value\",\"key2\":\"value2\"}`.\n\nThe `Status` field is optional, and is omitted if the volume driver\ndoes not support this feature.\n",
                "type" : "object"
              },
              "UsageData" : {
                "description" : "Usage details about the volume. This information is used by the\n`GET /system/df` endpoint, and omitted in other endpoints.\n",
                "nullable" : true,
                "properties" : {
                  "RefCount" : {
                    "default" : -1,
                    "description" : "The number of containers referencing this volume. This field\nis set to `-1` if the reference-count is not available.\n",
                    "nullable" : false,
                    "type" : "integer"
                  },
                  "Size" : {
                    "default" : -1,
                    "description" : "Amount of disk space used by the volume (in bytes). This information\nis only available for volumes created with the `\"local\"` volume\ndriver. For volumes created with other volume drivers, this field\nis set to `-1` (\"not available\")\n",
                    "nullable" : false,
                    "type" : "integer"
                  }
                },
                "required" : [ "Size", "RefCount" ],
                "type" : "object"
              }
            },
            "required" : [ "Name", "Driver", "Mountpoint", "Labels", "Scope", "Options" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "e2585fad-36c5-39f5-a2cd-04af5d850b75",
    "name" : "List volumes",
    "request" : {
      "urlPath" : "/volumes",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2585fad-36c5-39f5-a2cd-04af5d850b75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "24de3bdb-ea29-3f5a-9490-0e39bb1de5b2",
    "name" : "List volumes - response",
    "request" : {
      "urlPath" : "/volumes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Volumes\" : [ {\n    \"CreatedAt\" : \"2017-07-19T12:00:26Z\",\n    \"Driver\" : \"local\",\n    \"Labels\" : {\n      \"com.example.some-label\" : \"some-value\",\n      \"com.example.some-other-label\" : \"some-other-value\"\n    },\n    \"Mountpoint\" : \"/var/lib/docker/volumes/tardis\",\n    \"Name\" : \"tardis\",\n    \"Options\" : {\n      \"device\" : \"tmpfs\",\n      \"o\" : \"size=100m,uid=1000\",\n      \"type\" : \"tmpfs\"\n    },\n    \"Scope\" : \"local\"\n  } ],\n  \"Warnings\" : [ ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24de3bdb-ea29-3f5a-9490-0e39bb1de5b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VolumeList",
          "schema" : {
            "properties" : {
              "Volumes" : {
                "description" : "List of volumes",
                "items" : {
                  "$ref" : "#/components/schemas/Volume"
                },
                "nullable" : false,
                "type" : "array"
              },
              "Warnings" : {
                "description" : "Warnings that occurred when fetching the list of volumes",
                "items" : {
                  "type" : "string"
                },
                "nullable" : false,
                "type" : "array"
              }
            },
            "required" : [ "Volumes", "Warnings" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "c03efa2f-cebe-3eaf-aa3c-475fbdfdcf29",
    "name" : "Get version",
    "request" : {
      "urlPath" : "/version",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c03efa2f-cebe-3eaf-aa3c-475fbdfdcf29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemVersion",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "d36427b8-d440-3539-80bc-27ab203167d0",
    "name" : "Get version - response",
    "request" : {
      "urlPath" : "/version",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ApiVersion\" : \"1.27\",\n  \"Arch\" : \"amd64\",\n  \"BuildTime\" : \"2016-06-14T07:09:13.444803460+00:00\",\n  \"Experimental\" : true,\n  \"GitCommit\" : \"deadbee\",\n  \"GoVersion\" : \"go1.7.5\",\n  \"KernelVersion\" : \"3.19.0-23-generic\",\n  \"MinAPIVersion\" : \"1.12\",\n  \"Os\" : \"linux\",\n  \"Version\" : \"17.04.0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d36427b8-d440-3539-80bc-27ab203167d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemVersion",
          "schema" : {
            "properties" : {
              "ApiVersion" : {
                "type" : "string"
              },
              "Arch" : {
                "type" : "string"
              },
              "BuildTime" : {
                "type" : "string"
              },
              "Experimental" : {
                "type" : "boolean"
              },
              "GitCommit" : {
                "type" : "string"
              },
              "GoVersion" : {
                "type" : "string"
              },
              "KernelVersion" : {
                "type" : "string"
              },
              "MinAPIVersion" : {
                "type" : "string"
              },
              "Os" : {
                "type" : "string"
              },
              "Version" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "265f1d7e-2f81-3c14-959e-100c2bc08b4e",
    "name" : "Get task logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/tasks/myj0/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "265f1d7e-2f81-3c14-959e-100c2bc08b4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "b86f7c24-29c7-35e8-a4a0-17436bf89cc7",
    "name" : "Get task logs (application/json)",
    "request" : {
      "urlPath" : "/tasks/bi30/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b86f7c24-29c7-35e8-a4a0-17436bf89cc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "2ab10f94-b596-3644-9e39-cf46d43091b3",
    "name" : "Get task logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/tasks/68ph/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "2ab10f94-b596-3644-9e39-cf46d43091b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "f1544c01-2d1f-3ffe-ac4e-6dc5adf6dc81",
    "name" : "Get task logs (application/json)",
    "request" : {
      "urlPath" : "/tasks/cu53/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1544c01-2d1f-3ffe-ac4e-6dc5adf6dc81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "ccd8952b-12f7-3d72-a953-2d69b6988862",
    "name" : "Get task logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/tasks/qy9x/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "ccd8952b-12f7-3d72-a953-2d69b6988862",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "e0c4907f-52e2-3f96-9e87-3c6c605b4e76",
    "name" : "Get task logs (application/json) - response",
    "request" : {
      "urlPath" : "/tasks/k7ee/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such task: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0c4907f-52e2-3f96-9e87-3c6c605b4e76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "d5dd958e-8378-3663-86d2-e82a002e4aad",
    "name" : "Get task logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/tasks/4ifd/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"sjmpvyxkf833iyaexv824ai4z8fedq9uc3sw7wyr6xgk00b3cs72h0hm2jg874jxi61ufxezvmt9bq3mp2r47yh9xr6e37ydkcd95qqktue790ympl5onmgc1cv21ltzvltbrqdla2fep\"",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "d5dd958e-8378-3663-86d2-e82a002e4aad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "45270f33-0ff2-32f8-8bc2-796a342bb731",
    "name" : "Get task logs (application/json)",
    "request" : {
      "urlPath" : "/tasks/6msn/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"2xc0q33b8z0ldgo4sq7bgnlx55p57r2c5xqty3hyqd0sr9t0nmsp6tne68qxja16submgg1xx6wet9cubeece4osh8crlo8fziat5wh7aaid3wwrqez\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45270f33-0ff2-32f8-8bc2-796a342bb731",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "5605aaa5-92f4-3e2c-9a83-fa38380bb254",
    "name" : "Get task logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/tasks/i79j/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 101,
      "body" : "\"12dl4q5galdlc1zu11ofz3wcveu0onvswfh8e7bowdw0gt4i78mgb0ore0txpre0tx14hm774q0xvrq75i6gv\"",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "5605aaa5-92f4-3e2c-9a83-fa38380bb254",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "5f326003-79b6-3473-9f9e-082f6ea1d9ac",
    "name" : "Get task logs (application/json)",
    "request" : {
      "urlPath" : "/tasks/4w01/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 101,
      "body" : "\"s6tpy6qmxq00x1p3wjjfd4k485vvyewxou2ie6b23xc04m4w3kkviata0yyosxs08afn9wn7my6qn4m758vtn0izf4nnodpzkvhki8jx3p9d9ycz4b8a1a4zee8a1hhf81vlephg0m5xva\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f326003-79b6-3473-9f9e-082f6ea1d9ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskLogs",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "a8aad0f6-4c85-3e1d-bc8c-318fbaa1e885",
    "name" : "Inspect a task",
    "request" : {
      "urlPath" : "/tasks/7xc3",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8aad0f6-4c85-3e1d-bc8c-318fbaa1e885",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "262db448-bd7b-39d5-bdf6-652b22cba070",
    "name" : "Inspect a task",
    "request" : {
      "urlPath" : "/tasks/t851",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "262db448-bd7b-39d5-bdf6-652b22cba070",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "46203c03-f57e-3b5e-b417-ae2d9c505b27",
    "name" : "Inspect a task",
    "request" : {
      "urlPath" : "/tasks/6p71",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46203c03-f57e-3b5e-b417-ae2d9c505b27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "42bfb3c7-210b-33a3-a7d7-dfa933574445",
    "name" : "Inspect a task",
    "request" : {
      "urlPath" : "/tasks/ho26",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"AssignedGenericResources\" : [ {\n    \"DiscreteResourceSpec\" : {\n      \"Kind\" : \"SSD\",\n      \"Value\" : 3\n    }\n  }, {\n    \"NamedResourceSpec\" : {\n      \"Kind\" : \"GPU\",\n      \"Value\" : \"UUID1\"\n    }\n  }, {\n    \"NamedResourceSpec\" : {\n      \"Kind\" : \"GPU\",\n      \"Value\" : \"UUID2\"\n    }\n  } ],\n  \"CreatedAt\" : \"2016-06-07T21:07:31.171892745Z\",\n  \"DesiredState\" : \"running\",\n  \"ID\" : \"0kzzo1i0y4jz6027t0k7aezc7\",\n  \"NetworksAttachments\" : [ {\n    \"Addresses\" : [ \"10.255.0.10/16\" ],\n    \"Network\" : {\n      \"CreatedAt\" : \"2016-06-07T20:31:11.912919752Z\",\n      \"DriverState\" : {\n        \"Name\" : \"overlay\",\n        \"Options\" : {\n          \"com.docker.network.driver.overlay.vxlanid_list\" : \"256\"\n        }\n      },\n      \"ID\" : \"4qvuz4ko70xaltuqbt8956gd1\",\n      \"IPAMOptions\" : {\n        \"Configs\" : [ {\n          \"Gateway\" : \"10.255.0.1\",\n          \"Subnet\" : \"10.255.0.0/16\"\n        } ],\n        \"Driver\" : {\n          \"Name\" : \"default\"\n        }\n      },\n      \"Spec\" : {\n        \"DriverConfiguration\" : { },\n        \"IPAMOptions\" : {\n          \"Configs\" : [ {\n            \"Gateway\" : \"10.255.0.1\",\n            \"Subnet\" : \"10.255.0.0/16\"\n          } ],\n          \"Driver\" : { }\n        },\n        \"Labels\" : {\n          \"com.docker.swarm.internal\" : \"true\"\n        },\n        \"Name\" : \"ingress\"\n      },\n      \"UpdatedAt\" : \"2016-06-07T21:07:29.955277358Z\",\n      \"Version\" : {\n        \"Index\" : 18\n      }\n    }\n  } ],\n  \"NodeID\" : \"60gvrl6tm78dmak4yl7srz94v\",\n  \"ServiceID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Slot\" : 1,\n  \"Spec\" : {\n    \"ContainerSpec\" : {\n      \"Image\" : \"redis\"\n    },\n    \"Placement\" : { },\n    \"Resources\" : {\n      \"Limits\" : { },\n      \"Reservations\" : { }\n    },\n    \"RestartPolicy\" : {\n      \"Condition\" : \"any\",\n      \"MaxAttempts\" : 0\n    }\n  },\n  \"Status\" : {\n    \"ContainerStatus\" : {\n      \"ContainerID\" : \"e5d62702a1b48d01c3e02ca1e0212a250801fa8d67caca0b6f35919ebc12f035\",\n      \"PID\" : 677\n    },\n    \"Message\" : \"started\",\n    \"State\" : \"running\",\n    \"Timestamp\" : \"2016-06-07T21:07:31.290032978Z\"\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:31.376370513Z\",\n  \"Version\" : {\n    \"Index\" : 71\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42bfb3c7-210b-33a3-a7d7-dfa933574445",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskInspect",
          "schema" : {
            "example" : {
              "AssignedGenericResources" : [ {
                "DiscreteResourceSpec" : {
                  "Kind" : "SSD",
                  "Value" : 3
                }
              }, {
                "NamedResourceSpec" : {
                  "Kind" : "GPU",
                  "Value" : "UUID1"
                }
              }, {
                "NamedResourceSpec" : {
                  "Kind" : "GPU",
                  "Value" : "UUID2"
                }
              } ],
              "CreatedAt" : "2016-06-07T21:07:31.171892745Z",
              "DesiredState" : "running",
              "ID" : "0kzzo1i0y4jz6027t0k7aezc7",
              "NetworksAttachments" : [ {
                "Addresses" : [ "10.255.0.10/16" ],
                "Network" : {
                  "CreatedAt" : "2016-06-07T20:31:11.912919752Z",
                  "DriverState" : {
                    "Name" : "overlay",
                    "Options" : {
                      "com.docker.network.driver.overlay.vxlanid_list" : "256"
                    }
                  },
                  "ID" : "4qvuz4ko70xaltuqbt8956gd1",
                  "IPAMOptions" : {
                    "Configs" : [ {
                      "Gateway" : "10.255.0.1",
                      "Subnet" : "10.255.0.0/16"
                    } ],
                    "Driver" : {
                      "Name" : "default"
                    }
                  },
                  "Spec" : {
                    "DriverConfiguration" : { },
                    "IPAMOptions" : {
                      "Configs" : [ {
                        "Gateway" : "10.255.0.1",
                        "Subnet" : "10.255.0.0/16"
                      } ],
                      "Driver" : { }
                    },
                    "Labels" : {
                      "com.docker.swarm.internal" : "true"
                    },
                    "Name" : "ingress"
                  },
                  "UpdatedAt" : "2016-06-07T21:07:29.955277358Z",
                  "Version" : {
                    "Index" : 18
                  }
                }
              } ],
              "NodeID" : "60gvrl6tm78dmak4yl7srz94v",
              "ServiceID" : "9mnpnzenvg8p8tdbtq4wvbkcz",
              "Slot" : 1,
              "Spec" : {
                "ContainerSpec" : {
                  "Image" : "redis"
                },
                "Placement" : { },
                "Resources" : {
                  "Limits" : { },
                  "Reservations" : { }
                },
                "RestartPolicy" : {
                  "Condition" : "any",
                  "MaxAttempts" : 0
                }
              },
              "Status" : {
                "ContainerStatus" : {
                  "ContainerID" : "e5d62702a1b48d01c3e02ca1e0212a250801fa8d67caca0b6f35919ebc12f035",
                  "PID" : 677
                },
                "Message" : "started",
                "State" : "running",
                "Timestamp" : "2016-06-07T21:07:31.290032978Z"
              },
              "UpdatedAt" : "2016-06-07T21:07:31.376370513Z",
              "Version" : {
                "Index" : 71
              }
            },
            "properties" : {
              "AssignedGenericResources" : {
                "$ref" : "#/components/schemas/GenericResources"
              },
              "CreatedAt" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "DesiredState" : {
                "$ref" : "#/components/schemas/TaskState"
              },
              "ID" : {
                "description" : "The ID of the task.",
                "type" : "string"
              },
              "Labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "User-defined key/value metadata.",
                "type" : "object"
              },
              "Name" : {
                "description" : "Name of the task.",
                "type" : "string"
              },
              "NodeID" : {
                "description" : "The ID of the node that this task is on.",
                "type" : "string"
              },
              "ServiceID" : {
                "description" : "The ID of the service this task is part of.",
                "type" : "string"
              },
              "Slot" : {
                "type" : "integer"
              },
              "Spec" : {
                "$ref" : "#/components/schemas/TaskSpec"
              },
              "Status" : {
                "properties" : {
                  "ContainerStatus" : {
                    "properties" : {
                      "ContainerID" : {
                        "type" : "string"
                      },
                      "ExitCode" : {
                        "type" : "integer"
                      },
                      "PID" : {
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "Err" : {
                    "type" : "string"
                  },
                  "Message" : {
                    "type" : "string"
                  },
                  "State" : {
                    "$ref" : "#/components/schemas/TaskState"
                  },
                  "Timestamp" : {
                    "format" : "dateTime",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "UpdatedAt" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "Version" : {
                "$ref" : "#/components/schemas/ObjectVersion"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "c693782b-eb24-3be4-bbfd-c1abc78fb3ab",
    "name" : "List tasks",
    "request" : {
      "urlPath" : "/tasks",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c693782b-eb24-3be4-bbfd-c1abc78fb3ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "84659584-7d14-3f91-b093-b6f7f849030d",
    "name" : "List tasks",
    "request" : {
      "urlPath" : "/tasks",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84659584-7d14-3f91-b093-b6f7f849030d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "0ba5539f-49e6-381a-b253-64c8998394ee",
    "name" : "List tasks",
    "request" : {
      "urlPath" : "/tasks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"CreatedAt\" : \"2016-06-07T21:07:31.171892745Z\",\n  \"DesiredState\" : \"running\",\n  \"ID\" : \"0kzzo1i0y4jz6027t0k7aezc7\",\n  \"NetworksAttachments\" : [ {\n    \"Addresses\" : [ \"10.255.0.10/16\" ],\n    \"Network\" : {\n      \"CreatedAt\" : \"2016-06-07T20:31:11.912919752Z\",\n      \"DriverState\" : {\n        \"Name\" : \"overlay\",\n        \"Options\" : {\n          \"com.docker.network.driver.overlay.vxlanid_list\" : \"256\"\n        }\n      },\n      \"ID\" : \"4qvuz4ko70xaltuqbt8956gd1\",\n      \"IPAMOptions\" : {\n        \"Configs\" : [ {\n          \"Gateway\" : \"10.255.0.1\",\n          \"Subnet\" : \"10.255.0.0/16\"\n        } ],\n        \"Driver\" : {\n          \"Name\" : \"default\"\n        }\n      },\n      \"Spec\" : {\n        \"DriverConfiguration\" : { },\n        \"IPAMOptions\" : {\n          \"Configs\" : [ {\n            \"Gateway\" : \"10.255.0.1\",\n            \"Subnet\" : \"10.255.0.0/16\"\n          } ],\n          \"Driver\" : { }\n        },\n        \"Labels\" : {\n          \"com.docker.swarm.internal\" : \"true\"\n        },\n        \"Name\" : \"ingress\"\n      },\n      \"UpdatedAt\" : \"2016-06-07T21:07:29.955277358Z\",\n      \"Version\" : {\n        \"Index\" : 18\n      }\n    }\n  } ],\n  \"NodeID\" : \"60gvrl6tm78dmak4yl7srz94v\",\n  \"ServiceID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Slot\" : 1,\n  \"Spec\" : {\n    \"ContainerSpec\" : {\n      \"Image\" : \"redis\"\n    },\n    \"Placement\" : { },\n    \"Resources\" : {\n      \"Limits\" : { },\n      \"Reservations\" : { }\n    },\n    \"RestartPolicy\" : {\n      \"Condition\" : \"any\",\n      \"MaxAttempts\" : 0\n    }\n  },\n  \"Status\" : {\n    \"ContainerStatus\" : {\n      \"ContainerID\" : \"e5d62702a1b48d01c3e02ca1e0212a250801fa8d67caca0b6f35919ebc12f035\",\n      \"PID\" : 677\n    },\n    \"Message\" : \"started\",\n    \"State\" : \"running\",\n    \"Timestamp\" : \"2016-06-07T21:07:31.290032978Z\"\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:31.376370513Z\",\n  \"Version\" : {\n    \"Index\" : 71\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:07:30.019104782Z\",\n  \"DesiredState\" : \"shutdown\",\n  \"ID\" : \"1yljwbmlr8er2waf8orvqpwms\",\n  \"Name\" : \"hopeful_cori\",\n  \"NetworksAttachments\" : [ {\n    \"Addresses\" : [ \"10.255.0.5/16\" ],\n    \"Network\" : {\n      \"CreatedAt\" : \"2016-06-07T20:31:11.912919752Z\",\n      \"DriverState\" : {\n        \"Name\" : \"overlay\",\n        \"Options\" : {\n          \"com.docker.network.driver.overlay.vxlanid_list\" : \"256\"\n        }\n      },\n      \"ID\" : \"4qvuz4ko70xaltuqbt8956gd1\",\n      \"IPAMOptions\" : {\n        \"Configs\" : [ {\n          \"Gateway\" : \"10.255.0.1\",\n          \"Subnet\" : \"10.255.0.0/16\"\n        } ],\n        \"Driver\" : {\n          \"Name\" : \"default\"\n        }\n      },\n      \"Spec\" : {\n        \"DriverConfiguration\" : { },\n        \"IPAMOptions\" : {\n          \"Configs\" : [ {\n            \"Gateway\" : \"10.255.0.1\",\n            \"Subnet\" : \"10.255.0.0/16\"\n          } ],\n          \"Driver\" : { }\n        },\n        \"Labels\" : {\n          \"com.docker.swarm.internal\" : \"true\"\n        },\n        \"Name\" : \"ingress\"\n      },\n      \"UpdatedAt\" : \"2016-06-07T21:07:29.955277358Z\",\n      \"Version\" : {\n        \"Index\" : 18\n      }\n    }\n  } ],\n  \"NodeID\" : \"60gvrl6tm78dmak4yl7srz94v\",\n  \"ServiceID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Slot\" : 1,\n  \"Spec\" : {\n    \"ContainerSpec\" : {\n      \"Image\" : \"redis\"\n    },\n    \"Placement\" : { },\n    \"Resources\" : {\n      \"Limits\" : { },\n      \"Reservations\" : { }\n    },\n    \"RestartPolicy\" : {\n      \"Condition\" : \"any\",\n      \"MaxAttempts\" : 0\n    }\n  },\n  \"Status\" : {\n    \"ContainerStatus\" : {\n      \"ContainerID\" : \"1cf8d63d18e79668b0004a4be4c6ee58cddfad2dae29506d8781581d0688a213\"\n    },\n    \"Message\" : \"shutdown\",\n    \"State\" : \"shutdown\",\n    \"Timestamp\" : \"2016-06-07T21:07:30.202183143Z\"\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:30.231958098Z\",\n  \"Version\" : {\n    \"Index\" : 30\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ba5539f-49e6-381a-b253-64c8998394ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TaskList",
          "schema" : {
            "example" : [ {
              "CreatedAt" : "2016-06-07T21:07:31.171892745Z",
              "DesiredState" : "running",
              "ID" : "0kzzo1i0y4jz6027t0k7aezc7",
              "NetworksAttachments" : [ {
                "Addresses" : [ "10.255.0.10/16" ],
                "Network" : {
                  "CreatedAt" : "2016-06-07T20:31:11.912919752Z",
                  "DriverState" : {
                    "Name" : "overlay",
                    "Options" : {
                      "com.docker.network.driver.overlay.vxlanid_list" : "256"
                    }
                  },
                  "ID" : "4qvuz4ko70xaltuqbt8956gd1",
                  "IPAMOptions" : {
                    "Configs" : [ {
                      "Gateway" : "10.255.0.1",
                      "Subnet" : "10.255.0.0/16"
                    } ],
                    "Driver" : {
                      "Name" : "default"
                    }
                  },
                  "Spec" : {
                    "DriverConfiguration" : { },
                    "IPAMOptions" : {
                      "Configs" : [ {
                        "Gateway" : "10.255.0.1",
                        "Subnet" : "10.255.0.0/16"
                      } ],
                      "Driver" : { }
                    },
                    "Labels" : {
                      "com.docker.swarm.internal" : "true"
                    },
                    "Name" : "ingress"
                  },
                  "UpdatedAt" : "2016-06-07T21:07:29.955277358Z",
                  "Version" : {
                    "Index" : 18
                  }
                }
              } ],
              "NodeID" : "60gvrl6tm78dmak4yl7srz94v",
              "ServiceID" : "9mnpnzenvg8p8tdbtq4wvbkcz",
              "Slot" : 1,
              "Spec" : {
                "ContainerSpec" : {
                  "Image" : "redis"
                },
                "Placement" : { },
                "Resources" : {
                  "Limits" : { },
                  "Reservations" : { }
                },
                "RestartPolicy" : {
                  "Condition" : "any",
                  "MaxAttempts" : 0
                }
              },
              "Status" : {
                "ContainerStatus" : {
                  "ContainerID" : "e5d62702a1b48d01c3e02ca1e0212a250801fa8d67caca0b6f35919ebc12f035",
                  "PID" : 677
                },
                "Message" : "started",
                "State" : "running",
                "Timestamp" : "2016-06-07T21:07:31.290032978Z"
              },
              "UpdatedAt" : "2016-06-07T21:07:31.376370513Z",
              "Version" : {
                "Index" : 71
              }
            }, {
              "CreatedAt" : "2016-06-07T21:07:30.019104782Z",
              "DesiredState" : "shutdown",
              "ID" : "1yljwbmlr8er2waf8orvqpwms",
              "Name" : "hopeful_cori",
              "NetworksAttachments" : [ {
                "Addresses" : [ "10.255.0.5/16" ],
                "Network" : {
                  "CreatedAt" : "2016-06-07T20:31:11.912919752Z",
                  "DriverState" : {
                    "Name" : "overlay",
                    "Options" : {
                      "com.docker.network.driver.overlay.vxlanid_list" : "256"
                    }
                  },
                  "ID" : "4qvuz4ko70xaltuqbt8956gd1",
                  "IPAMOptions" : {
                    "Configs" : [ {
                      "Gateway" : "10.255.0.1",
                      "Subnet" : "10.255.0.0/16"
                    } ],
                    "Driver" : {
                      "Name" : "default"
                    }
                  },
                  "Spec" : {
                    "DriverConfiguration" : { },
                    "IPAMOptions" : {
                      "Configs" : [ {
                        "Gateway" : "10.255.0.1",
                        "Subnet" : "10.255.0.0/16"
                      } ],
                      "Driver" : { }
                    },
                    "Labels" : {
                      "com.docker.swarm.internal" : "true"
                    },
                    "Name" : "ingress"
                  },
                  "UpdatedAt" : "2016-06-07T21:07:29.955277358Z",
                  "Version" : {
                    "Index" : 18
                  }
                }
              } ],
              "NodeID" : "60gvrl6tm78dmak4yl7srz94v",
              "ServiceID" : "9mnpnzenvg8p8tdbtq4wvbkcz",
              "Slot" : 1,
              "Spec" : {
                "ContainerSpec" : {
                  "Image" : "redis"
                },
                "Placement" : { },
                "Resources" : {
                  "Limits" : { },
                  "Reservations" : { }
                },
                "RestartPolicy" : {
                  "Condition" : "any",
                  "MaxAttempts" : 0
                }
              },
              "Status" : {
                "ContainerStatus" : {
                  "ContainerID" : "1cf8d63d18e79668b0004a4be4c6ee58cddfad2dae29506d8781581d0688a213"
                },
                "Message" : "shutdown",
                "State" : "shutdown",
                "Timestamp" : "2016-06-07T21:07:30.202183143Z"
              },
              "UpdatedAt" : "2016-06-07T21:07:30.231958098Z",
              "Version" : {
                "Index" : 30
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/Task"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "835d8a9a-a7aa-3b19-9c1b-5900d881825d",
    "name" : "Get data usage information (text/plain)",
    "request" : {
      "urlPath" : "/system/df",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "835d8a9a-a7aa-3b19-9c1b-5900d881825d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemDataUsage",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "3873149b-caee-3069-8440-9b9623fb0a10",
    "name" : "Get data usage information (application/json)",
    "request" : {
      "urlPath" : "/system/df",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3873149b-caee-3069-8440-9b9623fb0a10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemDataUsage",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "1e607579-c930-3f2b-80ec-54bbc3429ec0",
    "name" : "Get data usage information (text/plain)",
    "request" : {
      "urlPath" : "/system/df",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Containers\" : [ {\n    \"Command\" : \"top\",\n    \"Created\" : 1472592424,\n    \"HostConfig\" : {\n      \"NetworkMode\" : \"default\"\n    },\n    \"Id\" : \"e575172ed11dc01bfce087fb27bee502db149e1a0fad7c296ad300bbff178148\",\n    \"Image\" : \"busybox\",\n    \"ImageID\" : \"sha256:2b8fd9751c4c0f5dd266fcae00707e67a2545ef34f9a29354585f93dac906749\",\n    \"Labels\" : { },\n    \"Mounts\" : [ ],\n    \"Names\" : [ \"/top\" ],\n    \"NetworkSettings\" : {\n      \"Networks\" : {\n        \"bridge\" : {\n          \"Aliases\" : null,\n          \"EndpointID\" : \"8ed5115aeaad9abb174f68dcf135b49f11daf597678315231a32ca28441dec6a\",\n          \"Gateway\" : \"172.18.0.1\",\n          \"GlobalIPv6Address\" : \"\",\n          \"GlobalIPv6PrefixLen\" : 0,\n          \"IPAMConfig\" : null,\n          \"IPAddress\" : \"172.18.0.2\",\n          \"IPPrefixLen\" : 16,\n          \"IPv6Gateway\" : \"\",\n          \"Links\" : null,\n          \"MacAddress\" : \"02:42:ac:12:00:02\",\n          \"NetworkID\" : \"d687bc59335f0e5c9ee8193e5612e8aee000c8c62ea170cfb99c098f95899d92\"\n        }\n      }\n    },\n    \"Ports\" : [ ],\n    \"SizeRootFs\" : 1092588,\n    \"State\" : \"exited\",\n    \"Status\" : \"Exited (0) 56 minutes ago\"\n  } ],\n  \"Images\" : [ {\n    \"Containers\" : 1,\n    \"Created\" : 1466724217,\n    \"Id\" : \"sha256:2b8fd9751c4c0f5dd266fcae00707e67a2545ef34f9a29354585f93dac906749\",\n    \"Labels\" : { },\n    \"ParentId\" : \"\",\n    \"RepoDigests\" : [ \"busybox@sha256:a59906e33509d14c036c8678d687bd4eec81ed7c4b8ce907b888c607f6a1e0e6\" ],\n    \"RepoTags\" : [ \"busybox:latest\" ],\n    \"SharedSize\" : 0,\n    \"Size\" : 1092588,\n    \"VirtualSize\" : 1092588\n  } ],\n  \"LayersSize\" : 1092588,\n  \"Volumes\" : [ {\n    \"Driver\" : \"local\",\n    \"Labels\" : null,\n    \"Mountpoint\" : \"/var/lib/docker/volumes/my-volume/_data\",\n    \"Name\" : \"my-volume\",\n    \"Options\" : null,\n    \"Scope\" : \"local\",\n    \"UsageData\" : {\n      \"RefCount\" : 2,\n      \"Size\" : 10920104\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "1e607579-c930-3f2b-80ec-54bbc3429ec0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemDataUsage",
          "schema" : {
            "example" : {
              "Containers" : [ {
                "Command" : "top",
                "Created" : 1472592424,
                "HostConfig" : {
                  "NetworkMode" : "default"
                },
                "Id" : "e575172ed11dc01bfce087fb27bee502db149e1a0fad7c296ad300bbff178148",
                "Image" : "busybox",
                "ImageID" : "sha256:2b8fd9751c4c0f5dd266fcae00707e67a2545ef34f9a29354585f93dac906749",
                "Labels" : { },
                "Mounts" : [ ],
                "Names" : [ "/top" ],
                "NetworkSettings" : {
                  "Networks" : {
                    "bridge" : {
                      "EndpointID" : "8ed5115aeaad9abb174f68dcf135b49f11daf597678315231a32ca28441dec6a",
                      "Gateway" : "172.18.0.1",
                      "GlobalIPv6Address" : "",
                      "GlobalIPv6PrefixLen" : 0,
                      "IPAddress" : "172.18.0.2",
                      "IPPrefixLen" : 16,
                      "IPv6Gateway" : "",
                      "MacAddress" : "02:42:ac:12:00:02",
                      "NetworkID" : "d687bc59335f0e5c9ee8193e5612e8aee000c8c62ea170cfb99c098f95899d92"
                    }
                  }
                },
                "Ports" : [ ],
                "SizeRootFs" : 1092588,
                "State" : "exited",
                "Status" : "Exited (0) 56 minutes ago"
              } ],
              "Images" : [ {
                "Containers" : 1,
                "Created" : 1466724217,
                "Id" : "sha256:2b8fd9751c4c0f5dd266fcae00707e67a2545ef34f9a29354585f93dac906749",
                "Labels" : { },
                "ParentId" : "",
                "RepoDigests" : [ "busybox@sha256:a59906e33509d14c036c8678d687bd4eec81ed7c4b8ce907b888c607f6a1e0e6" ],
                "RepoTags" : [ "busybox:latest" ],
                "SharedSize" : 0,
                "Size" : 1092588,
                "VirtualSize" : 1092588
              } ],
              "LayersSize" : 1092588,
              "Volumes" : [ {
                "Driver" : "local",
                "Mountpoint" : "/var/lib/docker/volumes/my-volume/_data",
                "Name" : "my-volume",
                "Scope" : "local",
                "UsageData" : {
                  "RefCount" : 2,
                  "Size" : 10920104
                }
              } ]
            },
            "properties" : {
              "Containers" : {
                "items" : {
                  "$ref" : "#/components/schemas/ContainerSummary"
                },
                "type" : "array"
              },
              "Images" : {
                "items" : {
                  "$ref" : "#/components/schemas/ImageSummary"
                },
                "type" : "array"
              },
              "LayersSize" : {
                "format" : "int64",
                "type" : "integer"
              },
              "Volumes" : {
                "items" : {
                  "$ref" : "#/components/schemas/Volume"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "2ce7619e-c197-3341-8047-c1d7f7418c4c",
    "name" : "Get data usage information (application/json)",
    "request" : {
      "urlPath" : "/system/df",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Containers\" : [ {\n    \"Command\" : \"top\",\n    \"Created\" : 1472592424,\n    \"HostConfig\" : {\n      \"NetworkMode\" : \"default\"\n    },\n    \"Id\" : \"e575172ed11dc01bfce087fb27bee502db149e1a0fad7c296ad300bbff178148\",\n    \"Image\" : \"busybox\",\n    \"ImageID\" : \"sha256:2b8fd9751c4c0f5dd266fcae00707e67a2545ef34f9a29354585f93dac906749\",\n    \"Labels\" : { },\n    \"Mounts\" : [ ],\n    \"Names\" : [ \"/top\" ],\n    \"NetworkSettings\" : {\n      \"Networks\" : {\n        \"bridge\" : {\n          \"Aliases\" : null,\n          \"EndpointID\" : \"8ed5115aeaad9abb174f68dcf135b49f11daf597678315231a32ca28441dec6a\",\n          \"Gateway\" : \"172.18.0.1\",\n          \"GlobalIPv6Address\" : \"\",\n          \"GlobalIPv6PrefixLen\" : 0,\n          \"IPAMConfig\" : null,\n          \"IPAddress\" : \"172.18.0.2\",\n          \"IPPrefixLen\" : 16,\n          \"IPv6Gateway\" : \"\",\n          \"Links\" : null,\n          \"MacAddress\" : \"02:42:ac:12:00:02\",\n          \"NetworkID\" : \"d687bc59335f0e5c9ee8193e5612e8aee000c8c62ea170cfb99c098f95899d92\"\n        }\n      }\n    },\n    \"Ports\" : [ ],\n    \"SizeRootFs\" : 1092588,\n    \"State\" : \"exited\",\n    \"Status\" : \"Exited (0) 56 minutes ago\"\n  } ],\n  \"Images\" : [ {\n    \"Containers\" : 1,\n    \"Created\" : 1466724217,\n    \"Id\" : \"sha256:2b8fd9751c4c0f5dd266fcae00707e67a2545ef34f9a29354585f93dac906749\",\n    \"Labels\" : { },\n    \"ParentId\" : \"\",\n    \"RepoDigests\" : [ \"busybox@sha256:a59906e33509d14c036c8678d687bd4eec81ed7c4b8ce907b888c607f6a1e0e6\" ],\n    \"RepoTags\" : [ \"busybox:latest\" ],\n    \"SharedSize\" : 0,\n    \"Size\" : 1092588,\n    \"VirtualSize\" : 1092588\n  } ],\n  \"LayersSize\" : 1092588,\n  \"Volumes\" : [ {\n    \"Driver\" : \"local\",\n    \"Labels\" : null,\n    \"Mountpoint\" : \"/var/lib/docker/volumes/my-volume/_data\",\n    \"Name\" : \"my-volume\",\n    \"Options\" : null,\n    \"Scope\" : \"local\",\n    \"UsageData\" : {\n      \"RefCount\" : 2,\n      \"Size\" : 10920104\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ce7619e-c197-3341-8047-c1d7f7418c4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemDataUsage",
          "schema" : {
            "example" : {
              "Containers" : [ {
                "Command" : "top",
                "Created" : 1472592424,
                "HostConfig" : {
                  "NetworkMode" : "default"
                },
                "Id" : "e575172ed11dc01bfce087fb27bee502db149e1a0fad7c296ad300bbff178148",
                "Image" : "busybox",
                "ImageID" : "sha256:2b8fd9751c4c0f5dd266fcae00707e67a2545ef34f9a29354585f93dac906749",
                "Labels" : { },
                "Mounts" : [ ],
                "Names" : [ "/top" ],
                "NetworkSettings" : {
                  "Networks" : {
                    "bridge" : {
                      "EndpointID" : "8ed5115aeaad9abb174f68dcf135b49f11daf597678315231a32ca28441dec6a",
                      "Gateway" : "172.18.0.1",
                      "GlobalIPv6Address" : "",
                      "GlobalIPv6PrefixLen" : 0,
                      "IPAddress" : "172.18.0.2",
                      "IPPrefixLen" : 16,
                      "IPv6Gateway" : "",
                      "MacAddress" : "02:42:ac:12:00:02",
                      "NetworkID" : "d687bc59335f0e5c9ee8193e5612e8aee000c8c62ea170cfb99c098f95899d92"
                    }
                  }
                },
                "Ports" : [ ],
                "SizeRootFs" : 1092588,
                "State" : "exited",
                "Status" : "Exited (0) 56 minutes ago"
              } ],
              "Images" : [ {
                "Containers" : 1,
                "Created" : 1466724217,
                "Id" : "sha256:2b8fd9751c4c0f5dd266fcae00707e67a2545ef34f9a29354585f93dac906749",
                "Labels" : { },
                "ParentId" : "",
                "RepoDigests" : [ "busybox@sha256:a59906e33509d14c036c8678d687bd4eec81ed7c4b8ce907b888c607f6a1e0e6" ],
                "RepoTags" : [ "busybox:latest" ],
                "SharedSize" : 0,
                "Size" : 1092588,
                "VirtualSize" : 1092588
              } ],
              "LayersSize" : 1092588,
              "Volumes" : [ {
                "Driver" : "local",
                "Mountpoint" : "/var/lib/docker/volumes/my-volume/_data",
                "Name" : "my-volume",
                "Scope" : "local",
                "UsageData" : {
                  "RefCount" : 2,
                  "Size" : 10920104
                }
              } ]
            },
            "properties" : {
              "Containers" : {
                "items" : {
                  "$ref" : "#/components/schemas/ContainerSummary"
                },
                "type" : "array"
              },
              "Images" : {
                "items" : {
                  "$ref" : "#/components/schemas/ImageSummary"
                },
                "type" : "array"
              },
              "LayersSize" : {
                "format" : "int64",
                "type" : "integer"
              },
              "Volumes" : {
                "items" : {
                  "$ref" : "#/components/schemas/Volume"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "63365aec-f9c6-3c87-97f8-cc3e095f9fd3",
    "name" : "Update a swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "3149303744364736116"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "63365aec-f9c6-3c87-97f8-cc3e095f9fd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "1f6c5b62-7e3b-37e7-bb58-a27db0c17e2e",
    "name" : "Update a swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "1622119441289436563"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f6c5b62-7e3b-37e7-bb58-a27db0c17e2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "57358c9f-79db-3ea4-896b-a3ebdc0758f8",
    "name" : "Update a swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "2380885871330580566"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "57358c9f-79db-3ea4-896b-a3ebdc0758f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "3e535387-f867-3326-a291-7aa581d2e34a",
    "name" : "Update a swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "5130194613564964204"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e535387-f867-3326-a291-7aa581d2e34a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "f31721c9-e039-3dd2-b952-540f4ed5f191",
    "name" : "Update a swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "165320660002912193"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "f31721c9-e039-3dd2-b952-540f4ed5f191",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "bdb0fb18-f0c2-33d3-b4e6-08d6197dbeda",
    "name" : "Update a swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "1755477088884295399"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdb0fb18-f0c2-33d3-b4e6-08d6197dbeda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "cf82e83d-d183-3558-8c36-214c456f5a94",
    "name" : "Update a swarm - 200",
    "request" : {
      "urlPath" : "/swarm/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "575314620737156555"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cf82e83d-d183-3558-8c36-214c456f5a94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUpdate"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "9a7deda4-b69d-3bdb-a21c-d58eedc10afa",
    "name" : "Get the unlock key (text/plain)",
    "request" : {
      "urlPath" : "/swarm/unlockkey",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "9a7deda4-b69d-3bdb-a21c-d58eedc10afa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlockkey",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "32718426-1c75-33d7-892b-1e5434dbdb04",
    "name" : "Get the unlock key (application/json)",
    "request" : {
      "urlPath" : "/swarm/unlockkey",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32718426-1c75-33d7-892b-1e5434dbdb04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlockkey",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "6cc48a79-5594-39f2-8d84-62e0b8df3c09",
    "name" : "Get the unlock key (text/plain)",
    "request" : {
      "urlPath" : "/swarm/unlockkey",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "6cc48a79-5594-39f2-8d84-62e0b8df3c09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlockkey",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "1bdaca69-3ebf-3ebd-af7a-602cb9c8dac8",
    "name" : "Get the unlock key (application/json)",
    "request" : {
      "urlPath" : "/swarm/unlockkey",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bdaca69-3ebf-3ebd-af7a-602cb9c8dac8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlockkey",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "e91d1dac-27d0-3405-be53-0c39601aa853",
    "name" : "Get the unlock key (text/plain)",
    "request" : {
      "urlPath" : "/swarm/unlockkey",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"UnlockKey\" : \"SWMKEY-1-7c37Cc8654o6p38HnroywCi19pllOnGtbdZEgtKxZu8\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "e91d1dac-27d0-3405-be53-0c39601aa853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlockkey",
          "schema" : {
            "example" : {
              "UnlockKey" : "SWMKEY-1-7c37Cc8654o6p38HnroywCi19pllOnGtbdZEgtKxZu8"
            },
            "properties" : {
              "UnlockKey" : {
                "description" : "The swarm's unlock key.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "537263be-2f4d-3dba-8639-05332d09959b",
    "name" : "Get the unlock key (application/json)",
    "request" : {
      "urlPath" : "/swarm/unlockkey",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"UnlockKey\" : \"SWMKEY-1-7c37Cc8654o6p38HnroywCi19pllOnGtbdZEgtKxZu8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "537263be-2f4d-3dba-8639-05332d09959b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlockkey",
          "schema" : {
            "example" : {
              "UnlockKey" : "SWMKEY-1-7c37Cc8654o6p38HnroywCi19pllOnGtbdZEgtKxZu8"
            },
            "properties" : {
              "UnlockKey" : {
                "description" : "The swarm's unlock key.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "dd4cb971-0b6c-305a-9c42-981a454bd0ea",
    "name" : "Unlock a locked manager (application/json)",
    "request" : {
      "urlPath" : "/swarm/unlock",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd4cb971-0b6c-305a-9c42-981a454bd0ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlock",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "e896c0a8-cca5-3747-b70d-3d61ec0d0dc1",
    "name" : "Unlock a locked manager (application/json)",
    "request" : {
      "urlPath" : "/swarm/unlock",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e896c0a8-cca5-3747-b70d-3d61ec0d0dc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlock",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "65933adc-6edc-3ebf-b22c-64cfbf9288f1",
    "name" : "Unlock a locked manager - 200",
    "request" : {
      "urlPath" : "/swarm/unlock",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "65933adc-6edc-3ebf-b22c-64cfbf9288f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmUnlock"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "22140589-abe7-3189-a500-023e622d7a4d",
    "name" : "Leave a swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/leave",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "22140589-abe7-3189-a500-023e622d7a4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmLeave",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "1b3fa534-f1af-3117-988d-753b059df6ff",
    "name" : "Leave a swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/leave",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b3fa534-f1af-3117-988d-753b059df6ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmLeave",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "aa5ea2bb-7c76-3ed8-8cd9-e8ebec3c9dfb",
    "name" : "Leave a swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/leave",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "aa5ea2bb-7c76-3ed8-8cd9-e8ebec3c9dfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmLeave",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "3c2bb953-96ce-3a3b-94b1-de70b5873f7b",
    "name" : "Leave a swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/leave",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c2bb953-96ce-3a3b-94b1-de70b5873f7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmLeave",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "bab01847-2561-3344-adb3-91ba7b54b811",
    "name" : "Leave a swarm - 200",
    "request" : {
      "urlPath" : "/swarm/leave",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bab01847-2561-3344-adb3-91ba7b54b811",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmLeave"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "911a1d5c-72c2-361c-a3b5-4fa07efed0de",
    "name" : "Join an existing swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/join",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "911a1d5c-72c2-361c-a3b5-4fa07efed0de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmJoin",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "bcad58b0-abcd-3ce9-bf77-2f490dededd6",
    "name" : "Join an existing swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/join",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcad58b0-abcd-3ce9-bf77-2f490dededd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmJoin",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "b1821ac3-f4c9-3ed4-8dfb-e71694b526f1",
    "name" : "Join an existing swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/join",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "b1821ac3-f4c9-3ed4-8dfb-e71694b526f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmJoin",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "5e2e4446-6055-3972-b0fa-6da9279a1f30",
    "name" : "Join an existing swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/join",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e2e4446-6055-3972-b0fa-6da9279a1f30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmJoin",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "6a34376a-505a-376a-9166-16aef15c0d6d",
    "name" : "Join an existing swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/join",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "6a34376a-505a-376a-9166-16aef15c0d6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmJoin",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "78def572-6d8f-3d2e-bc21-a6bc1d337101",
    "name" : "Join an existing swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/join",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78def572-6d8f-3d2e-bc21-a6bc1d337101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmJoin",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "9fa5a5a4-929f-3eb0-b45a-faebafd40ba8",
    "name" : "Join an existing swarm - 200",
    "request" : {
      "urlPath" : "/swarm/join",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9fa5a5a4-929f-3eb0-b45a-faebafd40ba8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmJoin"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "4e78af70-1201-3006-afe4-bd8b67b0f197",
    "name" : "Initialize a new swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/init",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "4e78af70-1201-3006-afe4-bd8b67b0f197",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInit",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "096bfdba-9760-3bd5-a069-19703e3e9281",
    "name" : "Initialize a new swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/init",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "096bfdba-9760-3bd5-a069-19703e3e9281",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInit",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "0ded204f-ed5a-318a-af9f-5cc4ab9086ed",
    "name" : "Initialize a new swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/init",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "0ded204f-ed5a-318a-af9f-5cc4ab9086ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInit",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "57b2a0df-f177-3472-8304-f9f91134e5c1",
    "name" : "Initialize a new swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/init",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57b2a0df-f177-3472-8304-f9f91134e5c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInit",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "8598b8c7-112f-3d1c-aa0b-05f7e107e264",
    "name" : "Initialize a new swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/init",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "8598b8c7-112f-3d1c-aa0b-05f7e107e264",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInit",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "01ddfc54-4b55-3ce8-8405-978fe4c3989e",
    "name" : "Initialize a new swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/init",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01ddfc54-4b55-3ce8-8405-978fe4c3989e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInit",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "7ec956bc-7775-388d-88c0-8189e47f293a",
    "name" : "Initialize a new swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm/init",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"7v2t30z9blmxuhnyo6s4cpenp\"",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "7ec956bc-7775-388d-88c0-8189e47f293a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInit",
          "schema" : {
            "description" : "The node ID",
            "example" : "7v2t30z9blmxuhnyo6s4cpenp",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "9603186d-0b1b-30f6-a579-9604b2998780",
    "name" : "Initialize a new swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm/init",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"7v2t30z9blmxuhnyo6s4cpenp\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9603186d-0b1b-30f6-a579-9604b2998780",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInit",
          "schema" : {
            "description" : "The node ID",
            "example" : "7v2t30z9blmxuhnyo6s4cpenp",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "53dd4373-67a3-3157-8c72-b9ded9e8e063",
    "name" : "Inspect swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "53dd4373-67a3-3157-8c72-b9ded9e8e063",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "5145e25f-7fbf-3a18-b083-cdb9ef4a9db6",
    "name" : "Inspect swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5145e25f-7fbf-3a18-b083-cdb9ef4a9db6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "fb443045-9a96-3253-b9c1-9c95e1a8a6ef",
    "name" : "Inspect swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "fb443045-9a96-3253-b9c1-9c95e1a8a6ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "9d5fa876-fc54-3df6-9be5-7804a5bf02a8",
    "name" : "Inspect swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d5fa876-fc54-3df6-9be5-7804a5bf02a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "c9a53990-02f2-3cff-8dac-de5ae79c1839",
    "name" : "Inspect swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c9a53990-02f2-3cff-8dac-de5ae79c1839",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "bb19e0ae-1ddf-35af-8ea3-48dd0eac1b14",
    "name" : "Inspect swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb19e0ae-1ddf-35af-8ea3-48dd0eac1b14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "89e7aef2-5fd9-3eb1-b735-ef7472782add",
    "name" : "Inspect swarm (text/plain)",
    "request" : {
      "urlPath" : "/swarm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"JoinTokens\" : {\n    \"Worker\" : \"SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-1awxwuwd3z9j1z3puu7rcgdbx\",\n    \"Manager\" : \"SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-7p73s1dx5in4tatdymyhg9hu2\"\n  },\n  \"RootRotationInProgress\" : false,\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"TLSInfo\" : {\n    \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n    \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n    \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n  },\n  \"ID\" : \"abajmipo7b4xz5ip2nrla6b11\",\n  \"Spec\" : {\n    \"Orchestration\" : {\n      \"TaskHistoryRetentionLimit\" : 10\n    },\n    \"CAConfig\" : {\n      \"SigningCACert\" : \"66hml4rprxd58e829igpp42lf3npa215far7c922uxriema62t8s3ygniswnm9ukphrt1k9d3hhxz9vq6p9c0oos2sjzc1219nyq3qm3ntycfvxhmrqnlqg7y7ran638iibbotzzlze45srghb0r9wqx7wtc28rg803si\",\n      \"ExternalCAs\" : [ {\n        \"Options\" : { },\n        \"CACert\" : \"bbjqznaj1nzkcuiq2f1xqzrnci7me6qq6gpop\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"mv11u0ag1rwunhc27qizd7jp3848vu3nih1tv2xgqq5kvq3dy8vtu84rr4gltymazjniohp2te5k8tj09j0ns7kpmu2mp5\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"z706ndjb3w033c938vhkilev5bvq89e9hftecrafewpqama35a5ajfn3ynye20shemlejpnge8jxlun8rru4sfp1yistd6w8650hvwyknq6g50yyadpk9d250rce1ocua47zl7j031tcpfx4vudux2z63snttd2ic7p15vl0f14kb\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"p1m0yzar2sdw2v66slcme7eb2av4tqfp2db96f5e3f80qhgg24x23obdj01b0emmfz2td69p1afrtjwny7e7\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"c5cunue9c79l3trkiqu8bjglh2s0i3vrv26u898zq8sy7vvrij000cowzzlmhn6sos9ny4iswj8e6yr7i3h\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"46pnlqsr9dkek0tha7ean4lt8sixethlu6u0kf76i41xtp1pa96sm\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"j6tq8lesgg3hz8grfnssbrxp5v1f71a2ex8qfjfevgijr3qphnviv55vmondq9udp2cvdnwacvrsj9tave2zgon6bmkecjl1ipitv2kgb92conluzu07g4z8d9ywx2m6ry2pxn5ro6k5ahpxftmbwchqv597cfzz25qiqjh5nys18equmlf\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"zgmk4mniprrlm6basv0lzhankaecjn89jqf8ajfukjip047wvqs9sm2yemfvk1uri9m9i6t06xvc2a38m8zltwzf911r3fwy833d53e6sbyzr7eaj3y57m1ra4k180kfghtnfj555i545kc1fd9qe5ee19fr3m25yemjl5u\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"va6any5ufk5qqjvgn\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"7s7buwmn87m0xz15yrebvhxovnlenwpvbauqc2vs3z01j4l7iyfi24xl770cp0hz3whc0yryvd7mj632ssmh4j0pemjhcr5rdmhphlplqzn3pfy0q4j42w9gth2brc50odwhss06nbk3qorwn7id75urccby3rp0cwwzhpzne1f3udraz4oikjh1wpg0vjoxtcg0\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"26lqfpb4ll9ie0km6eyub8v1wd1mddzu6wwoi8xmk7hmghqjos8upam1lxpzc2lb25zros1t3q6trre1f3deg9w4gps10q4jxubxyv2kr1tb\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"thhwvbhteom617ujcuntvk26el1fnogjw1td7q0bkgz9qjjpayb\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"z15gqzpfp4tconnqbncb092b2y8hu7k3q2yhwdn6gd1jf4j2nk5b9csdq2wg9hsmjrkd1z6yr4fw374v8s8rkyiw5y0o3hbi4zaam9fy3a9wnqbxigintemq2v71c9n4c0tqz4we6b2vhj415br\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"072\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"tm74igsc66gli2eawjx32s6hdbpcpysz1ck4ucdlaghzzylpksf975ljgc3zv15uoy0cycrud42rr5plzgvd9g6vpz45yy5bix8ujnkushzd4dmdzropsr18ibz0w1kndgsp402p5cpdkwo1wojvo4ez92lmvmm\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"1lxe3it4mi5di6b409x2juytq04758ngasaistce34wv632lnzm4htknk53gwamc0x1wfqwzy9712j6mbs4cipwd46brxuhjtw6ixy1cht53hb4n2d2sx9apz9w9cz7gygyn9k2pl\"\n      } ],\n      \"ForceRotate\" : 1106138932075207606,\n      \"NodeCertExpiry\" : 7776000000000000,\n      \"SigningCAKey\" : \"2rze7lhx5i3vfbnichlh5at133ea82uq\"\n    },\n    \"Labels\" : {\n      \"com.example.corp.department\" : \"engineering\",\n      \"com.example.corp.type\" : \"production\"\n    },\n    \"Raft\" : {\n      \"LogEntriesForSlowFollowers\" : 500,\n      \"SnapshotInterval\" : 10000,\n      \"KeepOldSnapshots\" : 5863530143034996013,\n      \"ElectionTick\" : 3,\n      \"HeartbeatTick\" : 1\n    },\n    \"Dispatcher\" : {\n      \"HeartbeatPeriod\" : 5000000000\n    },\n    \"TaskDefaults\" : {\n      \"LogDriver\" : {\n        \"Options\" : {\n          \"max-file\" : \"10\",\n          \"max-size\" : \"100m\"\n        },\n        \"Name\" : \"json-file\"\n      }\n    },\n    \"EncryptionConfig\" : {\n      \"AutoLockManagers\" : false\n    },\n    \"Name\" : \"default\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "89e7aef2-5fd9-3eb1-b735-ef7472782add",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInspect",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClusterInfo"
            }, {
              "properties" : {
                "JoinTokens" : {
                  "$ref" : "#/components/schemas/JoinTokens"
                }
              },
              "type" : "object"
            } ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "2f150807-2d13-3ae6-a092-eb90cbd7c194",
    "name" : "Inspect swarm (application/json)",
    "request" : {
      "urlPath" : "/swarm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"JoinTokens\" : {\n    \"Worker\" : \"SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-1awxwuwd3z9j1z3puu7rcgdbx\",\n    \"Manager\" : \"SWMTKN-1-3pu6hszjas19xyp7ghgosyx9k8atbfcr8p2is99znpy26u2lkl-7p73s1dx5in4tatdymyhg9hu2\"\n  },\n  \"RootRotationInProgress\" : false,\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"TLSInfo\" : {\n    \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n    \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n    \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n  },\n  \"ID\" : \"abajmipo7b4xz5ip2nrla6b11\",\n  \"Spec\" : {\n    \"Orchestration\" : {\n      \"TaskHistoryRetentionLimit\" : 10\n    },\n    \"CAConfig\" : {\n      \"SigningCACert\" : \"fl03waayn91wjnkq8t5obphf05bzx2jikovfwzmj5phqm4vk4nhmmo73wem35hjn1y9cb57bcfxu91dlnbpvimxjf93sbj8le11rl865w9spk9pk4mz5nr1bmgyewdkfcxs4iweobl33ierf\",\n      \"ExternalCAs\" : [ {\n        \"Options\" : { },\n        \"CACert\" : \"oozk8xgo16t3bm1qqeb1w53ta8z2kxb7e3fbwbwcorjrvtieyssu9q7a79chvvksax37qw724kqajjn6w3rf9wt32rp5sbjnntq2ipcftllvuaws06r46jegd7c5epybvgta0g3au91s8wkfupqx37k564r7xtvc7ytg5ug3cdzfxf\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"hxirz7eelwoc0cu91k3dsdk\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"9e7kak119gd7nu5g52lyh6owl12pk1vtl6kdw2sg76ixu7e2r39e5ybask1pbtjuec4gj\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"yhui17es896rkls254pvczxpb5ruaakt4488njy8l06283si15vrc5vpovcnrrx19xqfzdyxma9fi8e89elu8v8k6qr4jd2mt3brbldsaydti8799vh4fqkrqp8l8cv73728lbljzh4xofajir5gxpw\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"tp9ns0hvlmc20dr4t2ajvucwybmjz85v2\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"zosdos1pq7iawyp3k\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"hrc2kmy2mi2yc2c1lhfyqxbaqjpo1iwx3j926fj6d504j7g58oiqtjevf7702kmhfi0yj8swhbx0za3h0vq0lo9sycd46p9bbbarouvegxql7i7ut7z9bk977nt88aewueysg993n26skdmvzjfs37uba7u39mg2w0s7kd6jfim4mtto60g\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"29q6071b4w6hsrufwue3redbe9yojk27\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"qmk4on0a5rcsrmvz40or5prybrwn4hcc2q0185igy9npmivntrbqxxwy2dltwejkmsbid52jkpodkha9pchoc79wd\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"wu8uy7ddyy2sk6rmhr65z6jthd8d8j2suoehgzi\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"avw3d5u1m0mt4f78r0k4cs21dvj61ndxwl49pyt6ldcwuvgpgdzazqth2s30sw9iam\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"56zb485yvbpv403lduipoxolu7egohn49rmkkhcg6u8qa8lrxc2n90p52ajcfpd780v0k3x0iybidgrjopaex0wadhl5i3gei6wv8n22yp5a88tb7t4e2mcuz49\"\n      }, {\n        \"Options\" : { },\n        \"CACert\" : \"7w6lrasiqbu8evc7k9mixcrxzai1jvyfva39uj5wb9b1njdz1myes1dki20m\",\n        \"Protocol\" : \"cfssl\",\n        \"URL\" : \"418d5j4rm9odtrtiual7npmv1vnexficc6ufs7ov1karl6bt5fa8cz66hvrodwrimp4v4khq3q4\"\n      } ],\n      \"ForceRotate\" : 2045769636609433366,\n      \"NodeCertExpiry\" : 7776000000000000,\n      \"SigningCAKey\" : \"caktboi9f7hx5lqxsw0xryfo85fhq6ob0i60tvy6oa0bcg1zcz4\"\n    },\n    \"Labels\" : {\n      \"com.example.corp.department\" : \"engineering\",\n      \"com.example.corp.type\" : \"production\"\n    },\n    \"Raft\" : {\n      \"LogEntriesForSlowFollowers\" : 500,\n      \"SnapshotInterval\" : 10000,\n      \"KeepOldSnapshots\" : 6442763594698508152,\n      \"ElectionTick\" : 3,\n      \"HeartbeatTick\" : 1\n    },\n    \"Dispatcher\" : {\n      \"HeartbeatPeriod\" : 5000000000\n    },\n    \"TaskDefaults\" : {\n      \"LogDriver\" : {\n        \"Options\" : {\n          \"max-file\" : \"10\",\n          \"max-size\" : \"100m\"\n        },\n        \"Name\" : \"json-file\"\n      }\n    },\n    \"EncryptionConfig\" : {\n      \"AutoLockManagers\" : false\n    },\n    \"Name\" : \"default\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f150807-2d13-3ae6-a092-eb90cbd7c194",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SwarmInspect",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ClusterInfo"
            }, {
              "properties" : {
                "JoinTokens" : {
                  "$ref" : "#/components/schemas/JoinTokens"
                }
              },
              "type" : "object"
            } ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "f22f9774-45b3-3a6f-a5f2-9f81f449c670",
    "name" : "Initialize interactive session (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/session",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "f22f9774-45b3-3a6f-a5f2-9f81f449c670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Session",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "ed52d783-5641-3b4e-b957-7852a2ef57de",
    "name" : "Initialize interactive session (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/session",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "ed52d783-5641-3b4e-b957-7852a2ef57de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Session",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "f3694450-65fa-328b-897d-18f14158208b",
    "name" : "Initialize interactive session - 101",
    "request" : {
      "urlPath" : "/session",
      "method" : "POST"
    },
    "response" : {
      "status" : 101
    },
    "uuid" : "f3694450-65fa-328b-897d-18f14158208b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Session"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "f53436b0-21c7-3931-a1eb-10e86d359ede",
    "name" : "Update a service",
    "request" : {
      "urlPath" : "/services/2uyk/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "8803764094952124389"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f53436b0-21c7-3931-a1eb-10e86d359ede",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "cc7d7342-566e-3947-b206-e67aeaecff19",
    "name" : "Update a service",
    "request" : {
      "urlPath" : "/services/czl2/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "119547741328900837"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc7d7342-566e-3947-b206-e67aeaecff19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "2554ccc3-adc4-37c8-9ccb-ffb3760add0b",
    "name" : "Update a service",
    "request" : {
      "urlPath" : "/services/t6zz/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "7157893330625960374"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2554ccc3-adc4-37c8-9ccb-ffb3760add0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "a4e6d5f9-ab3e-363b-8ffe-5fac750b22bd",
    "name" : "Update a service",
    "request" : {
      "urlPath" : "/services/hszs/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "8881551480612568284"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4e6d5f9-ab3e-363b-8ffe-5fac750b22bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "867362d3-cb10-3c8f-8ee4-093657800ec3",
    "name" : "Update a service",
    "request" : {
      "urlPath" : "/services/t35k/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "209113023810416638"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Warning\" : \"unable to pin image doesnotexist:latest to digest: image library/doesnotexist:latest not found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "867362d3-cb10-3c8f-8ee4-093657800ec3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceUpdate",
          "schema" : {
            "example" : {
              "Warning" : "unable to pin image doesnotexist:latest to digest: image library/doesnotexist:latest not found"
            },
            "properties" : {
              "Warnings" : {
                "description" : "Optional warning messages",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "ea58638f-45c5-3ce8-a67f-ab5cf4be7fc5",
    "name" : "Get service logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/services/z7p3/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "ea58638f-45c5-3ce8-a67f-ab5cf4be7fc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "59611e0e-fd65-3f44-bfa5-08bcf6cb6b0c",
    "name" : "Get service logs (application/json)",
    "request" : {
      "urlPath" : "/services/6s7s/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59611e0e-fd65-3f44-bfa5-08bcf6cb6b0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "f7bdefd7-6446-3a75-9d21-10621d1c49a8",
    "name" : "Get service logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/services/89m7/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "f7bdefd7-6446-3a75-9d21-10621d1c49a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "c05d65d2-958f-3b46-acff-0b0472d96c8e",
    "name" : "Get service logs (application/json)",
    "request" : {
      "urlPath" : "/services/081o/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c05d65d2-958f-3b46-acff-0b0472d96c8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "eeadaeb5-35ca-3158-9dc2-763fdcff18e5",
    "name" : "Get service logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/services/j4p4/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "eeadaeb5-35ca-3158-9dc2-763fdcff18e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "c05c4436-f6b3-38c2-8b98-0cf9b37de7ea",
    "name" : "Get service logs (application/json) - response",
    "request" : {
      "urlPath" : "/services/7ntx/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such service: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c05c4436-f6b3-38c2-8b98-0cf9b37de7ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "676e054f-f494-36a4-b00d-03d5546383eb",
    "name" : "Get service logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/services/19w1/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"2dj931kex9r8850qk400nn1tdspoghwtf0vq167hszzpy507hnfnbrolmfa6jk2lo4muc1ruzl2qklpmrae67u6qh8grbcbrlqqhencjv5ly4zo8kstq0vukzsfdl6wze5p0bmx8wzuno5wzue4nx798wuwt19d6rz6lt07oipbr02y3bcoinn7509dbdeyvcq1p\"",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "676e054f-f494-36a4-b00d-03d5546383eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "ebc97d8e-5595-31db-b4b2-64f729b5301e",
    "name" : "Get service logs (application/json)",
    "request" : {
      "urlPath" : "/services/e1p9/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"rnp5zqsnexdie4jfbeiicny1d7f1auad368jsavddxxpz52uxy2bpmztnmpqsnnod4upzhmxnl1xe4p07byyi65me141u2p202j37r4kbi1ilj810zrc7mss01psmaegsstoxe5dhswbup7ttol779blb1z2yjs4u9zexjw0me3m2iia467305\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebc97d8e-5595-31db-b4b2-64f729b5301e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "8b76c3f3-dd9d-3b5f-83aa-933e595daf81",
    "name" : "Get service logs (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/services/y5nj/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 101,
      "body" : "\"9kxb7ns938acp0hdugc1qxlzd153mfe0wbz91jptmauzu06adn57bdz0oukrbhhg3ndrs090i22uwwv24svqzaiky2mhuh28tjpouns83854bl95mh7e59z0q7dyxzh2nhw88ynp0sh3iifyxlzz45h0hntgn\"",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "8b76c3f3-dd9d-3b5f-83aa-933e595daf81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "fe6d078a-c5f1-3e82-add9-aae7e28e6a67",
    "name" : "Get service logs (application/json)",
    "request" : {
      "urlPath" : "/services/95od/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 101,
      "body" : "\"67z8ro2irc3bxydqcedqpud33dwvuvw5pmgfyk681wcs4c4xyu6oulzhjuvt3krgclimjkzbkrkb3zpmev6tvuvamp8ms9a7zmp6ysjbz3aogye506uhgu96fn97e8w30fvu6rwcnzne8uxave2fdippuu6bx6pa9n9ftzpir8amr\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe6d078a-c5f1-3e82-add9-aae7e28e6a67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceLogs",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "06584186-586c-3409-a27b-eb46d8004e73",
    "name" : "Inspect a service (text/plain)",
    "request" : {
      "urlPath" : "/services/ox7m",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "06584186-586c-3409-a27b-eb46d8004e73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "449cc884-e7bb-3692-b38a-0358d1084e8a",
    "name" : "Inspect a service (application/json)",
    "request" : {
      "urlPath" : "/services/210k",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "449cc884-e7bb-3692-b38a-0358d1084e8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "fa6d3635-da53-327c-9071-6747f2335a8b",
    "name" : "Inspect a service (text/plain)",
    "request" : {
      "urlPath" : "/services/6564",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "fa6d3635-da53-327c-9071-6747f2335a8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "0a5373bc-e730-3595-815c-bb2e9ccc8664",
    "name" : "Inspect a service (application/json)",
    "request" : {
      "urlPath" : "/services/n76s",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a5373bc-e730-3595-815c-bb2e9ccc8664",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "f66de228-d470-3663-8c84-44504884d3a6",
    "name" : "Inspect a service (text/plain)",
    "request" : {
      "urlPath" : "/services/xx30",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "f66de228-d470-3663-8c84-44504884d3a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "9f9bdceb-d7ac-3b73-93d3-3ad4a5fbc886",
    "name" : "Inspect a service (application/json)",
    "request" : {
      "urlPath" : "/services/ivkz",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f9bdceb-d7ac-3b73-93d3-3ad4a5fbc886",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "6922380a-cc8a-3977-97a2-ffbd13226210",
    "name" : "Inspect a service (text/plain)",
    "request" : {
      "urlPath" : "/services/a2yz",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "6922380a-cc8a-3977-97a2-ffbd13226210",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceInspect",
          "schema" : {
            "example" : {
              "CreatedAt" : "2016-06-07T21:05:51.880065305Z",
              "Endpoint" : {
                "Ports" : [ {
                  "Protocol" : "tcp",
                  "PublishedPort" : 30001,
                  "TargetPort" : 6379
                } ],
                "Spec" : {
                  "Mode" : "vip",
                  "Ports" : [ {
                    "Protocol" : "tcp",
                    "PublishedPort" : 30001,
                    "TargetPort" : 6379
                  } ]
                },
                "VirtualIPs" : [ {
                  "Addr" : "10.255.0.2/16",
                  "NetworkID" : "4qvuz4ko70xaltuqbt8956gd1"
                }, {
                  "Addr" : "10.255.0.3/16",
                  "NetworkID" : "4qvuz4ko70xaltuqbt8956gd1"
                } ]
              },
              "ID" : "9mnpnzenvg8p8tdbtq4wvbkcz",
              "Spec" : {
                "EndpointSpec" : {
                  "Mode" : "vip",
                  "Ports" : [ {
                    "Protocol" : "tcp",
                    "PublishedPort" : 30001,
                    "TargetPort" : 6379
                  } ]
                },
                "Mode" : {
                  "Replicated" : {
                    "Replicas" : 1
                  }
                },
                "Name" : "hopeful_cori",
                "RollbackConfig" : {
                  "Delay" : 1000000000,
                  "FailureAction" : "pause",
                  "MaxFailureRatio" : 0.15,
                  "Monitor" : 15000000000,
                  "Parallelism" : 1
                },
                "TaskTemplate" : {
                  "ContainerSpec" : {
                    "Image" : "redis"
                  },
                  "ForceUpdate" : 0,
                  "Placement" : { },
                  "Resources" : {
                    "Limits" : { },
                    "Reservations" : { }
                  },
                  "RestartPolicy" : {
                    "Condition" : "any",
                    "MaxAttempts" : 0
                  }
                },
                "UpdateConfig" : {
                  "Delay" : 1000000000,
                  "FailureAction" : "pause",
                  "MaxFailureRatio" : 0.15,
                  "Monitor" : 15000000000,
                  "Parallelism" : 1
                }
              },
              "UpdatedAt" : "2016-06-07T21:07:29.962229872Z",
              "Version" : {
                "Index" : 19
              }
            },
            "properties" : {
              "CreatedAt" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "Endpoint" : {
                "properties" : {
                  "Ports" : {
                    "items" : {
                      "$ref" : "#/components/schemas/EndpointPortConfig"
                    },
                    "type" : "array"
                  },
                  "Spec" : {
                    "$ref" : "#/components/schemas/EndpointSpec"
                  },
                  "VirtualIPs" : {
                    "items" : {
                      "properties" : {
                        "Addr" : {
                          "type" : "string"
                        },
                        "NetworkID" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "ID" : {
                "type" : "string"
              },
              "Spec" : {
                "$ref" : "#/components/schemas/ServiceSpec"
              },
              "UpdateStatus" : {
                "description" : "The status of a service update.",
                "properties" : {
                  "CompletedAt" : {
                    "format" : "dateTime",
                    "type" : "string"
                  },
                  "Message" : {
                    "type" : "string"
                  },
                  "StartedAt" : {
                    "format" : "dateTime",
                    "type" : "string"
                  },
                  "State" : {
                    "enum" : [ "updating", "paused", "completed" ],
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "UpdatedAt" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "Version" : {
                "$ref" : "#/components/schemas/ObjectVersion"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "8ea4ab92-be7e-3f51-a461-6751165d0abe",
    "name" : "Inspect a service (application/json)",
    "request" : {
      "urlPath" : "/services/793y",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ea4ab92-be7e-3f51-a461-6751165d0abe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceInspect",
          "schema" : {
            "example" : {
              "CreatedAt" : "2016-06-07T21:05:51.880065305Z",
              "Endpoint" : {
                "Ports" : [ {
                  "Protocol" : "tcp",
                  "PublishedPort" : 30001,
                  "TargetPort" : 6379
                } ],
                "Spec" : {
                  "Mode" : "vip",
                  "Ports" : [ {
                    "Protocol" : "tcp",
                    "PublishedPort" : 30001,
                    "TargetPort" : 6379
                  } ]
                },
                "VirtualIPs" : [ {
                  "Addr" : "10.255.0.2/16",
                  "NetworkID" : "4qvuz4ko70xaltuqbt8956gd1"
                }, {
                  "Addr" : "10.255.0.3/16",
                  "NetworkID" : "4qvuz4ko70xaltuqbt8956gd1"
                } ]
              },
              "ID" : "9mnpnzenvg8p8tdbtq4wvbkcz",
              "Spec" : {
                "EndpointSpec" : {
                  "Mode" : "vip",
                  "Ports" : [ {
                    "Protocol" : "tcp",
                    "PublishedPort" : 30001,
                    "TargetPort" : 6379
                  } ]
                },
                "Mode" : {
                  "Replicated" : {
                    "Replicas" : 1
                  }
                },
                "Name" : "hopeful_cori",
                "RollbackConfig" : {
                  "Delay" : 1000000000,
                  "FailureAction" : "pause",
                  "MaxFailureRatio" : 0.15,
                  "Monitor" : 15000000000,
                  "Parallelism" : 1
                },
                "TaskTemplate" : {
                  "ContainerSpec" : {
                    "Image" : "redis"
                  },
                  "ForceUpdate" : 0,
                  "Placement" : { },
                  "Resources" : {
                    "Limits" : { },
                    "Reservations" : { }
                  },
                  "RestartPolicy" : {
                    "Condition" : "any",
                    "MaxAttempts" : 0
                  }
                },
                "UpdateConfig" : {
                  "Delay" : 1000000000,
                  "FailureAction" : "pause",
                  "MaxFailureRatio" : 0.15,
                  "Monitor" : 15000000000,
                  "Parallelism" : 1
                }
              },
              "UpdatedAt" : "2016-06-07T21:07:29.962229872Z",
              "Version" : {
                "Index" : 19
              }
            },
            "properties" : {
              "CreatedAt" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "Endpoint" : {
                "properties" : {
                  "Ports" : {
                    "items" : {
                      "$ref" : "#/components/schemas/EndpointPortConfig"
                    },
                    "type" : "array"
                  },
                  "Spec" : {
                    "$ref" : "#/components/schemas/EndpointSpec"
                  },
                  "VirtualIPs" : {
                    "items" : {
                      "properties" : {
                        "Addr" : {
                          "type" : "string"
                        },
                        "NetworkID" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "ID" : {
                "type" : "string"
              },
              "Spec" : {
                "$ref" : "#/components/schemas/ServiceSpec"
              },
              "UpdateStatus" : {
                "description" : "The status of a service update.",
                "properties" : {
                  "CompletedAt" : {
                    "format" : "dateTime",
                    "type" : "string"
                  },
                  "Message" : {
                    "type" : "string"
                  },
                  "StartedAt" : {
                    "format" : "dateTime",
                    "type" : "string"
                  },
                  "State" : {
                    "enum" : [ "updating", "paused", "completed" ],
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "UpdatedAt" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "Version" : {
                "$ref" : "#/components/schemas/ObjectVersion"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "0ee6c419-4c17-3a25-a722-26d8e84e6bc0",
    "name" : "Delete a service (text/plain)",
    "request" : {
      "urlPath" : "/services/6rji",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "0ee6c419-4c17-3a25-a722-26d8e84e6bc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "d72e5878-65a2-3646-9f8f-8a77126450ca",
    "name" : "Delete a service (application/json)",
    "request" : {
      "urlPath" : "/services/0lzm",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d72e5878-65a2-3646-9f8f-8a77126450ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "b737fc9a-ded9-35ae-8ec5-4779e267bc2f",
    "name" : "Delete a service (text/plain)",
    "request" : {
      "urlPath" : "/services/4i30",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "b737fc9a-ded9-35ae-8ec5-4779e267bc2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "b0affac2-5bc6-38b0-95f6-369b9f1e46d6",
    "name" : "Delete a service (application/json)",
    "request" : {
      "urlPath" : "/services/rrm4",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0affac2-5bc6-38b0-95f6-369b9f1e46d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "c9bd25c7-b53b-3cd5-921a-b0be26937c3b",
    "name" : "Delete a service (text/plain)",
    "request" : {
      "urlPath" : "/services/27s5",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c9bd25c7-b53b-3cd5-921a-b0be26937c3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "0ab5df95-56c9-3840-b30e-a76772243a94",
    "name" : "Delete a service (application/json)",
    "request" : {
      "urlPath" : "/services/y5cb",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ab5df95-56c9-3840-b30e-a76772243a94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "b7868754-6d1c-3895-a289-a175e28ff086",
    "name" : "Delete a service - 200",
    "request" : {
      "urlPath" : "/services/6j65",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b7868754-6d1c-3895-a289-a175e28ff086",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceDelete"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "09061e04-6f6f-3334-ac40-ea28cac52144",
    "name" : "Create a service",
    "request" : {
      "urlPath" : "/services/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09061e04-6f6f-3334-ac40-ea28cac52144",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "9189d219-004a-3bdb-a655-dc462db6aa09",
    "name" : "Create a service",
    "request" : {
      "urlPath" : "/services/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9189d219-004a-3bdb-a655-dc462db6aa09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "207219aa-c91b-36bb-a319-d0df5cb5ab3a",
    "name" : "Create a service",
    "request" : {
      "urlPath" : "/services/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "207219aa-c91b-36bb-a319-d0df5cb5ab3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "a5534e20-7948-3234-8932-052c66262ad7",
    "name" : "Create a service",
    "request" : {
      "urlPath" : "/services/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5534e20-7948-3234-8932-052c66262ad7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "8ea13588-1cdb-38b0-9055-fefb649340f1",
    "name" : "Create a service",
    "request" : {
      "urlPath" : "/services/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ea13588-1cdb-38b0-9055-fefb649340f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "f7a84dc3-88b2-3ced-8d03-96926c5b9190",
    "name" : "Create a service",
    "request" : {
      "urlPath" : "/services/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ID\" : \"ak7w3gjqoa3kuz8xcpnyy0pvl\",\n  \"Warning\" : \"unable to pin image doesnotexist:latest to digest: image library/doesnotexist:latest not found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7a84dc3-88b2-3ced-8d03-96926c5b9190",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceCreate",
          "schema" : {
            "example" : {
              "ID" : "ak7w3gjqoa3kuz8xcpnyy0pvl",
              "Warning" : "unable to pin image doesnotexist:latest to digest: image library/doesnotexist:latest not found"
            },
            "properties" : {
              "ID" : {
                "description" : "The ID of the created service.",
                "type" : "string"
              },
              "Warning" : {
                "description" : "Optional warning message",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "d4f2a2c3-675a-3b39-977c-12cb1c25d8f1",
    "name" : "List services (text/plain)",
    "request" : {
      "urlPath" : "/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "d4f2a2c3-675a-3b39-977c-12cb1c25d8f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "1a3d17f3-919e-3130-9cd1-e79b4bfde6c7",
    "name" : "List services (application/json)",
    "request" : {
      "urlPath" : "/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a3d17f3-919e-3130-9cd1-e79b4bfde6c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "2c2d013e-b860-37b0-b5ec-bebf7344fcab",
    "name" : "List services (text/plain)",
    "request" : {
      "urlPath" : "/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "2c2d013e-b860-37b0-b5ec-bebf7344fcab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "058ce8d2-9539-3b60-b3b7-baa84d18eef3",
    "name" : "List services (application/json)",
    "request" : {
      "urlPath" : "/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "058ce8d2-9539-3b60-b3b7-baa84d18eef3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "efed4cd5-6ad6-33c7-b2a9-8aac557c8790",
    "name" : "List services (text/plain)",
    "request" : {
      "urlPath" : "/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n} ]",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "efed4cd5-6ad6-33c7-b2a9-8aac557c8790",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceList",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Service"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "14e40e39-4f00-31a7-883a-5acfd7165825",
    "name" : "List services (application/json)",
    "request" : {
      "urlPath" : "/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n}, {\n  \"CreatedAt\" : \"2016-06-07T21:05:51.880065305Z\",\n  \"Endpoint\" : {\n    \"Ports\" : [ {\n      \"Protocol\" : \"tcp\",\n      \"PublishedPort\" : 30001,\n      \"TargetPort\" : 6379\n    } ],\n    \"Spec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"VirtualIPs\" : [ {\n      \"Addr\" : \"10.255.0.2/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    }, {\n      \"Addr\" : \"10.255.0.3/16\",\n      \"NetworkID\" : \"4qvuz4ko70xaltuqbt8956gd1\"\n    } ]\n  },\n  \"ID\" : \"9mnpnzenvg8p8tdbtq4wvbkcz\",\n  \"Spec\" : {\n    \"EndpointSpec\" : {\n      \"Mode\" : \"vip\",\n      \"Ports\" : [ {\n        \"Protocol\" : \"tcp\",\n        \"PublishedPort\" : 30001,\n        \"TargetPort\" : 6379\n      } ]\n    },\n    \"Mode\" : {\n      \"Replicated\" : {\n        \"Replicas\" : 1\n      }\n    },\n    \"Name\" : \"hopeful_cori\",\n    \"RollbackConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    },\n    \"TaskTemplate\" : {\n      \"ContainerSpec\" : {\n        \"Image\" : \"redis\"\n      },\n      \"ForceUpdate\" : 0,\n      \"Placement\" : { },\n      \"Resources\" : {\n        \"Limits\" : { },\n        \"Reservations\" : { }\n      },\n      \"RestartPolicy\" : {\n        \"Condition\" : \"any\",\n        \"MaxAttempts\" : 0\n      }\n    },\n    \"UpdateConfig\" : {\n      \"Delay\" : 1000000000,\n      \"FailureAction\" : \"pause\",\n      \"MaxFailureRatio\" : 0.15,\n      \"Monitor\" : 15000000000,\n      \"Parallelism\" : 1\n    }\n  },\n  \"UpdatedAt\" : \"2016-06-07T21:07:29.962229872Z\",\n  \"Version\" : {\n    \"Index\" : 19\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14e40e39-4f00-31a7-883a-5acfd7165825",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ServiceList",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Service"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "e733d2dc-3457-3b61-8aca-5334820fe74e",
    "name" : "Update a Secret (text/plain)",
    "request" : {
      "urlPath" : "/secrets/b4ul/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "3129903345988173931"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "e733d2dc-3457-3b61-8aca-5334820fe74e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "4f389bb3-02e5-3011-bd9f-4983e7edc934",
    "name" : "Update a Secret (application/json)",
    "request" : {
      "urlPath" : "/secrets/er6r/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "7955355384202397263"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f389bb3-02e5-3011-bd9f-4983e7edc934",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "345924d3-778a-3ab2-afc6-a4e86e67a8be",
    "name" : "Update a Secret (text/plain)",
    "request" : {
      "urlPath" : "/secrets/u406/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "4345308251950556045"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "345924d3-778a-3ab2-afc6-a4e86e67a8be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "62835d19-8963-32f0-9ed9-8baec24941c2",
    "name" : "Update a Secret (application/json)",
    "request" : {
      "urlPath" : "/secrets/vj1n/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "1818334592386114470"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62835d19-8963-32f0-9ed9-8baec24941c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "093f860b-48d0-32df-a3bf-057af9f236ca",
    "name" : "Update a Secret (text/plain)",
    "request" : {
      "urlPath" : "/secrets/xb0u/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "2300344678030591097"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "093f860b-48d0-32df-a3bf-057af9f236ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "09acb525-4ec7-31e9-8597-1e2ffaf4e3cc",
    "name" : "Update a Secret (application/json)",
    "request" : {
      "urlPath" : "/secrets/24yo/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "7550686751719857821"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09acb525-4ec7-31e9-8597-1e2ffaf4e3cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "7c5e107f-8d25-30d8-b9e5-412a84b631d5",
    "name" : "Update a Secret (text/plain)",
    "request" : {
      "urlPath" : "/secrets/95b5/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "7105150083448515915"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "7c5e107f-8d25-30d8-b9e5-412a84b631d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "641fc3b1-fbbe-3209-ab87-e7269bd30baa",
    "name" : "Update a Secret (application/json)",
    "request" : {
      "urlPath" : "/secrets/amaf/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "8728474660428735585"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "641fc3b1-fbbe-3209-ab87-e7269bd30baa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "6dabc69b-f7c5-3123-ba4e-aaa3a13fcf46",
    "name" : "Update a Secret - 200",
    "request" : {
      "urlPath" : "/secrets/5ks7/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "923622504239246484"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6dabc69b-f7c5-3123-ba4e-aaa3a13fcf46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretUpdate"
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "e42bc073-a22e-3439-af13-92cd4c6d4adb",
    "name" : "Inspect a secret",
    "request" : {
      "urlPath" : "/secrets/c993",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e42bc073-a22e-3439-af13-92cd4c6d4adb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "feb857b8-6c38-3289-b1d8-e20a34e7add0",
    "name" : "Inspect a secret",
    "request" : {
      "urlPath" : "/secrets/5x4b",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "feb857b8-6c38-3289-b1d8-e20a34e7add0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "60321c01-3670-347f-86df-efea47e4a71e",
    "name" : "Inspect a secret",
    "request" : {
      "urlPath" : "/secrets/k1l5",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60321c01-3670-347f-86df-efea47e4a71e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "4a55e99d-2ffe-3b4c-8438-1463c2e1a60d",
    "name" : "Inspect a secret - response",
    "request" : {
      "urlPath" : "/secrets/x8jk",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CreatedAt\" : \"2016-11-05T01:20:17.327670065Z\",\n  \"ID\" : \"ktnbjxoalbkvbvedmg1urrz8h\",\n  \"Spec\" : {\n    \"Driver\" : {\n      \"Name\" : \"secret-bucket\",\n      \"Options\" : {\n        \"OptionA\" : \"value for driver option A\",\n        \"OptionB\" : \"value for driver option B\"\n      }\n    },\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"app-dev.crt\"\n  },\n  \"UpdatedAt\" : \"2016-11-05T01:20:17.327670065Z\",\n  \"Version\" : {\n    \"Index\" : 11\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a55e99d-2ffe-3b4c-8438-1463c2e1a60d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretInspect",
          "schema" : {
            "properties" : {
              "CreatedAt" : {
                "example" : "2017-07-20T13:55:28.678958722Z",
                "format" : "dateTime",
                "type" : "string"
              },
              "ID" : {
                "example" : "blt1owaxmitz71s9v5zh81zun",
                "type" : "string"
              },
              "Spec" : {
                "$ref" : "#/components/schemas/SecretSpec"
              },
              "UpdatedAt" : {
                "example" : "2017-07-20T13:55:28.678958722Z",
                "format" : "dateTime",
                "type" : "string"
              },
              "Version" : {
                "$ref" : "#/components/schemas/ObjectVersion"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "fa5d10e6-d677-3563-888a-0466cf21475f",
    "name" : "Delete a secret (application/json)",
    "request" : {
      "urlPath" : "/secrets/n0kg",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa5d10e6-d677-3563-888a-0466cf21475f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "b6f2912b-babb-3772-9a80-d3bcc2adc906",
    "name" : "Delete a secret (application/json)",
    "request" : {
      "urlPath" : "/secrets/ypoc",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6f2912b-babb-3772-9a80-d3bcc2adc906",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "b5afddcf-d3af-3a46-af9e-e0f0aa8f2310",
    "name" : "Delete a secret (application/json)",
    "request" : {
      "urlPath" : "/secrets/80k8",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5afddcf-d3af-3a46-af9e-e0f0aa8f2310",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "23c0651a-e7dd-3b18-8fde-6b80df015d62",
    "name" : "Delete a secret - 204",
    "request" : {
      "urlPath" : "/secrets/b953",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "23c0651a-e7dd-3b18-8fde-6b80df015d62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretDelete"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "d9e9417a-c725-39f2-ae85-2bacf7183e34",
    "name" : "Create a secret",
    "request" : {
      "urlPath" : "/secrets/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9e9417a-c725-39f2-ae85-2bacf7183e34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "cfee3819-e083-308b-b23b-2cb5759cf113",
    "name" : "Create a secret",
    "request" : {
      "urlPath" : "/secrets/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfee3819-e083-308b-b23b-2cb5759cf113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "954b5566-1e98-3337-baa1-31882e65bbe0",
    "name" : "Create a secret",
    "request" : {
      "urlPath" : "/secrets/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "954b5566-1e98-3337-baa1-31882e65bbe0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "1738937b-8874-30eb-bcb5-68f55771aca9",
    "name" : "Create a secret",
    "request" : {
      "urlPath" : "/secrets/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ID\" : \"ktnbjxoalbkvbvedmg1urrz8h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1738937b-8874-30eb-bcb5-68f55771aca9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretCreate",
          "schema" : {
            "example" : {
              "ID" : "ktnbjxoalbkvbvedmg1urrz8h"
            },
            "properties" : {
              "ID" : {
                "description" : "The ID of the created secret.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "42e2a6f0-99b9-32ba-b448-a43f81f17143",
    "name" : "List secrets",
    "request" : {
      "urlPath" : "/secrets",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42e2a6f0-99b9-32ba-b448-a43f81f17143",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "ecc96e02-8f29-3572-94b1-bb92c68d4e40",
    "name" : "List secrets",
    "request" : {
      "urlPath" : "/secrets",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecc96e02-8f29-3572-94b1-bb92c68d4e40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "7f7cefb5-af93-3281-9422-f046393efd3d",
    "name" : "List secrets",
    "request" : {
      "urlPath" : "/secrets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"CreatedAt\" : \"2017-07-20T13:55:28.678958722Z\",\n  \"ID\" : \"blt1owaxmitz71s9v5zh81zun\",\n  \"Spec\" : {\n    \"Driver\" : {\n      \"Name\" : \"secret-bucket\",\n      \"Options\" : {\n        \"OptionA\" : \"value for driver option A\",\n        \"OptionB\" : \"value for driver option B\"\n      }\n    },\n    \"Labels\" : {\n      \"some.label\" : \"some.value\"\n    },\n    \"Name\" : \"mysql-passwd\"\n  },\n  \"UpdatedAt\" : \"2017-07-20T13:55:28.678958722Z\",\n  \"Version\" : {\n    \"Index\" : 85\n  }\n}, {\n  \"CreatedAt\" : \"2016-11-05T01:20:17.327670065Z\",\n  \"ID\" : \"ktnbjxoalbkvbvedmg1urrz8h\",\n  \"Spec\" : {\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"app-dev.crt\"\n  },\n  \"UpdatedAt\" : \"2016-11-05T01:20:17.327670065Z\",\n  \"Version\" : {\n    \"Index\" : 11\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f7cefb5-af93-3281-9422-f046393efd3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SecretList",
          "schema" : {
            "example" : [ {
              "CreatedAt" : "2017-07-20T13:55:28.678958722Z",
              "ID" : "blt1owaxmitz71s9v5zh81zun",
              "Spec" : {
                "Driver" : {
                  "Name" : "secret-bucket",
                  "Options" : {
                    "OptionA" : "value for driver option A",
                    "OptionB" : "value for driver option B"
                  }
                },
                "Labels" : {
                  "some.label" : "some.value"
                },
                "Name" : "mysql-passwd"
              },
              "UpdatedAt" : "2017-07-20T13:55:28.678958722Z",
              "Version" : {
                "Index" : 85
              }
            }, {
              "CreatedAt" : "2016-11-05T01:20:17.327670065Z",
              "ID" : "ktnbjxoalbkvbvedmg1urrz8h",
              "Spec" : {
                "Labels" : {
                  "foo" : "bar"
                },
                "Name" : "app-dev.crt"
              },
              "UpdatedAt" : "2016-11-05T01:20:17.327670065Z",
              "Version" : {
                "Index" : 11
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/Secret"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "33a171cf-590d-3df8-b8f7-d1b71908b021",
    "name" : "Upgrade a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Kate+Bauch+Sr./upgrade",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "1e8ir1j0vw2icoelv3cvkhxf5ejnzobiig0wo7736cqoy5wjmmvvn73euxyyf1uq4szrdv4b6bio6ulhvibj3qev2qww37ck98e1yd4a7nt2jqc16btff4wi12n43tky7sovodwux4agq84yfez6sjjsf858qtk"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "33a171cf-590d-3df8-b8f7-d1b71908b021",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginUpgrade",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "251e1a44-93b9-37c1-bc07-241cb972d944",
    "name" : "Upgrade a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Mireya+Hansen/upgrade",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "plj"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "251e1a44-93b9-37c1-bc07-241cb972d944",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginUpgrade",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "8d8ee2df-eef2-3f26-8c4e-faa872f21766",
    "name" : "Upgrade a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Dr.+Dorsey+Funk/upgrade",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "9q7r6hdtxl54ebtdyp7eqc385drkv0czxnjznyxzc7r20wupa9mrptb3qmpynp5qu7trxll32bp5h5vcxu5jo306i94mlfjmse6iee862empktsfrpdgbthybi4yruo0b21qcm50hb"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "8d8ee2df-eef2-3f26-8c4e-faa872f21766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginUpgrade",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "8164ff56-9640-3448-8788-27ee60471599",
    "name" : "Upgrade a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Lucretia+Gislason/upgrade",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "d37jcmrfm6ptds4nujhcfu3u0o063t7chqtd5yfo"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8164ff56-9640-3448-8788-27ee60471599",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginUpgrade",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "d120cd24-e1da-3403-885e-dbf4260d06a3",
    "name" : "Upgrade a plugin - 204",
    "request" : {
      "urlPath" : "/plugins/Milton+Bruen/upgrade",
      "method" : "POST",
      "queryParameters" : {
        "remote" : {
          "equalTo" : "d4dpux5isaep9rhcky36wurunxjht5s97pgaz9x5uvtht211l1zla2wlvd2s8vf3kgv4uksisz5r4pwqjt94g6d11vszo3z6pphxw3tu3bddv829oh9rqb6pqio06etva1w3s8wnrfn9kq4sim39pywlte85p"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d120cd24-e1da-3403-885e-dbf4260d06a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginUpgrade"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "ae4e0942-cfb2-3d3e-bb85-1084f0df8554",
    "name" : "Configure a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Norberto+Pollich/set",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "ae4e0942-cfb2-3d3e-bb85-1084f0df8554",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginSet",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "b2099d7f-f17c-3801-82ea-597c3e98430e",
    "name" : "Configure a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Miss+Robbie+Tromp/set",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2099d7f-f17c-3801-82ea-597c3e98430e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginSet",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "9b4c0069-5e72-3eca-a78b-433ceff3e414",
    "name" : "Configure a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Lisette+Ondricka/set",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "9b4c0069-5e72-3eca-a78b-433ceff3e414",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginSet",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "aab51896-f2b2-3bc6-9fa2-d6d1dabad8fb",
    "name" : "Configure a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Asley+Morissette/set",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aab51896-f2b2-3bc6-9fa2-d6d1dabad8fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginSet",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "7974d31a-c099-358d-85f3-c10a8663b420",
    "name" : "Configure a plugin - 204",
    "request" : {
      "urlPath" : "/plugins/Les+Russel/set",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7974d31a-c099-358d-85f3-c10a8663b420",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginSet"
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "7b7003d0-f6cf-3ca6-ad30-ce278bf4fcba",
    "name" : "Push a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Darell+Conn/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "7b7003d0-f6cf-3ca6-ad30-ce278bf4fcba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginPush",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "9a839cb5-c6bd-3539-9fdc-6d5acde36893",
    "name" : "Push a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Lindsay+Murazik+DVM/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a839cb5-c6bd-3539-9fdc-6d5acde36893",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginPush",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "ac438ce2-1ae2-3875-9132-258fc06ecec9",
    "name" : "Push a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Miles+Glover/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "ac438ce2-1ae2-3875-9132-258fc06ecec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginPush",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "4e4cc877-fd02-3ec0-a58d-e58c30bc9386",
    "name" : "Push a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Lowell+Botsford/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e4cc877-fd02-3ec0-a58d-e58c30bc9386",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginPush",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "1a652236-d331-383f-8de1-618c836686b9",
    "name" : "Push a plugin - 200",
    "request" : {
      "urlPath" : "/plugins/Willy+Hintz/push",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1a652236-d331-383f-8de1-618c836686b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginPush"
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "1d4a5abe-db5d-3e8e-862b-4f55ad545f5a",
    "name" : "Inspect a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Mr.+Gaynelle+Zemlak/json",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "1d4a5abe-db5d-3e8e-862b-4f55ad545f5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "61b55290-cbc0-3be8-8518-62647cd091fc",
    "name" : "Inspect a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Skye+Williamson/json",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61b55290-cbc0-3be8-8518-62647cd091fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "03f2d68c-b2a5-398e-afb8-ab5acc668c60",
    "name" : "Inspect a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Susana+Bailey/json",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "03f2d68c-b2a5-398e-afb8-ab5acc668c60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "7975ff47-0377-3416-a5a6-f7e33a3047c5",
    "name" : "Inspect a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Mrs.+Marilynn+Mante/json",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7975ff47-0377-3416-a5a6-f7e33a3047c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "026611b2-b602-3f3e-9c67-27e5a00bd3bb",
    "name" : "Inspect a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Elyse+Russel/json",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Config\" : {\n    \"Args\" : {\n      \"Description\" : \"command line arguments\",\n      \"Settable\" : [ \"d97xi9japut87oqbr3i88ptslncaifypml6panh3ifw9ff1hufimzro4a0bpvntc41xi9x90c1xsvct9vdhqrkn02itbyueyezdzjqtjn6b3q38zyb6k3os\", \"05bg8w723y0x01eb3msrk74eojf6us5nnbiz34uitlrl5k084lkgs3xo7cxwr357o99mtsuil09fqwt79m6a63a056ttit0aplu1\", \"9ddjvy38absdth1m2u85whp56w11twvkjfx2y84tnoc7swalac9x9vvgu8heyt7ohyucimdsnzy9dcpqk4ny155zij5h40yj4xktk2rfoftu87u1uvggpttw6pwa24erls18vae0r1lj361makk65ts123v85ztyj0j6n0ae5w\", \"vvgl76dqz0mnxopaleupr2p6zxd28p06k9bsto843fvqgrpl0uqn1d6vvulh35l4e0lqd9ba746q79zc4u2i4debh1ldnqltfatjkls7gh9tyzqw317675gja\" ],\n      \"Value\" : [ \"pkpzn8jb3q6lfzxjc49ixfgea54mzd8jsmzdg9xyemkct6aq3a235idaltde348a8eryesie2edagnqnspu4uhyibiukc09yod8hxslvsaox2il7c4pvzbwmtds4c8bjou3c51\" ],\n      \"Name\" : \"args\"\n    },\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"fm5h7f2lyf427s\", \"hy5kxi5swjcpoud7j28r51efbcaf44uneyi5twkmxijod6qqxfa3gqcpr02qjhc7hpb914qtc4h38bf6r5zgq3r54h63uzt17uxwurzvs5kv04\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"jale8ns9yn2xyjz0y27vx4hn7kdkvelmuktu1xoretfq0tgjz6fh8ytmndqpc6f58767bb5j6ndo3k7ijg2ip0c1\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"4xb7dsrm8tjc7yooced51ahgrrpzikg17\", \"2ut6abk6t0xd25y4igb92ccpi6hkm0eyenr5fspalyut4felw7nc1c8efgecjlw9j79thqowspkmeeq92tkuyt\", \"l4llr2aluxgc1zzfnn7cwvkaabrbronpvfk2qttenstvg0l9tn1klf5rt2ffgc2lkmvhii8o4oqx0obgm5lbd6jzmwhb5904h89i6lmergntai68lga279u8nfuohe1m6ppsvuk0zgwcavyx5d85rtgo7dd6x4wczuqco4urkt253cecorr\", \"v39bgs2umcpbmj3dx1hqm8r2\", \"ut7620mhsvxiv7636yazdmf57cpckcd\", \"i6cx8zhru7lfcd7yfhf7gtmvrwl7ic1f5a4gm8vt1ragqz2k0xmma0nltrlfdmvvl0s59ah1bzr87vlk4t3ew1p3gsbgx1v7f0i0vsp1ol47jx8p9\", \"lzwreuna1ymvmx8rwkysvtd1aj8ewzuuy3412th8b1e8xpprg7tbhi1dh\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"j0hrf39o88vt4gjh3flyfu659a9xkmnmofp38amd18m3ol7qzqyv5s8cbjb0iph6bk9lry6b5i8z2a46n186i7yavsnadwff2qbur86mdsmti99x9zsblm6s4ylkj92w3e4xkx8nlrsxosvlmpg4o1fk388qyittevdxqzsxpeiy9lwo1zpri\", \"yk6u33e7947xqujujzrng5s0quu0lw73upp4yw\", \"f6moe674bgtskjmrc9hihxrbf23d1kegmu67tjk2eptt8o6kzf44zdbdrnz9o7yvf21yefx4owepjx65qzd5d35rw4ms63c1irkinaet10ouzywze\", \"nyd42y806wkcb3nlb0vvi7p9gc3g2cyoe11dtnqj4izhbtxw514yuf6r30n8kbtj4dm71gfllqtl7276g9i5irp1rhft26gvkq5423g\", \"u7cjbfd8btcrnxp85817bzw3gububc0jew8deymf4kauyxbzonmwyhdzwcpwto9nlnz1yhs5muog05wm0nagkh6r6n6bgpb1s4734ehhtckh58t0a3b1v1cfyoar4838e8buxu5nk9ltt0txigi5vre8aj0j1l91svqczqvr5ae3445a7tbc2hh943mlglou\", \"ls87yhezdz69hzbg9yliya30zk9qwxgkezafgu3jrffi8jzigbapdb8mvssrjq8a7jj\", \"da3syttsmia9ovvlrj2pjpcia5rykl91nhqcwosgva54xa3zhh050i3lihr5vbvgq3ssh34nqvg73zpjy0vif0ir6z2qwve1\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"li5hr5nehstzh317dvhborp0qt36xucwi2zpnbung8umo10xgazewik8fusnqbjvtxxxdufyi48ysq025m77eff0f2ca6th3sn8vrogsfobycyuyifdh0lzwogbgjkn7pw6e7m9rxsvqoclll290km6rjjpoj38thtdvsjngawsnltav4\", \"b1g14nu03j6pornbm1m7kjamrokgsgtjavtshxphineobqngbck63t8jwfihi2m3qv6fr0cn7iy08ftojvgzpep4x\", \"sy1nqe3ec7t4g32ln9s3o2i43h2a22lk3wxjq78p6rml47l9h85aw18\", \"17d11ydtmotr16rlh09cwwv6jmjiuggi50c88hc3hnyqjihvda6yi4ylt7xgeetuc6nuh0wgjn4wpwaqnfwpbz9l6rski4n0yzy3zvy56ojv1nmlbm4h08w4oi6iv12\", \"5659jwyv9niqx7pshzsanxfh4ujny575r64pir\", \"m5xtr27lgpjzml5p13kk4fepnvfls06aik5ys14in5izgn8xx23saql8srve2a6x0zo\", \"m6zc22\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"00zcd0sy47z6g68rzrmape7xabgb3ccejcixx6y0btu2d66lweionhkizudbrre9yu3ppf0kyu9pk6o\", \"ksfax1honbmtpjjthbzmde6y51rpxizy83xx5bdnz6xn8qsjfbt6a7p3j6x3j6qcq3w8mwiodegumh\", \"lso6ebg9ija4btf4ragsv5rvn4wts879oqp6u2iklhwmjjjfr2u6nlnmg5o30jl3u0a6a5gdwqc13vwornb1s5ya24svheuay5b1pefs3s5ws6vxpxa5m1vq69j2y945ipgokxb956vkg7k1n4yry4mhostc0206wwxahmzgkcxopfir6wpub78sg61n1\", \"n7tvwpn3dh1g3fsr9wv79hmz4a8sjiki755sppt9ri0erlnqmorwd8w80c6d76vvx0h61tn3x5r7vrmxfbfgylf38lvy9ch2qzogsfp4iyn\", \"42if1fk2fw02qt0jypiv3bp2kpa970brgrpkbujhdu3tjc409gytui5lhg3b9xuyzdhssdyd6vzvg5nudzuvb6projf2qe1\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Description\" : \"A sample volume plugin for Docker\",\n    \"User\" : {\n      \"UID\" : 1000,\n      \"GID\" : 1000\n    },\n    \"Entrypoint\" : [ \"/usr/bin/sample-volume-plugin\", \"/data\" ],\n    \"Documentation\" : \"https://docs.docker.com/engine/extend/plugins/\",\n    \"Env\" : [ {\n      \"Description\" : \"If set, prints debug messages\",\n      \"Name\" : \"DEBUG\",\n      \"Settable\" : null,\n      \"Value\" : \"0\"\n    } ],\n    \"PropagatedMount\" : \"/mnt/volumes\",\n    \"PidHost\" : false,\n    \"DockerVersion\" : \"17.06.0-ce\",\n    \"Linux\" : {\n      \"Capabilities\" : [ \"CAP_SYS_ADMIN\", \"CAP_SYSLOG\" ],\n      \"Devices\" : [ {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Error accusantium voluptatum enim quia. Aliquam sed tenetur tempore. Id asperiores quo dolor et est.\",\n        \"Settable\" : [ \"ci63xol9vraxm2wg2km7z16pbfkujxa9s3au54fr1x\", \"5z8x75m5m0sr6olsrloghdf8w4nv80exc9e3anl0ednsgffcxfavmwv97z8hv7molkbds1k75brwhybwi83x3omr0xnnksmmxkn4txnmo735zm0dob4i9mqvps5wuvdyi4bnp5io5pbgophhfpwmbg580ma2n0exitb0wzd57kk1wp8312xhj05213o0x3viob6\", \"ne566h89mcykoha2ncx54yxu9pkhccnq3mivnbaaaia73vhg488lyole4o9kdi8j2wsnhluzqjk7j1ce5pe2q73\", \"yy92gn3d5gd1tj0n4vohw804awk34faoxq1adu25r74yk8b0mpxovru0di7yctjo\" ],\n        \"Name\" : \"Denese Walsh\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Necessitatibus laudantium ad quia sapiente nulla tempore. Eum dolorem delectus fugit et amet ut qui. Rerum qui et et.\",\n        \"Settable\" : [ \"dhtoc8vyeopj59fze9\", \"f5u\", \"f9gpqjpl5k3mhgjguhxk92xiss3jb9r4z3ngizu02s7oyc6mjecy045tusrcc6uc\", \"5701nhcfwvvl5nxryeumjei7vv04cpoe66ebam10nzcz2o46ndn30ott0z66p\", \"sv507hln3gqb2\" ],\n        \"Name\" : \"Jefferson Aufderhar\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Corporis fugit totam. Ex laboriosam nihil necessitatibus quas vitae aut amet. Et itaque culpa ut iusto. Expedita eum aliquid voluptate ab ut maxime fugit.\",\n        \"Settable\" : [ \"8f9pncnqqx36bb7jqex1b36ds2nawnnaeufex85zd5qyg4enp2anxf6v0anxp4leqcxd4ec8nevts8ngvj3svnyv1030ocrwn5ctet48si6dz6fts06khuc1ac6f81xt6s4mmxesrn340ntve38vgwqknmx65nnt3i1x7vpkcr1sliheyek9aa\" ],\n        \"Name\" : \"Milan Goodwin\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Sint aut quo tenetur magnam veniam nam occaecati. Ea laudantium id. At porro et maiores maiores quibusdam aperiam id.\",\n        \"Settable\" : [ \"k4l0jud4yv9068c3nx4a61hm1efzhmvfairh9cvpk296gu2jccqfyttzu2w6npclasfuqiv0p4zgydqhkf0h82edordsee1l7os2hs9pxt0ujd97g9dpqiu2ygule6yy712b2u1go7j6giiwpbmucje4utg0hxd09c12v8iymxt1lsrotgpy3mam73e94b\", \"7qnqeruf2l559m7p5qfckhv3cts0gy0lbx5xucwy68qmeiwvy4ymdn3u76vlwqezuq9etozxq1er5w4dwxgp29mqhosbpocvxxrbz53gfltxxbhwl3bhhwc3qva8zcl2oq7rnm315kn\", \"w7x6gfi4x52ynrfe5xcuug1zq9qovivongg4pgemrcd3ylbk18wqp2hnulqxw4uy12pya0y9hxg5awk0uuoyetqz5kps4w85qday7fpbx47qmfkvp660o1wjaw1qersho99q06fes9ao4bhcueof9roa9v31shbt0lflik1ukowivnqtcdrbf\", \"zaba621ai6nw7qln7j7vzkel8cxlu456psmm0dm4fxrzkvqxmm6yr1ogxe5b07dmuen4kt5aki4y8x9hb4z13c514e30j5lljwkypsan6rp9zcw9cjxvzq3ox1kj2rrvqalnvdp5r225wil2b4p126o50sb4jl9glc08s22q5h4gwoxfz4uw4dh71mwrf2wc7\", \"gnkhh0rnuhntnys8rrboc7hd07e82humyb2jqf4hkdq41j62z58ovskn52m9x94h09j2g4ic9vx897mifnaapemx3l8m8emrgsblnbypug3302kd8pd0i7slc59nngh\", \"j2j2lsyzruydftqr4o9v9uv4qc9vvd48urfhjl2jbyzk1ibx66uz\", \"fs8a10570l82nuw6btb8vo1wjd5olzub7exednmlshamxkp489xhdhho4ak3p8eebt6mmyydk7sdd2ukrrc8tzfxsv109cx1qtl5zhuep8phl4zjst0gz69or04v3eht5unvwal12eb13zstymthori0ok5lgm\" ],\n        \"Name\" : \"Jewell Haag\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Minus consequatur voluptas commodi sed. Ratione cupiditate cupiditate. Et aut ratione omnis ab consequatur. Distinctio quibusdam et non reprehenderit pariatur quia.\",\n        \"Settable\" : [ \"lyu2orm5v461589ydyactnsp14ireoxtyela59ubano3aomxvss0i1pahkfwf1q2xukoyqbsdkuzfwtw8g0crffkyrfc1hzl2nhfum8h6nc1c4wjendm6er0dud8x36um5jik65trzrtxol3lt\", \"bfqysfsqzfh8k39v83mxdgskdh68g79uszqbu6nqsvb55qini9u8f6felj6fbu9svz3xdx7w\", \"hq9dw88igcahcadadt13xj8\", \"hl8largr4ogtstylmf3qhdlekcxtiyoy7\", \"t5swjp28k\" ],\n        \"Name\" : \"Vernon Funk\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Soluta adipisci pariatur est. Asperiores et laborum reprehenderit pariatur omnis. Earum dolor suscipit.\",\n        \"Settable\" : [ \"bf89vw7sovwenpj0\", \"cq1p13wrs3rmttlh0vxirbpxrgilc9hjurylaywg2qxvud0j4ownffz10qswa6f1pywp1qo\", \"zikuuzs21v5fn\", \"2prfw8m2t9bzy65iyizzr4ibxqyusdr7xm81wxlhpqmth0sc5fi5bwky0w9siuclycz3lwnoxyvgzqrm9xsjeo725zodohbxp1e0rrg7sd502nqexr9kc1ghccj4tizh3158mftuqotswt1zx9\" ],\n        \"Name\" : \"Laticia Morissette\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Praesentium ad molestias veritatis quo. Quisquam enim perspiciatis qui. Quae ut non cum quas aut. Corrupti in praesentium voluptas. Accusamus nisi ut mollitia consequatur voluptas sapiente nihil.\",\n        \"Settable\" : [ \"cdmzvfiapaled502m7wirvilxambdvh26kbnu0rn9rijwqe9fcrasf9qo71396qr88dgamh5l6cb7pb95xomn6fmadckwxwf0i3zhnvohns66893t50mozboxvameel3oq1wco3qlz18bluqipyxyqbx7erx6jaybrw3fm4u528c0j53k9nxmfaooqkpij7deuk\", \"nmxvgteso5bdnoavp2sfdmltmwuygevn7y5mudosom9wzx5obapigpruo9zvyyf7kwtx9mai5vggdsxcbjo67s2zq7a3w599lcg80r838mcpckrsy791td4dftw6awjcvun75g6jg19n2my7gfj5iw40ckc4kmtd9yeq\", \"t3afmaqugsquwqekc9it38rsgm\", \"1iz4ubei81gtakxhp99cu514upgnnxu8t2mhx0a01\", \"16czqux2ea6kp7fg4kyz5816fxbdo12vka27q5ngyi5u54phupb46lanatximawytwohlhcedebz12rkrt51jdg4ad14gf4iwcga1hwa65mrsueloioncwk3633osrjdkmn54adqvfo3uba85boc6lm6sarlxjwsez9fh48g\" ],\n        \"Name\" : \"Lilla Gottlieb\"\n      } ],\n      \"AllowAllDevices\" : false\n    },\n    \"Network\" : {\n      \"Type\" : \"host\"\n    },\n    \"rootfs\" : {\n      \"diff_ids\" : [ \"sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887\", \"sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8\" ],\n      \"type\" : \"layers\"\n    },\n    \"WorkDir\" : \"/bin/\",\n    \"Interface\" : {\n      \"Types\" : [ \"docker.volumedriver/1.0\" ],\n      \"Socket\" : \"plugins.sock\"\n    },\n    \"IpcHost\" : false\n  },\n  \"Enabled\" : true,\n  \"Id\" : \"5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078\",\n  \"Settings\" : {\n    \"Args\" : [ \"a3yrqqibxr6lu57a5hwq5yyhqnszb9x3kxz5vgp8myp8xx85vnfpkbxnlrb3k4ccew1eaq4mkw2jwsup2gfog590zcsqqdqr3w61w5web12qbb2xndel1v9pgatvavx15310oroafx25lpkpbyev\", \"fhcjh968oncecgnuvurtao6ubor0igtjm8777om9baha675fbme7k7vhd9ammnzrk6bcrggzt6s89f4r3k44d08k85dsieuzb4naq8x06u0oy41pvbfko8arsbsfxfzgomjhacdtu0uesfj6igxfe\", \"psy883fhcuat9i9u37dev72yr5lgn58apeoa2nsgy3q1t7ae0q3dc5mofqyiz0\", \"3cbwsu7ohfwatxd4vrx8mnctq7e2es2cgf23d0t1fix35s7yyeb55gaidogmtzc1zsckydoifs64hrkg5dnjtckjns9wze2pvq28jfmeds0kyk4aj70yfxvq2l14wupik6saovd0aijbssr4odrh0hlqyi88cjyqiqxr5ozex3azmryytm4w2ljeq7132czbj\" ],\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"h56jqedrmp8uad50r15mji54f4lnj9oxrao380iqqbfy9k4gug4paogqjp6ziljkk4kioggtzot6s58dvjup1nxnpvxx7dlfipah3nm8sohrfeqei6xe1bykvt9ls3vnnrie00ym7y50tuhsj94s9mdk7webj253s8xu4jm7qwcc2hqqevn3\", \"n0hbapl5t7855dizwu5fhbp7jedy1u3ijfk8nywg7masmm5xp76stbp4egnlkr2rzvtpwibo0sjgzb5tqgckzvjpqrz96pggki8ok8lmftezm8qo5yhf647ptjmwu99anr0d8twech31oc3mgj9ioudhpc7kwek9\", \"dz689pdnosv1scxpirl5w4pebr8scdxdscz5rddhuz7avgiyvifjz4pojumcukvk0fnhvevsxs7oz66ye28eor6tuzg3xbq14dgxndjx6ih5t3agwaxjo12yhyukfequo52zgspnrbhywm08o32gbvz66n2etljr8cio5c9eq8oz\", \"qgrucpmvgwz0f5pgo8pzhpf14b0afw1il26bxd8rlus88kokhdtqkftlwq4i3790h3xkffenlnf6\", \"r6vm4on\", \"vrq8cyfse8on687h533kd8d4ahf4qrsem0z91gn7e80petkjry5o5lqz\", \"jbkbvi6dvqaj7xt8524nhkz4cphn1ihvfqgtjbv8dc01x9gcxlpimavf1odjbjjpcjqnp23tx90m85d4sghlo8miyoms0errjm9vcswv0t3\", \"y4f75os5oe11w3c60rkiqwj8dzojcsdzaw54gjfuz0z53kom1e7g0260shy4b1wut3iwsh362f4o39nqev27j10kj6x6xx3ji1d3ojogzuxa1cjewwaxmup64o9avra66r3f58yhw0us8ah1ay71qtd0mwan9vg3nvzezlgpg7ld1uasgarkqpje5251\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"gtjz8o241qv3t1alvwp1ezztxzenp\", \"qefnha90zyfyg3nxtoi35moegv2gjgomah168c9fivw7vngboedfhshicqtjiepm8zo4jg9xgj6wgk2y3dedc0csxf00xpwtt3g7b4vceeqyavfjfjuha5rxgq77oz978x10gq9zv0ooav1kbicmbqgbgthx3\", \"8pm6trbbcqzfzelq4e21acrpzkh0tgqdae1bkua57cfw4e3a6aefviyboap2ir74ujra44ajpm8syqzhd4ign2w5v5qx7ln9dnnv136v6o3riq990bryhbskrvx2za4w9192yg0mi6aucw18n7\", \"649h3a7fuui60zahvq1z0e7t7lq9oa7aaaxpq5nej86ob1p937gd8jty88h7b7wfyfcy71sqx0e688lwdsd2qy9w0bj4id0uf57rt5cetbbe3g\", \"sommahwoby1q88nx2zx3irzufdsfr6xrpkd8c6prpn77arkobu2tcy4q9bzqmur76wgv2pb5cll52xqtubkbchrcethugr72vjyold8o4fg702lrztnsq8f4illqe1doddcmkbxv11yzjewmep8tvuijpbcn80r5yzwj4c22jcduc9le72pa\", \"hiqqqidvz3kctlrf2xfqyff5j3naebfx2kas4hlk85a3k8uhnqj52tjort7qy2g69kolzopnx3b0h0zmtz8otxt4hkavdn9duc1s6ivxht7aww6zuum46anx36h9gkf61mg9mrtuj7ri05z181zkqdnjbdutvecsy\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"ljt0w4o8qw6ksmuvtxf2h8irl6dgmm20jnbkf6ddvx422np58dj746km7yfqt6ubozynr0tg401hjtfyr8qtolp9zedzx7n0umby7qlokext0wcjy3l9cqqoz\", \"nh6mjjv89my2hz9g4z349nxmdkqqu8ouzrb5644w9k4v7lut23jtp8d8re7osgo6him6b94ler44bfzq0mym8a6c98kfzibuz2jsquf51oj2hicc48m6qbji7uafx738efew9bvpys1\", \"b085zj7d3rcevemtwlm4toc7io0m7dcbbqaqzfsf61cnkc73rii5qs7d9naaaxjfufdxjz61y6d2ajyl3zcj6ux9uzou8pv10tg2fv1c1988gwahcjpw3p6k1vd3wni4dckgvb8zds\", \"vkm92onosgmloshaoqwzh86goquljhcxezts8k06e0ghmsz\", \"kobo3xabfdr8ja4w3gxup3x1lmh1aifh6lo6k7y2hja7y3e5c9zfqqh3wsww457wn008m70rzj5wnjesqym7qxp0xocb2s0ojkea1u7p9yvfzr4ppep25nwgo3yy8s1nlpku9iv1ewartd5\", \"kgqjoyp3x64pza834dakf98jelhjqlxk9yk1ahgg0kjy2awgt5bn12k3i08hx1ayaqhk1tn3umfx37h015apu9vjloil9ofxl3am1dzp5ao8jhvkb\", \"wga3e8h91fmnuxkfkeen6s5nzvywhmun22495btbuj2ru4l5yq1g\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"k6pudgx8o5\", \"mt42uuga0joweobwbcxmwktug5w4apgl20p9djlg2i51x4jlvsvt9nbr25i4w5msf9kht7ltaic0nxrfi79g1v9606w4yw5ll423qsbjn975rrq2w5\", \"jnw4108xi7m462fifxrjrrhx0pusx2vvjvgs42zyznjcarvvapihhz0km6n92mdauoj0a7rvpd28ibooz16rkci44z2tx0nzmnoei50nfnpgl77qa85ubuj281tedrsytgrcl2ezfzqofmccqg9fy7mxo8yxnz9dkr48amovfin4tdabd3k9ix81qg0zqtml\", \"pdco9dj7r9iv7kgai1a8facog94191pu1mflm738kc8oumlt2rqsuwpx3px\", \"h052tubo6hha6lf8t98e1zpfnmtlkqhisbt5blxcm8b6olbpt6lu58aleukgw9goa20bysrlrh9mb4ztfy6rvq52yhiyrie7cjdh4nk8sljindrcmlwi7xxw1pxmliyytp5hjgw0i6c3c1wt3mn5h6i0r9dkyhkqussx1lomph\", \"gm2unlf01o1mu54kxx0eg3nt7enao93lawowy0oq94skz7mnaag8yxw20aj8fyin21ky1bkbusy3dkapxy04eosekyjycpny6bpicjcljid1jxaigzsdwoma9cr5chcyob40a2k058bpi6\", \"temmt0mm5dzts7h1lla86ce6539ys7su7tkb1s3opdrow2972frolbrhx20g99yavge0gok9jtevc6al9vfa1lw5dcr45n6g76xvz4wlb1e59mrwrtu87k\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"2072p75bdvvqabfsr55amz\", \"cirqjvoti84ec8833mqfpq0kuukuo8psbxkwpzium2dlqh3kklal7kuxdct8nl06714n9rog\", \"os2od4hu0s96w5o\", \"2qkp4c41hiub3ae5bnhu\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"l79vyz4mbc09wnsljvryxnmk8h67c7vttsofycqkclx0mbq9lbjod996vn7dj6e31f1rjnzv6dzqixuep3qukd47da9hhs15qdf9571g9dcgweyybkg5ax3oywbyvbuczmi6cbmaul8af8xlo2m2boawfb9ihur7oqkurqwej06ct46qjpkr2e5sbskbrtm7h461\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"vxbu0nuoifhghzcz9k3oywdkbr6o32xv5xjxihucmrurzk19nistuo5o3v0vnlfgkulcchcn7khczdxj377g3lhqe6mqrxljmzrgnzrp96z68eb89tuyjuc9bw8wjyw00wj8qp7hri6h7q7mw2nd\", \"2f8g16tsfwjvasq7cgjofirw05pxg2tqh5aiccwqaq7s86z5o797t8e9ntjpckd3vbw4o7saddw\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"uhdqwmk2pg8t4753xwnlof0jtzpfwj9u\", \"p1b4lxcj2xnhtpqaha5mwktdyl554wrtu3rs9t74czjzzeelpiah3fg9e5nbua3mmvvy7nwtw69391v9\", \"6qz4gdrwf3a26iodslk1qa96wpcch4mk6jig6vicnanszebw6kno996exv9h2dl6adjueguc0h4vcerndinsvk6f437p04cz2te8kvb3ia4tcptrvlmpe8syi66nb4u76yftpkcq5xbr479wmn67y3he7n2jg6k9p6n5gnmlx01qydm0jo6uqzp7z\", \"ptn1pnydgs3nqwo42bk1nwxrx2v9gwfq5kfu0tjrit5lpaeqt1asmp69cyderaw\", \"240ikz6hhdvjumehcf7wbli2d7s3j5k49vev6vwlugfl3ggnjx8tgcbl7q48jc7favfhraqtyg460ik\", \"oipmdt1fc0nputg9jhbt04dppnmhy3ggjbdo9mkh1mxo4tukdqb7yoqyhwgnzlgr4txpyisutyo3gp1cp213vhq2pc6u8gsilrqs9g4juklhmoz35c5bkmgm98igpdn58e7i\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Devices\" : [ {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Fugit et saepe non fugit earum voluptatibus. Est doloremque rem alias ipsa. Porro magnam reiciendis fuga ipsum corrupti. Consequatur magnam ab harum.\",\n      \"Settable\" : [ \"zoq4dcqon83y0bif3cup9p9ji\", \"8dmz7udf3ge6ufoqu1k9vt42librmulwgu5iu31um7mi4q6axgyx28efcwkvh0zqmti21i56mdhbiglcb4czvgtb2zhjrz0hhi1o4fkwobi7wq4dgk9htwmrt4v4gkswxix3bz4nhru\", \"lummdj54lgpk7z2v\", \"4l6eprapdanukxe6n78gr4d43apwys7o9q9k509yidnyh1c2omfdbkjves8gqfuyuwljozns0fdvxb9rixwxpv51gmuc0dfoj0li1wczoe5u1rrjziosbmh19\" ],\n      \"Name\" : \"Lasandra Paucek\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Qui necessitatibus eum iste architecto voluptates ut non. Eveniet cumque eum officia eum sit sit ipsa. Vitae ut quis tempora cum eveniet maxime expedita.\",\n      \"Settable\" : [ \"gl8v4hrwsnggtpeku96aje214yisgi9gnx\", \"lwchi2uukt966ijzhmgtmd2ag6oqlkg6aljdo9d2emtet7olq0dg416yejyrh0u3bm\", \"wefb9mvwtae5htfkmrpcvmux8c50d70e2sjiu2o4gq0fm64nzf6uu422hsghin8bvadc5e8edocuu741c5xlm3ibopfg3vlm5i7h62ia2pzeqh\", \"v8vol96tld6sbgupr3ky0oniz1h4nijt72iv7bwe72eict1ntbxd\", \"rgd84gycv8o18zji3tox5v2v1ju5sw22ljp7ltpz06nnl2wd47u60yd1png1cgfqi1a7vzudv4ggkw89ke36fkgpd0x480dug60ps3vsly3jnclt8hm6m2pjhfy0y1kwf6b4ica2\", \"ywjwyc3qll7rqsqgyqqw57ok67tud877x3uaqshqxt4jjibkw8nusp9dh51qhzs3gxhi2dm1d5azt39a5kgde7sks5qu9mb337m8u0b57ep5or4tvln73wohuruf9r6mqsv7o94w2jbupuvx08jw626svkglolfolpo8500wpl2y7vfq7\" ],\n      \"Name\" : \"Ingrid Hoppe DDS\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Facere in tempora necessitatibus inventore mollitia enim sint. Eaque rerum nam accusamus dicta eligendi cumque. Sunt cum expedita optio sed. Facilis vitae fugit ut eius consequatur iure.\",\n      \"Settable\" : [ \"18ae9zsc1hpemo5ac7sngezwmd92pp9ffsjo5svzwm95v\", \"5xbia0f4yj8umfw10w38nryrmg1gck2pkos1gnfxe7orvgtbtts7wktlioy3r1eatxy48q05etvle2l5rmozpai3rpwg0qi1rv6ivqk3lihjyabxgq08b70mxeqwf1skoi\", \"k0qcncgz8gwyccyie8yjwehcw4imcgoh2o5pupdlxj0qc4fyvme8k70pxkktlm883loz86nmzlmhg\", \"gs9wzy5jl1fbc9s5pctti6iilfw132248vxa6ntztcg53gpbqztfppoj5yndocorwr6p6lpm5d2v8u7w1ppdk7nlq9nhpjzzigk7o05sab7o7uyhc5b0ygc76o2v3l2ls5o\" ],\n      \"Name\" : \"Karlyn Ferry\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Sit corrupti assumenda. Sed architecto at aut vitae aut repellat. Qui aut quo qui.\",\n      \"Settable\" : [ \"bxpds67278h1uwnsewbzvt5elw5wzyosa00bipzqowfdkdgd037b6k6f2f1snr7hzwbtji6cmiq3vn2nlephy595ogbtgyho61hpr72yydqvxohdryg3b7aog6tdovmyoritqvtw6ailbuxr1q57k91t\", \"762sxp21clht9xnf30xx\", \"ka8gq2znomxkzo6pd0tw0ucsen1nl3\", \"74qknjwmq9nzcm99910ji6bsmoxycwd0a6ccbbievwr17f37c0km05ve02zelhm26n8vkh5u1megw974qnk5tf4bge7k3ys6uq1se1fxpw3yjmryt3jmhwobk7e0o3up7onwl530q2eobouc74uvv5wvkyrip0y9b4v\", \"a1os2imk2lkedaycmkdjkq28dd3eunmv3yc1rbfr5z1gu0xtglcawz0ztfcdgphd305iyxoe6zne7sdbs1gm0f8dwad000uakffvdpbr4pjiv3g\", \"06hdlrajh78ayujtjjlot3wrlgt3a7eppszwcyy35u748e44onb6yo1fnudcuke9i89ru9lofot2ai0p38l2uy9uq639nwyk93el7bw2mr8mo7mvmad5qdtnskfkzj7\" ],\n      \"Name\" : \"Ms. Bunny Gleason\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Ut consequatur minus. Saepe aut nihil maxime porro. Aut soluta molestiae totam deserunt et iste labore. Possimus sit nihil animi et. Laboriosam beatae magni blanditiis eum id eligendi.\",\n      \"Settable\" : [ \"og2slpxw3tibh192b\", \"9mho3o7azx3mz6yn3aae8a0fk4cy4lixwykc7earkf8p82a07xqtngcpufmrswgu486byp51rokz54n29fzlu4evor6xq2\", \"7eq3798gmz79nw8r4r7kf5f1oochhrpcqrhea05cedf5pbaawpysxhfg7ved5nkr8q8rjaceufszr5npifqsz37faw7bymcun43mqkxj0shkoofv5egf05\" ],\n      \"Name\" : \"Oren Greenfelder PhD\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Voluptatem voluptas sed. Necessitatibus officia dignissimos id. Quos facere delectus vel veniam.\",\n      \"Settable\" : [ \"26a4bqak05r0mrfjlpkkogz7jkn51eq\", \"zyjokdsiwz4107blft8jctpp1pas0p4o6xfe8smsyzrp07wnhy0faewlv\", \"t8fac2kr54yyayf2k5q3c4fvcl29hkucjlee66cqo6ix3tyoq91mcu9gesdqj9yia6rx2ydm139uotcij5qsaneh7ieofai8dgggu8foo00d00kuqy3e5yrxscoid3r8cq399279f\", \"ooxd5ubvg4mwbcvbn0oow2jqug0gmzi76fy6yql64hiurfh88navqvlow7a49jlccnec258mua3qfifj1esd1kc6n6c1nt0ycd2vyembe5kssxah9xkq32y96vrpc1tk1m8fu2cjsouhajy1kgljatu6xwmzsy1krgwl1g2\", \"t90vsihotrnxbuf78nksfb12gxtdputea951puz15qxpadenegxo6qhfvzhuk8wfia9t3kezo1v6i7ji0uu30d1fjbioregwgh093lnqbd1xp3ibfvcy\", \"qcom3docrh07b10gav5w6o5aeqzjgshytuqj14oz8rmadk86nycg63dmp2rk8cdbxi78\", \"dwxkqia0ns0wdt9nswbcyedettnzb370ekmc6trxq76k08i8c5hvvdz4n6z4fmtkmdvpgu3lkgt7qb7lgkls5mvz67el5nnr8f7vmfkt1ipfc\" ],\n      \"Name\" : \"Jamie Hilpert\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Qui et eos et libero est cumque distinctio. Molestiae adipisci sint doloremque sit. Veniam ullam facere. Omnis nam dolore deserunt officia. In voluptate reiciendis nobis.\",\n      \"Settable\" : [ \"93ldbd80zy7oh621pvhlwggti4xvpge9yfpo43damk722xudp3nnx2h\" ],\n      \"Name\" : \"Cathy Schowalter\"\n    } ],\n    \"Env\" : [ \"DEBUG=0\" ]\n  },\n  \"Name\" : \"tiborvass/sample-volume-plugin\",\n  \"PluginReference\" : \"localhost:5000/tiborvass/sample-volume-plugin:latest\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "026611b2-b602-3f3e-9c67-27e5a00bd3bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginInspect",
          "schema" : {
            "description" : "A plugin for the Engine API",
            "properties" : {
              "Config" : {
                "description" : "The config of a plugin.",
                "nullable" : false,
                "properties" : {
                  "Args" : {
                    "nullable" : false,
                    "properties" : {
                      "Description" : {
                        "example" : "command line arguments",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Name" : {
                        "example" : "args",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Settable" : {
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "Value" : {
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Name", "Description", "Settable", "Value" ],
                    "type" : "object"
                  },
                  "Description" : {
                    "example" : "A sample volume plugin for Docker",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "DockerVersion" : {
                    "description" : "Docker Version used to create the plugin",
                    "example" : "17.06.0-ce",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "Documentation" : {
                    "example" : "https://docs.docker.com/engine/extend/plugins/",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "Entrypoint" : {
                    "example" : [ "/usr/bin/sample-volume-plugin", "/data" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Env" : {
                    "example" : [ {
                      "Description" : "If set, prints debug messages",
                      "Name" : "DEBUG",
                      "Value" : "0"
                    } ],
                    "items" : {
                      "$ref" : "#/components/schemas/PluginEnv"
                    },
                    "type" : "array"
                  },
                  "Interface" : {
                    "description" : "The interface between Docker and the plugin",
                    "nullable" : false,
                    "properties" : {
                      "Socket" : {
                        "example" : "plugins.sock",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Types" : {
                        "example" : [ "docker.volumedriver/1.0" ],
                        "items" : {
                          "$ref" : "#/components/schemas/PluginInterfaceType"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Types", "Socket" ],
                    "type" : "object"
                  },
                  "IpcHost" : {
                    "example" : false,
                    "nullable" : false,
                    "type" : "boolean"
                  },
                  "Linux" : {
                    "nullable" : false,
                    "properties" : {
                      "AllowAllDevices" : {
                        "example" : false,
                        "nullable" : false,
                        "type" : "boolean"
                      },
                      "Capabilities" : {
                        "example" : [ "CAP_SYS_ADMIN", "CAP_SYSLOG" ],
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "Devices" : {
                        "items" : {
                          "$ref" : "#/components/schemas/PluginDevice"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Capabilities", "AllowAllDevices", "Devices" ],
                    "type" : "object"
                  },
                  "Mounts" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginMount"
                    },
                    "type" : "array"
                  },
                  "Network" : {
                    "nullable" : false,
                    "properties" : {
                      "Type" : {
                        "example" : "host",
                        "nullable" : false,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Type" ],
                    "type" : "object"
                  },
                  "PidHost" : {
                    "example" : false,
                    "nullable" : false,
                    "type" : "boolean"
                  },
                  "PropagatedMount" : {
                    "example" : "/mnt/volumes",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "User" : {
                    "nullable" : false,
                    "properties" : {
                      "GID" : {
                        "example" : 1000,
                        "format" : "uint32",
                        "type" : "integer"
                      },
                      "UID" : {
                        "example" : 1000,
                        "format" : "uint32",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "WorkDir" : {
                    "example" : "/bin/",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "rootfs" : {
                    "properties" : {
                      "diff_ids" : {
                        "example" : [ "sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887", "sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8" ],
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "type" : {
                        "example" : "layers",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "required" : [ "Description", "Documentation", "Interface", "Entrypoint", "WorkDir", "Network", "Linux", "PidHost", "PropagatedMount", "IpcHost", "Mounts", "Env", "Args" ],
                "type" : "object"
              },
              "Enabled" : {
                "description" : "True if the plugin is running. False if the plugin is not running, only installed.",
                "example" : true,
                "nullable" : false,
                "type" : "boolean"
              },
              "Id" : {
                "example" : "5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078",
                "type" : "string"
              },
              "Name" : {
                "example" : "tiborvass/sample-volume-plugin",
                "nullable" : false,
                "type" : "string"
              },
              "PluginReference" : {
                "description" : "plugin remote reference used to push/pull the plugin",
                "example" : "localhost:5000/tiborvass/sample-volume-plugin:latest",
                "nullable" : false,
                "type" : "string"
              },
              "Settings" : {
                "description" : "Settings that can be modified by users.",
                "nullable" : false,
                "properties" : {
                  "Args" : {
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Devices" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginDevice"
                    },
                    "type" : "array"
                  },
                  "Env" : {
                    "example" : [ "DEBUG=0" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Mounts" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginMount"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "Args", "Devices", "Env", "Mounts" ],
                "type" : "object"
              }
            },
            "required" : [ "Settings", "Enabled", "Config", "Name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "e29b69b4-faa1-380a-99c6-b19266c63c47",
    "name" : "Inspect a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Leonard+Hilll/json",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Config\" : {\n    \"Args\" : {\n      \"Description\" : \"command line arguments\",\n      \"Settable\" : [ \"27pl1vapc4vgqrc7va1idwk4tq47qdsmh632spi6shhra83gx1gra8tt6uvt9xpd0ds4kz5cbg2sgmz6ya7obxvcru6mghwag6zgukap7yhvl\", \"ibhvexowqc96u6u4d2r4vl4cfa614rji6cwubh6b3zgvlgh9xoxyg57a7nnd8d12jk3bltasf3czpbvtho2aznevov7tl61f60mwbyyb9su4qv5wwh5qhnicxxb9o7ig389vl7znrlkftp7log6waq350rxgf7xmhvxqc08tn7s9p0s5jpp6sjxgffbcyq2lmrwbsm7\", \"0zx6sjclumkxmawjc362txzsg3xmkqgabbesslxy22r5kkqyy32mi6i\", \"d1dzg6vekaqpya9b2n9b92xtb8u\", \"txrqbk1o6nrx5jrgp5gv6gamaq\", \"4yrd7hrpcj08ugstohprrlqbxx96rqjf94zpfeabd9pp06mx0xgq9s4om10g70cn6luk5bsrja0uv3qin5697aycyg5snnyrct2djuw9e2u21pqio182f\", \"rui9z42yxxyf6bnja4ncmq9iu9dndbq6sg0w3xb0wkc8eymxxauu\" ],\n      \"Value\" : [ \"mmf2yuesfzjp7jo2akpqphnk\" ],\n      \"Name\" : \"args\"\n    },\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"b6gyzpnu9vab1n7z7niqlg0bh4jkj9i893whfyp3lyhs4kw0kanoh2y7y4dvrqnszp5q8i7k7zqk95wbpz4qtxarmepivgt7ivhr31yfchzclehswni6wpxazdx8gczj753y4zy7elew\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Description\" : \"A sample volume plugin for Docker\",\n    \"User\" : {\n      \"UID\" : 1000,\n      \"GID\" : 1000\n    },\n    \"Entrypoint\" : [ \"/usr/bin/sample-volume-plugin\", \"/data\" ],\n    \"Documentation\" : \"https://docs.docker.com/engine/extend/plugins/\",\n    \"Env\" : [ {\n      \"Description\" : \"If set, prints debug messages\",\n      \"Name\" : \"DEBUG\",\n      \"Settable\" : null,\n      \"Value\" : \"0\"\n    } ],\n    \"PropagatedMount\" : \"/mnt/volumes\",\n    \"PidHost\" : false,\n    \"DockerVersion\" : \"17.06.0-ce\",\n    \"Linux\" : {\n      \"Capabilities\" : [ \"CAP_SYS_ADMIN\", \"CAP_SYSLOG\" ],\n      \"Devices\" : [ {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Iusto consequatur dolores expedita qui. Et eum aliquid. Omnis ratione sunt fugiat laborum. Repellat accusamus eaque harum nihil. Sunt cupiditate vel rerum similique.\",\n        \"Settable\" : [ \"kwrzcekwa47trdkhh0sis6os7plccp9b1vzn40decz7me4h5ye1tagb41p2q6uj0cc2eu7ugktubtkm6woj01xiicapi22wshc9fn2ubfeqeqyjitajw0gkzc8y3e60gwi2y9657tfa2j9arip7gb2bv5stlsyio4qiour1x1ihw3ng3nzw037buak2p\", \"efgprkshjpfdpr5a0ccd07e84wrwphg99hjxnenv0svb46foqdeykhky3a1wnorfvyll5hghm3faxr3mhpylw5ypf8sylfa7h4vb0xvf70c1pd3qpy3x0cj6ycf7wt3atm01lxwwk14gothirlpefas5b8jur3gcxcg\", \"t2dhw8j8b03kd3f8a2hor67tdphb7vc8v47z4qcchb03xacker5eomb59c2r351mm5debtnti3ihmvswaazjsx3cd2rqextk4i\", \"ymri\" ],\n        \"Name\" : \"Cole Wuckert\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Dicta et temporibus. In voluptatem illum unde incidunt corrupti quaerat autem. Non consectetur unde dolore iusto velit ut.\",\n        \"Settable\" : [ \"ayepbf38pb3gb69bp2c8m0mn0wtcdctsa0hmgc4bar09ydx77okmgjgn86weu73zlzjb0xo1z91chky2ncac\", \"piz62bryv3jk6tjffts83ts7fmcl8wncxz8vwofw34hlr78vg9dmbjk5314pb5yejszq3cdb5m24y1pwj5byyy1hc1owfl1656k2c0mhhj6tj4pdljc2sjrfcsdgnwnmf23n5npoi3ldr084ptmqmaprs4jlj29snn0q\", \"tagk5jf1xqcr1al2m4mtryzldbr00724ixqvutcg5wvafz9etw77chq56j4houmdsqvd4q7qhmtsu1jlhllh\", \"ezrk6da85b9unv1fk9afc6rt6apu6h5q1sb3l0pem4pmtn70kaj1n8kam46tzwh6inrtxu302sgmqraa8kjptejubsevspoeq4785mojybwe0vtpl\" ],\n        \"Name\" : \"Jamie Jakubowski\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Accusamus voluptas repellat saepe. Inventore aperiam qui quia ut. Debitis enim voluptas voluptates blanditiis.\",\n        \"Settable\" : [ \"00e0umlcoj5rxjwx67230zqhoguzngovvxr0fmhb326rf3jjdryj0723cbrigemvvv0\", \"hzt1e717z7tqz2lbxqb7k991pf3qqv677qsuovj6huhp7gez85e12tr01rcxmgkm15gb3dbmlx08tlfae8d5nhueped5atnx7e2mbjlf245bg82nq8j5fjpgoajwurnh2d1gnjda1asm15c6wotmhhn9n850mh\", \"4qcuzp8zb89eanz6pz21r0rx1206ongwjeyl3p4jddb4b0qrzo10hjxu84x458keguu8s80lyahfiuvjm77ijcttylzyzjuryxvcwrhj841osg8win9p5mbflw63mys9yrihtm52jdfj9gb7g0uw3f3k0lmsyr87ug7mkturirpnlgjsbrfx1pld0\", \"ikcz0xq349ml2u59pvdfgawfuf9jbg5od9d3odf36krnfhplkg82n0tffzulfqypygz24c03031ehsonsuiblkvsa97qin2w52itl6\", \"dcuqz3dy1sb3of6bgy8k15ubrl5gjde075tp8c1o6twtu2zgpqif3mwhwzo1i65s5w594x63ktfa0fxmfu1irxl93qon46ji1liwh21hif3rz\", \"l7nsp06wpqjno41wqv5u6a946e66t6g7pzlc8z1ox8ug17wu1uabs074thwz17vbv7woh80bll3r9e99gr1opd19t2l134q17txilql7a66c5ez1qgnwvli49djyppeisj5k\", \"w59aud0qv5y52exqaqaluzek0w59ypwfpr812rr2gde8h7wcog3qnflacza6gox49l1odx7z1ahoidp8zr4hgkybzx0qy9u9tins9vimemv5uvniwvoagrp8t236dy6dwjvo8xi9obzkde9iqhom9su34wqtcx4aezkdgu61b9qp2mp56owd6jyhipug\" ],\n        \"Name\" : \"Noriko Cartwright\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Porro modi perferendis sed cum exercitationem. Numquam consequatur qui hic est eum. Et sit nisi. Et est ducimus esse ut. Nulla natus in recusandae ullam fugit.\",\n        \"Settable\" : [ \"2xlxq6a6zft5xax7sk38sz68knw15eu6g266m9uthtgolqh91b7p7p01eo0431bj4t44u3ex196dipyt4jxpo87qo90ksi2dha4rlryo3o\" ],\n        \"Name\" : \"Muoi Robel\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Ut inventore aut non ut. Nisi sed quisquam voluptate quidem blanditiis eaque. Autem adipisci optio magnam tempora ut et. Et eius velit at in ut atque. Neque quae est ea eius.\",\n        \"Settable\" : [ \"scbi\", \"oomob7pa37q1b5nh4l1zhv2cu2cvtj1v1674ks1xpcznfvv0iv3u8xg1n3eslxuldxlr\" ],\n        \"Name\" : \"Ms. Ashlee Jacobson\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Sit consequatur assumenda sapiente ipsam quo dolorem vel. Vel voluptatem aperiam ea quisquam aut. Perferendis officiis sed tempora quaerat quas iusto. A beatae alias. Quibusdam quia veritatis est aute\",\n        \"Settable\" : [ \"9jshco8nh1j8cdimtff23174w7unv6enlcfxd6rivadprqbbjttwp52oyzjz4kfv2g5c5hmf0au0uaqp1ckl7kiyg\", \"beyujewjf8raosafhwftrv87x94qvoq6kkcv5lbk5trjixzd2gc1o7k4t15783ugyles2j8qd6kamvghqy3sqhjces1nvlfyo4yxf1657n855pna8sa0estqugz3ccdccaembeuk3ncitj8gyb3abwwimmn9jyvcs78b2eonk41j5eps2n47ulay\", \"aelw3ppili746sweq1wz3p57lw94zolhftts126m4l2\", \"sk8fwdmt6e7aiv188drj80j9n1eggd6862\", \"f9vb9xpbk5fso9zo37gmmdhkx03zm3jm04qe9au0cz2kikr2bv989l1gme04\", \"19xvw5h\" ],\n        \"Name\" : \"Bobby Wiegand DVM\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Maiores illo ex. Quas illum aut dolorem officia eligendi qui. Facere debitis aliquam. Et voluptatem ex sit hic. Quas nobis sed et sed.\",\n        \"Settable\" : [ \"1sjc7wzy0w5l9s4c8ynrbcedzgvcq1s2qynsodnyoqv6z5ai3f9uwxc344fjsdhlr3s41gt\", \"ksuoq8hef3gis4669rzeketf9iraa5rizkwjnqti3ke1bsht25chx9x3hh2uo6sifd5fuiz046bjp3pfptpfsapbdznfwzqe76ogc2x7y68sbfs83v7xfizobtl01ng0w76fl35d6jxr9xyg40u77x9odmd6tw9fhs605tepf1p5jkprj0xj0f6ojzb4y0ffr2tu88o7\", \"wlqgfa82yq8kefjvb070s5n9gulp7fbp7yaxy655c5j8yqk7r8iz7eo92j4re8yc1a92qyy0rf4ia2fl9t\", \"fhlka05sszmhyhckowyvjijd4qnv2zms2yj10d7b3v8mp49485gw9zv5s2i7ym1sfhuf8radono27r0dkb14r3urwbkq\", \"100xvdbs79j6tbr0ff70ic0e2dcazc68gcdwagbiq9mbo71yz14qbnwb6pvvczep646qt0e4pa5icusma0eryt3fm08youp41nbohixe5j5da7jeq8hk7w3x0x0587imchap92zwnsteh0rzk621ryikmwtxg8v8vz5v6c2jp295ln5ml9856kxeamllrz24693u0f0\" ],\n        \"Name\" : \"Dillon Upton IV\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Voluptas libero incidunt voluptatem. Nobis enim sit facilis dicta blanditiis officia et. Debitis ut mollitia et id itaque quas tempore. Accusamus laudantium voluptatem dignissimos. Nostrum velit volup\",\n        \"Settable\" : [ \"hjq8ayeeblp3gevw2zm15a0xqgehsl0om2ka87vrz47z0gwtpdihrrffojbedcs1cjppjg64g55yi9cv7qj1c5rsajpv9y1lao7mvk75cgdzek0u35w\", \"fivy397ecfovfr9r93jqqlto9a46p9xdl6770tnefff\", \"6larp9qfasai426yjozuwqey2q6kunhfu8zzitfzngqrd5emxa4dsai3sqh09ampyjox\", \"89dx5utp5rfbw3afga1h5r24k9xjc6y30icook9hz7sjeoxujfh6teu081p5thr6tw60v9izn50hs92ru802vdwxl3eohhf2acct10mf1fm175rm4t7dmlzt193nszrnl780ieywdfm7jh11da2wb61p2h0qi6h9l72fgyun8vtsv5s2\", \"rkngelv7pxog8tg01cuhlc3577kncte1j3kt7yu0g\", \"tfekewv72sis34wmr0ci4cxqtkxyclitb2h187aw2ee7ukq7jam27hakiowcia9b8wqb5cdcdsmcuashjpge0esjp4hl5uvegcqdi1yndclm7dar0\", \"tajs2rz6z\" ],\n        \"Name\" : \"Nicolle Smitham DDS\"\n      } ],\n      \"AllowAllDevices\" : false\n    },\n    \"Network\" : {\n      \"Type\" : \"host\"\n    },\n    \"rootfs\" : {\n      \"diff_ids\" : [ \"sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887\", \"sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8\" ],\n      \"type\" : \"layers\"\n    },\n    \"WorkDir\" : \"/bin/\",\n    \"Interface\" : {\n      \"Types\" : [ \"docker.volumedriver/1.0\" ],\n      \"Socket\" : \"plugins.sock\"\n    },\n    \"IpcHost\" : false\n  },\n  \"Enabled\" : true,\n  \"Id\" : \"5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078\",\n  \"Settings\" : {\n    \"Args\" : [ \"cep5ci0pdce4dquk9cwg327crfzxyawsnldg8s1dplvpsixzk4bvnsjhcshcjt5ngehcq00dg2q\" ],\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"5qh9j78z14i0el8g9zu0ycdnumrbg3domffxb610yxmrdf1lxtf2lnz5juak6sk5re5replvg3dr4eemftdqrja2717fwy5zidx1yw8ofkhi5ukt61cvqxq7l0qcczw926re61aiin4eq6affzw04ogsybmzgb5rdj92uz8uhfz2xyc\", \"7ks0b3sea05fbckj8g98ph32fouawgjypj37ckgyne5t9al5c6c952euttdrcyaakuj07l4t7gwy8tjvju6rm17cjqcef3bn4k0smqfn7f883lla58fic2h8kknvrzj0guq7wwx4quvx6mn5tv\", \"0ybaf40l79hakgsivj7k0nvuf4fw9tr3bj4a1j3x1i5c70l\", \"ukaflo1hwgtuarssac8c43sz1rsidotasm2jq462s87ipktrx2wtm96coftmrbafpsf2tljgsdosyrq69e7y3uz2eiq4p78pdri2dogiwnv6mgwx6tarzn98ph4brnyl8rxhnfkhww0zo4ynk2j4364zegpqar2nqvqpuw\", \"pwv5ue69qzp6eip88q29egkyt7iwt0hswtnak2r1feqbqsopatp6jfedq139vuco1o5cupnzawlf\", \"1pcqa9o4ur2x6zphd4dymbwn3pjqrlfu60g55euq1yrrkyhezykarsl1fh60wf\", \"4aty6iy4\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"1ogrjmtetpyhk7fzireaz2t7cl4g2qjff15v27dkh4uc05ylos7rihemr861x3mu8qemmmo9c8rrrx\", \"wys17lzw2f498z0qpdrlgh5dunnufk5ds98io7vfpf7umuoqm28igpr4aftu1g7g3j8qwmsbvjsj18ll8vke18770pxhi18opc05g395lnug0lkbb2pms8u9sdxy8ulcixo07iv9c4ci7kkzyttk0bb4p70u\", \"tunlqdfssccyqq8vgr5am0q6oxjadkbssk9idoc95ig7g9yxgzwvjg1l3g4a1rt7bzeh4iokazw5085quuoettqccjkdks5rxnp0y030clsus4fel0glpsta3x1qnb377cc5x1tum64k9omgu9lq3o001oo20tgcki1q89nd5k3m4wlhxl30ba9u2rlnkh76pp\", \"xxrh4jcdt4b4flj22cny6g6pzply6fpviupoikozvfdxix9haaebktwjokoj5aefii9p0a3xwiz0hzykz1ozfhsmf79smgc65gsi9dsfm43o9k3794w2skg201blmvhe79crydx7zd7mp67ikvb\", \"g5o58kprtyfhd9j7y9c3w2is62d6dr80gmgyn88ozv270pxtzejxgw9rfedaytzr3b20o0b6ec87yibge7cuf7xmcd6jp2ejqvlq70im1t8tqdv5a\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"wx530kuoriqv36511l3ycyv14my9nd526f4nbo5eyhh7ajaiaffbl140jjxqeq6mmvyjtbe87h5rt59y9anfuedqaajnntx1m\", \"e2bkx8hpe4205yd8rbhwivzd2z9h2m89c4twrwqvvnkagjs\", \"n1v35bw7o0a0ucg0zdi3fs3b1dr27l9q1nqggg0ejgi0825i1ksxrpd3xg7pie5ccs9vlya1s0nzmgxxbkxqf2zx15vgb05gl\", \"sjt73dptka2hu2na41l29w4vqzhu\", \"ojvi31urj8y82rhle3mticzk8h29zd0nav5pmmpnwrkjixa5fge7zu8xdvypyjwkjyk62rxfiuxevhmbmm6drjlu2zs8jlhcpnlem9gptoo9j21zv0ps1cbj14hxxb7ijboi8hx9iax1k6b27j8p\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Devices\" : [ {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Earum quas est cum enim deleniti quasi ea. Praesentium dolorum dolores vero libero. Minima aut dolore at ullam.\",\n      \"Settable\" : [ \"lqtjr5w1k1qcz8peslqrnpbpo1u5l653dxaeav76nionkbivm2op6c7tyojc9y6gpye0b0jual5jcsfpu0a867fqw89liu23pw4qi2b6myeabxn7r\", \"db8w4rjsmvmlfu8fby0ah0qrlvechp1jexxel5egkc2p01hj9akl77spzf4ayy4aia4clrpq8hqmc0jqxs3chl1z4678v9ehhm1zm1g1nno1fpeaen2kfkg\", \"1fr94jpv8au4v0w4dk6tsn2bq49j\", \"ohggo8ktg9ctb5gssu72ecizv7s2bv15ou0w4rhspsdbs570g0jsma8ss8qjbn3daedmwta8uwjw2ad3o0xy02k9x4ssy7jt2aik14hm5cpaa5vlsxda14z5jytts1c17a7suvqpjaai0t8dgx4aw9gg68tel3eub2098bqas\", \"h9eq8rtx94hpj3ju1uoluppyo78jej6ff3m97f8bykoekr213xdyke8p5wgd42e8hha3aygrw17ekzfe\", \"15zpwj\", \"hkda7xn3btwjzttvp632aymup\" ],\n      \"Name\" : \"Lester Yost\"\n    } ],\n    \"Env\" : [ \"DEBUG=0\" ]\n  },\n  \"Name\" : \"tiborvass/sample-volume-plugin\",\n  \"PluginReference\" : \"localhost:5000/tiborvass/sample-volume-plugin:latest\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e29b69b4-faa1-380a-99c6-b19266c63c47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginInspect",
          "schema" : {
            "description" : "A plugin for the Engine API",
            "properties" : {
              "Config" : {
                "description" : "The config of a plugin.",
                "nullable" : false,
                "properties" : {
                  "Args" : {
                    "nullable" : false,
                    "properties" : {
                      "Description" : {
                        "example" : "command line arguments",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Name" : {
                        "example" : "args",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Settable" : {
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "Value" : {
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Name", "Description", "Settable", "Value" ],
                    "type" : "object"
                  },
                  "Description" : {
                    "example" : "A sample volume plugin for Docker",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "DockerVersion" : {
                    "description" : "Docker Version used to create the plugin",
                    "example" : "17.06.0-ce",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "Documentation" : {
                    "example" : "https://docs.docker.com/engine/extend/plugins/",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "Entrypoint" : {
                    "example" : [ "/usr/bin/sample-volume-plugin", "/data" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Env" : {
                    "example" : [ {
                      "Description" : "If set, prints debug messages",
                      "Name" : "DEBUG",
                      "Value" : "0"
                    } ],
                    "items" : {
                      "$ref" : "#/components/schemas/PluginEnv"
                    },
                    "type" : "array"
                  },
                  "Interface" : {
                    "description" : "The interface between Docker and the plugin",
                    "nullable" : false,
                    "properties" : {
                      "Socket" : {
                        "example" : "plugins.sock",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Types" : {
                        "example" : [ "docker.volumedriver/1.0" ],
                        "items" : {
                          "$ref" : "#/components/schemas/PluginInterfaceType"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Types", "Socket" ],
                    "type" : "object"
                  },
                  "IpcHost" : {
                    "example" : false,
                    "nullable" : false,
                    "type" : "boolean"
                  },
                  "Linux" : {
                    "nullable" : false,
                    "properties" : {
                      "AllowAllDevices" : {
                        "example" : false,
                        "nullable" : false,
                        "type" : "boolean"
                      },
                      "Capabilities" : {
                        "example" : [ "CAP_SYS_ADMIN", "CAP_SYSLOG" ],
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "Devices" : {
                        "items" : {
                          "$ref" : "#/components/schemas/PluginDevice"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Capabilities", "AllowAllDevices", "Devices" ],
                    "type" : "object"
                  },
                  "Mounts" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginMount"
                    },
                    "type" : "array"
                  },
                  "Network" : {
                    "nullable" : false,
                    "properties" : {
                      "Type" : {
                        "example" : "host",
                        "nullable" : false,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Type" ],
                    "type" : "object"
                  },
                  "PidHost" : {
                    "example" : false,
                    "nullable" : false,
                    "type" : "boolean"
                  },
                  "PropagatedMount" : {
                    "example" : "/mnt/volumes",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "User" : {
                    "nullable" : false,
                    "properties" : {
                      "GID" : {
                        "example" : 1000,
                        "format" : "uint32",
                        "type" : "integer"
                      },
                      "UID" : {
                        "example" : 1000,
                        "format" : "uint32",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "WorkDir" : {
                    "example" : "/bin/",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "rootfs" : {
                    "properties" : {
                      "diff_ids" : {
                        "example" : [ "sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887", "sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8" ],
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "type" : {
                        "example" : "layers",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "required" : [ "Description", "Documentation", "Interface", "Entrypoint", "WorkDir", "Network", "Linux", "PidHost", "PropagatedMount", "IpcHost", "Mounts", "Env", "Args" ],
                "type" : "object"
              },
              "Enabled" : {
                "description" : "True if the plugin is running. False if the plugin is not running, only installed.",
                "example" : true,
                "nullable" : false,
                "type" : "boolean"
              },
              "Id" : {
                "example" : "5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078",
                "type" : "string"
              },
              "Name" : {
                "example" : "tiborvass/sample-volume-plugin",
                "nullable" : false,
                "type" : "string"
              },
              "PluginReference" : {
                "description" : "plugin remote reference used to push/pull the plugin",
                "example" : "localhost:5000/tiborvass/sample-volume-plugin:latest",
                "nullable" : false,
                "type" : "string"
              },
              "Settings" : {
                "description" : "Settings that can be modified by users.",
                "nullable" : false,
                "properties" : {
                  "Args" : {
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Devices" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginDevice"
                    },
                    "type" : "array"
                  },
                  "Env" : {
                    "example" : [ "DEBUG=0" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Mounts" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginMount"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "Args", "Devices", "Env", "Mounts" ],
                "type" : "object"
              }
            },
            "required" : [ "Settings", "Enabled", "Config", "Name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "527be548-12b2-3e1c-8ab0-a3dbc6614a04",
    "name" : "Enable a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Dr.+Andrew+Hettinger/enable",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "527be548-12b2-3e1c-8ab0-a3dbc6614a04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginEnable",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "d387d174-6bc6-32fa-93cf-3bc0a7c10c69",
    "name" : "Enable a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Miss+Melida+Mayer/enable",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d387d174-6bc6-32fa-93cf-3bc0a7c10c69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginEnable",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "428f02ee-9dbb-308a-b0de-11b44efa50f5",
    "name" : "Enable a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Ms.+Minna+Beatty/enable",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "428f02ee-9dbb-308a-b0de-11b44efa50f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginEnable",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "ce256239-426c-340c-aecd-0685c15595ec",
    "name" : "Enable a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Domenic+Doyle/enable",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce256239-426c-340c-aecd-0685c15595ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginEnable",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "46a903e4-283a-3fbe-acb4-ce3e484ed692",
    "name" : "Enable a plugin - 200",
    "request" : {
      "urlPath" : "/plugins/Evan+Price/enable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "46a903e4-283a-3fbe-acb4-ce3e484ed692",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginEnable"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "f65d6c76-1bc6-3758-a34d-846a987ca6c6",
    "name" : "Disable a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Alberto+Braun/disable",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "f65d6c76-1bc6-3758-a34d-846a987ca6c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDisable",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "7cdb2dec-5ade-3a28-891b-4f4f915decf1",
    "name" : "Disable a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Dr.+Candi+Blanda/disable",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cdb2dec-5ade-3a28-891b-4f4f915decf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDisable",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "d85b365e-090d-39a1-a399-198261b84d24",
    "name" : "Disable a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Pinkie+Cartwright/disable",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "d85b365e-090d-39a1-a399-198261b84d24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDisable",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "6be7706c-d764-36c6-b33b-24ca1935fc5b",
    "name" : "Disable a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Tad+Willms/disable",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6be7706c-d764-36c6-b33b-24ca1935fc5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDisable",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "4e3487b8-bec5-3c08-b1c5-5d3b4b29149d",
    "name" : "Disable a plugin - 200",
    "request" : {
      "urlPath" : "/plugins/Aleshia+Koelpin/disable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4e3487b8-bec5-3c08-b1c5-5d3b4b29149d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDisable"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "c7cde826-2cbb-3d04-a660-d2070decc9a4",
    "name" : "Remove a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Dr.+Tara+Hoeger",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c7cde826-2cbb-3d04-a660-d2070decc9a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "29523f00-5fc3-3713-9f8b-adca1d926627",
    "name" : "Remove a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Dominick+Borer",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29523f00-5fc3-3713-9f8b-adca1d926627",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "b5357fa5-6f8c-3bdf-87d6-0ca9800a1787",
    "name" : "Remove a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Dr.+Mauricio+Mohr",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "b5357fa5-6f8c-3bdf-87d6-0ca9800a1787",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "7130ea07-e88b-3379-bed5-af2e3320739c",
    "name" : "Remove a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Darrick+Bernhard+PhD",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7130ea07-e88b-3379-bed5-af2e3320739c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "9c0db8fc-7ced-3161-9641-be689029511a",
    "name" : "Remove a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/Dr.+Clemente+Boehm",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Config\" : {\n    \"Args\" : {\n      \"Description\" : \"command line arguments\",\n      \"Settable\" : [ \"c0romnfpf50pc4by2k911x1yfq22mnk68jsy8nr9t4kovv6f6cavzhf7n9ruepdg9tdl80chbrbwl9jpe198yggjzyk3cr3jgfvlebvwbiuvid2k9wv90nlff0cdyudmsnyimbyrd9k8j0ovzjocf9wyc5g259knieatg\", \"kgb21w7mfqtgsrzfop6of3pg954ude4snpssjubnyapx8zwi933hi\", \"q4vb6sqbqhscnnjcod3v2\", \"pujp\", \"cy33kzuujdu85q64jjmstx22h89379axw6uue8lgq44nxus0p0gkv45cv6m1slo3y9wga1daw2u14cbxvdjw2dhtdm2gyh9s9pyf0bgiw8rnjkeod34h55c852f5qhot24yalaam7wt0d9\", \"xd3xbg3y3armgn8cdr1ub9xf4aqfxkzwnly35xhvf9cqieqt3697jq3dht0hn9\", \"lcmzxc4p8vywbsrhwzffeld6pqknjst2i6lzpvul7hwp37efernszkblpg3z02wkywc6xc0rlh1xc52oe18mn1x7gf8i5ed0y8hstp4f43nidg6nn729drd101q2h9pc50591eoggf0ooo2h1bxuc7q2sbrx0ufg4qvieuf3kstd80jphvgz2ok4aph\" ],\n      \"Value\" : [ \"3wpdsophdmvm4wguvqjs42kx7tm26oh22kv8ywma9gsqww9a63xnl6mq9hpuvgjfh4ywaou5ajqkbggdimet572r649yiqk0bqn9v4v5b6o35y\", \"ziktfruy3bhl8688d5fqe161oq68gn865b3rwbdhnaxx268wq47fzsx5mwe3cjr4zulc7hmgn1z3uy0719c85kle6cl2215ask\" ],\n      \"Name\" : \"args\"\n    },\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"1d6136683xv4co7ohloojoc1lo6qhqzlrvi8v4l8ovoxsvp00gvu869g0ujsqhast0hajbgcy1qp9\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"8ol3bzy7ap0l\", \"3g6uxj3ds328tvaw9jp3esjs1d4p8ajck0ablkr57a6fugycar61ku4ckuw3nvklzp5aude14vco1xdkqjrq9zd10r29r96der5e5ab1bxa4q7zw5pw2m1vcnotvvf28hj8\", \"97n2mu6uct39j7hn5jmxn7pqyin27g0k70u31wkdaxd9eu9f00tu8k1yzp6kxwmgeq1addc5prpgb12pj85wdixqf309jmchlcdg\", \"bpt20f86ke1o8hyh02ceaebr0np3nn3z31plc39pafsahsh2j2f047lctspd9vv3gir75pz0jma9guetzx9vcvz2al\", \"t4bjwj7g6qmgbe3rdn0i\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"hs97xikol69tc\", \"3sz2m69h6bn4dxky8y8asv0nbsndtlj0r684i62he7n17mizisab6jwk1utpl5ex0dhxneflg1v874monafyupnyjplslrnvhb5n5b8mjaojd4v9qkgz6xo9sdsie58rvixd00mrs2io42phcasy9wz4hu67iv15h7lncinqe5\", \"lrao91vt648ot6v16l374ne5xdjn60ovq19343djzetr1jar8jmoqakllad26hjdewkeiosh13hkaovukdro5jura0v3t47yupsg4m8wsmddfri7lan1mre3ems0qza3dnh8u0irip8gqbzlb\", \"6yke6x21xgffril1hradgse2c5qge1jp11vrwfuyh5dxf7ghfa9rxv3nxoxp8aw4clnihtxcs9qm29nb4ktjlogqy85frmnh4yyqyaa5geei2zamctgvp7\", \"bxswgo8zwwbcw2mjeoobi6bgcybi9wu8elvyw8s0d42j8t621pybszby42t3cow8ucy4w\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"mbol5niug2u5a8x3ka3yn2yg1sssv33jkr43rn6o6e991bvaztz38qpn3chb3yo7m2t4lw11ieq0r3et9ll0vo57emfcp1au8g6oq0fa88\", \"omcg139u6lksjmp9s9evdtkvbb4jxz1pbaskvn4hukurlwa0xyoc8h593jx4btiu05kzov91vmzjo2dxy7vzt2fwsssgrhkrd2bn1246v790f1z3t9n0zsrjcjqf6jn8w6tq2gcvd5zeakwbb9szjv\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"1ygr37e5jn074o26u4zvzwkuv518jkoegcf1r7kqrencvv9ew6g7g400cqgzqi2ju1qtqely2g7r6xqx1r2vp8re8uyol2sl9dk2r9893xc2vsn7ilre7xzt6zvdigp1b\", \"7718x3z3mm68j9u1cafwpddq13jh28eo8b9dx13uue1ln26r6whou\", \"h8ey6m19p8aohiecgny7n\", \"0s7drai7kep95tcqjx8nnfi14a8ry05x9gt4tt6g65i0tap166ram13lcdrffawabwi0de5br1no5mekxxnrov801bsju5sbzvyzj6e8t50gbpbyeh327tb0mbmxg\", \"58rklhcid3\", \"eqe8c66v8atlu6o7okmqgyn8t2bvbr110oj8jp3mj22998hcvn36za35gzec0yvy91oqx6iim9hgwumtkrpedz66pd1ihsnw280txb316cllysulqrdqcwrolpjw875nn69ioz363me27uu\", \"jgvycgg9c7i7w0nne0dm52izxdkjcapqnmc49ghztof66vi7nrfnh8cimdkmowfgnw0psp4k7rtyb03ky1atg89nqnbvg1t5qa4ice1dh7r6j3bei0fsrv29359ylm8sccjpqfrqrntu6fqon62ddg3ximxkujgbhq64yp4vx17uzhsgxdmjf8ofkhn0cf90\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"f52h5gv3okvsy8c3hvaeb4uvaze54ojvy61obqv7q31x40um0ls9o2ckggk0baftut3uxdi5pgfy0slzo26wnd6wxybwgq5vwpncbycgk35coh4n2\", \"c384leyt6bjmtrlhllhi276ah3ztlr4b7iln2vnrjjczv9esj1nfsv8nh4ckaf4pv0ql2tzga3jl83jcsq1j6c8ikgxtptg7rx5e4b39ywr2m3xz8h5hyr9xnvrz6vp\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"o43wz9r86zeg1vs2chsjx84e1ose7am2cqhmi6m3m2q8kshs7w\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Description\" : \"A sample volume plugin for Docker\",\n    \"User\" : {\n      \"UID\" : 1000,\n      \"GID\" : 1000\n    },\n    \"Entrypoint\" : [ \"/usr/bin/sample-volume-plugin\", \"/data\" ],\n    \"Documentation\" : \"https://docs.docker.com/engine/extend/plugins/\",\n    \"Env\" : [ {\n      \"Description\" : \"If set, prints debug messages\",\n      \"Name\" : \"DEBUG\",\n      \"Settable\" : null,\n      \"Value\" : \"0\"\n    } ],\n    \"PropagatedMount\" : \"/mnt/volumes\",\n    \"PidHost\" : false,\n    \"DockerVersion\" : \"17.06.0-ce\",\n    \"Linux\" : {\n      \"Capabilities\" : [ \"CAP_SYS_ADMIN\", \"CAP_SYSLOG\" ],\n      \"Devices\" : [ {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Nihil et perferendis beatae dignissimos. Fugit ut blanditiis odit eligendi. Dolorem accusantium harum.\",\n        \"Settable\" : [ \"nao0n71bfd2j60yvtsleyg21welhsjzm3aswnmxd9kyrpm44aq4g5kdc3o49mf1zh1noefoxd0m43aqd6zwv771qazxod9814j04lui3spa2k2\", \"y1bcs6zb1mijkdn8iwd35530lp8mytr1dhbndnk0qv1carfbkk82yiqhup7lfscm8qehqcd6x60qka7tw701g7t9a9n2oecturzr0j8xfojvkljpxhcexmep45yhsbiofi40pvc32\" ],\n        \"Name\" : \"Miss Allison Cremin\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Aut rem qui doloribus est praesentium sit non. Et ratione recusandae cumque ullam voluptas. Eum illum nobis perspiciatis omnis maiores. Exercitationem dolores officiis laborum. Tenetur laboriosam nost\",\n        \"Settable\" : [ \"rhc3fe2p9vzg1biy7q4o4u18nltj9ire294u7l1m5drdsqfd5ty0egr1n83vyrzzwns7vwio5aokoqip8nurhtj590ds6jnn5j9ufbja2puroccedi4\", \"dmxjzi7cory93dzyjq2e1u93i6isl4jn6anxg8q6d0xmb1cdwjlkkmlg8iv1jol308sdt74sjj4ao9khsusq1kavdlxm5isjqieaw149k8atsazhr1b73vbw5tsrjblai2vkp2r3ibfuqc77ofuwvg5rilnp6jkvm71s604428ydzqhiggpg33vcylojdxcovtemdtga\" ],\n        \"Name\" : \"An Schmidt\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Neque dolores et voluptatum recusandae. Consequuntur dolor nihil quia dignissimos consequatur. Quia aut dignissimos enim. Consequatur facere sed corrupti aut et aut.\",\n        \"Settable\" : [ \"fnyucrhi039otqqrmhqpr0ebrlwx971ug4af7d6cm0vz7pvm6audgkrwmebryt9omb97jxgp2w2qtrj4kfmiipsfx4e4u8rsifoxy7l5kpp5g03zbvpb711mkfzitvx20gzq1qs9x95bg3tmsu1xhsnefhedn0dan26mr\", \"ovrazz6qz7nzvukmt2bh5rwfnmo1ghopgc8dcfbmaz7r1czyt7evou8xv97qo4misrmre9qbuii3pce1apciiwjjd5nh57u3s5lkhccig54vn6v2a86275737jv69i65x9ub9cz63v0en3jtw87a7xv0hfct9d33t91am2cvk5zacxvf1gwk5wnjxtxql8ax2nprn\" ],\n        \"Name\" : \"Faustina Powlowski Sr.\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Et necessitatibus quia dolorem voluptatem quaerat. Unde sapiente est quae amet consequatur. Molestiae facere et eum eveniet quo in. In magnam aut.\",\n        \"Settable\" : [ \"6ox5keh73t34cozh1x4fzzl3emwvnlidxlcj7yodtz0dm3wofvvdm4t3u984feuj2b9i4wexo0wmuq0ypgw6h9dwogukc7qezcl2xhsnmzsu8r6i0ohi72rzz4d45ur1u91vgjwtbko44gr1g471gjy6ghvw19s8rtvggw695t4vnjty\", \"8f1kwzgmy8wt1t5wutnf7o7rmy7cyo3luqnedsptdlnok2u3mw6c96yrcdcvule43dse44qoogr9rkov71qvn1qh054fo5ox1mh6if3ytd3speqvwlki2ppd0giewix5qrhsf5ksi38d30ukagkfubitb265lior1olqzbaoazh\" ],\n        \"Name\" : \"Cedric Lang\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Possimus error quibusdam et unde voluptatibus commodi dolorem. Excepturi repellat quibusdam culpa necessitatibus harum eligendi est. Est possimus eum consequuntur voluptate in suscipit.\",\n        \"Settable\" : [ \"mf0ef7pq0vage6lqic05gk85mji54qqqu47alir575llhu1zndly53ngh9qrvi5si2a5e20mg06azcd3i90h7livfz1th76521iimocnde0dsoooo0abi7zso2ru78mv7teqorzibqcpp0wv8ae3d15890xagubo7ifrqw897kt2il\", \"xklk2c5ec0gzaz4huh1jvw0q0r0bgaceq3jz13v7o9wpj1dopgq6zsesbiw1i5kncfs8ee9u2tt33ki5gn86a7y8ebqs1rkk818flmjx7wphae5c2yk2at2remegywa\", \"kczc70xthig2ozi7qw4fwb4zlws7d18nfuuul489i4g67gkhfvjgcyxocgnok6rhd33w47sfovz80ef1isvc468c1e2c05oou41jedbmim04css33t6j0o17tbu0en5mj8a6d8fu91f5bryapgso8gw98lbjsctgfboqjivjk1mf5v1og42ssihqtzsqjwg3697q\", \"cjl\", \"2l463r96hao7kfxcksgh9s7gqrn7r44qkmrmzm3te\", \"lpqwqyzsa30nxuzi9ogkb5t7hvhebhd6cfhqm9douij3z7c6f53jn0vmj669ldf1skpny1l0ozx7qbkda7qjhi919c3mrda18o3fkq\", \"9239dnfotw3bax2fzkch4jowl7a9leqr2dolyyfhhawu2m0y4on65tgky7usi19ntzhclw5sk20yq5tkioc53lokwwyut0tkq6sgzegdmoma5cwhnf1iib043972t1l6du06j5xdjkm3z5bhtheo1zk832s4jxm9ujq16fce3vgkhmfguntwg8bsk09um5499\" ],\n        \"Name\" : \"Cinthia Heidenreich II\"\n      } ],\n      \"AllowAllDevices\" : false\n    },\n    \"Network\" : {\n      \"Type\" : \"host\"\n    },\n    \"rootfs\" : {\n      \"diff_ids\" : [ \"sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887\", \"sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8\" ],\n      \"type\" : \"layers\"\n    },\n    \"WorkDir\" : \"/bin/\",\n    \"Interface\" : {\n      \"Types\" : [ \"docker.volumedriver/1.0\" ],\n      \"Socket\" : \"plugins.sock\"\n    },\n    \"IpcHost\" : false\n  },\n  \"Enabled\" : true,\n  \"Id\" : \"5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078\",\n  \"Settings\" : {\n    \"Args\" : [ \"d4fefnsf73b1caww8ql5vybtyb1tmz8vjqruqpitr8bbj5snnvcbia8x2zayr4ukgzajbowlj1qykt5o8tffp38doqsd54omp\", \"r9e5ucq297f7yvh554vb66m6aonaibg01zm4vz9c3rsc0vj6q0z60rt2mubroqcbfvf\", \"jm2rcymvhfvhusa5xvsl01q9yf71skp1oik4ibfgocbj04qncrt8x2bbp8mjkon8iiur0w0w0t61mhz1dkydgp5qbbmymn0x4pm\", \"jr68gr6gszm6\" ],\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"jxn1788yg0yau0hm0ddi0d4oxvvi6x25sc38o3t5jnuzn15kbpn1c7okmpeqah7n5hjrjlinrcn1z\", \"ze2exzzrae63gje3o8ezeb4xxxyxmwrj0jvpilncsikuweebp08lv1viy6l84rljvp9jn6aymugqdyicnla4amjlxhz5izkq0a3hhqhzzhledpuml7algtta2tl9wuqhch6qcwmp0ngjysrq3kc\", \"ein37d0z0xmq1lnqf4e7bw76ubcqfw9tgu8kbq25djm5iv3348qk386x2rrirojt1vwo3u40yu20ndombiyl86v7gulpbqrlmwqsfy0ebzhneohc\", \"1dqlrif2ied4z7heh8ff5xgvjsei6iip56ciuf6ufsymhkm347y8ea5zzbxn2tid34ak1oq7g1xvnilbvanc89dxmbo0wwhkxswcz9r418te6xqnpk05090u7vnb511by1nqej56z6rpm21tvy69q0aeiwdfd6o9zt2ekw8odb2nbsycnj06p5r4o\", \"dygea4p8oolqxn92dgo82rysi89i0ugj9gztbyb6caoykxjzlgh6hhuxj71zr3852vaz5xe2v20tb92q1gzps2rw12ca3372i1kzit3qxd3093h7t4eg09af3yx2800bfdp6qp58l8qy3fh59d2nckjsvkns74086j9bri9u0ldcg\", \"1yjir77aed7qaddwhgv0ir2mu97zz6y67ofyrk8qf6rcxhtihasnv8379qd7ggmwucuinx8clvtjmeahckfl3zlpfb2226e0yxa6835y\", \"6a3muhclmtfbqb83a4ox1ci2b2dhgfyyc4p6trv6vvxz34yfeps5qkprkwsptq1m3in7ne1w21h0teepukt0wmf3bga4ds5c1g9l7pi8x4nf59r2extu5q3niv30tejppx7cyc1yi85g2y39j4q0x\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"8h78ggjvjgbbj8g1uw0xapz06rq9imrb0vbpzoa9dn\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"o51eydz7dwa7m71uq8r9\", \"1k38th19uoeghj1gkctqnnapqrysc1or9oum8s38oi5neh1aw4e0938j0f5mr7untlsuy2rif2rplglhyruu7xjr9cqpfzdeijgvcxpt894aur9kftmzbcqlrp84f7ij46xl83ujulndq3k1ze2frumlomnjos14n21k9wy5j4u6ssn6dye7yh6vhs\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"i4to\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"9hbomh1lxibip2kkhdwy488o7gggefl9vi1dry0el8m9dr7wewqf1e\", \"i84ypyh37f4ttfsggddg6ehmdepzwx8\", \"9uu1edug65pmty8ibt9izied4xxn0t0h9i7zsxdco2wuribbszng5hzwxawobasjpi71zb8644228pajxyebbfc3eyd1yoairlt7t0537i3jzb931ixdxvru88wcjn3zaoyxcee78hkpx446g1806a3m5h5288hxrnhjtfio8pdoqo3suldlv1n3nxuidpy141rp7\", \"7n8qxfz86u7l4ytto9951zfuf66wg3tmx5i584zt780b5d0o11gefsiyvsgbpcnbmzzsmr1dbesu7qvmv1gxq5lbxvb88pz\", \"f7cld8xlht6x6dz7n8zxfwp2ovo2s0uz0ke8r5emnz0i9b5vb59xqiqb9s3ug206g3k2fa00ko3vefsdi7f657wfv2ffx4x\", \"fevsws6dpl9h9lsnu6fc4huvk1pupppn8mkmair8w8zdmwuoass3542i8fqkc31denz738lcdhk2h9hy98p\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"e9b3plzmcuy83tcko0bxapq7xzj24uz71hxcd3vl2iltxxwi0s2shmyth8yjp951zn3chjjsqqdy5895x1oabrfeb7p\", \"j1d3m02h55tbvcvcat7cc27pz686rw0cj5jt0c702fes18n9fwgxh9j8baeuymxila0o05al68u7q7l4spp8x7eflw25due0axnoa13zmn3ogpmaeuw2glkx41\", \"6foh0wg98bfnrbc0ux5jpgh5exkheqc8k9pae6g3nr1lbcflqfppd1ymc7an58oiucx2pvk79kout1u9tc3jpf65u8c6g559y46cu34r0zt0eiwnu7svk1kg4txzcnxvvss605uxevnh92jrn4vjzxuxy55pgr9usk5\", \"8l7g8wsogxa98dep39vmg0o52hnxgesm\", \"zwtk8913317e5izzxjsi4t0dmxf2xwtbiod2ts3bd0umzjp9d4t7bw15setu63320dv7yinvppg64sxl7i6lqxkiygsf8e9fnvwf5pb2d1ueks6wzv7sx5m4irkbbw3qpgbxesnhjrqqkfd58odwta6s5y6l\", \"h2pj8xkrsfd994qta816wrb2hy1sfh13c5vnh3rsnmya2mkx2absw5vl1hk2751jcmvtpxl2t77yaxqmx3zn151b62c1slw\", \"4bcor0aa6278844sv12aeq3yuw4379bnrq12yeth9mwepclubuqoz03e1vpi4hjieawhlwu65fsbedt35ua1gwpxb4luv4jmh27lybkcqqkfncf3y73qafb095ymrc8b4i\", \"s4y9jgv3i2ztoywysedpev8htm5xaxdne5pwf1fth14shdl9gg7oltdmw5wc2vbniem1b9qlhtz7e783l9go9r6xwjckw76rcn51djzc7mptfxbiub94byo62wpxxwa6xfeuysyhig1qnemvg7qgx513i82grmzupkgaj2bu8m130vrteprlw14e3edfjmqwngokik\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"nihawpbdqoh59xyus7kevbzklujfxxapqgqzcw2u1ink5w7dyuemt76vm3156pxb0uo2hp9xl6rusx5f14kpaiyb9bcck9feltrrsioah4ekhtc5pxtpvwkzicf\", \"s8wnmgf\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"h85hp8kj7uwl00lfqp91qhk0wcqxa0325341ty9gm5bf31bxbgcmbdyanz081ot60qv0a2xgmugk6gt3ou1rv1dthatgooxrm78k1bp2acro2yst3eecq0ros9v8vgsu382ve59r9cw2pno67qapw3yg9rxazley67500xw6hykc\", \"c8u\", \"r60babcbm7ciwvy8nc83d8ccnqm6th7403md8dwiiw87rsmqcwo5sif6krw66w2gd6x1mgux8b1va6pd9fy3qbt3vepb9i9c5noec7codtkqv9lu9mz95xpfsdyyfg4nwdru130pzq\", \"ip0tl0iuqap7z3q153bi116vpazxemctbcdachlil6wduflps0vctoeo9htpm7z619yaz1vqwtgvjaptf2jr8zesbyqj151nvgohbwg2mvfi2xxn3ox4jm4lanqc0\", \"uas0qz2zusqiua6yhsd3or5w3zgbzu14yqr5ekgepbw230p2awzhqv1ql4qmqxf2arqh8nk2y4ky2lu1nyof9nwebdw3y283c0hvc5cgquxd0bh2uf7fnp6ewmlivp2lu1hdx3p3z2v8woy95ecz07nt6lmmzib2\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Devices\" : [ {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Laboriosam voluptas minus dolorem. Laboriosam quisquam nobis quidem sint debitis. Sunt in aut rem temporibus error consequuntur tenetur. Vero voluptas in sed soluta et molestiae et.\",\n      \"Settable\" : [ \"8kx7pjar45rogu7docx755h6llmg1bxqbdds9o00n27uriao869ss801kvp3ya76d7piiqioih1bpkualmsufid8swjfw81omq7zoh7b9tmrw4yc3guf6j3nulucb7d3upveclsk8som2uz9y6fwkkbvrqu2qm8ohy3n1r8gm894jfhmqu4ilg1vxzpx5ptqjz4\", \"yj6uaa78sdvra0eneb9vhqqjqu33k9svujwfn7s83t02l2uq1zdjlw0w50h51phb5tszwo57sq845ilowwyc8cdaiok0io28ae7legv1hb79jdx6cv0kulhkre5szufsh7gx4wihg7euvp03suapqgcz66ni7qb5uq0gz3i47s55c2whz6ge\", \"1khtg0kha8fydumbdmiikj7u9ugu386j4c8yy\", \"kogfq8od7xu23updtjjpuqkc24u199uzvi8p3fz86u4sko0zon57ss1fdmbushwg3l11bfvw2m8hqmxfsfuekl5s6lvg6f1sdubr46soul1c5ek\", \"w3wv7rlxfoinq2h7fynif2h6b2nhugztv01xrq0ed0g\", \"tj9rwdlm5yye8lwwmj7viwt1p9w4zqd\" ],\n      \"Name\" : \"Jules Huel\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Nulla odit consequatur incidunt. Ut earum minima dolor rem exercitationem tempora sunt. Debitis explicabo deleniti sit. Aut vel perferendis velit fuga dicta alias voluptate. Eos error omnis optio aut \",\n      \"Settable\" : [ \"oyba85qi66ft35xh9ykmura98kneqggocdc3m8iff6dbl7dtg6edrqkdc0y4008ug7g5r70igj2j03ei4qp6mjr5q1mjddymmiufs0d5c2qlzlu6eafr\", \"jhfcqrradnxmmhjvc7c27bqcsz3cl4dnvf48k5bh8rwbwvriy3faa436xenz0flrg1klwybepfvi19a5v5a80i1vf8kmoospabj9il1dg05yx6tzog90zvh29dsst9p\", \"ilg68q41ekj8b53wpmxgdtqrsegn55l99xo9dnf1nnpa8w2k1r9wx5y0ghxaqe\", \"4tuzpvvvhojrtd7h6nae2iqdwcmvood5nw6pn6a3suuv6f1felee8y3tf5ovxu3wd9d6snhj4707879bw2ncj2im0brs4u15csl6mvx6g75jkjq27nhjjfwoxdk8bvn06o0o45uxdilgg65f98unjr8wwp5a8ecy8nl6\", \"wy04hretnxjw172v2rr5eppexfctlstdj3baf7jdd5os\" ],\n      \"Name\" : \"Ursula Steuber\"\n    } ],\n    \"Env\" : [ \"DEBUG=0\" ]\n  },\n  \"Name\" : \"tiborvass/sample-volume-plugin\",\n  \"PluginReference\" : \"localhost:5000/tiborvass/sample-volume-plugin:latest\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "9c0db8fc-7ced-3161-9641-be689029511a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDelete",
          "schema" : {
            "description" : "A plugin for the Engine API",
            "properties" : {
              "Config" : {
                "description" : "The config of a plugin.",
                "nullable" : false,
                "properties" : {
                  "Args" : {
                    "nullable" : false,
                    "properties" : {
                      "Description" : {
                        "example" : "command line arguments",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Name" : {
                        "example" : "args",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Settable" : {
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "Value" : {
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Name", "Description", "Settable", "Value" ],
                    "type" : "object"
                  },
                  "Description" : {
                    "example" : "A sample volume plugin for Docker",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "DockerVersion" : {
                    "description" : "Docker Version used to create the plugin",
                    "example" : "17.06.0-ce",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "Documentation" : {
                    "example" : "https://docs.docker.com/engine/extend/plugins/",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "Entrypoint" : {
                    "example" : [ "/usr/bin/sample-volume-plugin", "/data" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Env" : {
                    "example" : [ {
                      "Description" : "If set, prints debug messages",
                      "Name" : "DEBUG",
                      "Value" : "0"
                    } ],
                    "items" : {
                      "$ref" : "#/components/schemas/PluginEnv"
                    },
                    "type" : "array"
                  },
                  "Interface" : {
                    "description" : "The interface between Docker and the plugin",
                    "nullable" : false,
                    "properties" : {
                      "Socket" : {
                        "example" : "plugins.sock",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Types" : {
                        "example" : [ "docker.volumedriver/1.0" ],
                        "items" : {
                          "$ref" : "#/components/schemas/PluginInterfaceType"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Types", "Socket" ],
                    "type" : "object"
                  },
                  "IpcHost" : {
                    "example" : false,
                    "nullable" : false,
                    "type" : "boolean"
                  },
                  "Linux" : {
                    "nullable" : false,
                    "properties" : {
                      "AllowAllDevices" : {
                        "example" : false,
                        "nullable" : false,
                        "type" : "boolean"
                      },
                      "Capabilities" : {
                        "example" : [ "CAP_SYS_ADMIN", "CAP_SYSLOG" ],
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "Devices" : {
                        "items" : {
                          "$ref" : "#/components/schemas/PluginDevice"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Capabilities", "AllowAllDevices", "Devices" ],
                    "type" : "object"
                  },
                  "Mounts" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginMount"
                    },
                    "type" : "array"
                  },
                  "Network" : {
                    "nullable" : false,
                    "properties" : {
                      "Type" : {
                        "example" : "host",
                        "nullable" : false,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Type" ],
                    "type" : "object"
                  },
                  "PidHost" : {
                    "example" : false,
                    "nullable" : false,
                    "type" : "boolean"
                  },
                  "PropagatedMount" : {
                    "example" : "/mnt/volumes",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "User" : {
                    "nullable" : false,
                    "properties" : {
                      "GID" : {
                        "example" : 1000,
                        "format" : "uint32",
                        "type" : "integer"
                      },
                      "UID" : {
                        "example" : 1000,
                        "format" : "uint32",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "WorkDir" : {
                    "example" : "/bin/",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "rootfs" : {
                    "properties" : {
                      "diff_ids" : {
                        "example" : [ "sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887", "sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8" ],
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "type" : {
                        "example" : "layers",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "required" : [ "Description", "Documentation", "Interface", "Entrypoint", "WorkDir", "Network", "Linux", "PidHost", "PropagatedMount", "IpcHost", "Mounts", "Env", "Args" ],
                "type" : "object"
              },
              "Enabled" : {
                "description" : "True if the plugin is running. False if the plugin is not running, only installed.",
                "example" : true,
                "nullable" : false,
                "type" : "boolean"
              },
              "Id" : {
                "example" : "5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078",
                "type" : "string"
              },
              "Name" : {
                "example" : "tiborvass/sample-volume-plugin",
                "nullable" : false,
                "type" : "string"
              },
              "PluginReference" : {
                "description" : "plugin remote reference used to push/pull the plugin",
                "example" : "localhost:5000/tiborvass/sample-volume-plugin:latest",
                "nullable" : false,
                "type" : "string"
              },
              "Settings" : {
                "description" : "Settings that can be modified by users.",
                "nullable" : false,
                "properties" : {
                  "Args" : {
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Devices" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginDevice"
                    },
                    "type" : "array"
                  },
                  "Env" : {
                    "example" : [ "DEBUG=0" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Mounts" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginMount"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "Args", "Devices", "Env", "Mounts" ],
                "type" : "object"
              }
            },
            "required" : [ "Settings", "Enabled", "Config", "Name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "e1564d75-4d0f-3944-897c-3f43c40999d5",
    "name" : "Remove a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/Marcel+Rice+I",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Config\" : {\n    \"Args\" : {\n      \"Description\" : \"command line arguments\",\n      \"Settable\" : [ \"staf3v72sspvhr2957zalaz8ebkuffjymdsnr2f8sneb36vky1geeva04xci9l270lq36iaa\", \"lwcvbsjtcwrv81dvt14p25qkw7gbgwos0vt5lier31lg7p8kl5zt1lgs1h7gy826n7iijgh6mgvpg5r83pyhbd0ocq0f2yjdqfxbhpafm50vxyirnn2ja4ln9zfgmruww9z7npkuqc5s84i4893h4vvyyxc7wijgp745p\", \"quzwbu\" ],\n      \"Value\" : [ \"e0ufhhlbhulge8xvz2rv76q6nyzwbfjdusdpetlrxbgn3dftxunyw236vg3xlkogf54rme8kqv\" ],\n      \"Name\" : \"args\"\n    },\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"ngyc72froyrz3rs9z03f374uroglxbr39ydleox4s8kvi6lmg5h3fxekubxm2wh16rsicbsi3ifch\", \"8p0flzn31\", \"amdesslgs9htql5m6qg01yearfhgozcf1nzlmcirpa0qlig32yzcv7m06a3vszauvgdtgv9x6ka0fumd30edvwd\", \"7fi6whzzxn4tbtkthkj96rdqekwssa3onq45dnhquzy8thsjpljrjbf238coj6ssj6aawlobw0ay6ayvzphqw348sv9u73kxt7dr0hwpozc8hy295f5lwt8ihysyevw6b7ceekxwbnyqje8ddn4kgjqvucfnbpgzfdz\", \"aku2yxzdye5pjcdpr4fevqtmbi3zorw4x1gzbxu7o49yzec4n7ze64oysvbo9vel7q605mn1aoiciy9k1c7dsknjgmdnujgh9oiklfhzxxq5kvmcb3pcj7jiq9h8pe0fdhr4z9i93r0bchhxrrp11div2f40s\", \"ym0fkexfwa1gkjlgelnppgpfx2qx92hvmeszhjsksvgt1w83kkxpg6ilunhrf6cfop883k14fp4c0bmo2xc8qzo2hmwh49irzkketyx9t4a9lbosgvafuefnkl12kbxc8rhmj347ub90u19uqsyc07vokyq080ylw6e6ixt7qz4u5\", \"x6yumidpq6klpnr08qlun9gz9hsepregqylyrvmhdhx4ik4l20jbx6xcduyh2hqqfjjkbijz65a6rv32s0dq0f0406my8fedxc7fmdaocq6yg04lnbk1omf1eqjes4digdmnode20dqg0z4jdbsw1sdqo1fga2lvv\", \"wlft8pvlsq5khjx6tywq9m3o3n3qmgb7f7ad4ku704am5stted7v8ratpf2ag8tmo9jgj1p8v75dqkqtbcfdtkf0zfq1dkvhjk93zyhypvbdo59e0g62s76e2qvq1g\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"jlqt53mffd9ppgwp7yhhd11uzvk9n14pc5bxer19w1rgxiflv18g27x9umluty6qkrpqcx6hhs213nds9r16nylzn7\", \"114b39ii2y7thhmvmkpw57db6lre92ev2f\", \"80rntvo4yn4zhiamwz9gr1uwf9db9b2gui8nov087nouyeco91h8qr18w\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"nav0fztukh2hc3x7hvjc8uad7y6ge24ekdv8trefbpp7nw0nt\", \"f406vrlbe15mepc4sout3tuonpxcqkk55236y7c9104q1a9xx26a007zui45th1l1qlacehziw0qowk1khyu1h0x9pyi6kggp51264veo3w8camxqpo7cmp24xxx1uqrmatafuvutasik0fr75rrxxpxz8qgjpmq\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"v85hq006ebsjruvf4ej3f31is1norg7kkgg37fixl1er26oktq22zb647hvlva9gstvfrorvxf9alyowhm6cjbbrdyqzdhsyryqhxd90q5p4aq34aohb3lsua5sy3b90jxpldpea76qpjmm78x9t8gu1\", \"blha5pqfal0rae1l2dazxhor9wpkgwcenikx1zztkbuc5ve5vgv0764ujg7jy4h4jv3gmbef7ppdwwtigo1qn8slxpc07zwiwy9bh37q9f44oxvxbgg7srnd3ku5u4zfmcry4b5yk4ockfs55xkd6fh95tvpcffnl5z97dpmtefs55k72n2m6p8uz3ybshz0xtv\", \"h9nsrifv1ajf2tu0f9ou4hweobg3x039ndpgv7j8ym34gzt0ndwiv7yunlaqfx0ip9s7nad3fnd2zwl4wej31ekv0q9oswl93hkk0lkaaulx3m4r3a1vpp1sg7bi487689dkci14shzu0vaj0kqqz9efnjqj7bi5qan2pibk8ibojbniiw\", \"t9d31kkby5whuplrcabovmdnxbh1uiw4r504mowmgmjha7dgx1vbl9ai5r48txr2w42iawnbaeuzuys4wpxuzl3ijl5nul4tdutrvunb96ntw1fokit9hv1ikc607f\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"djoh6sa4d2yrq9weqwqmhula3vu2ymciw7opqq5ppeig0xd2fhdaz48z85vjk6s75f7u6dlwa45gby8lvppadhat33i1ri4tlj890gi51rs1hilrd39hx0rimgn852k06gpd2xkkdbrejz5ginuztu7sosl39p803wjju2ztn\", \"9u001pz1ub44qe36ohm2bs4aacvs24ai4mq4libx4gjk0ensjb6gbz71gk3zb2gymx56f3ravt9ud24s8s1xkrtykc09wjl73zm3fsvxqnli486fztch4md771hjvyucb5cuhxro29orf6a7zgr7dqmm4dvte9\", \"0fox67gsn\", \"hcrd4\", \"38uifkiw7mvyex5apxbokfwvf7uk9h841ak4lqa78bartahwmdfuv1jerdkodkvc9pu0vhki5vozc000cwx4witfm3etd7\", \"a29fd1t5jpy9ulstk8qs1yrjyvmmggfs1743k3amzc253t33tvvcwztiuxefzkuphigkskz1m6j71dr\", \"7td9bwagfwrklkudz2ztce5jpq052de967re9n03ms96uijns7qcq7291kpd5yxnracr0zy1vqetsneme9c1av2dlqzjr37cml24nwgco561ru9mz2nr124ri3m1kxh1mlitqq7biuxlvzi4fqaveopwzoltwqbloa5qh5zi0cq\", \"6nev9vw8e5svwdmu6hdhp69mhs96zqtldsnsv997a1g9w3j0lceadna9eqwosbunblqauehr3p7\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"jos26d6p9xmnbbnqj4fobjt8tiq8m0\", \"mnfxwu2et2qw8k7andyru6vd8xwb8n8osjy0o10nxdrlw32camn971i2t5exrzd2m3crb101agfhk4vg1qavpr3zh15ssmz\", \"s7yf8dvvyw68vmuqz9ftnq0p38d1adke0ha8a2u3al30x20uek6hcg9e5rrorjvgrq5b4vrmhrcf1z176oi0gjasnsj9ykl44yv8jzpo40oeq13zd52crd62jfliy73pzpysmuzsa2cbtjazhvu\", \"men0dlmu8c6s2sjyc8h7ioug97jrno3hs3ky5qorz21app9a0pmyhemnwmr6ca2laixe0ifar84v1pjptzd441an6v2q6qqt3k20gh9ro14zbe7woetvnmvju6cjxkkvpxj8bvajle5y\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"ik8jpnwwt0ek5j8q7slz3ke5pcw2sojt9gzwjf358pmrxjv\", \"isgdll803y28f0q59acpq3yw99wltsdb92re570wyyb81zeig7yr9mh0535se\", \"9osn7u3gr5j8w6len8oqy4s5qgj9ou1ricsdrii78oj9riyjufzxg4nq9ylxjbqtdbcv443y12h0vewgy9yq9u485ajzmmqjfrp46lck2g4q5tyabd2lh8isinpvsrjrrmn14hgbtppe2sg2rwadj2p2d9vav2njyrm5scwm5i4q8nqqpc0epy2f6wc\", \"loebfcmiufpoorfj7uazpinochha45u4ma8lsfltngw54y5af1f05280655e7hg1ekx1oax8vqidq5\", \"2i5lquh906hntkitp89w10mbxedk53z4v42afuipvdbt5eis3jk52z2mfm0q0savbh4ygel61n4v80rnxb679034rrnq73e95sbyfswi7w16o6040iau4td38q9wlss2liqumxieo99dpvpufj1rxr8l6mr573xdkee135gec5q5to61ezvy2lwd\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Description\" : \"A sample volume plugin for Docker\",\n    \"User\" : {\n      \"UID\" : 1000,\n      \"GID\" : 1000\n    },\n    \"Entrypoint\" : [ \"/usr/bin/sample-volume-plugin\", \"/data\" ],\n    \"Documentation\" : \"https://docs.docker.com/engine/extend/plugins/\",\n    \"Env\" : [ {\n      \"Description\" : \"If set, prints debug messages\",\n      \"Name\" : \"DEBUG\",\n      \"Settable\" : null,\n      \"Value\" : \"0\"\n    } ],\n    \"PropagatedMount\" : \"/mnt/volumes\",\n    \"PidHost\" : false,\n    \"DockerVersion\" : \"17.06.0-ce\",\n    \"Linux\" : {\n      \"Capabilities\" : [ \"CAP_SYS_ADMIN\", \"CAP_SYSLOG\" ],\n      \"Devices\" : [ {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Voluptas facilis quia necessitatibus et repellendus adipisci reprehenderit. Asperiores nihil cupiditate eligendi esse. Consequatur facilis ab sequi laudantium. Praesentium est quis aut doloribus. Exce\",\n        \"Settable\" : [ \"kixh2lkwesubv9gu1d5fwe2j9yr8riv8mfd12m2sb8gte1u8jyx613grw3voez7zmle3x1xla3ckm899dstokhobghchvy5qzzhdcjn54piyesoc62w1x0xj8c5dvi7zxapi7rpiz\", \"x53kdz\", \"axwewrjja01saf21oo42xzc48ebsi0nuwl8s1bgsjyya4tb3wxy08kqbrrjln0hopwl8wl71y8evtmnzecwadln1szg36v1f0v1tz2cc2fwo26v5zxx43udh3adn\", \"7hoo1tlfgxxjyk2rap6ytzi5h2txe8hl2qbv4qr1m6gkrz5xgsqsftumi8pvy3jmwosp9b8siay9f3466ixstir9k3ix4hnsbsazt4maqtujfc\", \"eac2unqqvgac8yzdot6vtct6ervmgs2dvcrk6nvpsec93x6z7og6p0mnahkb7irfud8lmo7199p66rsjbql9mlcqkmqcfuwy07j09oghp18htt214xahryjsnud3ajr8o97d2bwegirwh2nwxm7kibtdsg0jqtzdzixlns2wc7kegfolnlj02w8pjmgglltzko5u3\", \"via79kb07uofzsowo9rkm17dxtw4syhubu9cukvawr1md25brfjdbzfgyzvyi9x5gsbqf1w3yj\", \"kxuii6zeupq12hicdb5n7ban0di6lx394c3p\" ],\n        \"Name\" : \"Elisabeth Swaniawski\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Aut consequatur amet incidunt est rerum illum eos. Ipsam nostrum doloribus dolorum. Eius maxime debitis.\",\n        \"Settable\" : [ \"vf5rzhfxqrriyj2s8yz4kxf1zks2d5oahflc87nxz9ba\", \"sym6sagnga8swbyu017r7htf1vanhqaf\" ],\n        \"Name\" : \"Micah Gorczany\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Impedit laudantium dolor. Hic libero tempora saepe voluptatibus enim quibusdam. Cupiditate molestiae dignissimos deserunt ut.\",\n        \"Settable\" : [ \"xfcyjdn43253og6mmz172acvmfidvz4g0cklknih5auv47zi9fqiyjm28lovzj9oc8bmxgtxwfmlxl5765wlu4\", \"9lye6kdr2r8pnpva7op28014n128wb4jinv8b9aovohk73g4sy0f2qbjr68z49d7whi93vr93u2sf322tqgae6obbio4f0pe0gj24yxe2q50l1qeltva4tn6wz8xlqt0h8anlmiwzkwyod371qqwd39762agq1xhtsn7ujx9i6508nhu8qek\", \"60m107d76ad9tnmruzhbri5bpadkxf4ys7oc55cez15qderhl9lrohayvggvwt3ylrg1ny0swdog1liz2upkvwfsw8r9nx3nqq55puq1h7kgbrsws5sp9538k0239rcuzlmmfwxpcazded82xq\", \"w6cj8fdp0tky1mmci5pbz6wc7on0szvmaupu7a8dqekapnbnizwy7lvtykccooa6wcwexm0jh5cwedje8kw54nx9jz7iaa6rbxh4qnhvmhf1bikzgb0j9bb2pd0jinqiuz6g9pcelfjh784k71hdwvr7tfeec77d69dtgrrykpljodqn88njjpywd7md8sbm2vyz924\", \"rqp39ttvabinaq9uffaetmkixfis8lor00bhhv3gxpfnavswg7jk8r1bd526bn6zjzwsfdslvg3gs3n2ueitjqhpqy0wrjr9gvh4tqyd41s\", \"nbupj24j1ze9q4rzcuhuimbpsh8b2ndvxpdaknt0ma1\", \"vuhi34u3z8sp6jsqjp840bsc41661w5lmdzolxevhhfz8rjw0s59omsbmmibvmraz5po3\", \"xzxgzerxiqnf6y39bgvkkp4oryrcia1e04xsjtbiizvp8x\" ],\n        \"Name\" : \"Harrison Legros\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Explicabo qui eos qui ipsam facere quaerat. Ut non est sunt numquam recusandae et. Est deserunt quibusdam. Reiciendis optio odit exercitationem sunt a.\",\n        \"Settable\" : [ \"7z07j999yez82o38m2gvmtqyruokfksa7c2pmotlnmu606n9l79woqr3z0yg9896y9a2li0f8ogpq43huqablids\", \"d5cjgdv3h8dq670bt5j2s406xkmqnff21eox1rd9erdnzvxmja5f1afjgd9dtjzy6nq776\", \"oi4zznsgysbta41pbo3hg2w46ltnkxzkk2vaid08632btbei1vh527uaku09edzqa625ri655n5ufa993w6jjsrzz628dnej8uxaipg\", \"8y2f4p85ahhbwyuirmvus3zy8bj6xqfe5d5a4q2ngxxktm0tvwjxfipp2dtz1r55ujajcd1hytmwn4blynk4dt5rigyg6cu3b8jdd237mpwrie2ercuyppnvaztxpj1o990129ldnq2pz635l29\", \"kcw8hmyyoq2cyc6gc8uyg0h4sjjtvf0pw0l1gplti4jp5tvaytjah1kqb2q1ubxuheeh61ivndxy9ybj8xtivxnijpv0g9itgdejhj88e07jap71c0szbqniexbnwboicmms7b9sb5m7bb5egu1hpu6jylapk10dhj1\" ],\n        \"Name\" : \"Nicky Emard\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Quia id adipisci. Tempore iste sed consequatur qui molestias delectus. Nemo vel accusantium excepturi. Et est at.\",\n        \"Settable\" : [ \"jcarjnjf86r599yefiu75i08vawf7ybmy5y1gdsjfustuq9yvt2q1yqxom3m3nrpgip6gfgmivy5udwpk\", \"2j5mt6bbvmf5i139nbbreovdzgiuopr664nlw4994lquxpqiztd1prz8pjxt7o86sdxgixs\", \"h3lkq4antzdjyzfctrk5kvy1ynyhen52h72d3a9tteojfbfeoyjaz\", \"qen42ay4a49jooqv986hqs09washvp8vh5pqvgk4bjc8grxebr4hvkxxr0nt9s6tjt7j6ah\" ],\n        \"Name\" : \"Clint Schumm Jr.\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Quia velit nemo id corporis aut. Sint est ipsum aspernatur voluptas doloribus ut. Consequatur nam enim sint porro magnam.\",\n        \"Settable\" : [ \"qzqtoeya5kslelckstemqj35phpl1qu7chy9w89bi91nehygzc9gnhz9g79zikqh9u1uo7sr4cy\", \"7z2qad6z9g9xj20z772c8qtx47emcri1eb9gemm1vi5ft6tbcp91tfd1hva38xfjz2xlpc2twoi20ovbreyzv8rutkt5ygcd3wc93hfiq6ken47p2fluuwwm5cgymk8sq54plepuvkkdu08a6pqfnp7mo2\" ],\n        \"Name\" : \"Wilber Cassin\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Unde error voluptatibus eum quam. Eos maiores quos atque nam. Modi consequatur cumque vitae molestiae. Voluptatem est illum necessitatibus non quis.\",\n        \"Settable\" : [ \"84rghgwaatotnd72efv4kaipdmda1930kobuf6izx3jkhuuf5ac3witg9zu4wz1nabkc20f4vfjk9b5dshikbehl2dufnzi53zihxggy4zp9vcco3ocukza08g6htt9mqy45azzbxm92z8for44y5x5h0s2ustaq74b1k\", \"xmcxvpco6taw3qch07e7mbace9iqw5egu08eeyzh1vbo4bzucnxl\", \"o63mj9iqw3tjo64xymnjl4z5atcbay9mid43ox7mo4s45leruyto8dojt75hbupf9b2ujs3v\", \"fy23velazf4sq9jv30lyi0viaii9\", \"q2kk41khvdt2\", \"y13g0gins6cby09w09j48vmayw1b3gxa4o4ij7nbpjsls98l8olvtysunp2r3y8\" ],\n        \"Name\" : \"Yuri Vandervort\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Quia voluptas vel odit autem ex aliquid doloremque. Quae sapiente sint. Dolorum tempore voluptas et suscipit perferendis rem. Sunt distinctio debitis molestias repellendus quibusdam. Ut voluptates eos\",\n        \"Settable\" : [ \"yfsokw50920usjjuyf95actfyce3kmkm9gwxbr\", \"vgfyfukunvh9yrpfi339x9zaoce2rcnxtbvvpz6t3nn3q6jpjrtpujzb1ld3ikecu49u0n4nmzlcgon7o8ctffps39eysr8todx03j04szat8r1oddb12g3a6b4iak3spt0c3\", \"39df8nri890pcpwwwxwfj6ej77tgned3ibca8dvl3uc8emczef65e3qiu3dgy5ux42msf7lt79d32rk1hg984icd07rqz628qyfl7fvfrqpuet1xavlgvebfsmjvb1wgzirxv85zoltpn7tx1miusvkx72g\", \"ru08c68z6o77eyd3ooefwlrcwbvuxd3whui5lq5yftfrj4lvqxhv47kh1mayvlem2dr5srjl03ffuwwzq3d5\", \"yft61hi2hj9j9bxwn\", \"togzat5ns4ffsujmb18mtkd8wk8f54i7ukcyfh4jztk34h41v181x792hg9qfounp10ji3bs8ozah3465naloixnn3yqy526c6p7iljuz4bdyppayomye6j7g5v4l9974ryeg9ox45pf1zcb2vw0xokaqjus9f\" ],\n        \"Name\" : \"Shan Daniel\"\n      } ],\n      \"AllowAllDevices\" : false\n    },\n    \"Network\" : {\n      \"Type\" : \"host\"\n    },\n    \"rootfs\" : {\n      \"diff_ids\" : [ \"sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887\", \"sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8\" ],\n      \"type\" : \"layers\"\n    },\n    \"WorkDir\" : \"/bin/\",\n    \"Interface\" : {\n      \"Types\" : [ \"docker.volumedriver/1.0\" ],\n      \"Socket\" : \"plugins.sock\"\n    },\n    \"IpcHost\" : false\n  },\n  \"Enabled\" : true,\n  \"Id\" : \"5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078\",\n  \"Settings\" : {\n    \"Args\" : [ \"y3fk8stalp9g6toy03i9y32019c5oqdoirnneikavguw9553vx1o6wm23qddh9ascaxou6y8nh9dko6w4wfbcgg1lt7ldu1lmiceroxc1yj55bxzxfod4mbv8om6jgoj6shdj1fm9lrnitwslmxn9s5pfhlr8gden\", \"l37cte6t14jusg0l90addvozgkwjisa4dh2y9dyffyir3rpf959u2lufxxcxxqocygqs4qkxfaqy6yl36keq8u6t8ysm11oxy96jud28jpreoitluvao3r62bb82qxttvait2lmwlhhb2titx8ssiwomhka5\" ],\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"gifal2vw9bsealwfk4hpds3i45f2or6hny8c4rvnej79vqcn64bg1gujeqvz9nvvjgsxa0x2ym4hwj7hq5axyawegxsno9x65x7zkrl6gy062c811ja4xdyfndk6t2rbvx9xdyjuz\", \"ehdl2n595ppb1333u4nqjfu1dzlre164zx6979n1s7h7zq5j4g8jg7uas9rorbghnd9ohku0jynew4jm3ud14u4sdjiacxsgj28xwho2ubrcnzy10zdekhvqbgwxezjod4h85r9id6d1cdd8p7kzfz49\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"kbqo59dcpct\", \"fg6df376vi6nzx7uz089po3toyficfywjqcap9y86sd590yvxqw1rghu2l3olael7ym7pik\", \"x65jztlm1n7w5xaz7i5we6a52m8icga6v4dzihkxjdev7j5xhv296hiqagkjdys1c4scgwi3m3bkk2j6fgm7r5yiwjvmruopd08noaqbdxhkh052suzgburr60s9boxi6xg4yz4ltegvkjqui1man5o39upkzgblzm3qyzduxunx3xfcuw\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"k8n08aj80nbfwq4g08qhu9og2u9rwah\", \"25bqkqzd1rgal93ao370sz45dg8thqg8wgma3gm8cir7hrgkr9gjuffasdvuqaooiwstrvv7cj61lmbbc\", \"bxlmpif1hi3c8nep1glqu30zei9z1miysw7687cavz3xg02fpi8em9n8cahpgd7drzdb7zf1w49zgm1owu2d592pc2dqizmdopysn0427uksia5k8oximwvu4w0nh57hrwozr9wb2l8r5uwq38zn6toim0j46a5ice77fbb3fp2ni\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Devices\" : [ {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Cupiditate quisquam ut velit velit ipsum. Fugit illum ipsum voluptates. Sed hic quisquam rerum accusantium libero. Blanditiis aliquam rerum sed.\",\n      \"Settable\" : [ \"n0d8jbu4ejrn910vtc1384wap1zc63hnj28pdnqaxugycgy0gc\", \"0liyfsewetqyc6mw3jqlkgjec13j6lampg2p53adjvnma2zehf8xduuwnr9d94ynbmvbz5um8bn7virhgjeqr0gbp3\", \"hvyeh8t6bggj79vnmqez8y3h3icnktrmmt3w065kc7sjr1d5ncv3od2cau7es6ut355vzrtsvpeyzk7e23zay902uvip6hspivszln9mdubjonamhtqsuengmhmt4tdd265prtlhomqr6ue0wfxqb2xe6ca1\" ],\n      \"Name\" : \"Carolyne Kub\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Corporis itaque facilis. Quia rerum voluptatibus accusantium voluptas architecto accusamus laudantium. Expedita totam quidem atque molestiae voluptates modi. Animi autem odio.\",\n      \"Settable\" : [ \"z9us9c708l1a9x7heon7ljlqzogzoq1njuf7nv0428ih75k9n4opkx1yx8hrzn86i8qdd1fprzenpwnf03hrhbp4mrc0ptl4rxucxddqjbgkbrifan1h6xdyr1zmkl36fhkql\", \"qwjj1a5if8ga1dpk7jiiz9xz0c40dv1t8t0awcrizjyq1t5nipvi2vwd7x0v73by5hlx3mcgmy44eyfoh\", \"97uugaeh9ig0lr7kna5j22ns4100knhnczejt093j6h\", \"j3tb5qnfe26mu94p56ridknig1wz86zpzq37peoz9guwfkgp9vbukkqvey7xu3dq1mdlsv7nzhed1vjhxstw1cpmxn9mcorx4s72sebhrorl3wyog00i\", \"f4txm9qtjk4ovuqs8dz51sm1m3pikiftl5oo6izbqfwwomp36vfmw1aaod56cs1hf0ew137t1xiydnspkt421kzth83b7mpzjau00ae9out6m7ugcvswfuxdf9zfs9bvjesd69cdbfusshcakilxfok6zz3rj3\", \"0oum793c86s4ansc7e71gx6luwrcnrc4s7acpgyq\", \"8llhbg9o72p2c3tki7tkxt7kf6jrtx7hwu8424or9ssfw4q8l8nmk4yfde1q10ioifnaevunjgfhl57wlnj61t7htnhr0p7lducstyrki2divr5qnyna0uq30nnqukainy0gt847e2vw2\" ],\n      \"Name\" : \"Wilmer Koch\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Omnis sint id quia labore nostrum sunt. Quia est amet. Voluptas quia qui.\",\n      \"Settable\" : [ \"gk36frro0dqv35nhj4wnld7y3dye5gqhh5p76tph8413f16u5ryuuvmpbcin1vnrgfdrf0qv65geyk6qzfamswa3sch1t2jl1c1wuomejt7kdcq386jjazoouuhd7c0ngrsokg2aypyq71ryl60o8av001wmqedcgoljv9amtw9zodgfi9vxjzwf00tous46uvy02fhk\", \"y5zwtoensy0c5xwezr12eg3z8tr4nm64709ydnsb6kci2fwyy2g71h9bix\" ],\n      \"Name\" : \"Dominic Kassulke III\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Est laboriosam quia odit ratione culpa est. Distinctio sed praesentium quia accusamus natus qui eius. Eum dolores sit. Id et quisquam adipisci laudantium.\",\n      \"Settable\" : [ \"gocxv7xxh3a4l8lmkdmafm98sr6b1w23bvarq4s8f3lzg5r9l1okmut4s3mgd2dgg2au33do\" ],\n      \"Name\" : \"Mrs. Antone Gutkowski\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Tempore beatae esse ipsa. Cum aut voluptatem. Tenetur delectus ullam et nihil.\",\n      \"Settable\" : [ \"p0kc89tqwztd6xzbb8o1vzkavl1wb\", \"svcizx1d6sdz8gcrlhc2303m74v6p8dmm23nj9h1a8upy8ga5lzsaoexp7p7y2fidyg3ct3fcj13r49g8q56o93ab12qvlcy93wp48tdg6ps6v84a6xq92b2ub2vlyyr6ftmo2opiv298f5enl3iah6ysg21g5fz04a2fmnlep52cyj\" ],\n      \"Name\" : \"Dusti Roberts V\"\n    } ],\n    \"Env\" : [ \"DEBUG=0\" ]\n  },\n  \"Name\" : \"tiborvass/sample-volume-plugin\",\n  \"PluginReference\" : \"localhost:5000/tiborvass/sample-volume-plugin:latest\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1564d75-4d0f-3944-897c-3f43c40999d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginDelete",
          "schema" : {
            "description" : "A plugin for the Engine API",
            "properties" : {
              "Config" : {
                "description" : "The config of a plugin.",
                "nullable" : false,
                "properties" : {
                  "Args" : {
                    "nullable" : false,
                    "properties" : {
                      "Description" : {
                        "example" : "command line arguments",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Name" : {
                        "example" : "args",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Settable" : {
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "Value" : {
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Name", "Description", "Settable", "Value" ],
                    "type" : "object"
                  },
                  "Description" : {
                    "example" : "A sample volume plugin for Docker",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "DockerVersion" : {
                    "description" : "Docker Version used to create the plugin",
                    "example" : "17.06.0-ce",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "Documentation" : {
                    "example" : "https://docs.docker.com/engine/extend/plugins/",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "Entrypoint" : {
                    "example" : [ "/usr/bin/sample-volume-plugin", "/data" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Env" : {
                    "example" : [ {
                      "Description" : "If set, prints debug messages",
                      "Name" : "DEBUG",
                      "Value" : "0"
                    } ],
                    "items" : {
                      "$ref" : "#/components/schemas/PluginEnv"
                    },
                    "type" : "array"
                  },
                  "Interface" : {
                    "description" : "The interface between Docker and the plugin",
                    "nullable" : false,
                    "properties" : {
                      "Socket" : {
                        "example" : "plugins.sock",
                        "nullable" : false,
                        "type" : "string"
                      },
                      "Types" : {
                        "example" : [ "docker.volumedriver/1.0" ],
                        "items" : {
                          "$ref" : "#/components/schemas/PluginInterfaceType"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Types", "Socket" ],
                    "type" : "object"
                  },
                  "IpcHost" : {
                    "example" : false,
                    "nullable" : false,
                    "type" : "boolean"
                  },
                  "Linux" : {
                    "nullable" : false,
                    "properties" : {
                      "AllowAllDevices" : {
                        "example" : false,
                        "nullable" : false,
                        "type" : "boolean"
                      },
                      "Capabilities" : {
                        "example" : [ "CAP_SYS_ADMIN", "CAP_SYSLOG" ],
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "Devices" : {
                        "items" : {
                          "$ref" : "#/components/schemas/PluginDevice"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "Capabilities", "AllowAllDevices", "Devices" ],
                    "type" : "object"
                  },
                  "Mounts" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginMount"
                    },
                    "type" : "array"
                  },
                  "Network" : {
                    "nullable" : false,
                    "properties" : {
                      "Type" : {
                        "example" : "host",
                        "nullable" : false,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Type" ],
                    "type" : "object"
                  },
                  "PidHost" : {
                    "example" : false,
                    "nullable" : false,
                    "type" : "boolean"
                  },
                  "PropagatedMount" : {
                    "example" : "/mnt/volumes",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "User" : {
                    "nullable" : false,
                    "properties" : {
                      "GID" : {
                        "example" : 1000,
                        "format" : "uint32",
                        "type" : "integer"
                      },
                      "UID" : {
                        "example" : 1000,
                        "format" : "uint32",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "WorkDir" : {
                    "example" : "/bin/",
                    "nullable" : false,
                    "type" : "string"
                  },
                  "rootfs" : {
                    "properties" : {
                      "diff_ids" : {
                        "example" : [ "sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887", "sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8" ],
                        "items" : {
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "type" : {
                        "example" : "layers",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "required" : [ "Description", "Documentation", "Interface", "Entrypoint", "WorkDir", "Network", "Linux", "PidHost", "PropagatedMount", "IpcHost", "Mounts", "Env", "Args" ],
                "type" : "object"
              },
              "Enabled" : {
                "description" : "True if the plugin is running. False if the plugin is not running, only installed.",
                "example" : true,
                "nullable" : false,
                "type" : "boolean"
              },
              "Id" : {
                "example" : "5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078",
                "type" : "string"
              },
              "Name" : {
                "example" : "tiborvass/sample-volume-plugin",
                "nullable" : false,
                "type" : "string"
              },
              "PluginReference" : {
                "description" : "plugin remote reference used to push/pull the plugin",
                "example" : "localhost:5000/tiborvass/sample-volume-plugin:latest",
                "nullable" : false,
                "type" : "string"
              },
              "Settings" : {
                "description" : "Settings that can be modified by users.",
                "nullable" : false,
                "properties" : {
                  "Args" : {
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Devices" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginDevice"
                    },
                    "type" : "array"
                  },
                  "Env" : {
                    "example" : [ "DEBUG=0" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Mounts" : {
                    "items" : {
                      "$ref" : "#/components/schemas/PluginMount"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "Args", "Devices", "Env", "Mounts" ],
                "type" : "object"
              }
            },
            "required" : [ "Settings", "Enabled", "Config", "Name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "a820d556-f527-3e97-8e18-b1fa013745ec",
    "name" : "Install a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/pull",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "esodq2v2gg5noc5rfx9opz7yz30z30jw797iw7138k9n7akixus0tgoc3n6skukptajqo1r761vg2hkhzsqhaenrjp5abn7g33suba7yym7g113xvcnvprf"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a820d556-f527-3e97-8e18-b1fa013745ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginPull",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "08962bc3-88cf-371e-b992-42bbedf92a70",
    "name" : "Install a plugin - 204",
    "request" : {
      "urlPath" : "/plugins/pull",
      "method" : "POST",
      "queryParameters" : {
        "remote" : {
          "equalTo" : "y0j"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "08962bc3-88cf-371e-b992-42bbedf92a70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginPull"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "5144ebb1-d2bd-393e-9600-5f31479f8dee",
    "name" : "Get plugin privileges (text/plain)",
    "request" : {
      "urlPath" : "/plugins/privileges",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "drnqbr0ie1q9xorrcvcuk9d4xjcf9196orn7p8df5s0a6a2rn8is3vg8foiqexjisqrangerivk47cufhmmzzjft1v8r9kkkhp9pvseal4ycdsmw622mx80jmda1pmgk2zby3cplmt95a1qdhgwaro3fvq85lb2bc1mndxsj02jaw7fqrz9j36vws9mz2ba0f6"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "5144ebb1-d2bd-393e-9600-5f31479f8dee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetPluginPrivileges",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "2c57f786-a705-36dd-9be4-70ca67e90360",
    "name" : "Get plugin privileges (application/json)",
    "request" : {
      "urlPath" : "/plugins/privileges",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "nwbdzek9mro"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c57f786-a705-36dd-9be4-70ca67e90360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetPluginPrivileges",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "2d65ab6c-6847-303a-8967-f61814ba3580",
    "name" : "Get plugin privileges (text/plain)",
    "request" : {
      "urlPath" : "/plugins/privileges",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "mi2w1w4jeb3beg5gosi0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Description\" : \"\",\n  \"Name\" : \"network\",\n  \"Value\" : [ \"host\" ]\n}, {\n  \"Description\" : \"\",\n  \"Name\" : \"mount\",\n  \"Value\" : [ \"/data\" ]\n}, {\n  \"Description\" : \"\",\n  \"Name\" : \"device\",\n  \"Value\" : [ \"/dev/cpu_dma_latency\" ]\n} ]",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "2d65ab6c-6847-303a-8967-f61814ba3580",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetPluginPrivileges",
          "schema" : {
            "example" : [ {
              "Description" : "",
              "Name" : "network",
              "Value" : [ "host" ]
            }, {
              "Description" : "",
              "Name" : "mount",
              "Value" : [ "/data" ]
            }, {
              "Description" : "",
              "Name" : "device",
              "Value" : [ "/dev/cpu_dma_latency" ]
            } ],
            "items" : {
              "description" : "Describes a permission the user has to accept upon installing the plugin.",
              "properties" : {
                "Description" : {
                  "type" : "string"
                },
                "Name" : {
                  "type" : "string"
                },
                "Value" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "18d6de99-6b53-38c8-bbd9-0b9b24a5f574",
    "name" : "Get plugin privileges (application/json)",
    "request" : {
      "urlPath" : "/plugins/privileges",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "remote" : {
          "equalTo" : "wnmi3czvsmp0mgzogrlf08w6x84z22e2ci12m4xhc8bqdp4da1luoo4sht99chs6cbj18dj3ke91j27mtalmhoy3w3clkxhyjq3jslr4ielrx384ioubpdbo6izzhvqvfbtw2wyp59tiiqifxx66u2zmeq0jfp2wm2lkjwv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Description\" : \"\",\n  \"Name\" : \"network\",\n  \"Value\" : [ \"host\" ]\n}, {\n  \"Description\" : \"\",\n  \"Name\" : \"mount\",\n  \"Value\" : [ \"/data\" ]\n}, {\n  \"Description\" : \"\",\n  \"Name\" : \"device\",\n  \"Value\" : [ \"/dev/cpu_dma_latency\" ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18d6de99-6b53-38c8-bbd9-0b9b24a5f574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetPluginPrivileges",
          "schema" : {
            "example" : [ {
              "Description" : "",
              "Name" : "network",
              "Value" : [ "host" ]
            }, {
              "Description" : "",
              "Name" : "mount",
              "Value" : [ "/data" ]
            }, {
              "Description" : "",
              "Name" : "device",
              "Value" : [ "/dev/cpu_dma_latency" ]
            } ],
            "items" : {
              "description" : "Describes a permission the user has to accept upon installing the plugin.",
              "properties" : {
                "Description" : {
                  "type" : "string"
                },
                "Name" : {
                  "type" : "string"
                },
                "Value" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "bbee6b88-53a9-3c81-855c-3934ba117159",
    "name" : "Create a plugin (text/plain)",
    "request" : {
      "urlPath" : "/plugins/create",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "name" : {
          "equalTo" : "Mrs.+Chang+Torp"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "bbee6b88-53a9-3c81-855c-3934ba117159",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "61538379-5dbb-3cc7-9518-3fdb71ad4a62",
    "name" : "Create a plugin (application/json)",
    "request" : {
      "urlPath" : "/plugins/create",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "name" : {
          "equalTo" : "Wilton+Erdman+MD"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61538379-5dbb-3cc7-9518-3fdb71ad4a62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "a3ef3265-852d-30cb-8d96-6664222a1815",
    "name" : "Create a plugin - 204",
    "request" : {
      "urlPath" : "/plugins/create",
      "method" : "POST",
      "queryParameters" : {
        "name" : {
          "equalTo" : "Hans+Pfeffer"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a3ef3265-852d-30cb-8d96-6664222a1815",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginCreate"
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "e73955ba-47e9-3fbb-82d6-439f15f557cb",
    "name" : "List plugins",
    "request" : {
      "urlPath" : "/plugins",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e73955ba-47e9-3fbb-82d6-439f15f557cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "b18a5719-bf26-38b3-95a4-f40fcc8aa659",
    "name" : "List plugins",
    "request" : {
      "urlPath" : "/plugins",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Config\" : {\n    \"Args\" : {\n      \"Description\" : \"command line arguments\",\n      \"Settable\" : [ \"mv3mrq52nl0mcq8w92m6u7b3hjm\", \"z9pkr7twlci88mkgmfgfj8y0us7u2fydb1\", \"fc56bkpdsbw5o47ccl9zyrs0lopfbdg5n7p0563wfgv2tb\", \"5o8grjqm9af906m8xwifmcslw96q60oeq2ij8bsx1hmhxuzr8bkl3nzuvgasow3bonyyvd9vj8gytp4emoba5dvxplctrm85bs8wk69e3ti0w\" ],\n      \"Value\" : [ \"4rkgpuxy8fepqtn0r0bf8qbb7a1mfl5hx2b8sisp5l4tc0porgpk97ux2rjt9crr5gd2uqgckyy011g9nc8d9fafzp6xq77ty3re2bi46i7mpb3li85myi8n4ojizuyn91v6tcwivxlkpvq724u4zgrith652045elyfd\", \"zqzzatnjnrppqfys6w\" ],\n      \"Name\" : \"args\"\n    },\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"juip2y2exd0do7tr3n2o919587z6w1k2ycvnj8zyam4catgn51dd7ezxnbmt1bmrsyw4y43fzrwnzba2tjppdbulklckzi2h6ldqwc609f9wvlokup4yvy1\", \"jemka02qnyvyi4qvk1j430uitk3f6vegh24zsnjejwdhvws2z8a0wog9bf9iw5d9vlox2wur9lp\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"jvfe8oatfy5gbyp3jxcgnfp0b5x00yj9m4pc730ge1p1isudnch3ux4dhtb4wszaw2zuumxvt0mk1jvmvthxft4xo0obsqtz4n51alwpico1ucf2o8zyu8wkoil3vjgtdokdqwiw2cclsiv\", \"gn3sf7xmu5ss7oz4250vf28gow22kwsqje7jcsygudg4qt754ucz01l1xn8zu033x\", \"c2d81unsls8846eywlfb0a9wopxe2dowdquyerotx0xha16st6ohf77h775v10vf21cgtgcvftxnu9egcph1297pwv17d1qprw4765huo6wbm6g67\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"zbn7tbve2a3n5zsgwqom61hwk8yupd3ocho6ge5isixclx1b99lh6n2ngi3f0291ir1xxcyr7zlfw9m3hgcnutwzboa7wvqe0bfxpmjg3qi2rkfq2xtqye4v9aur68x\", \"42mmhtklzg92gqkq9kvyqknqui6g8xmpzcrfpcuhn6mglbpy699t52wfnn5tm24n3xill2fk5px1h1e353l9eu6ac0swaudkktqbk1nbpkeauc4gwz91002e0mgs4lkitxajuzfd7spjjc5yl472\", \"57nkvepxx0xzebtyzck0se8t6477syztn078wrj0o2k6efobds558zg95tmr2q7fnv7ngq2nqr8pzg6z7306escmomzer3gv4rzspbo83mkzwh7so5t8b9ghz44p\", \"fkw453dygm3lkrx1y88tica541w4v34rbt2i16d51w2bnuib8663ccdqtkxbo3qk3d4p3pg\", \"v9xfoexkmejvns0w4z6vjhl88dnldj67bojs3txbygvrqljz9o83rh7jkmutzd25bozlpquzj43rs541wdbt4w4f77jm3odxbi1c1109hr5uq9ng\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"8qw9qkvfafvp13vp61rbcpdediz3p05nzuwj9cchcd2sr7qk8zx5ltck281tduacab4m0d2f1t3mukv8c15jkzew5ve5focc8j0vz5ddqcm71j6ue2jd83k6yungo528ebm3ameo0taflnvhwsgb6tgfa6zd5o7cemjg0vvw7hbieov28kodud36\", \"06eivabp3jkirxatcw6aanxaz3gg302zzgqpzc4e4p3bj4dm49gyyry5cckaqhrfix8cuz6ciyh4ioa5avednp17gwt89xs24tzj9hzroomcn9b2dbcafgm96p3qmkj2h5cf7flnn3lg0e2lu01ikxulyl9znha\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"2yba4et89uaklbxqe8u2e7o9ic0025118ixhkmcwyn47ramzaytr4bhgmc9jny2tr89m0v4rjw2dlhwkc1j2e3cpeawzjoubd83z\", \"2vcvwgvh6d43iiuluua2hpuyfz8j69uvxkce459z2xx5wmfsu0330fphvjenmjbh8ycpj5tbnrxcymwkogbi48kqq4fjndugf9cl5ypni7587oyilr1bp1ce4tg1ybauqa9lagv8hhvml83u0tqniq6xm98zmaxsh7eq1\", \"ut8chkoxk315xfy8sx8rfudm0wy5sthy0yxcad8c7anpso46vwwn2dpksrzc1bgm9kmyd5wu5edzhh48j62b\", \"qk9m2898so5lum73qu5nr1axgqeikzfcsctg8ubncr4ljmfwva26lzfsohqz5ljvkuk2atbig22gxc0e977sggc4a1nj8f5okqp4jlewt0nkefogcspwkoldya\", \"7z2b6ts35x2sih589izt8qjeycgucs94ho6cmrgu61gp843hze9qs7ueihnefnfabwra2rnwgl5lw\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"6o44gdr1v6zltgsiher3u3o5361vtgtzygj0zx0lh6wo0i6kc3yc949dq4oo2vytk4ckyda1dzcrkhafmcygls9z6ehz2v2nshbw5mgm5hv4xmg0ku5tokjb2af6qvdjefso45\", \"zyw037h2x9vud21252kx42fa111s6l\", \"0fcsshuod734j8fe3vv9xbdcr1crxsxbh7lqp1fl1megnqcg95m3cu9cvp250nab9k5xgtfakb1ty12ifpo8d7btlog6dl6hzp4lu7r1idhwy\", \"nsz74nr7gmrv3drzz6eht9j473glpa8ihir5f462q4gxb29avdkvcfwcpiti3xe29rhzehqbbtou7fsxslnlxvw8pjdpw6g1j8u26dyrfr73m99jxfzvxxvde2tlclycc\", \"mleullb0f6rgs9rhgy1axpxexw3npb\", \"hyicbbdmes2rnu3aynms2orfb4sqwvl6kpl3839oaw4mt1f0drgg2fiu108uzqfd7qepbpxe32y8isxihziuyapvuu5hvx2zapljcynzknrn2mo1j2zwud225gv9d6n8w2jbhdskvjj2i7d4vx10jd1e4y230cp3npmuv2nc\", \"ttm3s4mmyjp3s81lg1ew03nw4ghutvdl02f73ibx38g78lklp8cigjoiuzvrnm1hxw2gr2lojutrdvkfzq92t38ic5xz8ltp4ivg3vjb1m2s3g5p86fslathzo928od8k5aljthaer1pyrom4\", \"abc2au7g9flkd7drb61uzy5vkru\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Description\" : \"A sample volume plugin for Docker\",\n    \"User\" : {\n      \"UID\" : 1000,\n      \"GID\" : 1000\n    },\n    \"Entrypoint\" : [ \"/usr/bin/sample-volume-plugin\", \"/data\" ],\n    \"Documentation\" : \"https://docs.docker.com/engine/extend/plugins/\",\n    \"Env\" : [ {\n      \"Description\" : \"If set, prints debug messages\",\n      \"Name\" : \"DEBUG\",\n      \"Settable\" : null,\n      \"Value\" : \"0\"\n    } ],\n    \"PropagatedMount\" : \"/mnt/volumes\",\n    \"PidHost\" : false,\n    \"DockerVersion\" : \"17.06.0-ce\",\n    \"Linux\" : {\n      \"Capabilities\" : [ \"CAP_SYS_ADMIN\", \"CAP_SYSLOG\" ],\n      \"Devices\" : [ {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Vel architecto non facilis voluptas non unde voluptate. Voluptatem et suscipit reiciendis et. Qui perspiciatis inventore earum.\",\n        \"Settable\" : [ \"ixhk0j26xowk0fep44v90053jp6t90an1g1dp0vd0q21yvgfjjaza5o6scm42010okwh4mq1nudmvxklnoiqvsgrbt9cb8ggyceohsr0rmxwysvkbwguk7ratiqohkknmwoynfajnk05csyntl7wx7\", \"c5pfoc78odtw1nptq8y6q65wbrwjepsb3k5y2kyjk403w9jz1rs1smbm09yf2933wsqgaheg79twaggwhuervw2zamzhckz7vawyhhned8wgwoc1gou6jc\", \"e6t56gkxfv18e6y0mbcxp4f36kp39kryd6x8b5104t8qg2x2y4fv64m3fil934fuenvurev3932kujak9uei64b24v25ckyt9pcsf51m8cf0ajwss4csp3a67zzh3k4f13iy4hnuaaasvwsa7wjjxo8y5se320mwr6i\", \"kn8z4045lfmmdcpku6bdjrpt81nf960ewth8agcyxzdz43gz7gvt198wwpi343hcsbomu4zkmvuabat0mvm2c4p6ibfavae9bc0d4grn3oqm0jbzyfpvudgj2b7ggo\", \"0u38ei91wumzlm9wk3p6j6r30j7bh94nahab5s7xub74pqpqy9llfxfxlaa45blwt2yj47v1iqmy5v1j29q6ks8e4q9dyu4tnn7ugz6zyjahh0dxscf5mfy93mfg8pmuq1kqghs5cy728vxxczl7wdhjxd8j5tdithx6q\", \"pabos0udugrfoe6hchhsyme217zvm\", \"1daz91lkozifgjeqb5wu9feif5vya7p7yy4evv1apl9ok2ey26s014mb79kzp7a5gf6q276bwra7njwux7j8aoiinzpk16a18mqws41l6ucz031oz14kib474266mzvkiwuaof0yv4c31lfqtkgeiu2pd420cv16lt36qmpi26y0d1kwqxz8ygnpf7bx30qfad9ft\" ],\n        \"Name\" : \"Colin Armstrong\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Laborum velit incidunt porro voluptatem. Molestias sint et consectetur omnis. Velit tempore sequi. Sunt quam voluptates. Reiciendis quibusdam iure magnam maxime architecto.\",\n        \"Settable\" : [ \"023x6gy0e5zeprc0e3r9bl85jweplypucllmkis4cb8djrzvudp77euns96dvirkq0s1f3zry8sv\", \"x55j8ehv23zsnt8lbu1eok71b1bja0a3avs9gk4k7fgq5mvnpcred0an018gwf4zixc4jer1c0ri2jf7czjpm1rp67686gk0aymsrgrfd8ov6upux74uaka9o7w8ddwd9bace62\", \"vurernprqcmziglmyqysbukja14ca9ppok39pyosn0av0ocs4ohbuu7bvhn0kbxnuuo57m6u683goarkfj5c0ehoa7as6sfqmstaxyjl9258s8pulgrplr9jywwcr5\", \"pxxdevmsf2f8j8oa3lg743e5u6avuzqr340jnim4of5onrwvlap4dqqt3sa\", \"54m76ca0ylfpjrux7ujicp7kjzpaf\", \"on91hcvinwx5hbnak3ga0cysa6ob9qytgj5wev81hlcg5p748r2ontph0e5zooanc5nboeeekxxenhbsaslnh9\", \"ww8qnieh3ke7zz315ubummnonykbxsq338v7we970iim3k9x5i51e020yncj1agj9hm6obx9u3rx4jxyja7ckpkpb\" ],\n        \"Name\" : \"Mrs. Trey Ullrich\"\n      } ],\n      \"AllowAllDevices\" : false\n    },\n    \"Network\" : {\n      \"Type\" : \"host\"\n    },\n    \"rootfs\" : {\n      \"diff_ids\" : [ \"sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887\", \"sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8\" ],\n      \"type\" : \"layers\"\n    },\n    \"WorkDir\" : \"/bin/\",\n    \"Interface\" : {\n      \"Types\" : [ \"docker.volumedriver/1.0\" ],\n      \"Socket\" : \"plugins.sock\"\n    },\n    \"IpcHost\" : false\n  },\n  \"Enabled\" : true,\n  \"Id\" : \"5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078\",\n  \"Settings\" : {\n    \"Args\" : [ \"lovjo136va009n8zb2igfbt4hvvvt5hzm0us11sjtk2lzd0vomt52obs4klfmnmp8\", \"c6toyk2q1p5al9agrt5paey\", \"kss2abmoq4v38dy2ivma8ajy2akbo2zxz3qhoqqnbzf12xkrc4xfdqnl8nb3g8jmse2ci5n3vbm89cbduzvhxypajned\", \"a2eoirg3yrde00upjyay02cgtrs5vsc79rfrsisuok8vkrtdxw8ydg3ij7wjbe2lrn61hler21iqtwci8nl8jt34yp2g50mp0dr5mp0gzhw3us2uomn6rh7c74w56qcbpujtupgwxk8uw117y91axww9y9s2y4wkg9wy23jvjj8uyo7w\", \"y4lkee96qf5fj2vxc1e4en6zz1rsd2hs82gjuu3v8pyxrq1ul5brt6djd2tanynfg54ol106sqmdzyk18isua6if3ov5v7so8fhy0y2fla4nlpfbmebsgu96xj6fyqwdyj85nyfippor6coocfiqgm2lc7pagy6mg516qoxfbz799jds1rhvebxc\", \"terqu3kxtksm9ylltammwonrae0lh1pdhqle8uh7ygkusg4lc9uuxdkh1xaqiwkg9h5eq4jmsz44wum56lsvgat2k9t5heqb26p2vyfmd6cyc4jvrxvblp9pn42gnxauka1iwb1uzkcix6mvjqcob1xzygyhjjecj6ju4jke4fkzuh01qsxc2m5v5m0myo\" ],\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"1goij2dzwjf7\", \"jznlc07f5caqlsdltclmsdsk0y43mdv1x4flyliy8ya9f9i8cgl9fl561e97yg0m6hdro0uls15kmanpzy1z4xe4olf9n0e3hu47dythygmakuznbmtiuxg4kut8rdd4365i8dfy0d\", \"67hcssd2rghsw28nfdq62zobusmm6vm4joe8p8y0wmzpl1wksgghnqswudn8j4kv4u0fkjyfm3cbiek2uqvzh857oikgpm7u5svzhj9naxpr2283jepqbengmnv0l9gxn4qotc2zvawcig7laqqkaoa1fwnrigb0xxtk87bdkpxuu5f\", \"7kguk5vvqe2z1hmh7mtpolmoj86i9az8oqnqnilx5zw\", \"eezolltt3i59sygj7perl7d43kf5pjzfrphr2wzzoz50a1p0by865wdvz90anvr7yt8lu4rodyn8rqx4i6itar9ehkophyvlkil0h3cn4sfo80vgy62z301\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Devices\" : [ {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Odit modi nesciunt repudiandae consequatur facilis commodi. Ut fuga non velit aut nisi voluptatem rerum. Ut laborum sed. Hic fugit velit rerum laborum voluptate voluptas sapiente.\",\n      \"Settable\" : [ \"ilkogze8xa7fylfiglup3awtli\", \"hboj4idn8d5q\", \"pb6pexbselztw0744d0effdbflan7f4bedlj6bmdng01xzcwcx7g4ufqar4zj9r5bfh1se77pdym6taanjls1aq3psra84w\", \"7bxtskkzinvrz892sneqfyb61y6cnhz0ghtzwo0us8l51d1grhwi73h5z9ya6dwancq6in8\" ],\n      \"Name\" : \"Art Mayert\"\n    } ],\n    \"Env\" : [ \"DEBUG=0\" ]\n  },\n  \"Name\" : \"tiborvass/sample-volume-plugin\",\n  \"PluginReference\" : \"localhost:5000/tiborvass/sample-volume-plugin:latest\"\n}, {\n  \"Config\" : {\n    \"Args\" : {\n      \"Description\" : \"command line arguments\",\n      \"Settable\" : [ \"d6581p32sqn7ckibjnlrzokokcnawb9qugcawx9p0z1ufph1ere8t7o6hhyygug0k3xwqzgqf\", \"yf5natl983l29m3jiw66qmmb2iixpuuqwezz0s8svnexylmicr059jsx6ww2gnkwkx5p1mykac6kb\" ],\n      \"Value\" : [ \"02f8zf6xwa8s1o4avi3dpya9zt7b8ku4a4nj10a0nlrkzm0mkz0d551tjg6cfjghq5njf59w11v3yx048yj7f6lj4uk94j3a0rjd6nveu24rjtz6trp93la2pet5e1vc8crzhhfqhnal2mqd9pch6yfwgqta266eaobf5za\", \"tnanr0twoefw1n53x0ddpfr048lvwj1xzszuqf7u0rjc\", \"srgwol1qbw4acmk5lsei83ge3z6lr22eecbi625t24oab3ysjvj4ruwh70m8g0lg2g417872tbj53rcsfj9tf4ph\", \"yztm8uj0gagpu7o1royzv6\", \"76znwyt718pe4m1vlf3rdxiemzc72cx4i7rrkkhzko7fk4s2vhfnsg4rwzf216mj35k4qpby25v5fq10pkahid6h7rqv2nxirsbs2vyecx6r2y6ye5p8m00mk45vwigycd64t47xsbei0ehq0endix5fltkagx4gjrnrbm6q4gh924vu2zk4u42dwq7b1\", \"9jp08wurwe1mrlelcvhwra66fxqp689h1wgob9hwt2u5kbun6zcjqtmioepr6l8mrl3z1cf8slf754l\", \"i0t89xo2hnhvo\", \"04hajyotnf6b4baks1o0h95hsjarucfh1q97gsnu142rrpk3cmlqnwpcf09xu4wpdvuvp5mz6pcbcw6vk3fmhkntwuzilto1zuo7whrk7ak5bih0hx5jxc1z6h\" ],\n      \"Name\" : \"args\"\n    },\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"lsc1fwt5y5zz21uo2k1qxchhg5an7rx96q70n4m5p1ghdkh9p6z2pyy8u0qlve8x45px5kalnc5zqthsfgaeb6oj5s5cwpeg3nqde\", \"wmwcpqze5a4h2l1by8mq0jlmk336o8txyi9l04azqsbhqaqu6buk7y78osmy5dyjijx5ky5ympa5yh4nub7\", \"fvjbls2fjdqv5oitl7xpvt1757odl0kd8aasxqe3h7hua0jzugz5zqm19fxfx0c2u6cr540w1a5c1k7rafwoaq3bzeptcqmv95bv7edvtey8dyjau0m22k5k9c44jghdrl3cs4\", \"qtoxlsq2ct99vx777k2lgcgrov3sv65chsc9a2plqwa1emq7v9py3lqaxlafypt86pr1oimqsuffn14scr1qdhn10ri5xxqkjj6ys0vft25n1v5o1va1yu3bor9r16r4i\", \"nosl6cfqkeyl2a0q0arync1ky80w8gc4eglfmonlhlr2j3ng5yx0rdk98ok2nmm5ct19427aaigiyk4kk2wc36n144vz3p42gk8sr7qfaa870njmj54neum5x539b6m739qobt5alp1ivi2rj0c5cff\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"2h0nm2744tlxwf9vtip6f57pdipcinjxqgolv25d96doc6jkgd1igq44oft60g2tmvevj71w3gha4q7ximuhtzf86vah7lgrfb2ge86dfztbs8dwqx0sn22kk21s0hr50za2guvk0skijwh2djmy5so7qd1\", \"3407vw3thj4g92pxji7w2pzm29m7s4hj15d777ai4xwflazr4as8npdh4c2f2b3u1q6mi59lnmd665\", \"uj1mdoe7vt8wockxf8gwtdyt6jufh4cnesonhfwumq423edz1i80bso4vbbg3w9sg0ezta2z6mkew9ocykeiz43tn0nkhwiyd5l8ulwb751f8qk9m12nfzd\", \"rpd8ca1uj8r7xq78roo1wtuqvt6ws8x7cur68p54oovwkqb7sxz7yd2klgmhiz3s6zkqine5ynlwyubj0we1se2zqoou\", \"8dngb0z1x2rhjo66zk42u4qdneyl7pahy2ka22c1gj2rkqybarqkninr9y4okkdumqoma4ewmo88y28w1c0jjtfrod089hwd19mc75phbam132d94evqy527petamtmdebzdpulyfnchh2\", \"ot3c84kckhu5whuxrtf2wgkpatv5cqw6kz6b67nwxyuw3oyiahazs23a33fsanorz6qaptfi7xwogaokero2r4y7ek8bn0xy2co9cu50dpc2qohllvtfbjgux4k4nwrzk3axopk0tui5pioyhym27fdx6zhq6pt2vu954atj18ieqgqbvzdssknpe9prtkvq\", \"tn6yj2r15198aqwz8i5zd83yc7w9g45e2dgike2xf62hleciwl0bk4z3wlsqdgleym77bulndflwc3qratyekxuqum4r6rle235kgagh8o78yg4f8rvnro78m4tzxojelmkyvh8dzxcu26gg1yhnvh6ypdafsg9ajmx5gp3xme3dl5\", \"qfy53zmeuuqibx7y8npcdb46xsj7ymlve3p9c6ftujms5vl53gkeyu0wxx70wjrwtpj5lenfro46nknsgk86wklwnfh9cszend6b6rm8zoevfv1\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"sq8za54bzj3za3wru5rxq4768p8qtfmqf4rymvruo2e34ghljhizqv28lq73gm7\", \"6ykh1wm51pyxk6f928eqq7eguqnxmxgbplfppqqdt7r1mbbsokdugsjw7xjl1y8an8zlevh26t27zt988uzju\", \"m7o61rl16ac7h8w8yghincmipdj7yegu4rn9afx79j4rpwsty9sy2pkzob2fgzmqq67jpzzsxgytl4wm7nh510jsuvfxmvpw8za6eljmm94238v52k4hd3qhrp87e8lf9bpb17ej0h4mh8xdbfxswclbqovauf6nyx4ya3\", \"9la8norft6deu76vuyzxpsfarjnrrq1tnmf78l2j7gdyct4s8qxhvky1s85f5wmpivrt9yi5kqrp8bdxq84t4uc8igd6vzjb02mh7az\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Description\" : \"A sample volume plugin for Docker\",\n    \"User\" : {\n      \"UID\" : 1000,\n      \"GID\" : 1000\n    },\n    \"Entrypoint\" : [ \"/usr/bin/sample-volume-plugin\", \"/data\" ],\n    \"Documentation\" : \"https://docs.docker.com/engine/extend/plugins/\",\n    \"Env\" : [ {\n      \"Description\" : \"If set, prints debug messages\",\n      \"Name\" : \"DEBUG\",\n      \"Settable\" : null,\n      \"Value\" : \"0\"\n    } ],\n    \"PropagatedMount\" : \"/mnt/volumes\",\n    \"PidHost\" : false,\n    \"DockerVersion\" : \"17.06.0-ce\",\n    \"Linux\" : {\n      \"Capabilities\" : [ \"CAP_SYS_ADMIN\", \"CAP_SYSLOG\" ],\n      \"Devices\" : [ {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Quo velit quis sunt veritatis facilis. Sapiente ut aperiam velit consequuntur unde est. Est culpa reiciendis perferendis rerum repellendus et nisi. Odit reprehenderit nostrum et amet voluptatibus magn\",\n        \"Settable\" : [ \"gdjr8t4ujxi6z\", \"duf2xa1d8fhff4xsd2lukjtoshmolhlpknzsvz37hi3bdvjju705d0zb17auzrsttvyl8a\", \"lgn3necwy4u0pik81bqkt1s4b9d2ayavxa86m6rmhe1x4o4asb38e9wc3b28ahe7k1qtyk1k0czyd645c37eib5xlu4dtm8iavxbzenvalxnkj0p5sx5w1ctl2ls957w27s\", \"ypszkocngn6v6p1gxru1wp65yeyvossy74bh3onramy5i3vd7pqfll4k3xha4h0nb281iheez6e2os3e1sdmkrucpuq7o1sx9848qgako5lv0yw30ld2j2mwp9xhkiw6h0xl3\", \"8edldrib5cd73mdh9pvocc72x3jz5g4ai28dygtk2z1inw7cthi702m1g0zviy6edw3kj1xqvs29pbz5u1cf2ncuxuj5hfxlyjbxvqi4hsh2frpgwcfme5teksmvznn02g0jgz1bjupyq11co0mlkuhtyj8ewj62u250owkutbb5hfvt9u\", \"poscuaputa95suh5pvojandun9ndj3fty6d2yql1sttk7l1a4yqbgync7d2vmps403dx\" ],\n        \"Name\" : \"Windy Nolan\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Eligendi tempore tenetur voluptatem consequatur et quia. Dolor ut ut commodi suscipit necessitatibus cupiditate. Non nam aut non amet quas at.\",\n        \"Settable\" : [ \"ayhegwm718aw5hd6tcikpaxees6s026ok2\", \"rs41ib9yv584wn2vf1okpjf76yfdw4b45gbrodw5ob5x2db8\", \"xvf822mm0xjr67tcg8lt4aj0qydrr1sv2ghvakpbhf64n85lkh0i3oo8azdcflzyi7iwecurixca0og6wn3fwpjx1m2pep\", \"xdmq86gj1jif5um32z\" ],\n        \"Name\" : \"Arthur Feeney\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Suscipit consequatur maiores quam harum atque laborum. Quos exercitationem laboriosam perferendis laborum. Occaecati nisi veritatis quasi aut quas et. Consequatur magni iure amet atque itaque. Et modi\",\n        \"Settable\" : [ \"ijl3fm8uv1vzviv6woibhp9zo1duyt141yyk319fh059niq\", \"nxhcfcut2i4jeke5gbr70eqpznqldvi0xik15pr2xfol7hes11u6okatx0ch6pgzfu8fb5wc3jethhr95j8shnge0frmq5prqvdftfh8y1f3kk\", \"w3md63vgg8o79ts0kh9k7usuyabk8ngvbx0hc6j2iiswo9qlujwccnivy7t74v1tbwni6tpvy6ibo2q9p7ris4sc937iape5ejz3smw29w9g2u9udih3a6pvvql5c4kviirs22wxqqbdlpym072ma9qqopj7hlqqdm9a59ue4hroy9q2cuqb0sia\" ],\n        \"Name\" : \"Lemuel Fay\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Esse autem aut. Cupiditate ut veniam qui. Magnam cumque necessitatibus voluptatem aliquid non occaecati voluptas.\",\n        \"Settable\" : [ \"ski3hunqn0v0k8qugzxt36avv1jf11j7rmqt328j66gcb2dpd740sejstokbcqgd7quah7uu8zm0gfwqww8xwpclug6o4fanqd16wujain4w3qaueu2dnkaq7ak3rxcpqysh8plkq4oocvaslkoj9tz6z23wmikkjfqr4uy3r82gy2asfsei2mspyzys5sxbzex\", \"hkt2e9qj2czlb2bfk9v\" ],\n        \"Name\" : \"Claud Windler\"\n      }, {\n        \"Path\" : \"/dev/fuse\",\n        \"Description\" : \"Sapiente unde et earum voluptatem quas. Fugit excepturi repellendus hic. Quo dolorum hic exercitationem est. Delectus eaque in amet temporibus quia possimus sit.\",\n        \"Settable\" : [ \"25hjv0qwsj9w9q8db9qwogznh92ml2n3f5wu\", \"7mwg32jzzwyhisub5sf5e44zggs1wdl140csan3jtpbq3wzoe9uskptzu4wf10b95370o0b9gw8epmcf4qydwgcs2f77u\", \"sfnp7zyaqk75a8qlfd0q5gf8oseux7c59pcxoom2v5phcw0qv84in299x3p5ddir4yf4rdj9ibakfx0qyw7xniu3c8p61ipfdigi1ts7xw6flf2m6tw15z92vfuv91bc4109lszfrmp8r9iudb0lvq058w\", \"utcfox3i82etmzwc1wwvk8g5ug4wkhlxaeiaiu8h\", \"sj202lan3jvgydjqnqwp9xuvy9w2nqz1o2k2mpxdel6r1j6xyf5srymu0neki3wh72gys4r7w8o5hopyeutvugisr4l7zui39iy4ypyimghe95rc2rupf1ft0zxbyexeh5xduo9tz5di158gjyqhc0g8judwwz9g49nj1u5domndolp5gz9smm5mncb73\", \"rssc1vrhpndjwnk01wx8w1m891wzhkh2glp6el425ukxt2jxvrring6ewif1228msmiw03lz9lf3gj\", \"90pw9gf0wwzzinv39bgbcbbbtuanxtavt3nvh4779d1\" ],\n        \"Name\" : \"Jasper Olson\"\n      } ],\n      \"AllowAllDevices\" : false\n    },\n    \"Network\" : {\n      \"Type\" : \"host\"\n    },\n    \"rootfs\" : {\n      \"diff_ids\" : [ \"sha256:675532206fbf3030b8458f88d6e26d4eb1577688a25efec97154c94e8b6b4887\", \"sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8\" ],\n      \"type\" : \"layers\"\n    },\n    \"WorkDir\" : \"/bin/\",\n    \"Interface\" : {\n      \"Types\" : [ \"docker.volumedriver/1.0\" ],\n      \"Socket\" : \"plugins.sock\"\n    },\n    \"IpcHost\" : false\n  },\n  \"Enabled\" : true,\n  \"Id\" : \"5724e2c8652da337ab2eedd19fc6fc0ec908e4bd907c7421bf6a8dfc70c4c078\",\n  \"Settings\" : {\n    \"Args\" : [ \"yclnuyvpkxpn2ybijk9hsxc3zd956d5lwxyb3gv96h3g7g4ah1s2g9to\", \"gzl9ehvv3h2jwh2mytp8c460itgbec6nrzbm21zby6g8wk7ir2bf38lndur1fia4wdzvaipamo5k5l01mvugoq8jd1rf1\", \"oqs8ouw5yyvpm11zib8jfj7bd9lzxp65yi9otkiu6r794w2idbm8oz31kbf4ymsaiesv73ctte1shdtu81mt0rlyglimzw099gjs6sueskhq0h0d4ma3060pvr8p5vb9v2c3jmk6ze3btn779ydsrc9vzgb031szoky\", \"c46lhfwbvrq5l0u3bdyj0lm2tp1bcizh47ee508hs1jk2awry6aw8gik36ikj7rqya02qlgsxqrcfj21ghigu98o2qjktg9hhef6vo5jofzlip2flueyaatve6db25o4av5mnryqhvx2am4j73m5157k7a8sqe5idccukco1tbm8o038we2yd4p3c5cgp76r\", \"heeww3kzhp6fehwd\", \"wpp90p70wqgih2llo\", \"teks4lf8tbrfzyrk9m9d2kudskxc5gco3ac0zbbx5v1xyx0vawmq8gdy1my1u6zfz36gxacfvlx8ar3cu0m15esl6wjwqky2tsmrwe59po5sbuveyjiqz8t349iayqlk0m7m8m6o0kz1dg59exr4g54jjql6gpj158397o4ara5qlwch1pjh3pdu6ix\" ],\n    \"Mounts\" : [ {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"2n93zfm5wdrn5rrluaqizuxnhe8g8a6tjh19z6nfhb198n2i3ybtby34w\", \"dde4ep7uazcdrhk4vdisgzzc141xdwipewo3cg3zxzdgsmq6apzly6mi20cwvrs4o7kqyjpv9lw1gwrqlpw9qycpu4p8xtehg870m5pbvlj16i8\", \"bkta6abyp62um57apizawkj87l85ub2j2dw36hjoq\", \"p7wiohdpt6daygpsq9gwa2pez1njkwk0wqyppet\", \"mdqax6wfn3ypb9j2mk8xhdlusfdw18egul3wlqode401p66hce2qc0e5g51dsq5odlaxgxj992g3lc5a5dja0hxy3af17yqcfkvkxl3tk33ydrmeu1c83s6rkhl88sz8xrm7k03nwppf7v4jpj1deceinfsr1ij4uxaacz6a\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"mrj8temy55t76aimjwtfnyiem6x455l3r3w6dpwx43oya59pbbwvzrgpnrxewjgjfmxy6ig2wp1w6g48hacnc6n12y7sds000b3vabzts\", \"2c3hii7qj1rloorv6o3pm8y06am8myr8i09z1muy88p2boe3l0wj7ypmuf\", \"wwmwy74sr6lwuiud3o1b4evw\", \"8e8jhsmeomimfiv4ozvqr3b8cg6ua7nvs42dsy5eaik8vw32pqcnsavfv7w8x047sdcd0vo2oqud9xf5pjz3nda8adrooe0fkixjshq28vw4x14ei5r394u8fpl8y9w1salacilq1knmfci3280fhjsagwisr5eqw5hb1kr6ady2p21dbkzu0i\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"vmh3wlope92if\", \"za39w96ywnuozigqx8tdolnezqfps5375uom0hk1x19fbx2hbmot5eplwshxgs5pcydb2j7l4tu61hy3cmx61b\", \"szgwgxl8qua8u7vsz6mt882jh0rv0iozgxb3cu6jgfq7o5tqibjo3w7bzqltfh21feqvryqqnc6pgig5rhxr9zolxg800cryfzot8zitcmzax249zxgh5vom9ri8ipuurjxxoue81os1b897sb0z7a5xxh3c779\", \"owbzg61cuudke2zxrnsdp200qrbcjchw7jyacxpq90xtl11b3vkpdbxy61m9anp8w1h5smlu0jqettczn\", \"8j9e6l68rnd4st\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"cx7rehzmsta8y2j9zv5xzgdqw5tmii7m11s8ljx5qcwm8jc2mdeqqusy0d0swqahv3vriy2etfdcb9tazkb8obvxncjnllypccwhfbscaacuoqlvvogr97y7x8oc2weymg1xo4h0rwy86l\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"7ykmxeni1tfhn2pmj3rrbsuazi60fxwq24ekxtry52djk694c2n9rbrf4koapd3v3cv2i9xedqna60s8ig3xyegwzzjckzykap868s1gok1zuel355k9gcvk42d5r9qaoszar8xj3hvi1uo8cm2nm7ifu5szy1a7d81zvn842wl7maicfbtwant6m9xc6me11\", \"k7p7cz3fyoed31ak0zwam60i5651ls1reglwie72pefdlm3pcz15ov3559d7ykcw5qexdaj9nhjppi5ng9wa4wxey9\", \"vl2mcqyx70re28qn98p54dba4zvs5cdgizdt910ovf1zoclmgvkd6gtlq3csrd2guo1wqnnc1eimvcera63d3914plmgokvgvqn9735e13dg3vr7g1tsxu37jzvcf96x2qub7ew670b8bm6ewry6p72dmrmh6vlj2dfabjm8\", \"14046e93mixc0p4n3jyx1dnmhofvgpe85c02te7we1xd8fa8tt3o1m9ha7pnmjfuht3732gripiyxd0o3z54bo3tiyxy47nx40lwixh4f4ikbgamw70xfozk4dvas1co73u3ofx7o4ahyb\", \"fd69kz6xaeiy05rw5wud9wrvc1mwprn4847b158w9gehurd92fb39s7185nxyoan2li203m2986jr1v\", \"a3ngkes0e8fbglf4ka0x695zzitok9wlppyhoam98s9amdh5bupd2mngan187hj99kdttl9j8ug5z1xcdd4qhg4s4bseby5423hbv7lm66kzzl7d651z4jc3q6zunh74wm90b0laq21x5telyxwlar6th5wb4fttza9\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"k2m6ylz8bi85i64cxg5mex4emhdapjmrcn90o6jw7q0yz9x53dgduuqpx8l6tz19apu57r3i18t2zb3dtoepy8aek2swalj8g3m5j6gpen\", \"w42nwoaepof7q5k2lo5q74e80lha0l6bg9lhvhdbde1x9wotf878cq92ycbb5wibkhacuyn717vpoo2dhgh\", \"nf1m71p6iih6ip5xtlocq0h5ybrwe478b7ve1gqipa3ct3xxi34afhfagu3k2ltwphjjh9jk75la3n0zk51bmzhxcm9zeubiv8at9862d7nvfi2k\", \"ucxrgv80zoyhhts35n980qmbrfbsqtbizaou8f5aj86b4e6zrow3m0kk26wv2fjz2wzyjr4vyfdz7w65zavgvj1s6r709057188yhelur79v2hhczx0sofq6xi85mvnay692blwl2m9xyvj9dtylftvbsiowptm5rs5\", \"claymlqji1zekflmzajhx0b0mneez6ui2pyd4u0fe8f7d61q5m0l4s57111ssdo5tpw2urcipzmjnubt3a1xb276pyx85y79nv1192df4atjwenb5o31w9kmv\", \"gglnl3571ijlkqyek86i708kyk413s4s2nh1s0vwesb9aywj8tc628kmuzj5hzl5d33wl404tp5ndsqszxel1p9al2rm3gws1428i4qlyfv0ve3blgcvjhzz497wl81ue2g6agc\", \"ve2m7a04cr0sgiq0tzdxdc6on5xo8enau0ri7ivuv9q9v0jaea9ve469cqnl22aeeafyzsdcb\", \"rhs54rqjr42iprcc2k0xnobkcwbj99igccq2dbifaetn2l5fojfp4wic6kqk83oqgdobev2vko9ls3izaip7r8v9mt9ofq04is675h9faqn4gljfpu62ml19b8f29fvdeumyt6vbrv3zyeghc6lrv3o2h71nribtxxe21ygjvuoz5j183nbm4mdudsfnu2q\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"cgpvxeba41wonll9jz30eycx2u1j\", \"50rz\", \"dak79t2rv0bosqmm2hooaaeem\", \"4grjbcc8s20bdsq33ueyne0vrcfegc67l4rxjvwblxs2b422c483x1fg5lvva17tqko58rw8ddlnkbis2tyg2zoy5mkiubcd22rgahvkugpbf972wwylblqdzfwll17qo0a4ecpeukbz88h04uyyr264zn4qp\", \"rbujq237em7idr287sld7tx3bd8dw6cy5vr6u99lets22d6kleq6gv82bgzw2mcqnj5xhemyv14evbcnotu97omehv9j8j9ndz89ixvyoru4uwpjyblf5vkbv809tub2bb8xuois6t2oiugrpfjjhamlb0qnxyxr0whe7lzulhchzjq2llkdvmzfmglc9x\", \"kn1941vth9epm9y7hrd1kzwnmqfdzg\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    }, {\n      \"Destination\" : \"/mnt/state\",\n      \"Options\" : [ \"rbind\", \"rw\" ],\n      \"Type\" : \"bind\",\n      \"Description\" : \"This is a mount that's used by the plugin.\",\n      \"Settable\" : [ \"adaaj743npjwyt5rp78lqax2sf15gddphqecisv17qjtqy3unzcbebphhq48mcnr7tvh5klbe5pu5rtndbu8xiazvnyh\", \"s4q86dmezz4rc7e1itdn3zxx7b4qttczp4jjvqidawyqvhvok3m2ho3f2vo9n\", \"5gsnxbkpdspgj4lx222lr6za6frp9xzb3gpdv0m5oesqxbakqce91q4s89d1kx7q618dnczh9xyzeiqz1h5p3s64p0k4v94ve35absmpk7bns3qnbuxkcgctu2g96rv7jzx0hoktsbcxtzp0v5xv4pfljkydav4mg4i\", \"sxvpaym5ykc3exan2n\" ],\n      \"Source\" : \"/var/lib/docker/plugins/\",\n      \"Name\" : \"some-mount\"\n    } ],\n    \"Devices\" : [ {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Cupiditate unde illo voluptas. Aut quam hic. Qui maiores eligendi iusto dolorem. Velit minus praesentium. Labore quas eveniet.\",\n      \"Settable\" : [ \"a20hza83q2jud3\", \"duhn0ytqgc4mor2hup67dml1vthremmu6lheuzn8gqww4kxn5t90fm311r1tr0o0ktc3lbo6eq8knpbnnp4dpzdnfe504lstv1gxaagodpq7nzxbc\", \"sz3fgo5d1cfmb3a7\", \"03byrxlj4bcjnjb3w641kskezxl71vb24v4bzcuw1\" ],\n      \"Name\" : \"Dr. Euna Rippin\"\n    }, {\n      \"Path\" : \"/dev/fuse\",\n      \"Description\" : \"Animi sapiente quaerat in est neque voluptas. Molestias et vero sed est. Tempore aut sunt rerum ut doloribus. Cum molestias veniam voluptate officia maxime.\",\n      \"Settable\" : [ \"y40bqbkv8aqvbho5n5n34lybr10cmggn06fxyc1olcoeveei1555utet5dgmg4zf7h1k93t5u4v5tiz1h8ud48ryzmrfg0ca5h437vbmhmf1owxqv34geyk2se9key3tkugyv11dpa93qd6czkap54bwbfz4i\" ],\n      \"Name\" : \"Adrian Schowalter\"\n    } ],\n    \"Env\" : [ \"DEBUG=0\" ]\n  },\n  \"Name\" : \"tiborvass/sample-volume-plugin\",\n  \"PluginReference\" : \"localhost:5000/tiborvass/sample-volume-plugin:latest\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b18a5719-bf26-38b3-95a4-f40fcc8aa659",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PluginList",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Plugin"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "edc22a10-aa89-38b5-8cd6-9e04634d4bf0",
    "name" : "Update a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/6ax5/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "2127016770408319445"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "edc22a10-aa89-38b5-8cd6-9e04634d4bf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "7ef0de78-72f9-3711-8e26-7583da3cbd46",
    "name" : "Update a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/4hr3/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "7174250525224483642"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ef0de78-72f9-3711-8e26-7583da3cbd46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "c41bb851-41ab-3e70-a0b3-6aa9ea13af1a",
    "name" : "Update a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/5e29/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "9020331372862009001"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c41bb851-41ab-3e70-a0b3-6aa9ea13af1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "9a0a2d50-97c6-32bb-bafb-ea8b776a56d9",
    "name" : "Update a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/7u1o/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "5831027094080774607"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a0a2d50-97c6-32bb-bafb-ea8b776a56d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "4396abfc-eb09-3799-bebb-10f227b2d713",
    "name" : "Update a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/hbaq/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "2782711525770798523"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "4396abfc-eb09-3799-bebb-10f227b2d713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "35aeb0f3-3e8b-3302-b603-d7a371625d01",
    "name" : "Update a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/6314/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "647704276197263641"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35aeb0f3-3e8b-3302-b603-d7a371625d01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "ba143e33-02ca-39dd-a9a9-1b6b3002a18b",
    "name" : "Update a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/771g/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "6650581686987451727"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "ba143e33-02ca-39dd-a9a9-1b6b3002a18b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "ca341338-b92f-3225-a41e-8b71bd54c407",
    "name" : "Update a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/hgd5/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "6843844827700727250"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca341338-b92f-3225-a41e-8b71bd54c407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "bbf6a918-3f88-3e95-ad7f-050685566fb8",
    "name" : "Update a node - 200",
    "request" : {
      "urlPath" : "/nodes/z7xi/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "2864165343288424173"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bbf6a918-3f88-3e95-ad7f-050685566fb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeUpdate"
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "79ea801e-7e15-304c-ac3e-946273e2d93d",
    "name" : "Inspect a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/re02",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "79ea801e-7e15-304c-ac3e-946273e2d93d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "dad6c4c3-7b8a-35ba-8f00-a798ad407549",
    "name" : "Inspect a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/0axb",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dad6c4c3-7b8a-35ba-8f00-a798ad407549",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "66c6d5ff-ac2b-3e78-96ba-56ad131b4b64",
    "name" : "Inspect a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/i3x7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "66c6d5ff-ac2b-3e78-96ba-56ad131b4b64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "bca734bb-2b40-3c83-88b0-2e5774ba9193",
    "name" : "Inspect a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/k34u",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bca734bb-2b40-3c83-88b0-2e5774ba9193",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "1ec1bc45-0971-3f57-a7d8-f0d9214b4e12",
    "name" : "Inspect a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/05vd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "1ec1bc45-0971-3f57-a7d8-f0d9214b4e12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "00db13bc-0e9e-3e42-9b60-f0c8f0170894",
    "name" : "Inspect a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/hoi8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00db13bc-0e9e-3e42-9b60-f0c8f0170894",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "9d74273a-edd6-3358-9387-2fb0b0e82366",
    "name" : "Inspect a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/9wup",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "9d74273a-edd6-3358-9387-2fb0b0e82366",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeInspect",
          "schema" : {
            "properties" : {
              "CreatedAt" : {
                "description" : "Date and time at which the node was added to the swarm in\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds.\n",
                "example" : "2016-08-18T10:44:24.496525531Z",
                "format" : "dateTime",
                "type" : "string"
              },
              "Description" : {
                "$ref" : "#/components/schemas/NodeDescription"
              },
              "ID" : {
                "example" : "24ifsmvkjbyhk",
                "type" : "string"
              },
              "ManagerStatus" : {
                "$ref" : "#/components/schemas/ManagerStatus"
              },
              "Spec" : {
                "$ref" : "#/components/schemas/NodeSpec"
              },
              "Status" : {
                "$ref" : "#/components/schemas/NodeStatus"
              },
              "UpdatedAt" : {
                "description" : "Date and time at which the node was last updated in\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds.\n",
                "example" : "2017-08-09T07:09:37.632105588Z",
                "format" : "dateTime",
                "type" : "string"
              },
              "Version" : {
                "$ref" : "#/components/schemas/ObjectVersion"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "589a76ec-8fd0-3b1e-be65-663d729e36e4",
    "name" : "Inspect a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/2f6p",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "589a76ec-8fd0-3b1e-be65-663d729e36e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeInspect",
          "schema" : {
            "properties" : {
              "CreatedAt" : {
                "description" : "Date and time at which the node was added to the swarm in\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds.\n",
                "example" : "2016-08-18T10:44:24.496525531Z",
                "format" : "dateTime",
                "type" : "string"
              },
              "Description" : {
                "$ref" : "#/components/schemas/NodeDescription"
              },
              "ID" : {
                "example" : "24ifsmvkjbyhk",
                "type" : "string"
              },
              "ManagerStatus" : {
                "$ref" : "#/components/schemas/ManagerStatus"
              },
              "Spec" : {
                "$ref" : "#/components/schemas/NodeSpec"
              },
              "Status" : {
                "$ref" : "#/components/schemas/NodeStatus"
              },
              "UpdatedAt" : {
                "description" : "Date and time at which the node was last updated in\n[RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format with nano-seconds.\n",
                "example" : "2017-08-09T07:09:37.632105588Z",
                "format" : "dateTime",
                "type" : "string"
              },
              "Version" : {
                "$ref" : "#/components/schemas/ObjectVersion"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "43b14081-feeb-39f2-8caf-2552176bc6da",
    "name" : "Delete a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/567d",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "43b14081-feeb-39f2-8caf-2552176bc6da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "27b77717-3dc9-35b5-a2c7-0973e87db579",
    "name" : "Delete a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/w0at",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27b77717-3dc9-35b5-a2c7-0973e87db579",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "6d4890c2-c2f0-3e35-b129-665b082a8707",
    "name" : "Delete a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/14d6",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "6d4890c2-c2f0-3e35-b129-665b082a8707",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "12364b91-20d4-3a43-9c6e-b0fe090f5f37",
    "name" : "Delete a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/p007",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12364b91-20d4-3a43-9c6e-b0fe090f5f37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "bb501d5b-f806-3887-9a64-faa556b4bed1",
    "name" : "Delete a node (text/plain)",
    "request" : {
      "urlPath" : "/nodes/wil3",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "bb501d5b-f806-3887-9a64-faa556b4bed1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "dbbbba82-bd4c-3f06-aa3e-6f5684b3093f",
    "name" : "Delete a node (application/json)",
    "request" : {
      "urlPath" : "/nodes/2jsk",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbbbba82-bd4c-3f06-aa3e-6f5684b3093f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "f4f393bc-8ea5-3a73-9e48-5fceff3a8f44",
    "name" : "Delete a node - 200",
    "request" : {
      "urlPath" : "/nodes/0zam",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f4f393bc-8ea5-3a73-9e48-5fceff3a8f44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeDelete"
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "7d6678dd-d41b-3c3d-b8f9-56c782385d10",
    "name" : "List nodes (text/plain)",
    "request" : {
      "urlPath" : "/nodes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "7d6678dd-d41b-3c3d-b8f9-56c782385d10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "2e0bd748-e0a2-32da-a7d6-65e9cb816201",
    "name" : "List nodes (application/json)",
    "request" : {
      "urlPath" : "/nodes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e0bd748-e0a2-32da-a7d6-65e9cb816201",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "e85f6ee8-01c2-3842-952d-01b7ac8ebc8a",
    "name" : "List nodes (text/plain)",
    "request" : {
      "urlPath" : "/nodes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "e85f6ee8-01c2-3842-952d-01b7ac8ebc8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "d590c651-258c-3897-9e23-3a93bb23dc67",
    "name" : "List nodes (application/json)",
    "request" : {
      "urlPath" : "/nodes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d590c651-258c-3897-9e23-3a93bb23dc67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "991d405f-ff1a-30e3-b318-881d5c5db5f5",
    "name" : "List nodes (text/plain)",
    "request" : {
      "urlPath" : "/nodes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n} ]",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "991d405f-ff1a-30e3-b318-881d5c5db5f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeList",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Node"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "70254c7e-c779-300c-9383-2ce8d418d630",
    "name" : "List nodes (application/json)",
    "request" : {
      "urlPath" : "/nodes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}, {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}, {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}, {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}, {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}, {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}, {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n}, {\n  \"Status\" : {\n    \"Message\" : \"\",\n    \"State\" : \"ready\",\n    \"Addr\" : \"172.17.0.2\"\n  },\n  \"Description\" : {\n    \"Platform\" : {\n      \"Architecture\" : \"x86_64\",\n      \"OS\" : \"linux\"\n    },\n    \"Hostname\" : \"bf3067039e47\",\n    \"TLSInfo\" : {\n      \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n      \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n      \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n    },\n    \"Resources\" : {\n      \"NanoCPUs\" : 4000000000,\n      \"GenericResources\" : [ {\n        \"DiscreteResourceSpec\" : {\n          \"Kind\" : \"SSD\",\n          \"Value\" : 3\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID1\"\n        }\n      }, {\n        \"NamedResourceSpec\" : {\n          \"Kind\" : \"GPU\",\n          \"Value\" : \"UUID2\"\n        }\n      } ],\n      \"MemoryBytes\" : 8272408576\n    },\n    \"Engine\" : {\n      \"EngineVersion\" : \"17.06.0\",\n      \"Labels\" : {\n        \"foo\" : \"bar\"\n      },\n      \"Plugins\" : [ {\n        \"Name\" : \"awslogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"fluentd\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gcplogs\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"gelf\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"journald\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"json-file\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"logentries\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"splunk\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"syslog\",\n        \"Type\" : \"Log\"\n      }, {\n        \"Name\" : \"bridge\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"host\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"ipvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"macvlan\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"null\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"overlay\",\n        \"Type\" : \"Network\"\n      }, {\n        \"Name\" : \"local\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"localhost:5000/vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      }, {\n        \"Name\" : \"vieux/sshfs:latest\",\n        \"Type\" : \"Volume\"\n      } ]\n    }\n  },\n  \"Version\" : {\n    \"Index\" : 373531\n  },\n  \"ManagerStatus\" : {\n    \"Leader\" : true,\n    \"Addr\" : \"10.0.0.46:2377\",\n    \"Reachability\" : \"reachable\"\n  },\n  \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n  \"ID\" : \"24ifsmvkjbyhk\",\n  \"Spec\" : {\n    \"Availability\" : \"active\",\n    \"Labels\" : {\n      \"foo\" : \"bar\"\n    },\n    \"Name\" : \"node-name\",\n    \"Role\" : \"manager\"\n  },\n  \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70254c7e-c779-300c-9383-2ce8d418d630",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NodeList",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Node"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "7b03dc3a-1d16-387b-8f93-8658a48f1f47",
    "name" : "Disconnect a container from a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/6kjp/disconnect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "7b03dc3a-1d16-387b-8f93-8658a48f1f47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDisconnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "dc89137b-5c45-3e03-9af1-f2123ac8030c",
    "name" : "Disconnect a container from a network (application/json)",
    "request" : {
      "urlPath" : "/networks/7bb2/disconnect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc89137b-5c45-3e03-9af1-f2123ac8030c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDisconnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "adbeae35-25ef-3f87-9771-c11686ed22da",
    "name" : "Disconnect a container from a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/dhby/disconnect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "adbeae35-25ef-3f87-9771-c11686ed22da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDisconnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "44d43e14-39c7-3bf1-bdc0-bae415b14342",
    "name" : "Disconnect a container from a network (application/json)",
    "request" : {
      "urlPath" : "/networks/zd9t/disconnect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44d43e14-39c7-3bf1-bdc0-bae415b14342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDisconnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "942438bb-28c4-3ec0-a204-fe2b222eb759",
    "name" : "Disconnect a container from a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/6ewf/disconnect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "942438bb-28c4-3ec0-a204-fe2b222eb759",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDisconnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "5261b45a-4ef5-3617-bb3b-8cd2056bfc38",
    "name" : "Disconnect a container from a network (application/json)",
    "request" : {
      "urlPath" : "/networks/ld7t/disconnect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5261b45a-4ef5-3617-bb3b-8cd2056bfc38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDisconnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "f06fe40c-0921-3430-9cef-2506774e7e8d",
    "name" : "Disconnect a container from a network - 200",
    "request" : {
      "urlPath" : "/networks/u3k2/disconnect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f06fe40c-0921-3430-9cef-2506774e7e8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDisconnect"
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "1c4deddc-fb29-31c8-9311-918a68b997e1",
    "name" : "Connect a container to a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/nje5/connect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "1c4deddc-fb29-31c8-9311-918a68b997e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkConnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "8379de88-de5d-3c5e-ab8b-fb0c39515edd",
    "name" : "Connect a container to a network (application/json)",
    "request" : {
      "urlPath" : "/networks/v161/connect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8379de88-de5d-3c5e-ab8b-fb0c39515edd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkConnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "20b3ec0b-ac48-307d-a436-51e94c2cfe6f",
    "name" : "Connect a container to a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/jb3r/connect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "20b3ec0b-ac48-307d-a436-51e94c2cfe6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkConnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "5e9ea9f0-059f-39a0-8a07-cc0a1d9de6f0",
    "name" : "Connect a container to a network (application/json)",
    "request" : {
      "urlPath" : "/networks/8n31/connect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e9ea9f0-059f-39a0-8a07-cc0a1d9de6f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkConnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "39e48a6f-978c-3cee-9187-7a8c66f47c02",
    "name" : "Connect a container to a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/504s/connect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "39e48a6f-978c-3cee-9187-7a8c66f47c02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkConnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "236d19e3-fa04-3ea1-9fe0-4e3ef3f3525d",
    "name" : "Connect a container to a network (application/json)",
    "request" : {
      "urlPath" : "/networks/yhxd/connect",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "236d19e3-fa04-3ea1-9fe0-4e3ef3f3525d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkConnect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "7a822897-4511-31e2-9098-4e114ba1cc81",
    "name" : "Connect a container to a network - 200",
    "request" : {
      "urlPath" : "/networks/jo7e/connect",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7a822897-4511-31e2-9098-4e114ba1cc81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkConnect"
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "6a3450ab-b47b-3379-8a87-4fecf4b4e3c3",
    "name" : "Inspect a network",
    "request" : {
      "urlPath" : "/networks/ev7h",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a3450ab-b47b-3379-8a87-4fecf4b4e3c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "f95835a6-3935-32a2-8921-de76206838ae",
    "name" : "Inspect a network",
    "request" : {
      "urlPath" : "/networks/8t0d",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f95835a6-3935-32a2-8921-de76206838ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "5896b5fd-4447-30ba-b7ed-afbc5f6754b2",
    "name" : "Inspect a network",
    "request" : {
      "urlPath" : "/networks/3l5j",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Attachable\" : false,\n  \"Containers\" : {\n    \"19a4d5d687db25203351ed79d478946f861258f018fe384f229f2efa4b23513c\" : {\n      \"EndpointID\" : \"628cadb8bcb92de107b2a1e516cbffe463e321f548feb37697cce00ad694f21a\",\n      \"IPv4Address\" : \"172.19.0.2/16\",\n      \"IPv6Address\" : \"\",\n      \"MacAddress\" : \"02:42:ac:13:00:02\",\n      \"Name\" : \"test\"\n    }\n  },\n  \"Created\" : \"2016-10-19T04:33:30.360899459Z\",\n  \"Driver\" : \"bridge\",\n  \"EnableIPv6\" : false,\n  \"IPAM\" : {\n    \"Config\" : [ {\n      \"Gateway\" : \"172.19.0.1\",\n      \"Subnet\" : \"172.19.0.0/16\"\n    } ],\n    \"Driver\" : \"default\",\n    \"Options\" : {\n      \"foo\" : \"bar\"\n    }\n  },\n  \"Id\" : \"7d86d31b1478e7cca9ebed7e73aa0fdeec46c5ca29497431d3007d2d9e15ed99\",\n  \"Ingress\" : false,\n  \"Internal\" : false,\n  \"Labels\" : {\n    \"com.example.some-label\" : \"some-value\",\n    \"com.example.some-other-label\" : \"some-other-value\"\n  },\n  \"Name\" : \"net01\",\n  \"Options\" : {\n    \"com.docker.network.bridge.default_bridge\" : \"true\",\n    \"com.docker.network.bridge.enable_icc\" : \"true\",\n    \"com.docker.network.bridge.enable_ip_masquerade\" : \"true\",\n    \"com.docker.network.bridge.host_binding_ipv4\" : \"0.0.0.0\",\n    \"com.docker.network.bridge.name\" : \"docker0\",\n    \"com.docker.network.driver.mtu\" : \"1500\"\n  },\n  \"Scope\" : \"local\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5896b5fd-4447-30ba-b7ed-afbc5f6754b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkInspect",
          "schema" : {
            "example" : {
              "Attachable" : false,
              "Containers" : {
                "19a4d5d687db25203351ed79d478946f861258f018fe384f229f2efa4b23513c" : {
                  "EndpointID" : "628cadb8bcb92de107b2a1e516cbffe463e321f548feb37697cce00ad694f21a",
                  "IPv4Address" : "172.19.0.2/16",
                  "IPv6Address" : "",
                  "MacAddress" : "02:42:ac:13:00:02",
                  "Name" : "test"
                }
              },
              "Created" : "2016-10-19T04:33:30.360899459Z",
              "Driver" : "bridge",
              "EnableIPv6" : false,
              "IPAM" : {
                "Config" : [ {
                  "Gateway" : "172.19.0.1",
                  "Subnet" : "172.19.0.0/16"
                } ],
                "Driver" : "default",
                "Options" : {
                  "foo" : "bar"
                }
              },
              "Id" : "7d86d31b1478e7cca9ebed7e73aa0fdeec46c5ca29497431d3007d2d9e15ed99",
              "Ingress" : false,
              "Internal" : false,
              "Labels" : {
                "com.example.some-label" : "some-value",
                "com.example.some-other-label" : "some-other-value"
              },
              "Name" : "net01",
              "Options" : {
                "com.docker.network.bridge.default_bridge" : "true",
                "com.docker.network.bridge.enable_icc" : "true",
                "com.docker.network.bridge.enable_ip_masquerade" : "true",
                "com.docker.network.bridge.host_binding_ipv4" : "0.0.0.0",
                "com.docker.network.bridge.name" : "docker0",
                "com.docker.network.driver.mtu" : "1500"
              },
              "Scope" : "local"
            },
            "properties" : {
              "Attachable" : {
                "type" : "boolean"
              },
              "Containers" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/NetworkContainer"
                },
                "type" : "object"
              },
              "Created" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "Driver" : {
                "type" : "string"
              },
              "EnableIPv6" : {
                "type" : "boolean"
              },
              "IPAM" : {
                "$ref" : "#/components/schemas/IPAM"
              },
              "Id" : {
                "type" : "string"
              },
              "Ingress" : {
                "type" : "boolean"
              },
              "Internal" : {
                "type" : "boolean"
              },
              "Labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "type" : "object"
              },
              "Name" : {
                "type" : "string"
              },
              "Options" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "type" : "object"
              },
              "Scope" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "69ce04ad-737c-3814-aa65-0b1a0c4809f8",
    "name" : "Remove a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/bq20",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "69ce04ad-737c-3814-aa65-0b1a0c4809f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "449f6f85-086d-349a-9959-7eecd51cf353",
    "name" : "Remove a network (application/json)",
    "request" : {
      "urlPath" : "/networks/5uj4",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "449f6f85-086d-349a-9959-7eecd51cf353",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "a25e07ea-a616-36b9-8d05-fa00b3d8bdd9",
    "name" : "Remove a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/n8f5",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "a25e07ea-a616-36b9-8d05-fa00b3d8bdd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "9ea70d8a-a9f8-3b6c-a3fa-3418b06bcfe4",
    "name" : "Remove a network (application/json)",
    "request" : {
      "urlPath" : "/networks/21m8",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ea70d8a-a9f8-3b6c-a3fa-3418b06bcfe4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "f7d23c85-0f66-3a59-a650-d91a63355e1c",
    "name" : "Remove a network (text/plain)",
    "request" : {
      "urlPath" : "/networks/8cna",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "f7d23c85-0f66-3a59-a650-d91a63355e1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "552accd5-bad1-3be4-87aa-9a9eb7caad63",
    "name" : "Remove a network (application/json)",
    "request" : {
      "urlPath" : "/networks/2t3j",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "552accd5-bad1-3be4-87aa-9a9eb7caad63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "b6d7715b-3a5a-3544-a4c7-9210c021e8f8",
    "name" : "Remove a network - 204",
    "request" : {
      "urlPath" : "/networks/16v1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b6d7715b-3a5a-3544-a4c7-9210c021e8f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkDelete"
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "a8a605fd-ee5d-3e9e-9c25-3d1f648f813c",
    "name" : "Delete unused networks",
    "request" : {
      "urlPath" : "/networks/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8a605fd-ee5d-3e9e-9c25-3d1f648f813c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkPrune",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "1d50657b-e07b-33da-8431-c7754dc203e2",
    "name" : "Delete unused networks",
    "request" : {
      "urlPath" : "/networks/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NetworksDeleted\" : [ \"cw2xsky6gqbo7vjvv2xt3g99um453m8nbk9n3gfwaof2b3xbkuoedwy3wpi66b5oqwxsh49ku4pv01kzjj9kk15nq691yvzgu7lk6whgvv0ca4so1xei1tg441zxhthav\", \"yq8achl8w6epnk1alyqlmqlpuc7p3zgwezv4v38sptw5uxzhdvubvx4xkpu7pwcxz4kz2051ty5efecu82916mozm7ih3js2gn34vxld6qd3vwl7x5lephx6jxb85p3lr3w6l2o1lbs9lv\", \"006zynrnwoxo0j7e4nnwoqal27tkihctp2ugy7a8w7xicw8hq19aq2plui6zzbwkm52sgw8at0z8ingy6ixnxeul9pqyppznndz99rg0c32ohh54xu8591kbfx5wtrfh4qlvk3cvfkqtrdqsq59yxrv0t\", \"v96cu99pm2rqpyh4t49xjhv6g13jl2um7z8c8gv1mapnxcfyt1yk2khgve1tb2xd38tz1h5v2as8mc0klbh4e3hqlli2nrohh0vpy38y9ig5vmy46uit46cp7v2xp82bm0sfp7gws2tf80h30ndk6wlbgr22mnohmi6kwg0jz74pl8uxr431qy\", \"nz9945442ds3f89dk87ny8acbdem828vk8q24o9sf3pcuxcnt5s44osco9syi6k36ewomr9xxa2v82xx4athmv2y1trx0l1hoag\", \"i75qqtqpmlr0ex6s44eor2h212b1a9ljltrqiu6e1pm6ff84uosw41rpx14va3xt39d7sg8wtkflz0ma6oc7lvb71shh3pz32t44949zdo5a2s8lli3jjhjssepxmbmxxf7hgda\", \"okv31e2qsi57l44s7a2kqg228rtcr6sqtia1297t7ywvwbufzzsypa\", \"7tu716cdus2qjpo8z29dzwg7nwqvmj5w250dgokw3dk6v28kmztgj3tc7klcpb98dh3hulg9anwa7ddcvin3cg4r6lfoipfilcylbrz22i1aqwyh3idj6r8fp6tpui8ma6i33wxb8xt5nkbme05g5g917pj0fqjwktog2y3e4p7xn9dffsse13w0ha2k7x\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d50657b-e07b-33da-8431-c7754dc203e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkPrune",
          "schema" : {
            "properties" : {
              "NetworksDeleted" : {
                "description" : "Networks that were deleted",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "c3f57140-f649-3403-951e-9190d6824489",
    "name" : "Create a network",
    "request" : {
      "urlPath" : "/networks/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3f57140-f649-3403-951e-9190d6824489",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "50452da0-2e8b-3cf4-bcd6-ae1b7c499ea6",
    "name" : "Create a network",
    "request" : {
      "urlPath" : "/networks/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50452da0-2e8b-3cf4-bcd6-ae1b7c499ea6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "a261c4d1-6a86-31ed-b501-06fe8d4110aa",
    "name" : "Create a network",
    "request" : {
      "urlPath" : "/networks/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a261c4d1-6a86-31ed-b501-06fe8d4110aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "5a006b51-0631-30e1-9051-55c81460f8fb",
    "name" : "Create a network",
    "request" : {
      "urlPath" : "/networks/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"Id\" : \"22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30\",\n  \"Warning\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a006b51-0631-30e1-9051-55c81460f8fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkCreate",
          "schema" : {
            "example" : {
              "Id" : "22be93d5babb089c5aab8dbc369042fad48ff791584ca2da2100db837a1c7c30",
              "Warning" : ""
            },
            "properties" : {
              "Id" : {
                "description" : "The ID of the created network.",
                "type" : "string"
              },
              "Warning" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "7b3703d3-4fe6-36d6-bb4c-0f4d79b2e884",
    "name" : "List networks",
    "request" : {
      "urlPath" : "/networks",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b3703d3-4fe6-36d6-bb4c-0f4d79b2e884",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "1113109e-5d91-33ea-9e9c-7e6d081ee55b",
    "name" : "List networks - response",
    "request" : {
      "urlPath" : "/networks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Attachable\" : false,\n  \"Created\" : \"2016-10-19T06:21:00.416543526Z\",\n  \"Driver\" : \"bridge\",\n  \"EnableIPv6\" : false,\n  \"IPAM\" : {\n    \"Config\" : [ {\n      \"Subnet\" : \"172.17.0.0/16\"\n    } ],\n    \"Driver\" : \"default\"\n  },\n  \"Id\" : \"f2de39df4171b0dc801e8002d1d999b77256983dfc63041c0f34030aa3977566\",\n  \"Ingress\" : false,\n  \"Internal\" : false,\n  \"Name\" : \"bridge\",\n  \"Options\" : {\n    \"com.docker.network.bridge.default_bridge\" : \"true\",\n    \"com.docker.network.bridge.enable_icc\" : \"true\",\n    \"com.docker.network.bridge.enable_ip_masquerade\" : \"true\",\n    \"com.docker.network.bridge.host_binding_ipv4\" : \"0.0.0.0\",\n    \"com.docker.network.bridge.name\" : \"docker0\",\n    \"com.docker.network.driver.mtu\" : \"1500\"\n  },\n  \"Scope\" : \"local\"\n}, {\n  \"Attachable\" : false,\n  \"Containers\" : { },\n  \"Created\" : \"0001-01-01T00:00:00Z\",\n  \"Driver\" : \"null\",\n  \"EnableIPv6\" : false,\n  \"IPAM\" : {\n    \"Config\" : [ ],\n    \"Driver\" : \"default\"\n  },\n  \"Id\" : \"e086a3893b05ab69242d3c44e49483a3bbbd3a26b46baa8f61ab797c1088d794\",\n  \"Ingress\" : false,\n  \"Internal\" : false,\n  \"Name\" : \"none\",\n  \"Options\" : { },\n  \"Scope\" : \"local\"\n}, {\n  \"Attachable\" : false,\n  \"Containers\" : { },\n  \"Created\" : \"0001-01-01T00:00:00Z\",\n  \"Driver\" : \"host\",\n  \"EnableIPv6\" : false,\n  \"IPAM\" : {\n    \"Config\" : [ ],\n    \"Driver\" : \"default\"\n  },\n  \"Id\" : \"13e871235c677f196c4e1ecebb9dc733b9b2d2ab589e30c539efeda84a24215e\",\n  \"Ingress\" : false,\n  \"Internal\" : false,\n  \"Name\" : \"host\",\n  \"Options\" : { },\n  \"Scope\" : \"local\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1113109e-5d91-33ea-9e9c-7e6d081ee55b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "NetworkList",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Network"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "d75c2681-2010-37ec-90dc-afa586eab0ed",
    "name" : "Get system information",
    "request" : {
      "urlPath" : "/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d75c2681-2010-37ec-90dc-afa586eab0ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemInfo",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "df180ab3-5f57-38ef-abc9-3ed9b7701375",
    "name" : "Get system information",
    "request" : {
      "urlPath" : "/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NGoroutines\" : 174,\n  \"Name\" : \"node5.corp.example.com\",\n  \"Swarm\" : {\n    \"NodeAddr\" : \"10.0.0.46\",\n    \"Managers\" : 3,\n    \"NodeID\" : \"k67qz4598weg5unwwffg6z1m1\",\n    \"Cluster\" : {\n      \"RootRotationInProgress\" : false,\n      \"Version\" : {\n        \"Index\" : 373531\n      },\n      \"CreatedAt\" : \"2016-08-18T10:44:24.496525531Z\",\n      \"TLSInfo\" : {\n        \"CertIssuerPublicKey\" : \"MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEmT9XIw9h1qoNclv9VeHmf/Vi6/uI2vFXdBveXTpcPjqx6i9wNazchk1XWV/dKTKvSh9xyGKmiIeRcE4OiMnJ1A==\",\n        \"CertIssuerSubject\" : \"MBMxETAPBgNVBAMTCHN3YXJtLWNh\",\n        \"TrustRoot\" : \"-----BEGIN CERTIFICATE-----\\nMIIBajCCARCgAwIBAgIUbYqrLSOSQHoxD8CwG6Bi2PJi9c8wCgYIKoZIzj0EAwIw\\nEzERMA8GA1UEAxMIc3dhcm0tY2EwHhcNMTcwNDI0MjE0MzAwWhcNMzcwNDE5MjE0\\nMzAwWjATMREwDwYDVQQDEwhzd2FybS1jYTBZMBMGByqGSM49AgEGCCqGSM49AwEH\\nA0IABJk/VyMPYdaqDXJb/VXh5n/1Yuv7iNrxV3Qb3l06XD46seovcDWs3IZNV1lf\\n3Skyr0ofcchipoiHkXBODojJydSjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMB\\nAf8EBTADAQH/MB0GA1UdDgQWBBRUXxuRcnFjDfR/RIAUQab8ZV/n4jAKBggqhkjO\\nPQQDAgNIADBFAiAy+JTe6Uc3KyLCMiqGl2GyWGQqQDEcO3/YG36x7om65AIhAJvz\\npxv6zFeVEkAEEkqIYi0omA9+CjanB/6Bz4n1uw8H\\n-----END CERTIFICATE-----\\n\"\n      },\n      \"ID\" : \"abajmipo7b4xz5ip2nrla6b11\",\n      \"Spec\" : {\n        \"Orchestration\" : {\n          \"TaskHistoryRetentionLimit\" : 10\n        },\n        \"CAConfig\" : {\n          \"SigningCACert\" : \"donzgz27ofh2yw3hklbmp1uj5ppu6zvblw30hfim9k4yl9\",\n          \"ExternalCAs\" : [ { }, { }, { }, { } ],\n          \"ForceRotate\" : 4876458250857959521,\n          \"NodeCertExpiry\" : 7776000000000000,\n          \"SigningCAKey\" : \"fgrlcn0u1d7bqbfvfvz4n8t3j44wjm47cd5aqud52ufg18fl7yqyqisawq2c8hnr5gr6wtzsbywokydl9mhs7nhv280xnbqbhda4e8lc1knkkdexwp9yrymmvrdz94di8fufj7tkztjlda089s9k3my4jjam2hs93r2ss6xc5ghuzztnzazuud4k4n2y20nah9zfx\"\n        },\n        \"Labels\" : {\n          \"com.example.corp.department\" : \"engineering\",\n          \"com.example.corp.type\" : \"production\"\n        },\n        \"Raft\" : {\n          \"LogEntriesForSlowFollowers\" : 500,\n          \"SnapshotInterval\" : 10000,\n          \"KeepOldSnapshots\" : 5331310204647421857,\n          \"ElectionTick\" : 3,\n          \"HeartbeatTick\" : 1\n        },\n        \"Dispatcher\" : {\n          \"HeartbeatPeriod\" : 5000000000\n        },\n        \"TaskDefaults\" : {\n          \"LogDriver\" : {\n            \"Options\" : {\n              \"max-file\" : \"10\",\n              \"max-size\" : \"100m\"\n            },\n            \"Name\" : \"json-file\"\n          }\n        },\n        \"EncryptionConfig\" : {\n          \"AutoLockManagers\" : false\n        },\n        \"Name\" : \"default\"\n      },\n      \"UpdatedAt\" : \"2017-08-09T07:09:37.632105588Z\"\n    },\n    \"Error\" : \"dk23d3azeu9ymcyq160f94cs8bt82ehpivkb8qw7lb8o35tsqv2h8zjeivu4tvr2d6ncs10paers0jndk16ehw24sxiljzy75tqmwwrofd9inel899w6xvyew25p0f4lorhd0sl521328ymaqfp57gmv0afy1hq05\",\n    \"ControlAvailable\" : true,\n    \"LocalNodeState\" : \"active\",\n    \"Nodes\" : 4,\n    \"RemoteManagers\" : [ {\n      \"Addr\" : \"10.0.0.158:2377\",\n      \"NodeID\" : \"71izy0goik036k48jg985xnds\"\n    }, {\n      \"Addr\" : \"10.0.0.159:2377\",\n      \"NodeID\" : \"79y6h1o4gv8n120drcprv5nmc\"\n    }, {\n      \"Addr\" : \"10.0.0.46:2377\",\n      \"NodeID\" : \"k67qz4598weg5unwwffg6z1m1\"\n    } ]\n  },\n  \"RuncCommit\" : {\n    \"Expected\" : \"2d41c047c83e09a6d61d464906feb2a2f3c52aa4\",\n    \"ID\" : \"cfb82a876ecc11b5ca0977d1733adbe58599088a\"\n  },\n  \"Runtimes\" : {\n    \"custom\" : {\n      \"path\" : \"/usr/local/bin/my-oci-runtime\",\n      \"runtimeArgs\" : [ \"--debug\", \"--systemd-cgroup=false\" ]\n    },\n    \"runc\" : {\n      \"path\" : \"docker-runc\"\n    },\n    \"runc-master\" : {\n      \"path\" : \"/go/bin/runc\"\n    }\n  },\n  \"BridgeNfIptables\" : true,\n  \"DriverStatus\" : [ [ \"Backing Filesystem\", \"extfs\" ], [ \"Supports d_type\", \"true\" ], [ \"Native Overlay Diff\", \"true\" ] ],\n  \"ID\" : \"7TRN:IPZB:QYBB:VPBQ:UMPP:KARE:6ZNR:XE6T:7EWV:PKF4:ZOJD:TPYS\",\n  \"LiveRestoreEnabled\" : false,\n  \"SystemTime\" : \"2017-08-08T20:28:29.06202363Z\",\n  \"NoProxy\" : \"*.local, 169.254/16\",\n  \"Architecture\" : \"x86_64\",\n  \"HttpsProxy\" : \"https://user:pass@proxy.corp.example.com:4443\",\n  \"NEventsListener\" : 30,\n  \"Images\" : 508,\n  \"ContainersRunning\" : 3,\n  \"Labels\" : [ \"storage=ssd\", \"production\" ],\n  \"InitCommit\" : {\n    \"Expected\" : \"2d41c047c83e09a6d61d464906feb2a2f3c52aa4\",\n    \"ID\" : \"cfb82a876ecc11b5ca0977d1733adbe58599088a\"\n  },\n  \"NFd\" : 64,\n  \"KernelVersion\" : \"4.9.38-moby\",\n  \"LoggingDriver\" : \"zq6o12lpi74nvuo6ly1m9hwp0fbuzt61dy3xot75u\",\n  \"OSType\" : \"linux\",\n  \"SecurityOptions\" : [ \"name=apparmor\", \"name=seccomp,profile=default\", \"name=selinux\", \"name=userns\" ],\n  \"ContainerdCommit\" : {\n    \"Expected\" : \"2d41c047c83e09a6d61d464906feb2a2f3c52aa4\",\n    \"ID\" : \"cfb82a876ecc11b5ca0977d1733adbe58599088a\"\n  },\n  \"GenericResources\" : [ {\n    \"DiscreteResourceSpec\" : {\n      \"Kind\" : \"SSD\",\n      \"Value\" : 3\n    }\n  }, {\n    \"NamedResourceSpec\" : {\n      \"Kind\" : \"GPU\",\n      \"Value\" : \"UUID1\"\n    }\n  }, {\n    \"NamedResourceSpec\" : {\n      \"Kind\" : \"GPU\",\n      \"Value\" : \"UUID2\"\n    }\n  } ],\n  \"KernelMemory\" : true,\n  \"OperatingSystem\" : \"Alpine Linux v3.5\",\n  \"RegistryConfig\" : {\n    \"AllowNondistributableArtifactsCIDRs\" : [ \"::1/128\", \"127.0.0.0/8\" ],\n    \"AllowNondistributableArtifactsHostnames\" : [ \"registry.internal.corp.example.com:3000\", \"[2001:db8:a0b:12f0::1]:443\" ],\n    \"InsecureRegistryCIDRs\" : [ \"::1/128\", \"127.0.0.0/8\" ],\n    \"IndexConfigs\" : {\n      \"127.0.0.1:5000\" : {\n        \"Mirrors\" : [ ],\n        \"Name\" : \"127.0.0.1:5000\",\n        \"Official\" : false,\n        \"Secure\" : false\n      },\n      \"[2001:db8:a0b:12f0::1]:80\" : {\n        \"Mirrors\" : [ ],\n        \"Name\" : \"[2001:db8:a0b:12f0::1]:80\",\n        \"Official\" : false,\n        \"Secure\" : false\n      },\n      \"docker.io\" : {\n        \"Mirrors\" : [ \"https://hub-mirror.corp.example.com:5000/\" ],\n        \"Name\" : \"docker.io\",\n        \"Official\" : true,\n        \"Secure\" : true\n      },\n      \"registry.internal.corp.example.com:3000\" : {\n        \"Mirrors\" : [ ],\n        \"Name\" : \"registry.internal.corp.example.com:3000\",\n        \"Official\" : false,\n        \"Secure\" : false\n      }\n    },\n    \"Mirrors\" : [ \"https://hub-mirror.corp.example.com:5000/\", \"https://[2001:db8:a0b:12f0::1]/\" ]\n  },\n  \"ServerVersion\" : \"17.06.0-ce\",\n  \"OomKillDisable\" : true,\n  \"CpuCfsQuota\" : true,\n  \"Containers\" : 14,\n  \"Driver\" : \"overlay2\",\n  \"IPv4Forwarding\" : true,\n  \"ExperimentalBuild\" : true,\n  \"ClusterStore\" : \"consul://consul.corp.example.com:8600/some/path\",\n  \"DockerRootDir\" : \"/var/lib/docker\",\n  \"CPUSet\" : true,\n  \"CpuCfsPeriod\" : true,\n  \"DefaultRuntime\" : \"runc\",\n  \"ClusterAdvertise\" : \"node5.corp.example.com:8000\",\n  \"CPUShares\" : true,\n  \"Debug\" : true,\n  \"NCPU\" : 4,\n  \"Plugins\" : {\n    \"Authorization\" : [ \"img-authz-plugin\", \"hbm\" ],\n    \"Log\" : [ \"awslogs\", \"fluentd\", \"gcplogs\", \"gelf\", \"journald\", \"json-file\", \"logentries\", \"splunk\", \"syslog\" ],\n    \"Volume\" : [ \"local\" ],\n    \"Network\" : [ \"bridge\", \"host\", \"ipvlan\", \"macvlan\", \"null\", \"overlay\" ]\n  },\n  \"SwapLimit\" : true,\n  \"SystemStatus\" : [ [ \"Role\", \"primary\" ], [ \"State\", \"Healthy\" ], [ \"Strategy\", \"spread\" ], [ \"Filters\", \"health, port, containerslots, dependency, affinity, constraint, whitelist\" ], [ \"Nodes\", \"2\" ], [ \" swarm-agent-00\", \"192.168.99.102:2376\" ], [ \"  └ ID\", \"5CT6:FBGO:RVGO:CZL4:PB2K:WCYN:2JSV:KSHH:GGFW:QOPG:6J5Q:IOZ2|192.168.99.102:2376\" ], [ \"  └ Status\", \"Healthy\" ], [ \"  └ Containers\", \"1 (1 Running, 0 Paused, 0 Stopped)\" ], [ \"  └ Reserved CPUs\", \"0 / 1\" ], [ \"  └ Reserved Memory\", \"0 B / 1.021 GiB\" ], [ \"  └ Labels\", \"kernelversion=4.4.74-boot2docker, operatingsystem=Boot2Docker 17.06.0-ce (TCL 7.2); HEAD : 0672754 - Thu Jun 29 00:06:31 UTC 2017, ostype=linux, provider=virtualbox, storagedriver=aufs\" ], [ \"  └ UpdatedAt\", \"2017-08-09T10:03:46Z\" ], [ \"  └ ServerVersion\", \"17.06.0-ce\" ], [ \" swarm-manager\", \"192.168.99.101:2376\" ], [ \"  └ ID\", \"TAMD:7LL3:SEF7:LW2W:4Q2X:WVFH:RTXX:JSYS:XY2P:JEHL:ZMJK:JGIW|192.168.99.101:2376\" ], [ \"  └ Status\", \"Healthy\" ], [ \"  └ Containers\", \"2 (2 Running, 0 Paused, 0 Stopped)\" ], [ \"  └ Reserved CPUs\", \"0 / 1\" ], [ \"  └ Reserved Memory\", \"0 B / 1.021 GiB\" ], [ \"  └ Labels\", \"kernelversion=4.4.74-boot2docker, operatingsystem=Boot2Docker 17.06.0-ce (TCL 7.2); HEAD : 0672754 - Thu Jun 29 00:06:31 UTC 2017, ostype=linux, provider=virtualbox, storagedriver=aufs\" ], [ \"  └ UpdatedAt\", \"2017-08-09T10:04:11Z\" ], [ \"  └ ServerVersion\", \"17.06.0-ce\" ] ],\n  \"CgroupDriver\" : \"cgroupfs\",\n  \"ContainersPaused\" : 1,\n  \"MemTotal\" : 2095882240,\n  \"IndexServerAddress\" : \"https://index.docker.io/v1/\",\n  \"HttpProxy\" : \"http://user:pass@proxy.corp.example.com:8080\",\n  \"MemoryLimit\" : true,\n  \"InitBinary\" : \"docker-init\",\n  \"Isolation\" : \"hyperv\",\n  \"BridgeNfIp6tables\" : true,\n  \"ContainersStopped\" : 10\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df180ab3-5f57-38ef-abc9-3ed9b7701375",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemInfo",
          "schema" : {
            "properties" : {
              "Architecture" : {
                "description" : "Hardware architecture of the host, as returned by the Go runtime\n(`GOARCH`).\n\nA full list of possible values can be found in the [Go documentation](https://golang.org/doc/install/source#environment).\n",
                "example" : "x86_64",
                "type" : "string"
              },
              "BridgeNfIp6tables" : {
                "description" : "Indicates if `bridge-nf-call-ip6tables` is available on the host.",
                "example" : true,
                "type" : "boolean"
              },
              "BridgeNfIptables" : {
                "description" : "Indicates if `bridge-nf-call-iptables` is available on the host.",
                "example" : true,
                "type" : "boolean"
              },
              "CPUSet" : {
                "description" : "Indicates if CPUsets (cpuset.cpus, cpuset.mems) are supported by the host.\n\nSee [cpuset(7)](https://www.kernel.org/doc/Documentation/cgroup-v1/cpusets.txt)\n",
                "example" : true,
                "type" : "boolean"
              },
              "CPUShares" : {
                "description" : "Indicates if CPU Shares limiting is supported by the host.",
                "example" : true,
                "type" : "boolean"
              },
              "CgroupDriver" : {
                "default" : "cgroupfs",
                "description" : "The driver to use for managing cgroups.\n",
                "enum" : [ "cgroupfs", "systemd" ],
                "example" : "cgroupfs",
                "type" : "string"
              },
              "ClusterAdvertise" : {
                "description" : "The network endpoint that the Engine advertises for the purpose of\nnode discovery. ClusterAdvertise is a `host:port` combination on which\nthe daemon is reachable by other hosts.\n\n<p><br /></p>\n\n> **Note**: This field is only propagated when using standalone Swarm\n> mode, and overlay networking using an external k/v store. Overlay\n> networks with Swarm mode enabled use the built-in raft store, and\n> this field will be empty.\n",
                "example" : "node5.corp.example.com:8000",
                "type" : "string"
              },
              "ClusterStore" : {
                "description" : "URL of the distributed storage backend.\n\n\nThe storage backend is used for multihost networking (to store\nnetwork and endpoint information) and by the node discovery mechanism.\n\n<p><br /></p>\n\n> **Note**: This field is only propagated when using standalone Swarm\n> mode, and overlay networking using an external k/v store. Overlay\n> networks with Swarm mode enabled use the built-in raft store, and\n> this field will be empty.\n",
                "example" : "consul://consul.corp.example.com:8600/some/path",
                "type" : "string"
              },
              "ContainerdCommit" : {
                "$ref" : "#/components/schemas/Commit"
              },
              "Containers" : {
                "description" : "Total number of containers on the host.",
                "example" : 14,
                "type" : "integer"
              },
              "ContainersPaused" : {
                "description" : "Number of containers with status `\"paused\"`.\n",
                "example" : 1,
                "type" : "integer"
              },
              "ContainersRunning" : {
                "description" : "Number of containers with status `\"running\"`.\n",
                "example" : 3,
                "type" : "integer"
              },
              "ContainersStopped" : {
                "description" : "Number of containers with status `\"stopped\"`.\n",
                "example" : 10,
                "type" : "integer"
              },
              "CpuCfsPeriod" : {
                "description" : "Indicates if CPU CFS(Completely Fair Scheduler) period is supported by the host.",
                "example" : true,
                "type" : "boolean"
              },
              "CpuCfsQuota" : {
                "description" : "Indicates if CPU CFS(Completely Fair Scheduler) quota is supported by the host.",
                "example" : true,
                "type" : "boolean"
              },
              "Debug" : {
                "description" : "Indicates if the daemon is running in debug-mode / with debug-level logging enabled.",
                "example" : true,
                "type" : "boolean"
              },
              "DefaultRuntime" : {
                "default" : "runc",
                "description" : "Name of the default OCI runtime that is used when starting containers.\n\nThe default can be overridden per-container at create time.\n",
                "example" : "runc",
                "type" : "string"
              },
              "DockerRootDir" : {
                "description" : "Root directory of persistent Docker state.\n\nDefaults to `/var/lib/docker` on Linux, and `C:\\ProgramData\\docker`\non Windows.\n",
                "example" : "/var/lib/docker",
                "type" : "string"
              },
              "Driver" : {
                "description" : "Name of the storage driver in use.",
                "example" : "overlay2",
                "type" : "string"
              },
              "DriverStatus" : {
                "description" : "Information specific to the storage driver, provided as\n\"label\" / \"value\" pairs.\n\nThis information is provided by the storage driver, and formatted\nin a way consistent with the output of `docker info` on the command\nline.\n\n<p><br /></p>\n\n> **Note**: The information returned in this field, including the\n> formatting of values and labels, should not be considered stable,\n> and may change without notice.\n",
                "example" : [ [ "Backing Filesystem", "extfs" ], [ "Supports d_type", "true" ], [ "Native Overlay Diff", "true" ] ],
                "items" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "ExperimentalBuild" : {
                "description" : "Indicates if experimental features are enabled on the daemon.\n",
                "example" : true,
                "type" : "boolean"
              },
              "GenericResources" : {
                "$ref" : "#/components/schemas/GenericResources"
              },
              "HttpProxy" : {
                "description" : "HTTP-proxy configured for the daemon. This value is obtained from the\n[`HTTP_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable.\n\nContainers do not automatically inherit this configuration.\n",
                "example" : "http://user:pass@proxy.corp.example.com:8080",
                "type" : "string"
              },
              "HttpsProxy" : {
                "description" : "HTTPS-proxy configured for the daemon. This value is obtained from the\n[`HTTPS_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html) environment variable.\n\nContainers do not automatically inherit this configuration.\n",
                "example" : "https://user:pass@proxy.corp.example.com:4443",
                "type" : "string"
              },
              "ID" : {
                "description" : "Unique identifier of the daemon.\n\n<p><br /></p>\n\n> **Note**: The format of the ID itself is not part of the API, and\n> should not be considered stable.\n",
                "example" : "7TRN:IPZB:QYBB:VPBQ:UMPP:KARE:6ZNR:XE6T:7EWV:PKF4:ZOJD:TPYS",
                "type" : "string"
              },
              "IPv4Forwarding" : {
                "description" : "Indicates IPv4 forwarding is enabled.",
                "example" : true,
                "type" : "boolean"
              },
              "Images" : {
                "description" : "Total number of images on the host.\n\nBoth _tagged_ and _untagged_ (dangling) images are counted.\n",
                "example" : 508,
                "type" : "integer"
              },
              "IndexServerAddress" : {
                "default" : "https://index.docker.io/v1/",
                "description" : "Address / URL of the index server that is used for image search,\nand as a default for user authentication for Docker Hub and Docker Cloud.\n",
                "example" : "https://index.docker.io/v1/",
                "type" : "string"
              },
              "InitBinary" : {
                "description" : "Name and, optional, path of the the `docker-init` binary.\n\nIf the path is omitted, the daemon searches the host's `$PATH` for the\nbinary and uses the first result.\n",
                "example" : "docker-init",
                "type" : "string"
              },
              "InitCommit" : {
                "$ref" : "#/components/schemas/Commit"
              },
              "Isolation" : {
                "default" : "default",
                "description" : "Represents the isolation technology to use as a default for containers.\nThe supported values are platform-specific.\n\nIf no isolation value is specified on daemon start, on Windows client,\nthe default is `hyperv`, and on Windows server, the default is `process`.\n\nThis option is currently not used on other platforms.\n",
                "enum" : [ "default", "hyperv", "process" ],
                "type" : "string"
              },
              "KernelMemory" : {
                "description" : "Indicates if the host has kernel memory limit support enabled.",
                "example" : true,
                "type" : "boolean"
              },
              "KernelVersion" : {
                "description" : "Kernel version of the host.\n\nOn Linux, this information obtained from `uname`. On Windows this\ninformation is queried from the <kbd>HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\</kbd>\nregistry value, for example _\"10.0 14393 (14393.1198.amd64fre.rs1_release_sec.170427-1353)\"_.\n",
                "example" : "4.9.38-moby",
                "type" : "string"
              },
              "Labels" : {
                "description" : "User-defined labels (key/value metadata) as set on the daemon.\n\n<p><br /></p>\n\n> **Note**: When part of a Swarm, nodes can both have _daemon_ labels,\n> set through the daemon configuration, and _node_ labels, set from a\n> manager node in the Swarm. Node labels are not included in this\n> field. Node labels can be retrieved using the `/nodes/(id)` endpoint\n> on a manager node in the Swarm.\n",
                "example" : [ "storage=ssd", "production" ],
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "LiveRestoreEnabled" : {
                "default" : false,
                "description" : "Indicates if live restore is enabled.\n\nIf enabled, containers are kept running when the daemon is shutdown\nor upon daemon start if running containers are detected.\n",
                "example" : false,
                "type" : "boolean"
              },
              "LoggingDriver" : {
                "description" : "The logging driver to use as a default for new containers.\n",
                "type" : "string"
              },
              "MemTotal" : {
                "description" : "Total amount of physical memory available on the host, in kilobytes (kB).\n",
                "example" : 2095882240,
                "format" : "int64",
                "type" : "integer"
              },
              "MemoryLimit" : {
                "description" : "Indicates if the host has memory limit support enabled.",
                "example" : true,
                "type" : "boolean"
              },
              "NCPU" : {
                "description" : "The number of logical CPUs usable by the daemon.\n\nThe number of available CPUs is checked by querying the operating\nsystem when the daemon starts. Changes to operating system CPU\nallocation after the daemon is started are not reflected.\n",
                "example" : 4,
                "type" : "integer"
              },
              "NEventsListener" : {
                "description" : "Number of event listeners subscribed.",
                "example" : 30,
                "type" : "integer"
              },
              "NFd" : {
                "description" : "The total number of file Descriptors in use by the daemon process.\n\nThis information is only returned if debug-mode is enabled.\n",
                "example" : 64,
                "type" : "integer"
              },
              "NGoroutines" : {
                "description" : "The  number of goroutines that currently exist.\n\nThis information is only returned if debug-mode is enabled.\n",
                "example" : 174,
                "type" : "integer"
              },
              "Name" : {
                "description" : "Hostname of the host.",
                "example" : "node5.corp.example.com",
                "type" : "string"
              },
              "NoProxy" : {
                "description" : "Comma-separated list of domain extensions for which no proxy should be\nused. This value is obtained from the [`NO_PROXY`](https://www.gnu.org/software/wget/manual/html_node/Proxies.html)\nenvironment variable.\n\nContainers do not automatically inherit this configuration.\n",
                "example" : "*.local, 169.254/16",
                "type" : "string"
              },
              "OSType" : {
                "description" : "Generic type of the operating system of the host, as returned by the\nGo runtime (`GOOS`).\n\nCurrently returned values are \"linux\" and \"windows\". A full list of\npossible values can be found in the [Go documentation](https://golang.org/doc/install/source#environment).\n",
                "example" : "linux",
                "type" : "string"
              },
              "OomKillDisable" : {
                "description" : "Indicates if OOM killer disable is supported on the host.",
                "type" : "boolean"
              },
              "OperatingSystem" : {
                "description" : "Name of the host's operating system, for example: \"Ubuntu 16.04.2 LTS\"\nor \"Windows Server 2016 Datacenter\"\n",
                "example" : "Alpine Linux v3.5",
                "type" : "string"
              },
              "Plugins" : {
                "$ref" : "#/components/schemas/PluginsInfo"
              },
              "RegistryConfig" : {
                "$ref" : "#/components/schemas/RegistryServiceConfig"
              },
              "RuncCommit" : {
                "$ref" : "#/components/schemas/Commit"
              },
              "Runtimes" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/Runtime"
                },
                "default" : {
                  "runc" : {
                    "path" : "docker-runc"
                  }
                },
                "description" : "List of [OCI compliant](https://github.com/opencontainers/runtime-spec)\nruntimes configured on the daemon. Keys hold the \"name\" used to\nreference the runtime.\n\nThe Docker daemon relies on an OCI compliant runtime (invoked via the\n`containerd` daemon) as its interface to the Linux kernel namespaces,\ncgroups, and SELinux.\n\nThe default runtime is `runc`, and automatically configured. Additional\nruntimes can be configured by the user and will be listed here.\n",
                "example" : {
                  "custom" : {
                    "path" : "/usr/local/bin/my-oci-runtime",
                    "runtimeArgs" : [ "--debug", "--systemd-cgroup=false" ]
                  },
                  "runc" : {
                    "path" : "docker-runc"
                  },
                  "runc-master" : {
                    "path" : "/go/bin/runc"
                  }
                },
                "type" : "object"
              },
              "SecurityOptions" : {
                "description" : "List of security features that are enabled on the daemon, such as\napparmor, seccomp, SELinux, and user-namespaces (userns).\n\nAdditional configuration options for each security feature may\nbe present, and are included as a comma-separated list of key/value\npairs.\n",
                "example" : [ "name=apparmor", "name=seccomp,profile=default", "name=selinux", "name=userns" ],
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "ServerVersion" : {
                "description" : "Version string of the daemon.\n\n> **Note**: the [standalone Swarm API](https://docs.docker.com/swarm/swarm-api/)\n> returns the Swarm version instead of the daemon  version, for example\n> `swarm/1.2.8`.\n",
                "example" : "17.06.0-ce",
                "type" : "string"
              },
              "SwapLimit" : {
                "description" : "Indicates if the host has memory swap limit support enabled.",
                "example" : true,
                "type" : "boolean"
              },
              "Swarm" : {
                "$ref" : "#/components/schemas/SwarmInfo"
              },
              "SystemStatus" : {
                "description" : "Status information about this node (standalone Swarm API).\n\n<p><br /></p>\n\n> **Note**: The information returned in this field is only propagated\n> by the Swarm standalone API, and is empty (`null`) when using\n> built-in swarm mode.\n",
                "example" : [ [ "Role", "primary" ], [ "State", "Healthy" ], [ "Strategy", "spread" ], [ "Filters", "health, port, containerslots, dependency, affinity, constraint, whitelist" ], [ "Nodes", "2" ], [ " swarm-agent-00", "192.168.99.102:2376" ], [ "  └ ID", "5CT6:FBGO:RVGO:CZL4:PB2K:WCYN:2JSV:KSHH:GGFW:QOPG:6J5Q:IOZ2|192.168.99.102:2376" ], [ "  └ Status", "Healthy" ], [ "  └ Containers", "1 (1 Running, 0 Paused, 0 Stopped)" ], [ "  └ Reserved CPUs", "0 / 1" ], [ "  └ Reserved Memory", "0 B / 1.021 GiB" ], [ "  └ Labels", "kernelversion=4.4.74-boot2docker, operatingsystem=Boot2Docker 17.06.0-ce (TCL 7.2); HEAD : 0672754 - Thu Jun 29 00:06:31 UTC 2017, ostype=linux, provider=virtualbox, storagedriver=aufs" ], [ "  └ UpdatedAt", "2017-08-09T10:03:46Z" ], [ "  └ ServerVersion", "17.06.0-ce" ], [ " swarm-manager", "192.168.99.101:2376" ], [ "  └ ID", "TAMD:7LL3:SEF7:LW2W:4Q2X:WVFH:RTXX:JSYS:XY2P:JEHL:ZMJK:JGIW|192.168.99.101:2376" ], [ "  └ Status", "Healthy" ], [ "  └ Containers", "2 (2 Running, 0 Paused, 0 Stopped)" ], [ "  └ Reserved CPUs", "0 / 1" ], [ "  └ Reserved Memory", "0 B / 1.021 GiB" ], [ "  └ Labels", "kernelversion=4.4.74-boot2docker, operatingsystem=Boot2Docker 17.06.0-ce (TCL 7.2); HEAD : 0672754 - Thu Jun 29 00:06:31 UTC 2017, ostype=linux, provider=virtualbox, storagedriver=aufs" ], [ "  └ UpdatedAt", "2017-08-09T10:04:11Z" ], [ "  └ ServerVersion", "17.06.0-ce" ] ],
                "items" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "SystemTime" : {
                "description" : "Current system-time in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)\nformat with nano-seconds.\n",
                "example" : "2017-08-08T20:28:29.06202363Z",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "99864eac-94a8-337c-9c42-fea34471f422",
    "name" : "Tag an image (text/plain)",
    "request" : {
      "urlPath" : "/images/Frederic+Krajcik/tag",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "99864eac-94a8-337c-9c42-fea34471f422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "a186abcb-c624-385e-a0e4-7ae804cb8897",
    "name" : "Tag an image (application/json)",
    "request" : {
      "urlPath" : "/images/Dorcas+Gleichner/tag",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a186abcb-c624-385e-a0e4-7ae804cb8897",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "b3cf0136-4a43-3f6a-8215-69f70c5d70ea",
    "name" : "Tag an image (text/plain)",
    "request" : {
      "urlPath" : "/images/Jarrett+Ankunding/tag",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "b3cf0136-4a43-3f6a-8215-69f70c5d70ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "550b1caf-20ed-387a-987b-0389fec9ac9d",
    "name" : "Tag an image (application/json)",
    "request" : {
      "urlPath" : "/images/Johnson+Littel/tag",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "550b1caf-20ed-387a-987b-0389fec9ac9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "ecc2a193-7aa8-38c9-bf64-5d8a20d5addb",
    "name" : "Tag an image (text/plain)",
    "request" : {
      "urlPath" : "/images/Clarisa+Turner/tag",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "ecc2a193-7aa8-38c9-bf64-5d8a20d5addb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "83f38340-8105-39e7-b980-ca8f0e3a6b32",
    "name" : "Tag an image (application/json)",
    "request" : {
      "urlPath" : "/images/Danica+Mayer+II/tag",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83f38340-8105-39e7-b980-ca8f0e3a6b32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "f45dd2da-a0af-356b-bfb0-620305880f02",
    "name" : "Tag an image (text/plain)",
    "request" : {
      "urlPath" : "/images/Royal+Wintheiser/tag",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "f45dd2da-a0af-356b-bfb0-620305880f02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "1b28fcdf-d197-3a44-b028-6eae40b1f924",
    "name" : "Tag an image (application/json)",
    "request" : {
      "urlPath" : "/images/Shelia+Hermann/tag",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b28fcdf-d197-3a44-b028-6eae40b1f924",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "7bdaa074-6a90-3ea6-83e1-4b06081935db",
    "name" : "Tag an image - 201",
    "request" : {
      "urlPath" : "/images/Jeanmarie+Rosenbaum/tag",
      "method" : "POST"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "7bdaa074-6a90-3ea6-83e1-4b06081935db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageTag"
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "f4ec0770-88c0-39e2-a67e-4d8a5208afcc",
    "name" : "Push an image (text/plain)",
    "request" : {
      "urlPath" : "/images/Ma+Hayes/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "f4ec0770-88c0-39e2-a67e-4d8a5208afcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImagePush",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "5a01ae8e-e5a9-3369-b3f6-f14936fd3654",
    "name" : "Push an image (application/json)",
    "request" : {
      "urlPath" : "/images/Carly+Blanda/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a01ae8e-e5a9-3369-b3f6-f14936fd3654",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImagePush",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "e4072367-275c-3806-ae9d-9eae9072e952",
    "name" : "Push an image (text/plain)",
    "request" : {
      "urlPath" : "/images/Lydia+Heidenreich/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "e4072367-275c-3806-ae9d-9eae9072e952",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImagePush",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 275
  }, {
    "id" : "906d82b9-24a4-3df2-93e1-cc742257d405",
    "name" : "Push an image (application/json)",
    "request" : {
      "urlPath" : "/images/Eldora+Mertz+DDS/push",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "906d82b9-24a4-3df2-93e1-cc742257d405",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImagePush",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 276
  }, {
    "id" : "7dcace18-696d-368b-8324-ddd10c2f3d5d",
    "name" : "Push an image - 200",
    "request" : {
      "urlPath" : "/images/Bobbie+Casper/push",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7dcace18-696d-368b-8324-ddd10c2f3d5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImagePush"
        }
      }
    },
    "insertionIndex" : 277
  }, {
    "id" : "4b6858f4-61cb-3436-a1c6-050266535781",
    "name" : "Inspect an image",
    "request" : {
      "urlPath" : "/images/Lavern+Williamson/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b6858f4-61cb-3436-a1c6-050266535781",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 278
  }, {
    "id" : "36e53021-5160-3191-bd75-b35393b99c5e",
    "name" : "Inspect an image - response",
    "request" : {
      "urlPath" : "/images/Jeanetta+Douglas/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such image: someimage (tag: latest)\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36e53021-5160-3191-bd75-b35393b99c5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 279
  }, {
    "id" : "aa0a3bbe-d28e-3f29-9837-abe0d43628c6",
    "name" : "Inspect an image - response",
    "request" : {
      "urlPath" : "/images/Devin+Wisoky+Sr./json",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Architecture\" : \"amd64\",\n  \"Author\" : \"\",\n  \"Comment\" : \"\",\n  \"Config\" : {\n    \"AttachStderr\" : false,\n    \"AttachStdin\" : false,\n    \"AttachStdout\" : false,\n    \"Cmd\" : [ \"/bin/bash\" ],\n    \"Domainname\" : \"\",\n    \"Env\" : [ \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" ],\n    \"Hostname\" : \"e611e15f9c9d\",\n    \"Image\" : \"91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c\",\n    \"Labels\" : {\n      \"com.example.license\" : \"GPL\",\n      \"com.example.vendor\" : \"Acme\",\n      \"com.example.version\" : \"1.0\"\n    },\n    \"MacAddress\" : \"\",\n    \"NetworkDisabled\" : false,\n    \"OnBuild\" : [ ],\n    \"OpenStdin\" : false,\n    \"PublishService\" : \"\",\n    \"StdinOnce\" : false,\n    \"Tty\" : false,\n    \"User\" : \"\",\n    \"WorkingDir\" : \"\"\n  },\n  \"Container\" : \"cb91e48a60d01f1e27028b4fc6819f4f290b3cf12496c8176ec714d0d390984a\",\n  \"ContainerConfig\" : {\n    \"AttachStderr\" : false,\n    \"AttachStdin\" : false,\n    \"AttachStdout\" : false,\n    \"Cmd\" : [ \"/bin/sh\", \"-c\", \"#(nop) LABEL com.example.vendor=Acme com.example.license=GPL com.example.version=1.0\" ],\n    \"Domainname\" : \"\",\n    \"Env\" : [ \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" ],\n    \"Hostname\" : \"e611e15f9c9d\",\n    \"Image\" : \"91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c\",\n    \"Labels\" : {\n      \"com.example.license\" : \"GPL\",\n      \"com.example.vendor\" : \"Acme\",\n      \"com.example.version\" : \"1.0\"\n    },\n    \"MacAddress\" : \"\",\n    \"NetworkDisabled\" : false,\n    \"OnBuild\" : [ ],\n    \"OpenStdin\" : false,\n    \"PublishService\" : \"\",\n    \"StdinOnce\" : false,\n    \"Tty\" : false,\n    \"User\" : \"\",\n    \"WorkingDir\" : \"\"\n  },\n  \"Created\" : \"2015-09-10T08:30:53.26995814Z\",\n  \"DockerVersion\" : \"1.9.0-dev\",\n  \"GraphDriver\" : {\n    \"Data\" : { },\n    \"Name\" : \"aufs\"\n  },\n  \"Id\" : \"sha256:85f05633ddc1c50679be2b16a0479ab6f7637f8884e0cfe0f4d20e1ebb3d6e7c\",\n  \"Os\" : \"linux\",\n  \"Parent\" : \"sha256:91e54dfb11794fad694460162bf0cb0a4fa710cfa3f60979c177d920813e267c\",\n  \"RepoDigests\" : [ \"localhost:5000/test/busybox/example@sha256:cbbf2f9a99b47fc460d422812b6a5adff7dfee951d8fa2e4a98caa0382cfbdbf\" ],\n  \"RepoTags\" : [ \"example:1.0\", \"example:latest\", \"example:stable\" ],\n  \"RootFS\" : {\n    \"Layers\" : [ \"sha256:1834950e52ce4d5a88a1bbd131c537f4d0e56d10ff0dd69e66be3b7dfa9df7e6\", \"sha256:5f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\" ],\n    \"Type\" : \"layers\"\n  },\n  \"Size\" : 0,\n  \"VirtualSize\" : 188359297\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa0a3bbe-d28e-3f29-9837-abe0d43628c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageInspect",
          "schema" : {
            "properties" : {
              "Architecture" : {
                "nullable" : false,
                "type" : "string"
              },
              "Author" : {
                "nullable" : false,
                "type" : "string"
              },
              "Comment" : {
                "nullable" : false,
                "type" : "string"
              },
              "Config" : {
                "$ref" : "#/components/schemas/ContainerConfig"
              },
              "Container" : {
                "nullable" : false,
                "type" : "string"
              },
              "ContainerConfig" : {
                "$ref" : "#/components/schemas/ContainerConfig"
              },
              "Created" : {
                "nullable" : false,
                "type" : "string"
              },
              "DockerVersion" : {
                "nullable" : false,
                "type" : "string"
              },
              "GraphDriver" : {
                "$ref" : "#/components/schemas/GraphDriverData"
              },
              "Id" : {
                "nullable" : false,
                "type" : "string"
              },
              "Metadata" : {
                "properties" : {
                  "LastTagTime" : {
                    "format" : "dateTime",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "Os" : {
                "nullable" : false,
                "type" : "string"
              },
              "OsVersion" : {
                "type" : "string"
              },
              "Parent" : {
                "nullable" : false,
                "type" : "string"
              },
              "RepoDigests" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "RepoTags" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "RootFS" : {
                "properties" : {
                  "BaseLayer" : {
                    "type" : "string"
                  },
                  "Layers" : {
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "Type" : {
                    "nullable" : false,
                    "type" : "string"
                  }
                },
                "required" : [ "Type" ],
                "type" : "object"
              },
              "Size" : {
                "format" : "int64",
                "nullable" : false,
                "type" : "integer"
              },
              "VirtualSize" : {
                "format" : "int64",
                "nullable" : false,
                "type" : "integer"
              }
            },
            "required" : [ "Id", "Parent", "Comment", "Created", "Container", "DockerVersion", "Author", "Architecture", "Os", "Size", "VirtualSize", "GraphDriver", "RootFS" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 280
  }, {
    "id" : "1ddf035e-48ac-3eaa-991e-cdea68b6001e",
    "name" : "Get the history of an image",
    "request" : {
      "urlPath" : "/images/Gilda+Muller/history",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ddf035e-48ac-3eaa-991e-cdea68b6001e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageHistory",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 281
  }, {
    "id" : "25094655-53b8-37de-b3d1-ca181704b0be",
    "name" : "Get the history of an image",
    "request" : {
      "urlPath" : "/images/Alan+Rice+IV/history",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25094655-53b8-37de-b3d1-ca181704b0be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageHistory",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 282
  }, {
    "id" : "b5a1f9c5-9acc-3141-988c-b7b247924b7d",
    "name" : "Get the history of an image - response",
    "request" : {
      "urlPath" : "/images/Gene+Halvorson/history",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Comment\" : \"\",\n  \"Created\" : 1398108230,\n  \"CreatedBy\" : \"/bin/sh -c #(nop) ADD file:eb15dbd63394e063b805a3c32ca7bf0266ef64676d5a6fab4801f2e81e2a5148 in /\",\n  \"Id\" : \"3db9c44f45209632d6050b35958829c3a2aa256d81b9a7be45b362ff85c54710\",\n  \"Size\" : 182964289,\n  \"Tags\" : [ \"ubuntu:lucid\", \"ubuntu:10.04\" ]\n}, {\n  \"Comment\" : \"\",\n  \"Created\" : 1398108222,\n  \"CreatedBy\" : \"/bin/sh -c #(nop) MAINTAINER Tianon Gravi <admwiggin@gmail.com> - mkimage-debootstrap.sh -i iproute,iputils-ping,ubuntu-minimal -t lucid.tar.xz lucid http://archive.ubuntu.com/ubuntu/\",\n  \"Id\" : \"6cfa4d1f33fb861d4d114f43b25abd0ac737509268065cdfd69d544a59c85ab8\",\n  \"Size\" : 0,\n  \"Tags\" : [ ]\n}, {\n  \"Comment\" : \"Imported from -\",\n  \"Created\" : 1371157430,\n  \"CreatedBy\" : \"\",\n  \"Id\" : \"511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158\",\n  \"Size\" : 0,\n  \"Tags\" : [ \"scratch12:latest\", \"scratch:latest\" ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5a1f9c5-9acc-3141-988c-b7b247924b7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageHistory",
          "schema" : {
            "items" : {
              "properties" : {
                "Comment" : {
                  "nullable" : false,
                  "type" : "string"
                },
                "Created" : {
                  "format" : "int64",
                  "nullable" : false,
                  "type" : "integer"
                },
                "CreatedBy" : {
                  "nullable" : false,
                  "type" : "string"
                },
                "Id" : {
                  "nullable" : false,
                  "type" : "string"
                },
                "Size" : {
                  "format" : "int64",
                  "nullable" : false,
                  "type" : "integer"
                },
                "Tags" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              },
              "required" : [ "Id", "Created", "CreatedBy", "Tags", "Size", "Comment" ],
              "type" : "object",
              "x-go-name" : "HistoryResponseItem"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 283
  }, {
    "id" : "51c6b2b6-896f-3e2f-91e8-e83f9a8ad000",
    "name" : "Export an image",
    "request" : {
      "urlPath" : "/images/Nigel+Okuneva/get",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/x-tar"
      }
    },
    "uuid" : "51c6b2b6-896f-3e2f-91e8-e83f9a8ad000",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageGet",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 284
  }, {
    "id" : "94dd4917-3562-319c-bde3-2263a1e745e3",
    "name" : "Export an image",
    "request" : {
      "urlPath" : "/images/Joellen+Swaniawski+MD/get",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"ywxvzix6du3njaaj1teq2kvde1nbfj4tgyxhjivmwwgr3pgxhggbofqp426ddk6i6ycutuyo9dxba54vr7rqp5uuxcvisc4ad0k8\"",
      "headers" : {
        "Content-Type" : "application/x-tar"
      }
    },
    "uuid" : "94dd4917-3562-319c-bde3-2263a1e745e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageGet",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 285
  }, {
    "id" : "a4a22825-91aa-38d5-8654-77f5114c8efd",
    "name" : "Remove an image",
    "request" : {
      "urlPath" : "/images/Christel+Homenick",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4a22825-91aa-38d5-8654-77f5114c8efd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 286
  }, {
    "id" : "0434c570-604b-33a6-9add-a512eaf34647",
    "name" : "Remove an image",
    "request" : {
      "urlPath" : "/images/Dr.+Leif+Gislason",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0434c570-604b-33a6-9add-a512eaf34647",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 287
  }, {
    "id" : "805803f5-efd9-3749-954c-8284884efbf8",
    "name" : "Remove an image",
    "request" : {
      "urlPath" : "/images/Elisabeth+Kreiger",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "805803f5-efd9-3749-954c-8284884efbf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 288
  }, {
    "id" : "42e9a042-53c8-31d6-a819-07f92fade201",
    "name" : "Remove an image - response",
    "request" : {
      "urlPath" : "/images/Max+Reilly+DVM",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Untagged\" : \"3e2f21a89f\"\n}, {\n  \"Deleted\" : \"3e2f21a89f\"\n}, {\n  \"Deleted\" : \"53b4f83ac9\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42e9a042-53c8-31d6-a819-07f92fade201",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageDelete",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ImageDeleteResponseItem"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 289
  }, {
    "id" : "78ddc8f6-7749-33bd-84e4-1b34ca420679",
    "name" : "Search images",
    "request" : {
      "urlPath" : "/images/search",
      "method" : "GET",
      "queryParameters" : {
        "term" : {
          "equalTo" : "i7rv0hjenz2qiapsufmonxajm5pfbxkyqjkf1cr19nhka05"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78ddc8f6-7749-33bd-84e4-1b34ca420679",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageSearch",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 290
  }, {
    "id" : "36fa2e65-07d3-34f5-a367-a7842a80cf28",
    "name" : "Search images - response",
    "request" : {
      "urlPath" : "/images/search",
      "method" : "GET",
      "queryParameters" : {
        "term" : {
          "equalTo" : "djgeg7g58mssa5nuspjdfcgy0khmmhsf7icr0suz7vq7vuw63ad"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"description\" : \"\",\n  \"is_automated\" : false,\n  \"is_official\" : false,\n  \"name\" : \"wma55/u1210sshd\",\n  \"star_count\" : 0\n}, {\n  \"description\" : \"\",\n  \"is_automated\" : false,\n  \"is_official\" : false,\n  \"name\" : \"jdswinbank/sshd\",\n  \"star_count\" : 0\n}, {\n  \"description\" : \"\",\n  \"is_automated\" : false,\n  \"is_official\" : false,\n  \"name\" : \"vgauthier/sshd\",\n  \"star_count\" : 0\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36fa2e65-07d3-34f5-a367-a7842a80cf28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageSearch",
          "schema" : {
            "items" : {
              "properties" : {
                "description" : {
                  "type" : "string"
                },
                "is_automated" : {
                  "type" : "boolean"
                },
                "is_official" : {
                  "type" : "boolean"
                },
                "name" : {
                  "type" : "string"
                },
                "star_count" : {
                  "type" : "integer"
                }
              },
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 291
  }, {
    "id" : "6407566d-65df-3916-ba52-74d406e1a4d4",
    "name" : "Delete unused images",
    "request" : {
      "urlPath" : "/images/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6407566d-65df-3916-ba52-74d406e1a4d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImagePrune",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 292
  }, {
    "id" : "47fe42bd-e068-360b-99b4-df1898c3536a",
    "name" : "Delete unused images",
    "request" : {
      "urlPath" : "/images/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SpaceReclaimed\" : 7482151670676402903,\n  \"ImagesDeleted\" : [ {\n    \"Deleted\" : \"2i7mry21rfu9pg2zge0f2\",\n    \"Untagged\" : \"ooob73ajcg12movkskogkq55ftodeo0rc7vlgn8ul8ejxev1k50n8nq9nnmovnoy9n9ykl8p9mh0y3620huaabajj2e4cba27sjh0t2ufi8kb3sjq9xutnjtwcd2vf59j797we7zchowplpod8qf7f095ofph9h1dv\"\n  }, {\n    \"Deleted\" : \"xoucl3sd0m1ab2qox180spw9841p6a8abx5gchncitywf4i8ndhlirq06lx8lj3x25mptxdlu4e\",\n    \"Untagged\" : \"kgtaj7znqk4cbl2jjqt57wpmwot29n2fnvt32x2ynv622qc3fooaljkdzudw2tac8dw4oneri905e7cx93sspc3j3py1i6boh6uaeolb772gnkv4jjlt9\"\n  }, {\n    \"Deleted\" : \"pndynlieoe1zol2xrdn56dq60m0cd5gfzp8bmkce62xodgkwu2gf6ea\",\n    \"Untagged\" : \"8c6xmpbei4pp0ghngrwn9ttogkjm6sp31pbzy1r29hequc63xvh013s1t3507jrpvfp8gfmayfk\"\n  }, {\n    \"Deleted\" : \"5b8iaf85hklctegalq9dwdfn7tu5\",\n    \"Untagged\" : \"eh9s1bvv9apweffmyq1kcd8j8pi7ggq1rm7g60420aujclramiafjy9gqjysroiag28gfmiv6bjayh18zv14734aq8hfdl\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47fe42bd-e068-360b-99b4-df1898c3536a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImagePrune",
          "schema" : {
            "properties" : {
              "ImagesDeleted" : {
                "description" : "Images that were deleted",
                "items" : {
                  "$ref" : "#/components/schemas/ImageDeleteResponseItem"
                },
                "type" : "array"
              },
              "SpaceReclaimed" : {
                "description" : "Disk space reclaimed in bytes",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 293
  }, {
    "id" : "26efbae8-1249-3a6e-9a8b-fa06629e2af8",
    "name" : "Import images (application/json)",
    "request" : {
      "urlPath" : "/images/load",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26efbae8-1249-3a6e-9a8b-fa06629e2af8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageLoad",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 294
  }, {
    "id" : "9049443f-1bc5-3f42-a3b8-8f0965f29cda",
    "name" : "Import images - 200",
    "request" : {
      "urlPath" : "/images/load",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9049443f-1bc5-3f42-a3b8-8f0965f29cda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageLoad"
        }
      }
    },
    "insertionIndex" : 295
  }, {
    "id" : "1afe53a5-0b5f-301c-b8bf-d32b1e8c7bf9",
    "name" : "List Images",
    "request" : {
      "urlPath" : "/images/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1afe53a5-0b5f-301c-b8bf-d32b1e8c7bf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 296
  }, {
    "id" : "6377a18f-921b-337e-9958-45d13e7b78b3",
    "name" : "List Images - response",
    "request" : {
      "urlPath" : "/images/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Containers\" : 2,\n  \"Created\" : 1474925151,\n  \"Id\" : \"sha256:e216a057b1cb1efc11f8a268f37ef62083e70b1b38323ba252e25ac88904a7e8\",\n  \"Labels\" : { },\n  \"ParentId\" : \"\",\n  \"RepoDigests\" : [ \"ubuntu@sha256:992069aee4016783df6345315302fa59681aae51a8eeb2f889dea59290f21787\" ],\n  \"RepoTags\" : [ \"ubuntu:12.04\", \"ubuntu:precise\" ],\n  \"SharedSize\" : 0,\n  \"Size\" : 103579269,\n  \"VirtualSize\" : 103579269\n}, {\n  \"Containers\" : 5,\n  \"Created\" : 1403128455,\n  \"Id\" : \"sha256:3e314f95dcace0f5e4fd37b10862fe8398e3c60ed36600bc0ca5fda78b087175\",\n  \"Labels\" : { },\n  \"ParentId\" : \"\",\n  \"RepoDigests\" : [ \"ubuntu@sha256:002fba3e3255af10be97ea26e476692a7ebed0bb074a9ab960b2e7a1526b15d7\", \"ubuntu@sha256:68ea0200f0b90df725d99d823905b04cf844f6039ef60c60bf3e019915017bd3\" ],\n  \"RepoTags\" : [ \"ubuntu:12.10\", \"ubuntu:quantal\" ],\n  \"SharedSize\" : 0,\n  \"Size\" : 172064416,\n  \"VirtualSize\" : 172064416\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6377a18f-921b-337e-9958-45d13e7b78b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageList",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ImageSummary"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 297
  }, {
    "id" : "0077b743-d8b3-368d-9b86-80ed30ae9a4e",
    "name" : "Export several images",
    "request" : {
      "urlPath" : "/images/get",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/x-tar"
      }
    },
    "uuid" : "0077b743-d8b3-368d-9b86-80ed30ae9a4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageGetAll",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 298
  }, {
    "id" : "47837c27-5cb6-3a72-a545-6d5201c4043a",
    "name" : "Export several images",
    "request" : {
      "urlPath" : "/images/get",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"mv5hkxac3ojhj5nrtlsap7iqv3r2qqe5z\"",
      "headers" : {
        "Content-Type" : "application/x-tar"
      }
    },
    "uuid" : "47837c27-5cb6-3a72-a545-6d5201c4043a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageGetAll",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 299
  }, {
    "id" : "726b2ffc-4edf-3cdf-b11b-95e8dfa2f126",
    "name" : "Create an image (application/json)",
    "request" : {
      "urlPath" : "/images/create",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "726b2ffc-4edf-3cdf-b11b-95e8dfa2f126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 300
  }, {
    "id" : "9dc1f982-e84b-33b0-ab0a-7b09b3dbc71b",
    "name" : "Create an image (application/json)",
    "request" : {
      "urlPath" : "/images/create",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dc1f982-e84b-33b0-ab0a-7b09b3dbc71b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 301
  }, {
    "id" : "a6a86b90-c55a-3cdb-a73c-0ebc0476c10a",
    "name" : "Create an image - 200",
    "request" : {
      "urlPath" : "/images/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a6a86b90-c55a-3cdb-a73c-0ebc0476c10a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageCreate"
        }
      }
    },
    "insertionIndex" : 302
  }, {
    "id" : "6b11d3ac-66c7-3f6a-91bc-84e47ad9ccc0",
    "name" : "Start an exec instance (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/exec/cq5k/start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "6b11d3ac-66c7-3f6a-91bc-84e47ad9ccc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecStart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 303
  }, {
    "id" : "023e440b-019e-3d74-b632-b1fe70280194",
    "name" : "Start an exec instance (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/exec/1o88/start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "023e440b-019e-3d74-b632-b1fe70280194",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecStart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 304
  }, {
    "id" : "ca14c50b-9216-33d0-a0a1-d8b46227cc31",
    "name" : "Start an exec instance - 200",
    "request" : {
      "urlPath" : "/exec/x6z8/start",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ca14c50b-9216-33d0-a0a1-d8b46227cc31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecStart"
        }
      }
    },
    "insertionIndex" : 305
  }, {
    "id" : "81e4c2f2-9cbd-3e4c-9f0c-1d9d21ff6018",
    "name" : "Resize an exec instance (text/plain)",
    "request" : {
      "urlPath" : "/exec/1yc2/resize",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "81e4c2f2-9cbd-3e4c-9f0c-1d9d21ff6018",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecResize",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 306
  }, {
    "id" : "8bf369d1-6db8-36be-8076-479ecb73dc57",
    "name" : "Resize an exec instance (application/json)",
    "request" : {
      "urlPath" : "/exec/2z0r/resize",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bf369d1-6db8-36be-8076-479ecb73dc57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecResize",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 307
  }, {
    "id" : "794aadf9-a185-36d5-ac61-602fac630dda",
    "name" : "Resize an exec instance - 201",
    "request" : {
      "urlPath" : "/exec/1j1l/resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "794aadf9-a185-36d5-ac61-602fac630dda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecResize"
        }
      }
    },
    "insertionIndex" : 308
  }, {
    "id" : "d77eef32-86d5-30db-823e-dac1f2c2f355",
    "name" : "Inspect an exec instance",
    "request" : {
      "urlPath" : "/exec/9d65/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d77eef32-86d5-30db-823e-dac1f2c2f355",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 309
  }, {
    "id" : "f22f2953-82c5-34db-b613-9a310202e4bf",
    "name" : "Inspect an exec instance",
    "request" : {
      "urlPath" : "/exec/6b5p/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f22f2953-82c5-34db-b613-9a310202e4bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 310
  }, {
    "id" : "6c22292a-c012-338b-901f-5dddc3d1c0c5",
    "name" : "Inspect an exec instance - response",
    "request" : {
      "urlPath" : "/exec/22pk/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CanRemove\" : false,\n  \"ContainerID\" : \"b53ee82b53a40c7dca428523e34f741f3abc51d9f297a14ff874bf761b995126\",\n  \"DetachKeys\" : \"\",\n  \"ExitCode\" : 2,\n  \"ID\" : \"f33bbfb39f5b142420f4759b2348913bd4a8d1a6d7fd56499cb41a1bb91d7b3b\",\n  \"OpenStderr\" : true,\n  \"OpenStdin\" : true,\n  \"OpenStdout\" : true,\n  \"Pid\" : 42000,\n  \"ProcessConfig\" : {\n    \"arguments\" : [ \"-c\", \"exit 2\" ],\n    \"entrypoint\" : \"sh\",\n    \"privileged\" : false,\n    \"tty\" : true,\n    \"user\" : \"1000\"\n  },\n  \"Running\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c22292a-c012-338b-901f-5dddc3d1c0c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecInspect",
          "schema" : {
            "properties" : {
              "ContainerID" : {
                "type" : "string"
              },
              "ExitCode" : {
                "type" : "integer"
              },
              "ID" : {
                "type" : "string"
              },
              "OpenStderr" : {
                "type" : "boolean"
              },
              "OpenStdin" : {
                "type" : "boolean"
              },
              "OpenStdout" : {
                "type" : "boolean"
              },
              "Pid" : {
                "description" : "The system process ID for the exec process.",
                "type" : "integer"
              },
              "ProcessConfig" : {
                "$ref" : "#/components/schemas/ProcessConfig"
              },
              "Running" : {
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 311
  }, {
    "id" : "858d732f-00ee-368d-9bec-ed965da63e1a",
    "name" : "Monitor events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "858d732f-00ee-368d-9bec-ed965da63e1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemEvents",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 312
  }, {
    "id" : "1d103dde-c522-306f-9ad8-ecbe80c048b9",
    "name" : "Monitor events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d103dde-c522-306f-9ad8-ecbe80c048b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemEvents",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 313
  }, {
    "id" : "2f8a1a25-9a18-300c-8a58-389bbf80b301",
    "name" : "Monitor events - response",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Action\" : \"create\",\n  \"Actor\" : {\n    \"Attributes\" : {\n      \"com.example.some-label\" : \"some-label-value\",\n      \"image\" : \"alpine\",\n      \"name\" : \"my-container\"\n    },\n    \"ID\" : \"ede54ee1afda366ab42f824e8a5ffd195155d853ceaec74a927f249ea270c743\"\n  },\n  \"Type\" : \"container\",\n  \"time\" : 1461943101\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f8a1a25-9a18-300c-8a58-389bbf80b301",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemEvents",
          "schema" : {
            "properties" : {
              "Action" : {
                "description" : "The type of event",
                "type" : "string"
              },
              "Actor" : {
                "properties" : {
                  "Attributes" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "Various key/value attributes of the object, depending on its type",
                    "type" : "object"
                  },
                  "ID" : {
                    "description" : "The ID of the object emitting the event",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "Type" : {
                "description" : "The type of object emitting the event",
                "type" : "string"
              },
              "time" : {
                "description" : "Timestamp of event",
                "type" : "integer"
              },
              "timeNano" : {
                "description" : "Timestamp of event, with nanosecond accuracy",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 314
  }, {
    "id" : "9e2cf03a-e769-359c-8bb7-367a99f7b4a2",
    "name" : "Get image information from the registry",
    "request" : {
      "urlPath" : "/distribution/Levi+Gulgowski/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e2cf03a-e769-359c-8bb7-367a99f7b4a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DistributionInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 315
  }, {
    "id" : "79c87ae1-9026-3cce-b6f2-ceb9f7742bb8",
    "name" : "Get image information from the registry - response",
    "request" : {
      "urlPath" : "/distribution/Vinnie+Armstrong/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"message\" : \"No such image: someimage (tag: latest)\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79c87ae1-9026-3cce-b6f2-ceb9f7742bb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DistributionInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 316
  }, {
    "id" : "11981e3d-43f4-34a7-89d8-7f3b86d10cac",
    "name" : "Get image information from the registry - response",
    "request" : {
      "urlPath" : "/distribution/Herta+Skiles/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Descriptor\" : {\n    \"Digest\" : \"sha256:c0537ff6a5218ef531ece93d4984efc99bbf3f7497c0a7726c88e2bb7584dc96\",\n    \"MediaType\" : \"application/vnd.docker.distribution.manifest.v2+json\",\n    \"Size\" : 3987495,\n    \"URLs\" : [ \"\" ]\n  },\n  \"Platforms\" : [ {\n    \"Architecture\" : \"amd64\",\n    \"Features\" : [ \"\" ],\n    \"OS\" : \"linux\",\n    \"OSFeatures\" : [ \"\" ],\n    \"OSVersion\" : \"\",\n    \"Variant\" : \"\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11981e3d-43f4-34a7-89d8-7f3b86d10cac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DistributionInspect",
          "schema" : {
            "properties" : {
              "Descriptor" : {
                "description" : "A descriptor struct containing digest, media type, and size",
                "properties" : {
                  "Digest" : {
                    "type" : "string"
                  },
                  "MediaType" : {
                    "type" : "string"
                  },
                  "Size" : {
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "URLs" : {
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "Platforms" : {
                "description" : "An array containing all platforms supported by the image",
                "items" : {
                  "properties" : {
                    "Architecture" : {
                      "type" : "string"
                    },
                    "Features" : {
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "OS" : {
                      "type" : "string"
                    },
                    "OSFeatures" : {
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "OSVersion" : {
                      "type" : "string"
                    },
                    "Variant" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "Descriptor", "Platforms" ],
            "type" : "object",
            "x-go-name" : "DistributionInspect"
          }
        }
      }
    },
    "insertionIndex" : 317
  }, {
    "id" : "42c192d6-b93e-3eaf-94cb-9426cbd6e66c",
    "name" : "Wait for a container",
    "request" : {
      "urlPath" : "/containers/6f89/wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42c192d6-b93e-3eaf-94cb-9426cbd6e66c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerWait",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 318
  }, {
    "id" : "54a60fc2-b977-36cb-bac5-9160af723494",
    "name" : "Wait for a container - response",
    "request" : {
      "urlPath" : "/containers/dl48/wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54a60fc2-b977-36cb-bac5-9160af723494",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerWait",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 319
  }, {
    "id" : "62981e10-48a2-3926-a419-f85814b70b2a",
    "name" : "Wait for a container",
    "request" : {
      "urlPath" : "/containers/8jdh/wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"StatusCode\" : 2641704046217113001\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62981e10-48a2-3926-a419-f85814b70b2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerWait",
          "schema" : {
            "properties" : {
              "StatusCode" : {
                "description" : "Exit code of the container",
                "nullable" : false,
                "type" : "integer"
              }
            },
            "required" : [ "StatusCode" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 320
  }, {
    "id" : "4bb7d4ef-d26f-3f93-b0ba-7c1f877dcb04",
    "name" : "Update a container",
    "request" : {
      "urlPath" : "/containers/x8jr/update",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bb7d4ef-d26f-3f93-b0ba-7c1f877dcb04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 321
  }, {
    "id" : "7afff89c-1f2a-3738-bfaf-b3accc215a03",
    "name" : "Update a container - response",
    "request" : {
      "urlPath" : "/containers/5t46/update",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7afff89c-1f2a-3738-bfaf-b3accc215a03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 322
  }, {
    "id" : "b878defa-800c-32fb-bf63-4efd2cbde20d",
    "name" : "Update a container",
    "request" : {
      "urlPath" : "/containers/cf58/update",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Warnings\" : [ \"0o4m0hyzpzye45i58nght804eebbgni9xpv2ucv7tl437v1h62htjr95ev\", \"w4h1\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b878defa-800c-32fb-bf63-4efd2cbde20d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerUpdate",
          "schema" : {
            "properties" : {
              "Warnings" : {
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 323
  }, {
    "id" : "449a64e4-6169-37d8-878b-cfbce5f8bd42",
    "name" : "Unpause a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/bsj9/unpause",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "449a64e4-6169-37d8-878b-cfbce5f8bd42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerUnpause",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 324
  }, {
    "id" : "93d8ba88-b7e4-302e-ba0d-bf1b83a20945",
    "name" : "Unpause a container (application/json)",
    "request" : {
      "urlPath" : "/containers/27lt/unpause",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93d8ba88-b7e4-302e-ba0d-bf1b83a20945",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerUnpause",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 325
  }, {
    "id" : "5f298fc1-48d5-35aa-92d6-0d036d861e77",
    "name" : "Unpause a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/pj0h/unpause",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "5f298fc1-48d5-35aa-92d6-0d036d861e77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerUnpause",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 326
  }, {
    "id" : "434e01d2-5e1d-3cbe-a9d4-8b996429957d",
    "name" : "Unpause a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/rdy9/unpause",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "434e01d2-5e1d-3cbe-a9d4-8b996429957d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerUnpause",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 327
  }, {
    "id" : "1b813996-aa34-3c24-8f88-c18aaa14e4e9",
    "name" : "Unpause a container - 204",
    "request" : {
      "urlPath" : "/containers/2nmm/unpause",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1b813996-aa34-3c24-8f88-c18aaa14e4e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerUnpause"
        }
      }
    },
    "insertionIndex" : 328
  }, {
    "id" : "7c412688-62db-3b02-9ba1-628f5027a881",
    "name" : "List processes running inside a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/1m5t/top",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "7c412688-62db-3b02-9ba1-628f5027a881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerTop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 329
  }, {
    "id" : "4b187aae-f061-3d50-a0a4-414feaf38c2e",
    "name" : "List processes running inside a container (application/json)",
    "request" : {
      "urlPath" : "/containers/99p0/top",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b187aae-f061-3d50-a0a4-414feaf38c2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerTop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 330
  }, {
    "id" : "839ff868-1938-3434-b779-31926ab1f3c0",
    "name" : "List processes running inside a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/shvc/top",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "839ff868-1938-3434-b779-31926ab1f3c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerTop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 331
  }, {
    "id" : "14a69cf4-ff9b-3bf2-8502-a064dffae7c4",
    "name" : "List processes running inside a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/0143/top",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14a69cf4-ff9b-3bf2-8502-a064dffae7c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerTop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 332
  }, {
    "id" : "45f5850d-ed20-3d8a-9fc6-d83696fbb0e3",
    "name" : "List processes running inside a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/69hh/top",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Processes\" : [ [ \"rrf7kvidohdud11p7mwi66or7p45ngdj34x2p1ohgw34v5at95zydh5u58cyr8dwwxqsm2h0tdqujhjsk6vj\", \"k9tbox3nop73ndddw0arqeae0rorwbmztts8ovwww3cty\" ] ],\n  \"Titles\" : [ \"0w3frjiau4mp1iuy8xnxv2\" ]\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "45f5850d-ed20-3d8a-9fc6-d83696fbb0e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerTop",
          "schema" : {
            "properties" : {
              "Processes" : {
                "description" : "Each process running in the container, where each is process is an array of values corresponding to the titles",
                "items" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "Titles" : {
                "description" : "The ps column titles",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 333
  }, {
    "id" : "d2071f5e-17ff-3a68-91fc-a295698d25ea",
    "name" : "List processes running inside a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/e835/top",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Processes\" : [ [ \"root\", \"13642\", \"882\", \"0\", \"17:03\", \"pts/0\", \"00:00:00\", \"/bin/bash\" ], [ \"root\", \"13735\", \"13642\", \"0\", \"17:06\", \"pts/0\", \"00:00:00\", \"sleep 10\" ] ],\n  \"Titles\" : [ \"UID\", \"PID\", \"PPID\", \"C\", \"STIME\", \"TTY\", \"TIME\", \"CMD\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2071f5e-17ff-3a68-91fc-a295698d25ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerTop",
          "schema" : {
            "properties" : {
              "Processes" : {
                "description" : "Each process running in the container, where each is process is an array of values corresponding to the titles",
                "items" : {
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "Titles" : {
                "description" : "The ps column titles",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 334
  }, {
    "id" : "6030358a-1bdb-36aa-ba33-8eee68d74be6",
    "name" : "Stop a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/439c/stop",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "6030358a-1bdb-36aa-ba33-8eee68d74be6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 335
  }, {
    "id" : "bd3fe4b9-fa31-3b3f-81bd-131484450b89",
    "name" : "Stop a container (application/json)",
    "request" : {
      "urlPath" : "/containers/z7g2/stop",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd3fe4b9-fa31-3b3f-81bd-131484450b89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 336
  }, {
    "id" : "4c48bd14-ce6a-391f-b0e8-2b61ce063ee0",
    "name" : "Stop a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/4l4c/stop",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "4c48bd14-ce6a-391f-b0e8-2b61ce063ee0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 337
  }, {
    "id" : "5c6388ef-6565-36a1-bc50-14bdeaf99b50",
    "name" : "Stop a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/1l7i/stop",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c6388ef-6565-36a1-bc50-14bdeaf99b50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 338
  }, {
    "id" : "99e8d646-8e5f-332d-a721-24e8495949c9",
    "name" : "Stop a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/xu74/stop",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 304,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "99e8d646-8e5f-332d-a721-24e8495949c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 339
  }, {
    "id" : "2491fe64-60cf-39fa-8644-8ea18e65eafa",
    "name" : "Stop a container (application/json)",
    "request" : {
      "urlPath" : "/containers/sh0v/stop",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 304,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2491fe64-60cf-39fa-8644-8ea18e65eafa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStop",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 340
  }, {
    "id" : "511a8496-d9ab-371d-9e61-9e9b9d79eee3",
    "name" : "Stop a container - 204",
    "request" : {
      "urlPath" : "/containers/lq53/stop",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "511a8496-d9ab-371d-9e61-9e9b9d79eee3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStop"
        }
      }
    },
    "insertionIndex" : 341
  }, {
    "id" : "02e331ee-36dc-3373-8113-58a8e7bce189",
    "name" : "Get container stats based on resource usage",
    "request" : {
      "urlPath" : "/containers/24ip/stats",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02e331ee-36dc-3373-8113-58a8e7bce189",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStats",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 342
  }, {
    "id" : "cdea3122-3893-3dd5-97e4-b089cf38b91e",
    "name" : "Get container stats based on resource usage - response",
    "request" : {
      "urlPath" : "/containers/p048/stats",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdea3122-3893-3dd5-97e4-b089cf38b91e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStats",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 343
  }, {
    "id" : "2bea7b46-6e34-3a7d-8b5c-dbb7f950dd23",
    "name" : "Get container stats based on resource usage - response",
    "request" : {
      "urlPath" : "/containers/v98p/stats",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"blkio_stats\" : { },\n  \"cpu_stats\" : {\n    \"cpu_usage\" : {\n      \"percpu_usage\" : [ 8646879, 24472255, 36438778, 30657443 ],\n      \"total_usage\" : 100215355,\n      \"usage_in_kernelmode\" : 30000000,\n      \"usage_in_usermode\" : 50000000\n    },\n    \"online_cpus\" : 4,\n    \"system_cpu_usage\" : 739306590000000,\n    \"throttling_data\" : {\n      \"periods\" : 0,\n      \"throttled_periods\" : 0,\n      \"throttled_time\" : 0\n    }\n  },\n  \"memory_stats\" : {\n    \"failcnt\" : 0,\n    \"limit\" : 67108864,\n    \"max_usage\" : 6651904,\n    \"stats\" : {\n      \"active_anon\" : 6537216,\n      \"active_file\" : 0,\n      \"cache\" : 0,\n      \"hierarchical_memory_limit\" : 67108864,\n      \"inactive_anon\" : 0,\n      \"inactive_file\" : 0,\n      \"mapped_file\" : 0,\n      \"pgfault\" : 964,\n      \"pgmajfault\" : 0,\n      \"pgpgin\" : 477,\n      \"pgpgout\" : 414,\n      \"rss\" : 6537216,\n      \"rss_huge\" : 6291456,\n      \"total_active_anon\" : 6537216,\n      \"total_active_file\" : 0,\n      \"total_cache\" : 0,\n      \"total_inactive_anon\" : 0,\n      \"total_inactive_file\" : 0,\n      \"total_mapped_file\" : 0,\n      \"total_pgfault\" : 964,\n      \"total_pgmajfault\" : 0,\n      \"total_pgpgin\" : 477,\n      \"total_pgpgout\" : 414,\n      \"total_rss\" : 6537216,\n      \"total_rss_huge\" : 6291456,\n      \"total_unevictable\" : 0,\n      \"total_writeback\" : 0,\n      \"unevictable\" : 0,\n      \"writeback\" : 0\n    },\n    \"usage\" : 6537216\n  },\n  \"networks\" : {\n    \"eth0\" : {\n      \"rx_bytes\" : 5338,\n      \"rx_dropped\" : 0,\n      \"rx_errors\" : 0,\n      \"rx_packets\" : 36,\n      \"tx_bytes\" : 648,\n      \"tx_dropped\" : 0,\n      \"tx_errors\" : 0,\n      \"tx_packets\" : 8\n    },\n    \"eth5\" : {\n      \"rx_bytes\" : 4641,\n      \"rx_dropped\" : 0,\n      \"rx_errors\" : 0,\n      \"rx_packets\" : 26,\n      \"tx_bytes\" : 690,\n      \"tx_dropped\" : 0,\n      \"tx_errors\" : 0,\n      \"tx_packets\" : 9\n    }\n  },\n  \"pids_stats\" : {\n    \"current\" : 3\n  },\n  \"precpu_stats\" : {\n    \"cpu_usage\" : {\n      \"percpu_usage\" : [ 8646879, 24350896, 36438778, 30657443 ],\n      \"total_usage\" : 100093996,\n      \"usage_in_kernelmode\" : 30000000,\n      \"usage_in_usermode\" : 50000000\n    },\n    \"online_cpus\" : 4,\n    \"system_cpu_usage\" : 9492140000000,\n    \"throttling_data\" : {\n      \"periods\" : 0,\n      \"throttled_periods\" : 0,\n      \"throttled_time\" : 0\n    }\n  },\n  \"read\" : \"2015-01-08T22:57:31.547920715Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bea7b46-6e34-3a7d-8b5c-dbb7f950dd23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStats",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 344
  }, {
    "id" : "614e67d5-4eb8-3cb4-bfbf-dc3e1482b799",
    "name" : "Start a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/7edt/start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "614e67d5-4eb8-3cb4-bfbf-dc3e1482b799",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 345
  }, {
    "id" : "6509fb0c-00b6-3c26-a30f-b3655dc953b7",
    "name" : "Start a container (application/json)",
    "request" : {
      "urlPath" : "/containers/e7y9/start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6509fb0c-00b6-3c26-a30f-b3655dc953b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 346
  }, {
    "id" : "03bf732b-8d69-3786-9939-8d5eb1fb0a70",
    "name" : "Start a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/ta89/start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "03bf732b-8d69-3786-9939-8d5eb1fb0a70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 347
  }, {
    "id" : "04037d7f-cb8e-3d4f-9807-814d844b6574",
    "name" : "Start a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/g548/start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04037d7f-cb8e-3d4f-9807-814d844b6574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 348
  }, {
    "id" : "4b6e7ea1-e342-32fd-a9d8-b6ab7f8d5121",
    "name" : "Start a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/b4q9/start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 304,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "4b6e7ea1-e342-32fd-a9d8-b6ab7f8d5121",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 349
  }, {
    "id" : "344b2421-9808-3391-8dd8-62bf0f04a92a",
    "name" : "Start a container (application/json)",
    "request" : {
      "urlPath" : "/containers/w3fw/start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 304,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "344b2421-9808-3391-8dd8-62bf0f04a92a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 350
  }, {
    "id" : "2d32ab7e-6230-32dc-9408-b8eb1b4effff",
    "name" : "Start a container - 204",
    "request" : {
      "urlPath" : "/containers/n532/start",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2d32ab7e-6230-32dc-9408-b8eb1b4effff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerStart"
        }
      }
    },
    "insertionIndex" : 351
  }, {
    "id" : "ac201a35-c1fb-30ad-98c6-f5793edb52e6",
    "name" : "Restart a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/j896/restart",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "ac201a35-c1fb-30ad-98c6-f5793edb52e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRestart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 352
  }, {
    "id" : "7d117fb1-98fc-38b5-9f8d-b92950037601",
    "name" : "Restart a container (application/json)",
    "request" : {
      "urlPath" : "/containers/lzh9/restart",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d117fb1-98fc-38b5-9f8d-b92950037601",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRestart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 353
  }, {
    "id" : "ff63680e-a744-3258-a12c-3f7f21be32fd",
    "name" : "Restart a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/53d3/restart",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "ff63680e-a744-3258-a12c-3f7f21be32fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRestart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 354
  }, {
    "id" : "9a0db6f6-d54c-31f2-8180-12fc9876b103",
    "name" : "Restart a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/87uy/restart",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a0db6f6-d54c-31f2-8180-12fc9876b103",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRestart",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 355
  }, {
    "id" : "8eabd849-95c1-364f-b4cd-da8beddaac56",
    "name" : "Restart a container - 204",
    "request" : {
      "urlPath" : "/containers/y58o/restart",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8eabd849-95c1-364f-b4cd-da8beddaac56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRestart"
        }
      }
    },
    "insertionIndex" : 356
  }, {
    "id" : "f1fd7911-61ef-36bf-a57d-0dc12df26d91",
    "name" : "Resize a container TTY (text/plain)",
    "request" : {
      "urlPath" : "/containers/z913/resize",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "f1fd7911-61ef-36bf-a57d-0dc12df26d91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerResize",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 357
  }, {
    "id" : "5ff2581d-7112-3bd4-a3ad-13468f7a5caf",
    "name" : "Resize a container TTY (text/plain)",
    "request" : {
      "urlPath" : "/containers/f0bf/resize",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "5ff2581d-7112-3bd4-a3ad-13468f7a5caf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerResize",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 358
  }, {
    "id" : "2e1458c6-1570-38c8-b976-4b8a37ba7b74",
    "name" : "Resize a container TTY (application/json) - response",
    "request" : {
      "urlPath" : "/containers/w07e/resize",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e1458c6-1570-38c8-b976-4b8a37ba7b74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerResize"
        }
      }
    },
    "insertionIndex" : 359
  }, {
    "id" : "f8cce466-99b1-3178-ae3b-e5e772c905fb",
    "name" : "Resize a container TTY - 200",
    "request" : {
      "urlPath" : "/containers/5338/resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f8cce466-99b1-3178-ae3b-e5e772c905fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerResize"
        }
      }
    },
    "insertionIndex" : 360
  }, {
    "id" : "06ea305b-766c-3012-a44c-3c56174f7745",
    "name" : "Rename a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/yb2m/rename",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "name" : {
          "equalTo" : "Xochitl+Greenholt"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "06ea305b-766c-3012-a44c-3c56174f7745",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRename",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 361
  }, {
    "id" : "e930b092-3bd7-3b76-b315-1ca4714df5fc",
    "name" : "Rename a container (application/json)",
    "request" : {
      "urlPath" : "/containers/11hg/rename",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "name" : {
          "equalTo" : "David+Gibson"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e930b092-3bd7-3b76-b315-1ca4714df5fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRename",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 362
  }, {
    "id" : "987526b7-b519-38a4-8628-10942675eb8c",
    "name" : "Rename a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/x927/rename",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "name" : {
          "equalTo" : "Antwan+Bednar"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "987526b7-b519-38a4-8628-10942675eb8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRename",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 363
  }, {
    "id" : "2f5c3a5a-d477-300b-b77e-89c9b8dbf67d",
    "name" : "Rename a container (application/json)",
    "request" : {
      "urlPath" : "/containers/agka/rename",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "name" : {
          "equalTo" : "Vernon+Bradtke"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f5c3a5a-d477-300b-b77e-89c9b8dbf67d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRename",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 364
  }, {
    "id" : "04deb6a4-cc61-368d-8a19-07673712509d",
    "name" : "Rename a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/q969/rename",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "name" : {
          "equalTo" : "Kenneth+Wiza+III"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "04deb6a4-cc61-368d-8a19-07673712509d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRename",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 365
  }, {
    "id" : "7ec3bfda-e12a-351f-b2c5-e0e72c399720",
    "name" : "Rename a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/73o6/rename",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "name" : {
          "equalTo" : "Dannie+Prosacco+PhD"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ec3bfda-e12a-351f-b2c5-e0e72c399720",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRename",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 366
  }, {
    "id" : "85f47162-1a40-3328-a4e4-f601c867de11",
    "name" : "Rename a container - 204",
    "request" : {
      "urlPath" : "/containers/aa94/rename",
      "method" : "POST",
      "queryParameters" : {
        "name" : {
          "equalTo" : "Sommer+Jaskolski"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "85f47162-1a40-3328-a4e4-f601c867de11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerRename"
        }
      }
    },
    "insertionIndex" : 367
  }, {
    "id" : "499307b1-382c-3b20-8f74-a9dc490f0661",
    "name" : "Pause a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/a97r/pause",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "499307b1-382c-3b20-8f74-a9dc490f0661",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerPause",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 368
  }, {
    "id" : "90ecf4e1-2446-3eeb-9366-d6fe64f377ac",
    "name" : "Pause a container (application/json)",
    "request" : {
      "urlPath" : "/containers/hxb8/pause",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90ecf4e1-2446-3eeb-9366-d6fe64f377ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerPause",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 369
  }, {
    "id" : "3e87cf1a-f68d-3181-a9bd-26db2e19d43f",
    "name" : "Pause a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/03cj/pause",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "3e87cf1a-f68d-3181-a9bd-26db2e19d43f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerPause",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 370
  }, {
    "id" : "331a9fcc-5ce5-3f06-983b-657d132f27da",
    "name" : "Pause a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/2c6g/pause",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "331a9fcc-5ce5-3f06-983b-657d132f27da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerPause",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 371
  }, {
    "id" : "f499e1bd-52f1-3ac0-810a-12ff1c898005",
    "name" : "Pause a container - 204",
    "request" : {
      "urlPath" : "/containers/g9lv/pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f499e1bd-52f1-3ac0-810a-12ff1c898005",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerPause"
        }
      }
    },
    "insertionIndex" : 372
  }, {
    "id" : "8dc706f4-0ce3-3e0f-992b-67af83c62cec",
    "name" : "Get container logs (text/plain)",
    "request" : {
      "urlPath" : "/containers/wybm/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "8dc706f4-0ce3-3e0f-992b-67af83c62cec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 373
  }, {
    "id" : "21acafaf-cb5d-320f-a6af-1edc1838ff14",
    "name" : "Get container logs (application/json)",
    "request" : {
      "urlPath" : "/containers/597n/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21acafaf-cb5d-320f-a6af-1edc1838ff14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 374
  }, {
    "id" : "c5aabda5-39d7-3c31-989e-6e480afc21ff",
    "name" : "Get container logs (text/plain)",
    "request" : {
      "urlPath" : "/containers/p9w1/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c5aabda5-39d7-3c31-989e-6e480afc21ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 375
  }, {
    "id" : "86829ff5-bd22-3b0c-b444-dba105a2b29f",
    "name" : "Get container logs (application/json) - response",
    "request" : {
      "urlPath" : "/containers/z77q/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86829ff5-bd22-3b0c-b444-dba105a2b29f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerLogs",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 376
  }, {
    "id" : "4e2be2f7-11d0-39f6-9cf5-1f7bd6a8f036",
    "name" : "Get container logs (text/plain)",
    "request" : {
      "urlPath" : "/containers/4n0e/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"vtfesufquhay6ferear9nwpv7jtd4vedi8wqw0z0n56yqwiodmai5d0p237b589feefl9ojc4rthdhwu62dcwqyhowhig5mkh5jk6zopr4ch4png1uswnnq3grl3cc4kxuqpkk19ykaxzc7m\"",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "4e2be2f7-11d0-39f6-9cf5-1f7bd6a8f036",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerLogs",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 377
  }, {
    "id" : "b84966f8-9dbe-369b-943f-97d1a7d36afb",
    "name" : "Get container logs (application/json)",
    "request" : {
      "urlPath" : "/containers/4ppw/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"1jrfdz9dkhyk1f3yjyboudf4ligz19xnrqx8tnenm4gr90livth5crzkxyqh0viff6fbu5dyzkfqf8107aofqbto2ibdjbr0fq1s8vg7p9jhccjgdqqdfrimfmnrmwjg9essln415b0b3x7678v0zlmwwoimugvhrj\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b84966f8-9dbe-369b-943f-97d1a7d36afb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerLogs",
          "schema" : {
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 378
  }, {
    "id" : "bc42a920-8344-386c-b4ca-e6999b8bcf59",
    "name" : "Get container logs (text/plain)",
    "request" : {
      "urlPath" : "/containers/115v/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 101,
      "body" : "\"4xh2j48ob2252wybkndy6l3v1wn6ebp8y2y11qll3m4uni92chlyy9o60pnpopq9bywgxluu5s67nk2xr7cnjajmpb3t30zk009to786v2i7\"",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "bc42a920-8344-386c-b4ca-e6999b8bcf59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerLogs",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 379
  }, {
    "id" : "c84e1adc-b540-326c-91c7-86f1f41d654a",
    "name" : "Get container logs (application/json)",
    "request" : {
      "urlPath" : "/containers/5r0w/logs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 101,
      "body" : "\"re3onodkgdq48vdo246mn1u8zgsf6696fgpxnnxrzmmezww7jrwo8lkz0l06wyevv1zvb4qynou3gvszinf\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c84e1adc-b540-326c-91c7-86f1f41d654a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerLogs",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 380
  }, {
    "id" : "9c4af771-4ac7-3bce-8f8c-b133e38ec54d",
    "name" : "Kill a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/pdj3/kill",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "9c4af771-4ac7-3bce-8f8c-b133e38ec54d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerKill",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 381
  }, {
    "id" : "585997f2-dd65-3508-9b17-e92d6cf7dbd7",
    "name" : "Kill a container (application/json)",
    "request" : {
      "urlPath" : "/containers/x795/kill",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "585997f2-dd65-3508-9b17-e92d6cf7dbd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerKill",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 382
  }, {
    "id" : "27a134fc-c1b6-33f3-8342-b2f463e392bd",
    "name" : "Kill a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/px6y/kill",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "27a134fc-c1b6-33f3-8342-b2f463e392bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerKill",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 383
  }, {
    "id" : "c8e695aa-2f43-3f5c-be98-3753d3841cd4",
    "name" : "Kill a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/7fx5/kill",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8e695aa-2f43-3f5c-be98-3753d3841cd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerKill",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 384
  }, {
    "id" : "c13777a0-81f6-3802-8301-4c8ec00bb3ca",
    "name" : "Kill a container - 204",
    "request" : {
      "urlPath" : "/containers/6gxc/kill",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c13777a0-81f6-3802-8301-4c8ec00bb3ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerKill"
        }
      }
    },
    "insertionIndex" : 385
  }, {
    "id" : "15f4ed17-1bb3-3ace-a65d-c664dc0c0f37",
    "name" : "Inspect a container",
    "request" : {
      "urlPath" : "/containers/5m2j/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15f4ed17-1bb3-3ace-a65d-c664dc0c0f37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 386
  }, {
    "id" : "3c3b1235-c642-3f78-b07c-ba38ad1c6e38",
    "name" : "Inspect a container - response",
    "request" : {
      "urlPath" : "/containers/ldal/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c3b1235-c642-3f78-b07c-ba38ad1c6e38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 387
  }, {
    "id" : "45a4db8b-975c-3302-b976-6d99a4c985f2",
    "name" : "Inspect a container - response",
    "request" : {
      "urlPath" : "/containers/ws8v/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"AppArmorProfile\" : \"\",\n  \"Args\" : [ \"-c\", \"exit 9\" ],\n  \"Config\" : {\n    \"AttachStderr\" : true,\n    \"AttachStdin\" : false,\n    \"AttachStdout\" : true,\n    \"Cmd\" : [ \"/bin/sh\", \"-c\", \"exit 9\" ],\n    \"Domainname\" : \"\",\n    \"Env\" : [ \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" ],\n    \"Hostname\" : \"ba033ac44011\",\n    \"Image\" : \"ubuntu\",\n    \"Labels\" : {\n      \"com.example.license\" : \"GPL\",\n      \"com.example.vendor\" : \"Acme\",\n      \"com.example.version\" : \"1.0\"\n    },\n    \"MacAddress\" : \"\",\n    \"NetworkDisabled\" : false,\n    \"OpenStdin\" : false,\n    \"StdinOnce\" : false,\n    \"StopSignal\" : \"SIGTERM\",\n    \"StopTimeout\" : 10,\n    \"Tty\" : false,\n    \"User\" : \"\",\n    \"Volumes\" : {\n      \"/volumes/data\" : { }\n    },\n    \"WorkingDir\" : \"\"\n  },\n  \"Created\" : \"2015-01-06T15:47:31.485331387Z\",\n  \"Driver\" : \"devicemapper\",\n  \"HostConfig\" : {\n    \"BlkioDeviceReadBps\" : [ { } ],\n    \"BlkioDeviceReadIOps\" : [ { } ],\n    \"BlkioDeviceWriteBps\" : [ { } ],\n    \"BlkioDeviceWriteIOps\" : [ { } ],\n    \"BlkioWeight\" : 0,\n    \"BlkioWeightDevice\" : [ { } ],\n    \"ContainerIDFile\" : \"\",\n    \"CpuPercent\" : 80,\n    \"CpuPeriod\" : 100000,\n    \"CpuRealtimePeriod\" : 1000000,\n    \"CpuRealtimeRuntime\" : 10000,\n    \"CpuShares\" : 0,\n    \"CpusetCpus\" : \"\",\n    \"CpusetMems\" : \"\",\n    \"Devices\" : [ ],\n    \"IpcMode\" : \"\",\n    \"KernelMemory\" : 0,\n    \"LogConfig\" : {\n      \"Type\" : \"json-file\"\n    },\n    \"LxcConf\" : [ ],\n    \"MaximumIOBps\" : 0,\n    \"MaximumIOps\" : 0,\n    \"Memory\" : 0,\n    \"MemoryReservation\" : 0,\n    \"MemorySwap\" : 0,\n    \"NetworkMode\" : \"bridge\",\n    \"OomKillDisable\" : false,\n    \"OomScoreAdj\" : 500,\n    \"PidMode\" : \"\",\n    \"PortBindings\" : { },\n    \"Privileged\" : false,\n    \"PublishAllPorts\" : false,\n    \"ReadonlyRootfs\" : false,\n    \"RestartPolicy\" : {\n      \"MaximumRetryCount\" : 2,\n      \"Name\" : \"on-failure\"\n    },\n    \"ShmSize\" : 67108864,\n    \"Sysctls\" : {\n      \"net.ipv4.ip_forward\" : \"1\"\n    },\n    \"Ulimits\" : [ { } ],\n    \"VolumeDriver\" : \"\"\n  },\n  \"HostnamePath\" : \"/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/hostname\",\n  \"HostsPath\" : \"/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/hosts\",\n  \"Id\" : \"ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39\",\n  \"Image\" : \"04c5d3b7b0656168630d3ba35d8889bd0e9caafcaeb3004d2bfbc47e7c5d35d2\",\n  \"LogPath\" : \"/var/lib/docker/containers/1eb5fabf5a03807136561b3c00adcd2992b535d624d5e18b6cdc6a6844d9767b/1eb5fabf5a03807136561b3c00adcd2992b535d624d5e18b6cdc6a6844d9767b-json.log\",\n  \"MountLabel\" : \"\",\n  \"Mounts\" : [ {\n    \"Destination\" : \"/data\",\n    \"Driver\" : \"local\",\n    \"Mode\" : \"ro,Z\",\n    \"Name\" : \"fac362...80535\",\n    \"Propagation\" : \"\",\n    \"RW\" : false,\n    \"Source\" : \"/data\"\n  } ],\n  \"Name\" : \"/boring_euclid\",\n  \"NetworkSettings\" : {\n    \"Bridge\" : \"\",\n    \"EndpointID\" : \"\",\n    \"Gateway\" : \"\",\n    \"GlobalIPv6Address\" : \"\",\n    \"GlobalIPv6PrefixLen\" : 0,\n    \"HairpinMode\" : false,\n    \"IPAddress\" : \"\",\n    \"IPPrefixLen\" : 0,\n    \"IPv6Gateway\" : \"\",\n    \"LinkLocalIPv6Address\" : \"\",\n    \"LinkLocalIPv6PrefixLen\" : 0,\n    \"MacAddress\" : \"\",\n    \"Networks\" : {\n      \"bridge\" : {\n        \"EndpointID\" : \"7587b82f0dada3656fda26588aee72630c6fab1536d36e394b2bfbcf898c971d\",\n        \"Gateway\" : \"172.17.0.1\",\n        \"GlobalIPv6Address\" : \"\",\n        \"GlobalIPv6PrefixLen\" : 0,\n        \"IPAddress\" : \"172.17.0.2\",\n        \"IPPrefixLen\" : 16,\n        \"IPv6Gateway\" : \"\",\n        \"MacAddress\" : \"02:42:ac:12:00:02\",\n        \"NetworkID\" : \"7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812\"\n      }\n    },\n    \"SandboxID\" : \"\",\n    \"SandboxKey\" : \"\"\n  },\n  \"Path\" : \"/bin/sh\",\n  \"ProcessLabel\" : \"\",\n  \"ResolvConfPath\" : \"/var/lib/docker/containers/ba033ac4401106a3b513bc9d639eee123ad78ca3616b921167cd74b20e25ed39/resolv.conf\",\n  \"RestartCount\" : 1,\n  \"State\" : {\n    \"Dead\" : false,\n    \"Error\" : \"\",\n    \"ExitCode\" : 9,\n    \"FinishedAt\" : \"2015-01-06T15:47:32.080254511Z\",\n    \"OOMKilled\" : false,\n    \"Paused\" : false,\n    \"Pid\" : 0,\n    \"Restarting\" : false,\n    \"Running\" : true,\n    \"StartedAt\" : \"2015-01-06T15:47:32.072697474Z\",\n    \"Status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45a4db8b-975c-3302-b976-6d99a4c985f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerInspect",
          "schema" : {
            "properties" : {
              "AppArmorProfile" : {
                "type" : "string"
              },
              "Args" : {
                "description" : "The arguments to the command being run",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "Config" : {
                "$ref" : "#/components/schemas/ContainerConfig"
              },
              "Created" : {
                "description" : "The time the container was created",
                "type" : "string"
              },
              "Driver" : {
                "type" : "string"
              },
              "ExecIDs" : {
                "type" : "string"
              },
              "GraphDriver" : {
                "$ref" : "#/components/schemas/GraphDriverData"
              },
              "HostConfig" : {
                "$ref" : "#/components/schemas/HostConfig"
              },
              "HostnamePath" : {
                "type" : "string"
              },
              "HostsPath" : {
                "type" : "string"
              },
              "Id" : {
                "description" : "The ID of the container",
                "type" : "string"
              },
              "Image" : {
                "description" : "The container's image",
                "type" : "string"
              },
              "LogPath" : {
                "type" : "string"
              },
              "MountLabel" : {
                "type" : "string"
              },
              "Mounts" : {
                "items" : {
                  "$ref" : "#/components/schemas/MountPoint"
                },
                "type" : "array"
              },
              "Name" : {
                "type" : "string"
              },
              "NetworkSettings" : {
                "$ref" : "#/components/schemas/NetworkSettings"
              },
              "Node" : {
                "description" : "TODO",
                "type" : "object"
              },
              "Path" : {
                "description" : "The path to the command being run",
                "type" : "string"
              },
              "ProcessLabel" : {
                "type" : "string"
              },
              "ResolvConfPath" : {
                "type" : "string"
              },
              "RestartCount" : {
                "type" : "integer"
              },
              "SizeRootFs" : {
                "description" : "The total size of all the files in this container.",
                "format" : "int64",
                "type" : "integer"
              },
              "SizeRw" : {
                "description" : "The size of files that have been created or changed by this container.",
                "format" : "int64",
                "type" : "integer"
              },
              "State" : {
                "description" : "The state of the container.",
                "properties" : {
                  "Dead" : {
                    "type" : "boolean"
                  },
                  "Error" : {
                    "type" : "string"
                  },
                  "ExitCode" : {
                    "description" : "The last exit code of this container",
                    "type" : "integer"
                  },
                  "FinishedAt" : {
                    "description" : "The time when this container last exited.",
                    "type" : "string"
                  },
                  "OOMKilled" : {
                    "description" : "Whether this container has been killed because it ran out of memory.",
                    "type" : "boolean"
                  },
                  "Paused" : {
                    "description" : "Whether this container is paused.",
                    "type" : "boolean"
                  },
                  "Pid" : {
                    "description" : "The process ID of this container",
                    "type" : "integer"
                  },
                  "Restarting" : {
                    "description" : "Whether this container is restarting.",
                    "type" : "boolean"
                  },
                  "Running" : {
                    "description" : "Whether this container is running.\n\nNote that a running container can be _paused_. The `Running` and `Paused`\nbooleans are not mutually exclusive:\n\nWhen pausing a container (on Linux), the cgroups freezer is used to suspend\nall processes in the container. Freezing the process requires the process to\nbe running. As a result, paused containers are both `Running` _and_ `Paused`.\n\nUse the `Status` field instead to determine if a container's state is \"running\".\n",
                    "type" : "boolean"
                  },
                  "StartedAt" : {
                    "description" : "The time when this container was last started.",
                    "type" : "string"
                  },
                  "Status" : {
                    "description" : "The status of the container. For example, `\"running\"` or `\"exited\"`.\n",
                    "enum" : [ "created", "running", "paused", "restarting", "removing", "exited", "dead" ],
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 388
  }, {
    "id" : "a2c61704-c453-3401-8417-d144f7d8cc52",
    "name" : "Export a container (application/octet-stream)",
    "request" : {
      "urlPath" : "/containers/w7mc/export",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/octet-stream"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "a2c61704-c453-3401-8417-d144f7d8cc52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerExport",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 389
  }, {
    "id" : "4cae71bf-2837-36e9-a101-a3717c765fbe",
    "name" : "Export a container (application/octet-stream)",
    "request" : {
      "urlPath" : "/containers/91zi/export",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/octet-stream"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "4cae71bf-2837-36e9-a101-a3717c765fbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerExport",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 390
  }, {
    "id" : "d86845aa-421c-3086-aabb-a5a20f52b54b",
    "name" : "Export a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/iyyf/export",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d86845aa-421c-3086-aabb-a5a20f52b54b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerExport"
        }
      }
    },
    "insertionIndex" : 391
  }, {
    "id" : "5b3daa19-2b77-3a0b-a4e3-5d8630f74ba2",
    "name" : "Export a container - 200",
    "request" : {
      "urlPath" : "/containers/8oxs/export",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5b3daa19-2b77-3a0b-a4e3-5d8630f74ba2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerExport"
        }
      }
    },
    "insertionIndex" : 392
  }, {
    "id" : "08de183a-ec77-3f76-8ae4-4076668ca9e2",
    "name" : "Create an exec instance",
    "request" : {
      "urlPath" : "/containers/qyz0/exec",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08de183a-ec77-3f76-8ae4-4076668ca9e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerExec",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 393
  }, {
    "id" : "e1b7574a-5d07-33b0-a745-4753f273e103",
    "name" : "Create an exec instance",
    "request" : {
      "urlPath" : "/containers/557l/exec",
      "method" : "POST"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1b7574a-5d07-33b0-a745-4753f273e103",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerExec",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 394
  }, {
    "id" : "9dfbff6f-d244-3c7a-bd3f-6aa8a169540e",
    "name" : "Create an exec instance - response",
    "request" : {
      "urlPath" : "/containers/23vf/exec",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dfbff6f-d244-3c7a-bd3f-6aa8a169540e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerExec",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 395
  }, {
    "id" : "313d0bae-6856-3d4a-ba4a-60e7b063f937",
    "name" : "Create an exec instance",
    "request" : {
      "urlPath" : "/containers/ho2w/exec",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"Id\" : \"fhi8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "313d0bae-6856-3d4a-ba4a-60e7b063f937",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerExec",
          "schema" : {
            "description" : "Response to an API call that returns just an Id",
            "properties" : {
              "Id" : {
                "description" : "The id of the newly created object.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "Id" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 396
  }, {
    "id" : "324b9706-14fc-3890-b889-41049910c003",
    "name" : "Get changes on a container’s filesystem",
    "request" : {
      "urlPath" : "/containers/450k/changes",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "324b9706-14fc-3890-b889-41049910c003",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerChanges",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 397
  }, {
    "id" : "a022be08-495f-3956-a478-22c06093bf4a",
    "name" : "Get changes on a container’s filesystem - response",
    "request" : {
      "urlPath" : "/containers/b33y/changes",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a022be08-495f-3956-a478-22c06093bf4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerChanges",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 398
  }, {
    "id" : "7adbcb01-2c23-396f-b753-83933ea2f2d2",
    "name" : "Get changes on a container’s filesystem - response",
    "request" : {
      "urlPath" : "/containers/8z29/changes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Kind\" : 0,\n  \"Path\" : \"/dev\"\n}, {\n  \"Kind\" : 1,\n  \"Path\" : \"/dev/kmsg\"\n}, {\n  \"Kind\" : 1,\n  \"Path\" : \"/test\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7adbcb01-2c23-396f-b753-83933ea2f2d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerChanges",
          "schema" : {
            "items" : {
              "properties" : {
                "Kind" : {
                  "description" : "Kind of change",
                  "enum" : [ 0, 1, 2 ],
                  "format" : "uint8",
                  "nullable" : false,
                  "type" : "integer"
                },
                "Path" : {
                  "description" : "Path to file that has changed",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "required" : [ "Path", "Kind" ],
              "type" : "object",
              "x-go-name" : "ContainerChangeResponseItem"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 399
  }, {
    "id" : "16aa9cb4-e43f-34ee-a882-d81440919ba6",
    "name" : "Attach to a container via a websocket (text/plain)",
    "request" : {
      "urlPath" : "/containers/6yg3/attach/ws",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "16aa9cb4-e43f-34ee-a882-d81440919ba6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttachWebsocket",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 400
  }, {
    "id" : "869de606-18a7-34b4-a6ee-925088701a79",
    "name" : "Attach to a container via a websocket (application/json)",
    "request" : {
      "urlPath" : "/containers/l012/attach/ws",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "869de606-18a7-34b4-a6ee-925088701a79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttachWebsocket",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 401
  }, {
    "id" : "483b9d13-b598-3307-8493-694583cc21e7",
    "name" : "Attach to a container via a websocket (text/plain)",
    "request" : {
      "urlPath" : "/containers/336a/attach/ws",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "483b9d13-b598-3307-8493-694583cc21e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttachWebsocket",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 402
  }, {
    "id" : "a22fb773-d2b5-3bf2-81b5-04740ac547ad",
    "name" : "Attach to a container via a websocket (application/json) - response",
    "request" : {
      "urlPath" : "/containers/w41h/attach/ws",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a22fb773-d2b5-3bf2-81b5-04740ac547ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttachWebsocket",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 403
  }, {
    "id" : "5e09c3eb-05b7-3ca3-a5be-de297960d6d7",
    "name" : "Attach to a container via a websocket (text/plain)",
    "request" : {
      "urlPath" : "/containers/nh85/attach/ws",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "5e09c3eb-05b7-3ca3-a5be-de297960d6d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttachWebsocket",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 404
  }, {
    "id" : "57f6e779-f3fc-30bd-83c1-ca071b29c6b3",
    "name" : "Attach to a container via a websocket (application/json)",
    "request" : {
      "urlPath" : "/containers/6wva/attach/ws",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57f6e779-f3fc-30bd-83c1-ca071b29c6b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttachWebsocket",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 405
  }, {
    "id" : "f1738f22-e15e-32dd-af52-bc9f0cab23e5",
    "name" : "Attach to a container via a websocket - 200",
    "request" : {
      "urlPath" : "/containers/34tz/attach/ws",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f1738f22-e15e-32dd-af52-bc9f0cab23e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttachWebsocket"
        }
      }
    },
    "insertionIndex" : 406
  }, {
    "id" : "5c9e22b5-bc8a-36e0-b39b-d8cfb2b1a012",
    "name" : "Attach to a container via a websocket - 101",
    "request" : {
      "urlPath" : "/containers/xr95/attach/ws",
      "method" : "GET"
    },
    "response" : {
      "status" : 101
    },
    "uuid" : "5c9e22b5-bc8a-36e0-b39b-d8cfb2b1a012",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttachWebsocket"
        }
      }
    },
    "insertionIndex" : 407
  }, {
    "id" : "3ceeeba7-3104-3c9a-9ed3-14c7de49f277",
    "name" : "Attach to a container (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/containers/423t/attach",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "3ceeeba7-3104-3c9a-9ed3-14c7de49f277",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttach",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 408
  }, {
    "id" : "1fbaa231-6698-3d3f-b769-3129151d56a0",
    "name" : "Attach to a container (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/containers/oa60/attach",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "1fbaa231-6698-3d3f-b769-3129151d56a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttach",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 409
  }, {
    "id" : "bf9ee36f-cb1a-36db-b5dc-d25442a1e90d",
    "name" : "Attach to a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/8lp1/attach",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf9ee36f-cb1a-36db-b5dc-d25442a1e90d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttach"
        }
      }
    },
    "insertionIndex" : 410
  }, {
    "id" : "3f1f23ac-053f-3cd7-85bd-d96e9a50be52",
    "name" : "Attach to a container (application/vnd.docker.raw-stream)",
    "request" : {
      "urlPath" : "/containers/31zc/attach",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/vnd.docker.raw-stream"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/vnd.docker.raw-stream"
      }
    },
    "uuid" : "3f1f23ac-053f-3cd7-85bd-d96e9a50be52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttach",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 411
  }, {
    "id" : "6efa6e45-fa31-3dd2-a371-db43e25d89c7",
    "name" : "Attach to a container - 200",
    "request" : {
      "urlPath" : "/containers/htyt/attach",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6efa6e45-fa31-3dd2-a371-db43e25d89c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttach"
        }
      }
    },
    "insertionIndex" : 412
  }, {
    "id" : "4f0c1a21-eeeb-307b-ac97-ad9e8a70b2d7",
    "name" : "Attach to a container - 101",
    "request" : {
      "urlPath" : "/containers/tqjb/attach",
      "method" : "POST"
    },
    "response" : {
      "status" : 101
    },
    "uuid" : "4f0c1a21-eeeb-307b-ac97-ad9e8a70b2d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerAttach"
        }
      }
    },
    "insertionIndex" : 413
  }, {
    "id" : "b64e1dab-bb3a-3bf9-91bb-f7a495dae832",
    "name" : "Extract an archive of files or folders to a directory in a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/3igv/archive",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "5f2ktyn2je7n82rn7t22ult948wbvywwe2ilyhtfe8gnfj7bxf4mdpd20ymvzhxpwcfrkw96373g4y6i0q82"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "b64e1dab-bb3a-3bf9-91bb-f7a495dae832",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 414
  }, {
    "id" : "f05495e1-ec98-3a80-b0fd-ee9c07dc8a2d",
    "name" : "Extract an archive of files or folders to a directory in a container (application/json)",
    "request" : {
      "urlPath" : "/containers/f3sr/archive",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "01tq8f7lb8f7qrtnz2femaqnmjpng2onq5k13p24noasrxl1vvw5say01hw"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f05495e1-ec98-3a80-b0fd-ee9c07dc8a2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 415
  }, {
    "id" : "2b5bc038-0b04-3de3-af06-adcabbd67545",
    "name" : "Extract an archive of files or folders to a directory in a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/08v8/archive",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "fnjjavtwv"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "2b5bc038-0b04-3de3-af06-adcabbd67545",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 416
  }, {
    "id" : "deba021f-da7e-3cb0-b8bd-15f1118b346c",
    "name" : "Extract an archive of files or folders to a directory in a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/dms2/archive",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "gccupzk3f3e3r0k482badxq0b34eak8atpukuxzjkul1"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "deba021f-da7e-3cb0-b8bd-15f1118b346c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 417
  }, {
    "id" : "3561e3c5-e60d-3e53-8379-61b6b1097d09",
    "name" : "Extract an archive of files or folders to a directory in a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/1q09/archive",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "m84ldshp8w859npdq1llpo3s8zgw2m3gkmwouw9ja9x4bulyrdygj0uehxgq5vxwp1k5y9ue3l4956joq5qcnzv2ln7o7owqeiszrbogq71pgn0wik43tfjsanif433lu0ygz4kww0mkfmuiz"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "3561e3c5-e60d-3e53-8379-61b6b1097d09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 418
  }, {
    "id" : "2208ae79-7c65-3839-b586-f3039e265021",
    "name" : "Extract an archive of files or folders to a directory in a container (application/json)",
    "request" : {
      "urlPath" : "/containers/3s93/archive",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "cbcduh379ykz0cmhfsoepxfvgc"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2208ae79-7c65-3839-b586-f3039e265021",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 419
  }, {
    "id" : "8833aae4-085c-322e-8572-a994c21c082c",
    "name" : "Extract an archive of files or folders to a directory in a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/5wsw/archive",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "mx3f0sjcq7x9290l0lw120m9mfguao856pxiq3zpbeo2q0rrckxg4kvjccb2rgg680xurazhpsep91t9aku6h0aixeedezmxm5vmjf9oqbk6pkgbd0jife46w5zkkrubf"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "8833aae4-085c-322e-8572-a994c21c082c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 420
  }, {
    "id" : "fce156cc-d490-3b45-98f8-b185a029a749",
    "name" : "Extract an archive of files or folders to a directory in a container (application/json)",
    "request" : {
      "urlPath" : "/containers/2m5x/archive",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "9m4csvu85a52wcakvy8hbawd0tjjv1njmib9njf66wvb9m4njm5ucidofiymqhit41eu7o0r18ltsd4xs7vpxd0fyogx688pfp5ncuhzho0opthg10rpcihzpvq6l79bmnvhar7xvjktsj0xbgpg6xwkzq5nlplqh3lue191ys"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fce156cc-d490-3b45-98f8-b185a029a749",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 421
  }, {
    "id" : "cb852bd0-b63a-3cdc-b70d-b10c9470c074",
    "name" : "Extract an archive of files or folders to a directory in a container - 200",
    "request" : {
      "urlPath" : "/containers/e3y1/archive",
      "method" : "PUT",
      "queryParameters" : {
        "path" : {
          "equalTo" : "3fkp7p5df0x03hrwtp"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cb852bd0-b63a-3cdc-b70d-b10c9470c074",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutContainerArchive"
        }
      }
    },
    "insertionIndex" : 422
  }, {
    "id" : "1aa5e239-303d-3e82-a6f1-a079354b24b8",
    "name" : "Get information about files in a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/88w0/archive",
      "method" : "HEAD",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "2fgdczjah1b44pyswrbzuyq4y1jq96xs9rb1myloyculurv23ikqjefr3m976bx596waf470l9sfb4sz9j6"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "1aa5e239-303d-3e82-a6f1-a079354b24b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchiveInfo",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 423
  }, {
    "id" : "3d03610d-b670-39ad-a108-1ed2c66437fb",
    "name" : "Get information about files in a container (application/json)",
    "request" : {
      "urlPath" : "/containers/0j22/archive",
      "method" : "HEAD",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "hhb8xd1p7b8wrw6gewkpmmhw6kdqqlof0ar8jphchhs88yua2wvdt81sirs0mohc39149qrm8yqujuibb46vy9vd8jnq030nkz6"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d03610d-b670-39ad-a108-1ed2c66437fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchiveInfo",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 424
  }, {
    "id" : "394aed47-7a5c-322a-8f9e-920db5263fe0",
    "name" : "Get information about files in a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/35d1/archive",
      "method" : "HEAD",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "tk8p32ut9h82gb3xcb6qqq2ujaaostyarzzzn9fej2k2d04di8so88edbmc8l9w40r1df2g7ux8j6cc6dd00idwqaphbwyv1ad0wl1nmmyr1nak"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "394aed47-7a5c-322a-8f9e-920db5263fe0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchiveInfo",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 425
  }, {
    "id" : "deede483-d5fd-334b-9724-48ec85dc6202",
    "name" : "Get information about files in a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/6945/archive",
      "method" : "HEAD",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "v7l63z6qyc7j5zmlnpdr5qmdext"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "deede483-d5fd-334b-9724-48ec85dc6202",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchiveInfo",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 426
  }, {
    "id" : "4ea61ce2-b596-305d-985f-9ceef9a8bf39",
    "name" : "Get information about files in a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/8ri7/archive",
      "method" : "HEAD",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "grnln9lrj4b7j0dmllmhthhwx06rn082kh22xxq"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "4ea61ce2-b596-305d-985f-9ceef9a8bf39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchiveInfo",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorResponse"
            }, {
              "properties" : {
                "message" : {
                  "description" : "The error message. Either \"must specify path parameter\" (path cannot be empty) or \"not a directory\" (path was asserted to be a directory but exists as a file).",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 427
  }, {
    "id" : "3c070a09-b5bd-35a3-ac27-508916ebc03f",
    "name" : "Get information about files in a container (application/json)",
    "request" : {
      "urlPath" : "/containers/fuw0/archive",
      "method" : "HEAD",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "1u3jiq1byt2t4iah5wvj8cd9tc3acrgo816b7jkhg0c35n5iuu5cs4li8qmtnvass6gtjb7q9n9si8lvzze02gji3h9w9qgpt9ywzp5gs4g3pca26p3r6h7rqdp0l9tjo6acne8rhw5owowbh"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c070a09-b5bd-35a3-ac27-508916ebc03f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchiveInfo",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorResponse"
            }, {
              "properties" : {
                "message" : {
                  "description" : "The error message. Either \"must specify path parameter\" (path cannot be empty) or \"not a directory\" (path was asserted to be a directory but exists as a file).",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 428
  }, {
    "id" : "4e844c13-a3e7-398f-b7d3-d16c9889c45c",
    "name" : "Get information about files in a container - 200",
    "request" : {
      "urlPath" : "/containers/hu34/archive",
      "method" : "HEAD",
      "queryParameters" : {
        "path" : {
          "equalTo" : "6dx62ef5asp66elq43"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4e844c13-a3e7-398f-b7d3-d16c9889c45c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchiveInfo"
        }
      }
    },
    "insertionIndex" : 429
  }, {
    "id" : "4dcb8977-c72b-39e0-a06d-dac34cbc64f7",
    "name" : "Get an archive of a filesystem resource in a container (application/x-tar)",
    "request" : {
      "urlPath" : "/containers/eqm8/archive",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/x-tar"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "rxb7vtw3afnmheejho48udv5y16fp1pjhbk0y8mvwpajsu3ya5pscmbmw3qafp89eoflwwg224f93n99ra5ielunjmanz8oxx5iqn4tj62nnlsbbc9le4zltqpi0desdpg3tm8z2m31ezr8ztdcr8ewqn8ja77qzopp5b7ow5qlqsrjn6v7a3r"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/x-tar"
      }
    },
    "uuid" : "4dcb8977-c72b-39e0-a06d-dac34cbc64f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 430
  }, {
    "id" : "5e601a4e-018d-3a57-a73e-227fc77f05f9",
    "name" : "Get an archive of a filesystem resource in a container (application/x-tar)",
    "request" : {
      "urlPath" : "/containers/q643/archive",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/x-tar"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "q84c2q4n2o1zv4gesq6j95qeuog67y9fet7ifphdg9g7y4m0itgbicaxv9bsi8qorksp2wlq5o7urgrebw2ny0ry8rey6zxs4c4rtnsjs15crhkt3qwy661w1pfoyahzfxllaphwwd5stywldv2dhifxqn82j"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/x-tar"
      }
    },
    "uuid" : "5e601a4e-018d-3a57-a73e-227fc77f05f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchive",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 431
  }, {
    "id" : "bbd9f019-b314-3dc5-8a50-6ec2a2ecf9b7",
    "name" : "Get an archive of a filesystem resource in a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/x5g7/archive",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "55qsqeg8heimgkkqdb9z9v4dvezetuojjz2qz"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbd9f019-b314-3dc5-8a50-6ec2a2ecf9b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchive"
        }
      }
    },
    "insertionIndex" : 432
  }, {
    "id" : "b4c71049-4b9a-3f2b-9118-d6758ac12866",
    "name" : "Get an archive of a filesystem resource in a container (application/x-tar)",
    "request" : {
      "urlPath" : "/containers/l5lw/archive",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/x-tar"
        }
      },
      "queryParameters" : {
        "path" : {
          "equalTo" : "4fjaw4ai"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/x-tar"
      }
    },
    "uuid" : "b4c71049-4b9a-3f2b-9118-d6758ac12866",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchive",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/ErrorResponse"
            }, {
              "properties" : {
                "message" : {
                  "description" : "The error message. Either \"must specify path parameter\" (path cannot be empty) or \"not a directory\" (path was asserted to be a directory but exists as a file).",
                  "nullable" : false,
                  "type" : "string"
                }
              },
              "type" : "object"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 433
  }, {
    "id" : "41e74862-3fa8-3060-b73f-fffe4bd15d97",
    "name" : "Get an archive of a filesystem resource in a container - 200",
    "request" : {
      "urlPath" : "/containers/impn/archive",
      "method" : "GET",
      "queryParameters" : {
        "path" : {
          "equalTo" : "oune262bj2u7wm1euvvwaj72g8uj9ycw263dt4y47y4pnd2lrlzp5zzb9vyvi073iq1hwjfy17s833tajq0wd5xuik8iue26c058nv40qawkcrawvxg9gbicgx64xwlwj1zr2w9jif6178n3fu4g4gpw32qobbrt4s3yp"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "41e74862-3fa8-3060-b73f-fffe4bd15d97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerArchive"
        }
      }
    },
    "insertionIndex" : 434
  }, {
    "id" : "beab2f31-3e0c-3972-8c62-63104790b66d",
    "name" : "Remove a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/7jpd",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "beab2f31-3e0c-3972-8c62-63104790b66d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 435
  }, {
    "id" : "bc0a5e1a-f9df-31bb-a02c-68b51e26309d",
    "name" : "Remove a container (application/json)",
    "request" : {
      "urlPath" : "/containers/374n",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc0a5e1a-f9df-31bb-a02c-68b51e26309d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 436
  }, {
    "id" : "e2bdc47e-b9c7-3d4b-87eb-3dcb4c5d7ee8",
    "name" : "Remove a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/8w8e",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "e2bdc47e-b9c7-3d4b-87eb-3dcb4c5d7ee8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 437
  }, {
    "id" : "9fb0ff1b-ac8b-3e14-b016-10517b71dc56",
    "name" : "Remove a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/d6r2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"You cannot remove a running container: c2ada9df5af8. Stop the container before attempting removal or force remove\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fb0ff1b-ac8b-3e14-b016-10517b71dc56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 438
  }, {
    "id" : "51023793-832b-375d-bc1c-d390e0828ec2",
    "name" : "Remove a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/du4i",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "51023793-832b-375d-bc1c-d390e0828ec2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 439
  }, {
    "id" : "ed97b2d6-6d53-3403-add6-b9a14e3b2c7f",
    "name" : "Remove a container (application/json) - response",
    "request" : {
      "urlPath" : "/containers/5q6b",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed97b2d6-6d53-3403-add6-b9a14e3b2c7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 440
  }, {
    "id" : "c7cff8c3-ee21-32ff-8933-828a04ad4235",
    "name" : "Remove a container (text/plain)",
    "request" : {
      "urlPath" : "/containers/z960",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c7cff8c3-ee21-32ff-8933-828a04ad4235",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 441
  }, {
    "id" : "07c4b85c-b208-370e-ab9c-5cb258177fa1",
    "name" : "Remove a container (application/json)",
    "request" : {
      "urlPath" : "/containers/485f",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07c4b85c-b208-370e-ab9c-5cb258177fa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 442
  }, {
    "id" : "ad5e2427-96bf-30e3-8e5e-721b54235c38",
    "name" : "Remove a container - 204",
    "request" : {
      "urlPath" : "/containers/6z91",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ad5e2427-96bf-30e3-8e5e-721b54235c38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerDelete"
        }
      }
    },
    "insertionIndex" : 443
  }, {
    "id" : "6eaf3566-f587-3c51-bed5-7e0f6e762ed1",
    "name" : "Delete stopped containers",
    "request" : {
      "urlPath" : "/containers/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6eaf3566-f587-3c51-bed5-7e0f6e762ed1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerPrune",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 444
  }, {
    "id" : "54fdd547-4803-3a88-9a67-95714a6d75e4",
    "name" : "Delete stopped containers",
    "request" : {
      "urlPath" : "/containers/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SpaceReclaimed\" : 7579507124107696287,\n  \"ContainersDeleted\" : [ \"jqkomhlh8yeryq17sams843b03ttl0v18z25aeoxohjo466pzz8i\", \"z60o39kmmv8ot3chtr0bbbeq1lji78xerjfawrkhbxao9rjwq5w2m0yilruht201cgvwa0x74cmla7cjsq6gja\", \"21d5xd6yckhae3u\", \"l14fpx1mpyvgr6afjqwpl94a5giuhyrsnoift49geui5j29dc3f4eod6s0bleqs0usfvwv1ktsp3bx57f2yej7cz0slfhg8dnnmr43z7v27edbxxe2yp3tnhcec7o7d4tabf5tccildai\", \"xtx14w508radt1r6z1xgar5p6eeihm7yhyx1aq2bncj714s0sxh5qeen3ngkjpzdot33cmnsvy3idkhqqbb3nyo07znc\", \"e68m0tj2zhw9p6vqyimx7k7twayn68umcsh8iim17pu3013naq1vtebak6ro09avoz73cicde3uxfnuhvg36b0sd8m07s5cb\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54fdd547-4803-3a88-9a67-95714a6d75e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerPrune",
          "schema" : {
            "properties" : {
              "ContainersDeleted" : {
                "description" : "Container IDs that were deleted",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "SpaceReclaimed" : {
                "description" : "Disk space reclaimed in bytes",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 445
  }, {
    "id" : "eda17d94-2724-3777-ad39-e9d771030c92",
    "name" : "List containers",
    "request" : {
      "urlPath" : "/containers/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eda17d94-2724-3777-ad39-e9d771030c92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 446
  }, {
    "id" : "557f028e-ec71-33fc-8750-bc9a541ea912",
    "name" : "List containers",
    "request" : {
      "urlPath" : "/containers/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "557f028e-ec71-33fc-8750-bc9a541ea912",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 447
  }, {
    "id" : "6400f565-f6b0-3b8e-8d69-61aee86afeb9",
    "name" : "List containers - response",
    "request" : {
      "urlPath" : "/containers/json",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"Command\" : \"echo 1\",\n  \"Created\" : 1367854155,\n  \"HostConfig\" : {\n    \"NetworkMode\" : \"default\"\n  },\n  \"Id\" : \"8dfafdbc3a40\",\n  \"Image\" : \"ubuntu:latest\",\n  \"ImageID\" : \"d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82\",\n  \"Labels\" : {\n    \"com.example.license\" : \"GPL\",\n    \"com.example.vendor\" : \"Acme\",\n    \"com.example.version\" : \"1.0\"\n  },\n  \"Mounts\" : [ {\n    \"Destination\" : \"/data\",\n    \"Driver\" : \"local\",\n    \"Mode\" : \"ro,Z\",\n    \"Name\" : \"fac362...80535\",\n    \"Propagation\" : \"\",\n    \"RW\" : false,\n    \"Source\" : \"/data\"\n  } ],\n  \"Names\" : [ \"/boring_feynman\" ],\n  \"NetworkSettings\" : {\n    \"Networks\" : {\n      \"bridge\" : {\n        \"EndpointID\" : \"2cdc4edb1ded3631c81f57966563e5c8525b81121bb3706a9a9a3ae102711f3f\",\n        \"Gateway\" : \"172.17.0.1\",\n        \"GlobalIPv6Address\" : \"\",\n        \"GlobalIPv6PrefixLen\" : 0,\n        \"IPAddress\" : \"172.17.0.2\",\n        \"IPPrefixLen\" : 16,\n        \"IPv6Gateway\" : \"\",\n        \"MacAddress\" : \"02:42:ac:11:00:02\",\n        \"NetworkID\" : \"7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812\"\n      }\n    }\n  },\n  \"Ports\" : [ {\n    \"PrivatePort\" : 2222,\n    \"PublicPort\" : 3333,\n    \"Type\" : \"tcp\"\n  } ],\n  \"SizeRootFs\" : 0,\n  \"SizeRw\" : 12288,\n  \"State\" : \"Exited\",\n  \"Status\" : \"Exit 0\"\n}, {\n  \"Command\" : \"echo 222222\",\n  \"Created\" : 1367854155,\n  \"HostConfig\" : {\n    \"NetworkMode\" : \"default\"\n  },\n  \"Id\" : \"9cd87474be90\",\n  \"Image\" : \"ubuntu:latest\",\n  \"ImageID\" : \"d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82\",\n  \"Labels\" : { },\n  \"Mounts\" : [ ],\n  \"Names\" : [ \"/coolName\" ],\n  \"NetworkSettings\" : {\n    \"Networks\" : {\n      \"bridge\" : {\n        \"EndpointID\" : \"88eaed7b37b38c2a3f0c4bc796494fdf51b270c2d22656412a2ca5d559a64d7a\",\n        \"Gateway\" : \"172.17.0.1\",\n        \"GlobalIPv6Address\" : \"\",\n        \"GlobalIPv6PrefixLen\" : 0,\n        \"IPAddress\" : \"172.17.0.8\",\n        \"IPPrefixLen\" : 16,\n        \"IPv6Gateway\" : \"\",\n        \"MacAddress\" : \"02:42:ac:11:00:08\",\n        \"NetworkID\" : \"7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812\"\n      }\n    }\n  },\n  \"Ports\" : [ ],\n  \"SizeRootFs\" : 0,\n  \"SizeRw\" : 12288,\n  \"State\" : \"Exited\",\n  \"Status\" : \"Exit 0\"\n}, {\n  \"Command\" : \"echo 3333333333333333\",\n  \"Created\" : 1367854154,\n  \"HostConfig\" : {\n    \"NetworkMode\" : \"default\"\n  },\n  \"Id\" : \"3176a2479c92\",\n  \"Image\" : \"ubuntu:latest\",\n  \"ImageID\" : \"d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82\",\n  \"Labels\" : { },\n  \"Mounts\" : [ ],\n  \"Names\" : [ \"/sleepy_dog\" ],\n  \"NetworkSettings\" : {\n    \"Networks\" : {\n      \"bridge\" : {\n        \"EndpointID\" : \"8b27c041c30326d59cd6e6f510d4f8d1d570a228466f956edf7815508f78e30d\",\n        \"Gateway\" : \"172.17.0.1\",\n        \"GlobalIPv6Address\" : \"\",\n        \"GlobalIPv6PrefixLen\" : 0,\n        \"IPAddress\" : \"172.17.0.6\",\n        \"IPPrefixLen\" : 16,\n        \"IPv6Gateway\" : \"\",\n        \"MacAddress\" : \"02:42:ac:11:00:06\",\n        \"NetworkID\" : \"7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812\"\n      }\n    }\n  },\n  \"Ports\" : [ ],\n  \"SizeRootFs\" : 0,\n  \"SizeRw\" : 12288,\n  \"State\" : \"Exited\",\n  \"Status\" : \"Exit 0\"\n}, {\n  \"Command\" : \"echo 444444444444444444444444444444444\",\n  \"Created\" : 1367854152,\n  \"HostConfig\" : {\n    \"NetworkMode\" : \"default\"\n  },\n  \"Id\" : \"4cb07b47f9fb\",\n  \"Image\" : \"ubuntu:latest\",\n  \"ImageID\" : \"d74508fb6632491cea586a1fd7d748dfc5274cd6fdfedee309ecdcbc2bf5cb82\",\n  \"Labels\" : { },\n  \"Mounts\" : [ ],\n  \"Names\" : [ \"/running_cat\" ],\n  \"NetworkSettings\" : {\n    \"Networks\" : {\n      \"bridge\" : {\n        \"EndpointID\" : \"d91c7b2f0644403d7ef3095985ea0e2370325cd2332ff3a3225c4247328e66e9\",\n        \"Gateway\" : \"172.17.0.1\",\n        \"GlobalIPv6Address\" : \"\",\n        \"GlobalIPv6PrefixLen\" : 0,\n        \"IPAddress\" : \"172.17.0.5\",\n        \"IPPrefixLen\" : 16,\n        \"IPv6Gateway\" : \"\",\n        \"MacAddress\" : \"02:42:ac:11:00:05\",\n        \"NetworkID\" : \"7ea29fc1412292a2d7bba362f9253545fecdfa8ce9a6e37dd10ba8bee7129812\"\n      }\n    }\n  },\n  \"Ports\" : [ ],\n  \"SizeRootFs\" : 0,\n  \"SizeRw\" : 12288,\n  \"State\" : \"Exited\",\n  \"Status\" : \"Exit 0\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6400f565-f6b0-3b8e-8d69-61aee86afeb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerList",
          "schema" : {
            "items" : {
              "properties" : {
                "Command" : {
                  "description" : "Command to run when starting the container",
                  "type" : "string"
                },
                "Created" : {
                  "description" : "When the container was created",
                  "format" : "int64",
                  "type" : "integer"
                },
                "HostConfig" : {
                  "properties" : {
                    "NetworkMode" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "Id" : {
                  "description" : "The ID of this container",
                  "type" : "string",
                  "x-go-name" : "ID"
                },
                "Image" : {
                  "description" : "The name of the image used when creating this container",
                  "type" : "string"
                },
                "ImageID" : {
                  "description" : "The ID of the image that this container was created from",
                  "type" : "string"
                },
                "Labels" : {
                  "additionalProperties" : {
                    "type" : "string"
                  },
                  "description" : "User-defined key/value metadata.",
                  "type" : "object"
                },
                "Mounts" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Mount"
                  },
                  "type" : "array"
                },
                "Names" : {
                  "description" : "The names that this container has been given",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "NetworkSettings" : {
                  "description" : "A summary of the container's network settings",
                  "properties" : {
                    "Networks" : {
                      "additionalProperties" : {
                        "$ref" : "#/components/schemas/EndpointSettings"
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                },
                "Ports" : {
                  "description" : "The ports exposed by this container",
                  "items" : {
                    "$ref" : "#/components/schemas/Port"
                  },
                  "type" : "array"
                },
                "SizeRootFs" : {
                  "description" : "The total size of all the files in this container",
                  "format" : "int64",
                  "type" : "integer"
                },
                "SizeRw" : {
                  "description" : "The size of files that have been created or changed by this container",
                  "format" : "int64",
                  "type" : "integer"
                },
                "State" : {
                  "description" : "The state of this container (e.g. `Exited`)",
                  "type" : "string"
                },
                "Status" : {
                  "description" : "Additional human-readable status of this container (e.g. `Exit 0`)",
                  "type" : "string"
                }
              },
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 448
  }, {
    "id" : "c318af50-adb0-3b73-bdbf-8435e7ace17c",
    "name" : "Create a container",
    "request" : {
      "urlPath" : "/containers/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c318af50-adb0-3b73-bdbf-8435e7ace17c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 449
  }, {
    "id" : "7bedb235-4d86-301e-bd4e-4bd0cc245c7c",
    "name" : "Create a container",
    "request" : {
      "urlPath" : "/containers/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bedb235-4d86-301e-bd4e-4bd0cc245c7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 450
  }, {
    "id" : "4a2a7af3-a4ca-31d8-8771-3d5e5a0855af",
    "name" : "Create a container - response",
    "request" : {
      "urlPath" : "/containers/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a2a7af3-a4ca-31d8-8771-3d5e5a0855af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 451
  }, {
    "id" : "97e76f12-d8ed-31f3-b93e-1927968c822a",
    "name" : "Create a container",
    "request" : {
      "urlPath" : "/containers/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97e76f12-d8ed-31f3-b93e-1927968c822a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 452
  }, {
    "id" : "905b90e3-e96e-3729-ba40-7e51ef8cf1b6",
    "name" : "Create a container - response",
    "request" : {
      "urlPath" : "/containers/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"Id\" : \"e90e34656806\",\n  \"Warnings\" : [ ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "905b90e3-e96e-3729-ba40-7e51ef8cf1b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ContainerCreate",
          "schema" : {
            "properties" : {
              "Id" : {
                "description" : "The ID of the created container",
                "nullable" : false,
                "type" : "string"
              },
              "Warnings" : {
                "description" : "Warnings encountered when creating the container",
                "items" : {
                  "type" : "string"
                },
                "nullable" : false,
                "type" : "array"
              }
            },
            "required" : [ "Id", "Warnings" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 453
  }, {
    "id" : "504490a5-f1a2-3c73-840b-3893fede9a8f",
    "name" : "Update a Config (text/plain)",
    "request" : {
      "urlPath" : "/configs/wq8z/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "728088059122059214"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "504490a5-f1a2-3c73-840b-3893fede9a8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 454
  }, {
    "id" : "56e97d23-966c-3758-b56c-470a71d6fb81",
    "name" : "Update a Config (application/json)",
    "request" : {
      "urlPath" : "/configs/l931/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "6874861583174679069"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56e97d23-966c-3758-b56c-470a71d6fb81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 455
  }, {
    "id" : "c703d1e1-c9d8-3e80-9ca9-3ac5e7043f1b",
    "name" : "Update a Config (text/plain)",
    "request" : {
      "urlPath" : "/configs/7oi6/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "3595987460856673746"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "c703d1e1-c9d8-3e80-9ca9-3ac5e7043f1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 456
  }, {
    "id" : "7b92ae0e-eeb9-393c-9fd4-5fdaebab7b94",
    "name" : "Update a Config (application/json)",
    "request" : {
      "urlPath" : "/configs/we8a/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "7626046832997937337"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b92ae0e-eeb9-393c-9fd4-5fdaebab7b94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 457
  }, {
    "id" : "bf5036a1-faab-3686-a573-256b026b308b",
    "name" : "Update a Config (text/plain)",
    "request" : {
      "urlPath" : "/configs/8308/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "9014885004937837248"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "bf5036a1-faab-3686-a573-256b026b308b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 458
  }, {
    "id" : "04285bc2-7831-3b56-a38f-2a08405b476e",
    "name" : "Update a Config (application/json)",
    "request" : {
      "urlPath" : "/configs/8n4e/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "2618943548466095785"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04285bc2-7831-3b56-a38f-2a08405b476e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 459
  }, {
    "id" : "709fcc90-0d1f-343b-ab24-6be679271d44",
    "name" : "Update a Config (text/plain)",
    "request" : {
      "urlPath" : "/configs/i9ce/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/plain"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "6757122612762874808"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "709fcc90-0d1f-343b-ab24-6be679271d44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 460
  }, {
    "id" : "4e2cae62-4a9e-3921-ba57-d664d86fd26a",
    "name" : "Update a Config (application/json)",
    "request" : {
      "urlPath" : "/configs/g7q4/update",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "version" : {
          "equalTo" : "61311503867972310"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e2cae62-4a9e-3921-ba57-d664d86fd26a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 461
  }, {
    "id" : "3d38242a-8b6e-3012-a680-a7d4348f4587",
    "name" : "Update a Config - 200",
    "request" : {
      "urlPath" : "/configs/2s84/update",
      "method" : "POST",
      "queryParameters" : {
        "version" : {
          "equalTo" : "6306669313949440282"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3d38242a-8b6e-3012-a680-a7d4348f4587",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigUpdate"
        }
      }
    },
    "insertionIndex" : 462
  }, {
    "id" : "8f144a7b-59c1-3dd5-b036-f5e8739d9115",
    "name" : "Inspect a config",
    "request" : {
      "urlPath" : "/configs/9s26",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f144a7b-59c1-3dd5-b036-f5e8739d9115",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 463
  }, {
    "id" : "6943e720-6aaa-3676-b37f-727bd8d12893",
    "name" : "Inspect a config",
    "request" : {
      "urlPath" : "/configs/1kmd",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6943e720-6aaa-3676-b37f-727bd8d12893",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 464
  }, {
    "id" : "f666d024-edaa-3a22-bafd-e8fd575ec63a",
    "name" : "Inspect a config",
    "request" : {
      "urlPath" : "/configs/k056",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f666d024-edaa-3a22-bafd-e8fd575ec63a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigInspect",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 465
  }, {
    "id" : "14f99848-54b3-3775-b2cf-1175499301f4",
    "name" : "Inspect a config - response",
    "request" : {
      "urlPath" : "/configs/j627",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CreatedAt\" : \"2016-11-05T01:20:17.327670065Z\",\n  \"ID\" : \"ktnbjxoalbkvbvedmg1urrz8h\",\n  \"Spec\" : {\n    \"Name\" : \"app-dev.crt\"\n  },\n  \"UpdatedAt\" : \"2016-11-05T01:20:17.327670065Z\",\n  \"Version\" : {\n    \"Index\" : 11\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14f99848-54b3-3775-b2cf-1175499301f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigInspect",
          "schema" : {
            "properties" : {
              "CreatedAt" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "ID" : {
                "type" : "string"
              },
              "Spec" : {
                "$ref" : "#/components/schemas/ConfigSpec"
              },
              "UpdatedAt" : {
                "format" : "dateTime",
                "type" : "string"
              },
              "Version" : {
                "$ref" : "#/components/schemas/ObjectVersion"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 466
  }, {
    "id" : "3320c693-501b-370a-82b9-1829760aa32d",
    "name" : "Delete a config (application/json)",
    "request" : {
      "urlPath" : "/configs/z1bn",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3320c693-501b-370a-82b9-1829760aa32d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 467
  }, {
    "id" : "5db302a6-76b5-39fe-9b3c-96f47af97e80",
    "name" : "Delete a config (application/json)",
    "request" : {
      "urlPath" : "/configs/9762",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5db302a6-76b5-39fe-9b3c-96f47af97e80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 468
  }, {
    "id" : "44260351-5239-3921-9959-4ad8daccbf47",
    "name" : "Delete a config (application/json)",
    "request" : {
      "urlPath" : "/configs/p9tf",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44260351-5239-3921-9959-4ad8daccbf47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigDelete",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 469
  }, {
    "id" : "39e918fd-8b07-3532-b777-8f162b82c848",
    "name" : "Delete a config - 204",
    "request" : {
      "urlPath" : "/configs/j8jz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "39e918fd-8b07-3532-b777-8f162b82c848",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigDelete"
        }
      }
    },
    "insertionIndex" : 470
  }, {
    "id" : "364eddc8-8365-3697-8633-90714b84871d",
    "name" : "Create a config",
    "request" : {
      "urlPath" : "/configs/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "364eddc8-8365-3697-8633-90714b84871d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 471
  }, {
    "id" : "e4ef5e11-201e-3ad9-99ee-acee799d662c",
    "name" : "Create a config",
    "request" : {
      "urlPath" : "/configs/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4ef5e11-201e-3ad9-99ee-acee799d662c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 472
  }, {
    "id" : "8583a273-1e4f-31c2-9cd0-07c571c64701",
    "name" : "Create a config",
    "request" : {
      "urlPath" : "/configs/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8583a273-1e4f-31c2-9cd0-07c571c64701",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigCreate",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 473
  }, {
    "id" : "e80c2f17-c983-37e4-8111-daf1aa0eefc7",
    "name" : "Create a config",
    "request" : {
      "urlPath" : "/configs/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ID\" : \"ktnbjxoalbkvbvedmg1urrz8h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e80c2f17-c983-37e4-8111-daf1aa0eefc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigCreate",
          "schema" : {
            "example" : {
              "ID" : "ktnbjxoalbkvbvedmg1urrz8h"
            },
            "properties" : {
              "ID" : {
                "description" : "The ID of the created config.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 474
  }, {
    "id" : "d3c38408-77cd-30bf-960d-01500d32cfea",
    "name" : "List configs",
    "request" : {
      "urlPath" : "/configs",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3c38408-77cd-30bf-960d-01500d32cfea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 475
  }, {
    "id" : "9eda97a9-1b92-3fdf-a6e4-24f266fb8e6b",
    "name" : "List configs",
    "request" : {
      "urlPath" : "/configs",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9eda97a9-1b92-3fdf-a6e4-24f266fb8e6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigList",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 476
  }, {
    "id" : "b8e7c1e1-9014-3929-989a-259d44318c15",
    "name" : "List configs",
    "request" : {
      "urlPath" : "/configs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"CreatedAt\" : \"2016-11-05T01:20:17.327670065Z\",\n  \"ID\" : \"ktnbjxoalbkvbvedmg1urrz8h\",\n  \"Spec\" : {\n    \"Name\" : \"server.conf\"\n  },\n  \"UpdatedAt\" : \"2016-11-05T01:20:17.327670065Z\",\n  \"Version\" : {\n    \"Index\" : 11\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8e7c1e1-9014-3929-989a-259d44318c15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigList",
          "schema" : {
            "example" : [ {
              "CreatedAt" : "2016-11-05T01:20:17.327670065Z",
              "ID" : "ktnbjxoalbkvbvedmg1urrz8h",
              "Spec" : {
                "Name" : "server.conf"
              },
              "UpdatedAt" : "2016-11-05T01:20:17.327670065Z",
              "Version" : {
                "Index" : 11
              }
            } ],
            "items" : {
              "$ref" : "#/components/schemas/Config"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 477
  }, {
    "id" : "eb1acaa8-ba6f-3190-b796-f2b99eec7f64",
    "name" : "Create a new image from a container",
    "request" : {
      "urlPath" : "/commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb1acaa8-ba6f-3190-b796-f2b99eec7f64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageCommit",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 478
  }, {
    "id" : "41e54f8b-7c3d-311a-bf6d-823ed6f13a71",
    "name" : "Create a new image from a container - response",
    "request" : {
      "urlPath" : "/commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"message\" : \"No such container: c2ada9df5af8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41e54f8b-7c3d-311a-bf6d-823ed6f13a71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageCommit",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 479
  }, {
    "id" : "70db498e-d853-392b-8a79-6fba60f1ef78",
    "name" : "Create a new image from a container",
    "request" : {
      "urlPath" : "/commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"Id\" : \"5a36\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70db498e-d853-392b-8a79-6fba60f1ef78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageCommit",
          "schema" : {
            "description" : "Response to an API call that returns just an Id",
            "properties" : {
              "Id" : {
                "description" : "The id of the newly created object.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "Id" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 480
  }, {
    "id" : "b49f4117-ec7a-32ef-9891-c63499946660",
    "name" : "Delete builder cache",
    "request" : {
      "urlPath" : "/build/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b49f4117-ec7a-32ef-9891-c63499946660",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildPrune",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 481
  }, {
    "id" : "b8038e28-751f-3992-88a5-948e13a2ef64",
    "name" : "Delete builder cache",
    "request" : {
      "urlPath" : "/build/prune",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SpaceReclaimed\" : 7684806989689650832\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8038e28-751f-3992-88a5-948e13a2ef64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildPrune",
          "schema" : {
            "properties" : {
              "SpaceReclaimed" : {
                "description" : "Disk space reclaimed in bytes",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 482
  }, {
    "id" : "6bfdd3e1-0e3a-3ef5-ad07-cc54afad427e",
    "name" : "Build an image (application/json)",
    "request" : {
      "urlPath" : "/build",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bfdd3e1-0e3a-3ef5-ad07-cc54afad427e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageBuild",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 483
  }, {
    "id" : "53a7b329-3705-356d-88a0-117e89435d87",
    "name" : "Build an image (application/json)",
    "request" : {
      "urlPath" : "/build",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53a7b329-3705-356d-88a0-117e89435d87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageBuild",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 484
  }, {
    "id" : "84ced896-8298-3100-8173-48a6bccf4447",
    "name" : "Build an image - 200",
    "request" : {
      "urlPath" : "/build",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "84ced896-8298-3100-8173-48a6bccf4447",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImageBuild"
        }
      }
    },
    "insertionIndex" : 485
  }, {
    "id" : "ba0425d1-2754-3f28-8a66-69518c03a1e7",
    "name" : "Check auth configuration (application/json)",
    "request" : {
      "urlPath" : "/auth",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba0425d1-2754-3f28-8a66-69518c03a1e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemAuth",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 486
  }, {
    "id" : "d67cd726-6b66-3464-9832-95e0160f2a5d",
    "name" : "Check auth configuration - 204",
    "request" : {
      "urlPath" : "/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d67cd726-6b66-3464-9832-95e0160f2a5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemAuth"
        }
      }
    },
    "insertionIndex" : 487
  }, {
    "id" : "36615e82-f66b-3d01-9e65-fd9f1701046c",
    "name" : "Check auth configuration (application/json) - response",
    "request" : {
      "urlPath" : "/auth",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"IdentityToken\" : \"9cbaf023786cd7...\",\n  \"Status\" : \"Login Succeeded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36615e82-f66b-3d01-9e65-fd9f1701046c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemAuth",
          "schema" : {
            "properties" : {
              "IdentityToken" : {
                "description" : "An opaque token used to authenticate a user after a successful login",
                "nullable" : false,
                "type" : "string"
              },
              "Status" : {
                "description" : "The status of the authentication",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "Status" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 488
  }, {
    "id" : "93952a1a-5a04-3844-848c-40670053779a",
    "name" : "Ping",
    "request" : {
      "urlPath" : "/_ping",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"message\" : \"Something went wrong.\"\n}",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "93952a1a-5a04-3844-848c-40670053779a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemPing",
          "schema" : {
            "description" : "Represents an error.",
            "example" : {
              "message" : "Something went wrong."
            },
            "properties" : {
              "message" : {
                "description" : "The error message.",
                "nullable" : false,
                "type" : "string"
              }
            },
            "required" : [ "message" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 489
  }, {
    "id" : "fd712f24-77cf-3823-9bdd-9c83697956a1",
    "name" : "Ping",
    "request" : {
      "urlPath" : "/_ping",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "\"OK\"",
      "headers" : {
        "Content-Type" : "text/plain"
      }
    },
    "uuid" : "fd712f24-77cf-3823-9bdd-9c83697956a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SystemPing",
          "schema" : {
            "example" : "OK",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 490
  } ]
}