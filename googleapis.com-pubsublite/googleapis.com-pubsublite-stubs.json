{
  "mappings" : [ {
    "id" : "334ebe0c-0591-4bf1-ac82-f4119589f792",
    "name" : "Compute the corresponding cursor for a publish or event time in a topic partitio...",
    "request" : {
      "urlPath" : "/v1/topicStats/sm2jbw4wq6e4ac7ce5t4sp8fg5yhyibks4t4kamrlc5iqtzmzrmj7rdjbyr2dq7x2exayvz4q4r44xkkb6w4qagj2d7bsjedictj2dzs1r4w985t:computeTimeCursor",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cursor\" : {\n    \"offset\" : \"87yrqp6c7pjujaplmmqukxina8xe8v5211xwnlom4upm\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "334ebe0c-0591-4bf1-ac82-f4119589f792",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.682546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.topicStats.projects.locations.topics.computeTimeCursor",
          "schema" : {
            "description" : "Response containing the cursor corresponding to a publish or event time in a topic partition.",
            "properties" : {
              "cursor" : {
                "$ref" : "#/components/schemas/Cursor"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fac58b64-1023-42f7-a799-8c320468c1af",
    "name" : "Compute statistics about a range of messages in a given topic and partition.",
    "request" : {
      "urlPath" : "/v1/topicStats/a58l7m5x2gshcb3d0wxx4ytmqagaeh07h8kzrfkjbb1qn4bq37emmhzfwskhzqjsp5p1s6ivlf1ozvhxg7k1yk52ght5wsnad50h2ap8hxc120bi0wlseufesr3wxa3:computeMessageStats",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"messageCount\" : \"pts49tx7ljvn44ngtnr6z3waqouk6qge3d8884wrt0e8oig0baoe8bzivkf4x8fga935smcbrgtwu1l88d16wc7zfl08bc34errjp8f4bn2\",\n  \"messageBytes\" : \"h5ncfqzcqiupyzjw5ss68j06s3f95eubbvq3oc9zevo7lvgl6msqr51gw4x73c3ls7ra3cq92gwnwdu201kh8zvz5ut58nya4en2vcyjmts8kx3zjl1frbeztum7w168efljpawjm54ngeccnx58fixlfrd4qfo94fecg8m33ga8typu8\",\n  \"minimumEventTime\" : \"2022-05-17T13:07:44.682367Z\",\n  \"minimumPublishTime\" : \"2022-11-21T13:32:44.682399Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fac58b64-1023-42f7-a799-8c320468c1af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.682479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.topicStats.projects.locations.topics.computeMessageStats",
          "schema" : {
            "description" : "Response containing stats for messages in the requested topic and partition.",
            "properties" : {
              "messageBytes" : {
                "description" : "The number of quota bytes accounted to these messages.",
                "format" : "int64",
                "type" : "string"
              },
              "messageCount" : {
                "description" : "The count of messages.",
                "format" : "int64",
                "type" : "string"
              },
              "minimumEventTime" : {
                "description" : "The minimum event timestamp across these messages. For the purposes of this computation, if a message does not have an event time, we use the publish time. The timestamp will be unset if there are no messages.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "minimumPublishTime" : {
                "description" : "The minimum publish timestamp across these messages. Note that publish timestamps within a partition are not guaranteed to be non-decreasing. The timestamp will be unset if there are no messages.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95e7007a-94eb-459c-95cb-345a7f1ce9dc",
    "name" : "Compute the head cursor for the partition. The head cursor's offset is guarantee...",
    "request" : {
      "urlPath" : "/v1/topicStats/rsog17gzfl62m9dhs6w9gg06e1uzysk378a10n6nf3qt2:computeHeadCursor",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"headCursor\" : {\n    \"offset\" : \"sqe2p8cr0fp62lkv5ysyvjkvc8drv2t4kqb1kd55i5hvmpdwxe6hwxi4utueh9zzxn35na0md6geo\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95e7007a-94eb-459c-95cb-345a7f1ce9dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.682296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.topicStats.projects.locations.topics.computeHeadCursor",
          "schema" : {
            "description" : "Response containing the head cursor for the requested topic and partition.",
            "properties" : {
              "headCursor" : {
                "$ref" : "#/components/schemas/Cursor"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cffe4d49-f07a-4770-b3e5-835bca310c48",
    "name" : "Updates the committed cursor.",
    "request" : {
      "urlPath" : "/v1/cursor/9rzw5itzxkw59g34gv8wp0w9a1z7il66mrd4hbh2krm81jfmvrvc3s8cnb7f1iuyggyx2r2n109jv0gypjvmszewg2yb3b2o3zn1w5z6nh9wfvrj5yem90flx13mac8gynoy:commitCursor",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cffe4d49-f07a-4770-b3e5-835bca310c48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.682225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.cursor.projects.locations.subscriptions.commitCursor",
          "schema" : {
            "description" : "Response for CommitCursor.",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1842ea76-c236-4170-87ed-f6d407d4ddf5",
    "name" : "Returns all committed cursor information for a subscription.",
    "request" : {
      "urlPath" : "/v1/cursor/drl90c81gcxzygwop1ltma85oe3k650pdjegdsx10nuoe46qr8u0lt7kmfkxmwk4xnwtznbru7g92hdesytgwhodso0ju4wv3zdhfdxu/cursors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitionCursors\" : [ {\n    \"cursor\" : {\n      \"offset\" : \"vzus1x2ocs93uyxdlx0817sp2afn4ir0aksqzax33dayjegf0l31af02mkzjsxr2nc23fugvypw8zgvaopoyqeu2vj096bap25iyx82dz8qqb\"\n    },\n    \"partition\" : \"wk5rsuo93ka0tcbmwx5bnjsu07vdgr4juco1ll1p2hg7eazvslsofagb7fsnjdax88oedxt4vutmm5c3eqi24bi52v98zquavr15o09310n1kttguwz8imhx9gy66ihgnurzq3sldbff\"\n  }, {\n    \"cursor\" : {\n      \"offset\" : \"f9ilaxrd4r5fpp396myivp4z7yzzc59i62ouyiatkcbf6qu10jroulgw98fca9r3c1d616e8o8wruig00okjlxhqdq74qewuitz0y8b72n9nipzluht7luym92cmr4hcwo8mdoktk804ik759ev8hbpwbe7apoqt2cbrr7eznk3ooie7v6glig\"\n    },\n    \"partition\" : \"fmmuzmx3y778zm52zlktxnkn5lzrm5hdu37pwjlhdgi6suwh9o86dczatwefln858c3u1jrd8hrjyblvg4s88s\"\n  } ],\n  \"nextPageToken\" : \"2qohrofrocnhbdnxjehch5bhh02ygs5jw3c16lggjsm5i177nvys4vulph8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1842ea76-c236-4170-87ed-f6d407d4ddf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.682174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.cursor.projects.locations.subscriptions.cursors.list",
          "schema" : {
            "description" : "Response for ListPartitionCursors",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              },
              "partitionCursors" : {
                "description" : "The partition cursors from this request.",
                "items" : {
                  "$ref" : "#/components/schemas/PartitionCursor"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "34bfdfd8-e145-4a56-9e7a-b0ddb6dfb628",
    "name" : "Creates a new topic.",
    "request" : {
      "urlPath" : "/v1/admin/nyq6sud/topics",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitionConfig\" : {\n    \"count\" : \"cgjkhfogsi0q9b1qldt2xuhotsfw2f8g4cs2k8n8i1wgjv36obfy23behlgl4jxsnpqd1z9fh6mtncv234mmfw3t7nt3zvs9w3hnbbvvfpb0ykn504jqs0kpjwa6776jte17nk1nahmbzynwta7ugvz\",\n    \"scale\" : 1088131986,\n    \"capacity\" : {\n      \"publishMibPerSec\" : 1289784510,\n      \"subscribeMibPerSec\" : 814485364\n    }\n  },\n  \"name\" : \"Mr. Jacinto Jacobi\",\n  \"reservationConfig\" : {\n    \"throughputReservation\" : \"4bp811wywn8im559cma62t0nmzjuvgtx37v9iamiprrqaq2j86639a9nl504nfu26tm2k8v0ylfqtk8tvjga8llov9w0e9mthp48fqxdizck\"\n  },\n  \"retentionConfig\" : {\n    \"period\" : \"1itzwbt1odano3yxelvke5jk0k1xyy2cg1gave80lzearaauldykabyl1d6c7zel8b0pe40jn2s6840sh3cbptpawmy34x7wzals51extiwo9uppkbx4a1vtj6fxo0pd5tos001d9fyblkgmsipg\",\n    \"perPartitionBytes\" : \"8j11itidrycsfde4cn1i7\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34bfdfd8-e145-4a56-9e7a-b0ddb6dfb628",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.682013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.topics.create",
          "schema" : {
            "description" : "Metadata about a topic resource.",
            "properties" : {
              "name" : {
                "description" : "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
                "type" : "string"
              },
              "partitionConfig" : {
                "$ref" : "#/components/schemas/PartitionConfig"
              },
              "reservationConfig" : {
                "$ref" : "#/components/schemas/ReservationConfig"
              },
              "retentionConfig" : {
                "$ref" : "#/components/schemas/RetentionConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "201a5d86-d23e-4ac6-9065-1333a753e697",
    "name" : "Returns the list of topics for the given project.",
    "request" : {
      "urlPath" : "/v1/admin/o6jsa7yssgllzkqvgmlicwebx9yvmuru4iyjirbx5twfx32mc1lndfo0bd5f8sr68h1z5uekydgnfhesxcgwuw6hs28sngcvoipplocx8giz5c2l8wdwjt4nwtlqnuiyo6kpsqow68sp9rpudx/topics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"eh3ca3h1azw8hyye4t05g0c34249fhefu2k8ayw8h09huzzuygm5msmpfs78qbsaqaq5rg1q9waqaz0q1n9l0h4npkt7dj4jhdwcbxdulgp1pngdu6ug6je615awt5mpxuid1ln8r45z084zg\",\n  \"topics\" : [ {\n    \"partitionConfig\" : {\n      \"count\" : \"k8fk5afcf5gkuimpnc5v0tvg2djbixpsyov2301k4gf5fhreroaymzvm587wjf5jrayg1092oj0rd3fghkb4h0oy3wksepzkzaje2swwsd2r6az98a9l14yzzxy17nmnapeyb5mxke2wdcjnozuozfctxwutzwc54m\",\n      \"scale\" : 1818441500,\n      \"capacity\" : {\n        \"publishMibPerSec\" : 243777280,\n        \"subscribeMibPerSec\" : 1008991782\n      }\n    },\n    \"name\" : \"Kareen Tremblay MD\",\n    \"reservationConfig\" : {\n      \"throughputReservation\" : \"zc0uqlz74d\"\n    },\n    \"retentionConfig\" : {\n      \"period\" : \"w5usgluesaqoy6ia05re6lqkejkws2w6izhblfszi1y3b4e3fxhyp57harzhp1ss32z8of1ckfd8ldgsukk0l3bfrudyoek1mxppy7z9t12fu7i5mtul6e0j5uxf11qkzh7gj\",\n      \"perPartitionBytes\" : \"zh2h9ok00d5hqgbllw7r8m6ib3kyp6o5thw0p7kb6k3toc\"\n    }\n  }, {\n    \"partitionConfig\" : {\n      \"count\" : \"22lfib3z3ky0ehnmwavksslz9s3uflozug1c902o1ced5n3jmvcyz\",\n      \"scale\" : 1507102109,\n      \"capacity\" : {\n        \"publishMibPerSec\" : 1200000621,\n        \"subscribeMibPerSec\" : 1951623589\n      }\n    },\n    \"name\" : \"Marcel Rutherford\",\n    \"reservationConfig\" : {\n      \"throughputReservation\" : \"uruzvexfpsgcl57q6mdh8aqwhm7bqe3kjauhg6m1z2dxrpylk0fnu3ggtlva63fnf3tts2heivqvuygczaqw24qc6i1583l8yrddgb7jkwx3\"\n    },\n    \"retentionConfig\" : {\n      \"period\" : \"w9js786fmxt79vlmt7vft1if9qjkzp\",\n      \"perPartitionBytes\" : \"dioi66nmre3o6w26hwxkj3gug9wc9i2twso804nxq0kxcm1tryz48anybze8ieyepkef2uhnnl8l8h2wo6qxlg12cc95i8acgoitaw04cu7cp0m3qndtgjp82ap3t5dx9zpdx1wvwfum80v2skdax7pmt\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "201a5d86-d23e-4ac6-9065-1333a753e697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.681839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.topics.list",
          "schema" : {
            "description" : "Response for ListTopics.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.",
                "type" : "string"
              },
              "topics" : {
                "description" : "The list of topic in the requested parent. The order of the topics is unspecified.",
                "items" : {
                  "$ref" : "#/components/schemas/Topic"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fab79aba-f1b6-4007-a435-ad5ed19ae582",
    "name" : "Creates a new subscription.",
    "request" : {
      "urlPath" : "/v1/admin/tt64v7nvx3fbcytk0jyjqyvi95jqmuym6dc9m/subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exportConfig\" : {\n    \"desiredState\" : \"ACTIVE\",\n    \"currentState\" : \"PERMISSION_DENIED\",\n    \"pubsubConfig\" : {\n      \"topic\" : \"unbxde9ic67coiy9qn09ofpiiuu57qzif5pet9706c6tpt9dq3qw1xnpwk9eyyj1zk0853ux13v06kah8mslpw19955zo4jecn5p2csxtv3weaexn60gv8iqp253hwkuzuaoyb\"\n    },\n    \"deadLetterTopic\" : \"c4o4zdx3ar1s6k76dbu34jroxlk31btpo2l1ks9j1ronufzimbg3x4nshdh6my94i4q033m1ix81tfghhphb6tu4htu0zr5z4r36jhvjezu6me36jpbkyo3yx4hzlu47smsfp5prfc94qiodd4kt27vwhmpko3ciw5pu0\"\n  },\n  \"name\" : \"Ahmad Crona\",\n  \"topic\" : \"75opopdtx1kgbvkrlf840h51gojj8rlibubidcj529xk9zw0l3qyq2w\",\n  \"deliveryConfig\" : {\n    \"deliveryRequirement\" : \"DELIVER_IMMEDIATELY\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fab79aba-f1b6-4007-a435-ad5ed19ae582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.681482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.subscriptions.create",
          "schema" : {
            "description" : "Metadata about a subscription resource.",
            "properties" : {
              "deliveryConfig" : {
                "$ref" : "#/components/schemas/DeliveryConfig"
              },
              "exportConfig" : {
                "$ref" : "#/components/schemas/ExportConfig"
              },
              "name" : {
                "description" : "The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}",
                "type" : "string"
              },
              "topic" : {
                "description" : "The name of the topic this subscription is attached to. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "64a4f48c-2ca1-4a98-a70b-2e61cec30aed",
    "name" : "Returns the list of subscriptions for the given project.",
    "request" : {
      "urlPath" : "/v1/admin/iy5x3sjsgu6wp4djv51l9amnpixdygozrtwg2a7/subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ {\n    \"exportConfig\" : {\n      \"desiredState\" : \"PERMISSION_DENIED\",\n      \"currentState\" : \"STATE_UNSPECIFIED\",\n      \"pubsubConfig\" : {\n        \"topic\" : \"82gwq6rfaec19ajfc08czwuktxlasls2e9vamcaivzuayl9cktw71pak85lbkd1ickli941bgjmffkxfsamuxhdfw30u3vtixe8uzawi14u1cxmxe56kqhja2ce4k9dfsjuxkt06lxv\"\n      },\n      \"deadLetterTopic\" : \"73bwfkl6kcawo796cyp9kpjpw75z8vzlzsksb8mgpyju6ie8buijmyiakahrjw96bd3ehs1k7igzku5lt90xp6p2esctdsafoylp29ddjvp22oix6ar69x7ao1jj0xci5kd9qnq1kxx78b\"\n    },\n    \"name\" : \"Ken Goodwin\",\n    \"topic\" : \"x4b5eg51bvrfhszzmbtkc6spyitrw2scv3ofolt0lhenyc5dxvwr91u0x3im5bgxsx1kczqljfm3jb92lw8gb0igzrqgglo7736dlbbrly78poyvl3zuym1valttdjznm3j9sktczk59rg0eqb8q7ovevdnwlamrffp97kjr\",\n    \"deliveryConfig\" : {\n      \"deliveryRequirement\" : \"DELIVERY_REQUIREMENT_UNSPECIFIED\"\n    }\n  }, {\n    \"exportConfig\" : {\n      \"desiredState\" : \"STATE_UNSPECIFIED\",\n      \"currentState\" : \"NOT_FOUND\",\n      \"pubsubConfig\" : {\n        \"topic\" : \"ck53gcrosapmwhdlbfwao1yutz41i6o2ahcz7y1ds9m8cjapplzmjd1cwevwh81gujvkj5qofy9arkc995425wiqce3hcxsfmu4jx13ry1ea80i5x4x2vf05jdqn03ezwiqpwvs7p19yo10wqdlu058hocqpwpvi1mlwkp0zc8v9pt428985leu5yie1t\"\n      },\n      \"deadLetterTopic\" : \"0nnuv1ijjkugijptmjmh6c3c0xu97903y35lei\"\n    },\n    \"name\" : \"Sammie Kuhic\",\n    \"topic\" : \"puv3v8rbqp7ubyxm89jwtfm8evnyprzn\",\n    \"deliveryConfig\" : {\n      \"deliveryRequirement\" : \"DELIVER_IMMEDIATELY\"\n    }\n  }, {\n    \"exportConfig\" : {\n      \"desiredState\" : \"NOT_FOUND\",\n      \"currentState\" : \"ACTIVE\",\n      \"pubsubConfig\" : {\n        \"topic\" : \"anxjdd0ad8xapytx85a97wu8qnn89adpqjsu8a4i5mop9eugomppvlgf85ufj9kdt2vau89i7trpvq77vhdayar1qhf7hah04ppcexdim4btyoujgxa6vf95nzjrunarjvzklgczezjjil19nexi2w4bngkojl15z9w9mc04zfbsxhpcrl5\"\n      },\n      \"deadLetterTopic\" : \"vmyokwrediumjp5j00eotg83670am66gd4buohkg48m67zij0gvlehf9s4qmghb9j8ijujam7w8a554tdttjybxwq\"\n    },\n    \"name\" : \"Ms. Octavio Kovacek\",\n    \"topic\" : \"dpkyfum5a79idmyta5mv71p\",\n    \"deliveryConfig\" : {\n      \"deliveryRequirement\" : \"DELIVER_AFTER_STORED\"\n    }\n  }, {\n    \"exportConfig\" : {\n      \"desiredState\" : \"PAUSED\",\n      \"currentState\" : \"PAUSED\",\n      \"pubsubConfig\" : {\n        \"topic\" : \"a4pcp2kzvgjong5g5xwjfiojjiocuuygmrqoow0qkzs2u00vril2xr2jopzx62ed2csryh63ifuzphq6zalio6u71utf1lg73encnf4o27ynsrl9qa4ek7fhl94bpnw0dbfk709jwv14b200jgy76qh4203p007fzjr7f5angkpwbq80vkql43h4245d5xlo\"\n      },\n      \"deadLetterTopic\" : \"hhryqqfpfugdmo36tqimol9dwnpfkbz\"\n    },\n    \"name\" : \"Forrest Feest\",\n    \"topic\" : \"4iwboj74jdh9r0364g2um5qrb9juyna8e7i784p6hpxdyhsd1h3qjdc1rgz46cbuvee1zmn5501n371fhv9nk6f2wvh4712ggbmt0lol06epo\",\n    \"deliveryConfig\" : {\n      \"deliveryRequirement\" : \"DELIVER_IMMEDIATELY\"\n    }\n  } ],\n  \"nextPageToken\" : \"59ozf69v6kkm1uuuu8o0qazrsiet0ud0jlmdkp655qmqjqov0wl8mdxnbtanw3m73g8dlh2totpsi1yqrj5ode0o7otyf3tbd361qx072cp928j8pb7uipbgv27dd71gtq1fv1laqx2zw1ng8qzc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64a4f48c-2ca1-4a98-a70b-2e61cec30aed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.681306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.subscriptions.list",
          "schema" : {
            "description" : "Response for ListSubscriptions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.",
                "type" : "string"
              },
              "subscriptions" : {
                "description" : "The list of subscriptions in the requested parent. The order of the subscriptions is unspecified.",
                "items" : {
                  "$ref" : "#/components/schemas/Subscription"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "51e12eaf-bcf5-487a-a669-161d510344d7",
    "name" : "Creates a new reservation.",
    "request" : {
      "urlPath" : "/v1/admin/h383qss8kqfygeudzwqqjymyta3ixsg72ja1kv2ewjbcu40riy1jxbdmonffns0ygf3q3fg5qluoeqdt5isynl6nfrae309nwzab0eo8vwo4pin2bvwqwuvsz2thjy4hh3o5fnw4i7uifudi89/reservations",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"throughputCapacity\" : \"Port Marcusview\",\n  \"name\" : \"Lester Christiansen\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51e12eaf-bcf5-487a-a669-161d510344d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.680757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.reservations.create",
          "schema" : {
            "description" : "Metadata about a reservation resource.",
            "properties" : {
              "name" : {
                "description" : "The name of the reservation. Structured like: projects/{project_number}/locations/{location}/reservations/{reservation_id}",
                "type" : "string"
              },
              "throughputCapacity" : {
                "description" : "The reserved throughput capacity. Every unit of throughput capacity is equivalent to 1 MiB/s of published messages or 2 MiB/s of subscribed messages. Any topics which are declared as using capacity from a Reservation will consume resources from this reservation instead of being charged individually.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ff2ee1d0-cd81-4396-a912-4d664979b099",
    "name" : "Returns the list of reservations for the given project.",
    "request" : {
      "urlPath" : "/v1/admin/cpyadwop6bkv2c/reservations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reservations\" : [ {\n    \"throughputCapacity\" : \"Abshireview\",\n    \"name\" : \"Chang Ebert\"\n  }, {\n    \"throughputCapacity\" : \"South Retaville\",\n    \"name\" : \"Russell Heidenreich\"\n  }, {\n    \"throughputCapacity\" : \"Thielside\",\n    \"name\" : \"Miss Keith Heidenreich\"\n  }, {\n    \"throughputCapacity\" : \"South Tyler\",\n    \"name\" : \"Jocelyn O'Hara Sr.\"\n  }, {\n    \"throughputCapacity\" : \"Koepptown\",\n    \"name\" : \"Tiffaney Johnson\"\n  }, {\n    \"throughputCapacity\" : \"Alfonzoberg\",\n    \"name\" : \"Andrew Dibbert\"\n  }, {\n    \"throughputCapacity\" : \"Willmston\",\n    \"name\" : \"Shanell Prosacco\"\n  } ],\n  \"nextPageToken\" : \"68hhjlcdfifgtjykuds6zzhgdwct0dqfc2z80k5js57rqgmy9sw4gwur2xwf24xfx8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff2ee1d0-cd81-4396-a912-4d664979b099",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.680613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.reservations.list",
          "schema" : {
            "description" : "Response for ListReservations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.",
                "type" : "string"
              },
              "reservations" : {
                "description" : "The list of reservation in the requested parent. The order of the reservations is unspecified.",
                "items" : {
                  "$ref" : "#/components/schemas/Reservation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "39597632-ad26-4c7f-9dfd-906c6b889e39",
    "name" : "Performs an out-of-band seek for a subscription to a specified target, which may...",
    "request" : {
      "urlPath" : "/v1/admin/An+O%27Connell:seek",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mervin Balistreri\",\n  \"error\" : {\n    \"code\" : 972365229,\n    \"details\" : [ { } ],\n    \"message\" : \"Ut facere harum. Vel deleniti dolor sit. Doloremque praesentium quasi reiciendis omnis distinctio. Aut officia odit.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39597632-ad26-4c7f-9dfd-906c6b889e39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.679938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.subscriptions.seek",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "726fcd48-6f3a-4044-b915-8ea46eda2609",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/admin/Mrs.+Ruthanne+Rempel:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "726fcd48-6f3a-4044-b915-8ea46eda2609",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.679723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ad71326a-e6d9-4f5f-bf5d-9c267d6832d1",
    "name" : "Lists the topics attached to the specified reservation.",
    "request" : {
      "urlPath" : "/v1/admin/Scottie+Franecki/topics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"4earyxywyww2hsuok1jutel3w7s8dkkd2lpalw5d5ec8u5jzcvqr\",\n  \"topics\" : [ \"xu4w9psskuohbakby6xo6d2lps4m94jebucuqqd9ph3lqg4laewypni9zwhz9kwolgkpqmkt3fvfkin3vr1geui96qhwm96eecrzv1u2u5chl9lf6d8y2a2xp5o6ohqa4sravjyydnyly37cae97q0rqeml9ozngklaix8g59w84m287lhw8j6s\", \"z9vi5vdirsvgvwv60extt31z1j96yhe\", \"xsta496exwsyhmtgx6f6ps8cix966dgvvw0sp9n411q8r9dwoknq\", \"d7yrms0ljg7bim4bv18h7n31ltny0e4phk7d4ex7dwnsa95agncws53ana1kh7hjj7k25bm44norx8wdu1q3dq0rs1yys\", \"osnpbxs030unm\", \"07xcew6iazmm7eo8bd5p2j8hh70ybepy58tp81gunr4td68k07b3seop37kg1fz55xya2j3gons9vlxjb7vfit6yzor24pxwjsf6vkek98st9zzk2rqsa7qu5g6\", \"tctovx3ef87gj8qhsi58p71klc4858nl89rz74pjldm4ggki3ppw9fqyy3320lqssrhhbal0a31wujpnh0iduf367moxqmaslfmtfxc85sysewtcve42aysa591m357vcs7s3ahmavf3y015obp3bmhsbhjs709norwpjlboe4hhyzfac4jdupy31d98qzda\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad71326a-e6d9-4f5f-bf5d-9c267d6832d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.679646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.reservations.topics.list",
          "schema" : {
            "description" : "Response for ListReservationTopics.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.",
                "type" : "string"
              },
              "topics" : {
                "description" : "The names of topics attached to the reservation. The order of the topics is unspecified.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d50720d6-75e9-4552-ad68-073c03703e43",
    "name" : "Lists the subscriptions attached to the specified topic.",
    "request" : {
      "urlPath" : "/v1/admin/Drew+Abbott+MD/subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ \"ei63m10v0o1kskcmtnp91b2ikfcmf0iyvcx0svcfre7es1g88aps4wxcrz1ejwjrg179tovg41hyoarfdi61tq84yg125zl6at9bq43dau3r940gaqhjfee3ikf1u5nmazxoq8kjn8eh6ekr18s8uesx5tbj18u0icp\" ],\n  \"nextPageToken\" : \"ygdsu42vyeym0v4hw16etssl8ohddou1gtlftlvkncayq9bcfa4abhe69npaguodyw1u6obqhggzfl1l5nktoa8ylyt7hu50bvuddwxds3jtdws\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d50720d6-75e9-4552-ad68-073c03703e43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.679492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.topics.subscriptions.list",
          "schema" : {
            "description" : "Response for ListTopicSubscriptions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results.",
                "type" : "string"
              },
              "subscriptions" : {
                "description" : "The names of subscriptions attached to the topic. The order of the subscriptions is unspecified.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0a71c9fb-d040-4856-baf6-5200c2e78e7c",
    "name" : "Returns the partition information for the requested topic.",
    "request" : {
      "urlPath" : "/v1/admin/Quintin+Hoppe/partitions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitionCount\" : \"fyxppj3h3xfvg7c96jnet0dgcsnmsdxgp6f16nft6jxxp3d4wbxwk373nx681vahbpr2lgiw5cag60lwflct1e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a71c9fb-d040-4856-baf6-5200c2e78e7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.679367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.topics.getPartitions",
          "schema" : {
            "description" : "Response for GetTopicPartitions.",
            "properties" : {
              "partitionCount" : {
                "description" : "The number of partitions in the topic.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "58a0f3af-ca8f-4a99-b42e-23337df9f5ca",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/admin/Ruben+Marquardt/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ina Schuster\",\n    \"error\" : {\n      \"code\" : 1270445526,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ut dolores earum incidunt optio tempora architecto iusto. Qui fugit et pariatur consequatur quam nulla. Sequi et harum. Necessitatibus laudantium et voluptatem saepe velit.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Dillon Kihn\",\n    \"error\" : {\n      \"code\" : 1460501893,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Eum facilis et repellendus quia. Perspiciatis suscipit similique dolore. Ut omnis quis provident. Non eius iste consequuntur rerum voluptatem corporis. Error cumque enim repellat non.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Elmo Mann\",\n    \"error\" : {\n      \"code\" : 33417056,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Quas vel distinctio. Ratione totam aut voluptatem rem eos consequatur. Harum modi est. Tempora voluptatem consequatur velit nihil. Facere sit non.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Wehner Sr.\",\n    \"error\" : {\n      \"code\" : 2045999247,\n      \"details\" : [ { } ],\n      \"message\" : \"Consequatur et et ab commodi est vero. Natus totam nihil eveniet. Doloribus velit eius aut consequatur ut amet commodi. Magni provident adipisci illum. Numquam laudantium officiis ab.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Nakesha MacGyver\",\n    \"error\" : {\n      \"code\" : 1633697340,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Qui dolor rerum soluta quidem quo. Facere veniam quo fugit libero. Sint occaecati delectus quis id. Explicabo quibusdam est. Ad aliquid illo voluptas recusandae facilis.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sterling Wilderman\",\n    \"error\" : {\n      \"code\" : 1572937012,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Et et sit. Velit ea dolor eos nulla distinctio. Voluptas autem fugiat error consequatur debitis dolorem possimus.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Genna Paucek\",\n    \"error\" : {\n      \"code\" : 1050619397,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Laboriosam quas asperiores consectetur qui et. Tenetur est aliquam. Voluptate aut amet aperiam et.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Shera Marvin\",\n    \"error\" : {\n      \"code\" : 1576876562,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Repudiandae ut deserunt voluptatem labore dolorem consequatur aliquid. Animi aut qui sed veritatis et aut. Placeat debitis occaecati et consequuntur perferendis et. Aliquam culpa amet accusantium aut.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"gyf8iwn2mwo6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58a0f3af-ca8f-4a99-b42e-23337df9f5ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.679255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "72d10995-315c-4799-be9f-cf099263b545",
    "name" : "Updates properties of the specified topic.",
    "request" : {
      "urlPath" : "/v1/admin/Renea+Larson",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitionConfig\" : {\n    \"count\" : \"9r9\",\n    \"scale\" : 1942624260,\n    \"capacity\" : {\n      \"publishMibPerSec\" : 1630170895,\n      \"subscribeMibPerSec\" : 704138426\n    }\n  },\n  \"name\" : \"Phillip Jakubowski\",\n  \"reservationConfig\" : {\n    \"throughputReservation\" : \"ir4pxiqb7gkb0qipvbkj1zhfpswkj4k5lurwm3gqp1x87gc6p1aww4b34ihx85adgs9qpy1g2iri01vubpluci93bfjxmvfvtmudugewt0f9gdeqsmken40w7nb0xi5qjnh4wjdee2cp6wd5gl40yutpmt5hoexyjo6yh90fxhjl4m38o5ocx\"\n  },\n  \"retentionConfig\" : {\n    \"period\" : \"p3jp116wskpce66q5y902axkap92wc0jg2bfercmwqcrinzd4oc03ihciskmp8j4rwa14pv6t6c8wk1w991yokfye8mwpkhqfzis3wlhkm9p47tblb86rw7r5sfuin7u4kdiv70rcdb8ev5ejgo8hfeu3eua6i8spfopg6o3qm90uxr48\",\n    \"perPartitionBytes\" : \"19a2m2fzi4otwby1v5czvb2ymm673952jf4jpt68h96sw2296gsv8sp4gh4x8aontky0tlac43h7\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72d10995-315c-4799-be9f-cf099263b545",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.678235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.topics.patch",
          "schema" : {
            "description" : "Metadata about a topic resource.",
            "properties" : {
              "name" : {
                "description" : "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
                "type" : "string"
              },
              "partitionConfig" : {
                "$ref" : "#/components/schemas/PartitionConfig"
              },
              "reservationConfig" : {
                "$ref" : "#/components/schemas/ReservationConfig"
              },
              "retentionConfig" : {
                "$ref" : "#/components/schemas/RetentionConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e9d1aa0b-3f41-46f1-9ed5-28ca661b6b04",
    "name" : "Returns the topic configuration.",
    "request" : {
      "urlPath" : "/v1/admin/Bernardo+Swift",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitionConfig\" : {\n    \"count\" : \"1kev2khrxy6nexfadoxje0d8wkdo29miyhhoecvifl87sf\",\n    \"scale\" : 107456938,\n    \"capacity\" : {\n      \"publishMibPerSec\" : 123931518,\n      \"subscribeMibPerSec\" : 1419978811\n    }\n  },\n  \"name\" : \"Joe Murray\",\n  \"reservationConfig\" : {\n    \"throughputReservation\" : \"g56mhsuffjvw3zql4ep6jah9t987gktibkttmns\"\n  },\n  \"retentionConfig\" : {\n    \"period\" : \"ntyydm5m5bwe5qss02svetq1ezdq5x7xt7iymemlpamvrs4uok80tb151cjefdtvld3cso4lc3tfoiyqgwfhvv3hs99bpvfi1ww9k5rp8xyawwtteb3n9bwca9pejetljzpkd6a3f0wiqa7943elb0zmpphfmonk53qb49e3n5j93kiow7n00yhsw05dinof5\",\n    \"perPartitionBytes\" : \"atdkrhjjgcabhvmd95nh8v84hyc590rp7kssj2dxpy9yb0m6g1ucwar15kwho3g7s7ek9cyqlli6wtifa4bhw5zvq9xl4nrfoqibgtzqn1cez69fzvoskwphy0ks84ohsgg3ivagk5l82hlv7llps4jorew91vgsm1h6hs1wimlerkt\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9d1aa0b-3f41-46f1-9ed5-28ca661b6b04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.678033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.topics.get",
          "schema" : {
            "description" : "Metadata about a topic resource.",
            "properties" : {
              "name" : {
                "description" : "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
                "type" : "string"
              },
              "partitionConfig" : {
                "$ref" : "#/components/schemas/PartitionConfig"
              },
              "reservationConfig" : {
                "$ref" : "#/components/schemas/ReservationConfig"
              },
              "retentionConfig" : {
                "$ref" : "#/components/schemas/RetentionConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1d4cec84-e9a5-47ea-a8e8-3c361befa02e",
    "name" : "Deletes the specified topic.",
    "request" : {
      "urlPath" : "/v1/admin/Alissa+Walker+Sr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d4cec84-e9a5-47ea-a8e8-3c361befa02e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:44.677737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsublite.admin.projects.locations.topics.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}