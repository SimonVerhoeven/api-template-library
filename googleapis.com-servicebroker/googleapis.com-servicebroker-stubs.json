{
  "mappings" : [ {
    "id" : "398237aa-a123-457f-821b-635de25ec80b",
    "name" : "Returns permissions that a caller has on the specified resource.",
    "request" : {
      "urlPath" : "/v1beta1/e1h47gwpg2852ewlq3mdlc37ayju6hk3on9hgty1mct5h8fm6eo5o7m24kqluianaf4l2g2cnkfoyhca17xed2oerb8xw499j7e33w06xzt6o51vz46brpzsvblfiyhd99484eszrokg6f1rlc204wuynio22d:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"mw2fn6m6ejp400q6j7dksajqizopyueuq6vkykmy3bnnp599rrehtmjkpqk4e1zbb9txpo2yt13rxvl5le5beajkjk46wxms89urahgngxkkhl4f1cv10m8k\", \"a37dg9ic07sxmrn1n1f65a18r2ot5e038dnbe2lv8nmr9xjxs5a9rz1du2d6zcl7g8uzwdznntqx8jursf0f1pp9vmyh7rz8q2yl47vfa3tanxcv6rey1s2vd045usaokwn9sn50grfxuql9g85wp76kl5amyefo3ivbe5qe6bzc56y46wmzjiw4ypms598vdc0\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "398237aa-a123-457f-821b-635de25ec80b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.852204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "c3dac6d3-1ff4-4fcc-a750-81af5657fe3f",
    "name" : "Sets the access control policy on the specified resource. Replaces any",
    "request" : {
      "urlPath" : "/v1beta1/hv63kspxh0k5h6fobm4mdl1dtzdfpxbjgmq4fix3wubqlvrf1w0wpkbuas6trno6i960od7xnozwzejbw9gfwch2d1xey4mg3spvit2uqgve0y0kprv4jw3mtdn6u9l9wz8e25fv90jkrkp6akmalaxxw3ffqx5hzi14suq8likut39x57vo3iyppplb3op7mx7:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"vgdsh1b3wlq71ai3krmfwen804d6tlga11ldqbo6vgm4z83xjaeb2xd7xvw8apf662wh3fgub0p4js1zg66b3btg9xizyvt0byjich81swlfgg47mjcumie3c9ln5ya\",\n      \"description\" : \"Laborum qui ipsum. Ratione ut non voluptatibus exercitationem dolore non. Omnis adipisci ut voluptates officia.\",\n      \"location\" : \"ys77b9aphdhkz7j3bxcjncqv0hryp7n61pfucd2d43oin4956kvg2ecbfbnyeiuwibu177f2nob9u3ih6i3f116e7w1q3fqr5a4aen2ghg237lhvek05egbhdvyh1\",\n      \"title\" : \"Ut saepe autem fugit fuga non facere aut.\"\n    },\n    \"role\" : \"fh1xz75cr1icshxblbrk6qnbnpx3cry0b6crwq22hu9ozpf5ritgv9rmcacdb579899mfp2fux038psn0trwv50npgv7b0ud1xtsm4p0\",\n    \"members\" : [ \"fryfiw159mbjapznzfbjtk5awvp9zauy1zrcbr2wtbvp5dscloemytgmlgfmbrluhq85lnrq0ot35ku8s3a2c2t2wj1qsprfcs9q9lhxkmst95ers29wcyly\" ]\n  } ],\n  \"etag\" : \"velit\",\n  \"version\" : 301934395\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3dac6d3-1ff4-4fcc-a750-81af5657fe3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.852126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1__Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "cfca93b9-8ea3-4812-bbf1-0105c6d3309f",
    "name" : "Gets the access control policy for a resource.",
    "request" : {
      "urlPath" : "/v1beta1/vfbkdhjq2p229qj0tr6p7pw8j6fkm8qamjxfv9cwz0u6qe4kw0c4nh2ml7q43kcbli83zpoe3vlj9vzrcn6unfqyx9uchipsbhp4g5lyli7v3wr7ha3yjetigeusd4ll:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"kcr5ocdxs00083po1pfiwgz76s8z0hke79agy\",\n      \"description\" : \"Omnis accusantium aut nostrum. Dignissimos magnam eos laboriosam. Quos earum placeat tempora. Veniam placeat et rem. Ipsam unde nihil.\",\n      \"location\" : \"knpt3mhx0cyuawnlb19p\",\n      \"title\" : \"Optio accusamus vel impedit praesentium dicta laudantium eligendi.\"\n    },\n    \"role\" : \"jx3f93olia6arxpkqpatrjwacxmkkyyh38s30kpwc1ry741b1wwdnlunb8y8m19iq94o5owh5arvluozobj0dvjk8bwk5m9vn47uidwnqh87hviysebhr\",\n    \"members\" : [ \"8mby09bvh10q2bz3ksguvs932gpj5h0s1ldur9r2\", \"bzmr61ruvhwl2iy5thza4xgnq1pzqwkjr6dyqf8ktnnbqai521drooqepm16l0pjavg76e2ujjw0m6sfowml9ie8fvp5r293kic2x41heeng3rk2n3e6761d4h8q0keqmyhzc3p890b2pimugt0o8sn8qni7ghi1qgievdyv4phkniu8q719ep0lrz0\", \"9dsuoerx5vpd2a1bxzkyafzbqhzvfp\", \"uiap0uhal8xy3qe98mxzok47qwohiavbb2uc543pz8d0wo5osijnnhy0h99khj\", \"wxlo7mni9ov1lruvnm7dtubksjzz4kce5r6h5jpxjm2jvkuzuaxzx3wqshkggkfkyl6h4qu6zbdh7ox36ojyjeyo3cj847gbex95f279vlozbq5hnanvw7h9dzbdmw\", \"3c9emmx9iymtn4lxurlefvpqhbze8vdn5dkcjbwvlxit2yjsweikqmqe1cmdp88uloxj01y8ws98ptkjs2sxaoz6g2eog217hu0rtgf9bboopulvpv60c5\", \"fkm8g171qp882m1d7xnz8rw49np2btiiip0uu91wmt0ti5b8q6rbdn7go8ex00f6072tm2qwe7hf5m9dcytpu7fi60enz4mh2edze1lhwnsiwuus4xthwqz74d1tr1bxdi42rt8jyh\", \"1l9sepwnec03v9gj7vefy9z184qsph5t9r5bj36lxkcyrm1wy727v0oy8mtd34w67yr5cxoyoyfmzdy63m3t6a7etocxfg6q6ejbu4604xo6luqqt37przlbb2dvz3oaz65x\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"by34tbtttfqtpf3pvopskscsrua416y7ft283dschmw4pk9nts7scqshrdrahb0dufrb82pfha5a16djxuopylcw0yd9qy0n7mircshbkqdbxy58o1pfllxmarbm6t5tqkmueav077cva6w7p\",\n      \"description\" : \"Nulla vero rerum quos cum aut adipisci. Voluptatem et quam sint qui odit. Voluptatem ut saepe nulla eaque. Nobis dolores sint quis quasi.\",\n      \"location\" : \"ebfg8cvvqqbtf94ewi2d8u73z4ykqjrqv62kezhs1f621na93249nf\",\n      \"title\" : \"Ut delectus veritatis sit neque molestiae.\"\n    },\n    \"role\" : \"wix7dom5bl4z0blb1vdv5rrvxnzfsr376fd1dzc1bazlrfbw2dkuix0dvm89euofbg1orcxq84vlx9und3ief6qik0\",\n    \"members\" : [ \"f1xf2085f2szakgej3l1pxbdb0eht2gtxfiby3y620faa4h4sv1cappdmntmv5lg5vvb9d99o9kdbrkl15c50p2561chftevc70dswpufjywjt95z4dvgk28ocym9934i2\", \"3ngrj4d6xbali2x2hxs4elwhj5muyg60u342op3mvtpuj09hz137ruqh1hdhv74qxcvhppn0hsw42zxz3sfyx32ug4d6wlfxj6gm2xr8sdbhqexn5lgj26fev44toulclldb7xq1zsiv\", \"y5wwerxxf11vyb8uh949230dlkf5k4r77fd4g33xg6utgxhpgtig580cmwjmlz1pc7tq5qaseutb9igsoxxn59u9atri\", \"ivr040q18lgkxx070grgdk\", \"kh9t13b7gdkdhjjyzvj7kd4uhzxk9w1771rlp8k7wdbyeyro3qlrfyqbb8lty2nsv3azdxk6h41v\", \"bn84ixnnwx9ryxb0lox6y76flzivnp580uxd7m4le50swupj3odyy9fbxa95xlfbhf5737z483sc\", \"taujgyzkysyw1za2cs29se05f31w99letf2t87czda0ibc52suhhf3hny2x9ma3t73m5zt39o0rqjr4g9r3ssnjc9w526znn7cv1zww7dvk107jg90njwphh2\", \"jyz30loyccpqo3pxk8y48ldfa7zxm8576qg4o545ljakpgffhkcld9lskyjzdyjco04ze3odtlz38kh308zl9y8dkbm5tqwl433uxnvjuln0x88qrbrpgjqghbq2t6za73tu85iep7cjteyfb63a6fgvgdkrdvywht9r\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"wf6\",\n      \"description\" : \"Expedita cupiditate earum et tenetur voluptas officiis. Accusantium aut consequuntur aut nesciunt eaque quas. Omnis velit qui fuga nostrum iusto doloribus animi. Aliquid ipsa quibusdam autem reiciendi\",\n      \"location\" : \"x6qi1k1fbks5ui0egk8vgkj2188qz9knra2a5001acrro1dn9t6j7vjamcp35n\",\n      \"title\" : \"Quis sequi ipsam non ut quibusdam in quidem.\"\n    },\n    \"role\" : \"ppda4xx2893p28dbxm5krtue4woxr9co6p8hszhxmieyyz2xgzvkchatdkvl0c0hokq321hhb6e6pgzmnjalo3zrzh8z6ng2d4jvfg0eilh6cmxkahui57x8hjree6tbnnjyhon8ovk9auo44mn3rjqsszbb3opjvku3qceuthgczrzy\",\n    \"members\" : [ \"s6l8e134kv34arv8qlnaq9co7ysosyjw925xfw4az5g1jetlpua8qdhhaprr32uwjlkkf6guyutl48nppk3dq6hpf2dpygrh\", \"ortqukkxyfpkka5g\", \"lfe8a5bt7cspkw9wiu1tr9wzepu6ehi5pwxb1l2rrwcwxpi6p4nn57x7mppnx71wt1jwmlmucw\", \"mhvt3yjxm7k7djf0lah2jntyddxgmdj2fu5yh5agk4gpv53tngo822vokyfm1bzobj2yf7taeqlzmkcte98s8gfxn7v6sga6mxmudgqx935xho9n359s8if3ng8oa3q65np1jx39dpx0mbq4drm\", \"dx3geks7uz2fea0rhdj9q1aakjehdtsrpq5hv31twz7szht91urclz29ggkojqr3msdpe4qjnb4dserwrrjf8tdr2jckrd6he8at7w8caxnywrn6bwwv0zrxge8mctw9zaavnm6pqaeqbn5mhoh11hf\", \"iou0t2a1399evbwkk7rs\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"x7blot58ut7rg9mz0n1k74a724o2kmxllb4rnjv2uln4799n6fhs42270a4vmramis8ss5aq0t095w2lj9zk9sxzyfzpl2fi4xtkm6ya80n5p48lzyo0y8vmt3md8r07zq62y9zwmou20vorehypi4rg8fg67m\",\n      \"description\" : \"Voluptas quidem qui numquam. Eaque earum cum tempore voluptas perferendis inventore qui. Error repellendus et suscipit.\",\n      \"location\" : \"m9dr3tqlgrq74eda79x3txa7b5nmac1stebvp44ov6mtpu0w2rjnbgq8s38z9zzm92qpdw4o6xw6lhy7s2of2m2atck88elnvldv7xtyb0w1dae73mvt5s6yjaw6keg3b7mrvkg5mf1ajd4ckr2frxo\",\n      \"title\" : \"Id similique et aut quos ipsa.\"\n    },\n    \"role\" : \"xxbdw3xa3no2v7zs2j1qo8oiapf0fsbbgb\",\n    \"members\" : [ \"11h69denc1luvm81c8vo3d5ule19gvqpp8orbwjz9ye18svsvkqdcbbmw408uq084yfynfsw28elwo2hj1gy03ct5xhzwju8rnx9xl2yk54rao3ktfi49dfv\", \"ixu12tghg0okzysistqbgdwtkkhv5iasu3jztufgeqo7zvow906fkxceaxgy29zv97udni1kee7qnm3tarocxuonqqk3yb8fxh6abm0matvzz9shbgmi6abs3jnjas3gg8j3ea13wnz0m1o4wdc37jf\", \"w5k0f4y5c0d4jhbq7gl1ipmxnbqv5p4pdi61ngkc6nnji05p49rd137ibrvxyrqq2k20u5odqcpx9tlbrlmvhwqwjuejgcdxc7pgp3tomtm1gs3c4rma6sd5y07mtygxy9i9mebwdpkgf5o\", \"t6vyd\", \"250pqgympj3kv21ptg3e\", \"1x0jgsge5q4vuxiowyomx131ym0knkf81eb7fjeys8fkc4269rlbvrdd5h8j392yt0iz8bn2gcgpqmi51b8qou5z3bb4gyvcdjqbbdn8hqa0srpujqqon0\", \"c1kfnukzatgk5vwa\", \"xr490gl6qgquf2gytw0bxt6aa2op8uqu3efx07eut5rptkhm4i4hjt86xlmn7pruu92e6gyraty2zt63ug32jsa5gbngndx2o2ukvmokbeeoglavuttxb3uyadjki51634u9viivyq8bwarshct2vhb333fb6yfqifnbmznyio6o4zb7pf3t\" ]\n  } ],\n  \"etag\" : \"uuuut\",\n  \"version\" : 1373847727\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfca93b9-8ea3-4812-bbf1-0105c6d3309f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.851913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1__Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "94941ea5-a07c-4706-934a-6b7757af8629",
    "name" : "Provisions a service instance.",
    "request" : {
      "urlPath" : "/v1beta1/qadnfx0ctyhlk9f8004gnkkbnzw/v2/service_instances/7r89",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"description\" : \"Qui tempora debitis. Sed repellendus ea. Quia aut labore accusamus ut. Quia explicabo ad.\",\n  \"operation\" : \"6gh9gajlqvgx1rnr3xm8upgzmtmz3km4xj54tw0nt9qp71zc2q4vn7k18aot7z42ereu2vfjyt4petbtd20gtdb1q30ce23akhaq78cqykvoqgq2k2uwh2rxooz0c23orr643bj9c43ff6wymdhqbf7anhdm96wogkpxcv9a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94941ea5-a07c-4706-934a-6b7757af8629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.85122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.v2.service_instances.create",
          "schema" : {
            "description" : "Response for the `CreateServiceInstance()` method.",
            "properties" : {
              "description" : {
                "description" : "Used to communicate description of the response. Usually for non-standard\nerror codes.\nhttps://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors",
                "type" : "string"
              },
              "operation" : {
                "description" : "If broker executes operation asynchronously, this is the operation ID that\ncan be polled to check the completion status of said operation.\nThis broker always will return a non-empty operation on success.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "84780a43-58bf-4299-9791-504204b73bb9",
    "name" : "Lists all the Services registered with this broker for consumption for",
    "request" : {
      "urlPath" : "/v1beta1/nxdm2yx5lolu1znsd22mjglus6w5a45z7eb4daca4n8g0qiw6l7k6sqmokr2j8tbmj2ums1blxcpurnghf5/v2/catalog",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"3uej4jd715uum3oaehvqsus8b4y3ig73nznyvz2fjd9exnrahtuf3hu1g3p31sydrn3r8nxibch50wxare6djto6zb3zp79j7mcent32eftfuhv9i3sqnvnzcmn7efmo6npix7wen5b83yozv9o371ipdtfx4hht96\",\n  \"description\" : \"Cum rerum id aut dolores explicabo et. Quia voluptatum occaecati veniam rerum est sunt et. Aliquam asperiores dolorem asperiores voluptas et ratione. Necessitatibus voluptatum tempore et qui et non.\",\n  \"services\" : [ {\n    \"bindable\" : false,\n    \"metadata\" : { },\n    \"plan_updateable\" : true,\n    \"instances_retrievable\" : false,\n    \"plans\" : [ {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Khalilah Johnston\",\n      \"description\" : \"Beatae non dignissimos modi. Voluptas error quaerat sapiente sunt quis. Et voluptate rem. Sapiente explicabo sequi voluptatem magnam eos.\",\n      \"id\" : \"kusy\",\n      \"free\" : true\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Jeneva Hessel\",\n      \"description\" : \"Aut dicta voluptate ea consequuntur ipsum. Et voluptates ut doloremque. Provident aut architecto error dolorum.\",\n      \"id\" : \"wo6c\",\n      \"free\" : true\n    } ],\n    \"name\" : \"Kathleen Vandervort\",\n    \"description\" : \"Ut commodi voluptas odio consequatur voluptatem architecto qui. Aut eligendi quae veritatis deleniti harum facilis unde. Repellendus iste sit.\",\n    \"id\" : \"x8h2\",\n    \"dashboard_client\" : {\n      \"id\" : \"v525\",\n      \"redirect_uri\" : \"https://web.example.mocklab.io/889425\",\n      \"secret\" : \"qplflpbvp9fomrjhbf8qhmsfkhupucuymjdk58qs9k7dagggmtytvpkn0hiont2xzial310eyht09ns966mdixx38g6bprgs0anmc898\"\n    },\n    \"binding_retrievable\" : true,\n    \"bindings_retrievable\" : true,\n    \"tags\" : [ \"xjzh8nkhojtp7q3fzk33r2d45kbfxhb55rq162rulz8i8tz7o8w12mjzp\", \"6e97ojnyvkm7en3m72nwcmuz6r085iqv0usjsms5tizu1ensq89xrlwwvqw6xh9sgzs776kw1kpzxvzdkwy18yrg0cyrh7266rfcj2jedmhaqoe83xy4kqvfbkg95xhc2z7moapk3ey7179elojum4\" ]\n  }, {\n    \"bindable\" : false,\n    \"metadata\" : { },\n    \"plan_updateable\" : false,\n    \"instances_retrievable\" : true,\n    \"plans\" : [ {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Myrtie Schowalter I\",\n      \"description\" : \"Neque sed odio occaecati modi voluptatem. Non quae enim sunt sunt sint in fugit. Esse iure aut laudantium in voluptatibus.\",\n      \"id\" : \"brv6\",\n      \"free\" : true\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Ms. Noah Towne\",\n      \"description\" : \"Tempora laudantium distinctio. Consequatur iusto iure asperiores quibusdam rem autem. Debitis voluptates ab doloremque. Natus quisquam facere esse doloribus dignissimos adipisci.\",\n      \"id\" : \"2447\",\n      \"free\" : false\n    }, {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Maximo Harber\",\n      \"description\" : \"Sequi sed consectetur. Iusto velit tenetur totam. Provident culpa quasi consectetur molestiae a aut. Fuga omnis incidunt ex delectus cumque aut.\",\n      \"id\" : \"43rl\",\n      \"free\" : false\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Jonas Jast\",\n      \"description\" : \"Eum ipsa quibusdam doloribus quas veniam id. Praesentium et omnis. Rem cumque quibusdam incidunt ullam ut et voluptatem.\",\n      \"id\" : \"3yat\",\n      \"free\" : false\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Natividad Corwin\",\n      \"description\" : \"Est suscipit assumenda iste veritatis atque natus nobis. Fugiat officiis debitis. Eum modi nisi quia dolor fuga. Eaque enim tempore reiciendis distinctio.\",\n      \"id\" : \"6j82\",\n      \"free\" : true\n    }, {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Concha Stokes\",\n      \"description\" : \"Magnam temporibus enim ex. Esse accusamus dolore excepturi voluptatem. Dolor accusantium a aut. Enim quia ducimus soluta ut. Vero necessitatibus et vel nihil.\",\n      \"id\" : \"d71v\",\n      \"free\" : false\n    } ],\n    \"name\" : \"Cameron Cronin DDS\",\n    \"description\" : \"Inventore qui in et dolor et aut. Voluptatem dolor magnam sit sunt voluptatem. Unde iusto qui quos eos eum vel.\",\n    \"id\" : \"84r5\",\n    \"dashboard_client\" : {\n      \"id\" : \"o67k\",\n      \"redirect_uri\" : \"https://web.example.mocklab.io/151988\",\n      \"secret\" : \"5j8xy4wres95gjz790d4yxh3kg3j4mf23a88s3vni1t34mgoayt42dc0px17l6w2kzga7gs6gveuakmm4r3eddtivfbe5gn4kzlgn8dp77d2qijuy1gtyl332fsnysc1xw267i1dcvimg85ipfnyj3l7f4u3uh0lukp3w\"\n    },\n    \"binding_retrievable\" : true,\n    \"bindings_retrievable\" : true,\n    \"tags\" : [ \"6meev9qlawhwk43xoyiqiwc8jho4pfivsvqtf0laabr6ec0rsqh24a0qwaddcj99detiv4zemj3y4tphke98uqx6bg3ouf18l0yiaxjap98fbs24tews756ek0m8fzs7dsx413flp3ziei7zgjc8dj9owtrn6j4zz7n6j6pzt1m6qhnt79\", \"1odzeh74m30u1m58l436sw3x8cdnewaj1exm2zqtzgz3ha77jcz8krbpdcfzst4e5qjjkz95o8x07qej64sid52b4cii8wm4xv4opa9hu2y9aljskw9yels6ay22iwjg13u04a9dhseenmetb8mm0c8frknhppsrxsnm56ywxktn4c6etff86sjxrfqppbx4p\", \"ww2yk3q2a2z6pggabsa6zxloau5pndetw8h02ywutkab8k5zgsgt78ynthlzz601ohkc9kpwdutq641ggsdjbdnx7n8lsefv8uuergrwy8do0o0\", \"259o227c4l60k39j92t5dpn2v1imcvetxlgkm968tqv3fp89gzeby6tor5ue12ckoktfraz13ibe3uu2plvnzbuq7v7gpabjv1zggfu8q35st9oxc7cgy2ribjoc2x\" ]\n  }, {\n    \"bindable\" : false,\n    \"metadata\" : { },\n    \"plan_updateable\" : false,\n    \"instances_retrievable\" : false,\n    \"plans\" : [ {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Elvina Halvorson\",\n      \"description\" : \"Iure error eum et modi voluptas laudantium. Quos assumenda quas velit ut sed. Molestiae placeat beatae in.\",\n      \"id\" : \"414w\",\n      \"free\" : true\n    }, {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Buster Johnston DDS\",\n      \"description\" : \"Voluptatibus et sapiente vero est optio dolor. Perspiciatis exercitationem fuga ex iure officia et. Nesciunt magni omnis voluptas beatae ut beatae.\",\n      \"id\" : \"zv12\",\n      \"free\" : false\n    }, {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Foster Walker\",\n      \"description\" : \"Delectus mollitia eos voluptatum a labore. Et culpa ad repellat et. Beatae tempore hic. Sint optio dolor deleniti eum occaecati iusto explicabo. Est magni quisquam cupiditate debitis.\",\n      \"id\" : \"7813\",\n      \"free\" : false\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Dong Koelpin\",\n      \"description\" : \"Consequatur porro sint fugiat. Deserunt provident ratione ex sequi deserunt vero. Et illum earum eos. Quo dolorem facilis.\",\n      \"id\" : \"rd69\",\n      \"free\" : false\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Thad Kilback Jr.\",\n      \"description\" : \"Maiores corporis dicta nobis officiis sit ullam eum. Aut enim reprehenderit ut nostrum ut. Aut quia vitae reiciendis unde. Reiciendis culpa minima molestiae minima minima.\",\n      \"id\" : \"dzyy\",\n      \"free\" : true\n    }, {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Vern Johnston\",\n      \"description\" : \"Est quia voluptas eligendi ipsa aspernatur omnis similique. Voluptates voluptate quis dignissimos nihil nostrum ab qui. Fugit et sed deleniti necessitatibus placeat soluta labore. Accusamus nobis aute\",\n      \"id\" : \"72df\",\n      \"free\" : true\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Shena Lehner\",\n      \"description\" : \"A adipisci magni sed voluptas enim ut quam. Quia expedita labore quod voluptatem deleniti. Quisquam eum commodi ea eligendi voluptatem laborum.\",\n      \"id\" : \"a7m7\",\n      \"free\" : false\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Steven Daugherty II\",\n      \"description\" : \"Non ipsa voluptatem pariatur qui sit. Et in vel officia natus ducimus. Recusandae quibusdam quasi quae eum harum et. Vel fugit adipisci molestiae nostrum. Non adipisci quia reprehenderit neque id corp\",\n      \"id\" : \"92d1\",\n      \"free\" : false\n    } ],\n    \"name\" : \"Mrs. Hai Sawayn\",\n    \"description\" : \"Voluptatem eius laborum inventore porro placeat nostrum. Expedita sed sed molestias dicta occaecati quasi. Et cupiditate nihil.\",\n    \"id\" : \"4kj6\",\n    \"dashboard_client\" : {\n      \"id\" : \"8080\",\n      \"redirect_uri\" : \"https://web.example.mocklab.io/733806\",\n      \"secret\" : \"i9vd7934tye67zza1hdpdewpd4aferhlgy3rs333v9s0060wxfzx2beikpfrmirq3u4ub0sejty48a8k8tebt5b1nw7a9v9u7xr53snax4sku9emhdbw6dsyxgcdqqhyzipgdgnyp66ez5n92906011mviwyp8s\"\n    },\n    \"binding_retrievable\" : false,\n    \"bindings_retrievable\" : true,\n    \"tags\" : [ \"uxj5shri5sehirbnzi71tfwrq82oud66m2rdgtrnvxmwzajf5r8hoyog2jsppue9n0ie2l027470im0m9\", \"s2nqlh4kkgvgofu7s4n42wt95piudkvsz52bex92loyu6bz6scc622vufwfjvyelg7lrzm3p9rd713hkw9yesvx4nxea08l4cggw68l56relo1l413br\", \"ms1ngzor7lqhl1swggd05sss7tzve2ug0fwigsdn6ogdeggb54nrudulmy373dso\", \"a360fozbfq90wij\", \"7r7ijopvdd1w10x503ohrli77o58zzxd1wkpmnxdbbctofv2tavr44xgv4khjmd9y6zm1wl6er5xewiuyci8gvi1l4we3y\", \"ouvzeud2xlnt8qg97srrvdjgf7ij02f4kwn355k2kb5wqxu3f78mqslk9wtr95dhgoak309ifgjivroqjyxah5jp5qqzxfp7yie6loeluk75yf2pl126ihjzw50ib5e7cnth2h1btk7e1c4gsk3klsj20izh8356tv6kzj0d4fr\", \"fye87gtb053gle61d3aeghou1q3p3pnbetrj2cv7btfvvin9pcvzu138fwtqzxnmvclj80n41h8gev3v4amfrrqiapazy8o5ufjj0x2jtfpqz1ycsn416rtf5shxhj\", \"5fdeh9x3ninszhlscl3adwjkggbaf8rhphzzkb6hpfhb2i39w3as2ywth5o6alr26ukedyghqfmi7kbu891t3yg6wzazypoger672gyxb0739qdv10poib25nrq2c7c8kmwfo56b2\" ]\n  }, {\n    \"bindable\" : false,\n    \"metadata\" : { },\n    \"plan_updateable\" : false,\n    \"instances_retrievable\" : true,\n    \"plans\" : [ {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Zita Legros\",\n      \"description\" : \"Dolor tempora fuga excepturi ut ut. Eos corporis nostrum a et numquam quia esse. Dolor ut quis ut. Quam voluptas sit minus nam numquam rerum. Nihil non quia a sapiente dicta esse.\",\n      \"id\" : \"yp5l\",\n      \"free\" : true\n    }, {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Ms. Ellis Haag\",\n      \"description\" : \"Sunt et provident. Doloremque quo incidunt architecto aut a occaecati. Autem et tempora nostrum nisi in. Fugiat nihil minima blanditiis neque quisquam aut.\",\n      \"id\" : \"15tc\",\n      \"free\" : false\n    }, {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Ervin Quitzon\",\n      \"description\" : \"Praesentium veniam voluptas aspernatur maxime vel soluta maxime. Repudiandae quia vero. Fugit laborum est dolorem.\",\n      \"id\" : \"37y9\",\n      \"free\" : true\n    }, {\n      \"bindable\" : true,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Gregoria Hirthe\",\n      \"description\" : \"Eveniet dolores perspiciatis. Vero consequatur quod illum. Aut voluptates eos. Rerum consequatur qui et quia commodi.\",\n      \"id\" : \"l23z\",\n      \"free\" : true\n    }, {\n      \"bindable\" : false,\n      \"metadata\" : { },\n      \"schemas\" : { },\n      \"name\" : \"Tommie Lueilwitz\",\n      \"description\" : \"Et molestiae qui. Nisi ea illo. Provident modi odit aut dicta. Ut id aut facilis corrupti vel et eveniet.\",\n      \"id\" : \"v72f\",\n      \"free\" : true\n    } ],\n    \"name\" : \"Jona Bogan I\",\n    \"description\" : \"Doloribus consectetur quia. Et suscipit nam aut. Iure autem velit doloribus non aut delectus rem.\",\n    \"id\" : \"5xsn\",\n    \"dashboard_client\" : {\n      \"id\" : \"m24a\",\n      \"redirect_uri\" : \"https://web.example.mocklab.io/905106\",\n      \"secret\" : \"jho51nh32otqmh4nsk5216r6gzcj9t2n8a99jctcwqk58tflo5v67a652vags6h1x227hjgtzhgroof1j23byqzljp9b6ofzym2v0wbrafhb2u4mzdgbtlhtmi3asv3s32pwv8q93b921ux762aumppq9t7dxjuoc47n25sj12qfdmr2mkmixc7df2q2tzwvp\"\n    },\n    \"binding_retrievable\" : true,\n    \"bindings_retrievable\" : true,\n    \"tags\" : [ \"lnvk50nnaa1kthu3dkou11vthx993ob7mqe8g1vma70mgdfuqmszexizsu7g3nrh58w7xm0cxo2gd96kc5ooa3xi1w2dmpyx7xvj2mhp3a7hrhfyn945d3qey9jfgie279l2bu3l0bwtfzdw1ldvjsbe0olivl9hkgmoex3nt8k05ley3fitna6bkhdfpu03k19vpc\", \"rcgzp8znjmdeg6cgiyv7nqs5t63nb9ntr3kmcpbu1\", \"gapnd0ifucil2hrevhh79rqgjs7tdbds7n5aikxz1ddmk4buwdw6qyb7nc73l6kvgbjm7y8em6u96knl55p81tdej62sa7qze\" ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84780a43-58bf-4299-9791-504204b73bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.851036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.v2.catalog.list",
          "schema" : {
            "description" : "Response message for the `ListCatalog()` method.",
            "properties" : {
              "description" : {
                "description" : "Used to communicate description of the response. Usually for non-standard\nerror codes.\nhttps://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token allows you to get the next page of results for list requests.\nIf the number of results is larger than `pageSize`, use the `nextPageToken`\nas a value for the query parameter `pageToken` in the next list request.\nSubsequent list requests will have their own `nextPageToken` to continue\npaging through the results",
                "type" : "string"
              },
              "services" : {
                "description" : "The services available for the requested GCP project.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudServicebrokerV1beta1__Service"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "da524c48-80a1-422e-b997-48ca4d4334a4",
    "name" : "CreateBinding generates a service binding to an existing service instance.",
    "request" : {
      "urlPath" : "/v1beta1/clhg3224m3xtudstfbg6ipv7unnra4kv085wi78zh1lqfjklq66lkk7ciw161rc03d1j6to4hbugkorrcbv5kmcd0rg6zv4gn6cizt36fs3xcyyjrwsvq8p9ec/service_bindings/d5dk",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"route_service_url\" : \"https://web.example.mocklab.io/287221\",\n  \"credentials\" : { },\n  \"syslog_drain_url\" : \"https://web.example.mocklab.io/552896\",\n  \"description\" : \"Totam autem quis voluptatem illum. Iure aliquid quo consectetur. Alias quo sequi totam illo. Voluptas totam nam. Autem sed quis nesciunt expedita reiciendis non.\",\n  \"volume_mounts\" : [ { }, { }, { } ],\n  \"operation\" : \"bptnnhatvnzvw9bxd7k4gznlyxahirznkpwwz13tnh9o91iyvw5xo77xiptp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da524c48-80a1-422e-b997-48ca4d4334a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.846136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.v2.service_instances.service_bindings.create",
          "schema" : {
            "description" : "Response for the `CreateBinding()` method.",
            "properties" : {
              "credentials" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Credentials to use the binding.",
                "type" : "object"
              },
              "description" : {
                "description" : "Used to communicate description of the response. Usually for non-standard\nerror codes.\nhttps://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors",
                "type" : "string"
              },
              "operation" : {
                "description" : "If broker executes operation asynchronously, this is the operation ID that\ncan be polled to check the completion status of said operation.\nThis broker always executes all create/delete operations asynchronously.",
                "type" : "string"
              },
              "route_service_url" : {
                "description" : "A URL to which the platform may proxy requests for the address sent with\nbind_resource.route",
                "type" : "string"
              },
              "syslog_drain_url" : {
                "description" : "From where to read system logs.",
                "type" : "string"
              },
              "volume_mounts" : {
                "description" : "An array of configuration for mounting volumes.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "28e52d1d-2031-449d-91f1-df4c73b563ae",
    "name" : "Lists all the instances in the brokers",
    "request" : {
      "urlPath" : "/v1beta1/ozmh1vthvu41v1qh10x5j3pytuxczt0s8w6iteoxupyil30nmpcskvs0083f8sl1yt4zgh7ae4qnntwzbr2oxm0adpmh3jhhs5895rakivl/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"instances\" : [ {\n    \"instance_id\" : \"967g\",\n    \"previous_values\" : { },\n    \"createTime\" : \"2022-05-30T08:45:35.841788Z\",\n    \"service_id\" : \"15z0\",\n    \"context\" : { },\n    \"description\" : \"Minima qui est. Possimus nobis sunt. Molestiae quasi consectetur dolorem occaecati. Doloremque dolor blanditiis provident et.\",\n    \"deploymentName\" : \"Veronica Prohaska II\",\n    \"resourceName\" : \"Mr. Annmarie Hilll\",\n    \"organization_guid\" : \"3921\",\n    \"space_guid\" : \"rka9\",\n    \"parameters\" : { },\n    \"plan_id\" : \"1330\"\n  }, {\n    \"instance_id\" : \"qo0s\",\n    \"previous_values\" : { },\n    \"createTime\" : \"2022-08-18T10:02:35.842301Z\",\n    \"service_id\" : \"u3ln\",\n    \"context\" : { },\n    \"description\" : \"Voluptate accusantium corporis nemo totam ut tenetur laudantium. Porro totam eos. Consequatur explicabo culpa ex. Est autem aut et officia quaerat blanditiis et.\",\n    \"deploymentName\" : \"Zada Emard\",\n    \"resourceName\" : \"Mallie Morissette PhD\",\n    \"organization_guid\" : \"9pm3\",\n    \"space_guid\" : \"7c98\",\n    \"parameters\" : { },\n    \"plan_id\" : \"d2zy\"\n  }, {\n    \"instance_id\" : \"70kh\",\n    \"previous_values\" : { },\n    \"createTime\" : \"2022-04-11T08:23:35.842803Z\",\n    \"service_id\" : \"k1ks\",\n    \"context\" : { },\n    \"description\" : \"Et tempora neque dolore accusamus laboriosam nulla non. Ea error tempora ut. Amet nisi vero molestias fugit. Quasi ea occaecati quae.\",\n    \"deploymentName\" : \"Rashad Leannon DDS\",\n    \"resourceName\" : \"Jerold Wintheiser\",\n    \"organization_guid\" : \"vw5c\",\n    \"space_guid\" : \"lu10\",\n    \"parameters\" : { },\n    \"plan_id\" : \"ej2e\"\n  }, {\n    \"instance_id\" : \"56q5\",\n    \"previous_values\" : { },\n    \"createTime\" : \"2023-01-18T11:10:35.843277Z\",\n    \"service_id\" : \"14sy\",\n    \"context\" : { },\n    \"description\" : \"Non ducimus est totam quasi. Maxime quam tenetur. Aut adipisci iure architecto. Molestiae quis eius nobis. Numquam libero eum tenetur nostrum.\",\n    \"deploymentName\" : \"Valentin McCullough Jr.\",\n    \"resourceName\" : \"Syreeta Becker\",\n    \"organization_guid\" : \"2qor\",\n    \"space_guid\" : \"2wu6\",\n    \"parameters\" : { },\n    \"plan_id\" : \"qzak\"\n  }, {\n    \"instance_id\" : \"dzfm\",\n    \"previous_values\" : { },\n    \"createTime\" : \"2022-08-27T12:02:35.843762Z\",\n    \"service_id\" : \"2848\",\n    \"context\" : { },\n    \"description\" : \"Iure pariatur architecto sit quis aliquam. Voluptates odio et ut corporis. Sunt atque voluptas. Aut dolore rerum eius.\",\n    \"deploymentName\" : \"Keren Ernser\",\n    \"resourceName\" : \"Jonas Parker I\",\n    \"organization_guid\" : \"4qxw\",\n    \"space_guid\" : \"319j\",\n    \"parameters\" : { },\n    \"plan_id\" : \"o407\"\n  }, {\n    \"instance_id\" : \"0wl6\",\n    \"previous_values\" : { },\n    \"createTime\" : \"2022-09-21T12:14:35.84426Z\",\n    \"service_id\" : \"5x0g\",\n    \"context\" : { },\n    \"description\" : \"Voluptas veritatis voluptas nulla omnis commodi quasi architecto. Exercitationem porro harum repellendus eius nesciunt tempore. Quae qui adipisci sunt in qui velit rem. Sint deleniti voluptatem. Magna\",\n    \"deploymentName\" : \"Michel Bednar\",\n    \"resourceName\" : \"Miss Letha Heathcote\",\n    \"organization_guid\" : \"98ff\",\n    \"space_guid\" : \"90pt\",\n    \"parameters\" : { },\n    \"plan_id\" : \"g4qd\"\n  }, {\n    \"instance_id\" : \"sbq3\",\n    \"previous_values\" : { },\n    \"createTime\" : \"2022-09-13T10:06:35.84477Z\",\n    \"service_id\" : \"279p\",\n    \"context\" : { },\n    \"description\" : \"Qui et eveniet voluptatem pariatur vitae. Quibusdam iusto blanditiis odit voluptates magnam. Alias omnis neque ut deserunt. Non deleniti blanditiis vitae est voluptates. Ex eos nisi architecto ut omni\",\n    \"deploymentName\" : \"Dr. Carl Brown\",\n    \"resourceName\" : \"Priscilla Renner\",\n    \"organization_guid\" : \"8qta\",\n    \"space_guid\" : \"tsei\",\n    \"parameters\" : { },\n    \"plan_id\" : \"phym\"\n  }, {\n    \"instance_id\" : \"ck14\",\n    \"previous_values\" : { },\n    \"createTime\" : \"2022-08-23T10:26:35.845253Z\",\n    \"service_id\" : \"cmr5\",\n    \"context\" : { },\n    \"description\" : \"Fugiat et error deserunt et illum praesentium. Voluptas unde odit quibusdam magni natus ipsa. Rerum dolores doloribus est. Non cumque dignissimos et. Ea in porro sint.\",\n    \"deploymentName\" : \"Lloyd Hane\",\n    \"resourceName\" : \"Jacinto Brekke\",\n    \"organization_guid\" : \"ay0j\",\n    \"space_guid\" : \"l0on\",\n    \"parameters\" : { },\n    \"plan_id\" : \"c33i\"\n  } ],\n  \"nextPageToken\" : \"un50p35o22arwf9raypukcuf23aq62q357wzbjdqso6ciylrybam71jg6iux3kl217olzywb8yzlwrd28y2nesqmmwmdb4vj66h1ru7fhtbm3wm5gqdw71d1agp013vec1vhqm86f8krpqb904z3pgzm5vt429uoyfi7nxu9kffjgi4am4oycxls81htsfbv19\",\n  \"description\" : \"Id tempore qui deleniti. Enim et consectetur delectus. Deleniti dignissimos totam ullam ea debitis. Autem ut consequatur debitis alias.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28e52d1d-2031-449d-91f1-df4c73b563ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.84578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.instances.list",
          "schema" : {
            "description" : "The response for the `ListServiceInstances()` method.",
            "properties" : {
              "description" : {
                "description" : "Used to communicate description of the response. Usually for non-standard\nerror codes.\nhttps://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors",
                "type" : "string"
              },
              "instances" : {
                "description" : "The list of instances in the broker.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudServicebrokerV1beta1__ServiceInstance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "This token allows you to get the next page of results for list requests.\nIf the number of results is larger than `pageSize`, use the `nextPageToken`\nas a value for the query parameter `pageToken` in the next list request.\nSubsequent list requests will have their own `nextPageToken` to continue\npaging through the results",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "d2bc4aa3-f924-4f43-a386-9185aa9cb355",
    "name" : "CreateBroker creates a Broker.",
    "request" : {
      "urlPath" : "/v1beta1/su6dhlwgiyaqitvrf0yp7vd6k2vitgq48tmk421vw0kibfy0j3c0xugknrwtem7fr8oor760a84ct6i1er1xmle66f8ba55bd7ufjaekuxqr4rubypdtx1flrilopqn68y/brokers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-07-21T11:31:35.841476Z\",\n  \"name\" : \"Dante Cassin\",\n  \"title\" : \"Corporis laudantium consequuntur consequuntur sed et neque.\",\n  \"url\" : \"https://web.example.mocklab.io/342783\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2bc4aa3-f924-4f43-a386-9185aa9cb355",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.841667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.create",
          "schema" : {
            "description" : "Broker represents a consumable collection of Service Registry catalogs\nexposed as an OSB Broker.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Timestamp for when the broker was created.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "Name of the broker in the format:\n<projects>/<project-id>/brokers/<broker>.\nThis allows for multiple brokers per project which can be used to\nenable having custom brokers per GKE cluster, for example.",
                "type" : "string"
              },
              "title" : {
                "description" : "User friendly title of the broker.\nLimited to 1024 characters. Requests with longer titles will be rejected.",
                "type" : "string"
              },
              "url" : {
                "description" : "Output only. URL of the broker OSB-compliant endpoint, for example:\nhttps://servicebroker.googleapis.com/projects/<project>/brokers/<broker>",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "bd6ccd7e-87ea-457b-9eb4-dea70708f6fe",
    "name" : "ListBrokers lists brokers.",
    "request" : {
      "urlPath" : "/v1beta1/2adu1qk83umvo4jgzatv1cpvsoo0xzjfhntgh3xthkzftugcc22o2cz4i3jgtm5pd7x46f/brokers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"brokers\" : [ {\n    \"createTime\" : \"2022-10-28T10:51:35.84015Z\",\n    \"name\" : \"Rich Jerde\",\n    \"title\" : \"Error quam illo.\",\n    \"url\" : \"https://web.example.mocklab.io/292013\"\n  }, {\n    \"createTime\" : \"2022-06-14T10:41:35.840313Z\",\n    \"name\" : \"Johnathan Haley\",\n    \"title\" : \"Atque consequatur harum qui.\",\n    \"url\" : \"https://web.example.mocklab.io/866354\"\n  }, {\n    \"createTime\" : \"2022-05-01T08:50:35.840476Z\",\n    \"name\" : \"Orlando Steuber\",\n    \"title\" : \"Deserunt vitae explicabo sit et fuga neque.\",\n    \"url\" : \"https://web.example.mocklab.io/864182\"\n  }, {\n    \"createTime\" : \"2022-07-11T10:08:35.840625Z\",\n    \"name\" : \"Claudia Bauch\",\n    \"title\" : \"Omnis similique quisquam aut iure.\",\n    \"url\" : \"https://web.example.mocklab.io/984091\"\n  }, {\n    \"createTime\" : \"2022-09-09T09:54:35.840769Z\",\n    \"name\" : \"Ahmad Brakus MD\",\n    \"title\" : \"Aut ipsum sequi harum.\",\n    \"url\" : \"https://web.example.mocklab.io/588860\"\n  }, {\n    \"createTime\" : \"2022-07-18T10:45:35.840924Z\",\n    \"name\" : \"Dr. Lucile Pollich\",\n    \"title\" : \"Veritatis velit accusamus adipisci illum sed.\",\n    \"url\" : \"https://web.example.mocklab.io/782673\"\n  }, {\n    \"createTime\" : \"2022-12-06T08:50:35.841074Z\",\n    \"name\" : \"Marcel Haley\",\n    \"title\" : \"Repudiandae vero voluptas nesciunt alias impedit rerum.\",\n    \"url\" : \"https://web.example.mocklab.io/464922\"\n  }, {\n    \"createTime\" : \"2022-06-18T09:28:35.841225Z\",\n    \"name\" : \"Rae Bechtelar\",\n    \"title\" : \"Molestiae sint quia excepturi cumque consequuntur distinctio ipsa.\",\n    \"url\" : \"https://web.example.mocklab.io/496910\"\n  } ],\n  \"nextPageToken\" : \"l1a2mvwn19l3sncphv52c6zvfhq3vpkt79bne113192zfcmkinjfamen8pg02pf9zlbyvsfp8l1ifvziis3k79evj7ldoz4ecp0e8v9cirdaoj56io6f6t3jilxea9jjsdxy2b5xjt7kn4i1a1q6n0kaq5szz3ncd83w4ro3b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd6ccd7e-87ea-457b-9eb4-dea70708f6fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.841441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.list",
          "schema" : {
            "description" : "The response for the `ListBrokers()` method.",
            "properties" : {
              "brokers" : {
                "description" : "The list of brokers in the container.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudServicebrokerV1beta1__Broker"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "This token allows you to get the next page of results for list requests.\nIf the number of results is larger than `pageSize`, use the `nextPageToken`\nas a value for the query parameter `pageToken` in the next list request.\nSubsequent list requests will have their own `nextPageToken` to continue\npaging through the results",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "958a609d-837b-4e1b-8e24-4a8d48e02127",
    "name" : "Lists all the bindings in the instance.",
    "request" : {
      "urlPath" : "/v1beta1/4mxhgjv6kdyjq0hn8jr1d76st10t1y33kxymn2yikbv77wze2gprpmk3ze7k4q5z9txqq0s4hqsydppop081ojzhf0zh6h9c0mg41lt7ibhm/bindings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"9uf2kegebqvnx3x5my140uh0j55zzjy1ihtxzz9obzz1amew6q8l14p6tla1pbpcucf1nt2ubqybioovv57yl47so\",\n  \"bindings\" : [ {\n    \"createTime\" : \"2022-06-18T11:35:35.837316Z\",\n    \"service_id\" : \"n64n\",\n    \"deploymentName\" : \"Lakendra Walker\",\n    \"resourceName\" : \"Elliot Feest Jr.\",\n    \"bind_resource\" : { },\n    \"parameters\" : { },\n    \"plan_id\" : \"f348\",\n    \"binding_id\" : \"o05d\"\n  }, {\n    \"createTime\" : \"2023-02-26T10:07:35.837676Z\",\n    \"service_id\" : \"mbmi\",\n    \"deploymentName\" : \"Dr. Estrella Littel\",\n    \"resourceName\" : \"Barabara Fadel IV\",\n    \"bind_resource\" : { },\n    \"parameters\" : { },\n    \"plan_id\" : \"8946\",\n    \"binding_id\" : \"015d\"\n  }, {\n    \"createTime\" : \"2022-12-14T11:45:35.838011Z\",\n    \"service_id\" : \"x8sc\",\n    \"deploymentName\" : \"Donnie Roberts\",\n    \"resourceName\" : \"Drew Wunsch\",\n    \"bind_resource\" : { },\n    \"parameters\" : { },\n    \"plan_id\" : \"7blt\",\n    \"binding_id\" : \"n2x9\"\n  }, {\n    \"createTime\" : \"2022-10-15T11:39:35.838332Z\",\n    \"service_id\" : \"z117\",\n    \"deploymentName\" : \"Edward Tromp Sr.\",\n    \"resourceName\" : \"Major Vandervort\",\n    \"bind_resource\" : { },\n    \"parameters\" : { },\n    \"plan_id\" : \"a1h9\",\n    \"binding_id\" : \"283d\"\n  }, {\n    \"createTime\" : \"2022-08-01T08:44:35.838655Z\",\n    \"service_id\" : \"zm28\",\n    \"deploymentName\" : \"Mr. Bobbie Larkin\",\n    \"resourceName\" : \"Karina Kemmer\",\n    \"bind_resource\" : { },\n    \"parameters\" : { },\n    \"plan_id\" : \"74jk\",\n    \"binding_id\" : \"s7bi\"\n  }, {\n    \"createTime\" : \"2023-02-03T11:18:35.838978Z\",\n    \"service_id\" : \"2c2j\",\n    \"deploymentName\" : \"Robt Hartmann\",\n    \"resourceName\" : \"Rosy Bruen\",\n    \"bind_resource\" : { },\n    \"parameters\" : { },\n    \"plan_id\" : \"066f\",\n    \"binding_id\" : \"9hz8\"\n  }, {\n    \"createTime\" : \"2022-10-02T08:46:35.839299Z\",\n    \"service_id\" : \"428n\",\n    \"deploymentName\" : \"Andrea Bernhard\",\n    \"resourceName\" : \"Mrs. Leandro Dickinson\",\n    \"bind_resource\" : { },\n    \"parameters\" : { },\n    \"plan_id\" : \"y8sn\",\n    \"binding_id\" : \"pcvt\"\n  }, {\n    \"createTime\" : \"2023-01-27T10:49:35.839626Z\",\n    \"service_id\" : \"66zw\",\n    \"deploymentName\" : \"Ms. Maxine Marvin\",\n    \"resourceName\" : \"Edison Reynolds\",\n    \"bind_resource\" : { },\n    \"parameters\" : { },\n    \"plan_id\" : \"et21\",\n    \"binding_id\" : \"n5f3\"\n  } ],\n  \"description\" : \"Odit debitis modi corporis. Eveniet ut magnam eaque. Officiis dolores deleniti velit expedita quis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "958a609d-837b-4e1b-8e24-4a8d48e02127",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.840098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.instances.bindings.list",
          "schema" : {
            "description" : "The response for the `ListBindings()` method.",
            "properties" : {
              "bindings" : {
                "description" : "The list of bindings in the instance.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudServicebrokerV1beta1__Binding"
                },
                "type" : "array"
              },
              "description" : {
                "description" : "Used to communicate description of the response. Usually for non-standard\nerror codes.\nhttps://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token allows you to get the next page of results for list requests.\nIf the number of results is larger than `pageSize`, use the `nextPageToken`\nas a value for the query parameter `pageToken` in the next list request.\nSubsequent list requests will have their own `nextPageToken` to continue\npaging through the results",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "1b96eb47-b7c6-4e32-a6ec-84d701ec4189",
    "name" : "Returns the state of the last operation for the binding.",
    "request" : {
      "urlPath" : "/v1beta1/Rodney+Gottlieb/last_operation",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"description\" : \"Beatae qui voluptas quae deserunt. Velit sapiente eius impedit et magni. Nobis cum ducimus aut non quae iure. Architecto laborum non et aut ea tenetur.\",\n  \"state\" : \"Utah\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b96eb47-b7c6-4e32-a6ec-84d701ec4189",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.837258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.v2.service_instances.service_bindings.getLast_operation",
          "schema" : {
            "description" : "Describes a long running operation, which conforms to OpenService API.",
            "properties" : {
              "description" : {
                "description" : "Optional description of the Operation state.",
                "type" : "string"
              },
              "state" : {
                "description" : "The state of the operation.\nValid values are: \"in progress\", \"succeeded\", and \"failed\".",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "95d96491-76be-4f31-b9c7-8b304742881a",
    "name" : "Updates an existing service instance.",
    "request" : {
      "urlPath" : "/v1beta1/Maria+Jast",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"description\" : \"Qui sit dolore voluptas. Officiis ab corporis assumenda. Repudiandae ea atque. Ut at saepe quis aut vel.\",\n  \"operation\" : \"tfi2ei4wzmrugcam50u38ek87iyzpl3w81ya9jd0z3jorkio5733x209hjh7nnwi7lemx8m293ofkxcfch68952mfo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95d96491-76be-4f31-b9c7-8b304742881a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.837116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.v2.service_instances.patch",
          "schema" : {
            "description" : "Response for the `UpdateServiceInstance()` method.",
            "properties" : {
              "description" : {
                "description" : "Used to communicate description of the response. Usually for non-standard\nerror codes.\nhttps://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors",
                "type" : "string"
              },
              "operation" : {
                "description" : "If broker executes operation asynchronously, this is the operation ID that\ncan be polled to check the completion status of said operation.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "e6a5e574-4176-4a9d-9cf5-cb3301bc25fe",
    "name" : "GetBinding returns the binding information.",
    "request" : {
      "urlPath" : "/v1beta1/Refugia+Green+IV",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"route_service_url\" : \"https://web.example.mocklab.io/563126\",\n  \"credentials\" : { },\n  \"syslog_drain_url\" : \"https://web.example.mocklab.io/190560\",\n  \"description\" : \"Et aperiam quaerat qui. Consequatur excepturi perspiciatis in qui neque sunt. Voluptas voluptatem sit autem.\",\n  \"deploymentName\" : \"Edwardo Adams III\",\n  \"resourceName\" : \"Jan Klein\",\n  \"volume_mounts\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6a5e574-4176-4a9d-9cf5-cb3301bc25fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.836983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.v2.service_instances.service_bindings.get",
          "schema" : {
            "description" : "Response for the `GetBinding()` method.",
            "properties" : {
              "credentials" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Credentials to use the binding.",
                "type" : "object"
              },
              "deploymentName" : {
                "description" : "String containing the Deployment Manager deployment name that was created\nfor this binding,",
                "type" : "string"
              },
              "description" : {
                "description" : "Used to communicate description of the response. Usually for non-standard\nerror codes.\nhttps://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors",
                "type" : "string"
              },
              "resourceName" : {
                "description" : "Output only. The resource name of the binding, e.g.\nprojects/project_id/brokers/broker_id/service_instances/instance_id/bindings/binding_id.",
                "type" : "string"
              },
              "route_service_url" : {
                "description" : "A URL to which the platform may proxy requests for the address sent with\nbind_resource.route",
                "type" : "string"
              },
              "syslog_drain_url" : {
                "description" : "From where to read system logs.",
                "type" : "string"
              },
              "volume_mounts" : {
                "description" : "An array of configurations for mounting volumes.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "34127408-0b63-4750-81a4-947af0934cbc",
    "name" : "Unbinds from a service instance.",
    "request" : {
      "urlPath" : "/v1beta1/Chastity+McLaughlin",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"description\" : \"Nihil enim necessitatibus. Aspernatur est aspernatur porro sed delectus sapiente. Pariatur beatae ea culpa numquam. Sed unde a veritatis. Blanditiis itaque ut quidem a suscipit.\",\n  \"operation\" : \"vsq8e7dsmxxjm9cqghmxgubijrh0qsflxgnerafss5i47z6gpc1aisqefjysyadkjirafpsmvxkga9ni4jdi1sybmzi929ztcb0jpvbz643jh3cn96bmvh1db2dv0f33x6xbtf0i2y3krt87\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34127408-0b63-4750-81a4-947af0934cbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:35.836517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "servicebroker.projects.brokers.v2.service_instances.service_bindings.delete",
          "schema" : {
            "description" : "Response for the `DeleteBinding()` method.",
            "properties" : {
              "description" : {
                "description" : "Used to communicate description of the response. Usually for non-standard\nerror codes.\nhttps://github.com/openservicebrokerapi/servicebroker/blob/master/spec.md#service-broker-errors",
                "type" : "string"
              },
              "operation" : {
                "description" : "If broker executes operation asynchronously, this is the operation ID that\ncan be polled to check the completion status of said operation.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}