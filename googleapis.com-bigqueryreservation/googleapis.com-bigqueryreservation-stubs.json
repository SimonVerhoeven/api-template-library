{
  "mappings" : [ {
    "id" : "48972c74-46fe-4b87-9e9d-011f6774947f",
    "name" : "Looks up assignments for a specified resource for a particular region. If the re...",
    "request" : {
      "urlPath" : "/v1beta1/ervmzmfwuibzc1jzl36s94705fcf9cutjwpkqgn8kgfsa7jt5hqxu41qbkvauupgvk0l6joxrqx4mrturcqzqknn9feaiow8c61l70obwbupjhbh0ntaxi58d8a4ir:searchAssignments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"assignments\" : [ {\n    \"name\" : \"Evon Roob Jr.\",\n    \"assignee\" : \"clbqvlrffclx2hg0v484jq3geohwotp9o2v14zwosggt2tv7jgr13md8bxgksxv19hzhx1kjrzpa3ic1uvl7bf2gs3j3kobaaerc0g9trsatedavbb0wl4kp01cezvfpohr7vffedd98w5lonqdv265q09gzbmamvlyjcm8xwgnhf355dtvs3o44w17cnwx02857\",\n    \"state\" : \"PENDING\",\n    \"jobType\" : \"PIPELINE\"\n  }, {\n    \"name\" : \"Lashay Luettgen Sr.\",\n    \"assignee\" : \"yjcx9muxb6zhv35nxlohzw4p585smk5y10wnb7uk4gh0it1cj77h8pudknhzog5pjzrvxzbt0u7y8ss\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"jobType\" : \"ML_EXTERNAL\"\n  }, {\n    \"name\" : \"Joellen Price I\",\n    \"assignee\" : \"ov7yzaxcjvfy3xkdes8iwp16kbpcs9jhd6mh6hhjg10jcqsdxz67kzqg66oshh6s7ali0nnijq24eygdfpn9ehn8wemqs1v6z3s6rib0xld88wb2hil8uecxneu57ql1je\",\n    \"state\" : \"ACTIVE\",\n    \"jobType\" : \"JOB_TYPE_UNSPECIFIED\"\n  }, {\n    \"name\" : \"Shawn Haley\",\n    \"assignee\" : \"vqj0vdsfz3ptnyya4cqan0upe6jjl3zolqnwxn4th34t0rkcd1l3i0rme72x9h8dr6pv62bq4v1ml8ihg0exiqyhdv654j8hdh39edi3tkjeqyhbnlesgmehs19ad7bi\",\n    \"state\" : \"ACTIVE\",\n    \"jobType\" : \"JOB_TYPE_UNSPECIFIED\"\n  }, {\n    \"name\" : \"Tari Hettinger\",\n    \"assignee\" : \"63snsjmmr8j1eymduh3f828p00tqvhlj6aneajvlwjigfl87ibs3\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"jobType\" : \"QUERY\"\n  }, {\n    \"name\" : \"Johanne Gottlieb\",\n    \"assignee\" : \"r3qaok4bza7z7cmm3dzvrigxnz5tlnw1pkqlw0xyd3odh2qbri7kz6lgrtru705ovcjol9s698wzlz5esa7eyxfvblu19tv0azeyr3u06wycut4fs8i0gfht7fwivqz8lobjij9o5wiqi2hfjy9oww3vt2wx9k7k4ghmtved0kxrbpy\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"jobType\" : \"JOB_TYPE_UNSPECIFIED\"\n  }, {\n    \"name\" : \"Ms. Elmira Bednar\",\n    \"assignee\" : \"6t27s8ry8sriujul6rawl13iob4ehg05i0g4l9maqgvazoy15cfft08hiw76v1e2alp5apxpu2v4mu7sbl6s9sfg0ple5d3ha83bpf1m3w8vsaxnzijfbfc4eoe5j50938cloh5alc5f3jguaci5hdb93vif9k7ncftbhz9sajwc111wnhyglx1a7vgo7bqbm\",\n    \"state\" : \"PENDING\",\n    \"jobType\" : \"PIPELINE\"\n  }, {\n    \"name\" : \"Sharri Macejkovic\",\n    \"assignee\" : \"l3hpeeklzxg7z353i1a6fkqr3ip3paqutkbbjwzcdm8kyb0y68prfimbupqta98a7e883zk4izwx4ehr2n5l03n3y1dp2copinh8xzakpgjptdueuajvseu6aayjiqql4x8\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"jobType\" : \"JOB_TYPE_UNSPECIFIED\"\n  } ],\n  \"nextPageToken\" : \"zxcmvlf0kb5grx9jj8yjy0scpetdhby3druw0v9jf2ivkbozesme5f9d39jzottg7ik1tl1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48972c74-46fe-4b87-9e9d-011f6774947f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.231878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.searchAssignments",
          "schema" : {
            "description" : "The response for ReservationService.SearchAssignments.",
            "properties" : {
              "assignments" : {
                "description" : "List of assignments visible to the user.",
                "items" : {
                  "$ref" : "#/components/schemas/Assignment"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "35fd6601-a080-43ca-a694-f165626aa0af",
    "name" : "Creates a new reservation resource.",
    "request" : {
      "urlPath" : "/v1beta1/yu3rd4cz3oxlio9fm4mfu5lyysa2ezfw4rj22ufpzvvzkp48dgfztsa0zdeqiz7v0wlb1npvykpy0iir/reservations",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"multiRegionAuxiliary\" : false,\n  \"creationTime\" : \"2023-02-03T14:06:35.230966Z\",\n  \"ignoreIdleSlots\" : true,\n  \"name\" : \"Prince Bednar\",\n  \"slotCapacity\" : \"South Chang\",\n  \"updateTime\" : \"2023-01-25T12:47:35.231075Z\",\n  \"concurrency\" : \"BIF\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35fd6601-a080-43ca-a694-f165626aa0af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.231205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.reservations.create",
          "schema" : {
            "description" : "A reservation is a mechanism used to guarantee slots to users.",
            "properties" : {
              "concurrency" : {
                "description" : "Job concurrency target which sets a soft upper bound on the number of jobs that can run concurrently in this reservation. This is a soft target due to asynchronous nature of the system and various optimizations for small queries. Default value is 0 which means that concurrency target will be automatically computed by the system. NOTE: this field is exposed as `target_job_concurrency` in the Information Schema, DDL and BQ CLI.",
                "format" : "int64",
                "type" : "string"
              },
              "creationTime" : {
                "description" : "Output only. Creation time of the reservation.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "ignoreIdleSlots" : {
                "description" : "If false, any query or pipeline job using this reservation will use idle slots from other reservations within the same admin project. If true, a query or pipeline job using this reservation will execute with the slot capacity specified in the slot_capacity field at most.",
                "type" : "boolean"
              },
              "multiRegionAuxiliary" : {
                "description" : "Applicable only for reservations located within one of the BigQuery multi-regions (US or EU). If set to true, this reservation is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this reservation is placed in the organization's default region.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The resource name of the reservation, e.g., `projects/*/locations/*/reservations/team1-prod`. The reservation_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.",
                "type" : "string"
              },
              "slotCapacity" : {
                "description" : "Minimum slots available to this reservation. A slot is a unit of computational power in BigQuery, and serves as the unit of parallelism. Queries using this reservation might use more slots during runtime if ignore_idle_slots is set to false. If the new reservation's slot capacity exceeds the project's slot capacity or if total slot capacity of the new reservation and its siblings exceeds the project's slot capacity, the request will fail with `google.rpc.Code.RESOURCE_EXHAUSTED`. NOTE: for reservations in US or EU multi-regions, slot capacity constraints are checked separately for default and auxiliary regions. See multi_region_auxiliary flag for more details.",
                "format" : "int64",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last update time of the reservation.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f68ac6a9-7cbe-40b0-8ceb-2cc968343f54",
    "name" : "Lists all the reservations for the project in the specified location.",
    "request" : {
      "urlPath" : "/v1beta1/dz6tjxyn0bqjtcaoo4usm9fa168gdknjr8yxg3d14czluu1twyg0h7ypn5nghfyfqn79mp52hbgxx0x5nbby7jn1ld4s4209h42lpo8/reservations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reservations\" : [ {\n    \"multiRegionAuxiliary\" : false,\n    \"creationTime\" : \"2022-09-26T11:29:35.230067Z\",\n    \"ignoreIdleSlots\" : false,\n    \"name\" : \"Patricia Bergnaum\",\n    \"slotCapacity\" : \"West Deidrefurt\",\n    \"updateTime\" : \"2022-04-19T13:33:35.230251Z\",\n    \"concurrency\" : \"EGP\"\n  }, {\n    \"multiRegionAuxiliary\" : true,\n    \"creationTime\" : \"2022-08-24T10:54:35.230312Z\",\n    \"ignoreIdleSlots\" : true,\n    \"name\" : \"Kemberly Wehner Jr.\",\n    \"slotCapacity\" : \"North Lilianton\",\n    \"updateTime\" : \"2022-10-12T13:02:35.230427Z\",\n    \"concurrency\" : \"GEL\"\n  }, {\n    \"multiRegionAuxiliary\" : false,\n    \"creationTime\" : \"2022-07-29T12:33:35.230477Z\",\n    \"ignoreIdleSlots\" : true,\n    \"name\" : \"Tyrone Marquardt\",\n    \"slotCapacity\" : \"Wintheisershire\",\n    \"updateTime\" : \"2022-12-21T12:08:35.230605Z\",\n    \"concurrency\" : \"SBD\"\n  }, {\n    \"multiRegionAuxiliary\" : false,\n    \"creationTime\" : \"2022-07-16T14:03:35.230658Z\",\n    \"ignoreIdleSlots\" : true,\n    \"name\" : \"Jewel Keeling\",\n    \"slotCapacity\" : \"Langoshside\",\n    \"updateTime\" : \"2022-12-31T10:23:35.230767Z\",\n    \"concurrency\" : \"WST\"\n  } ],\n  \"nextPageToken\" : \"5z2rj0vlk0em09ur292qn3gokt4zcgfhkh5qi8rc5zzefop6qoisa105wby53o4dfavky2l14q321200mkjod8iqs091c5ijc6r71uvgiuyw9kz25inebukw0widx4uu6blltsva2ipushycvetmhp8z1yk3rk1fxr7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f68ac6a9-7cbe-40b0-8ceb-2cc968343f54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.230919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.reservations.list",
          "schema" : {
            "description" : "The response for ReservationService.ListReservations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "reservations" : {
                "description" : "List of reservations visible to the user.",
                "items" : {
                  "$ref" : "#/components/schemas/Reservation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3babc21f-24db-4254-a195-5b92c755201e",
    "name" : "Merges capacity commitments of the same plan into a single commitment. The resul...",
    "request" : {
      "urlPath" : "/v1beta1/zutpx8h0spsb1/capacityCommitments:merge",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"multiRegionAuxiliary\" : true,\n  \"renewalPlan\" : \"FLEX\",\n  \"slotCount\" : \"nr94ft9ox3l9xqp6huvt3d50n4v2q7p78fvw55czfzzbzq497rw3h4ka5qf31yhyi5vx1l583huttg6ycrszohrf5lsg3\",\n  \"name\" : \"Idell Christiansen\",\n  \"state\" : \"ACTIVE\",\n  \"plan\" : \"ANNUAL\",\n  \"commitmentEndTime\" : \"2023-02-01T13:11:35.229703Z\",\n  \"failureStatus\" : {\n    \"code\" : 1666922383,\n    \"details\" : [ { } ],\n    \"message\" : \"At aliquid numquam hic aut voluptatem adipisci aut. Sunt nobis vero est. Unde qui accusantium ut delectus. Veniam ea et placeat sapiente laudantium.\"\n  },\n  \"commitmentStartTime\" : \"2022-05-04T10:25:35.22979Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3babc21f-24db-4254-a195-5b92c755201e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.229972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.capacityCommitments.merge",
          "schema" : {
            "description" : "Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes. In order to remove annual commitment, its plan needs to be changed to monthly or flex first. A capacity commitment resource exists as a child resource of the admin project.",
            "properties" : {
              "commitmentEndTime" : {
                "description" : "Output only. The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "commitmentStartTime" : {
                "description" : "Output only. The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "failureStatus" : {
                "$ref" : "#/components/schemas/Status"
              },
              "multiRegionAuxiliary" : {
                "description" : "Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization's default region.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "Output only. The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123` The commitment_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.",
                "readOnly" : true,
                "type" : "string"
              },
              "plan" : {
                "description" : "Capacity commitment commitment plan.",
                "enum" : [ "COMMITMENT_PLAN_UNSPECIFIED", "FLEX", "TRIAL", "MONTHLY", "ANNUAL" ],
                "type" : "string"
              },
              "renewalPlan" : {
                "description" : "The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL commitments.",
                "enum" : [ "COMMITMENT_PLAN_UNSPECIFIED", "FLEX", "TRIAL", "MONTHLY", "ANNUAL" ],
                "type" : "string"
              },
              "slotCount" : {
                "description" : "Number of slots in this commitment.",
                "format" : "int64",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. State of the commitment.",
                "enum" : [ "STATE_UNSPECIFIED", "PENDING", "ACTIVE", "FAILED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f4c3b70-5205-4a7c-8fc8-01dfe9363078",
    "name" : "Creates a new capacity commitment resource.",
    "request" : {
      "urlPath" : "/v1beta1/u1goj30gd48enrn9mgivayuwjp6ai1ij17q5j7mx5e5i53a9kyf8j9rkr7h075nrnzvmadfcek4ahqnz4db96fcriuhc3i/capacityCommitments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"multiRegionAuxiliary\" : false,\n  \"renewalPlan\" : \"FLEX\",\n  \"slotCount\" : \"cajzg7jm667thbeyqhq8uto32l6m7rjl2sc9bnrqqzrcnwzlje8mpvnpj08c6w0502zxzcuishxt7jdev5q5658xmadujygvpvqjv8lna3ml8hn7o66yi7qvwqsd0pb1784esdsjlt7oiyv23f\",\n  \"name\" : \"Lucila Greenfelder\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"plan\" : \"TRIAL\",\n  \"commitmentEndTime\" : \"2023-01-05T10:24:35.22936Z\",\n  \"failureStatus\" : {\n    \"code\" : 1507490954,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Consequatur magnam facere accusantium et autem nam. Dignissimos consectetur libero eum perferendis. Sint officia est delectus necessitatibus suscipit. Incidunt beatae voluptate aut necessitatibus veli\"\n  },\n  \"commitmentStartTime\" : \"2022-03-30T11:03:35.22944Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f4c3b70-5205-4a7c-8fc8-01dfe9363078",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.229585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.capacityCommitments.create",
          "schema" : {
            "description" : "Capacity commitment is a way to purchase compute capacity for BigQuery jobs (in the form of slots) with some committed period of usage. Annual commitments renew by default. Commitments can be removed after their commitment end time passes. In order to remove annual commitment, its plan needs to be changed to monthly or flex first. A capacity commitment resource exists as a child resource of the admin project.",
            "properties" : {
              "commitmentEndTime" : {
                "description" : "Output only. The end of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "commitmentStartTime" : {
                "description" : "Output only. The start of the current commitment period. It is applicable only for ACTIVE capacity commitments.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "failureStatus" : {
                "$ref" : "#/components/schemas/Status"
              },
              "multiRegionAuxiliary" : {
                "description" : "Applicable only for commitments located within one of the BigQuery multi-regions (US or EU). If set to true, this commitment is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this commitment is placed in the organization's default region.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "Output only. The resource name of the capacity commitment, e.g., `projects/myproject/locations/US/capacityCommitments/123` The commitment_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.",
                "readOnly" : true,
                "type" : "string"
              },
              "plan" : {
                "description" : "Capacity commitment commitment plan.",
                "enum" : [ "COMMITMENT_PLAN_UNSPECIFIED", "FLEX", "TRIAL", "MONTHLY", "ANNUAL" ],
                "type" : "string"
              },
              "renewalPlan" : {
                "description" : "The plan this capacity commitment is converted to after commitment_end_time passes. Once the plan is changed, committed period is extended according to commitment plan. Only applicable for ANNUAL commitments.",
                "enum" : [ "COMMITMENT_PLAN_UNSPECIFIED", "FLEX", "TRIAL", "MONTHLY", "ANNUAL" ],
                "type" : "string"
              },
              "slotCount" : {
                "description" : "Number of slots in this commitment.",
                "format" : "int64",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. State of the commitment.",
                "enum" : [ "STATE_UNSPECIFIED", "PENDING", "ACTIVE", "FAILED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6189be6e-63cd-4cc7-9cdc-68db168ac50f",
    "name" : "Lists all the capacity commitments for the admin project.",
    "request" : {
      "urlPath" : "/v1beta1/er4tf6c5iz3pi14aiwjlz203lgfk8wd01z5zg6afxval4u4wntchrij8abi5rou8lyu3uff5xj1rbu1ze86x0ebwi5v5yxb45dygxnkki89nrlio0z9tdeh6mmm3xzy7cva3s08v9dx3l7/capacityCommitments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"a18pceaar3l8cii9rygojvt8frg6mom2a4vf7kx9ex0ddti41el87taw1e2vo0ptc\",\n  \"capacityCommitments\" : [ {\n    \"multiRegionAuxiliary\" : true,\n    \"renewalPlan\" : \"MONTHLY\",\n    \"slotCount\" : \"esxt8e9q6bmdtrclb7hsf431p2a7fcharp7540nr7lp2tx06iswiie1yqbu1jgxtewwpf79fw3zhysc7vabibrzf0ez66w6p9lnue7lbdkw58yvk9s71dvi1d2min4d4nx0wl80lqcxfy93h7qby1qi\",\n    \"name\" : \"Roseanna Prosacco\",\n    \"state\" : \"PENDING\",\n    \"plan\" : \"MONTHLY\",\n    \"commitmentEndTime\" : \"2022-03-26T14:16:35.227684Z\",\n    \"failureStatus\" : {\n      \"code\" : 713985785,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Doloribus saepe sed perferendis in. Sed et sapiente. Aut nemo ducimus et.\"\n    },\n    \"commitmentStartTime\" : \"2023-01-07T13:31:35.227761Z\"\n  }, {\n    \"multiRegionAuxiliary\" : true,\n    \"renewalPlan\" : \"COMMITMENT_PLAN_UNSPECIFIED\",\n    \"slotCount\" : \"bz48ayzk58fhli3vxkatv2ohjmtdu4657e43at91a8mopgzajhpejtd42jvxioeo4ib7w4h1pqo6bar2klky72ag5giazefaezcp6vxa9zpuzlmfvgo2lwgesl63cf57gpngq2ajbylx2dd1iffxzk7ufurgeyy304cxroik36kq\",\n    \"name\" : \"Aimee Erdman PhD\",\n    \"state\" : \"PENDING\",\n    \"plan\" : \"MONTHLY\",\n    \"commitmentEndTime\" : \"2022-05-12T12:29:35.227874Z\",\n    \"failureStatus\" : {\n      \"code\" : 1124934090,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Non id eligendi. Eaque quis doloribus quia at. Quo qui ducimus consectetur.\"\n    },\n    \"commitmentStartTime\" : \"2022-05-15T13:49:35.227949Z\"\n  }, {\n    \"multiRegionAuxiliary\" : false,\n    \"renewalPlan\" : \"ANNUAL\",\n    \"slotCount\" : \"c382bnhb8u2atlqp4672tjxayuerf3b1dmeuyjbegctojitfpg3zz6iaey3rdhmrv879pe415igs22lekof04pk0lshou8zxoqg99u80jtfabdd651x48vhxv9eafgnduskz6odb2pmg5rer3gwge23kosxks13s7\",\n    \"name\" : \"Marcelene Bradtke\",\n    \"state\" : \"FAILED\",\n    \"plan\" : \"ANNUAL\",\n    \"commitmentEndTime\" : \"2023-03-02T14:17:35.228054Z\",\n    \"failureStatus\" : {\n      \"code\" : 46095339,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Omnis consequuntur iure illo et id. Saepe debitis dolorum nisi ducimus perferendis. Explicabo ut doloribus quia. Architecto optio debitis et. Saepe eos at nihil sapiente minima non.\"\n    },\n    \"commitmentStartTime\" : \"2022-06-09T12:49:35.228134Z\"\n  }, {\n    \"multiRegionAuxiliary\" : true,\n    \"renewalPlan\" : \"COMMITMENT_PLAN_UNSPECIFIED\",\n    \"slotCount\" : \"2knr8nqgichn\",\n    \"name\" : \"Victor Monahan\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"plan\" : \"ANNUAL\",\n    \"commitmentEndTime\" : \"2023-01-27T10:38:35.22824Z\",\n    \"failureStatus\" : {\n      \"code\" : 1927074230,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Rerum excepturi ea saepe. Quis doloremque voluptatem quo modi sit. Occaecati laboriosam molestiae et voluptatem non. Autem aut consectetur qui totam. Non est in.\"\n    },\n    \"commitmentStartTime\" : \"2022-04-09T11:50:35.228318Z\"\n  }, {\n    \"multiRegionAuxiliary\" : true,\n    \"renewalPlan\" : \"COMMITMENT_PLAN_UNSPECIFIED\",\n    \"slotCount\" : \"tmjsshqvy5\",\n    \"name\" : \"Miss Brendan Bode\",\n    \"state\" : \"PENDING\",\n    \"plan\" : \"FLEX\",\n    \"commitmentEndTime\" : \"2022-11-04T12:01:35.22845Z\",\n    \"failureStatus\" : {\n      \"code\" : 1952688247,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Corporis aut velit voluptate eveniet. Praesentium ad soluta. Laudantium quis ex dolorem laborum voluptatum.\"\n    },\n    \"commitmentStartTime\" : \"2022-06-08T13:35:35.228525Z\"\n  }, {\n    \"multiRegionAuxiliary\" : false,\n    \"renewalPlan\" : \"ANNUAL\",\n    \"slotCount\" : \"j0fbto1ki2ypunxd7r2peio247dd1473zcc67vu9cphbl6qo59e0qp98b8h47gjng0km4o4gs5so7361eljq2fxdisjjbcbnm57s19jtuiea9ej5lcps7s0bgw3bsr\",\n    \"name\" : \"Dexter Ankunding\",\n    \"state\" : \"ACTIVE\",\n    \"plan\" : \"FLEX\",\n    \"commitmentEndTime\" : \"2022-07-30T12:49:35.228632Z\",\n    \"failureStatus\" : {\n      \"code\" : 1774616707,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Pariatur quia voluptates sed qui molestias odio qui. Maxime quibusdam amet quidem ratione id sed. Culpa similique similique soluta earum dolorem atque qui. Quae quibusdam quae. Facere possimus distinc\"\n    },\n    \"commitmentStartTime\" : \"2022-04-22T11:58:35.228736Z\"\n  }, {\n    \"multiRegionAuxiliary\" : false,\n    \"renewalPlan\" : \"TRIAL\",\n    \"slotCount\" : \"8oji00\",\n    \"name\" : \"Weston King\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"plan\" : \"FLEX\",\n    \"commitmentEndTime\" : \"2022-09-05T11:07:35.228836Z\",\n    \"failureStatus\" : {\n      \"code\" : 1209774720,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sunt labore ullam fugit dolor. Cumque ullam et cupiditate. Ad voluptatem unde animi. Et expedita eveniet dolore asperiores labore consequatur quae.\"\n    },\n    \"commitmentStartTime\" : \"2023-01-11T11:06:35.228921Z\"\n  }, {\n    \"multiRegionAuxiliary\" : true,\n    \"renewalPlan\" : \"MONTHLY\",\n    \"slotCount\" : \"412fx60jfjb5a43hibsxsi6e2hqwiaclxzto232olmsygcsu98nmn2yu3ab0k3zif15fhf5qy\",\n    \"name\" : \"Rolland Weimann\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"plan\" : \"ANNUAL\",\n    \"commitmentEndTime\" : \"2022-04-05T10:46:35.229028Z\",\n    \"failureStatus\" : {\n      \"code\" : 1333595128,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Earum earum temporibus. Nobis perferendis rerum. Sint in quis numquam quis.\"\n    },\n    \"commitmentStartTime\" : \"2022-07-20T10:59:35.229102Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6189be6e-63cd-4cc7-9cdc-68db168ac50f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.229242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.capacityCommitments.list",
          "schema" : {
            "description" : "The response for ReservationService.ListCapacityCommitments.",
            "properties" : {
              "capacityCommitments" : {
                "description" : "List of capacity commitments visible to the user.",
                "items" : {
                  "$ref" : "#/components/schemas/CapacityCommitment"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95db319d-4e79-4ef7-927f-4b80a766e49e",
    "name" : "Creates an assignment object which allows the given project to submit jobs of a ...",
    "request" : {
      "urlPath" : "/v1beta1/cibavosflb3fzrsvnba67bnxvo01d95co327qr71sdeqwl2bhdv1cpt5e6air79bln98hxsocaxiig4sm356qgm49znim3tlf2zucrmsv78v57806ns9a9rxw21ppiu6ufgbmb3gr8ndgab05rse/assignments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Willian Tillman\",\n  \"assignee\" : \"tl775z4ya6nmpwct88w9ts8gbzhfupjvdo1exras7yy2zoqlh9jra4netmjfrlmms4ldo4obqg0e5qf0wl\",\n  \"state\" : \"PENDING\",\n  \"jobType\" : \"QUERY\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95db319d-4e79-4ef7-927f-4b80a766e49e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.227541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.reservations.assignments.create",
          "schema" : {
            "description" : "An assignment allows a project to submit jobs of a certain type using slots from the specified reservation.",
            "properties" : {
              "assignee" : {
                "description" : "The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`.",
                "type" : "string"
              },
              "jobType" : {
                "description" : "Which type of jobs will use the reservation.",
                "enum" : [ "JOB_TYPE_UNSPECIFIED", "PIPELINE", "QUERY", "ML_EXTERNAL" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`. The assignment_id must only contain lower case alphanumeric characters or dashes and the max length is 64 characters.",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. State of the assignment.",
                "enum" : [ "STATE_UNSPECIFIED", "PENDING", "ACTIVE" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ba7bcfb0-f177-41fe-8a33-465c630bb242",
    "name" : "Lists assignments. Only explicitly created assignments will be returned. Example...",
    "request" : {
      "urlPath" : "/v1beta1/1xrm97nx0m6crvc5a2j8p76fh4rwx7ep2u6jmi6ri5aywi932sja5m0gmi8a7cbor6k5vqpgw4h1emahk3csv0gyyii5a1dursg7b3a/assignments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"assignments\" : [ {\n    \"name\" : \"Suzi Fisher\",\n    \"assignee\" : \"y8i4d4h7s0l58k3sfaji833uy4e3oenu81z3l1cayzzz0\",\n    \"state\" : \"ACTIVE\",\n    \"jobType\" : \"ML_EXTERNAL\"\n  }, {\n    \"name\" : \"Mr. Lucina Rolfson\",\n    \"assignee\" : \"3eupjhr424h84vxplvkrbvxegp8wh5kqom0iona5ai4qq1j\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"jobType\" : \"ML_EXTERNAL\"\n  }, {\n    \"name\" : \"Wilber Walker\",\n    \"assignee\" : \"e06ow5ulxge9krhhw8bekg96hcfqrkeycn0ilbm3311xui58jj3d7fcx3n16s1qpk27bnvhzbrw2jc\",\n    \"state\" : \"ACTIVE\",\n    \"jobType\" : \"JOB_TYPE_UNSPECIFIED\"\n  }, {\n    \"name\" : \"Brooks Howell\",\n    \"assignee\" : \"cp0n6tsj6mdyxp4wfyeaoygy8cvdba0viuqqdm6h6b40vnc9wyfj4j13ahfknlmjff34e82iuazd73gfmtt4jfdp5tmh4fd380nu0y4i21bji8rxax1f9lx1jp85qo8d79sfgtor7pbav3wgmn2bkimjfvffg19a6x3busynvrnw0rgs0spcmte7h1xr8x\",\n    \"state\" : \"PENDING\",\n    \"jobType\" : \"PIPELINE\"\n  }, {\n    \"name\" : \"Dr. Ellis Mills\",\n    \"assignee\" : \"8ip3c9bijejec8idwsrfhp1fy4egkkvjx7akl7443nzwwq3h7251v3o72bawadscgyqtawmq5838fgtyioo6zpv5zzog8tq23xutihyllgrkj2jlrn9swldqjl0e77k7cusqdlsc3loin1jhrjr17j0db1i4ab3bdh27sx706h908ja778a375pnzqukyyzjbwrg204\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"jobType\" : \"JOB_TYPE_UNSPECIFIED\"\n  }, {\n    \"name\" : \"Gary Cassin\",\n    \"assignee\" : \"aqwradzgnrm1e4yu9m4wlsf7r0mp7w3ilqkzhsk2ewu44q7iwwmi\",\n    \"state\" : \"PENDING\",\n    \"jobType\" : \"ML_EXTERNAL\"\n  } ],\n  \"nextPageToken\" : \"p3vahpro7gwza121cbiwgq96y16cwhq7zueeb7zh4qtkg6wo2tla6jt21pkqoizhnwj7nbuvx810zh9pyycoqvwy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba7bcfb0-f177-41fe-8a33-465c630bb242",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.227393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.reservations.assignments.list",
          "schema" : {
            "description" : "The response for ReservationService.ListAssignments.",
            "properties" : {
              "assignments" : {
                "description" : "List of assignments visible to the user.",
                "items" : {
                  "$ref" : "#/components/schemas/Assignment"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6ac2c23c-c24b-45bd-a456-557a6ac28a57",
    "name" : "Splits capacity commitment to two commitments of the same plan and `commitment_e...",
    "request" : {
      "urlPath" : "/v1beta1/Abbie+Wiza:split",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"first\" : {\n    \"multiRegionAuxiliary\" : false,\n    \"renewalPlan\" : \"ANNUAL\",\n    \"slotCount\" : \"a7coz5hv2exe9yormeo279zjrwfmnae0a7wzy2b2tou6uyil2o9axisblawk9rh8nwo0yoj4nu0uv9vclesiaj1kjo8eihta6as0t0mpr13dtvjukq1b9z2fqqebigr\",\n    \"name\" : \"Svetlana\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"plan\" : \"ANNUAL\",\n    \"commitmentEndTime\" : \"2022-10-01T11:21:35.226506Z\",\n    \"failureStatus\" : {\n      \"code\" : 1193513537,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Quo quis enim quis aliquam. Quis suscipit harum nostrum magni. Hic animi non ut necessitatibus. Rerum similique ut nam.\"\n    },\n    \"commitmentStartTime\" : \"2022-08-25T12:05:35.226599Z\"\n  },\n  \"second\" : {\n    \"multiRegionAuxiliary\" : true,\n    \"renewalPlan\" : \"TRIAL\",\n    \"slotCount\" : \"glylabeie7fdytrlxmi4ifkbs55vj0t55e5tpfcnwvvjulfk2yrvudmmjek3xxz392aabg8oefuvqfuvxmpqbqyu\",\n    \"name\" : \"Stephan Emmerich\",\n    \"state\" : \"FAILED\",\n    \"plan\" : \"COMMITMENT_PLAN_UNSPECIFIED\",\n    \"commitmentEndTime\" : \"2022-05-18T13:53:35.226711Z\",\n    \"failureStatus\" : {\n      \"code\" : 1453223369,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Doloremque in quia nam excepturi blanditiis. Soluta nemo magni tempore fuga cumque incidunt molestias. Quia sed expedita corporis id. Error voluptatum velit. Est voluptas soluta autem.\"\n    },\n    \"commitmentStartTime\" : \"2022-11-29T10:36:35.226793Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ac2c23c-c24b-45bd-a456-557a6ac28a57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.226886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.capacityCommitments.split",
          "schema" : {
            "description" : "The response for ReservationService.SplitCapacityCommitment.",
            "properties" : {
              "first" : {
                "$ref" : "#/components/schemas/CapacityCommitment"
              },
              "second" : {
                "$ref" : "#/components/schemas/CapacityCommitment"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5ccc79fd-997e-4fec-bd66-7ee15434b18a",
    "name" : "Moves an assignment under a new reservation. This differs from removing an exist...",
    "request" : {
      "urlPath" : "/v1beta1/Rosario+Wyman:move",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Jewell Corkery\",\n  \"assignee\" : \"tt4gytacuixr2djuhlx78z9u5sj4ug058dou887e9wl25xwci0rtp44wdmizpyegxxsxj07hwjh3hr41zdv2zzp1rap2roxsfp5pn4t9hyn569s1ksxqklemluq9l0nsootyq0ev166a99gz155lg\",\n  \"state\" : \"ACTIVE\",\n  \"jobType\" : \"JOB_TYPE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ccc79fd-997e-4fec-bd66-7ee15434b18a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.226366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.reservations.assignments.move",
          "schema" : {
            "description" : "An assignment allows a project to submit jobs of a certain type using slots from the specified reservation.",
            "properties" : {
              "assignee" : {
                "description" : "The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`.",
                "type" : "string"
              },
              "jobType" : {
                "description" : "Which type of jobs will use the reservation.",
                "enum" : [ "JOB_TYPE_UNSPECIFIED", "PIPELINE", "QUERY", "ML_EXTERNAL" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`. The assignment_id must only contain lower case alphanumeric characters or dashes and the max length is 64 characters.",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. State of the assignment.",
                "enum" : [ "STATE_UNSPECIFIED", "PENDING", "ACTIVE" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a5e440c-b930-4be3-ab8f-4f9de2b724bf",
    "name" : "Updates an existing assignment. Only the `priority` field can be updated.",
    "request" : {
      "urlPath" : "/v1beta1/Marcel+Dach",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Darrel Rutherford\",\n  \"assignee\" : \"clv8nokf0gk8vo5wuiyrj4b2l7xujcdtcm3s2z96my25c5l74md0oay7uv7b6vrppvonq0ffax5yniuw5xri4838nvc5yr980ss\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"jobType\" : \"JOB_TYPE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a5e440c-b930-4be3-ab8f-4f9de2b724bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.2262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.reservations.assignments.patch",
          "schema" : {
            "description" : "An assignment allows a project to submit jobs of a certain type using slots from the specified reservation.",
            "properties" : {
              "assignee" : {
                "description" : "The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`.",
                "type" : "string"
              },
              "jobType" : {
                "description" : "Which type of jobs will use the reservation.",
                "enum" : [ "JOB_TYPE_UNSPECIFIED", "PIPELINE", "QUERY", "ML_EXTERNAL" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`. The assignment_id must only contain lower case alphanumeric characters or dashes and the max length is 64 characters.",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. State of the assignment.",
                "enum" : [ "STATE_UNSPECIFIED", "PENDING", "ACTIVE" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b5c569e9-a2c1-432b-bacc-9e02454938e3",
    "name" : "Returns information about the reservation.",
    "request" : {
      "urlPath" : "/v1beta1/Olivia+Torp",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"multiRegionAuxiliary\" : false,\n  \"creationTime\" : \"2022-04-19T14:02:35.225691Z\",\n  \"ignoreIdleSlots\" : true,\n  \"name\" : \"Brittaney Pollich\",\n  \"slotCapacity\" : \"New Albertport\",\n  \"updateTime\" : \"2022-06-17T10:46:35.225827Z\",\n  \"concurrency\" : \"HUF\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5c569e9-a2c1-432b-bacc-9e02454938e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.225992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.reservations.get",
          "schema" : {
            "description" : "A reservation is a mechanism used to guarantee slots to users.",
            "properties" : {
              "concurrency" : {
                "description" : "Job concurrency target which sets a soft upper bound on the number of jobs that can run concurrently in this reservation. This is a soft target due to asynchronous nature of the system and various optimizations for small queries. Default value is 0 which means that concurrency target will be automatically computed by the system. NOTE: this field is exposed as `target_job_concurrency` in the Information Schema, DDL and BQ CLI.",
                "format" : "int64",
                "type" : "string"
              },
              "creationTime" : {
                "description" : "Output only. Creation time of the reservation.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "ignoreIdleSlots" : {
                "description" : "If false, any query or pipeline job using this reservation will use idle slots from other reservations within the same admin project. If true, a query or pipeline job using this reservation will execute with the slot capacity specified in the slot_capacity field at most.",
                "type" : "boolean"
              },
              "multiRegionAuxiliary" : {
                "description" : "Applicable only for reservations located within one of the BigQuery multi-regions (US or EU). If set to true, this reservation is placed in the organization's secondary region which is designated for disaster recovery purposes. If false, this reservation is placed in the organization's default region.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "The resource name of the reservation, e.g., `projects/*/locations/*/reservations/team1-prod`. The reservation_id must only contain lower case alphanumeric characters or dashes. It must start with a letter and must not end with a dash. Its maximum length is 64 characters.",
                "type" : "string"
              },
              "slotCapacity" : {
                "description" : "Minimum slots available to this reservation. A slot is a unit of computational power in BigQuery, and serves as the unit of parallelism. Queries using this reservation might use more slots during runtime if ignore_idle_slots is set to false. If the new reservation's slot capacity exceeds the project's slot capacity or if total slot capacity of the new reservation and its siblings exceeds the project's slot capacity, the request will fail with `google.rpc.Code.RESOURCE_EXHAUSTED`. NOTE: for reservations in US or EU multi-regions, slot capacity constraints are checked separately for default and auxiliary regions. See multi_region_auxiliary flag for more details.",
                "format" : "int64",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last update time of the reservation.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "43f86c7f-496e-43c8-9eed-67df5417d036",
    "name" : "Deletes a assignment. No expansion will happen. Example: * Organization `organiz...",
    "request" : {
      "urlPath" : "/v1beta1/Porter+Grimes+V",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43f86c7f-496e-43c8-9eed-67df5417d036",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.225626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryreservation.projects.locations.reservations.assignments.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}