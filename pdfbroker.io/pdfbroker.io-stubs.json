{
  "mappings" : [ {
    "id" : "7bd36d44-1bec-4121-b40e-5361ec814416",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "7bd36d44-1bec-4121-b40e-5361ec814416",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.584115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "3184886c-f895-4c20-bb73-38cc02899530",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "3184886c-f895-4c20-bb73-38cc02899530",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.584099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "632934b7-e069-41fb-81d3-aa2b21d6a7ad",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "632934b7-e069-41fb-81d3-aa2b21d6a7ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.584075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "8368a4eb-8fb9-4ed4-8c4d-fb03ffcbc2aa",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"bu01aga3l892rpczd83h6jzns9hstb0hjxn5g5f35tt6ug6tuakjxlksbtenbw3xao4arlh05ahbk0ghwmpz793p5wspzx255iinha6227y35ikf0rqztndpqtvingo9jbq5waktvtnnpfpi1xu8z7wkcoav455qdz0ka\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "8368a4eb-8fb9-4ed4-8c4d-fb03ffcbc2aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.584029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "24e28051-0749-43ab-bc63-1dbbf139785e",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24e28051-0749-43ab-bc63-1dbbf139785e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "15ca75b6-7bcb-4803-9cec-8e4063a61a19",
    "name" : "Create pdf-file from complete XSL-FO document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "15ca75b6-7bcb-4803-9cec-8e4063a61a19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c730f68b-cff0-4f6b-a4c5-8bb4a4142793",
    "name" : "Create pdf-file from complete XSL-FO document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "c730f68b-cff0-4f6b-a4c5-8bb4a4142793",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "4718944d-009d-4073-b89b-eacf37dfbd15",
    "name" : "Create pdf-file from complete XSL-FO document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4718944d-009d-4073-b89b-eacf37dfbd15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "9eb60a1e-d51c-4d12-9705-15ad6137fca9",
    "name" : "Create pdf-file from complete XSL-FO document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"wztcahl7se5cjram3bgzrlu66093pe9l5ru01h18t2wulwu65csdkhk2h8bdmfms2f2ecnuc2y2uelt8qf93f14p2i7s2\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "9eb60a1e-d51c-4d12-9705-15ad6137fca9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "8b152f82-51fd-42ea-bb07-81f2e097c4bc",
    "name" : "Create pdf-file from complete XSL-FO document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b152f82-51fd-42ea-bb07-81f2e097c4bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.58381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "9296a2ca-fee6-42ec-abf7-133405f67db3",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. - 429",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "9296a2ca-fee6-42ec-abf7-133405f67db3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "af4af58f-94ba-4c57-8482-9c61f8849857",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. - 415",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "af4af58f-94ba-4c57-8482-9c61f8849857",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "01019cf2-e2c0-4ab7-a030-f3fe0d9aa7bb",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01019cf2-e2c0-4ab7-a030-f3fe0d9aa7bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "2d4e7a4c-65cb-40ec-a9a7-a06c4cc264ad",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"4atg9aeo1hreofcglq0822bp5aa3f05j9591awq3wxj76i8w766dyq5kpecvhgf64cxligaju230psyj9cl9zy1vbb9e6dl2i9dkah7p821xwpwxsq7pidwlvjo7seenmmxbdf9pqqozn8t27ii3ekis8unvd0mwipq1bwj0wfndjmbl8jw7nbyz7m\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "2d4e7a4c-65cb-40ec-a9a7-a06c4cc264ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "2968bcb0-2b19-411f-93f1-4287eea28525",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2968bcb0-2b19-411f-93f1-4287eea28525",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "6b2d1bb3-7856-4b3c-acd0-26d8e5e3de16",
    "name" : "Write text on a page in a pdf document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "6b2d1bb3-7856-4b3c-acd0-26d8e5e3de16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.58358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "efbb2ad1-2668-4c1b-aba8-e31b435983c0",
    "name" : "Write text on a page in a pdf document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "efbb2ad1-2668-4c1b-aba8-e31b435983c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "2da3a6fe-8751-4e64-a563-9382400fa0b6",
    "name" : "Write text on a page in a pdf document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2da3a6fe-8751-4e64-a563-9382400fa0b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "bdc16f05-853c-4c95-8cae-be88bb5f81ee",
    "name" : "Write text on a page in a pdf document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"gate92we3cyuxicdm7kugm1tjsmifzqnqfz71oq\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "bdc16f05-853c-4c95-8cae-be88bb5f81ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.58349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "d8750c49-01ac-4906-8a67-55c010ba9e86",
    "name" : "Write text on a page in a pdf document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8750c49-01ac-4906-8a67-55c010ba9e86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "2ccd48dd-edcb-4dcf-a130-1f129b49a724",
    "name" : "Generate an image of to provided pdf file - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "2ccd48dd-edcb-4dcf-a130-1f129b49a724",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "e14e4839-4f59-488a-86b8-1b7cc1eac475",
    "name" : "Generate an image of to provided pdf file - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "e14e4839-4f59-488a-86b8-1b7cc1eac475",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "dca6c36e-8c33-429f-bd31-e9c1153341b1",
    "name" : "Generate an image of to provided pdf file (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dca6c36e-8c33-429f-bd31-e9c1153341b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "223f65ce-8983-49ff-b4a0-5c97980a0257",
    "name" : "Generate an image of to provided pdf file (image/png)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"1qizuq01pz9n6bm32w1pa65kdmml1ie7v8j6crd6qh7zfrm9sbji5v2dppnkanxejl2ua53gl6opcu0j6qfiyttyt0p2d92f4gifnroouhw5357znxj29z62hpr679fza07uk7u\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "223f65ce-8983-49ff-b4a0-5c97980a0257",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "b7ac8852-38ed-4410-a431-98c074d745e1",
    "name" : "Generate an image of to provided pdf file (image/jpeg)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"k5a29crez7kzlls55u138vhacdn681zdclm9r5lne0zxigewdd3t9afnm5ww7xgddbowcvcwvtn0niz9b87237laf8vt83tca8qv57116i3gg9eb5cc970mntvodvskrpc3jx3zgviboe447l1mtg7fz2h0fdvvpc7sig68eaiz6xcthl3akzr0izdix5oyftprp\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "b7ac8852-38ed-4410-a431-98c074d745e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "4ae01482-8cc6-4ece-b970-d4645ff8eedb",
    "name" : "Generate an image of to provided pdf file (image/gif)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/gif"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"cfndepybp8zsfciybnadyvy74k5e6n3y5p0slqj3p9k6ha0ey72e9s29qq9tgb0u28blibrfm0wi8wx8z29\"",
      "headers" : {
        "Content-Type" : "image/gif"
      }
    },
    "uuid" : "4ae01482-8cc6-4ece-b970-d4645ff8eedb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "ad2da2f2-134b-45f8-9801-b13dee50ba56",
    "name" : "Generate an image of to provided pdf file (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"imageBase64String\": \"Image file base64 encoded. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.\",\r\n  \"errorMessage\": \"If any error occurred, information will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad2da2f2-134b-45f8-9801-b13dee50ba56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the image file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"image/jpeg\", \"image/png\" or \"image/gif\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "ImageBase64String" : {
                "description" : "The Base64 encoded string that is the image file. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "c17cad20-09ac-44bb-b62e-461447c72e0d",
    "name" : "Concatenate multiple pdf files into single pdf file.. - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "c17cad20-09ac-44bb-b62e-461447c72e0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.5831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "6f75ecbc-ae00-48f8-a69c-b3871c211167",
    "name" : "Concatenate multiple pdf files into single pdf file.. - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "6f75ecbc-ae00-48f8-a69c-b3871c211167",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "db709158-38e3-4626-9921-226028b4be2c",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db709158-38e3-4626-9921-226028b4be2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "31c67e95-e8a2-4e75-84aa-15ecb441bf0c",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"rmogowci9hyb94y6l1mtcig506xse89ut9nl8dejioen6kcbdicgrqxfkx8lbbfb859kslm7xw1pqeuk8mmoecevbcseqw620ih5ahd02322z07ny1t6cvg5mb1vw4atdsyedd709fntz6oeqzvg9sqcl\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "31c67e95-e8a2-4e75-84aa-15ecb441bf0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.583012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "27af6ccb-335d-436b-b5b9-0de71a2a7ae5",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27af6ccb-335d-436b-b5b9-0de71a2a7ae5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.582929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "da8399fe-933c-4587-8724-cfa2c4fd2c12",
    "name" : "Basic method to verify api is up and running - 429",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "da8399fe-933c-4587-8724-cfa2c4fd2c12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.582857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "a449ea89-638e-430d-a833-8b9c324a3039",
    "name" : "Basic method to verify api is up and running - 415",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "a449ea89-638e-430d-a833-8b9c324a3039",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.58284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "66170708-5c0d-4b1f-9724-b1bffcbfbe84",
    "name" : "Basic method to verify api is up and running (application/json)",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66170708-5c0d-4b1f-9724-b1bffcbfbe84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.582789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  } ]
}