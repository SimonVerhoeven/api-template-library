{
  "mappings" : [ {
    "id" : "b6b18817-3a64-4591-8409-10dc694b1c42",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "b6b18817-3a64-4591-8409-10dc694b1c42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.83884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "c0cd6012-b6d5-4291-a778-d037db0c0035",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "c0cd6012-b6d5-4291-a778-d037db0c0035",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "7bdfb091-aca1-4266-af4f-46713d618366",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bdfb091-aca1-4266-af4f-46713d618366",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "667be488-40ec-43c7-bedd-b30fb2235fc3",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"5gj9ycl05twhdx\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "667be488-40ec-43c7-bedd-b30fb2235fc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "e17d8da1-8c1f-454c-89f4-7dd2363da573",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e17d8da1-8c1f-454c-89f4-7dd2363da573",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2429323-d65b-4fc8-9986-b20cfbe82e52",
    "name" : "Create pdf-file from complete XSL-FO document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "a2429323-d65b-4fc8-9986-b20cfbe82e52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "93f71e05-0a12-466b-8f23-f80f35eb065c",
    "name" : "Create pdf-file from complete XSL-FO document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "93f71e05-0a12-466b-8f23-f80f35eb065c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "1756cfb7-6877-4040-b4ef-9d1f47a5d1ac",
    "name" : "Create pdf-file from complete XSL-FO document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1756cfb7-6877-4040-b4ef-9d1f47a5d1ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3180ea6f-8c60-4854-b3d7-d3a9e926d7e8",
    "name" : "Create pdf-file from complete XSL-FO document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"acpeokg8b5qvknic00xy4vdbjuja5zmjx7pyl3j2a9zfw3e7vfhajosg6850gf3gebbgjfgcjnvpe56vtmqa5iwfyqg7a6qff1z3yhghe26tu39g6b2l33l411xuxsqigkh3bk22rtocotzxik3848e7k4ydoscrnflx\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "3180ea6f-8c60-4854-b3d7-d3a9e926d7e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "1d586ca8-ee4d-4949-bba8-785939c3bb53",
    "name" : "Create pdf-file from complete XSL-FO document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d586ca8-ee4d-4949-bba8-785939c3bb53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "57b1ac71-e40b-4171-a035-372fb049240c",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. - 429",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "57b1ac71-e40b-4171-a035-372fb049240c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "ec20a98d-7285-4ee5-89cb-2dc0580295ad",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. - 415",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "ec20a98d-7285-4ee5-89cb-2dc0580295ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "6a2f94a9-5101-424a-86c2-99b5d67afd47",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a2f94a9-5101-424a-86c2-99b5d67afd47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "26054ed6-27ca-4408-8ec3-34e58e380fe4",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"vtti2eqqm6loddhf6ntcryfhtjhrqismvv\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "26054ed6-27ca-4408-8ec3-34e58e380fe4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "ba6e63f4-8952-4005-b5c9-79fb260dfbd1",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba6e63f4-8952-4005-b5c9-79fb260dfbd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d74ca8c5-07aa-44ae-8c2f-ae116055bd77",
    "name" : "Write text on a page in a pdf document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "d74ca8c5-07aa-44ae-8c2f-ae116055bd77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.83827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "96d0937f-0cd5-41cd-8d88-f21b162bea81",
    "name" : "Write text on a page in a pdf document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "96d0937f-0cd5-41cd-8d88-f21b162bea81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "77d0301c-b155-4b11-a0e7-d8e3128a570d",
    "name" : "Write text on a page in a pdf document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77d0301c-b155-4b11-a0e7-d8e3128a570d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "13dad2ed-e6b9-4e6a-a6be-e0e924fcfc3a",
    "name" : "Write text on a page in a pdf document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"lj0ig3h2f7ejgbqokol82dsc6n9ak9gqodeg3rjl647nsq51elg4i6jwcv0i8bqnqbzahnt0kwhdjyiqllkie856z3aqnsziql4uutv6h5rxud0c3jmbosddbqe7bzvfhxke5uy3u76u8w3mag60qwi215kvhc6b1hs\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "13dad2ed-e6b9-4e6a-a6be-e0e924fcfc3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "d83ce27e-d3bb-477b-8cff-449ba338484d",
    "name" : "Write text on a page in a pdf document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d83ce27e-d3bb-477b-8cff-449ba338484d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838128Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fe5fbc64-478d-4c0e-8ffa-e578af4e5a53",
    "name" : "Generate an image of to provided pdf file - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "fe5fbc64-478d-4c0e-8ffa-e578af4e5a53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "8a48a921-39a7-4b32-8f31-33902a210935",
    "name" : "Generate an image of to provided pdf file - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "8a48a921-39a7-4b32-8f31-33902a210935",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "a61394c9-8720-490c-b4b1-5aac821a4fc8",
    "name" : "Generate an image of to provided pdf file (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a61394c9-8720-490c-b4b1-5aac821a4fc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.838036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8db65592-4d9c-4fc5-98f7-bc6892bb7c8c",
    "name" : "Generate an image of to provided pdf file (image/png)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"m71oa9qccygo5ubfm8drzn2br2we5pay3gxsmbfkyochbae95r0c4d7rxmiheto29mknod9ts8oilb03yp8cq9jf6e1slxqzr8qui99twh4kivrp9s9k5c34atq7a9t99qmz79h7qnvdgk19raaos690mndrxgz0cpxej2ifluqxp2900bgb\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "8db65592-4d9c-4fc5-98f7-bc6892bb7c8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "8c636d49-721e-4149-973b-10c4ae9d8eb5",
    "name" : "Generate an image of to provided pdf file (image/jpeg)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"dg138ighrja3chtk95odmg60qqje5gn5zhok1wf0u9uhwnxntk3nku06p2hs2bov9drr3d82a8rl2og92qbcny2hzcmn0fbmugmkjdo6ualfwl2rgeepavg33zie72inz\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "8c636d49-721e-4149-973b-10c4ae9d8eb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "fb477414-9e90-4d5c-94a8-b31cb1230e63",
    "name" : "Generate an image of to provided pdf file (image/gif)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/gif"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"crkmgbpcqo6cwwsw986xx9ta99lgx26mwq24a1mom7hpb2c6toknphyduhosvtyrudsmal4z5900yb1amrb4arka0p1f7npuilx6u59yv8z9gxil30nvx6dnfsonxq6vlx2n486wpskg3bh9op1ukqof8z2axbzjluiwtbr6myk19hxedno7388ju2fyjfr\"",
      "headers" : {
        "Content-Type" : "image/gif"
      }
    },
    "uuid" : "fb477414-9e90-4d5c-94a8-b31cb1230e63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "5a14ce88-a3a2-45d9-a5ef-c4aad8d899a4",
    "name" : "Generate an image of to provided pdf file (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"imageBase64String\": \"Image file base64 encoded. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.\",\r\n  \"errorMessage\": \"If any error occurred, information will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a14ce88-a3a2-45d9-a5ef-c4aad8d899a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the image file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"image/jpeg\", \"image/png\" or \"image/gif\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "ImageBase64String" : {
                "description" : "The Base64 encoded string that is the image file. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "75070d41-c3c6-4a33-8211-44b226e57abc",
    "name" : "Concatenate multiple pdf files into single pdf file.. - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "75070d41-c3c6-4a33-8211-44b226e57abc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "74c20771-0d09-476f-8871-d05f7b383e1d",
    "name" : "Concatenate multiple pdf files into single pdf file.. - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "74c20771-0d09-476f-8871-d05f7b383e1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "1c0f3ae6-a19e-44e4-bbe4-a7baf5a44100",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c0f3ae6-a19e-44e4-bbe4-a7baf5a44100",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65219388-0be7-4c8e-9c3a-b678517552a3",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jrgmwhzn4497bp9tq2a3vogfclrxdz7zzzyxqizor609xov4f23oeo\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "65219388-0be7-4c8e-9c3a-b678517552a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "3a2278f5-448d-42ab-b840-4faf12461d6c",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a2278f5-448d-42ab-b840-4faf12461d6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f37621b6-bd5c-4f90-a56f-e7e294cb60be",
    "name" : "Basic method to verify api is up and running - 429",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "f37621b6-bd5c-4f90-a56f-e7e294cb60be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "67c11eb8-0cf2-4b74-a49f-ae89574e0a19",
    "name" : "Basic method to verify api is up and running - 415",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "67c11eb8-0cf2-4b74-a49f-ae89574e0a19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "92f98b2f-dbf5-44b8-a00e-75d11a89fff8",
    "name" : "Basic method to verify api is up and running (application/json)",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92f98b2f-dbf5-44b8-a00e-75d11a89fff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:56.837446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}