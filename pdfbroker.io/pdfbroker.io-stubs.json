{
  "mappings" : [ {
    "id" : "83d7829f-61ff-470e-b5c9-3c1bea9fa903",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "83d7829f-61ff-470e-b5c9-3c1bea9fa903",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "9430fabe-427b-4248-b804-b5f473f30966",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "9430fabe-427b-4248-b804-b5f473f30966",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "cc53ec31-47a4-495b-88d7-96dc85d21726",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc53ec31-47a4-495b-88d7-96dc85d21726",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "87edb318-1432-42db-8c34-3ef03eae9f28",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"h1ltag82wrd8drppbl40aoc85qdd185i521rujd0b967ua1c87xlfmqoywsqyjiqur8pc8d8oogv0bd26bvhvshlocta0wu88fq3oz0nvv5sacu761a6nmkvpfrdnqwmwzmtt5uo8bpinlu06ss\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "87edb318-1432-42db-8c34-3ef03eae9f28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "124756ce-50d2-4ccf-b038-c4b78d7396c2",
    "name" : "Create pdf-file from transforming xml document with Xsl-Fo transform document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfowithtransform",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "124756ce-50d2-4ccf-b038-c4b78d7396c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "0f522cd7-91aa-4b95-9f68-6035caeafb07",
    "name" : "Create pdf-file from complete XSL-FO document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "0f522cd7-91aa-4b95-9f68-6035caeafb07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.89614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "1090ea00-5cdd-4117-a262-8872c610327f",
    "name" : "Create pdf-file from complete XSL-FO document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "1090ea00-5cdd-4117-a262-8872c610327f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "3c0dd50e-7ea9-46f9-8dd4-ac61097e19b0",
    "name" : "Create pdf-file from complete XSL-FO document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c0dd50e-7ea9-46f9-8dd4-ac61097e19b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "27e7c233-ac90-484e-9d49-e471d662e118",
    "name" : "Create pdf-file from complete XSL-FO document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"vl9wt1qkdeftrzibth4rpqhqlalk9dl08voo0mg50pkko6rz4iebgqcsg614kyeq9xf5spxlfi71mfgnz60zndx7xpxwg8l1c0k5aee\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "27e7c233-ac90-484e-9d49-e471d662e118",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "704281b3-3815-4f4a-82ea-43adc368bce6",
    "name" : "Create pdf-file from complete XSL-FO document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/xslfo",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "704281b3-3815-4f4a-82ea-43adc368bce6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.896011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "b7d23d6e-2934-4471-8c7b-e9c4b8dd8251",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. - 429",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "b7d23d6e-2934-4471-8c7b-e9c4b8dd8251",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "ca24e821-82ae-460a-bdf1-629c3386d204",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. - 415",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "ca24e821-82ae-460a-bdf1-629c3386d204",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "8fbb20cb-be2c-4005-b647-2d6c3d78ebb5",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fbb20cb-be2c-4005-b647-2d6c3d78ebb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "3e40a399-82a5-49e6-b982-78f11a64ec5b",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"ct7h2llyr831yg3cwadk226o95g4xpkgvx4isvt4g30z8jtu4lkrseybu3dhu5106kecc1p7qyzwxuhdyxftvbpu283tnlkpc\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "3e40a399-82a5-49e6-b982-78f11a64ec5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "e989d6bd-0786-48aa-9d55-396a9df50552",
    "name" : "Generate pdf file from url using the excellent tool wkhtmltopdf. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/wkhtmltopdf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e989d6bd-0786-48aa-9d55-396a9df50552",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "c60c490d-264c-42a5-a6e2-da1b6871cdee",
    "name" : "Write text on a page in a pdf document. - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "c60c490d-264c-42a5-a6e2-da1b6871cdee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "ef366477-78f8-4656-88dc-d563a0c32a49",
    "name" : "Write text on a page in a pdf document. - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "ef366477-78f8-4656-88dc-d563a0c32a49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "899a8c02-b3ca-4f72-9c4a-42446a85c572",
    "name" : "Write text on a page in a pdf document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "899a8c02-b3ca-4f72-9c4a-42446a85c572",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "20b79440-e884-4c71-9801-1b9fb919ec65",
    "name" : "Write text on a page in a pdf document. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"t4zrxwmlw3558cs8ckspk6uy8naek4qv551mqvs6x9gqttefimlxbhohptg248wen\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "20b79440-e884-4c71-9801-1b9fb919ec65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "ec700855-2407-4ddb-a56b-d3bbef8b055a",
    "name" : "Write text on a page in a pdf document. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfwritestring",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec700855-2407-4ddb-a56b-d3bbef8b055a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "53af6018-09d2-41f5-adb0-0cb7e387889d",
    "name" : "Generate an image of to provided pdf file - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "53af6018-09d2-41f5-adb0-0cb7e387889d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "97cc546f-475c-403e-9d5e-3775bcf291a4",
    "name" : "Generate an image of to provided pdf file - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "97cc546f-475c-403e-9d5e-3775bcf291a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.89558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "000d8786-56ac-4c9b-8f5a-0c9f05f71e1d",
    "name" : "Generate an image of to provided pdf file (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "000d8786-56ac-4c9b-8f5a-0c9f05f71e1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "bc1cee40-5dda-41ba-bd6f-313aa6a4d219",
    "name" : "Generate an image of to provided pdf file (image/png)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"ufyh87samjys1fvz2s96\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "bc1cee40-5dda-41ba-bd6f-313aa6a4d219",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "36395e5c-4499-453b-b6fd-f732617f33e4",
    "name" : "Generate an image of to provided pdf file (image/jpeg)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"v59at0xvlvn10z5fz4ip4hwmru3zg3bwd44lwfo485zjlkiy7yha24vzwm00sbqigx1kn3omwbegjvr3l3dfsq2ggz2j5fq7bosukknqywvyns7mx6fikrxc8hw8t7vhyakehe4jo9nrdoa0wlyx3vof36325v1w1vhuquuy82u8s\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "36395e5c-4499-453b-b6fd-f732617f33e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "741549de-fee2-4bc1-9f91-ef999bbf7971",
    "name" : "Generate an image of to provided pdf file (image/gif)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "image/gif"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"i2ldy1gxs1kbly1nfean35y3gftwutmw4ba625gokhzjgda8v8y53k7q0oclxpt6mv191ld96xthcbgfh5qa5vq6kc2q6ht0p8b5628l57eqfehuhfnab8d678t8h1cg0qw2rhr69m8quf03sc0qv8iahrui2so8bv7xmboy6i18a1t0hf29jfvevikl8bnurh1\"",
      "headers" : {
        "Content-Type" : "image/gif"
      }
    },
    "uuid" : "741549de-fee2-4bc1-9f91-ef999bbf7971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "5fdc824e-3e5b-4ebd-a2a4-e5ff48c92bc6",
    "name" : "Generate an image of to provided pdf file (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdftoimage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"imageBase64String\": \"Image file base64 encoded. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.\",\r\n  \"errorMessage\": \"If any error occurred, information will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fdc824e-3e5b-4ebd-a2a4-e5ff48c92bc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.89537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the image file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"image/jpeg\", \"image/png\" or \"image/gif\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "ImageBase64String" : {
                "description" : "The Base64 encoded string that is the image file. This is a complete data uri, including media type that can be used directly as src on a img-tag e.g.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "cd429a8b-7d14-4f36-9534-1c383ae0880c",
    "name" : "Concatenate multiple pdf files into single pdf file.. - 429",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "cd429a8b-7d14-4f36-9534-1c383ae0880c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "efd82d38-f084-4669-82ad-cc3fdf9ce531",
    "name" : "Concatenate multiple pdf files into single pdf file.. - 415",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "efd82d38-f084-4669-82ad-cc3fdf9ce531",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.89529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "eee95ba3-d710-470b-aa7d-15c25e66031a",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eee95ba3-d710-470b-aa7d-15c25e66031a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "6888b478-d529-47d2-9913-3f23ec0cba74",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/pdf)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"78u7l4jdmgme7yw26i46tjcfba2tp36z3xprq38y1g29sz1l9y4tcpvnu4tvpmqgqn04vl6fpwkr7d8\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "6888b478-d529-47d2-9913-3f23ec0cba74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "e2b2147b-2f78-4ea9-bb1b-ba27ce216eb1",
    "name" : "Concatenate multiple pdf files into single pdf file.. (application/json)",
    "request" : {
      "urlPath" : "/api/pdf/pdfconcat",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\r\n  \"pdfFileBase64String\": \"Base64 encoded pdf file content\",\r\n  \"errorMessage\": \"If any error occured, info will be provided here\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2b2147b-2f78-4ea9-bb1b-ba27ce216eb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "description" : "When setting the Accept-header in the request to \"application/json\" the content of the pdf file will be return as Base64 encoded string. Note that converting data to Base64 encoded strings increases the response size with approximately 33%, if you can accept the a binary format it's better to use Accept-header \"application/pdf\".",
            "properties" : {
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "PdfFileBase64String" : {
                "description" : "The Base64 encoded string that is the pdf file.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "177884a7-7184-4b46-b57a-a12f9484785b",
    "name" : "Basic method to verify api is up and running - 429",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "177884a7-7184-4b46-b57a-a12f9484785b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "67e23b03-37f0-4e15-82f1-baf1318f45bd",
    "name" : "Basic method to verify api is up and running - 415",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET"
    },
    "response" : {
      "status" : 415
    },
    "uuid" : "67e23b03-37f0-4e15-82f1-baf1318f45bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.89506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "e4d67f85-4b5b-459a-8992-a15b8aa93578",
    "name" : "Basic method to verify api is up and running (application/json)",
    "request" : {
      "urlPath" : "/api/pdf",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\r\n  \"description\": \"Always empty in the public response, used for internal error transport to logs\",\r\n  \"statusCode\": 400,\r\n  \"errorMessage\": \"The error message provided to client\"\r\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4d67f85-4b5b-459a-8992-a15b8aa93578",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:31.895006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "Description" : {
                "nullable" : true,
                "type" : "string"
              },
              "ErrorMessage" : {
                "description" : "If any error occurs the message will be displayed in here",
                "nullable" : true,
                "type" : "string"
              },
              "StatusCode" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  } ]
}