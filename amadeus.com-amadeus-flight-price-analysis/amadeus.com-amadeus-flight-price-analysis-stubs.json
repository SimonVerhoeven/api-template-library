{
  "mappings" : [ {
    "id" : "ec49c3af-3365-48f6-880d-d544f64a2536",
    "name" : "GET itinerary price metric - example-500",
    "request" : {
      "urlPath" : "/analytics/itinerary-price-metrics",
      "method" : "GET",
      "queryParameters" : {
        "destinationIataCode" : {
          "equalTo" : "UCf"
        },
        "departureDate" : {
          "equalTo" : "2023-03-08T11%3A20%3A37.386668Z"
        },
        "originIataCode" : {
          "equalTo" : "lZF"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errors\" : [ {\n    \"code\" : 141,\n    \"status\" : 500,\n    \"title\" : \"SYSTEM ERROR HAS OCCURRED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/vnd.amadeus+json"
      }
    },
    "uuid" : "ec49c3af-3365-48f6-880d-d544f64a2536",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:37.38678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get-itinerary-price-metrics",
          "schema" : {
            "description" : "A set of errors",
            "properties" : {
              "errors" : {
                "items" : {
                  "description" : "The Error Definition",
                  "properties" : {
                    "code" : {
                      "description" : "A machine-readable error code from the Amadeus Canned Messages table, that will enable the API Consumers code to handle this type of error",
                      "type" : "integer"
                    },
                    "detail" : {
                      "description" : "An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this field’s value can be localized.",
                      "type" : "string"
                    },
                    "source" : {
                      "properties" : {
                        "example" : {
                          "description" : "A sample input to guide the user when resolving this issue",
                          "type" : "string"
                        },
                        "parameter" : {
                          "description" : "The key of the URI path or query parameter that caused the error",
                          "type" : "string"
                        },
                        "pointer" : {
                          "description" : "A JSON Pointer [RFC6901] to the associated entity in the request body that caused this error",
                          "type" : "string"
                        }
                      },
                      "title" : "Error_Source",
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "The [HTTP status code](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) of this response. This is present only in terminal errors which cause an unsuccessful response. In the case of multiple errors, they must all have the same status.",
                      "type" : "integer"
                    },
                    "title" : {
                      "description" : "An error title from the Canned Messages table with a 1:1 correspondence to the error code. This may be localized",
                      "type" : "string"
                    }
                  },
                  "title" : "Error",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "Error 500",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "ffcc9f6a-3a83-492b-ad35-e1133935dd3f",
    "name" : "GET itinerary price metric - example-400",
    "request" : {
      "urlPath" : "/analytics/itinerary-price-metrics",
      "method" : "GET",
      "queryParameters" : {
        "destinationIataCode" : {
          "equalTo" : "BwO"
        },
        "departureDate" : {
          "equalTo" : "2022-11-30T11%3A14%3A37.38646Z"
        },
        "originIataCode" : {
          "equalTo" : "Nbt"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errors\" : [ {\n    \"code\" : 32171,\n    \"detail\" : \"Missing mandatory query parameter\",\n    \"status\" : 400,\n    \"title\" : \"MANDATORY DATA MISSING\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/vnd.amadeus+json"
      }
    },
    "uuid" : "ffcc9f6a-3a83-492b-ad35-e1133935dd3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:37.386578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get-itinerary-price-metrics",
          "schema" : {
            "description" : "A set of errors",
            "properties" : {
              "errors" : {
                "items" : {
                  "description" : "The Error Definition",
                  "properties" : {
                    "code" : {
                      "description" : "A machine-readable error code from the Amadeus Canned Messages table, that will enable the API Consumers code to handle this type of error",
                      "type" : "integer"
                    },
                    "detail" : {
                      "description" : "An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this field’s value can be localized.",
                      "type" : "string"
                    },
                    "source" : {
                      "properties" : {
                        "example" : {
                          "description" : "A sample input to guide the user when resolving this issue",
                          "type" : "string"
                        },
                        "parameter" : {
                          "description" : "The key of the URI path or query parameter that caused the error",
                          "type" : "string"
                        },
                        "pointer" : {
                          "description" : "A JSON Pointer [RFC6901] to the associated entity in the request body that caused this error",
                          "type" : "string"
                        }
                      },
                      "title" : "Error_Source",
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "The [HTTP status code](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) of this response. This is present only in terminal errors which cause an unsuccessful response. In the case of multiple errors, they must all have the same status.",
                      "type" : "integer"
                    },
                    "title" : {
                      "description" : "An error title from the Canned Messages table with a 1:1 correspondence to the error code. This may be localized",
                      "type" : "string"
                    }
                  },
                  "title" : "Error",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "Error 400",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "dcd85f31-47ec-4dad-8f93-a15b1d61876d",
    "name" : "GET itinerary price metric",
    "request" : {
      "urlPath" : "/analytics/itinerary-price-metrics",
      "method" : "GET",
      "queryParameters" : {
        "destinationIataCode" : {
          "equalTo" : "wVl"
        },
        "departureDate" : {
          "equalTo" : "2022-07-05T08%3A01%3A37.386242Z"
        },
        "originIataCode" : {
          "equalTo" : "PAg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : [ {\n    \"priceMetrics\" : [ {\n      \"quartileRanking\" : \"MINIMUM\",\n      \"amount\" : \"xhxgx2if85fb64u7j2t1qfqt2yskds6ss98ojdat4td983lv7sl0b2fd3bjv9hf0\"\n    }, {\n      \"quartileRanking\" : \"MEDIUM\",\n      \"amount\" : \"pwywvkpo37tfxor45t9952cglggyljeg0q0m3ftkfw7lacviqs9\"\n    }, {\n      \"quartileRanking\" : \"THIRD\",\n      \"amount\" : \"pxyyd95hc9wltdodow3ntababqqnirc3s5dqmfet7r6evqq6e02djbaefwilz3n4rxw2xl856f5wcvio6160sbyzealmhvespdb1mfdoijdlrq2\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"t18d838k6unab7s42hn7f1vtmizcmbmr16we9e4yg9hytopqq9xbvwggw9m5o\"\n    } ],\n    \"origin\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"destination\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"transportType\" : \"FLIGHT\",\n    \"departureDate\" : \"2022-07-26T08:54:37.384637Z\",\n    \"type\" : \"i3kbxe7kxcqy7vwbnphujk9al7asyryhvbu0qiurr0zvag3dk111dv8wb96aaead9xqkytr8rmnasa1b151wz0v1jsya7jqyqsfw115jj2wl\",\n    \"currencyCode\" : \"MOP\",\n    \"oneWay\" : true\n  }, {\n    \"priceMetrics\" : [ {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"jufp82b8dirx9qec0tur6pjj0lhrqg310mf10b3cmg7doetwrrzcy4in2tkxnn85bf2c9178e4aqkdtiuz3f8i890pg2nq0l8gubicwdot8kpuncdrwbhrcxbsd1ee0zyi4ezoxehjhq3tmocox10nv83z3o1d75e9cxctys4k5ii6nh6wq9sig13qep2kafjobr\"\n    }, {\n      \"quartileRanking\" : \"THIRD\",\n      \"amount\" : \"fgtqfbzy2xes57xi3cj95eojmqrj5uw3546844xh30w8ewetbtudmgcopbmj1g5\"\n    } ],\n    \"origin\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"destination\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"transportType\" : \"FLIGHT\",\n    \"departureDate\" : \"2022-07-15T08:38:37.384785Z\",\n    \"type\" : \"9005y04ofa\",\n    \"currencyCode\" : \"GTQ\",\n    \"oneWay\" : true\n  }, {\n    \"priceMetrics\" : [ {\n      \"quartileRanking\" : \"MEDIUM\",\n      \"amount\" : \"1jxiype0vxcewv4bdgw9olaf9h9mf5xfqfi7mpvqgj4hn7jzfa8w\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"zywes9szorhmbwvtgkpmym795ld46wayrh8nnj85a4scyiab76vh5vwrchwp8ecmffo6owglthjkh0sk80m01d2qn79fztv2q3ce7rdvkd0ce2dc33ozskkxw3p1kfjwxpgc0ip88x1e3dm8ry46scb8kg4kizp3cagwrswz9kr73virpuh8f9eoa62o\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"xi2szmubft8u9v7l3f0s\"\n    } ],\n    \"origin\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"destination\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"transportType\" : \"FLIGHT\",\n    \"departureDate\" : \"2022-08-28T08:49:37.384931Z\",\n    \"type\" : \"coyzil6q8ovoqaa18qps6soj1oj1c0bsiryf2tdtx0lobtdefcw2pyf06gazndoszl0n7aktvthlb9m1jru2l53lay140tozve08qibrlepsplvro7sccrakfvmde38fajdpnhipk\",\n    \"currencyCode\" : \"BHD\",\n    \"oneWay\" : true\n  }, {\n    \"priceMetrics\" : [ {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"y7ghecj4llrsaaq1j19c68yy6senmjba7p9f5mbzb3vds8mkf4tp0wg4celludi1v1x8pt4t6xlukwsgxa5bv8q1utw9m3y80fprye4rz2ynaeicmycmyikyqhb0iq60h8kuc0hb9bdndyrpoiuiwwuqvwgwe80pv84s27\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"goa9am2d977thzlqdz1wqki6rku8alitr21hdgrvx6e4wyxs9tg235eksp29ul9ihtdeopj61r37ydk9l9fosvexcmiitv6nhj3adldm44vglzbveju779ms0xjdlmono9nse\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"bpr0ekwc96ioclf9qdzip30dap39489xgfqranij3iabihl8y2rzlcshojutf7dh010r4pl6xjfo8tkcy2lvbdmsm5awg9cuabqs9ebgqacv5is9fccihfizf2y8jtmeaujql7mairukvqtxjhd3wjgkkzvfgjc5omos06obp5h7kfriw9300wgief07jbgt0z1wu5\"\n    }, {\n      \"quartileRanking\" : \"MINIMUM\",\n      \"amount\" : \"f2mxjo4y3otvcc\"\n    }, {\n      \"quartileRanking\" : \"MINIMUM\",\n      \"amount\" : \"l88c1gvhav5sp29izsx0gsymvtn9ofrbaqj02lcw59ag0dlvjo135h94iuat7o79mflhnbj2c73x9h\"\n    }, {\n      \"quartileRanking\" : \"MEDIUM\",\n      \"amount\" : \"ggvs5pisbjkui62lz4op5fzxq30x5brrn5illj\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"8wan4lv8uou0c7eritn6utpm87ps1inv6oivdrlvjs3m14uppvep198knzuz\"\n    }, {\n      \"quartileRanking\" : \"MINIMUM\",\n      \"amount\" : \"bdq7jfav1ssusii6moo4rhuo68vvy9spumixxzs8q4alvwbwdr6mwa9x936ye9jnyd8c66dps4bau73vf8i3zlnlcxzgefwhb4qbf56ww7dv2uxcklfhvs537\"\n    } ],\n    \"origin\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"destination\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"transportType\" : \"FLIGHT\",\n    \"departureDate\" : \"2022-11-11T11:01:37.385187Z\",\n    \"type\" : \"hrhee9nz057whe6hkhab9a8825zol3erira042pg4fnx5dj2wy0ogjjdne4xz8gjr70omvhjy5hjvwj2r6oal0kwu61usuqh\",\n    \"currencyCode\" : \"AZN\",\n    \"oneWay\" : true\n  }, {\n    \"priceMetrics\" : [ {\n      \"quartileRanking\" : \"MINIMUM\",\n      \"amount\" : \"i9h4egw2j1kwjkipndtc4ckp5wlwi37rc7om2jlk8yg17kxbr8h3x1fsj68zqu32uw6jagkacas708ydtol4kk6qelhikcfhizn1th1gihb25d2aao33o4p2kixb5owwiarm7ynbqlnfyap8nxfoeawd2hazwe\"\n    }, {\n      \"quartileRanking\" : \"THIRD\",\n      \"amount\" : \"yfpf4d5x4j944you60h8c0rc2hrxq\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"zfqm6sl83ic8uvzf72zgwo8c43fpqhf6k0w9ruoq8wb4y2yjv2fdcs35ougatg8k7h3ubad08zb7t7o7dbyy5cnw0khvx8ccjkjf1fslalaoun9dkmn1d4l5t0asu8trwe36phrumz6jv03v5dbgpuvr6lqy81b1fn8yax8exh8gj9c9vdaqh0g30x\"\n    }, {\n      \"quartileRanking\" : \"THIRD\",\n      \"amount\" : \"3i0loirrmq4q1r26exd9tar4qezk090ftjvknklk1bk2e1fmad2xaal9bhmtc3h1xvn4ovz1a56gjybmjm79s5dklis6m7\"\n    }, {\n      \"quartileRanking\" : \"FIRST\",\n      \"amount\" : \"5rfe42zmvhgdrx5d81eeep451ut69g3u543zerm61tkz7jx35fl5gy\"\n    }, {\n      \"quartileRanking\" : \"THIRD\",\n      \"amount\" : \"7jj88rhqd7jas2knhsb51wjkwj56j52ppenw9m3qdq18xvwglh0appxcpwe6254r8am85ynizees2m9vp5t97dehalk1cgec92z323iykcfctbojk7mujo2prhjnd3b4cz1q29ez7sml52oockfliivflpn4pqf79p1pj47vx946\"\n    }, {\n      \"quartileRanking\" : \"THIRD\",\n      \"amount\" : \"6nul7poka9q6iaihmn7qwuwhshczz7b67xuq43itqx50erqejksf343dbtrjk0xquiskitldp2k6t0fqxi8wpbs6inzf47vcf6g5l25k76avla7ujp2pl0ownz4yc51ryxvwcrmigi34ikk315zboifi1hrps17hsj06ocgu\"\n    }, {\n      \"quartileRanking\" : \"THIRD\",\n      \"amount\" : \"1n0ve4orz6ekapox1b6kclf3hsosimgvwyz86hjz8zwt6e3gli0682afd2mp3mdl34bhfzr0fgbakme2chvi7iuak35crm7471gs5uq3rxeonfgidco20it\"\n    } ],\n    \"origin\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"destination\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"transportType\" : \"FLIGHT\",\n    \"departureDate\" : \"2022-04-08T08:12:37.385453Z\",\n    \"type\" : \"87vaokrwmp8nz940ghgwqcfsub1lez\",\n    \"currencyCode\" : \"GYD\",\n    \"oneWay\" : false\n  }, {\n    \"priceMetrics\" : [ {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"qels80rq0kbnx9fjm93ubr8f1t0dpcfe2k68odakk87danq560w3l1yhv93ee8d9ns88wo0beaahwl625j08cfxbmfmji1twxn4yf3epj07servp72kgc6jdl2itwkkpsr8hqrw4hx25xst3xxb33uu6p1amxcm20mbap3hd6\"\n    }, {\n      \"quartileRanking\" : \"MEDIUM\",\n      \"amount\" : \"o7zxfm7mlah6rrtyik8j8oqs1q2n9p0n70zf3fyeo2ma8qbniz923ypof0nu6f3mmrxsq632xqhm3kob9n\"\n    } ],\n    \"origin\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"destination\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"transportType\" : \"FLIGHT\",\n    \"departureDate\" : \"2022-09-30T08:43:37.38558Z\",\n    \"type\" : \"k18wsnmapv8k274pifziqispnge9037i55qxyk1zrd8nvzldh3t0z7d8g8jnvxrruxl2n49o0fmt63pjutljns92p2qqj0fcdacl4san6\",\n    \"currencyCode\" : \"XAG\",\n    \"oneWay\" : true\n  }, {\n    \"priceMetrics\" : [ {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"jzoz6vt1qwgfllg5ll8u2xeuri8pqp\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"h56n5y9anpzd5818ha77psp4zu9ej3q6r5eefy9ajsmi2oz9446k5j749bi20n5lkjty5oejppdahf81ommcbxs3hhgqmvsfob3mh0d5ksg3i\"\n    }, {\n      \"quartileRanking\" : \"FIRST\",\n      \"amount\" : \"pxoh\"\n    }, {\n      \"quartileRanking\" : \"MAXIMUM\",\n      \"amount\" : \"dvay66d6c7\"\n    } ],\n    \"origin\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"destination\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"transportType\" : \"FLIGHT\",\n    \"departureDate\" : \"2022-10-23T10:47:37.385749Z\",\n    \"type\" : \"7fdt6\",\n    \"currencyCode\" : \"PHP\",\n    \"oneWay\" : true\n  }, {\n    \"priceMetrics\" : [ {\n      \"quartileRanking\" : \"MEDIUM\",\n      \"amount\" : \"ixlowtn9p6f9k1wf4ss5howqgo\"\n    }, {\n      \"quartileRanking\" : \"THIRD\",\n      \"amount\" : \"mvs7jhsxr02lqw5t2sn5kejc3jgwfd4vpyjbltop452dxyh6cp1uh28h3pzklaxsfu8he0yhxc9xzz9c3k62rzph6t241ww93lml24n12r7oq0r4mlbfmdyv91r6b4s5m9jvdwi22gruwwxthc7ce7fl334tb\"\n    }, {\n      \"quartileRanking\" : \"FIRST\",\n      \"amount\" : \"631v2l95ucpq5u7pa9kzx6qkysvvj8qewcgceod79g86b59q7tzd7ajwaj885gn4t33f6dniwchavoj3ll40reg2cgt94ez2dt3vk5ll6773db\"\n    } ],\n    \"origin\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"destination\" : {\n      \"iataCode\" : \"PAR\"\n    },\n    \"transportType\" : \"FLIGHT\",\n    \"departureDate\" : \"2022-04-21T11:34:37.385893Z\",\n    \"type\" : \"7jriypugn9njwjj7hr1i\",\n    \"currencyCode\" : \"TMT\",\n    \"oneWay\" : true\n  } ],\n  \"meta\" : {\n    \"methods\" : [ \"POST\", \"GET\" ],\n    \"href\" : \"3ltja\"\n  },\n  \"warnings\" : [ {\n    \"code\" : 777893963290695554,\n    \"detail\" : \"fobw5kikb8v3jh150j4yamj5dbl01f8bw8n09kvlhkl1t366ovc9rp1xkrxtfo9of1r6ljuli\",\n    \"source\" : {\n      \"pointer\" : \"y3ixjs46xxph1ikt9daev2fg3smd5knxdke4ljznlzwnq0ijllglp90wc90l2d5p7gmzbw7v5j1y1pr177s14a8xw5ulrfemytvid0guag9npy7y74006yw3fsjj37th4auaobvnoyu9uydk9qeii4ruxah661g\",\n      \"parameter\" : \"zfek7040ei6gtmzj2f62i6mefyifgbx7vsogc1tq8do11x28db5un77uhj6y860siree2tuoz9bgaue6qkie631cez5esie8yyq1g60vb93m1iiq6u46sbygql\",\n      \"example\" : \"gwv353j13vpfpudi09i3z18os2alne2pgg5krbjq5113q58bbstic54cqxeb82xdp07ikldfc12xpub13eb7ephvz3usri5eeplck3zhof879yexy4znxgc9callcrwacfgu607oxrobcspn2c9oojz\"\n    },\n    \"title\" : \"Eaque sit earum voluptatem in.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/vnd.amadeus+json"
      }
    },
    "uuid" : "dcd85f31-47ec-4dad-8f93-a15b1d61876d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:37.386339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get-itinerary-price-metrics",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/itinerary-price-metric"
                },
                "type" : "array"
              },
              "meta" : {
                "description" : "Links related to the returned objects(s)",
                "properties" : {
                  "href" : {
                    "description" : "URL value",
                    "format" : "url",
                    "type" : "string"
                  },
                  "methods" : {
                    "description" : "HTTP methods supported by the sibling URI",
                    "items" : {
                      "enum" : [ "GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS" ],
                      "type" : "string"
                    },
                    "type" : "array"
                  }
                },
                "title" : "Links",
                "type" : "object"
              },
              "warnings" : {
                "items" : {
                  "$ref" : "#/components/schemas/Warning"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  } ]
}