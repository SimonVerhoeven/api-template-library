{
  "mappings" : [ {
    "id" : "7b9ac0d8-5af7-4a03-b3e3-2b8864d0f399",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7b9ac0d8-5af7-4a03-b3e3-2b8864d0f399",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.538426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6ca5f50b-98c9-4038-98e0-3cfd0b54eee0",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6ca5f50b-98c9-4038-98e0-3cfd0b54eee0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.538412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "9bb14853-5a30-4395-b4d0-0691b018d7cd",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9bb14853-5a30-4395-b4d0-0691b018d7cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.538396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b052d536-a6a0-46ba-93ea-56dd08f8370f",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Christina\",\n    \"lastName\" : \"Roob\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 43.71293834369325,\n    \"probabilityCalibrated\" : -0.4366967374676409,\n    \"raceEthnicitiesTop\" : [ \"kxvihkub3wr6riivleu0bvap8pa00zfsue6d1zh8kfn115bexihvaq1fywpuriq6h76scdpcv31kz6sunsv2uqirr17mpky14aemb0v7jjln13e68b3rocnfv5adt6afn68ukv9q10z1na03wrb8ed7p8w0tjyvj8xm55mr0tu3\", \"8rdgofbpq6ph8ot85zeohtuqi27wzuj761muizfsh2u8us6fva48uxuc958rtcw4oi5og8\", \"twl653w4ecesz7wyfhcp8ock6y70339ozhaxwhc6c6sb5woubvgf9rbb3meo0sjkrjwnsijml81mcvmy494fu0yyyqqrcpi1dinhsfrp9nsu5q819n0s\", \"a84wrweehuvtxm7j7rg9125e1n0o4zuioshr5xo61q3hi82vdt54sierzi3gocqdfa\", \"knd0m8zpfdddt6szkfsahm436y0ud9xngpft2xpgse1pjuuui6k50zjhzbtg85ildpyzlvqrfdzi0wsu23y600rrcl92dvxoe5pwa3en6amo1ppg5776w0\", \"vi09ssc3kchl1xj0ve63tgktf3htjeejtnao8h7i2w9in4zb3uf42cv86o3x4zsu01o175op23qayxd3iau2h0fj5y7fdlo3ssxg2ibqp4w65d3rwxrka7iwkn6ag4hb\", \"88jjo0uzrjegvt5azqx9dlgu8wcfp1zrb6vn6536a462utac06mlxb0s0h9xvg73y4y6caoeyqm97c3568n3uvalw99tf9mfhcfj2649e66wltdxu2uaix2t666rnx3b39sw\" ],\n    \"probabilityAltCalibrated\" : -0.18044261625925273,\n    \"id\" : \"f3e6\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"ey55wqccxz94ck4umt8tcaqks3m8p2wm2hg8hrrdemz8wr5jq9tdulqwinh\"\n  }, {\n    \"firstName\" : \"Denny\",\n    \"lastName\" : \"Kerluke\",\n    \"raceEthnicityAlt\" : \"PI\",\n    \"score\" : 12.730829587960702,\n    \"probabilityCalibrated\" : 0.6736030065401144,\n    \"raceEthnicitiesTop\" : [ \"cue77reqiu5xj0ubhjnljp45hy9ewng9rwhr17v5lfrxyt9mzyono4jxzuys11agddgpsdmscocxfxwfnmw33xzp9s7brzaccs6a8rj5lk4ttahiqy3jg93kxzapo9yksehecy2jfcqdqalc3jv85pquugkkscrpf7hh237\", \"dmk2pvfpgj2dztlv6zepbk74x63lqqah38mygy7kbpo1d7jyw\", \"5q78uvvh8vw5v8m6c61nnaghxoy5w1fqlndy9n09spbs2mzdj5jkjolrjlggf2xz9scrzhp6px4siw\", \"c9u0el7xaolmvllyi8obalufzp06hlvx0eryd64ns85fqzaot3gg2h1370ufftu2j3jdfu0pebm2sg4d2onc7py6pbfdm6b6jq1bovrpyfsrp6ef114uts8nr3wx3gijneiqcpclvi0sn8jfzl3nf3efo6kly6vrj3w9ad1itf97gowh2c1yi5i2lxnk2pmzvk7l7r\", \"ycnjvb2c74gb6jcm7g2dg2kkoi23632joit92kdg5xzchyc67w1sga9ljslectrwfg\", \"k08jsnn1xutgtayuzs5turduu2s0a1r8avik3esb95ueeu5x6oja7adj2a37br027pguggkz3jhs569gjln65bewtwpoqqimkmyiz1eydlco0nja9acv\", \"56s5uteox8kjfrymbdjgc25s6zzq\", \"x2i350fycb2e0zdlmsau9puq9tjn75wa5\" ],\n    \"probabilityAltCalibrated\" : -0.5179286214328926,\n    \"id\" : \"31ec\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"almmvz1zt4bi2vkv1ui081oj209qy7g581x2s6f6odu04flwuu871nwe57nt4p31chj9uo1eo00in7a5shbf\"\n  }, {\n    \"firstName\" : \"Filomena\",\n    \"lastName\" : \"Effertz\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 94.23189621510555,\n    \"probabilityCalibrated\" : -0.4268995057437299,\n    \"raceEthnicitiesTop\" : [ \"nhqnq2hsutaw60pi60tnwwii20mp1or6d23aq4lfcpczmsacimrjd\", \"oeog7h0i5tuc622v162dwv0bo9jawmplwmjth1dgn8w1ofqcgee6bfdvbhhcpn8x7b8b8nfglpuo9jlw\" ],\n    \"probabilityAltCalibrated\" : -0.5204465670628791,\n    \"id\" : \"576k\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"d1j5zfrca3xmedkea938fo1ovclyo19iej0x2whvqyqta2qfognuzbcvpab7opbntp25xyuyjbmke9kokxlk9ohjf615uvb6vmpwi03oa7vn70qmigecnsaggojemc97b7153hz6blemf\"\n  }, {\n    \"firstName\" : \"Tabetha\",\n    \"lastName\" : \"Batz\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 54.9332476131824,\n    \"probabilityCalibrated\" : -0.16186954229992434,\n    \"raceEthnicitiesTop\" : [ \"75xydbwpzx73lpufs51cmhsh3g7wrb34jugpocy83qnvbrnqqfzl260wx9finoitw2yp3mwfp3jabwcve22ihrht2bdkcinupuz7ir6fzk085w34c32vns80715mz10th1jb39oreqtgcvu711jbzpdxuw8xahzg2bz4zllanxuj8dqvv127ptohsas1li1yvh2g9z3e\", \"68yrkiongg3a8lewlpbrrvtanixj0w2kl5e\", \"us96c1015ylw0jg6xhn3t7pu2k627dc74or35ul41u6nlb2wnkzbvgne1djxtmjm7k7zat6zkk5s026q9aok7pr5th2smrtd8w87vxbii3fq060uias325yq9499esjjbdkm45sdmo8sy0ijj1n5m38h2bx2tlg8rbdu97utxyw7od3yo\", \"0l4qc1k3gdkmlbagjpgzms6oulhd0doiwij05m0c44m2p1ftamyymruqbtwu\", \"5v4ge1vzaqd0z19v1s0uvliedqk7v1h0hhl7wfw3opows8m4wbw3609ahyh6i5bbk2gwz02dhonnyodenywhjovrttja8hxs1daf7c\" ],\n    \"probabilityAltCalibrated\" : -0.23178326191345855,\n    \"id\" : \"64xc\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"unzslpmfww54cgm5h9pq9ocmn5f46td4lum0nlb7vgc6q2zkuwrzrunmyri9hzxmxjwjjeqs6anzvt813w50u78457rgt8k4v2gblk1u\"\n  }, {\n    \"firstName\" : \"Fleta\",\n    \"lastName\" : \"Dietrich\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 99.15708354368718,\n    \"probabilityCalibrated\" : 0.003783153562032071,\n    \"raceEthnicitiesTop\" : [ \"qfoalew4ro32sswk0w8ko2ze52fnjzuo2t8\", \"2umg2ukjya3972hrh9yoxwt8puzdm92wuc5th4k162cho7pz6ncypw0kkmtse48exuiaqqo4q64jc0vd8amjg567yon2n1u9bztfts40uvu2qitl4er2k4elmkffd5uz1b2dqlttjnb3ktxf8n8k\", \"0r384pnj9cht2nmrqtsbf\" ],\n    \"probabilityAltCalibrated\" : 0.11128587381983812,\n    \"id\" : \"7ery\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"hkx7cbisiclv1art4imz0cvh1ry6d6du4zaa0yf5jfj0vubiqsiz0bai32tsqiuimde0tqhm0bhuskdzp4jg8wqkj43i0a75fkxmkm2ndw7okiulpie608dcmdnlf\"\n  }, {\n    \"firstName\" : \"Maranda\",\n    \"lastName\" : \"Heller\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 7.417490270671834,\n    \"probabilityCalibrated\" : 0.88652843743029,\n    \"raceEthnicitiesTop\" : [ \"bs54t3xq0vhkw0lzmgjunzoyocffk58k26annz4ws17s141lcmnt9q8p08h5tedl5ta2hzf3g4tgrnli5vnthn5q6w481d57w1c1828gtpfs2r9aqnlzbtk0fv96sn6m1i2qag9zrkooq314den97to5q7\", \"clfx0yxlnzzp7ymhqm91gxnsa\", \"51cwkfi7oadbry8b55mn337h12w5kdloaym19c3dqf59jztmfgct9yi55nluuiisboul\", \"bf5184mizwh1dhe9141g9oh3oicuiytqrwlp8c24z3yo2qkmz2uo37oe9zk3aicy8v04829il6rszb5pg8dbizmg2dvvx53k2hijr0g8618l44ltcj0svo1kb\", \"scmxq0963zv1s9w3av6utwjhamdy4cgohv7e7dbena7eeyl13z3bqubv7k9q3fjxz4s7eweft0th4p8j0ouavmrno8m93j3trluevk6ja31qsidisq491ehchq65tbvw4w0hq90ax12xzagxf00eqirrnqu4v835bv0y34f5rsma54a6v84f\", \"1xpiomifq10c7yqsc8k9szmsuz7ux313h5sq2hbqstk46gssga0jsp7r8i0v6fgj2igux6qjvlup6v11amaeuzw4hxcie1f5qau2jfmbbz387xg9mc802fshhbxthtfkufpf6mg7oyxkmfe5stcd\" ],\n    \"probabilityAltCalibrated\" : -0.9768264248233409,\n    \"id\" : \"8s40\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"lms9pi12e70bnd2ww7nprpy7ir7kt1vkbzp6duvinevh4chwp7w3lu2dch8guphmj7yb6t0fr478myx12bj7a4al7ktrfiir2x4jkbljf96gzjk03co4y6sbw4lwwadbwdqv3jlo2tpw1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b052d536-a6a0-46ba-93ea-56dd08f8370f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.538372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "73a50fc6-80e9-4ba9-858e-8dbfad8352b2",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Earle/Durgan/57648",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "73a50fc6-80e9-4ba9-858e-8dbfad8352b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.537145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f45d7f6b-9887-4ab7-a83a-72260bdbc582",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Willie/Roob/71739",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f45d7f6b-9887-4ab7-a83a-72260bdbc582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.53706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "9830619c-bf35-4465-8eaf-66100a74673f",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Jolene/Dare/15689",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Isidro\",\n  \"lastName\" : \"Quitzon\",\n  \"raceEthnicityAlt\" : \"A\",\n  \"score\" : 21.60852036502864,\n  \"probabilityCalibrated\" : 0.8436535898070483,\n  \"raceEthnicitiesTop\" : [ \"aei37b8g457gh09x4y71luo1o011d2htlteit3nz8g1wn\", \"i1zz6niv4brxkkzy53yi45b0l89ata69h6v25xz7bsfxvsju92a4b6ac1l7i2agy365ckibhxm9lnpfqvoynb10alk64lhgpbdjhasv7c4l9yjk6hj4yjyz9sis7ajqrnwrcn12gcy6h6qxmh7ezp9v\", \"dnublup6cuahw9gtounu9z0ucz1ivi7sdom5g1f6y80j44cos0h056c0d5hs35o9y23nbiyzjklqhw2s3zf33trt77xlmkg6lkfhm49s39dlfuuanyd0g20btdqwwfoyyrh7x21mp0x1qz69y270n\", \"frounf0hq2vsv7e2ty5djpv8ml\" ],\n  \"probabilityAltCalibrated\" : -0.09491633747822203,\n  \"id\" : \"81o7\",\n  \"raceEthnicity\" : \"A\",\n  \"script\" : \"bf7nin6iw4s9rtake1xl5iwzezx9tm734hj9y16lt9rf8ly4qmonzfat8be5pegkrin9lm3fiirqc651zy5vzfgloedyyeayj8ipl5maz9qgi9z3tz7skl1ujh2v4ddsd2g1fbbo40ebg2nmkyijgd7e0eyxikwp689zavu5p4nisc7hdkfzwgsbrbk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9830619c-bf35-4465-8eaf-66100a74673f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.536958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "2b71d580-8bd4-4a6c-817d-a1b3018b38e4",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2b71d580-8bd4-4a6c-817d-a1b3018b38e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.536613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "031c4894-d672-4d06-8ea0-1d216291aab5",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "031c4894-d672-4d06-8ea0-1d216291aab5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.536598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "406f61f1-fb82-4edb-8748-30da28b74e3d",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "406f61f1-fb82-4edb-8748-30da28b74e3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.536581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "2491544c-5104-4375-affb-bcd18099868a",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Winnifred\",\n    \"lastName\" : \"Skiles\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 36.9248756555724,\n    \"probabilityCalibrated\" : -0.22126061594478208,\n    \"raceEthnicitiesTop\" : [ \"3e97ydbo953md6hff8dmxv3mci72vvi675hmnov6fizl2g0slvcn71fc2nx4skfu41tvv104\", \"wcbcuz4v0qdfgiuflzep2euoehud0iktr52vkysk9r2ta2gkrzockm6ry8fl71rr990q87t3dolwk89gix0wgpg27lzv54aq28zooa2ft9of61bz6rilxch9n8zwhk825bmtn2vt1r8ah92h2r2ofupkox1sr4qjgxwyusqm1ka\", \"4ymahej6xh2kcfws9j6rqaisp3ad9dzw094seypvs717c4o0pde6j17qfyjjezbwg77lcc3b05l9eg8ta9fonr2ihgy2qetao9wznklwwvo1lmmn\", \"12778\" ],\n    \"probabilityAltCalibrated\" : 0.08867477333395701,\n    \"id\" : \"y0be\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"vqvweykrgssuiz61vzspesskvj9z1wyawrzr8slhaqpomhp6zssmohzanc4i0bijkc76zuoq55v6lpvl4iksxtuce9lgjdrjqye08pocwtppubcn2jjbmctd6lts8n1ywrx6j4i93mgjqmw71mi83l7fdkfbtgojihz63svyi8n7l3zzpvk60h6gpy072tg\"\n  }, {\n    \"firstName\" : \"Bart\",\n    \"lastName\" : \"Osinski\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 22.566673628845603,\n    \"probabilityCalibrated\" : -0.6783034856987444,\n    \"raceEthnicitiesTop\" : [ \"a7if99vrg61utee2lgniaxx8b1bx0k5sagmw7z18flze6imp291xxtrvs\", \"n2zb6i9c61fll2bhvo0scwgryq870n95wzp564zynpbvi9b1og3fndwwhec7\", \"o1nueqlqym70gnin38btyvnopnnddip1mayb7i8u5gs4plsd8d7r6ttqvfe3ahg\" ],\n    \"probabilityAltCalibrated\" : -0.4885428462323651,\n    \"id\" : \"jyzs\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"8mi47jl0vooobn0w728r2sn99elh1o962cwomqmra5m1xeoqm3fenre2skcnfuvnf82i7lb3r68xfjxt9jk5dg25k05udb4lly2bjav83ixcz9jqroxojgj85hsqx4sflztao27mu9jn3lalptbkinemrn2k20ewix0b8oq0gndtfbk6z2rgton\"\n  }, {\n    \"firstName\" : \"Rutha\",\n    \"lastName\" : \"Batz\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 51.13899341227689,\n    \"probabilityCalibrated\" : -0.7333780795347318,\n    \"raceEthnicitiesTop\" : [ \"f2yow6fkqknlfz7tt658kbf3n19inpoz53d51nu3nicea6v5wnfb2yrg4cn5dqmblja6cg6jhtc\", \"ndv8bg9z764wgbgt8ujc1ftcay3giqzjpon4hfokumvmb96j9ccx4ceekkf9hh9da2qygs6d1ahgwp1fgj6lw6q3a8pkshma48x1grjjaj4cixsjm4q933j62maqetdvmpnuvcp0vg4mirc1t2n41karqb5m0mrjk54tsraeudn075tvrap3h2nykeaqihoii\", \"hugog8wjk0xclfbpju7gmku5km1wzac205beucr0ge0o25bw9q4txzicr0q74tuutoubfixeb5ymuuwia8to4h7ku8783164r2yo57bk7kxw46wg20io7wp8yjrsu20bm4mu557f3wavpp5ux11fx3ssax\" ],\n    \"probabilityAltCalibrated\" : -0.4103802587851544,\n    \"id\" : \"g38t\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"12u3gify4myhiupq82jaz4krd\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2491544c-5104-4375-affb-bcd18099868a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.536556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "76c79b61-9ac6-4351-84e8-5e5fcc22919f",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Deandra/Schimmel",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "76c79b61-9ac6-4351-84e8-5e5fcc22919f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "c4f26e29-999a-406d-81b6-7a27919dc0a1",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Hal/Torp",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c4f26e29-999a-406d-81b6-7a27919dc0a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "ff72da71-274c-40d7-928c-b124f61cfccf",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Doretta/Mueller",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Bud\",\n  \"lastName\" : \"Glover\",\n  \"raceEthnicityAlt\" : \"B_NL\",\n  \"score\" : 82.55134078094777,\n  \"probabilityCalibrated\" : -0.0016455279194240724,\n  \"raceEthnicitiesTop\" : [ \"y13iv\", \"uigq0b16pu3po8e8fr75o4on998naqkcbj2y1w0hdt16kt9j1z2jxy45qfh2kpdvoq2xbhgcbm2rpnlqvxdagcxivcf39jmxsslho3pnk1217f\", \"tasdiar6jtaswsv6535f5y6g58xam3p1hu0rzvanlvsxernggtqvhat9ekyjfjewy0karpt411cobtqi20ei2gbvfymlt4vu\", \"c4jos7xny8ek8le2pzpdc306pxmwufevru\" ],\n  \"probabilityAltCalibrated\" : -0.08152669913766752,\n  \"id\" : \"81bg\",\n  \"raceEthnicity\" : \"B_NL\",\n  \"script\" : \"uke6yigu7njm6b0nt2t1m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff72da71-274c-40d7-928c-b124f61cfccf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "20e64b12-832b-4925-a979-469c606f2760",
    "name" : "Print the taxonomy classes valid for the given classifier. - 401",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Shawnta+Maggio",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "20e64b12-832b-4925-a979-469c606f2760",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "5da8af2d-ae19-437e-9b35-27adb418e511",
    "name" : "Print the taxonomy classes valid for the given classifier. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Tabetha+Hegmann",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"taxonomyClasses\" : [ \"656of0kb4a9je0slkxlik7jwuiwk3vpgc906kjs1iqsl4kzleww5bla4j9zom2jzkw0maiga8v0u5p841cjw9y52mv8o4pskuubxcla2lbyffm3znt\", \"7bop1i2fkf3en1ho2ps1jt3ftq53oh98rsbe8w7xuu1w5ycllrrpty2x47pknecyrgzrk5d9jelq1r0\", \"hn7x7v5v9mt2st2bvl8ogayhb6a5ckxkrb7y115vih4nrwlmkd046hirc6pt5w7uk1db49udt275rmjva9tfzj2wv6hiqx9gwjj10jc7h62hao7v14s5sipdsfkioj4yy83slj8v4kpzmwdo0rnyzgjhfswydef8omuwspmkzl8ahj20gh7aiv4cvxja2vm3bdss\", \"h0otew06d89teubylma8ed8jlsfa\" ],\n  \"classifyingScripts\" : [ \"o8r26qz9kemwha5lae42lc6omnnqn1gp9f8l6hj76krhfis888v1ft8\", \"8gumm8icoinrzm97wcgfcxr4k83yy8onk2q8jl86r2b6ebt0iktjt0clk2avcjb8l1cv4z9jlw2y3ijeozxpkajphwqzsr5o1ts1u2vhqrnjwrryu4eshj52fai2gabsp16vwey0hkwkj6zbfoyu4j1etbrbnqwbot1dqz5qf6n7f32hsye5ui\", \"b9eqftlpprmqipe0buqpgjwn6it8fw3ozrewpictylt4n1xtiapqb62kema2jf7rjtqm541lacmbfdorcd\", \"a7t1ypa1n3475pwlq2t43t75k1k8g74v1wc82fyl5001ba640ja38x3y7md76y83ui4175qnxi6inrlum\", \"49p2bhckf1qhmzndbbckndv3ehgjwj0qhzsyphzek7d8unapbo70fqnusqtw5sm8sgzto06cp8ungjwm2iczukhcos6fywm4lb\", \"rcr0n71lsvr9nlfhvva65sq53cim54w0\", \"6xj1hen2eoqwx2xz6ia21vuqxp7lezmhh3oyfrgzrbqykdnebkiliqx4zhp6n8sij7pxw0bvnuy3hoftlgj9pmkuqnw0dbb9qab2zcnm61d\" ],\n  \"classifierName\" : \"Rachel Pfeffer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5da8af2d-ae19-437e-9b35-27adb418e511",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses",
          "schema" : {
            "properties" : {
              "classifierName" : {
                "description" : "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
                "type" : "string"
              },
              "classifyingScripts" : {
                "description" : "The scripts / alphabets this classifiers classifies to",
                "items" : {
                  "description" : "The scripts / alphabets this classifiers classifies to",
                  "type" : "string"
                },
                "type" : "array"
              },
              "taxonomyClasses" : {
                "description" : "The taxonomy classes this classifier classifies to",
                "items" : {
                  "description" : "The taxonomy classes this classifier classifies to",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifierTaxonomyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "a94f8ced-6c7b-4003-ba61-de1710e11804",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a94f8ced-6c7b-4003-ba61-de1710e11804",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "409c3b17-ca95-4aa4-8446-470251ad0372",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "409c3b17-ca95-4aa4-8446-470251ad0372",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "ef197284-8f74-47fd-8a90-c63155997d3a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ef197284-8f74-47fd-8a90-c63155997d3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "4b0b0ea8-7ecf-4538-82b7-a000333795b7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Alyse\",\n    \"lastName\" : \"Macejkovic\",\n    \"score\" : 11.890655725905575,\n    \"probabilityCalibrated\" : 0.9021303717329774,\n    \"subclassificationTop\" : [ \"x7vgghmx1l9\", \"jtqqfqhhgbvl2gvuiz1vmrsqabddiri9ivw091y6rub22edgcq0t4qh9mmp5lib507pfky\", \"6k74t5sgfy0s54vl1fxd6sb98abo2qw3krl9vctqg1yf24r4cb6qzgeeoaasfopt59fjkq1qhrocx8qex42jx5b34ch4y88lm2dfjnzl3xvws0pknejfy7jsl3yhqyz631rd8yjh1azb2lrlr7bg0es9mb2fb2l0natoc1qh178h7t869ic4iyubdxt6hbnf7i7ix\", \"wrs7g4wjylowvv2tftb22zigioy1l76hvp8ocgv0bbnrn5pasdrk1w1u0mv66etnzoyd6ukkzd7mirkfhp2gu1iizxc\", \"p43dq9ay0ia5nhq0o4plj5hedq1jq00yqhtvwcipk9hg2mjxnu5fkdy0glrxrwmfd2wrd6lt2cqmkmjvju12e50scehgnhp4zep2olf28t3be63z40dl\", \"hizfd3dvoxqyndvnp1\" ],\n    \"probabilityAltCalibrated\" : -0.4164683329068646,\n    \"countryIso2\" : \"f8c1nti7qzlyr4t2zcwztmnqylayxbqcrug4t3bx6giahl43ok5n\",\n    \"id\" : \"j77q\",\n    \"script\" : \"u8i7fzt83ldmh6d8w8mu4h3jhg09hqh6ests3fqlzrgeuw5i93b2gae7j4y81go\",\n    \"subClassification\" : \"b2jtfeiwcl1yamtyfvoulyjmkaf0d17xy00n37\",\n    \"subClassificationAlt\" : \"lmukpfmdmp6vmcel2d9xbb3m1q0ww933xfijp2da2hmvmdj3an7r1o0qpez97fnilr39a\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b0b0ea8-7ecf-4538-82b7-a000333795b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.535082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "0deb59d1-257b-436f-8821-927038c8e29f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Zenia/Koss",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0deb59d1-257b-436f-8821-927038c8e29f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.534827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "f40d9f7c-b782-4b6b-9457-bff5e9e66ab9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Herbert/Kuhic",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f40d9f7c-b782-4b6b-9457-bff5e9e66ab9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.534758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "f6122d0d-7d75-4d6d-9633-5c379b2f62db",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Rutha/Mosciski",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Robin\",\n  \"lastName\" : \"Howell\",\n  \"score\" : 90.63233954040099,\n  \"probabilityCalibrated\" : 0.17811216815613773,\n  \"subclassificationTop\" : [ \"tmljsuflsgllj9nzzuw3huvt2vwa17bpz3q4v51\", \"qo3bwybze659uwks1p0ml11bxpmkxnn1u9\", \"uwe4h8rgg1o2trdp31460i5cvrjs\", \"gr6dcbqt2dqd5grbvre3iaknpg85ix6fcx36b4kuf5510i8sntnp51vtyt2i9usgeoxaqumi07z13irs4j3bfrhwo1g5oykk30cbk1c45ffb3wd02yjpkxozwh6lnb2g699f6mplmp5dft57dlhntx8qb95tjs3zh37wise02o1607t9l3rxtejzb1nn82zf35u0gnf\", \"rpq40a50\" ],\n  \"probabilityAltCalibrated\" : 0.2659793954860601,\n  \"countryIso2\" : \"ey6wthcfpoaur5lym84537zis7ph8t7fivuo25538nbhncf0e1x6nxi9eqxf5184gu2\",\n  \"id\" : \"7g12\",\n  \"script\" : \"ben5pbf6igd54b4jlreuukqgf1cwu6g7c1bk3d0zq4bsavdwbkr17og2zo1e94gq9c738njbuihz308yr6lp8z1p5px3giwjsna2270j6hknn77o\",\n  \"subClassification\" : \"9rgq80yuq8z59n3bvadvb3ptri6u49vyofwolkax64fejh90ys2soz17sz49ihdlhc093y7w4upsrehbkxipdxghgzmxxs30ephwj3w8o1wsen2c2zgjpf11pjj7p09gkitpo3j6vyw9v39rmp\",\n  \"subClassificationAlt\" : \"caawsev4hic2d3w6z6g450etlhmg8ntfr0jzkjnjxibywgptkp1vraw71vb08p6lv65slfh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6122d0d-7d75-4d6d-9633-5c379b2f62db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.534682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "382321a4-9712-47e4-98a2-d437ca5d05d8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "382321a4-9712-47e4-98a2-d437ca5d05d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.534342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "736429b8-a8bf-423d-b06d-d1381f7655a1",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "736429b8-a8bf-423d-b06d-d1381f7655a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.534326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "c6775def-dec7-4475-896f-0fcdd1979d90",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c6775def-dec7-4475-896f-0fcdd1979d90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.534311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "e3855246-cece-4b07-bfab-cf1b35927584",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Marx\",\n    \"lastName\" : \"Langosh\",\n    \"score\" : 15.549866549412616,\n    \"probabilityCalibrated\" : -0.5608763935470107,\n    \"subclassificationTop\" : [ \"t6k6bztcmlzow4ee0bek1pjmggkz6i8v590jqmpt5zl1ljd3aj1qoyjmqlewkxr0kyzvmmh6foomtbkvhetp7qseh6im3jswfi1ehj8807miot04z66sewicxpw5nm47132nig7r07g5iook5m0oy12p2902pn\", \"jl3lhe52phb1uvs63ujhdcr6y5qdfktf6r2a52r84ajf5a7ljvz34uig9j8c0ygrs5vpao4kzdxk74br0zu0vhfrx8jjm9tp9kd5w8u6uhd46hf9a2s9q2uaolio1whkpnwk4cqnt8g3dnsvd09bsfeegmlq4r01w8\" ],\n    \"probabilityAltCalibrated\" : -0.4505632671758064,\n    \"countryIso2\" : \"r5kl3y9mndi\",\n    \"id\" : \"btk8\",\n    \"script\" : \"3scvba3io0g1gxkto0zkt6plo1r1sc5vduff411garoz7z7k\",\n    \"subClassification\" : \"1d7ea8kghwzfq6zq70fvhplrhwefr95k0wthsjxvatjhdudphmsbnac26hy5pot5ryasmbj1lgnspmogawfyrxxh7nk34bsjmt\",\n    \"subClassificationAlt\" : \"56y9aqvob56yicxw66z9usr3q41ipmqlhczug\"\n  }, {\n    \"firstName\" : \"Ernestine\",\n    \"lastName\" : \"Paucek\",\n    \"score\" : 9.952244495962203,\n    \"probabilityCalibrated\" : -0.9238584807193082,\n    \"subclassificationTop\" : [ \"21c0pqj4w41mi5a3bbja\", \"r9oqo1mty1nyrbyc9f3ywlktxrgrnjb843f8x7ejfog1nso3dpr023dpzbcim1vp8fdys6f6sm0au8gwm0rg3dksjfye58cfyw9x806bgj1hi6ejvdx3rjfr51e1ow9hjv5px4rx0alexcj59irhepa94e8gj56\", \"bra3warb24rgnr6ez5qeq96yrwnraeust82vvbaadmbwl4bpu9zcm9jhkojgdxvh6s41cu6pdlpqbp86hrjj7pk6zflunxkah13xlrd9jxboxps8toiushaen5j5qm47j\", \"fodbxzoaog9j2c0dlljog12z3niaqwv7rjs5u04bnf7feximewg0lbiq5i94ln7eaaw0t04sh6g86fhc10ov2b7f1jpyqx31dlef1c1b8unz096t9dds0gfowi1kzl518au78btbb650twnc3c135bpkt3iopo3kpfnj0\", \"8486xnkz8lnc9pmx0\", \"0o67x9mhxrtvyjwq7zp4i1cagll8xj1flegbz0kppqf0a1nsi36rt8mcnav6nrgv8fhekcy6tqipuxjabddz\", \"luhtvi5rsnmrucq8mpzq2859udvxhxpks6mqp65h6d2gpc3yfge5owu3udgeo8s4k5qj4rngl729tbftesz4mr7tymn8zfbkbbjm9t4kp402nbm7cdks2irlsp19xu3l4fd8x4am35g7uu1sfulh438xml8f35gawyl1r1aqy238cja\", \"qtemjxat6f44oz7vex8h4r5xb8atlw2l4wml1b0qlvtufv34459q76b74mht09srzyxlnkz9hz4yban8p15ycybwx54tewo2gmg2h05lw6hw8ghqu5pxnuo9y04ez87ldwesmyvfh888l3ngx\" ],\n    \"probabilityAltCalibrated\" : 0.18351087778055009,\n    \"countryIso2\" : \"3kvdwn3mot6bla3i28gr1irbm0z46dspl88qgmcfihrdqay6jleukl732vluctpch0d0yf1s9v37lnah41896kdogikwyx191twohl22bz5j3vzki4kwbude00a4823bvrsf60yrxdpf7i0m2ykvk0yg\",\n    \"id\" : \"xx65\",\n    \"script\" : \"nf458wdrd9b6ovlp7sst6dqrbv63qcopvm9r8pdyk7t72ax1gpacjzqho187lzg56b1g0x1847ewl\",\n    \"subClassification\" : \"0yqjzssq928l10qmhjmpl1hb5bbo474aruvzho18b0ae93sy5mx7wjmfn96jn3jdd6adewiciuv88ru0uzws76lygt69bjyrf2eqc4o86lfjy3icdqicabilbvm38x0iswwp8slxq8pknlvy5lwadaxm54b8qad9g2bjnfv82n2r\",\n    \"subClassificationAlt\" : \"lk5055vpgg76zz961dovphzogzo41hed5r\"\n  }, {\n    \"firstName\" : \"Marvin\",\n    \"lastName\" : \"Hagenes\",\n    \"score\" : 94.67838519236942,\n    \"probabilityCalibrated\" : -0.9124460532146379,\n    \"subclassificationTop\" : [ \"ni56zpsfmy6zb9lkk93pwzh4150ecn8aexh94yumexk3qbfmvcxdjff12i2mhf3eee674a6b5u5v1dwkfz66qhi60sfs21z\", \"kq97141\" ],\n    \"probabilityAltCalibrated\" : -0.9838499917006325,\n    \"countryIso2\" : \"jrmtn2pllvg\",\n    \"id\" : \"2080\",\n    \"script\" : \"tzj5z8dbvst978d2kxsipabllr2dxbpm0k58o0vtuog28nmnvgjupqsb6e1b8cwx8jbus5spuywezur0lz0e2qdfvdfe6u4pxrwawwqthjw1qncxr5vbq2ar1pzbf8hc889to2zji6pgakfismz9r13tz8e9bjr4w6eqvg2dqofn3ud30bpfzs1sdo7xa37\",\n    \"subClassification\" : \"epi3gf5\",\n    \"subClassificationAlt\" : \"k7enao9ji1xj4ykgg011pfumcg814bz2yzm7kbv1dhrx8ur79tc4o95ofhfupjx1e5ltegr7a4aq1qth8thfaiwuzvppwjs924kysrif19tnj8fg34321o72noatucccd1rt6kbzb54oq5r8mr3aq9fffq6z66a0o2tvkvqiru14y0nnjsxjdyykglwzm10jp5n7l\"\n  }, {\n    \"firstName\" : \"Chad\",\n    \"lastName\" : \"Grant\",\n    \"score\" : 4.62478478147893,\n    \"probabilityCalibrated\" : -0.15703805205463617,\n    \"subclassificationTop\" : [ \"l8rnq6ad3269xi\", \"hmhy2d9b1w53zwggcnauql3do3q1wfy8y0lkcf6rmo9rxayghee2dzg10kkwy33tg5ea9fo9ar6iopu7196t1unm0minjwqqr813pttwz\" ],\n    \"probabilityAltCalibrated\" : -0.2309066236709787,\n    \"countryIso2\" : \"01lr2f48h16vs0u0hl426zradip\",\n    \"id\" : \"6g04\",\n    \"script\" : \"g8exjyibtyop4wjdykkesqjhh11y4fy0fyktsuzfis99tzayrxcdfssskkh70ue6brsnfomf9tgbto8vc7bifmdat84v1q3jizgernez3y9f47wcsetn6ndgxnn4fqbela592fv287wx69e7ku2nhwx9n76tmagcugajnpi1f306r1y1s\",\n    \"subClassification\" : \"l6a3r7q6hlnblefjudyeymxyp\",\n    \"subClassificationAlt\" : \"n6beuoukvpw9k92qfbxu44pglck8gd9kzcjqoapb7cv0czco9zfi1b5w93hugagmqjgt9m76vz42\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3855246-cece-4b07-bfab-cf1b35927584",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.534287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "db66f585-22e2-44b0-b36d-1ce36e8b2439",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassification/k7vsk1jj1gf8o3jjgx3zdbbdydgasq6rivjffl9vv3gf2in61glyi0syl1mpyv4gjew4z9yyznns06z4eluxmk56offgbbfd961qbu15u8zb13qtfscbkqcmo7r84i3am5a1rbna85w0au9gooow0bnq9fyn8518gsfd0sc9hgmzm9jqsr7simulq10j3zd60ecyxps/Robbyn/Labadie",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "db66f585-22e2-44b0-b36d-1ce36e8b2439",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.53341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "0645eec8-e98e-4af0-bbff-aff2f6982134",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassification/xfmbt5lklejhepq2ajtqbmy55tcge5egrnrdnjd2rtyjpu5jnmmbk9xrv4rdsb8kzh1bw0c606mijxkzn3if2aru1cjgnbw15os1bx8ptp6248xu4lp4kt6t0snl8agftdp35iya8rrre0l4wykfudcksl/Genie/Rowe",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0645eec8-e98e-4af0-bbff-aff2f6982134",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.533333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "42a6e1c4-5fa8-44c1-b189-3f3d5f42bf35",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassification/9qmyqh0kj5ydznds44pcr7nhdbu54yiae434qgw3a2g385b51nx4k4c10kcvfi4y22sfahmpdobj2r22r1dr1aked8uldni1jk3irpp2dwtohl1jv903f1jwl8snzyu5baj9442qu8wj6mqwov5i8gq307uwbrhj/Norine/Padberg",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Ariel\",\n  \"lastName\" : \"Lockman\",\n  \"score\" : 16.33230334006065,\n  \"probabilityCalibrated\" : -0.14471556805404084,\n  \"subclassificationTop\" : [ \"g4gv6qa0fat4gpm75ilp3en0hvuamhwf5ue4p63ui70mwv40z264osz50baz7ae1h8oq5gxgu7ry390gqthe9rau5kxrp0x3v5c1qgl8xte8blu5t44j0d0us1tf\", \"lyoa0s6cldl46jewzbjxz9776i4x3a8p0727ssphtykbx78k4s3x8hpdld03103sba85ws85zi7nyggknqc80k6kk68zqh9hvj6i6p\", \"vilk8vw38k37s2ctfbkkqrcxh4vdtmksc9u0cj6rpru47k5dk8zymsvkkhbww1ooqgosnasfsykhaqi9n69cobss3gfsgjfdsev6tim196n1s1nl51e37ojm\", \"xfi6fltz3m68rf435vqjkd9vk37m8tv3o2k1zesmz5huybb75txvpnqb1w0v70fijoh4l9qnrj4jr95a8b4h9c6ha2dqeucuel2to1q0p9kxx62\", \"xk6zfr9oslbyzp66ummjd2c04x1e91uw1f36db62texdk1g7sjy2pbsh5wxeklt41tkr16tii2kjx8tbmbxdi5gh430bv4h5c6h6j0vcpacwdf6zjxpcj4cyukmolhb07ppmkd\", \"1m3vh0alyntfv5rd5278yld1hqm5kfpu97azx171jr6x5al2mxtc4naqwb6mn9d7sucot3hct6yizekfolkmbpsgiljqxzqp7jghl9rq3wt3if6\", \"2eo9qwrbunewku6gh00u14i1ap166if\" ],\n  \"probabilityAltCalibrated\" : -0.5321548919367294,\n  \"countryIso2\" : \"knmfepxqq5x2cz9lqx45wp67fesqfewpwa728f2wy60s7fqwh0mpu527nch32z8pkdf4n63bbecxrqfdbspobplhjwkt5lsnrny2u7w1uz\",\n  \"id\" : \"zy38\",\n  \"script\" : \"fa0uuojm52tm8nq3dwn8uyaurq7nfo6qpk86k6jerg99wut63rao7b21n1vd20d2dtzylg0htoiq38tx6tub5mgpvctqiez14o1o0040i6fte7ucu5k8riwvdqqzt\",\n  \"subClassification\" : \"ohl5uret264yo2lz\",\n  \"subClassificationAlt\" : \"k1iucb1wp6kemk2kk5ebdsgwwh9gzigpgat28s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42a6e1c4-5fa8-44c1-b189-3f3d5f42bf35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.533245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "27d7870d-3216-4c3b-84ae-cf1709f783e5",
    "name" : "Get the current software version - 401",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "27d7870d-3216-4c3b-84ae-cf1709f783e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.532853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "dfaaac7d-89fe-4d77-8409-47b2eb33f8fe",
    "name" : "Get the current software version (application/json)",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"softwareNameAndVersion\" : \"sdun61mfszup7idyo7xp24e6evqtknnmnqsgmwfn67499sa6t1i5iulrmb01fnw6f0wivmqcmt63ujqchzjblhtfaguuqm55n33m13vsb6mwkvu67s8q4iihitej50tvpr3kl1ccroqr5n95tg53mxrguaipgsxd3\",\n  \"softwareVersion\" : [ 1131375764, 1488417109, 123467143, 1544037846, 2030113238, 31712895 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfaaac7d-89fe-4d77-8409-47b2eb33f8fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.532827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion",
          "schema" : {
            "description" : "The software version.",
            "properties" : {
              "softwareNameAndVersion" : {
                "description" : "The software version",
                "type" : "string"
              },
              "softwareVersion" : {
                "description" : "The software version major minor build",
                "items" : {
                  "description" : "The software version major minor build",
                  "format" : "int32",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "SoftwareVersionOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "e7a55991-d900-4d55-bfba-78383e78a13d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e7a55991-d900-4d55-bfba-78383e78a13d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.532727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "7935eba5-f26e-433b-81fe-0f0955e6bcc8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7935eba5-f26e-433b-81fe-0f0955e6bcc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.532711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "723728e7-5d2f-44cb-9aa8-03fd3939947c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 400",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "723728e7-5d2f-44cb-9aa8-03fd3939947c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.532694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "2e953eb6-2d85-4f62-9a0d-02a657cb07b4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"jnn4y6zcey1yltjo50y763qng0xpplvhgmeftxn8z297x7h7pt4tkd22b5r6icjrn5mdat7od3swzccu6k0nx7bejjgbrzq7258g4yjty21fsn8znm4x9cli6su2w7343if14429fb8qz0opt73f5l2jr9w5mn33bgfxhwckgxyr\",\n    \"score\" : 37.71010944742519,\n    \"probabilityCalibrated\" : -0.1767789016669583,\n    \"name\" : \"Margeret Conn\",\n    \"probabilityAltCalibrated\" : -0.6108527833249016,\n    \"id\" : \"mp8s\",\n    \"religionsTop\" : [ \"o32teq8hudt43mxzyg1cnvirlwilez9yt82nt4v63nblryzd83k36rg6i50w9d90tjc5dhpwsxvbyo3e7cik5gsshxbjp6ppdmvbofcb6bi3s6b18ujosrmtubytaqwewksig0mr4pzh6lluf9033vvxuzzvw1ycb5vln1h43sjcdop5qmpkymx8keks3z7hgqbtzysa\" ],\n    \"script\" : \"wy9spq6debg1yl3imcsw3h6b9yzxu0jtpkrjeoydwlezey61fx3x0d6ssglt0r2lm5djtx00mzurce\",\n    \"religion\" : \"ho9wn2hiwo1oebphp4q3c8ps0mnfdvdkp494yb7c4jqnk8nbcg51utwad30gjtxx9c3m1p8zx83r3xew93013oo83tif0ajmcq904dg0bzgba74rn8tqeoldpua8zy39z95lntcb90s3310tvlpga5c65gsg2n20l4v6nt3r8b4f1n7m1kj8lwgrftr64g7bn4xtigll\"\n  }, {\n    \"religionAlt\" : \"7s0x29o4rhu\",\n    \"score\" : 33.489697802772945,\n    \"probabilityCalibrated\" : 0.21084059009121758,\n    \"name\" : \"Clinton Marvin\",\n    \"probabilityAltCalibrated\" : 0.3242942649644971,\n    \"id\" : \"8392\",\n    \"religionsTop\" : [ \"4aa0b78bme7v9yt4z28o1g2ni2j0oyu73uh5h8hqe4z2dwy0n99\", \"ewpvl36sc0kplbgpu03ocas9m7nxt8en8fbxo5bha2ayk0fu2kn4v5zzd3j1unuynxfdvuxpyx42k29g2l0hk64icxwqr9yfdelbjvggin5i7pclnfdykwh69tqdjhh2ta6wkcj28itd7sguo2rnyw8a77etj\", \"8xqeeumj6w1419taqtzxqn2rqdhxjeh1oy9cd2p892sm9k2d\", \"mmrjiq4rz51ednp20e1rgxoumnznx52rnevfi4f4zlrswa4znl7jumda0e6ha7hjmclkctuwitsog4wja4haacjm1uyce2fj9gnmfxd9jzjihehlr6e58yva7g6f4js0eu7adjkkbkpbmfj24dmzo5mx9u26ha4q0z9ff3jxktdx8cyu4gu0xsq8f\", \"udaop12dq9uwpvh1goa7t48k0tr57qvolbgo2blsohbph5ud1i8xbda3\", \"f369f1d5ooz36oknyoxl44u1sslbucfir0siu75ujr3qbrru126jqtmfs\", \"qw3azww8qa5xy7ur9d02pimdqxuxgjarb2qdvglirb0umk83kif5r9xdp1hlblvkssqhhs2pxywrkpr8eacthqqdgo73imrszzhdwy9yum2bh79kq9v5enbn8ew3eh\", \"40qbkrz99ep64anzzh55d32b97aa3cuypywp11s0hzduzjx03il3kn15yg1ffb5p33vsjra47pyd4hbwepvc95xgj0cp6xuroou4txkuoggi6gsz4u4stt1ipveuwik72qk5boklwwvti\" ],\n    \"script\" : \"z4fmkhgmr8c1pxosxi6o349tmyds8x91plyf80x8ulihlpobeqo143m2g4nie3tdtd1s8tvxpu5527ht03labuhrll8mia4qp0pgibhvgrx\",\n    \"religion\" : \"e8q1ekmxvkf46jom2uuxr8xq5cuiev82xnx50xwn9w1f53ozlp8c7lhaxkl59z4liaak6nqit9uch1yl9e65ptn8z85r444jw6lk82t0cctp3hdgzqrgs4bc9j6s543plferzf8r2c0iendtek057q2ivl70qt2ea4dyyojqy\"\n  }, {\n    \"religionAlt\" : \"h9jft25ir7k0ufrqw6mg3wie92omq4i9uy1009j9xod72wlewqppex4buxiwimg5756ebltlfqlts4b866plka3iry67i149nkr287u4u4ylz7vjjljtg30zm95mxhj8c2mz83o03i34zxnrh8i1q0fe8k6icidqlwpeqmtckxputazk9d\",\n    \"score\" : 78.05880892297385,\n    \"probabilityCalibrated\" : 0.4748967446934953,\n    \"name\" : \"Dominic Huels\",\n    \"probabilityAltCalibrated\" : 0.6225396954905937,\n    \"id\" : \"e456\",\n    \"religionsTop\" : [ \"6cmnz59iswbfakrqz1k6r1d96lsu9y063l4lb7ep4bhlwu48mgitzs7fgiwyaqv9qyg7sy0k7btx4dyw5htvx\", \"o20dbvkea4e9rixe1jzrruk33hunu\" ],\n    \"script\" : \"oayzsbt7z9vv7spgj93v7fvvxz0mkf5kgvugosxj4aejj2v9ydvjk5fel6n36bg1ybyc77xhpw6rser0a31022h8gn5rmtmn8nfjq8ugiduf5lpmut\",\n    \"religion\" : \"1l9790a0c13cycbd1gf4fm3n5gbh1rtaqwa4wpsivcmwqu44d6bo47p8bguzijq2e7elzwjjxz2tqaiy6tdumg1dj30c61ufh8r1h4u13q0mmpmb3uxxtpwyk0tisbntu50tuidmpuefffg7237u9amfnnm8gli0z4wciui43qh10bf\"\n  }, {\n    \"religionAlt\" : \"ft6qcng3ku615ajytrovhk2wb0g45cu9dzecamgubdxqqokyqrql3oc412j6\",\n    \"score\" : 39.31485032195026,\n    \"probabilityCalibrated\" : -0.4943571497864254,\n    \"name\" : \"Shelby Boyer\",\n    \"probabilityAltCalibrated\" : 0.666985347887894,\n    \"id\" : \"z6fd\",\n    \"religionsTop\" : [ \"y5wq412jpgmsuq1hme2ffq7gscj1oekmlqb9p48lfk8ysvss0630vnhm45ovx3pzylfh00zs3jbfc6vj577k7req9cwja2iy94vyq53627llb4nn2whry3rrulbyg0j4h6tpxox03y82ywuw6f62u6rq8wj9wvopbqbpa04\", \"ir4je4xx95v5pxyoxavl6lmk8f2e0qkicyy8quc7u3qccfd1xegwb3rvvmn6gzxg2i2hooooc7r9t\", \"ls9fc2j9u5u51zknrny6\", \"5mqhxv8x5muzbkbl3kc7uhovwd\", \"bx3vjkz6mfmyl2f3mc\", \"u729ap1ejfmgj0dm5avw\", \"pxkmy9i4m4pn7ao1jml83d5eagmfdzyufg5f5p1cj8marl23k1r2o6no6yp2iq50rwq5cdpc4xcbz0sqxvnwpsmro4imarg06hj7p75b08lmjcstykdkvkznz1adbqt7z23y5h5xnl0y27w4wbcwu5jcbuswhfeoq\" ],\n    \"script\" : \"p4qql230vgq7todgya2pru9do3fsegdikwb5q\",\n    \"religion\" : \"9l24lto9o1aok4wtblkzv6sb7xjtpcvfzneosweqw3r99cglheheuqzvs1f4xjedkpecs2160uafnoepeelcrjjwtx2qmkogswb5j3dxeffnejalc8g4u85y48205jvldv5aji7jg1q4zuptkp7fs\"\n  }, {\n    \"religionAlt\" : \"ox3q5svoqxl1pk596dhz2xuviou3i27ws5kbg26mfgxdiyt59hgxk1txol00zfxi7ivu6bezwnoplumbid3nqqz\",\n    \"score\" : 41.385908350876655,\n    \"probabilityCalibrated\" : -0.20772947427541344,\n    \"name\" : \"Manuela Thiel\",\n    \"probabilityAltCalibrated\" : -0.9143127171242991,\n    \"id\" : \"1qw0\",\n    \"religionsTop\" : [ \"9oj550j35hy3oz6a68grnniwxfiu7s1n2wbf87jlg5v05y5qrku04s4c473kzfccg3okfvhvtl8w0is4mm4dzgyr7ks0myfh6s3nr0wgfh7111m5kc1s4j\", \"tzukvevgjzdwwdxaum6r9phhfds0jvux50tfg4uzwvandnj3dxde8t786xq5fdr9cqyyfirobsazuawskf8e0asjztogtq5awq\", \"v1pc0lfkrrq38qc50d2d7veta8q5wjl5j0pcobdknwab669dxuxptpk2afcfevo6n0rtcyhv8lmrt8s09mxxku6c90e9uzgcz090a9ikz0td3fey7g9k3dbq857fo7sv0h\", \"27hnp6p0zsuevcey53w067tnx5rcgtleuejxvo38rlidnkvz1adjfor47ns9qj0qb6w6rwqf4k1\", \"1o08dwczlbvxrazm669ukyn1bu2utg8d2lpe0tlm1kcp7oyzo0y9hkab7sg3ibxh30jeogcsifm82ad74ia3yqmxqjq9skri3\" ],\n    \"script\" : \"po7ke2wm1uezi3fiew9rgskopwxx8k84luskpgo5gl\",\n    \"religion\" : \"484gh2qteambqsydp3wv7xj9bbc3ofnpfcpmopsp7nmp087ovxiblsts4foli6ol1vsd3lpphm04ijpaqeoqti3lv8yuulzf6te19u58ed75x7mp54fzffijre60w8n7yofx\"\n  }, {\n    \"religionAlt\" : \"ors1yskbeuanag6gwy5znaafk1z9qof53stjf3wo02ugnewxlzcvujy4wypy67x84lm6yclq373fv2g7awt2ysxnh\",\n    \"score\" : 26.11257642288457,\n    \"probabilityCalibrated\" : -0.5994335760057881,\n    \"name\" : \"Janine Gibson\",\n    \"probabilityAltCalibrated\" : 0.8032340924151611,\n    \"id\" : \"9hek\",\n    \"religionsTop\" : [ \"6tm33e7x2lt2lzln8rh38v5g3k\", \"y9r1jqk823av8o5iitxgbw7w293bxhkwk9gwx8691k713rgf45e9rfohba6wwmtmfzy33h0r1g5s\" ],\n    \"script\" : \"fg0x3azv63ul6i3kgt2j\",\n    \"religion\" : \"c7i6jja2ekwuxfvea9oahgm4z31j0js4fbij3wyyru2i8i6vjq3namyzjpnbk7f3fmp22ty68w5yq0uucq75cjnylk345z86hao4jfuw3pf2f\"\n  }, {\n    \"religionAlt\" : \"3t120uisdiv0yioztpovzipnfhcelhni5rnh9ox2dysalq1jbt3rvw3696hprut3o38qlvujzb9wexd24d4vdyg6w9guwgcalcdi29h3zzr9n6gahorvdkuj3nisz68nfaiw2cy7xdm9dfm6uz\",\n    \"score\" : 23.63986261777773,\n    \"probabilityCalibrated\" : 0.44075265744527337,\n    \"name\" : \"Miss Bruno Franecki\",\n    \"probabilityAltCalibrated\" : -0.6976878931314232,\n    \"id\" : \"6fvv\",\n    \"religionsTop\" : [ \"pdkf6euqjojmnv2vqeb88qt2dkbcbmpgf63qvqygl0y7h9a12djv3cxm5obdbk0j5ww70aikgddtdcapbzrw7z6efw6kfxian2tcx1p93oo2iby0mwpm23kpkn\", \"0y9wdpoxi6lpiun7o8s1piz0atpeycjmmbgch3iw0hc9jopj08bm8hzyh1q4d22\", \"ilxdi2u5id86hf6c2kbbqs6wroc67ok2ggp2dk9q89u93yh9ob68ma272gin7myyj520ecc8ya5vkgubxwlodgisiqs1v586k2wvh8lx9izawke1mxi3lcp6n96zscqc61mnmavywymf7r0wn87t8xo7wvb9eblc2fxox27j9273t0hgnb6\", \"4w7084x0mk7gc847dsl626r8rqqq76zmsztlt8w7m2f3axz1dbphqrdcc2qdse2ixaiikmulsk3rztflgkndd0sp90zv\", \"466smo43qqfy3j6e1lo3bh8zj0ym\", \"us78s1nw0hg0uo00byszg\", \"8aghmxbs7tqrcr2s01lrh7mvd4225b9phqfn44xrgf3c2xdooc3tjaqkbyp5d1xtehdv74phmei2mkedi5r9g7z4drbjj3tsi1jz443nfug42l725wj2tz3dkgvjds3px4oiv1m0pc7fsked5pi8eljktfqd8\" ],\n    \"script\" : \"96bj4hqi3qau4jv77s3ee8dj9agjfy74\",\n    \"religion\" : \"sb66vrc16xnixyltr7xexzhqdeji3rkdsc5pge4ialziw942wauym\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e953eb6-2d85-4f62-9a0d-02a657cb07b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.532656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "a7e9aaf9-4bff-438e-b336-5706f4a4e4ae",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/8ar1stt4zmu4mmk3dq8ibqmlmqggmna3yxcippttjbibliv2vbmop47e59l0llpp88hhaebq94da0rv5r4syt0ogr9u7l3qevi84qy5m56uw3h3s6woamqgj51bn3v6x7nf11bei28hnu0vkgto6dy4nqz55860e4o7xvwjctellp/pfpz1816nqsj6b7dtzyeqb1sy9c4hoxo3m0w5thseir8tpxno1l27jeab7j6v33dguk7h8ye5r5c9a3nr64ie39r114pqcq9f12h7y66k55b5vc9fgvmu0feh552wu65l8is9rk2qs09hrwg4th62pmc6gbjb97lpaouapwfvkmql28hdn46w6lohxyq",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a7e9aaf9-4bff-438e-b336-5706f4a4e4ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.531232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "77165990-000e-4f03-b800-eb7461981e05",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/wr8z4k56kn6vktn8m5uv2vj2gby3kiar925bpmk16tx18wovhoa21bz0qevgw3qq42utfdenmuonsxzbcmghx7vbdq74aiams3q6krug1yl892mank7hsa8nke9svtwliaimtmowmfqhzdb5sphh9a4v4emqo9ny5ey4qbg7hvr9a/pumuwr",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "77165990-000e-4f03-b800-eb7461981e05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.531187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "59c8c592-256b-4cfa-81ea-ce8d7cbdd13c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/buynyxcnuivgpdf967rvq7gaekez0vpytnw5ad0ymz71nlwdfy0w3hnfncd5mufdid5m07n2ea1zd8k6dkrzvbv7ob3htu7n44oc8y830fdbul5mvtt9x1bmg7l9eehd902yobtsbut4n9lbe6tlf2dvf2uw978mnelle6knrrwukjpi7xobivbj5mqa58ukx/cgkidjau9aidwamqk62kc7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"3uu5mzvxxmmih883t9aw4umu1oikdxz8t25t3xtx3\",\n  \"score\" : 75.430945969385,\n  \"probabilityCalibrated\" : -0.7462436918089022,\n  \"name\" : \"Yan Hauck DDS\",\n  \"probabilityAltCalibrated\" : -0.2881928634032007,\n  \"id\" : \"85qp\",\n  \"religionsTop\" : [ \"go3d099qxc8q7ka2o76zeww9t2uzspq8ugvvqa2sw5ksrx5rj15dwdpq542n4g577kay8az6aoljbyupituu2mj921lnhks8qxtug6oj3cf527g7yc86lo0dppersjqwrn0vnc530el02gqpetsd1kqbtmurw8qmb5ehs66ngmfxxyqkmqpeq0bu56pqf7\", \"owen1oru6ol35x9ci9e64lventssttxn3\" ],\n  \"script\" : \"p795zqu93ykoaf4zazi1fh6qm34p81b8ao1zq81zud82sox1tu8yohtz8ci3iqdg9rbjbnqx4odaqfd4wy1hp5wyy3guhcrfxx1kp8sq8v8g7gfknb9cj8endnpplyl8yecema70va41r8rcgtgm82n6thqguk05tu\",\n  \"religion\" : \"mdn66zcc3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59c8c592-256b-4cfa-81ea-ce8d7cbdd13c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.531136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "74955a68-6f00-4267-b835-51fc0358832c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "74955a68-6f00-4267-b835-51fc0358832c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.530848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "627290f6-ecf4-41d6-97ae-cb9d4d5a7855",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "627290f6-ecf4-41d6-97ae-cb9d4d5a7855",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.530833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "093c1989-be84-46b3-843e-adc36128f9b7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 400",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "093c1989-be84-46b3-843e-adc36128f9b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.530817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "ee0a2016-789e-48c3-aead-705f5e24cd35",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"tmh1xlqgor\",\n    \"score\" : 67.38682465296921,\n    \"probabilityCalibrated\" : -0.4686462338260369,\n    \"name\" : \"Natividad Reichert I\",\n    \"probabilityAltCalibrated\" : -0.9409159283717892,\n    \"id\" : \"34w1\",\n    \"religionsTop\" : [ \"ic5uel8dhywskdyltg4ci6wk8uqrm705ltqyslib706908msef5kgmxdafjk1ok3dztu\", \"zndol6rho4sb65j48mzcpskpewelmit8k66q5nm58p9g8bbmqonir6g9xo1r2egffk3dc4bu357ij91na3oaf23b4\", \"xj8bpl7el8fctyj868wl5dsfro66ki2x2j4kx3tahq5uglaijh273he0x3pi4swtrlyrrbruy758a0k51xseyu2c6bcnp8lf05tq4ldao3kmz5nk5dbde78d6o1vggzgcvfcv69d7q304i7sv1lqykpfx6akcm0j5yf4ottn30t68uygcl08eytzf8h4law12v6g4\", \"vlcmapffc6an08jmm8y693lareikzs93302o9xbjb52roqimecreegza49u9sdquev0vxoec7\", \"xnraul4x9v13m2h23gahm4toz6pr6s851hjde1523ei10qrnmty17igctpahoxk8dpv70t3qfrx3vreg8hvjfu9cg6veikwg5nnavq954w0j96eoxmqr54lit8my\", \"aqxx963buovtqhnw4375zik7fvimmujw1zr8ttah4qochche5qs17ny4bbur23zq6ka7apsyiukktdcwijuzx\", \"vsb4n6zlm921di2561958y93tuak3rmcn5ez8ujtjt0rgsswbng3a1ey0e9wneh4ninqq5qb5elh91t6ks0\", \"3hvg4k94872xtl4\" ],\n    \"script\" : \"mlk0qjpbc5j0k05xnswbv0i89choiomdgin1h12hq03amim810tgo6lgabtb577zrvw5p87nbpqqan01e7byvrqugvjwnm8b8hbmhz9yr83ivxgi8gcioq1zi5e0k5cv73oax4f5xgcz5ae9h0ig0lz29r5jgdna3avntet1uhjw1xcthz3je7rrl55888ugt18yx\",\n    \"religion\" : \"yc5jvgq932e7382c0f3hvc6idue74l9pqco34nz8ufqzuuebe9zegdaktacdx233jdurhmw3jrwhuvwr35buacp1p6n2lj91pypve7d3\"\n  }, {\n    \"religionAlt\" : \"o5wil2ywj37pevo5dgrff2yuxij0p7m1cd9b5xpmdi33vlux8dh45\",\n    \"score\" : 15.7848035035814,\n    \"probabilityCalibrated\" : -0.8931002709431024,\n    \"name\" : \"Mr. Micheal Collier\",\n    \"probabilityAltCalibrated\" : -0.5801878155548681,\n    \"id\" : \"y9f6\",\n    \"religionsTop\" : [ \"b7ub\", \"qsmnt714g1ibrqwtjmrk44sxax47bfjr0ce1hufzvcgjjf0jxe5s6ujaeqrzqrr5vmf39eg038l9j6g1phz4txr9v9au7559qt2rpush0oz43ucso8f92r5pz7xujjdbq796z24aks8fr256umqfjuknysf8lws73d8o0a0lhx2dj07xfk4ux8d6eauj9j1\" ],\n    \"script\" : \"db5gxv4b9xllkgb4x2nkgvuo1ck3okq5edp99rjp9f1dnz81ky3a3z9kpm3e2rwi5k45kaobyzkcyblvcwyk8c52rkue2krjbyozneo6yk5al1c0h4079udnmwyf5pk8zhevcupe5tegj7fauqzt4slu\",\n    \"religion\" : \"5qp9mcv5cw0fty2o5cqmli90p1ywhwf15zcfmebatzm6vocbhw6jr0n9ixyil1kitbnqa\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee0a2016-789e-48c3-aead-705f5e24cd35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.53079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "900e388d-aa4c-4e38-8423-c80b4d686260",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFull/lt3zhw368ol87mn5y47ustecd5e9my7o3f5u8ofjtj5ej6jn8xxb8jb5m5q7ubynxcctk97cjtem9k1486xl63v2vy5kz38z0m2x56j7vuwqprk5brqyru50bkn1z7x2gnrw/woogn4nybgg5qexja3bq32va9xrfjal826jge6zlz7p6sflnqumzrvu3u5zekjprx4cjlv5gx170t57ddqneh6fx6364zquhwnpzrz03t740v7n0evljx15zna09lrke125q5rdj/wk4vqk06v5xgw7av7cuxzxoxagaxz17b3h5i6a74b2opsm3nr4sl38k3fwg4e3ljzwcoj0zzihaaz39o4utvy6hv9jax01o6hapmxnr2f6v1urkb8ezieoh6nimemipxs648usoxr86cywp28xk7tojmug21awib9q9ljh54yk580b77nvqmyw41x",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "900e388d-aa4c-4e38-8423-c80b4d686260",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.530322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "524112c7-266b-479b-bbda-f17575891528",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFull/kz3dfz2rx9xp07d75nkwq5vh7zxib0wjhu60zfzfisqeoli24ljtcqi94seii3p6uor1m19wc1vi864q0b3wpub3cnn47f147n617tzvf2ev3bfqy5q3z3wqzi2sd5pwkkn9bwjvfldcti9jja2vd8zihu2qlwlu5zrbxd2lsbr1n1gclb/d7zv491swuqpxe9nmb2vk82qxg4b568i98s3acy3u3oemp7v7eb0bha3om4j99e7htiukfejkajbl1atu0hukvvk7r5tjjuoc048ll9pj7t48d4bng02b2hc3tpyl74jn0htjrwsrqaqp6njdk3ixjhgqyq1lddx1owuh/uxpr0041zisvdawqaweofdsbzzzon56hkr5qswmku398nosf1gy1r16uc6hxdavo27jp51xwi41ma0oertmje8ftg",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "524112c7-266b-479b-bbda-f17575891528",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.53027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "76b31b87-5e06-41ba-aa01-4b5e05fe6d5f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFull/m7t9gz37fgk03b0a47sze4b09sqbfcaa7og5nknbmqqa0tkl4l2iteoh80tkagqveo2nakr2vsr2z0qovclpyyl7thahxiy1j6ykqc8p4r8/60gcdocg8cp7pp5vbjkkf7qrrqunbvffas69yfllrk3ry8pc9c54k49sj/1ag4w0ehssyloabcne3skot6xje0qxu4zuxnqz0o8kf8yespwv9f97ujbbv0e5mwokezxcnooew9i9f1trkhi23figdvj769bgtop73p7mxfgixbc30qqq0uidpq8ia2d9z6eo5juad0xjx8n",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"1m6lzyswqwp91ouiq1sw0eo3jh4sqna6exgwndaucd2f8d9wkg6v5mcfexlk\",\n  \"score\" : 96.47795094843164,\n  \"probabilityCalibrated\" : -0.08945879415669689,\n  \"name\" : \"Janita Green\",\n  \"probabilityAltCalibrated\" : -0.6453033396575287,\n  \"id\" : \"81el\",\n  \"religionsTop\" : [ \"3k60m20sl2glstcauzsagxrb49d7n9jiwfj2k2zirvlnffta1kbkxn30fw7l0jgcy719dxmvj3p7jt7dz995bjhlyh1ksiggdul\", \"1obk5qhy8oqs70svs0cmwsaiukmn8q5kcga2gocxu8l5u9dl1zwuc8z2fmqk0v4lp4op5ywg798vsqf2bpuxscqoygx0262kohucdafu\", \"xukycc7pmsbihkx7ig7wp861mzpw2g1fogmsr0lxo46fel\" ],\n  \"script\" : \"gtqoz8imif3ljka9d9v6ywbxa0xl8s7dlxgsxoggiiczxq904p8nq0u95tmv5vsoeefilwjihn3d5b9htoo4qsxgcroaql94t3lbhv66m6gzcp38qk269qedffw30oxw\",\n  \"religion\" : \"u26xoyhu24bytazhqmgjq8j2xa83hj8q3zu1r5uydffgfguvjyk07zw1op333ss0xfxszkv4rbee7nm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76b31b87-5e06-41ba-aa01-4b5e05fe6d5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.530207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "1e8019db-8c96-4545-ae94-970393f75630",
    "name" : "Print basic source statistics. - 401",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1e8019db-8c96-4545-ae94-970393f75630",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.529872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "01a4cf8c-f230-4c26-b9ec-c734a27fdef3",
    "name" : "Print basic source statistics. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"countriesAndRegions\" : [ {\n    \"subregion\" : \"8ge3cs7et0qo8051490tn7s45o84r3ik9am7cg2zriu6idpg0h18imn4pwm2lh6x9qypamn8vx46g8monfudpwui6ihoz76p9erbb9d9iv0c4uulu91i8lsaj2nfzl3zbkhntek5zdmgkm8q9gi2b2i3lbd6r8og3h0ctsd4jjy26llkbdzdyi2akjr\",\n    \"countryFIPS\" : \"chv3s955\",\n    \"countryISO2\" : \"g8hd93tns87843g3e2ii4kk3tk08v902gwgt6o1u1pch8fuprixbn4l81rlo6apokkvv5k25kfugufjhvoacz5u3wmx94mqutov7dzjmxjhcuudzu0l5dv964w0sofqlkdu7vtd89gmb12dntz7f4ub8w1jgvmvgzbn9bq0neroqnafyqc\",\n    \"countryName\" : \"Mrs. Foster Pfannerstill\",\n    \"countryNumCode\" : \"h0jlkpajg415gbpqct8t1415dt\",\n    \"countryISO3\" : \"wabwg3prz8tp6qut5ax6tfl9a5x0whxnzuzt0i8hh5srg4cijeenv2uo6crklxal42kgqgov44vfpis548g95hebrbx7m\",\n    \"region\" : \"n31vsix4gretkpe0prqvx1oozdsmovcc7wdcltaor009ef5o1rqiyxs6mr6ffpxxreuqjvhiwwb2rv9r3y06ar9qxq7q2gxb5fizznnztjadp5a98xk9pctdjmihodkged6w7axv5hngxzgc4n\",\n    \"topregion\" : \"l97d230ltu2shdlfd638nfaa1xuoorrga9j87wtc0lhq5tu2mjnq1mufafcb3jue7pgb7ukr9ummd00jhk5n4saq3hpk8v6zxzxqpur7iu0b4ytu6bp\"\n  }, {\n    \"subregion\" : \"j5cshukb55ok1cnxjord03pnw5ks24b016lblqpjbishf3ix0ur03062yez8w7joda4b0gp9lzn1lzlf5amr3thfx9zhs4\",\n    \"countryFIPS\" : \"rp2bfwhjol93kf35qgb1wkswgxamlxyyn3usylfedrvy36rxw0atms9o66j0ps8vng2slmwhk2w0yao1438ede22nb4n4yd3odjrimgndhm6a4tq3jpvaey1\",\n    \"countryISO2\" : \"60ndpyluqdaezt5k3hv2v1fg68y\",\n    \"countryName\" : \"Byron Weber DVM\",\n    \"countryNumCode\" : \"57j3gyzn6dwlk92of1raahb0q6mixc1tipsbx9rzv4omccm6tew968wp4do8paib1igu9pi7b5hjca19mn7oj2mav9fsu89m1pzr3y1sdxpykgmjrxjcjfiluvltpx7cvat3c7jjv9xm6h\",\n    \"countryISO3\" : \"dwrtfyraqcioyc1w1zs09lgw707mvesj7qekifkmj2gh7fpt0y2frzos8urs1b6ghzh5k85pluj5bup2lxuvlqpnsmm28dhyyebkvb7ywruo6dk7wh8u7jq7e0n6gtphgkakxmcyjrn1d3f64e0gdsnvvv4iuon6skgy1bbnyag6q21tu2ij\",\n    \"region\" : \"uph63xnnj6kf4cjevsz21gqtwiiv1a58p8\",\n    \"topregion\" : \"wa3dmo4xvoe64c77hnhnecjs8jt4safnqklb8zc5i0v5qpl6c32vs\"\n  }, {\n    \"subregion\" : \"pvcmudr1k52u5s3duzfqtftb2lemgpdte5vssg3v4swtqlbb4ss0k5u30t7irj7niageyky11i9h8tz83p24h988gmditpmew87\",\n    \"countryFIPS\" : \"h7tf55q0zbcesqppdcvfm0u2kwum5h1pdf1ot9b2s5nlxu0wc6gt2r5b5uggt8augohskhdg6p8vw49l8o8np5kb4llrn5cbqvqpnmpqjjqsrf8ymhb5l95tls1z1qq3fsj05a1pxlmcwy5ucv8rbgtm\",\n    \"countryISO2\" : \"0ur0ya8dhb0sjksbt0pjyr4d6017bc9ukdl8smc1r3y0vtwwx0pgj5q0e35aiqneq3omirlax7t0f928f9q6uvvc7x0fw8xff1mxfen1qrm4f3ly9s6d68iompq7ggfpzxoizztqkc75ss240vsivpbnfnvyubsnu1fgb17l1kly5so5j0opy98nerv3bo07sc\",\n    \"countryName\" : \"Jackie Barton\",\n    \"countryNumCode\" : \"vic9krn1uqx7ichzs29ino4h39lr2mxe3l9fbmpr\",\n    \"countryISO3\" : \"4o2qcfma0yvcrn2illsu16sbn159n3ulpl3n2opj7167mt32aoy2cn0gk\",\n    \"region\" : \"2vzvzghuc7ayj63ehqucn9f84x5v8g42okxd5xp8zt4uv7lxv9qy61w6j8yyynczhuk13m\",\n    \"topregion\" : \"ksua8ibo6054bbtu2owstidyckhramuyhfyfzyx2f5inxcz1jfzd9utalyftsc9v03swa\"\n  }, {\n    \"subregion\" : \"vkr882ody7mx1vtsrbooxermovubeyc02jmoujej4bwcpql5ye1b97jq0r961bh77zv4kt8uoodt9c2793z0afdkyyccrz8xd76zq0v4nr5irspq0rk76ypcrtlxpc7n1vjyxomjpfzblyqfv1a8kc0yikqxy0ukb4a1klamdx\",\n    \"countryFIPS\" : \"ounju9zc1g3b89lxvu4k5cd9rvceo5nbgx20cuhdghvbjf174rk7i59c7g5jiapyjm0gc7s3tgr6aw6ul198bo62n75i6rxo7x5qnhhv9r\",\n    \"countryISO2\" : \"eh1po91ifnb1xdmx2ta4j7umxyzetkg5zlcq11mnwu4vbms5v3y670zswsrh85vjujfm6kuozrlhhxoe8hphh9bz7eybfn2rl1a4ykon8vv\",\n    \"countryName\" : \"Lavinia Moen\",\n    \"countryNumCode\" : \"ioz7wa5xbschyf4moujpeseycbbq7nkvxd3pnyvt0wwszh9hffe4jwska2is5qbjuzq22u2ubaav43djbwk0kh1u8hop1hiwxf16vrfq5fimg2cwqnuumxe0r5zge2yuu4qyaf9k6vpqsua0imup0qovz9fiheaay\",\n    \"countryISO3\" : \"93eqtuxg8n2qotseyshnobshmi63l38xqap27p5b1n93it2axnidtpeb7qumontyblt7otcuyxrprfkka9llawsteuxl1slroy5kr63nlsplc3ydhuzck6zx538i7pa3ac2thqcsti921jsuae4xrz7w3j67j3m7sv3ntuk\",\n    \"region\" : \"m29r2sil7vb72wywbrdhmwysbfw01f292g8cf3piamahdt5sxzutcn5158z0lbuyok61zn4y926vo\",\n    \"topregion\" : \"st1axxb1u8jztvx2708j825nrq7znv04q\"\n  }, {\n    \"subregion\" : \"3ts9f46sx08rcembl2a0x5083kp6yw3hu5z0jr9gu8fogwt1a25w7cn1uua100mvm218oikycqbzuz5gud79spsul5a1yr0ea2j4uiwfcbcjesj1shyks80431hrpy6onztgd50zqe11s6dn1doebx6bteion17u5ivct6\",\n    \"countryFIPS\" : \"5ahh5lvg02x63nqgxu7kfbxejoiuv26v0zdjzsctff8tq06q6dwiw8tf359li0825mm9ikfgmqhpahbfj7czmgtl1y4l860yv26dm8ptrhygb4ibgeiebpqmj564mndqcif6dcurn59ha8mt13u9alkiqb7n3r836doc5\",\n    \"countryISO2\" : \"v6keyz139bsjmi0otpj587c5pndjkbac6y5v6gzfs2c0wpbokre9uhmv1gi8f72wxj7vjypa67eh46qg8gthjtxrr6v5qbtdy1il9ez7oe3xvuefwsqi0p7yircspovzv\",\n    \"countryName\" : \"Roy Donnelly\",\n    \"countryNumCode\" : \"ktm48a82kal4514ylsgs9uex95v60pek0ufsnxdoq8e6nntg0wp7boh1oo874e758zy52ugv8k7q1cspebflek8i3huk92x3xkw9frk90hgmzt51\",\n    \"countryISO3\" : \"84k365r3ll07juovdo0ynp68wic1w1gaf4yjxmgjxhrpwp0m93ezae85uz0mavdjvjipx3nmy1xybmcycu4wgxuxn580zcklqc7mmu1t009nst2hpj6ex4g1fa1lkavi2smjgyo2oiwk6u87xvzykyy83cislkg5yvqmm3y1x9l\",\n    \"region\" : \"wklhmticvpunlho4y9v30gkijol931488j28vrbten0z3i9xxyhvt6fk10ne3ki6dre1kuyyj\",\n    \"topregion\" : \"7jtyrt2qyx78ypuouhrwdkw7mc3gm02b8w2nh26ws86cz32pozwxow631mfa946oykg157bqovzlnfpfpygtmwvs0im8cpd0y7ngoa57b1xpnuy5d5ihpvnz40pmsm92o4md8bkgtsyit2acpagvo2n7l80o2ghzfprey85d1ism3av40jcs3ga5i2y706l7ccgdvo\"\n  }, {\n    \"subregion\" : \"kz2phvz5ybxryci66gslgb76emq8w16g3icqsksut6mtb95le4za62xh2f3riw4hpu0ax\",\n    \"countryFIPS\" : \"aekyn07b039230jtn3lpn8k27evzsjo9l8kuqgqp67m8amoh75djmy6e2t5yzdy1bjtfhc9snmw5lggrdfcpqe3dvkdqwqvh\",\n    \"countryISO2\" : \"ykglc9fuacx1ggz5eat1jln75y6jhbipopbfjdyupzg4zr7mvu00ihw6dp6kbqze6xv5vijhfrnjk7lcqcdlkjybnb\",\n    \"countryName\" : \"Jacquiline Schuster\",\n    \"countryNumCode\" : \"zx7jf4x6i98qkhx3el3pfv1tf1b6gq0386pb6o7rcj2giclj2wfpvm5z298ynr2859klk3yanklk09rrwrydlbgfi5o7x8olgdvk73h8r87jjbnpfavd9ue59hztakfl8vzul76vaqtx7e\",\n    \"countryISO3\" : \"z53cumxscwhnt9or24nbxes5yy1ttt9gfo90x0mlkv8lzo1gcfot9ljm4cwsdcbnk5b2rowmdh8lrve234ewbzs4xp5npkxlo6zpq2dr3o8lfkkxhruawtrt0j17wwomsfj32tu4iwl665jt9u734s87bovojt3r0jreavf5tkh7e0y3jf6h66m4d80txcg6k\",\n    \"region\" : \"3h5s9guqz8bsy0n3pjuy6c54oowb6my2m8faerduj8qh8yq5gwi570ds\",\n    \"topregion\" : \"arr4s4ywvlarwf39d1mzl0dcivjeo0iznknc3\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01a4cf8c-f230-4c26-b9ec-c734a27fdef3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.529843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions",
          "schema" : {
            "properties" : {
              "countriesAndRegions" : {
                "description" : "List of countries and regions",
                "items" : {
                  "$ref" : "#/components/schemas/RegionISO"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "RegionOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "9d893d73-5c51-4857-b1e0-98b6334b6384",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9d893d73-5c51-4857-b1e0-98b6334b6384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.528963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "1b7138ad-3444-4e7d-a2bb-5d17e47a85c9",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1b7138ad-3444-4e7d-a2bb-5d17e47a85c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.528947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "329c7367-ca16-4b40-a7eb-40e679592814",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "329c7367-ca16-4b40-a7eb-40e679592814",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.528931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "2a0889d0-f0f0-476b-ab60-752f74630ae8",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 21.300587228217672,\n    \"firstLastName\" : {\n      \"firstName\" : \"Anibal\",\n      \"lastName\" : \"Koepp\",\n      \"id\" : \"ei62\",\n      \"script\" : \"b6gzzbz9fpjwue8wzaj9rebjgkicw3m\"\n    },\n    \"name\" : \"Claud Rau DVM\",\n    \"id\" : \"3bv0\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"cyl6uo49dzglijmmb5eamlro8wvbvpqqoi6lb03zt159cf\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 39.17160359823075,\n    \"firstLastName\" : {\n      \"firstName\" : \"Joslyn\",\n      \"lastName\" : \"Friesen\",\n      \"id\" : \"980t\",\n      \"script\" : \"8u82yumhr0jp28rbm32pgx99b5u7lsvfuyw1mu28tpddiiqq6h69666bfxvj3lc4dq81v0xm392ko31yr4uyaads2w75pmfsf1umwsxh321xzalfrcw6pbi\"\n    },\n    \"name\" : \"Wes Herzog\",\n    \"id\" : \"g1av\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"1dhaktm5yj1u50n9i6ciw7fr0yus44ga4d7l08m3xh6rtvl\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 61.869650156146825,\n    \"firstLastName\" : {\n      \"firstName\" : \"Mario\",\n      \"lastName\" : \"Rice\",\n      \"id\" : \"xbc4\",\n      \"script\" : \"v909ggm2wokm7imofpedlx1prrv7b982cenvzvt1lhvjkjgwbt26sbw49kenbul3w6q8whptiavwox189tou7yrormsgh5jro4062qcw5bkj4umnt6gffavnf1lazujvc9flr6qq8z1om8emaoq3u7v36fkxzl588w\"\n    },\n    \"name\" : \"Donald Roberts\",\n    \"id\" : \"1l58\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"aorjuqv8czjqqjnnvso350h17w8t30xajqa91pyst289clboqu4gsn8z1fltsigijxdbx5iqxfhzo6ebnz69z779oz7k8q7mpleqjggkhm66qtbd7k80dasth04wxn3ad3ma69zkgkzri025lofmxtxh8k2b9\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 16.957903960532217,\n    \"firstLastName\" : {\n      \"firstName\" : \"Criselda\",\n      \"lastName\" : \"Erdman\",\n      \"id\" : \"c907\",\n      \"script\" : \"ojoaee93k76ganh2a9jxakmsxakhmy4vuh003795pxv81w6c6tytb12t0rny95ctt0zb19s4742eibigkgo8w09zzug7hwh7cwrfwm6nwu0bymydyfr3zly6iwtdhp0r16lt53yh6m6iby1m2o6hqn38w2zfl8t3ygm4r71f\"\n    },\n    \"name\" : \"Noble Schmitt\",\n    \"id\" : \"7486\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"ez4df02wo5mwr1vb9xpz78vfjwmvrepaa31mwz\",\n    \"nameParserType\" : \"FN2LN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a0889d0-f0f0-476b-ab60-752f74630ae8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.528901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "75d1ad24-638d-4f76-b739-79d200932328",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Franklin+Torphy",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "75d1ad24-638d-4f76-b739-79d200932328",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.527625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "fe0f590f-9586-4735-8e4c-a945b0f57927",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Micah+Pfannerstill+DDS",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fe0f590f-9586-4735-8e4c-a945b0f57927",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.527557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "e31571a6-e4f8-4579-a414-a79f9e2f4614",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Edgar+Ullrich+Jr.",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 22.25825256852164,\n  \"firstLastName\" : {\n    \"firstName\" : \"Perry\",\n    \"lastName\" : \"Reinger\",\n    \"id\" : \"2352\",\n    \"script\" : \"iusy1235t42be9jqo5vewy41d6jn0nh90gotr2mkyc8gnli9mx90nb347q7lyusa6j8qjttbcqg8n1vmabk6t1hl4i3xwj7belku83i0559khwt560ihasdmphyar66pn94pbzvywyrgaklyxrjdncxm2ktxfbg3ost3cvq18rnjyf\"\n  },\n  \"name\" : \"Roselyn Schumm\",\n  \"id\" : \"790u\",\n  \"nameParserTypeAlt\" : \"FNxLN1\",\n  \"script\" : \"602w84kcpgydx9pudlloheei0amk6dqkaz5hnmka5cgzh5i12ps8r9ifihgauh8f51g8efxmmfn4en0qcx5br3pye19ym9tqfwrdox2h7krjpipjr8sndmyn1der442o58k8bnxt01tm02g78j6yx33jhi2klvza268x9thqtzs77487ei76r3vtoshaw\",\n  \"nameParserType\" : \"FN2LN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e31571a6-e4f8-4579-a414-a79f9e2f4614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.527475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "b0277df0-fa9f-4355-a288-6218af744113",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Jamie/Johnson/1-256-167-1013/39yr7ws2pos24dqjkv9rg5v42eavrmt161tp2rjxjsr67uzcequzgo0hfwek7/56djid33p7ucafscxb50kfzqq4xj1yb5nkzhp8n6lkciu74maq860",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b0277df0-fa9f-4355-a288-6218af744113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.527028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "2f7f889a-7869-4854-814d-f6777b3098b5",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Oren/Stracke/%28011%29+720-1463/mo2sxmxwhh8lq3fnphmarcjg2dhx01pkhp5yfupa68a4utnu05whhd5oqhrctvq5xkz466vag7pw1sw5icj3y5yhzzsfqhf32cde9ygl3s4ea5uo3zhudvpr2dng/y699ixyfm79gljflkswlyga1011echt9p23pqpt55ug1iiffhpt7szfsmv6uqixokfsyj35pnge4p",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2f7f889a-7869-4854-814d-f6777b3098b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.526918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "fc5e6c30-e4b3-491f-b855-f81d6048a37b",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Clay/Lindgren/162-004-0574/44e8bk4gi5353yyeybfnz4yqn3jzgb7v1wwq7tnbm9spoj9jh9o2vfzz0qp0irrvzyw64zvzk408xvi0ns800m1ktufebo19iutbrda18vldrfn30ifdz3y8q79rj3/u8kpxpb63bcxc5vup0psyb6v2mjl2aylgh6w0ogtaff5bwgc3k77s32b8f4q981ei4cv2uwvc19lrbv15z8cjoyv34gqlmqgp8tu",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Boehm\",\n  \"originCountryIso2Alt\" : \"95qnsur6tu353n6fz70pqp22bd3xijq94cqtvggqn0qifzxext69sl3k88dv9kpi9lfg9ga5jdvp5buuyfrw6trp5tqkgylicdcfo1yv9qqr7kivn6f\",\n  \"phoneCountryIso2Verified\" : \"91bh6kxcl0\",\n  \"verified\" : true,\n  \"script\" : \"k1oy6em76lro0glvorlvp2x\",\n  \"firstName\" : \"Asley\",\n  \"score\" : 97.06609357081554,\n  \"phoneNumber\" : \"(449) 378-7063\",\n  \"phoneCountryCode\" : 2102379012,\n  \"originCountryIso2\" : \"56uhshm0tlx5z1938zrk6vdveb6s9bephbcem7ebof7dzrdjh723kflimvtlju5fh9koymijlmcw0dokkakunn94ev5vvy6gf6251srne7cm99zzervxv4585tqrxcn93b23r97d7s30xa939t5llphzda83l4aaq8b80gl2ja\",\n  \"phoneCountryIso2\" : \"ogcxt7twth32g0rza49eu3ac5jr9mwsbk9ginfbon1c2ykuc43v8mol4ctxectxd5itqg5r2vy5u0i8w9wml6nvoi\",\n  \"phoneCountryIso2Alt\" : \"w2m4wwrz47hplwf1ora5iy814djowy65vrcuozprfq19vhg5r6ctbwa6r3oxwgggv97csctazpcbv5khrb\",\n  \"countryIso2\" : \"ty15zeq2m37fgkw1dla6hj53a71d6c5qx89gbij8k1xd9guy55xq69gz9bjnk5twhkcal2h347rnhxxiv2nopd54jgb0mk986qkh4njie07jz01f3ae0cjtpphmkg7bu3qvs84tz1v2pad\",\n  \"id\" : \"h0mw\",\n  \"internationalPhoneNumberVerified\" : \"gu3z7b0s78kcwhki1ej5phjs5m2w2miuwlfoes73xshralnsry1upa5f94plbk1bpbbt1t2kgq6nbu2lny4cdl6kx7mx8i35yebi6veg5\",\n  \"phoneCountryCodeAlt\" : 298813486\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc5e6c30-e4b3-491f-b855-f81d6048a37b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.526795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "0d823e37-2ee7-49d6-8940-969f370cc409",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0d823e37-2ee7-49d6-8940-969f370cc409",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.526308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "d9006abf-1875-43fb-9e40-462a94edd6d1",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d9006abf-1875-43fb-9e40-462a94edd6d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.526291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "280c67fe-373e-468a-ac32-47dfb62ce4d3",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "280c67fe-373e-468a-ac32-47dfb62ce4d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.526275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "c5278c2c-fb56-4a82-b5c2-b24adb810781",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Champlin\",\n    \"originCountryIso2Alt\" : \"mtl4bq9evpq4vcimhx0exzh85h8pu962btkph2boahys7bja9bv8foc6um8fn3sw2fth8fo0ekgrtnvc6nizcjvduoucncswksigvieqnqt29i21e60f72pettbmfd\",\n    \"phoneCountryIso2Verified\" : \"eqayfiifo1m6nkz9u1xc5s62vqb2yp47aitxc4pgsy3bihd81497i54gnllh9vjtd13snk055zdr695fqcm53ds1qqmao5crx8o66umvrdmxw3tclqcvdm6s0hen25g\",\n    \"verified\" : false,\n    \"script\" : \"52zy2dwcvlhvy2sa44yejq2er01g81s4\",\n    \"firstName\" : \"WWWWm\",\n    \"score\" : 23.866125035739927,\n    \"phoneNumber\" : \"1-640-453-0625 x7677\",\n    \"phoneCountryCode\" : 1560557476,\n    \"originCountryIso2\" : \"fg9wp65yeesgetzj1gktxftd7zx9588bls25c8aipcb37hu2q8x6z6ml6ganpss0npcwm5o6uhiw2iunuvmf8ic6edspszrwa8l8k5umlo4cgc0bx2kgt8yh5javgce3afbiw2y26d0mziudnfh4hspmg0ymtxcxuos5le0awo\",\n    \"phoneCountryIso2\" : \"jgrtjxr34k9eyasc2tll9moux4zmd2sktj4aujjn0rfwzq0t1e\",\n    \"phoneCountryIso2Alt\" : \"27dsvlri6p8xukqgksl31dzuetykkgsmiqaeml7w43hoixymd3s2d9nuwhtbdnx1hapkcpxwg7r0qvcnipjjyqrr83kddx2dh34dcloj4as4qvyjfnx6z6ngpof5x6ovoqxqrhhz37z5xny2wky2kjaq6u7skq7lc787sh4q4rojjv1590n8qaav\",\n    \"countryIso2\" : \"0i00hy48apfo00yz7iovbo8pic83jspembjj4ogvrmcmscglmi92r9x6heamf8fedh75v2vryuky56jcri7u599dlz13ytox2bugyl8f8fg6omoxd8k465r3h8azsd\",\n    \"id\" : \"j74v\",\n    \"internationalPhoneNumberVerified\" : \"sfy5502qvmr9wp37xt44m1q9c6s7vx9sf87bzf0klpr2hvyklwibqc8hltgpdfv0o0rk1lucylnp4d7ktp8yw04mndho97ol0uk2o\",\n    \"phoneCountryCodeAlt\" : 1607748825\n  }, {\n    \"lastName\" : \"MacGyver\",\n    \"originCountryIso2Alt\" : \"4xsb6eue4ft4ch62lp20pxwlxi5b4nc3tfid0ljpghvmmjngv9g\",\n    \"phoneCountryIso2Verified\" : \"hu119gzqw649zs8vzr0alsx9y7eamfnlqq66kulkeeiu6gnvwxvywg3v4fysebmgny4m78bn9zyb45ce0lci2hv0qi1snx6zubhlpt2bfiez493uz3koci6okewqc9dqm0cu4kykfnkfnqsh84peppkjbcilyv0p7lui8fjygsfvxe3x1f1cu0wthejew674tz\",\n    \"verified\" : false,\n    \"script\" : \"wdq2da7zf3e4is753mdlwbw939j7fwohybuvx7e6q033gxwkqn7axerlokjwe2msr4498l7c11kctggwd\",\n    \"firstName\" : \"Lavera\",\n    \"score\" : 8.051377762891065,\n    \"phoneNumber\" : \"706.880.0353 x7533\",\n    \"phoneCountryCode\" : 618612323,\n    \"originCountryIso2\" : \"55i6cx36j01x2xkuu3muhv2482pfs5ku2fgkhut1yhtyfasd6n9xwjt\",\n    \"phoneCountryIso2\" : \"p1objzejbrls46qaoq7oeno2rwqu89h7c2a6z5avn0rkefx918fm82o6fjh256vrsmaazx04wno64xq7kcltuj0qf6a79zcson535df46q9y25xwij7bxz7r\",\n    \"phoneCountryIso2Alt\" : \"ixjyn8qioj2ukentxa5d1gy39trx0vc8twr2nxofz6015tmhoc7tuter717wvgdqs137v2wgyo37b56aw5rtxru64lazk1\",\n    \"countryIso2\" : \"pttxn65gjq6jxod40sxpn756xoys4susyuhm3xq40rcvwdnyodmf9wi2qww3e9y4jor9lga5un4meyt4s1mz7mxon08rkc3qa38dcz0tqdcfp0nga9jb0yks450vqht0pk\",\n    \"id\" : \"upwe\",\n    \"internationalPhoneNumberVerified\" : \"pxeyemu797ag7lb\",\n    \"phoneCountryCodeAlt\" : 1665658456\n  }, {\n    \"lastName\" : \"Trantow\",\n    \"originCountryIso2Alt\" : \"h64xuczr877jld6ter6ddekj75fy9zc8z06cucjzwourey5q9fbreg1koi2pkg8ccsznaxne7od1ck0zpc4wh9s2f2x\",\n    \"phoneCountryIso2Verified\" : \"cyhcougl1jqfo3jp50nucf8f932bbxdnj8324h5ahdb67mv9awtzryuiaapvhmfk9obnr11o8mgsirbmddtgmclcry9g90zc4azikpc0h6pygm0qdu6uxoe91rsjmlez5bxjb2b89xi79quflsrwpz4xkucr1pzbgm734cyxgcznq0\",\n    \"verified\" : false,\n    \"script\" : \"y6h71co0ln112l9umlckum20ah02paiwa0t7gym41t3uuba732sxfj3j57lkqs1pg1susz4zpr\",\n    \"firstName\" : \"Jamison\",\n    \"score\" : 88.18343881477655,\n    \"phoneNumber\" : \"405.515.5437 x69073\",\n    \"phoneCountryCode\" : 2035214231,\n    \"originCountryIso2\" : \"va8dd0gnpp2uiyvdegq2qvadil98kg6gvfwm5w4v7q02xq7g5ili\",\n    \"phoneCountryIso2\" : \"vou52oo28qfnxzdx0xu5r492hqmrjxdg6zodyfnaj312otcq8cqkuf6xu9ep3qj34qg5mowezp5ycnm3qs5askk6yg31tptkipoyyl68c8342820az0v7xozt1kq729i1\",\n    \"phoneCountryIso2Alt\" : \"95xnp95pantusdcd06dg2van60lgwp0przkvc32zyyxwsndcvh5wb0xr93q7po65dlqj2kf7pydq34e2qi2i25p54h6amkn\",\n    \"countryIso2\" : \"sswzjdp26y83devso0fnz4li6252brvls4bz8fg6up19ff63q7yu17iqi8doz8ingu0egcomb3uvvz6mxyqh0myn5vb45b45ca3kzydp18eu4m0ezciij5kerrea5r3sc4ct7gewcw9wjkj726ig29pi4raidlcysf0xafs7omvy6mt0jsijyx\",\n    \"id\" : \"596u\",\n    \"internationalPhoneNumberVerified\" : \"yt0t908dqyqooppi5e9h1o64vni8bu530zzp7wbvojw8y3yj3xm2p6al8zse86dc30zcth5o09z9ouf0zl2g2tbvk855vdc7eho66d3pyopld602e3p3c7qiw0bv9j9diheuvljw9bg80fe087bqcnyrwblmocthr5pauic7iudkmxcf88g6o5nhvs7jqcfn\",\n    \"phoneCountryCodeAlt\" : 617429427\n  }, {\n    \"lastName\" : \"Beer\",\n    \"originCountryIso2Alt\" : \"yo4hnjp4029hwh5jhua6huqig0r8sk291rcsg8j7uf7ymicwb85ytcru7ighil4hw1mjfogsr8gfzbj4pw7gcamymnbo8n9vlbq1kp18iqt2nfi4yxno0c972zf72mjqb\",\n    \"phoneCountryIso2Verified\" : \"fiwilaw3\",\n    \"verified\" : false,\n    \"script\" : \"4skqu00oxg0rxwizixacdzmoxa2a1k9d2rqn8lp3du2tv1157rdh89npha6efysjrxft87rpq8lpit5827umlg5zcgcjwx1oozgmcv754vk0ukh8jkr713d0il19xcd96tcf49407zcpx5elejmnfyjfbgs\",\n    \"firstName\" : \"Stanley\",\n    \"score\" : 19.71320466138944,\n    \"phoneNumber\" : \"1-725-412-0992 x077\",\n    \"phoneCountryCode\" : 403686423,\n    \"originCountryIso2\" : \"lu1d0hrc8s803ggjvb011hmybgkp04od6trg5wr4vp5dkqpeg1u4brahq14n1p7w9z7prr07iimuak1qybks13hddcir553cq3h9ttm9znmapuid3rvxt1jeqk90h8zfhf9ng785s\",\n    \"phoneCountryIso2\" : \"ddflnt6dfn4y\",\n    \"phoneCountryIso2Alt\" : \"3osxk3ysmtog38fgu9mfhutwyd5lbsvgvk71z4zrxj058y15atjwn699vbuk2dw3r978gvci97g25smnjokxl1477icom7poncax0l65i\",\n    \"countryIso2\" : \"egxi1pwmhp1w2seux1jb5wqz2vjnt8v1ii7zht9wbnipcl3j64t2w2xe\",\n    \"id\" : \"sd3u\",\n    \"internationalPhoneNumberVerified\" : \"surlfof3pyhsz5opnia57ee8xpg9e9la8g54y5\",\n    \"phoneCountryCodeAlt\" : 370468876\n  }, {\n    \"lastName\" : \"Bogisich\",\n    \"originCountryIso2Alt\" : \"gq5dmuwjitx8ycdy99ygl0g6ytv7zjca5un9qu7go5ynhnb7fqq2g0rf4544y2pky4i1dbwmgu8b\",\n    \"phoneCountryIso2Verified\" : \"f9b9px8b48j2ihgvhi9g3bxdudrieg5x7rlm9d9dbmjnbv09rrhhtj\",\n    \"verified\" : false,\n    \"script\" : \"1axkfywhopey8efwqr3wpb66chr0fi8xchdl0jjt9xzt57nm1d9jswkhyn0ydfyazxdc65scxnafpew4lgx7e5joqhyd7l7a9y7dp569mqjwjka6hndy3pks8ngxanvex42o2avtm8yg7\",\n    \"firstName\" : \"Hortencia\",\n    \"score\" : 9.887379573160048,\n    \"phoneNumber\" : \"583-760-5890 x508\",\n    \"phoneCountryCode\" : 1743932803,\n    \"originCountryIso2\" : \"v88azhtq1myluyazsue7uyxq9g9u4lsskop6mqhunojkzw0c9nfdig1btmcb8kk9qa7zt9iduohhcaijdn4r1yb8tm\",\n    \"phoneCountryIso2\" : \"qsap9afdtsxnkkwfjomwdmqonats2bq00pnsqua88aeizuu5v24t4rombtkib0ggjq\",\n    \"phoneCountryIso2Alt\" : \"1g9azhom9wjua0vye9uz163q5h55gvv75tyuc0qjpond5a6erbvzq9uy0srngq4sq1223ybu8syp7imh86qwrj2ic6y7xxo6oh8iziksttiyfqubc7c3ka8z77mauedqbgg2hcfscn48e49xs2jtwgibjyo44kwfswz2t0df\",\n    \"countryIso2\" : \"3ukvfcmc9fw\",\n    \"id\" : \"wcyn\",\n    \"internationalPhoneNumberVerified\" : \"3u5zjtj7uwryev5apdshrl2kt1jinkhw5jvlg7i8dt5irmdiaa9jgx9yb5qdyflbxxkhkl6bjpod4fux2rfainpu276tij0i6i8v9oou0h33o1ji643h1ojl6toij1x5qlvsxo62\",\n    \"phoneCountryCodeAlt\" : 168660710\n  }, {\n    \"lastName\" : \"Denesik\",\n    \"originCountryIso2Alt\" : \"5sq0pwac4wdrw72ax5198h9sr0ld0drdy6yyrnu581cungviqnil7vj8gzlll3jncvc9k08fb6dgi4wvkuicm0u06th6fvt0ylsqzv99ax5tlxzpqizw3q1uylms80sx6u2iax7g08k9sk\",\n    \"phoneCountryIso2Verified\" : \"nju1gsny2tt7gd3fhpn2u1v5fy1khijjc78iyakyg938nne97nxy2xtzd4a117hzkf5uh1ge2q97\",\n    \"verified\" : false,\n    \"script\" : \"dqemzf\",\n    \"firstName\" : \"Ollie\",\n    \"score\" : 1.256968714212714,\n    \"phoneNumber\" : \"868.627.2197\",\n    \"phoneCountryCode\" : 2116439804,\n    \"originCountryIso2\" : \"paybdauumrcy32u2yf12nb0cquach84drwjvjrmplslz4cuic9fliw59r8shyflnyvtmtmzomaxx6kzneiae0oxn1gbp29084mlh7x37huw01by1ndl\",\n    \"phoneCountryIso2\" : \"hbygmyjpj4syo5ebd8pm0fvtlacq77djjla7721ew7gxgdvebe6znjq5fk7dd4v2f8inznh14duot52ri8ehdsxseuai05t34wgyi7ky35nsom4wkc6mdcrg65t650cdkq70ff7tgrat8k1o6cx45hhoz8xggqkgqy3mbz1y5ojybj93cws71978pfx1kn\",\n    \"phoneCountryIso2Alt\" : \"rzpszlqvqd6nzr4x0i1fhstbe5sm9a3bbvij9xfwjmsqkqxqmq6j9453vrxi0vir3xjspkywoezk9xiepj0uq\",\n    \"countryIso2\" : \"br12dss1ri2fthf71o4xvhsyq7lksq3glm5xh8li4y9q0ylzalqsufajhrmbk98g8fr904o43i5lzgllnf\",\n    \"id\" : \"rup5\",\n    \"internationalPhoneNumberVerified\" : \"n1exu1h1yzcwaguf26o2ya6dmgfu7ohycql\",\n    \"phoneCountryCodeAlt\" : 1329693829\n  }, {\n    \"lastName\" : \"Konopelski\",\n    \"originCountryIso2Alt\" : \"9yaq1dr5co1hf1rjc5ee415p28ivdzcjcumsq3vkpioi4c3eo12nfezzcrn2zzjomanhrwywhwbzluafgbeom3btvmwmk8f2qqmf2fi9830sujgi1a9p3x2h\",\n    \"phoneCountryIso2Verified\" : \"5zti0udhzkaezsewisv0dn0xx61wxeow4je0jld6b81cwael54jpf9hqyt7onmac41\",\n    \"verified\" : false,\n    \"script\" : \"g9dfhtqmegu1q85w2m1qm79vbifdwdagunizjhnslits4a8zqejjg9ypvy5yt9335axz5m12vyzj4twkxdweg2itji4xkugmye6bjsvtznggsz9e46endmkfptvjeiz40exelnq3e2k9ijs5f6ryl94v244cw7y6oey1wjhu0uii89t6qoh7vfb1lnpoxnh3yb\",\n    \"firstName\" : \"Irish\",\n    \"score\" : 48.78608767736996,\n    \"phoneNumber\" : \"1-482-716-3531\",\n    \"phoneCountryCode\" : 1567417024,\n    \"originCountryIso2\" : \"bggfa2rq1iizpc3ecnqug3xl606axdqixhfzf18alzdb8rejy056nas3zc5d9a4wwcn9rddqszueyz85jz3l9dy6x2o4yjqjcrs3hz1yer9\",\n    \"phoneCountryIso2\" : \"gzcqnubzyjfzuvt9tiqvsom9sywycumoukliqfm75kktc5xcttoqz4i0erqf66jslihhrmvemhk94716c27y2nunze1mhvjudzfw6b8nlnvhyspcz0up23\",\n    \"phoneCountryIso2Alt\" : \"b633how3wvqibh99x9teepe8o9pd529fl9qoo3fghqbheyf7n13ynhjpvk5la6wr2g5z8o6m6ycj62dawnrh7815g6n5z\",\n    \"countryIso2\" : \"f6rl3hwq448kih6e6ddzf1pvt6pz9kukue7g64m56d3ep55cnrh6mg42xg11kyf9y04hqtqh9e99tqshvedbznu5o59xbokn6t4meapb6vpnfq1dtuckvk933jqzmrfdqs8pbx9mg7413oeu8n73axsc5nrmkpef\",\n    \"id\" : \"7xur\",\n    \"internationalPhoneNumberVerified\" : \"yzvsbpccuygx676ti63fsw85wz4cvpsl9ue0rk9bf63w9yyk682pkh0naxzss1zm7ceidd0arudygc6kz81kqucg954tiroivzx6\",\n    \"phoneCountryCodeAlt\" : 518643227\n  }, {\n    \"lastName\" : \"Lowe\",\n    \"originCountryIso2Alt\" : \"ecyb2xa51flptwpg8s6bidmwa\",\n    \"phoneCountryIso2Verified\" : \"uwfygte0nl5pmddmmvc7nihw9wdx9oe42k0bz2iqjfqq4th44tt561mmeoldpvg20dz0enz45yux3wezehziv28yn3izgfpznughe2g7y3gwy8c7kwhgu3hgpz4dyuyngcbuumel1mm4r3885paoojc8rhm97tmnn2cm2bw5kinhy46n2ln97y\",\n    \"verified\" : false,\n    \"script\" : \"13dz4l3xpsbp68jufddhidkusudlgbtz5c1kf2\",\n    \"firstName\" : \"Leif\",\n    \"score\" : 1.5400177824247518,\n    \"phoneNumber\" : \"334-210-5899 x9119\",\n    \"phoneCountryCode\" : 1084078798,\n    \"originCountryIso2\" : \"5zmm7zecega2y4vydamx8x520fz79kukts9ek4kyomf3l3tinopmjtuxhw8rvxap7y5xqk3wlva8zzbd9r6sqy8sq1gt10lm61duyvb80gt9ej8mxlmq8jayzoopj6ko5g1nspr4032sdr\",\n    \"phoneCountryIso2\" : \"hfos6x9wuht35o9qc4b52lku5j06tft3k0lqybioov7v\",\n    \"phoneCountryIso2Alt\" : \"0rv1kb418istog\",\n    \"countryIso2\" : \"v3ksodsetm2bukn\",\n    \"id\" : \"1989\",\n    \"internationalPhoneNumberVerified\" : \"cqlpr3jagwpc02qox20304civx8lrz7j2xajeeb2ujyl62rgz\",\n    \"phoneCountryCodeAlt\" : 1542288595\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5278c2c-fb56-4a82-b5c2-b24adb810781",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.526247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "db007798-b9af-4e87-a7c6-b580c9ab0314",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Paris/Rempel/225.344.7469/xi5ppqh0gnf0cgmdw3m0rc5bxmcm4rt97j58v87uvkzbbgehzm3qhjnx0g2mgum03c5a2hylpf1qxccr8jz1n3w2s8kwo3ujbmiyv4u",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "db007798-b9af-4e87-a7c6-b580c9ab0314",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.523958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "532abbfe-3bed-4a9b-8e15-5b07680da881",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Matilda/Baumbach/688-699-4278+x8440/urz2pvmnxwqs0o3yj3p2gczddjfr4rnii73mnwyvvxsnb8hr4l2s51xns9z3a5fb0kvcnqz0k6q9hljlkztrtpk4od40dnu0k81xl1augtwazo294x17ek10x983msi0ym702c9tbsqb8d2kcshvct3nfj2rgtmx9y4qhgc945gwovaw4bjnx9b5huxofq",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "532abbfe-3bed-4a9b-8e15-5b07680da881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.523862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "60c250d1-a8c0-48ad-bb26-794783ff7741",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Danilo/Carroll/293-044-3837+x8467/kc9ydbzls2lln76r8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Rice\",\n  \"originCountryIso2Alt\" : \"5p3md122ixl4wudki9z0041dmw65xttew1uhtr9o388\",\n  \"phoneCountryIso2Verified\" : \"1j6emf73kh4gqg3b\",\n  \"verified\" : false,\n  \"script\" : \"icucl51o8h26cxsjl36jca1ksw\",\n  \"firstName\" : \"Herma\",\n  \"score\" : 51.20193758413835,\n  \"phoneNumber\" : \"878.569.5857 x404\",\n  \"phoneCountryCode\" : 2058983661,\n  \"originCountryIso2\" : \"g3umivg1xcyd45p01psfl026y8zbimz4pccjvs3x1bky9v4916wg45y75u8nbvbtec3p23sh06i629isai89trd02ruktqwq0\",\n  \"phoneCountryIso2\" : \"lj6t6cyputp929oety0kkxe\",\n  \"phoneCountryIso2Alt\" : \"g0f3079v56y8faw7zumpkchiwl15\",\n  \"countryIso2\" : \"70qrg4epgsq8485mpoummki4fsk6sz4j8lq8shushg42lwtekhxxrdcqm195snxjcjl5zvfm16o09qc3d49931p62cgzxrbynxkxztig6s464hl50azqs73zlfdjfuqwl7i01sbun04p11y8zxr8o\",\n  \"id\" : \"85lu\",\n  \"internationalPhoneNumberVerified\" : \"mi41lvu94hmhto78iw7t3gqlibpoxue\",\n  \"phoneCountryCodeAlt\" : 607676921\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60c250d1-a8c0-48ad-bb26-794783ff7741",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.523739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "f715d5ca-6539-4b15-b38f-d701fa3664ba",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f715d5ca-6539-4b15-b38f-d701fa3664ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.523255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "501e2e73-8dd4-49e5-a172-fedd558bcdd4",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "501e2e73-8dd4-49e5-a172-fedd558bcdd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.523239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "80568446-25ed-43dc-a27d-a8767fab3d6c",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "80568446-25ed-43dc-a27d-a8767fab3d6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.523223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "8ae59769-ccac-4c1d-a8d9-68e1387a995d",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Nikolaus\",\n    \"originCountryIso2Alt\" : \"t78rxh3nmxrxenms2eiq9syy9gdhbf39rfnpxnvqj1m0rtcyrarfcjg0103maw5i97qm8\",\n    \"phoneCountryIso2Verified\" : \"51pe05acyvsfnzsdq6luagbmrphgsmuqrlwwysqwlod4tbe4souz2jndc0b47iyfdd9x11225egwxtt52pjdly40bro5a3x6ifbfpz2n5jp7kh9iigbuktrkk\",\n    \"verified\" : true,\n    \"script\" : \"91nysonaoxc7x2g0ghkqzk7l1bignesg7lhivefy29cz003vfe55nv8jqhgbggyubprb31hbvahhs7tt2lwa8b9ssid2lamp5g4y8wu5rcrdto3udyqjsiv5m61h8b3kyjypogedl\",\n    \"firstName\" : \"Micha\",\n    \"score\" : 30.921795134897177,\n    \"phoneNumber\" : \"1-151-301-4312 x5566\",\n    \"phoneCountryCode\" : 2119387473,\n    \"originCountryIso2\" : \"u9xr4q0ogv1sxp706tmwrb8cc661o0c2\",\n    \"phoneCountryIso2\" : \"9g0m9xqpek4gvbkpi560wahdwyjywz619gmfp65ssb3voicnbek4cr2npeowv226n35ei4oy0qv9375r7lgn26zdqmseitjnrzsyvil9seotn1pyka70r8pydj3xlbb9oin70kd1abz2x00swkohassjg8ar3wg7sdbtm777k8eyc8co8delfmn70z3tssaqqsmvkipb\",\n    \"phoneCountryIso2Alt\" : \"g7ws1eqhpvts5vl4qbmvh2zt1h50mfc1kjp1lafloac074nmk3060e7mkkz7q88tcf44kafgltpvt651wkdncopgol5g40q3ebgavnvivtof350bjrkg2s0r6lmjbf\",\n    \"countryIso2\" : \"1hv43oipghodo5zubre70eo0pi3hw2r5p9wz5kqkzr1kl7q0y7u131lalg5k6gparu9lylh28r2cwppecbns47i6lzv13ngi7tpywpu4w9w7kqafy1z774v6tm7nialnkdktxmwcbijpo1edj78jciwza1helieaiekn7hpgnd3\",\n    \"id\" : \"46k9\",\n    \"internationalPhoneNumberVerified\" : \"5donaw\",\n    \"phoneCountryCodeAlt\" : 601205654\n  }, {\n    \"lastName\" : \"Dickens\",\n    \"originCountryIso2Alt\" : \"m86mtxv28obj8z4d57wd1s89ffqhbq0f4m\",\n    \"phoneCountryIso2Verified\" : \"sdk08qgoye6ig6210drumd5lvqc2qmehdw5o4yt2hx05vyt00\",\n    \"verified\" : false,\n    \"script\" : \"yxzqrjetizzbk5koptxltx20o5sluvta09hpewkuaseglg9xy9yhtuj1iitwudirhiyvv6xb6bly2vsmg4kn0dr31rkibb5f9frl5cm4aqgs9on5wo89yzo3ra9l1w9px8rixnu17j8mibgs8mdlhoo5rxdbn51acdua\",\n    \"firstName\" : \"Kazuko\",\n    \"score\" : 47.289038549550625,\n    \"phoneNumber\" : \"526-541-4703 x138\",\n    \"phoneCountryCode\" : 1530741879,\n    \"originCountryIso2\" : \"wts4o2bya5ol19gabm2ice2w88cqwcj6bdogzbzdge80cgbbyzuqgfkrfazpg36ai11pb53eavv56onpt29lty7ia7bcoxk3fksulqjrpc9ny5chqmt2eqt7e2fm2mhkcilk1bbe4a1umfy7xksaax\",\n    \"phoneCountryIso2\" : \"gwlr56y80o4c9j7x84ducqeg0am2lzsc1pqsc0cg2xd4pwdlkyosln49chswunxx\",\n    \"phoneCountryIso2Alt\" : \"kutfua778k05uhvuburdnnozmnxe3hpz6ser0i3n1f24ly3i0y8mrm7r1zdx2mpwgyhsb5p7fnux6ll9vfp0znzxamagm6k1x8hy9hqdp3doqgnxv1iqv2m3q40vzprm9078w07g3vebdb70x1e6a\",\n    \"countryIso2\" : \"jkohbsfukydsgjl8585o3mfhtosj16equ67xahmyeslihp9n2d5cuowotw7r6vua1cqaq12kwv41zjo5ptxqbbsfwnpu6m\",\n    \"id\" : \"w3fd\",\n    \"internationalPhoneNumberVerified\" : \"wyyc1s5tpkw4todedbtp5v9wyie0pgkjt28pd19fr09sww5alsi9nq8tpqh5a8vlugkk9mjf707jwuoywpmhzwahn3swil77wp132hzkpcty6vun5rqvrx9s4et1764p2\",\n    \"phoneCountryCodeAlt\" : 1039814144\n  }, {\n    \"lastName\" : \"Murphy\",\n    \"originCountryIso2Alt\" : \"59whycf4u696nc0y3aj695ljorvaxcwa01shak1gvymmz1tp3r5t54tbkshe74i01ntjc2lcvatyc2qxnv65sn79p3uctmva54eaug9puc23crgm3gh2fwl54arc3j6vb\",\n    \"phoneCountryIso2Verified\" : \"fwj916cye48bw2a057p344jlj35ge0enyniuviskof7rkhybicnrqbxdj2bxmlhy54rhuhh7rg95med6ldcebj4rnqim315vae2d6gqdsfm9ey7rftuwsdrvb\",\n    \"verified\" : true,\n    \"script\" : \"g3cy0ptbnsn4lrl1u3f67liww40ckhay7x46xq0iyqbzq5evg6ks8el04q\",\n    \"firstName\" : \"Shaneka\",\n    \"score\" : 37.788876194683304,\n    \"phoneNumber\" : \"1-393-702-6479\",\n    \"phoneCountryCode\" : 1649509015,\n    \"originCountryIso2\" : \"yd3e41uylejmwzewuwmik1g94exhapmbecbqdm5v29ll8in8eozyys4mzz3m9ynv7qncdw738w9pom49pe0jtdhnhahhzfyudpkh85tz8s6ggoy2mun19xsebv7yia36faa1jbip1oefges763lk72didbld\",\n    \"phoneCountryIso2\" : \"69u8f3fizjyjnvg9gfsse0icn5werevfnni8ftinpsnbup6osxc6xryvqubc6thoj0vdtihsj1hoqzs3war962c87cip53cfpjh43lmy8qp1l5fc9oseuzmrdr44se\",\n    \"phoneCountryIso2Alt\" : \"jov7nfgnqfbfpkhf6zlm9ysmpw9ckvdctj7untlln5zp7l24l8uxvy93cqmps3yfuf28gjal507jeqkta88iqc3regiw7mty780hgp7z35bl68pg4nasoanjiicy57qacmcxwurealj7f68q4\",\n    \"countryIso2\" : \"3u875px6kbtvdxghrj34cz821do65fpviddd8uwjczal5oskqol0qozry1gp99ec6p1lgd04as1u7qvdj8mihbo2ux2mqxfljx2853svqmcvrkzgglow6mk1qnk0r2brtmgq4ch7vm5n6qlps6xa8yvjq51clmzdwvhjpsj\",\n    \"id\" : \"h6h9\",\n    \"internationalPhoneNumberVerified\" : \"vwlx7jmezglkntbm8dzrwrw30d9t4yoc7\",\n    \"phoneCountryCodeAlt\" : 359324998\n  }, {\n    \"lastName\" : \"Orn\",\n    \"originCountryIso2Alt\" : \"9imx30f3toghjube7o1a0zh78wzn9c5ccb9vmwsr4r32z3xzmy1m0oi82w9ntz6i82uv9nt2qsd6gg16g446u6htb4b3zbtglcd0b0aatl5slhd0pin1601u96ho4drb7vxe\",\n    \"phoneCountryIso2Verified\" : \"9xlia4g4q0ewgyttzkkh86md6s17spmwuhpa843pl6o7r7ry1o0dygub8qmruso\",\n    \"verified\" : false,\n    \"script\" : \"6las44hj76iq5el9ugret2zgjnx65m6ood3q657oke0mr8aqthzjokzwzy7alg1bxkz2sxt5r1u12icgqbsj2m4jh3zckmjmzeq0juniapxavn7f5m6rzv8\",\n    \"firstName\" : \"Jacqualine\",\n    \"score\" : 40.50047343378004,\n    \"phoneNumber\" : \"183.188.5832\",\n    \"phoneCountryCode\" : 962537775,\n    \"originCountryIso2\" : \"w7g12yx2tc06qyneyyhy3so9wyzmcpkhlvmmlj9eel7p2j3dehl147o1804mzf5pseip1dmy\",\n    \"phoneCountryIso2\" : \"jybwr3qyhb90q014l36mwlqolhm4m0g2aapdbpjthwiy925wvp23iimvxbe9zhugh3gv8nmke4ebpiu5ze0g6ykznme\",\n    \"phoneCountryIso2Alt\" : \"sp0lkotopqte3zckx8bxt8kt8g00ecnhlwcdac35hxmtvyofn6b8dnum5kms7w2ipgl8gfozl4qrnlz8h7mchvztkgtwam23fz7i4w7dch97766ywydsvuljdmh6wxv446sp0s5fjeezv07mjuwcxbjg7jqdzp64j1\",\n    \"countryIso2\" : \"jav2q2sdlpx9dkjo51\",\n    \"id\" : \"2x84\",\n    \"internationalPhoneNumberVerified\" : \"l6zd84i4wd90ez17328job9sd9f90oa3gdqx90wofmv3oh8by6702k7cmice6f3g0feuhz6egy7n2j8asu1t6yixoxdo3wjapbrg61w2oxqn68pkhnum3sotixe92eqhb9qfq5e3tvfsi0vt5bn9njr9gykj3as42tm8t4smlgbwyk20wfkg3jgcm4m6knhgez\",\n    \"phoneCountryCodeAlt\" : 667470619\n  }, {\n    \"lastName\" : \"Bahringer\",\n    \"originCountryIso2Alt\" : \"jo2886fsdy08mx33q9xgv51zicfrpozt13f6f0vw2oz8b9hfdlpi90zknztwbxmhu47l8hh57yoj74ynq5bkikirecmmusjazcsf31px1jt4qkze5dr2wtttsa9oeddg4e8iotfzozzxcksl5f93ekcspejz7wx0pbcb\",\n    \"phoneCountryIso2Verified\" : \"qihygutiblnha0eqnxoeqbbjda2rct1h4csy9hxd6r4qa51xx5sf84cymy79osfonindlooceibiee3k2yclvizeyl4hh5rlvgsrxbb38x7e75egx1mnw73z3q6yhqu4jahrb7qc0\",\n    \"verified\" : true,\n    \"script\" : \"bw4tczwpics0ep32a4i7hh2bpkoehvfmpzgna81v3z0np2jqoki9zqtjrm88tq12l9o7i3jye2540uqbitsze3rppyceuugsi654ori885w3dbq4v7xklwhhowjrxbft4q7iw4na9s9p67lqkhho\",\n    \"firstName\" : \"Rocco\",\n    \"score\" : 86.82884008462011,\n    \"phoneNumber\" : \"879.703.8054\",\n    \"phoneCountryCode\" : 1415234347,\n    \"originCountryIso2\" : \"9c6e7xn6q3y8csll022jkyogodc0kpmkmnow2o2ij5o53c4inckiddwnbxn8t\",\n    \"phoneCountryIso2\" : \"e56efalk9nallfzd8cy8wlcmihis61grajufs3k9c6uev31omqesed8q5x48nxii0tmv5iaxts7n1uns83n07gpfdxx\",\n    \"phoneCountryIso2Alt\" : \"okm9hbk5ar85rtj76i2vdx7fzcdscwxp8arfmed42s7q8yv1rxz17wy1zvfko2i2zci5uo3rv6xb0vtvbktwlk316vvvuu6enh7uorxxxcncsjhh8zu0c93u8jwfxzy5376119garpk1v\",\n    \"countryIso2\" : \"2bl0l6nd0vgc9acctx5jkn9d2mid6hpi8usrthm3o9hpijcvzu7qnqnuzlv05cgu0eqnh0ctv9nb1hgzexu0wqfpdgu7nx7yubw832vue3lfdm13x8jphylt92ouqg83\",\n    \"id\" : \"79n2\",\n    \"internationalPhoneNumberVerified\" : \"okoyupdyrmd9ug\",\n    \"phoneCountryCodeAlt\" : 1670434525\n  }, {\n    \"lastName\" : \"Wolff\",\n    \"originCountryIso2Alt\" : \"y4mwzl2ycgy9rbwepv6hjrhyy4go0ec2j584p7g02x2xu9pt7at9fwvz68bpsow5q4la0cvsq62css4z4jo62zc8orwro1k5kfoyw9qzqr87fglqqxje4kk6jgef79nv3ptgsqbxx8y8b80scs344qetzytguzuvxu1tlmwikmg5e9pzio81bxr5pv6\",\n    \"phoneCountryIso2Verified\" : \"gw49myhzoaey7txjbrn7mje4e3ngqopqtbozna8ww6umfhxf4lhguru9lvcor9wyr9q8no9ay7xbbhw8b01jr5x8r1jf75g1hm4a6uskqm9l7hdf6828mo0e2otxxuk0dthntnhr4udg4t6fn0g3\",\n    \"verified\" : true,\n    \"script\" : \"dw54a9w0vt09xkhenuuc0ujkqwyvgnl9cb0gfkyqmcrisaceeqb3vz1ng991b1rrpajn9ktve3fs4banftdslqanlcvgbdiotta6h8a45scigkb1gex2kgc2o73yfhus90g8z061dm4864q\",\n    \"firstName\" : \"Orval\",\n    \"score\" : 54.52819048415372,\n    \"phoneNumber\" : \"878-468-3722 x287\",\n    \"phoneCountryCode\" : 618531562,\n    \"originCountryIso2\" : \"0dr24o7u3difz9jwj8lrhhsfhxamx1w4bn4t1x59sixzt7uf9arofh7v8xi1u7ftmhd9\",\n    \"phoneCountryIso2\" : \"f15a\",\n    \"phoneCountryIso2Alt\" : \"kxatcblrkep0ur\",\n    \"countryIso2\" : \"t8qjn6woa6b5jeyk3hp4y4u454sfnfksq8nqw0cmtic6ofkaac6qbapick77pg0z975ko7nu6az6t1j0x9ylcicevimkq0ipom0p4ehywzv6b5iuuu1pepirqvl0pvn54wg9m0yd4xh2o1\",\n    \"id\" : \"o78i\",\n    \"internationalPhoneNumberVerified\" : \"tfk2jnj7tstxgwgtbm6r04igt9shpxr7ayn9esalqmk83gaflx3yvmfx4w5as4kriivxaddegcl8j4rahmzswprv6jfyexydqtktujrpzg\",\n    \"phoneCountryCodeAlt\" : 722696802\n  }, {\n    \"lastName\" : \"Howell\",\n    \"originCountryIso2Alt\" : \"4j3nxqpsjnzteobhargekr1d17ny4fp1f5fx6p37kypb67d6eqff5s2fyj2orag3tloa8ukdg3si9bqs\",\n    \"phoneCountryIso2Verified\" : \"kd9hu9m19m86j4qyi4cfm1khj3przmv68x9ln5n8l91g8bwhqeukroit1ysobazf64s00np1l0ffd1oj7oxjwprgwav9yvka77\",\n    \"verified\" : false,\n    \"script\" : \"fxs9wd22a7z07343gbxeqmw74iyuyapw8sff4wvqd4e5lslvsvaul9lu4xezdj0fvms6qk8gcajurjjv4enqfkbdnoak9xaw9m2zlpdovrnye1eu97vic\",\n    \"firstName\" : \"MMMMa\",\n    \"score\" : 69.74497063780593,\n    \"phoneNumber\" : \"295-860-9074 x837\",\n    \"phoneCountryCode\" : 44771966,\n    \"originCountryIso2\" : \"cwkdekolgcpg5qt7gbp9cmq6shrfzu9pgw2rti3ki5xe6pj5hujsou661zuhb3roz8ms6hyokw8\",\n    \"phoneCountryIso2\" : \"w8fika2wdyzgkbfkbelu17ucpl7aegcqpqy4djvk9mm5dvyw3in696z7n640mhsogmv3s29sfabt1gz1ab4mc1b4tqxr3dn98xtktucrjqhrh92eo5z1kvf31v6p2qfsujb2t31262x8n3\",\n    \"phoneCountryIso2Alt\" : \"1llgiq9uzvy4aqy6juzdws0c9wtnvu27e49s9oayv80vo2erhb881ghp8zfuyk1d6zw75fw67e3z1kipwejg5im1iljvmmmf1r35vitq4h6n8zk0trny5ncmeqmyyv73gix7f68y0ht\",\n    \"countryIso2\" : \"chnw9q5xwtifondwoo0izzlbk15gkfi38pwaxdo1l3f0nzjfw8dfe0458qmubz0qmj5a0kvyglizbs6vi40rb6qu1k0w97qokazwfjg0u4bqwes5xodbujfpqnwf1tcyxnxcmiaepjx7ie84h3xv\",\n    \"id\" : \"st6v\",\n    \"internationalPhoneNumberVerified\" : \"kjv2fvszrh2oaih0pkdgka5zvdzcbg0qtsnrny5f4bbt57bqp5ytvjvzwdqft8nmuyypch1oeb74mgphpi3iglixdldenfl01qmtvgr8agb5iay0rtw6lpw1eypmh9z28y0mzqvpkch5ssr4sgc\",\n    \"phoneCountryCodeAlt\" : 1325222752\n  }, {\n    \"lastName\" : \"Wolff\",\n    \"originCountryIso2Alt\" : \"vubnb6nnulntewdxnzrn5cnspx8viliefuo0r8sxsav6g93om934qkv0pkucw6hf6ct3ljsci0o1iyt83r\",\n    \"phoneCountryIso2Verified\" : \"gsslmj4tdirastgv0q0av7jc4dlhsbx27d4tu27yqgjnzgx9u0hihiwtc8rdd8tnxf0ym5b0y5cfu0sdlvxyku5dujc2koob6z19aw96vcmtv16nht8p154ve3l0v0kvz4f26jrt0emjsflirvdh1ev75w2acqs6zbktq3jw9nkbyruquwtgq18aexal84k460f5\",\n    \"verified\" : false,\n    \"script\" : \"oxzoz73bjazogcrwth1qxh8l1l9y2mwf23g6\",\n    \"firstName\" : \"Lesa\",\n    \"score\" : 94.65636182774661,\n    \"phoneNumber\" : \"(514) 320-0763\",\n    \"phoneCountryCode\" : 102247053,\n    \"originCountryIso2\" : \"elxulsaamo7tx2dwkr\",\n    \"phoneCountryIso2\" : \"7cl6o7nuyj7yxe51xy3rhzpnigi5j8sgpt1xv92k7xfndvmo63hjh2diikkqg0f41uqwh6q1j449s4k52exie6srb3w7qfhubdi42i1678px3535zci4on\",\n    \"phoneCountryIso2Alt\" : \"rpzctfdwf88b9vyjv22rhrh5vuoffm6ebscbnifdjumsuft4zdht1m27iw3z8zy1srk65bjlit6lbu6qaal9mddr5xfywkkbbmhs3haurl27ea4\",\n    \"countryIso2\" : \"95s2x2y85xesl6vgnn6y6jl67lmx6gxnvt9d4dwu4m6p7df82ec2qnrm8egx7jk8knasg8utgc9h78nuqzfgtx5if7zrigqkxpd6zhi2xhpy887eonz3m45xl4knxziixsjmuqqphvgyq0bmkik3h021mtu2flkopcsa6vuybkv3l4k0p0m\",\n    \"id\" : \"l3gr\",\n    \"internationalPhoneNumberVerified\" : \"s6sko0fqnudlj7qlrzgt8eo9wimtsz4qwnmjldfkybfvwnszdeomsgv8stdmj5jdd4hf29t5cc8k2rplbycvfgsvxmyc5iyj1swv31f0q5d0utgbdnphh98kw88cvhpybb08uo6rqfl\",\n    \"phoneCountryCodeAlt\" : 1048535863\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ae59769-ccac-4c1d-a8d9-68e1387a995d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.52318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "b5971cba-54b2-45b8-a779-c7b7df87fa43",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Lavette/Walsh/1-138-365-6006+x364",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b5971cba-54b2-45b8-a779-c7b7df87fa43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.52083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "20e9ee43-51e6-40c9-8b02-2d36d2cb2165",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Iris/Kreiger/770-082-7079+x931",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "20e9ee43-51e6-40c9-8b02-2d36d2cb2165",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.520738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "ead6620d-f4da-473a-b135-d28e464fb29d",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Shelba/Stoltenberg/050-685-1514+x9782",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Padberg\",\n  \"originCountryIso2Alt\" : \"nilmydkfimi60zixeb107eaqnb19kkdnd4jxsxloq0z4u69ltwu2me5sj6jben0d537j5a66exfv6mymr8emztupbt9oczfame16u84bget\",\n  \"phoneCountryIso2Verified\" : \"3q68mvp8pvuy1n65ju8t3rb3z2b48wjgh680kwqwv6a60guwyowxclmrwsje12tp9kvp2ihajwqjssqzwuq6sqlhoe59004gaf5uorm4u8ruxn52xjdbd6x8mlyqf4fwoj61t1xhzapxy0nxise007dk78dkhgovktgy75rp2abkx40xynp71r1wdzkgl9fjh0w\",\n  \"verified\" : false,\n  \"script\" : \"hq4srg669r3rb7o250r6l3dqma1oqrngqn5d92xo0ngk2lnzpa1zrp5\",\n  \"firstName\" : \"Marshall\",\n  \"score\" : 3.0231825647061283,\n  \"phoneNumber\" : \"1-985-824-6222\",\n  \"phoneCountryCode\" : 1933516765,\n  \"originCountryIso2\" : \"9ht8frroq9jn5i3yan75761fdvkon02daakl67e8srxgqwfdpx1gywaxp7jc6oqt9a6v94j46e2d5bksscjzbvu3ps72trnr6hqzp0guu8799asbkclm3l2uz4h90wzr5boqij2jye3sn61pg5p\",\n  \"phoneCountryIso2\" : \"jdrv54lhxc5jy6fsjpl4bm\",\n  \"phoneCountryIso2Alt\" : \"l0yjbizdvh7yqzjxa918lk6ielv0bv5lk33njzjm6hgy1mjw4rz720rnbc0zxqpwelvuezh9l49knmi\",\n  \"countryIso2\" : \"on4yb9n6tpr4zxp90s78kt8rez9cfzx1fyys6mvmw4romwjydkt4puhi7ikgwhdvm4gsy4jys3vme9j0oavkt7wk77mptj8lay1huh671zvbgxru5pvsj8xd26\",\n  \"id\" : \"xe65\",\n  \"internationalPhoneNumberVerified\" : \"q5oko9jjvd5zr7yf1iuvghe86ft7tu\",\n  \"phoneCountryCodeAlt\" : 740701809\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ead6620d-f4da-473a-b135-d28e464fb29d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.52063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "086b73a9-d923-406c-8ce0-939b58b3dd38",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "086b73a9-d923-406c-8ce0-939b58b3dd38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.520124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "0716c3aa-bd9e-4a22-b9d4-e7e04cefeaa0",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0716c3aa-bd9e-4a22-b9d4-e7e04cefeaa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.520107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "757e544d-6747-43a8-b22d-d18cb86b3b3f",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "757e544d-6747-43a8-b22d-d18cb86b3b3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.520073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "2e50d970-034c-49af-9283-530ebeefd489",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 95.40611260109644,\n    \"firstLastName\" : {\n      \"firstName\" : \"Teri\",\n      \"lastName\" : \"Cummings\",\n      \"id\" : \"eg1i\",\n      \"script\" : \"79pwpkkkq08skvk13t23rkw80hm7i2z2k6stxty71annq3nim4dz6vcoxoqs0lgaed8d3rlh6e0z07clhrb9dow8sfh3bjre31du0srhfwrb105g0p0h1uo5cux\"\n    },\n    \"name\" : \"Spencer Brown\",\n    \"id\" : \"rh97\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"5dqux9a0vc15qmeyv08w6umf2sk5uzhoeyw4rkxliicqxm6qkkpol7jyefz2u2eqz6l6n04cg3gk2nyacsoqyqtaljl\",\n    \"nameParserType\" : \"FN1LNx\"\n  }, {\n    \"score\" : 4.327939775262424,\n    \"firstLastName\" : {\n      \"firstName\" : \"Leone\",\n      \"lastName\" : \"Yundt\",\n      \"id\" : \"h9b3\",\n      \"script\" : \"5ijf2l90aeh5jzgci253tkktq79ygqkqd1sjl56q6tdfd44xpfprngt6e4xt9yoqj9703c66wurngp20m4wnuw1m3berzg3vafvr0qyf5f0ewx8rf5i2bwfyoibbpf6wmgk7a2qmnq321c7gk27gm9ul53h2hk7bvazgzxy3sd46evzkfr5t\"\n    },\n    \"name\" : \"Luke Moore\",\n    \"id\" : \"62rr\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"jw52ktarln6mgha319xrmilxwsnj0rz0uob4t1paoksqpmoz76j8iqirkzbw2ghop0e285pdbd0kms044tko9ihdnk9guw788vugcwwaqvwrxj5fl2qi4l2d433bav8suiljv3o769y0fzft8rqnrixtbdeuj0kb7\",\n    \"nameParserType\" : \"LNxFN1\"\n  }, {\n    \"score\" : 90.9395109841061,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jaye\",\n      \"lastName\" : \"Botsford\",\n      \"id\" : \"6298\",\n      \"script\" : \"fz0lqqld41w9yt3vx48byn0wv9ql7u46h9i90stw1bqdro7ububevv\"\n    },\n    \"name\" : \"Debi Bernhard\",\n    \"id\" : \"ji41\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"6w6qjq8aqeu5rs1j5z9xg2xxn2sx0joplivyzkrendneq6s7x8mgo3zt8ve2xj2k78yx5wp6nlq1p4ahtf7kuk9fk31toct2716fb3lfzxdkgdf8q4oo5tscl2010u5r2n4y4sndi32uc\",\n    \"nameParserType\" : \"FN1LN2\"\n  }, {\n    \"score\" : 33.964097269366825,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ebony\",\n      \"lastName\" : \"Douglas\",\n      \"id\" : \"04aj\",\n      \"script\" : \"9xri3i0o45euodt96il37y7m7ycp61v86uwjq0ku9ih05tiy5f14aq9n56m244nmgon8qd5b51f07kb3ejn7ryu9y5suc0071i2eix8cbxehzzxgs8tcz7rxxj\"\n    },\n    \"name\" : \"Jorge Sauer\",\n    \"id\" : \"zu9a\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"1i9yb4kqxilgzmnk0r34efbo3mjo1bbb9si5tf9egw1agz3xka6d0yz2xz0mi2fyctuxnjp8e1wiqtbvsd0xw832xyalpt4zjtlypkvq5aqgsp35dp3f55gz32hn3o36wyh36usf0fw03jeioqe831e9n76x4f4wx2khbwwnbu1la8d\",\n    \"nameParserType\" : \"FNxLN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e50d970-034c-49af-9283-530ebeefd489",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.520045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "7c03042f-3234-4e31-94c2-15ecda3d2b57",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7c03042f-3234-4e31-94c2-15ecda3d2b57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.518764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "cc1bf67f-ea81-4eff-9e37-02929efd8e42",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "cc1bf67f-ea81-4eff-9e37-02929efd8e42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.51875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "34b2b87c-2aa4-47eb-996c-7abd087ae959",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "34b2b87c-2aa4-47eb-996c-7abd087ae959",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.518733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "eb9e874f-6e13-46e6-9123-708b2260a36a",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 57.92191169710969,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lonny\",\n      \"lastName\" : \"Windler\",\n      \"id\" : \"2926\",\n      \"script\" : \"cxom4vkrf17fsy2hfcefw6gufn81m0wd601kg605vnuz2vmgvj8vj9nfb102gfv6ndoinqiy7dkahy9k9fmo8wbtg86vxavxaxl5u8om76qihe0gfrc1e9nofk18wd6zdu5wp6khz7fbphe0zgmc69g41ux8ase62fzcbprnrn3zl5ts7p5iv4m9wpqn6fsgnpwdk\"\n    },\n    \"name\" : \"Carroll Auer\",\n    \"id\" : \"6863\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"jp6l0mon8ywt283sysgdez0ohesrl6w2jp13h02q4vt7wvxxy7fbpc2uwms274wu5tqufq2c80hkc6d9e0ndqyktl45ye4kcxbhkdiqtu5c06hm67lv8vusl2hcvks9rrl4l9bc5cpjfdliq88s7ysn6hfchah11j6krs7qs1iparhs28r1yz717lktpfmpcepjgp6p5\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 59.75563073489973,\n    \"firstLastName\" : {\n      \"firstName\" : \"Shala\",\n      \"lastName\" : \"Wyman\",\n      \"id\" : \"0409\",\n      \"script\" : \"xqdtnvv4oot5lu8lqhum9n0mu75ixhq2urem2qnnyo0o95i9w0ificw2qkqfzxxxiq24ty12d7xlqi0djgmj70mk8mll48mvpk7ruj3znpmgw5tdnkudmr0ug2l2ro9bvknys1n\"\n    },\n    \"name\" : \"Bill Wuckert\",\n    \"id\" : \"76zz\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"q90ov4ixqq0jg64nix9nrmseoeuugxr40ub9qhgz7532muo1qxpovz2jw4\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 37.48001685161043,\n    \"firstLastName\" : {\n      \"firstName\" : \"Rob\",\n      \"lastName\" : \"Larkin\",\n      \"id\" : \"neue\",\n      \"script\" : \"gwv4cx9mvwwf2uopoo8g6q2aqudqsac7pkjrcwqkovu6bnp6gyag3ddwfatknm3auh14wjt2ppm3g\"\n    },\n    \"name\" : \"Nu Beier\",\n    \"id\" : \"9oho\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"lrmpxtn7fr4cx9t1dhyapb5czgf0936q2nk7xpq80jg16z41hc2sufasjd28zzzd22cu4taqc6id37dn7jpv9gyj9asysuxf2tfkg6bntv9sp7oaddi1uoh5ac208gngdff33exprze6f0dq1r2fgyggprz7r2c476ctaqp0gy17rz84zkhkwy17mnob\",\n    \"nameParserType\" : \"LN2FN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb9e874f-6e13-46e6-9123-708b2260a36a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.518706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "556d2456-18f4-4b1a-992a-69751da9ea47",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/w98l5d83pcc76zgxgr82ioyj25gsp8gu7gi3zpf88pmzu1pjw2798z67msx4ysyag4l8a4cnpjjt2hlhgxfmunhuabmbycxngupponj8uc33lp064zptx6wesjg56e015lz/7klbk3fv4yawdwgozsyexhur0zha5qb2an0l7cbanwyjxp5d3jkytq8icfqyjwn28as4odhqtndl1lhd33nylvr0dmcr2z8dkh2y17avm3bfphdqsd1zjlu5kcrawsrlzvtq1lw4nbcvdzwo25nvqq1g9k7a0ebw9ezkrwxispc3taihkotsmd",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "556d2456-18f4-4b1a-992a-69751da9ea47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.517726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "685f2df6-b16d-4a52-aecc-134c6cb1de52",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/q6w5wzla61lh4jr/wfg38ic0dkfke3kui4zd3stb8cuw7xy34rlnxnk3gcmwiejjytxv6h0eakgw3av2ua44q184oa3fv93j5uu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "685f2df6-b16d-4a52-aecc-134c6cb1de52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.517687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "3b28ea65-57e6-4953-82a8-fbd3e049e92e",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/irf4tmihb63iql2h1ov0nrw4w3nzjjgs8y1hlh6vl639d6127p8nxx46irsbkxgwelny6b3rocpmp7qbq81slrk1mng6gt4mcxigvjilzbto7nik3yowkmbpxqh0gm9z9hfnwu/559ad2tnqulr66xk9i9s8sdj9t2ng43ktrkafy0yxk0p00qgigchipu7k4g9s1ju3ucpmj7gs0i97t3lfdquba4016eh072p9h5qvpl0wmut688we0f8sz8twcg2tdsytuc45scjjx8gy93c17wl0eav",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 89.6597906194076,\n  \"firstLastName\" : {\n    \"firstName\" : \"Mary\",\n    \"lastName\" : \"Wisozk\",\n    \"id\" : \"55qv\",\n    \"script\" : \"hi2omp07b1601o8ougmtgqoc38874qdx5g4xgwm7xkexwo9kj1gj89piniqy8egt0604iswppr5ylt7cgbvdml5hcayt\"\n  },\n  \"name\" : \"Luis Blick\",\n  \"id\" : \"7o09\",\n  \"nameParserTypeAlt\" : \"LNxFN2\",\n  \"script\" : \"9oo8kdh9k1oz9ne7wvo3katgmtgdbp890cw58blgx7zj4xzhtiko4wint1cl3iiev7ecl64071hb6hwq3ts6z1nloylavzqva8deea49nqljd8sp0ioa0dsn\",\n  \"nameParserType\" : \"LNxFN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b28ea65-57e6-4953-82a8-fbd3e049e92e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.517637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "1b685d57-27a3-4563-9923-1a75ce0fd727",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/vfzg0esprgfpcffspm2hgpq9eovd9e5c71gmx8ruuydzgert9c6bo8m1bhu2cdrzwwmig6hmgeq0ua3g4lbiqlrqae5nvfe9xgz08c9qzx5qfirz998zs4gy2vyxr7ve3xhj99wasm0ci3ifl5tomwpj2s3ruaxafji33hl",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1b685d57-27a3-4563-9923-1a75ce0fd727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.517229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "ef673def-f693-4253-b2e4-82be3c1ce7ca",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/knp9r9cnjhm6wxz1916so3uwtsyqqvb7kj7di4j0vfaba0ey6a9ysv155dsd5lmniykqj2jyceckbkniham9bgexl7u9",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ef673def-f693-4253-b2e4-82be3c1ce7ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.517199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "5a4623ac-463b-41d5-8822-79760d7e7d7b",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/idmw8mo6w55dd6p6ef57bzhqon7tipxdqag28rvxk9zbta1q6ku935fb6phxyp4fl40to71f1y4aemf6l8mqc8lmyemgtq32bu5g5ucoej22gu0l91xcxcyudm73s9ifyce0t4c7gmnsc1ftfgaifgvqjl8dtuna0qtkz42",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 41.509489467001025,\n  \"firstLastName\" : {\n    \"firstName\" : \"Hee\",\n    \"lastName\" : \"Bergstrom\",\n    \"id\" : \"di4l\",\n    \"script\" : \"0n0rdnknjx7gtcm9dypjob6pxz7agql4775rgszw\"\n  },\n  \"name\" : \"Russel Maggio\",\n  \"id\" : \"c5y0\",\n  \"nameParserTypeAlt\" : \"LN2FNx\",\n  \"script\" : \"k0xx9s45iuk741l6yxwghhl91ybko9wyx2tl507e64pkjmyskram7ldt11g053p1ixla7hp43luna1vlx8eiagalshc2zhbg7t634su6t862t67bgswxqzr7fknwvjzy0y\",\n  \"nameParserType\" : \"FN2LN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a4623ac-463b-41d5-8822-79760d7e7d7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.517157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "6cd7ab5c-5154-4649-9eba-b9684a8c020b",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6cd7ab5c-5154-4649-9eba-b9684a8c020b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.516765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "a7a47799-5609-442b-a10a-49d88a243b6f",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a7a47799-5609-442b-a10a-49d88a243b6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.516748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "d61376f5-524c-4efc-9bcb-4500472559b0",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d61376f5-524c-4efc-9bcb-4500472559b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.516731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "bd432b77-1117-4683-b52d-5c453703b952",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 22.745010216624994,\n    \"firstLastName\" : {\n      \"firstName\" : \"Sharon\",\n      \"lastName\" : \"McKenzie\",\n      \"id\" : \"1z12\",\n      \"script\" : \"mwfolvb0akrabcbym8u1eu3fdy9mbp9mqy26r4wxlo265rx62ym7r6b7jfofxctq44oy789t7hd5lzs2vxveqcf429curqd4xcd0y\"\n    },\n    \"name\" : \"Cherly Koelpin\",\n    \"id\" : \"57m2\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"x8m699akg4u2qnwhdrsz0ggvws8ojv356vmb1kov7t0o0trs4pq3ofkpn3civu3og0pkjge140wydb08hmjl1yusinadyn62d\",\n    \"nameParserType\" : \"LN1FNx\"\n  }, {\n    \"score\" : 23.926270807384565,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lakia\",\n      \"lastName\" : \"Cummings\",\n      \"id\" : \"x883\",\n      \"script\" : \"lqkq7i\"\n    },\n    \"name\" : \"Ms. Rueben Mueller\",\n    \"id\" : \"qwca\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"ljvsq2hkxpk6n3798w8rdm4elencyxbnf6jlt5nubgr4vnmx4dawlzt5g5ert0afaovf018ekpz0ww0fo1dopfj7ocol0h08nhjm\",\n    \"nameParserType\" : \"FN1LNx\"\n  }, {\n    \"score\" : 94.67017889328015,\n    \"firstLastName\" : {\n      \"firstName\" : \"Charmaine\",\n      \"lastName\" : \"Halvorson\",\n      \"id\" : \"0z48\",\n      \"script\" : \"afrw60mi3elc86hcc69kg460g0aj8log36ie4litiy4s2xcnjl55mol8fcw60oskhhnnqh1qia9\"\n    },\n    \"name\" : \"Kelvin Harris\",\n    \"id\" : \"auo1\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"tv917yxdxgsvkbztlnup71fch03fk7y5vi8l4bxz02t3mufdlrxhrt34nx68f7ce31sl6wfmacm3f54dypdvv298mxatrxs5tz7dxatoebbcnjt8xwtb8qjhl4oos8z93gd2bal51fz2awmq4d1073fu8iz25sfaba5iyct0abm2jsb4u02cjwwgrm0fzxalkr\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 50.4752286357434,\n    \"firstLastName\" : {\n      \"firstName\" : \"Bettina\",\n      \"lastName\" : \"Lowe\",\n      \"id\" : \"y4sj\",\n      \"script\" : \"xkgd3igo0tlenkbrd4ugpi62u8oomqalwff9my1hy9vpr442t4qxt4ofmybw27rnw9uglutl1dkzk99welhrvrv8eqhus4tr\"\n    },\n    \"name\" : \"Shakira Zboncak\",\n    \"id\" : \"5590\",\n    \"nameParserTypeAlt\" : \"FN2LN1\",\n    \"script\" : \"vfsxu0oiunug0arskibn59gnb2o0js4lhw4fornhgdp01tsuh9ue2szklnyg7ytsq2fbp0c8er4g9qcda6s58wa79wahdlt16b3i2r74wbhjysnq84vs7cy55zqvd69rnktepx8od7p6zl2dfdxrr9e50hnubzn0\",\n    \"nameParserType\" : \"FN2LNx\"\n  }, {\n    \"score\" : 77.80197745952832,\n    \"firstLastName\" : {\n      \"firstName\" : \"King\",\n      \"lastName\" : \"Kuhlman\",\n      \"id\" : \"1wy3\",\n      \"script\" : \"dgfdf1xm56ueys46aqjexpm10vodxnvl4wxgliv3etzzuo5hqyq7b9eztg9cdbkxn2qveim0spghil4897mq42h02jbe7d3lfm2j39q1dwlwi2yljsj35983z73j7m2lwulif8w\"\n    },\n    \"name\" : \"Devin Connelly\",\n    \"id\" : \"16g1\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"ja019kvtjjy9gbp3w7g1zgbcx39b0mgltq3ryskvpatmf91dk6rpe6m0pvaglccnn4d5f40qkw042othdkk9m53c\",\n    \"nameParserType\" : \"FNxLNx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd432b77-1117-4683-b52d-5c453703b952",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.516694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "9da0d3b3-f483-41a0-96f8-d418db141dd6",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Rosendo+Hettinger",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9da0d3b3-f483-41a0-96f8-d418db141dd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.515087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "abb012d4-5ef4-4c17-85ec-09671c364117",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Trevor+Koepp",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "abb012d4-5ef4-4c17-85ec-09671c364117",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.51502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "459bbc2f-9652-4c14-89ff-2334d98c8341",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Antwan+Littel",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 2.0577276787326237,\n  \"firstLastName\" : {\n    \"firstName\" : \"Krystina\",\n    \"lastName\" : \"Hessel\",\n    \"id\" : \"224m\",\n    \"script\" : \"wuwbx1\"\n  },\n  \"name\" : \"Frederic Hudson Jr.\",\n  \"id\" : \"yjde\",\n  \"nameParserTypeAlt\" : \"LNxFN2\",\n  \"script\" : \"5hfpdqzyp8pn49kuho3xdj2gt8lo72o78rvb8f4yec6iqpwdwe7szmp6s8dei0t5c6yeqce7w5y0j3r8uu9ombgs27f17iy1sof2m7tyj0e9t60p2lzblc5msi2\",\n  \"nameParserType\" : \"FN2LN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "459bbc2f-9652-4c14-89ff-2334d98c8341",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.514938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "5fca1602-8501-43e1-996f-1c6c75ddf196",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5fca1602-8501-43e1-996f-1c6c75ddf196",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.514483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "80bef539-f156-4b7d-89ee-9d040764420c",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "80bef539-f156-4b7d-89ee-9d040764420c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.514467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "9cad5d53-d849-4892-9edb-31b9eaf036ee",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9cad5d53-d849-4892-9edb-31b9eaf036ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.51445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "6f26097e-7b7f-4394-a669-e3020255e542",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 32.083901296540716,\n    \"firstLastName\" : {\n      \"firstName\" : \"Virgil\",\n      \"lastName\" : \"Ryan\",\n      \"id\" : \"6o17\",\n      \"script\" : \"ymi51byzm0a6np6fyguvx1o7htin7q7gjiljxrhgiky3rbxjufa1ihxk5m8bhbdiftofo7tdrfwk0jasfutvt2ljwvqwy6ac3w3srjq388zn6fdfmczhlu\"\n    },\n    \"name\" : \"Miss Buddy Graham\",\n    \"id\" : \"6071\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"a1yr2q2q0eutuhcq3sfwbgkv1hekq2tag3b29pcyv85cezd2tdvf58a3rujjod5abo81swoap591u98oqv5rcqh9gx2ys7xrbv0kiq6r0acv73mbqyrix5r5i9fsz76u\",\n    \"nameParserType\" : \"FNxLNx\"\n  }, {\n    \"score\" : 80.81692547244111,\n    \"firstLastName\" : {\n      \"firstName\" : \"Sal\",\n      \"lastName\" : \"Bosco\",\n      \"id\" : \"5s5s\",\n      \"script\" : \"24e1snrsloib3h1yx8f1yrzk1ydqavhjo7xebptgqtr3d42ktf64k6decax68er96f55hj44jep2g48ndyo4fwmtt7mwxtg6vmqezd4s1s43ga1k49c7xbuzs9ty52tjvijp5ox1aetncw8\"\n    },\n    \"name\" : \"Manda Nikolaus\",\n    \"id\" : \"xoak\",\n    \"nameParserTypeAlt\" : \"LNxFNx\",\n    \"script\" : \"vbu1bk6cdmclktiul0bne\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 72.54945731454384,\n    \"firstLastName\" : {\n      \"firstName\" : \"Darren\",\n      \"lastName\" : \"Zieme\",\n      \"id\" : \"48yw\",\n      \"script\" : \"lo6jibwb5r64j2g7eryoqjq2jeaou6hbq173r9gsapm756j9izcgv7\"\n    },\n    \"name\" : \"Tien Donnelly\",\n    \"id\" : \"c011\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"a1m3kitty0ppc7xi2evq3gnl3hzq6rnx8z0ny4opj1woxkyeuzzqwklqk2mafum2n46opye0yowxzyf1a6w1me87r2xljpm79a8ap5ngkve46uodmvsozj8ni16h\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 50.774690494940025,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lynette\",\n      \"lastName\" : \"Dare\",\n      \"id\" : \"b5xx\",\n      \"script\" : \"y4kuec4pb0hdaun0q74ku2grl\"\n    },\n    \"name\" : \"Dayle Shanahan\",\n    \"id\" : \"11p0\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"e0f3jhxrcqu94jqbbns36ys3qza943bharddz8l45qvug2t8k12b7vbohpl357y199stv5s967o\",\n    \"nameParserType\" : \"FN2LN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f26097e-7b7f-4394-a669-e3020255e542",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.514418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "91924dfd-f1d7-433f-8848-c8047eb011f4",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Johnie+Miller",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "91924dfd-f1d7-433f-8848-c8047eb011f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.513103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "2f19d3b7-1847-40bc-8f15-116fbb123384",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Jamal+MacGyver+Sr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2f19d3b7-1847-40bc-8f15-116fbb123384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.513038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "826e79cd-f6c5-421e-b63a-df42c62aca95",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Oswaldo+Windler",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 55.15564179376275,\n  \"firstLastName\" : {\n    \"firstName\" : \"Jenice\",\n    \"lastName\" : \"Franecki\",\n    \"id\" : \"tc27\",\n    \"script\" : \"svrsqjdxk314obwb7izahqhc8b9ybnan8qjz2zrapr4ng8ked3av50hz3s\"\n  },\n  \"name\" : \"Xiomara Becker\",\n  \"id\" : \"g447\",\n  \"nameParserTypeAlt\" : \"LN2FN2\",\n  \"script\" : \"b07r9lxe2f4y4jce20zid2abmgcrk0u7gahq0txvmiugqr1xfpogu3zfsugh4xyihyupak\",\n  \"nameParserType\" : \"LNxFN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "826e79cd-f6c5-421e-b63a-df42c62aca95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.51295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "784c96a8-3f6b-4385-a6ed-9f17c3eb816e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "784c96a8-3f6b-4385-a6ed-9f17c3eb816e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.512487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "e1715d81-8a39-4579-9ece-2eb87bccb0cf",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e1715d81-8a39-4579-9ece-2eb87bccb0cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.512472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "e423d536-c550-4b0d-a916-848a0fe94f65",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e423d536-c550-4b0d-a916-848a0fe94f65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.512455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "0c8866bc-70e5-4848-ad2c-042723a3b255",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"lastName\" : \"Halvorson\",\n    \"probabilityCalibrated\" : -0.6216515282006634,\n    \"script\" : \"vt9da3lc9fiu2lk63uoq2j4303ugdiu2995l2wupjuws8favbeo0rypbn86h3ujmw25gae5kcgz1y8fgyltfmp7bbw10o8l9l0hc9bqzr87nen7phjozb05h25vxfucmuf84dh11cjbbndenb95vui\",\n    \"regionOrigin\" : \"rx8f6kgdd6qy1qvgco0si9a5t9uiyv1ugob27u74o0vncmu7r35wy3usk08xilja2onwz5t5k8apui5po1w7epr7i25bbbrh7ifbpmaq4nq5wg04nayb3al4jtt176txtsr7al20q3ot6obtw3ae1rnvjgly4diwvfw6ih0zyp7wjkdj428b7zraqzc6zlgj9sl6gfi\",\n    \"topRegionOrigin\" : \"gr4w86vh9fatdrioedwm1h3n8uw2nd6jgie7vpujxd1mbsukzca06e9op698u3ax751l6h81s\",\n    \"firstName\" : \"Troy\",\n    \"score\" : 48.17463139280305,\n    \"subRegionOrigin\" : \"1gpse3fqna89mr1bdmvj8fup7r13zmb2rwsnz7ntbx452fzui2bv1dqmvgumzc9h4xukkp71suc4\",\n    \"probabilityAltCalibrated\" : 0.7022361905604175,\n    \"countriesOriginTop\" : [ \"vmso1rh0sf85i83p2ttb39frwf8jlvxer5x4f87n2cmho1v6191oipii692jaxx2y7z80kzskzeyjex2ijx4rucnq2wnt9qgyidd2qdtrfjls6l71vw3e3egd6ficbnwhh1isg8wzxfdd\", \"te4t0xs178scs2fdwsjpbovp05z8byac6dqs3glkgs5xa7zbg0p18l0589s9y87iechzi2j6tykntn9yq3ukrooabd2mq3wun82rair3r093tz2960amor8fxb3a0lxkbzfrq04eqsglfbdv37dt0usudpxqqsfgznl3iavhhdxfqqjt3\", \"mtu7sr8wyw1mjzi104aia1njrsqyt8gtshj57f5sn3j1oshatlegrw48pc63zgqkdr69gdurxcpoph2kgpy8hn\" ],\n    \"countryOrigin\" : \"fayakduy4lcjjnpr3njohi0pqdzdbgdoil76w0qxntwg1quzgzo31f8iofzutvm4d71o4wrer3t38tp8p37lqu7yrv2p99sfytbg4r9i3l823uivout76z10x7t0p5\",\n    \"id\" : \"hnhv\",\n    \"countryOriginAlt\" : \"zcj7nsxj4zqr43hjc7ar0o2cw09p6053secwavljtnc25bwaprv4wkhhridsqzmslqp1xadcvh4u5i4evme3y5auxhdqon9xeunyycbxyhdfxnnhb9sc3gbpub973jtqrbawt7cbebzu8rao6qwvuzdbuunk88smodsmon1qrnbhbtp\"\n  }, {\n    \"lastName\" : \"Ullrich\",\n    \"probabilityCalibrated\" : -0.603070185289958,\n    \"script\" : \"e5y3z4j8wij3v2h5bkqv6st9igzg632ng3px4cpjfj919q7gg2nuvf7ab7vzueq816xu47fyukfvfg2jrcdy3uzcii7xm5mbr34f27hg3bnp0mz745yggdx75ah8x6pl06l67ux2opznoni4e38ymovoef8hs1gdxzo9q8pzqyels4elbspejszzf9fxt4n82pyy\",\n    \"regionOrigin\" : \"5smbdgajhzoribv9k7pnqs1e36bie8b35o8zow5owinh7zid\",\n    \"topRegionOrigin\" : \"r9ho2l72i7p7z7kmvril05gx2gbp7uypfs6mi2tc15u903dhrfro0i8gee9uc1esoxw5ogpuyflysqpta3nh5zci5t2b3wnq2yjhz0usdmxx377ixsth12cgefb17ozzut675tl93ofi9nczrjf5daid6nbmct4qsv7d5zka027h\",\n    \"firstName\" : \"Nicky\",\n    \"score\" : 51.91914044744191,\n    \"subRegionOrigin\" : \"bg8hoh1x02rt4da5c84yctsvlda9lvwlrc2dq9a6x9iipwci0gtmxorkmfw3d8be4sepjwj03u1vanyyyjqzltvd91kr4jh6rmxwhnbs5lf08fxxxp31q7c1nuuuvxxw3pyzvp2u0md5ob3qtpm4xez1co9zc98yuov8prtxfxyis0y6c5x1i7il3ded9fc\",\n    \"probabilityAltCalibrated\" : -0.5102052476710861,\n    \"countriesOriginTop\" : [ \"mqkm1j7fx28sxponrnkvq7wl233oo10wjwu0c2yqdddws5tgjpd7x254is4tfrww8frwv4p2tfr71hfnlunhm9ai8qmkifxokvz0aumriukqfqaewe1w4e58swv1wh9xz85rhobvzb42xrwi1skfxpei\", \"twse2gt2vzz4x\", \"wnejxr1siib64cxjm50fqug558czjaryu37t1gwccslyn1cw514djnluijzvm87ltjmvpy84tdubv9tlr74gzv0l0yzywqa6b8sl1xw0126s0vbwowgilemnb303\", \"mb2yf4x4yzdc5pnu5jbnhe6dlmm1h8etfxwil54t09kyfhyhs17bo3sa2riyhflv9du6ojrwhifua72kqws6nzpcuoy5itvsrks7zhvujtgj0rjfubryxdsraz4wijctysy80sii64hpv8ixwpoga9a6mq5mawx19l3d6nf\", \"gxalccjq29peppojenqk4zc50l3k40juhdhrcn21lvrx\" ],\n    \"countryOrigin\" : \"bmhaerez03nr6e354nrig7xu2ed0ofl8pfccq2n9xwc3ez179md6nfyysfcupui3\",\n    \"id\" : \"40x4\",\n    \"countryOriginAlt\" : \"kyltoh5gp9cxn6sr8o6w6x7wxdkfa3fot4xq1zm3uowdeftc0qfwnz1zcbwycns6xyxholelbfxso85x2sy3sy0zebbmcm5yehxu0esw2pjyexxdq73mixiket5ztycfywkg0152t3yavm\"\n  }, {\n    \"lastName\" : \"Schumm\",\n    \"probabilityCalibrated\" : -0.998970655542682,\n    \"script\" : \"u0aiyvrxk6mq92mc40fy3te36an9wh8zwjcwkb24shkj5dfl0nqgiav9f1qed5qpnj1yujcbrdg5u8zh00j0pyqvprzb5hx44qj2tvcx1uw6q9zn3iekhc5tg7kkc0f77dw3gw7gxna9avjczurvogh2r6cdvfavorqo0xoo555pofebywz99yx3o\",\n    \"regionOrigin\" : \"lowd8x9hp13ui4gf64i6hul2az2riu1pnsxaheoj0zqqftohp5q\",\n    \"topRegionOrigin\" : \"nk7k59cjnihd19ejoauks58q6sdyikptj76xhcym1eiffeixi59r2r7mb7ygfj0skixyv54atc36cohdva6yc5amr8arkgqvyeotn2wjzbjfcthoop56e971kux4eul2pa4fz94l34355qn0zfm2zxzk9fwr9nrhlbwj\",\n    \"firstName\" : \"Shakita\",\n    \"score\" : 95.4137230552447,\n    \"subRegionOrigin\" : \"kowb68vtjevoc5b2vnh79i4mjs2ersg1u80w2oma2knre3yaho4a0\",\n    \"probabilityAltCalibrated\" : -0.12707668805560224,\n    \"countriesOriginTop\" : [ \"s58ajdcgq7jh1p2we88zpak6dsvp5eig6dltisbmaapctfms81h0mgj1pv28se3kkpf52tzzzyxtvd4rfhdfuyypvdcj13sh29\", \"m6dzg7i61ncit5yzmarz0q\", \"8lkqwhr9a02e6rr1xu3\", \"09c9el4op2o9\", \"155pe60p27lo1175ar4o6i9vol4k21youbjvn9ts335odoasoio0a3473gmge43eaz61z9fudjm56lfhr5e1no63w6fq404llf4q7sed64oan51e3qan2gqmr2bnddxgb53ue4x5vpj4035xnwcbes\", \"97aibpqvi7h2itl\", \"k5prt4tllrakewf7fjkgokxfnwco0l0o4it530684zapm\" ],\n    \"countryOrigin\" : \"o72m75wz7u4hcs2kluc68y0meoc25vhloy8wyp2wejeyv8hwgsxkjrrf78celxv9ghpepcpuyogsp5uqa4vjv51b0r1abx5ptumcfm71ccayspa9ror108ih9ell4jvxbix24gu\",\n    \"id\" : \"848j\",\n    \"countryOriginAlt\" : \"por8t9p6ea0cwhj9oh3v1s8i713d04642ttat4936zciafm4ier0b7xk1zsety8x1is3dgav0jr8kv9or9ezfxto5klqtxyd28d9exystrhb452hoj2wd2oadd4phjvdo7sy6jv5ti16sx4whvdaxywblef\"\n  }, {\n    \"lastName\" : \"Cartwright\",\n    \"probabilityCalibrated\" : 0.19935683615254773,\n    \"script\" : \"090krna9o9v96y9cw5ora6nt4f0hqw4fpvl4zznsa8ikfleclay3ahvx6j1r3j8jewxeztbbpb2h1qjyk8how4tsb2kpggj2458q8mcbxrxhof5k1w6vtqtxj094k2xthpvfmcgmmrxg6rns4mfjw4isi31j349bbhgu0342k7hdd9zxxsimi7i546zw2olckk\",\n    \"regionOrigin\" : \"wa2fzirnhs0upjh53gpg3engofv8wb5w9521p457jtu4lquubv7ohtutyvq7hnoodoqvxyuyxsw8\",\n    \"topRegionOrigin\" : \"8tafmahukq3\",\n    \"firstName\" : \"Tifany\",\n    \"score\" : 83.81512190467974,\n    \"subRegionOrigin\" : \"v9w0ze3vsglz384nj4dshqa3vffkfpr4ordj4lcj7s1sn7k519a9obhz97hsnvw6wvu7ut30x45wdsmd0ajdh4g7ob9sw1g57ldghgfva5lm2ten0qd0ahepdjmoxpe0x8nth0gjcepd0hp4p10xr2src8i4y9bk5x0va7zgxk9ydzqnuo0pev9s8efwr7hjoj46\",\n    \"probabilityAltCalibrated\" : -0.7490691892559247,\n    \"countriesOriginTop\" : [ \"s1t4wz77fysv2urvll4okuh8ilmvb6hmxo050y\", \"qapna9xvi289v2oy7sosdd6ib4z44x3aq52p0wzemo5wiywp34j4tqyqbpf4hi2pev\", \"9o8zqj36mgo0ah0u15as2hb17v06pnegq75di2m7lxa9wm8rabkx6oj7z93seandhswihdnojhsi99o5o0yutlgk83sgg1reyfblept28vexp6tmd66gllfdlf4h8sqj148eia2q8ljth87p6one5j7ssw57t6rg5kx\", \"8vuflpsuougsr5f0b0h2x95dks9vu300ahsvm1f0hid1lc1sz6hx0b029tg7jkkwh0oajy0iz0f5fld133n58psca1loznuj20t3zhfa1gp5eyxe28rxnb73giybqi1jky5zg\", \"k3pcxfl20azuhiq0bqip0azb5bfa6x802zsvhq004fexa0a8xugsxknagki8vfwu936aylq9vi3shfsuz8l8a5pzzlyik0onxd10rtdrsaepto34sp7y86l2rhvuw20scm\", \"myqts6hfp0hee\", \"fx1p9d08960h5ezjozeiesakcql1zbv3ash7k4rdx5ie5txdyh9runt4gjwcpepa1icgj9vwajebdjx2hcb5g22o6lt91cne5zoxdfnpy6extgmhxouxrlezael8nog35nspq2soudnbmzgcitzvwr9zb49efkt88q4pvodx69eqjdcuv82ut4aii5jay9qj9t\" ],\n    \"countryOrigin\" : \"j36ljsj4jphqu3yupw764xvs2py3f85iyvwb47gu8l0pg03kozoqn6qmj0r1qoz5vw126ouhekvugsj014a51goouk1mxhtffnh613amy9m0339rm\",\n    \"id\" : \"0gdv\",\n    \"countryOriginAlt\" : \"wttecyrqlzg5wrqbbs\"\n  }, {\n    \"lastName\" : \"Stracke\",\n    \"probabilityCalibrated\" : -0.7277215947561957,\n    \"script\" : \"uwv09lblgqih6p1swxeed1102gnodwotn4rns08dzgnszlnxfl305q881h7i1x7t8zydq735bwzf8soq7s7zln65vr4vrca91o6aezdw00ursji4xnxj24f40tyamf8iaitit69fqiwa7tizd5yw09u4kg2vm4unaqihenpu8f6u\",\n    \"regionOrigin\" : \"1dhl3q2ca1mb1x4xow2hwtj29b0ir4y169ktk3ig8vlowt32gyz1utaun25r8z796vnr4bw4jjl5gvzoloaluvbw39p0spw3m2fagsup1avgge68gu4tv4g9u9pi6292dbw8shm2dwq22meqoj057ios2d958aa3qyxjkm\",\n    \"topRegionOrigin\" : \"2i53hf7n9mj63v6qpyrfhu1fsspwnbb58cnm5of25tcjcm3xmjpk3cvgey83os8i\",\n    \"firstName\" : \"Denyse\",\n    \"score\" : 63.31756023608239,\n    \"subRegionOrigin\" : \"kp0givgdin18xwbbmho2aei5g4680jmlzou4ksenfooejt991z39rqv5bh01re1i3nqi6rung2efkvmy2gmjewny5d87oxjwrrtpeyzd3t0adr0qy7q9xd6makxx7zu8333i12dpc21cypt50tvu518f730obam4\",\n    \"probabilityAltCalibrated\" : 0.04580226200335069,\n    \"countriesOriginTop\" : [ \"fcusim6bydf7933jcpsb9ewh05p2xj5fs3yif5vt1iy3ouqjlqtq00nbeinh3kextv1r8o5ws0ji5qfcqy8cs9drbvwdv1c2pdup0rgv8y90ajejdevnygqmaighq8tv4dj5pmw7z25osmn7aarhq5a8jlkf4b3fnewf\", \"ji35e0ehflm1hm6bi3lre3rdqjepb7ewuiyfye692ni7gajwb45va5hfur25yicmy1cu5k7urx6u0az13xy18ozw6o0o4gycau6wvl60r3mu8fpgiftx0wojlvcegk1i06i3xxf2sgu7pvqtbagbp59h94pjialbb9e12kl4\", \"cg34vo931uvuhmq5bn82bs5pkjrdyn0k5fynathpgtd20nislona3as2tidhe0t8t2ci4er93l6zjdkjtfwwhioifle71fwalzcgbl17rkq0f3p46qtftj5mp58081tn94nt91ran939ktzzxjn4vqb990w2htwmkmplw0rz38fy2\", \"z2i10cckg0hcx7zwkx07ns63qr70du7xv5wwg2goy16xroq748f2dzumketsobvy7d0ha82ctxecauoy6upt7svr2bgso31mhq2z1yfc2qpd08q3sfnkw39zvz485dkpfoimtbqzxa35\", \"88qycsat2qpfaccpy34tkut45f0nlp7lveuy85w4ggvrystgamgj0291bbktr5ovov7zll1pqbz1ytyi5vecewput6cz0weabwrhuu9nb3vltsaeltak71hn5cvmgvupcpssn3zj2gxrlnjx8l0vmnarx4ll8dvw7qp9tlk8t5kvul2378hhgt06vjmf0\", \"0mibc1iw47w5lrs509cu8kpyh1okawkdwmaruahw8tykjdtkytaf076buptlkqdu44eq45ewybzclnglajdix8f3qq098h7kqad6t5t4up1hwu6jh91vz38hut2478agka7p9rt53rrf\" ],\n    \"countryOrigin\" : \"0cm4e5xu5k9v7ervt3urbb39xjppv98w1ibd4cfj4kb2viiin8s6gysrhr2sdd9auee4ivpgeo8qwbx3g6cinu7b1t71pstar3xq7n2wh9m99pevvmfrj1s00lwvsa7gaz5376fctqqsuoiopflh8up738lggfb0du9uy9uujgxvrs\",\n    \"id\" : \"t4oo\",\n    \"countryOriginAlt\" : \"gtf9l8jjwwaf8ziq6fgb991gjcbp5mkcq5qv1034d5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c8866bc-70e5-4848-ad2c-042723a3b255",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.512422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY origin from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified origined names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameOriginedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "5aa3443b-112c-412c-9e91-9a1ac398fb55",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 403",
    "request" : {
      "urlPath" : "/api2/json/origin/Eugene/Schuppe",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5aa3443b-112c-412c-9e91-9a1ac398fb55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.51105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "486d9584-7f98-412b-9d27-f58dc9340d6f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 401",
    "request" : {
      "urlPath" : "/api2/json/origin/Shirely/Wolf",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "486d9584-7f98-412b-9d27-f58dc9340d6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.510983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "12849956-0265-4743-863e-4ec5955d75c3",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/origin/Ligia/Homenick",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Feest\",\n  \"probabilityCalibrated\" : 0.15157171780748047,\n  \"script\" : \"dzjdceftclh6jz4ct6nda287nceq9xy8dhol730refjqmf4x1z7v879eljn234l0ayo\",\n  \"regionOrigin\" : \"vcjkcyvhk2lt77fko8gi9zd2ymvola9wof1jcugohwkwi4hnftfri2k70tq5hj8xmxy6vqrcoxn82ievxucdwinrme2tuqo1t6f51sjwmbqozol5a4dqk414bgp\",\n  \"topRegionOrigin\" : \"jx5wslb1pvbbfl2yefji8t00g3isdtpaagccem7lpuqpprf27rdvy\",\n  \"firstName\" : \"Vella\",\n  \"score\" : 36.69246757903104,\n  \"subRegionOrigin\" : \"7u3c5bwu3gvo7yaf5t5p7wb25itul2dfcsb2z51s2oqi26uiylkfwfxlie1desgaqonsgf03ytc2mz1f6e5yb0mtbw3v9lzd12t2t75j0hb7m1699c6k3u71gjbnysvo0cv09c7j8gp5mauxa6xow5ob08xjitoedocmhvz8es\",\n  \"probabilityAltCalibrated\" : -0.906471692212802,\n  \"countriesOriginTop\" : [ \"gnna86lbkfrvp7lhqgvit2mhbxcs8971di1layhoke2uoutc6t26wekhvg6yk5xbuif2bbms5jb7j9fhgm09lk94awrk39vgx0h1hn012e54q6v7abodj89kuo3ol0e50kgimozb795bf09rajr0kmskty7k1i4d\", \"wbxbz2zjp9ehlpibs7ytzz73x8vyv8eoee6mfa8wuinykw9qencsvm93zny3ndz1dnncdmgj6peoqroc4i6is7yri7ffx9ouv5q9pt11dv4f0811f8vg5ns4qffxcwb4rly2x989nzc2q2te52rtz0p4\", \"531xt74s8q5lnpj8vr5atml0klotv1m60vypivok8fb7vor4ryr0hcbrvu5qxvbxw3abi19izaowr98focy6y1w1l74kcwjxp79qhf3y2iurygg\", \"yfqq0uf60fyr69opnookbp96epak53rsrezyjmnci0zw9yos6abgr3sw9ljtouosultuqryumdh6290luawmevc5op3320znrnf0acc3y0kjwcb4lsv4z5c197y45ecr2udba9w14qkizhuq1gttva5eezgtizmgr\", \"x49i0avb27ikoqygc7cgbc1xm5t3\" ],\n  \"countryOrigin\" : \"ojfrciw9xonfumtrs0un49qpygg0avez8n0qrfzd0mnyi2dayf3zvtid0c9j6yfpxnzpsw1z5kya3h4se30da1hxgxygmdqcat32lawab6vhvajshwggb7940sgryd53wh5r76h6mry48pwziaovj15q7d24x4qut0key3t3yclwq294p0svq2xk6wtygw7u\",\n  \"id\" : \"19tb\",\n  \"countryOriginAlt\" : \"jms1vrnjuihxvxumvcm1ancqfrg12elr4y8e3m4t96b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12849956-0265-4743-863e-4ec5955d75c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.510897Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country of Origin from a personal name.",
            "properties" : {
              "countriesOriginTop" : {
                "description" : "List countries of Origin (top 10)",
                "items" : {
                  "description" : "List countries of Origin (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "countryOrigin" : {
                "description" : "Most likely country of Origin",
                "type" : "string"
              },
              "countryOriginAlt" : {
                "description" : "Second best alternative : country of Origin",
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "regionOrigin" : {
                "description" : "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegionOrigin" : {
                "description" : "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "topRegionOrigin" : {
                "description" : "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameOriginedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "c7845c84-61cb-4b10-b998-af105a2eb355",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c7845c84-61cb-4b10-b998-af105a2eb355",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.510447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "22c2a89c-dff9-4e1e-ab5c-368d7dd54a5f",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "22c2a89c-dff9-4e1e-ab5c-368d7dd54a5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.510432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "18d1d781-54ed-4ad0-b439-4d413da2f083",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "18d1d781-54ed-4ad0-b439-4d413da2f083",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.510416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "828a97cc-bc34-4a2c-8bf5-e5138507688e",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 87.28628888547748,\n    \"commonTypeAlt\" : \"1dafcisjce0i2h4l29ky7utrl5d6holss8b8019990ao4fg7aegq3qr9oe904f8719mxkkw3f1dzlxv0cwhh4g4hrtw9p1odm51f7mxqgu0nj8c9x7z6q3eze24dx98fwbf0akox6nzkm71ohf\",\n    \"name\" : \"Mariana Weimann\",\n    \"id\" : \"0540\",\n    \"script\" : \"2uxdwodf5ugnnlzha23y669kzkxes4uyafr9pteb9ba477sjatq\",\n    \"commonType\" : \"gue5m6r3rzg349gl07v1u7ndqenbntrj88wwlbzb1kx06e3xp4njtxfn345ncoopji79xgc83q1nfs7join3khet373yiedcueghcgueqc3vorgncea1zmnt6pn\"\n  }, {\n    \"score\" : 38.745506696512834,\n    \"commonTypeAlt\" : \"a3za728o26wgjww3whdaxxv\",\n    \"name\" : \"Melaine Sipes PhD\",\n    \"id\" : \"02f6\",\n    \"script\" : \"zw3trcc6a7s20bg4q6qgz9tjncxga6wssmkvy4g0cn38yc46qr48wueac3lbx7t2zpk1g7wmx5l8odltmkwahkuj7pc5a9qqhskpltg7ahg\",\n    \"commonType\" : \"8rerbi47t42k1hj1ow89239aeo0g0ndf49lb3dy81q9vy4rte7eqxro41eault6km3ba1fyl88vmc6qblt8bw7iydvsp8lkczk27yi1wr83za0luw7y8tjdqzu4equ4sahkiz1pei4mgk5nfwkku2wxcr50zdc973nyrex8icycfi5s2on9jxeoewixim7gezwv\"\n  }, {\n    \"score\" : 70.59829282432975,\n    \"commonTypeAlt\" : \"8a74vnywrhp7arx78xgbhlp4jmsca6lsw3ds6ptfwqnldrt6typn8ljc6350iqw2lix3eszg77x6nodzrcacw8\",\n    \"name\" : \"Adele Lueilwitz\",\n    \"id\" : \"k5lh\",\n    \"script\" : \"96aru5djrwrjcsqwsyvpw5mpxap\",\n    \"commonType\" : \"ss7crbsu4ydnrg56njzghm55w9kpkpsh3pqvi6cq4wx3u2rd35tbr25ozo22o9jnegp5zxko1\"\n  }, {\n    \"score\" : 25.192524117208936,\n    \"commonTypeAlt\" : \"l975fxfhewhkq9nu5rwmexkzm3avek4nqllwj7iugpyc46e8fjqc2wby1ebo89kpbzf1jhm81g8j2w0yrzimwa97qy0e45wu\",\n    \"name\" : \"Mrs. Kelvin Baumbach\",\n    \"id\" : \"w0fs\",\n    \"script\" : \"imiapjb2tw88jb1a8h5wvc84ludz65ww1r7p2ykhr4ohd47fgyr9tt3zdh9pav5nfxa61620lqe5iwki4pgv7vvg2uazj6kqnuehs5ogjga8g8d35m94r168ou4nbfrde7ty5ffxkfyh2n8x2ommnffyt9a44aggv0522f5zsv8vw23481jk5pvkijlvoia2z9jc1\",\n    \"commonType\" : \"l1gtad5ehpvxwycrd71ui32mfugozrtfql8roccjkb3ertnjodpa2mzj8knihdvt7hsbzlvt3in3law3kse202d23g11z8vdskbsesey4l7lwzt9bc0m9elvujp14v3h5353hxow2d03gvvcsa8t0p3v8hs954p8qhn8m0zid15f6tu4y1w8i47c9o5ildhnom82e9p\"\n  }, {\n    \"score\" : 53.14015984493107,\n    \"commonTypeAlt\" : \"fkptu4f0pop\",\n    \"name\" : \"India Stehr\",\n    \"id\" : \"nntq\",\n    \"script\" : \"z9zy0luv62s4016gnobtii9jvl6ejq7qlb03btib839u2vh5cqpgwjfng5v0i3v2m6sl8d7moorsbrr5z3bva7sqchqarvvjot69l2pbdnksk1molmyhietxvwelmbj8rt7jknltobgemkslpfmrmfcwiq0cbrbnu8ym\",\n    \"commonType\" : \"f0n7k8595j6jrvf0rzkpmd3u5uaxq9ts46pgtb5aiqsikev8actbabdpib015zpfrvuyhtp9d3b0ux87txxjcdowcevd7jwrixfya88dactbpbesm2lnssln5ma9f1pcjiubuzs498exgdp1vfd\"\n  }, {\n    \"score\" : 1.6682431015586863,\n    \"commonTypeAlt\" : \"3sdfgoog7i676i220tqi4a2y52vwwziqo2lhiebowehgz5qhl0r8ikw7o2e3y1xhyofty5czkmd76a0s2cyio5gqus47d7sehklpj2\",\n    \"name\" : \"Otis Glover PhD\",\n    \"id\" : \"8n4n\",\n    \"script\" : \"a4mrl3ftyznigkv5rn35xrhme8db2kl9ta2ew8okvc3t3hma86s8zkuvcj0ec6spfadmz6hjvsj9c6giz49phmxmfpmp5ij93brak70wve3ofet4ipge\",\n    \"commonType\" : \"y92ffywmztk2g7nwh0fxj1eqqgmkr1osonr1e6eo0525yxdwapviz8n3yhgweieal98ahejwdh00b91oo85o07zv1tsfvf49o902u1q66y4wxgy6eriw3axflfo9v02cuklan9122\"\n  }, {\n    \"score\" : 53.623862057800245,\n    \"commonTypeAlt\" : \"whrb0ccs9oi4wt7n2erk1e4hty2ew2pecu0i3ws9lnmx7o2bnd5l1byx\",\n    \"name\" : \"Erick Lehner\",\n    \"id\" : \"44c4\",\n    \"script\" : \"76w4nuh04o2qi817vt6ylttjsg0mee5xp8xzljet4cfzaricdvvwek5iiola04zh0mk01l90sgsvjxuklfppbh76jjkzkidqz52\",\n    \"commonType\" : \"41mm7duirdotr8y4dquke7kdqr5y0ldoxlgg5kbi2o3wddng18e6bn524i7nttrtsezsh9aeskpq3lnjdh2dh7j2s0pehafhurcb1xbezodvmxq7trqk88wxpssa6tzufnbb4cv0sa43wkpknudb3deukg4jylhdyzo229o66oeua7nocsgug\"\n  }, {\n    \"score\" : 51.90176963377441,\n    \"commonTypeAlt\" : \"rfd334zlxjkvrdhfzsj8yhviprrhohacq40hp7r4f4bhrs4jqy1zdo5u3vuyxb742cfkq7oybkji29tjokmotj6jid0o7o9asejxhxrkm1g1oo8ky4edch2i293xynrjrogf65ipj9syy6lhgtlh8ze7irx73\",\n    \"name\" : \"Rolando Daugherty\",\n    \"id\" : \"00q0\",\n    \"script\" : \"0d4cgyksfw44mqm1ahkl6j1dcklhnsd4l19iovmblds5oekbcig2cgw85pmfivpougaacx7fwjd2bds9xk6m45h9sd\",\n    \"commonType\" : \"9isa7gzltjtxbn50kkzbsctq1zjv01a7uqbd3kc6eauqf9t3eyz8i4wue8ggfpeirbsu2eqi0nr63qnneoeyv523an22cpbb8ajezqga3wrryarfda66tm6a56g26ufzw3kl30zpb3hcgmdkdvuaznxnjeooapnml\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "828a97cc-bc34-4a2c-8bf5-e5138507688e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.510389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "05b53fcc-6e93-4353-a783-efab869f21ee",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/czh1j3h2k7wl16624jiby27nyduapinuxfekooqhfwmlsfolq1fd8gt9h/xy0ie6doxb7gyr05a831bkdrje3v7uxsd72xu61te5k0x1j64chaxbstdn7fk5pr6g06keclp6rw19yj1mlkh40sqn2kbygkrsna6yaoiljnw55h4tp7y0d4f5hqkv5byn8dnekykoi6835j66j7sxwiouc",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "05b53fcc-6e93-4353-a783-efab869f21ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.509088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "869743e2-6fdc-4fa7-a2bd-304afdec17c2",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/pehuxb239qqe8vkpg8j0ejatvd2/l20f89at3q86ze6bw5m1kk5hp44gaq3zaur8alkdlyujn66z3qh4r2kitnmaahz4z0nm5lcakqa3ounlfazrrh5jvfsltfrwo3s64tp7ybbue3j4dqbq4",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "869743e2-6fdc-4fa7-a2bd-304afdec17c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.50905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "95bdb7cc-97c6-4e9c-a74c-c637cbce5802",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/hb81q50do75pg6hgo887wdblmej87xh6cpzcx1zkyy328y2v3jtdj1qjf7ptag4qt9fi25uq4u7rbubff1tc591jm6c1hl9c4j4o77rxxcpuvqx0jsrdqv2la1ir80d1xgtxk/vcvjfigsgfvngpgzgpxf0r4hiqyrq3hgoxg0a3y4lpn9npjj0yh9e0qcvbfq5l4qkkuewo7zffj1f2b7dkezpjzwi62gi70djtfwiqfukceajumzbiwrm9aynzy2idzr25ijfthz25s10zp4rcpxge9lqoo3tb7f77jqvt34k9pmx6fs7r7j",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 16.933425727567453,\n  \"commonTypeAlt\" : \"9igbi5svs6sojdd07mttrv\",\n  \"name\" : \"Miss Josue Powlowski\",\n  \"id\" : \"e95z\",\n  \"script\" : \"kz4sd19jik7u6nyl5lg5ry17ua7isrda5c250c6dqem99vutobkpphbte1ifpsvqealrv5qsgmu9od1q9bnaocyehjwrflker1cqwjd468fqj64e8ic20yu6wm2areayliwosmzkydyomaq7x8zhdg3s2p\",\n  \"commonType\" : \"pff6i4wuwzkqm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95bdb7cc-97c6-4e9c-a74c-c637cbce5802",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.509004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "641dc1ee-a7e1-4f78-b26a-a2285eec874c",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "641dc1ee-a7e1-4f78-b26a-a2285eec874c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.508772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "105d4c6a-095c-4670-9d66-5502142cab62",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "105d4c6a-095c-4670-9d66-5502142cab62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.508756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "0e05a0da-3b30-459c-a0a0-d3615a3ea5f9",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0e05a0da-3b30-459c-a0a0-d3615a3ea5f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.508741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "358ed6f0-708c-48db-82ea-51d36ccbc89f",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 3.32343460174761,\n    \"commonTypeAlt\" : \"we9gbc13k5ggrk919bicooc9ojfcpvyrwwe59k1vnui7wiwrz48l5dvhgllsi7t2ihrfskpfw8txza6s\",\n    \"name\" : \"Daisey O'Keefe\",\n    \"id\" : \"ibx0\",\n    \"script\" : \"qt2wb1qolb7o49e1hhx8ag9hly3k2tc0yly48q4gfi55m6ydd0afn74\",\n    \"commonType\" : \"sz3aszenh8ar1h5idkuhaw2r9gtjryd8bt98684a0217gb3kyki6a7dausvgygk\"\n  }, {\n    \"score\" : 8.445328620339765,\n    \"commonTypeAlt\" : \"6pqgb982vbamvcy9ylz6cuav8emxvknqwvsjq0e23c1u7tjusmrxansuibftdgzerk86\",\n    \"name\" : \"Fredda Rohan\",\n    \"id\" : \"1079\",\n    \"script\" : \"dygxlrlw4cn45nwus0qvzi67k61iwf1pcjwij0se054hesaq98ymzbietxg4tm2e62x3q4aozse3g1wqw41izerk8ijuemhzigb0bibu2nldptqk6kyc5xxz7w55nk7\",\n    \"commonType\" : \"msxxee2y\"\n  }, {\n    \"score\" : 31.376915146538497,\n    \"commonTypeAlt\" : \"lxbbz7sitdhnscb8gz2bpammrk5xddj1yikbrdq4w2z0609e5zdlwq2oiwwk0oqs15s8191jzq0f67qi76q91e1yqotn\",\n    \"name\" : \"Angel Bogan\",\n    \"id\" : \"ctm4\",\n    \"script\" : \"v9f13niuxxteqtdzwo7jsw81gxlhb0gweflr82j92qj0lhsy71e94qlq1vxua1eza866hrcphvm9ajndv32j7kz9uo3k2r45tlq7rqxhl5wsl576ij3cc1rnmfjigpcacxaah3plqrgfpawhnxqx86sip9ixeha6nlpqs2xh31r3q16wx3aqfso82pfd8dg\",\n    \"commonType\" : \"4ulrubq1v3xs86mciyo70deqdu19jlil0cn833d3v8uocoosza\"\n  }, {\n    \"score\" : 14.515960392629612,\n    \"commonTypeAlt\" : \"r5fbg8f9e726kmupbzsehp45zoobhy8ms17mz6t7n71t6diy717dxjz2u6bzu3b7xx1yhfakdcpb0573ac0hicog0u6gm7i6ulj\",\n    \"name\" : \"Karisa Jerde\",\n    \"id\" : \"276o\",\n    \"script\" : \"rzez28jh06y65ksgckf39l7ngn6dq7u9s6hhqbahk1fc8fi0h5ajhc3gn5lpbmb3bgscuzjifh9stwsqaeyqjtjh7toe0de1vjrh7zwsemgm3ah6vm1kf9wa4z5isrvcetya0zjw\",\n    \"commonType\" : \"954ro2d3t57ugbpopqi0wiuxvanbpkm49sim3o5784m9wt2gxn39ji8kr96qdfe1asfe42jywluhmopn34ukms905e8kihdgricy15gkiufmy95nlkru3wc4w0hlfmnp9u1ys8ysm6ol9ovmsd12vvmi2iwewq1g7cq7z04vf82gdk1tuphcn8p3j2bl5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "358ed6f0-708c-48db-82ea-51d36ccbc89f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.5087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "4b03d5dc-e508-4338-bde7-b76f6e1031e6",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameType/82gcxx90pdu53u4ssjm1n1cm00zvqbi4hjypsqnfkz6fyend6qkjzm5slq0s7f8uqytt7loczbtx1faxu9fyy5z28hy7meq5jy4chh43b50ju4q7ojuaiinvln65ouh4iei3o7",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4b03d5dc-e508-4338-bde7-b76f6e1031e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.508022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "af29cd1c-5487-4a60-aacf-dbd8824d954e",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameType/uo05vu1c9vj4rh3kjly4htdipoqrc205ua3nm1rr93b2r0zv7t35fu3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "af29cd1c-5487-4a60-aacf-dbd8824d954e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "e273c4a6-adc9-42f4-be08-367e982f12e7",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameType/4njq9jd2f1xwvgr5dfar386mo4y90ww8lgb6y452k8d37u8c7r1v03qabqg0i4reoxmyv1u22zxakdjv3pd0qj",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 59.035567887095574,\n  \"commonTypeAlt\" : \"5cg3j0t0rme5neu4zfmalsggi44iz7wiz9vqux1cc6luwy0qw3hguq3nk8\",\n  \"name\" : \"Mrs. Taren Ondricka\",\n  \"id\" : \"o7fa\",\n  \"script\" : \"9r0h664aqqdds4yblx0zq8uon46vh0vzu56zoc06z12b8scnkkg5vdm0yz1wnhxi4\",\n  \"commonType\" : \"krvjj10rqcna0lnwqcenuhzof7zmuj60fop7986uqsshm9cufl5igcc9w74h7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e273c4a6-adc9-42f4-be08-367e982f12e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "54e5b43b-738e-4911-b103-05ace5629303",
    "name" : "Activate/deactivate learning from a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/learnable/7spv9ia9pwh9/false/mn16lywrcp1gl3yr488p7mgotxk0bxgwmtra2gq3m5fwa8udqqlgmir3c1osouzdnctgaoxejr2w0c9fc48zyrtvzarlk6sdu56t3iv7q4d73e4xot1v4nvrfgsbn81fubj",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "54e5b43b-738e-4911-b103-05ace5629303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "2104a9e4-4ebf-4793-8c17-8338f4e6b7f1",
    "name" : "Activate/deactivate learning from a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/learnable/w46zq8ighx5c1pzxx06a5lu/false/9dluuhtfn4n314i0jbtehcn7w1w14qida6r9i3w608b8ymh0ifmf6r2ta6y",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"t92ty0vhnwvu3p8jrh7ugi2dlggbv6at0juav9of2aiv8rkj6yomkzw1x79qy68qlvtxnel6s7atsm5a1vdqlivgmbcq0d1zcur3l9sy5jh1nuuicgcjlscybklwyo4g4e8fu8ov8y41iwkobx87u5v3u24zq6uxutoq8j39noc\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : true,\n  \"admin\" : true,\n  \"disabled\" : true,\n  \"userId\" : \"4f8b\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2104a9e4-4ebf-4793-8c17-8338f4e6b7f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "ec89196f-6ad0-40be-b18b-2f81f957e738",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/v9lfrex4vcygdvgh01f32o166dmg3ilswabv07jt6910t6di1utxh9jgebo46dhk7vtbiy9tjbs18duaeo7wcfy66dof6woe2v4vfvujrx6vdu7y/0qoslnfcce0pav3h9i9zsdxyfjx53ir5vxlrxpj4pigvze73pq7yy9nm2q8bn2qi5fhx0wxeem5a0sl81nvj3o0zqsdrn7cvq8eam12ej6staw5b31eusz0vp0qucke2h5jmwnp4/Jules+Mosciski",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ec89196f-6ad0-40be-b18b-2f81f957e738",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "ae13d073-b7a6-42fe-8bda-bba36c30c388",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/tfcmvowgj74d2wlk3wtn1hklx9i3wn88x3p70tc32u0fp62k9ec01tvovvgvyzpq62r5zmfkv3ly3q4353xjn1kckpxekrt7bvouqobsmbqtabcdzoc9pmwdtwdomqx9s5ds7ybvmm5r01t0lp88xiq7igfd4dksiqpupx/xgkcniiswppa4s7z8do9iyan82tkixeqpc2vyu5x948ksg0w7ix7acvkle9qcq8s8vyhzfg50vuaytnxb0l243zr4ha1mnhh9dphwipnfabrtys2ji38pg2q4m0lwajvh9qz9pfxd18wevfb/Charlesetta+Bode",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ae13d073-b7a6-42fe-8bda-bba36c30c388",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "c2de7057-faff-453a-b737-5837459d737a",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/7oa2r42nw7cb/z2u44i3kklh56rp5g9gy4aeblv4d46b4qbbefo06u95ro8rkb40c8eyehayjd3qxqcscmz4ktsmeu5s4ohfnp6q1odzw5kzm57tf787o89020cm2b2c23xgmqog8admq/Mrs.+Florencia+Schmeler",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedbackCredits\" : 8816095219081249974\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2de7057-faff-453a-b737-5837459d737a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop",
          "schema" : {
            "properties" : {
              "feedbackCredits" : {
                "description" : "Number of units recredited as per feedback loop successful classification",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FeedbackLoopOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "ef77578d-43a9-49b8-a251-22111a974dcf",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ef77578d-43a9-49b8-a251-22111a974dcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "c63cc2fa-cce9-4217-9283-aa0839b83679",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c63cc2fa-cce9-4217-9283-aa0839b83679",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "78f2f430-19f9-48a8-ac17-63a2e5dd36f8",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "78f2f430-19f9-48a8-ac17-63a2e5dd36f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "159acdbd-154a-4307-8dbd-7bfe41009a88",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.4356620544230418E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"7ua9\",\n    \"script\" : \"c4nzsvmf18edfb8fhc2eotdfr9lb6jpt13efx6g22dog475dkxam5rxptdadqkbvjrwzg2ql9uxn07gv1tef7an1xygqbfcrgkbiex174s96fywmz\"\n  }, {\n    \"score\" : 1.7782274506647685E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"mdgy\",\n    \"script\" : \"incou8iehqtu75cx7h73gpdwsr0azpz9xpkx7y5jsuimd80htf4y3uuqwopgcwl9l1gm8zhwlh3ob\"\n  }, {\n    \"score\" : 8.296917886225556E307,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"w0us\",\n    \"script\" : \"9v1kws6u1mqil97av6u1wuokl8x3bjvesxquxea09dmtfm1lo032419cj9ify419r18fec8itmsjno8xq2zjajcujrmovk7beybdmia1eazk7bqemkloa3rj6apu3sdwvli9bwe57po4z45dn1ugc1sa6lxd1ebhoq5jb73h8i731iv9cq95blhn\"\n  }, {\n    \"score\" : 6.267585684315663E306,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"q255\",\n    \"script\" : \"st6ki2683r11fpxx24mlr8azymnnw4duyhwufshjunpakbrpb77q5j9agwv2atvk3xd8uc19lrmwpxy8toy5bp6k1gzb7wtyf3nx55lc8wdae572shoinjeeo2xnq\"\n  }, {\n    \"score\" : 1.228848141114832E307,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"oy0u\",\n    \"script\" : \"fx1p2iobp917tsv54snfig1hbw9u89t8wniy4p63faarunc64gcpawjiy4ho9mufv7kmvzbe4mtswmhk84rtlsjcu6s9et859pqi74j519969\"\n  }, {\n    \"score\" : 1.6914928882223516E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"09k1\",\n    \"script\" : \"kntt087ixntu0g6rs3k1io3k19smzfphxeuyudgd8xx1jfgs6cw875p2jsy3kaqpthqccewyen7urb6k06qefgsby345xg9mqwenrs\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "159acdbd-154a-4307-8dbd-7bfe41009a88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.507041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "9191a87c-1e3e-48d5-892e-a5bb5f9d9303",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/1uwobqanyrefdy20cbjqwr0dxc685ziga1t2zqdr5ro08m4q1vim6d9rc0oiqjozsrfi0bdcl25xg7mi40sgfn6c7sxe732y9bz2aqz6m9xhj72xtlajaz6kwzog8ciqba0kk9katgbxnlyftecukmr8lzv8oci62ciqzyizx2f/eyyuvdfxrtoigp2x7bf9fjswyi42z/Micheal+Kemmer",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9191a87c-1e3e-48d5-892e-a5bb5f9d9303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.506425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "4bd25a8b-73e5-448c-be8a-22bfabad9914",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/eqihk7i0uaovqnx3tnh99y1wns80mhzee3licdkcz56sgecqvhxtpiwvygzisp4mnbu8hthrym3dkdn8sc045ncme2njgj382v9dgvlw034r3eru56t80jxmrr6fcuzjmrjqlfgv04oidj2nl0p3bg3ufaped9iz7e4fo9mp2nkq6b/w70irikbva/Shemeka+Braun",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4bd25a8b-73e5-448c-be8a-22bfabad9914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.506342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "20339c69-4b7d-4146-8338-ac8783bc957b",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/sfd8h5oxv7ay3spg979kzfzsi7wbolf0zm9f8oe8i5ttqwwemuq0uv5veio1fbkh75b545ekdquf6d6795hwftw223o9udxbfeud8e8ai7vyc1cb7dxubz3sx59jd8k1f9bh19tdkvh8cnggvx8cqzuhj83v7qrbkbxj7t7if3iq6k80/zxlx1n8ypsfb52ciamxrazbh2/Adriene+Haley",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 2.9438248016475943E306,\n  \"matchStatus\" : \"Match\",\n  \"id\" : \"0d37\",\n  \"script\" : \"er2pld17dkm6ng0wng0m1rsneschvewm9az46xblbjt9j2kap1y6f4v1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20339c69-4b7d-4146-8338-ac8783bc957b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.506246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "6c0c135a-8ea9-4e3b-937e-c4af9d19fd9c",
    "name" : "Romanize japanese names, based on the name in KANJI - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6c0c135a-8ea9-4e3b-937e-c4af9d19fd9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.506027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "b8295338-33ee-46e8-ab56-016c62a87966",
    "name" : "Romanize japanese names, based on the name in KANJI - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b8295338-33ee-46e8-ab56-016c62a87966",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.506011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "091b56d5-716b-4c3d-b076-723c161aac36",
    "name" : "Romanize japanese names, based on the name in KANJI - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "091b56d5-716b-4c3d-b076-723c161aac36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.505995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "a7a2d723-1ef6-4bc8-8347-b55e39873d9b",
    "name" : "Romanize japanese names, based on the name in KANJI (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Courtney\",\n    \"lastName\" : \"Dooley\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.4679839862266598E308,\n      \"candidateName\" : \"2022-06-18T09:32:27.505044Z\",\n      \"probability\" : 8.240679608310244E307,\n      \"predScoreFamilyName\" : 1.4577396492124207E308\n    }, {\n      \"predScoreGivenName\" : 1.4024250698531015E308,\n      \"candidateName\" : \"2022-04-15T08:52:27.505085Z\",\n      \"probability\" : 8.881581706853786E307,\n      \"predScoreFamilyName\" : 1.79652969886121E308\n    }, {\n      \"predScoreGivenName\" : 4.1122161715796736E307,\n      \"candidateName\" : \"2023-01-13T11:14:27.505131Z\",\n      \"probability\" : 5.402560296372665E307,\n      \"predScoreFamilyName\" : 6.339355099920186E306\n    }, {\n      \"predScoreGivenName\" : 5.688373662323392E307,\n      \"candidateName\" : \"2022-06-20T11:53:27.505175Z\",\n      \"probability\" : 5.039262701172036E307,\n      \"predScoreFamilyName\" : 5.391353896958836E307\n    }, {\n      \"predScoreGivenName\" : 7.826616393064153E307,\n      \"candidateName\" : \"2022-11-02T10:32:27.505218Z\",\n      \"probability\" : 7.102078148751743E307,\n      \"predScoreFamilyName\" : 6.476125731757923E307\n    }, {\n      \"predScoreGivenName\" : 9.735666633229013E307,\n      \"candidateName\" : \"2022-08-04T08:50:27.505263Z\",\n      \"probability\" : 4.329775850615337E307,\n      \"predScoreFamilyName\" : 2.359756680046759E307\n    }, {\n      \"predScoreGivenName\" : 1.5842790055728904E308,\n      \"candidateName\" : \"2022-04-11T08:05:27.505305Z\",\n      \"probability\" : 1.0777002311005191E308,\n      \"predScoreFamilyName\" : 1.2723444455085013E308\n    }, {\n      \"predScoreGivenName\" : 1.4579403622783911E308,\n      \"candidateName\" : \"2023-02-11T11:42:27.505347Z\",\n      \"probability\" : 1.5846552558795903E308,\n      \"predScoreFamilyName\" : 7.754336668523844E307\n    } ],\n    \"orderOption\" : \"py6ygnycduibdxktogout99l45ao03ysztn4bwx4k90bwfft2z40eamaavhcf9yuv2b2bqhj1h0w4jc38psfaqd5geluxc98sro4ndpn5zcl\",\n    \"id\" : \"k2by\",\n    \"script\" : \"cm8nodu4ldn0ap5y4yimraqfxqc2n4qy1ad1dojw7\"\n  }, {\n    \"firstName\" : \"Carmen\",\n    \"lastName\" : \"Rodriguez\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.2549710634858804E307,\n      \"candidateName\" : \"2022-09-05T09:16:27.505548Z\",\n      \"probability\" : 5.47647991934529E307,\n      \"predScoreFamilyName\" : 1.2771151709462057E308\n    } ],\n    \"orderOption\" : \"9w4x4k9l38y197r0x4pz86989p4h81u4c9l6f9d7poefype7h21jecnhivmg21uiy56kt93fb47oe34hql8gsrqt62n0ty31cf\",\n    \"id\" : \"b7t0\",\n    \"script\" : \"vw8n26c3tvpciy6ln9cl0v0l3inibjgnw33tqii8gnpeewb68q373ddk90bkjn0bb\"\n  }, {\n    \"firstName\" : \"Chin\",\n    \"lastName\" : \"Connelly\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.2007636842764744E308,\n      \"candidateName\" : \"2022-09-17T08:17:27.505748Z\",\n      \"probability\" : 2.362270165557041E307,\n      \"predScoreFamilyName\" : 7.869823623200117E307\n    }, {\n      \"predScoreGivenName\" : 6.699626969230266E307,\n      \"candidateName\" : \"2022-10-18T10:02:27.505792Z\",\n      \"probability\" : 6.653493944745862E307,\n      \"predScoreFamilyName\" : 7.570447518705162E307\n    } ],\n    \"orderOption\" : \"6hiax9uv5khzt9pyjjkna61q6excxa46fuanvz249fm5yuqe674bd1t6lzxonyh7aaybx3vf\",\n    \"id\" : \"3p7g\",\n    \"script\" : \"bqwvorj0uo937na0pan6cx6c7t8dzs690yzxj74vt7f793u0pk0f3eaw7skiyojkdrihvmp8qym7xuhugofpyoi7j9vwl5kmrwy598su1o3igedn6vxj4fwkqjato8wt7p3fl1j1iqlhqe2dccc62ftxuosbpt8cnbnb2oe5iacrixm140jhb8si\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7a2d723-1ef6-4bc8-8347-b55e39873d9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.505969Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "407c7253-2a47-49dc-8832-38b9316db017",
    "name" : "Romanize japanese name, based on the name in Kanji. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/9lz51mxd22cunw18x6vp97t7hz09sybn44qyrgwzu0l9j9bmd1jjitgcp2pfts1tjpdj84tq35zarpl23odwwbsx0xx34i/u1mms8ls62tw0pm6o1s7q0u87hoqu6q72ot6v40zn4xi5pkywf16yyy4yoaehrli4u99qwmhk6g12nheyqyrpeytm5fxqop8qvluky7657ei4vma01wk4ikf8ck0pk0gm2qvmxqblcg8id3zcg2z1p6jxrbvbs4am72djwxei8t4llnj80occetonhnyklu",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "407c7253-2a47-49dc-8832-38b9316db017",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.504942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "82e86a8f-ea2b-4c49-a720-fa412a887a95",
    "name" : "Romanize japanese name, based on the name in Kanji. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/ugbjxtw6epokoc1yjvhpzy72iuwzsm28z9jr13w9i2md0ve2kqokmbm8ebab7b3lvn2rcgo68g9nfbzyuw9qi5vb40n2kiep8ul4xw08uwg8uvimgpnoikfbysyly0x7ka4mxn04f2g24b52ns3onswx7gg86fvjie6ddh48blh7zju36ugnp/6jr53vp2rrvo3atx3i7itz4ox1f4kolrg4qbi6fgrj1jdfjxtsmj39hiqmhq67fhop6mzpkrawggfoydkau4lw9x0m6710x9ec0p0miotsffxd3anekwcxu68pd9iu9brin6juste",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "82e86a8f-ea2b-4c49-a720-fa412a887a95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.504902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "2cc2d0ea-d391-4d27-a946-389a20ac1b43",
    "name" : "Romanize japanese name, based on the name in Kanji. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/6nczhsy6uzg5lgjd3crfv5cmj8jjaqlnpxh54q89cda2r97v4ayectldyu5t49id6z7xl95ycbx5bn4jud6jgnr06mrrekil9dw55w9g0mdujn7av6pku0aym9v9bezpiqx7ukgoyfbiu4jgwhufv7y473jvbru9t4r/dblnep4rhv08wgzbuo4z3dxhh0bkjk",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Brendan\",\n  \"lastName\" : \"Monahan\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.3060493558548947E308,\n    \"candidateName\" : \"2022-05-20T08:38:27.504666Z\",\n    \"probability\" : 1.2420291625966022E308,\n    \"predScoreFamilyName\" : 1.270684844513286E308\n  } ],\n  \"orderOption\" : \"90yb7ipqztei08uejzqt465onhzcto8tyeawrere89pvob9b2scb0bavbft7165kr463rkntn2nuxda0yw1f6o7b9436cmrgf6ods1hbyg2hzjmpkdox2mromphkybeb44ig8514ewo7658dshbm0lniekzh\",\n  \"id\" : \"pnuf\",\n  \"script\" : \"mewj2187bczxrcbwo8zangfz97fp9q9624xcry9i2gqfzv6c4qzg24wz2cftxfrox8twu1fcyrkiekrt1wnn68odqdgnfepkhhi3wf5mn4x0cpmqkeb76wik4jrvriew9sei47ls9cufixj8h7fsv1v5uuetc3j1op0r6515zvetr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cc2d0ea-d391-4d27-a946-389a20ac1b43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.504852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "5f95592c-29b9-4ea5-a664-6ddddd066317",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5f95592c-29b9-4ea5-a664-6ddddd066317",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.504569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "c14cd20c-b031-4898-a051-ee30bbb248cf",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c14cd20c-b031-4898-a051-ee30bbb248cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.504555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "027e7b3b-029f-4bb2-a1f2-6da8ee4fc4b5",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "027e7b3b-029f-4bb2-a1f2-6da8ee4fc4b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.504539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "7e646b2f-c182-41b9-b5bf-756253b45f2d",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Clifton\",\n    \"lastName\" : \"McLaughlin\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.5845953967490507E308,\n      \"candidateName\" : \"2022-06-28T09:50:27.501623Z\",\n      \"probability\" : 1.748709127889994E308,\n      \"predScoreFamilyName\" : 4.108663864670621E307\n    }, {\n      \"predScoreGivenName\" : 9.872766920197266E307,\n      \"candidateName\" : \"2022-08-20T09:24:27.50167Z\",\n      \"probability\" : 1.7074982935312432E308,\n      \"predScoreFamilyName\" : 1.5853997725285789E308\n    }, {\n      \"predScoreGivenName\" : 2.73840339436425E307,\n      \"candidateName\" : \"2022-06-24T11:43:27.501714Z\",\n      \"probability\" : 2.0793737467330987E307,\n      \"predScoreFamilyName\" : 2.4499189288563524E307\n    }, {\n      \"predScoreGivenName\" : 3.857168380975054E307,\n      \"candidateName\" : \"2023-03-05T11:09:27.501758Z\",\n      \"probability\" : 1.460387600408109E308,\n      \"predScoreFamilyName\" : 3.6951274990135076E306\n    }, {\n      \"predScoreGivenName\" : 1.0576689037214978E308,\n      \"candidateName\" : \"2022-07-07T11:27:27.501801Z\",\n      \"probability\" : 1.6050438355113186E308,\n      \"predScoreFamilyName\" : 1.1715133598902538E307\n    }, {\n      \"predScoreGivenName\" : 1.1825941575561604E308,\n      \"candidateName\" : \"2022-08-25T08:55:27.501842Z\",\n      \"probability\" : 8.194690764059166E307,\n      \"predScoreFamilyName\" : 6.660385590782459E307\n    }, {\n      \"predScoreGivenName\" : 1.3244607324201391E308,\n      \"candidateName\" : \"2023-02-19T11:38:27.501883Z\",\n      \"probability\" : 4.171309408067699E306,\n      \"predScoreFamilyName\" : 8.53125404364612E307\n    }, {\n      \"predScoreGivenName\" : 3.2024482062748043E307,\n      \"candidateName\" : \"2023-01-01T10:08:27.501925Z\",\n      \"probability\" : 7.59107536086041E307,\n      \"predScoreFamilyName\" : 1.3326620654105145E308\n    } ],\n    \"orderOption\" : \"y5sxy3rjtmwt6vz3q7zfge8h75ykvyc8xjz8ljl8fsf3eyjuiop1o5084f9aqldqb59ajv8twrkqnul3ucnsuk7k29561glumrhk6lve810x19px1mlxzqw7c7y2w7haauehdjvfqjvp0td\",\n    \"id\" : \"k255\",\n    \"script\" : \"x8fz9kow\"\n  }, {\n    \"firstName\" : \"Lavenia\",\n    \"lastName\" : \"Terry\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.2133724694837802E308,\n      \"candidateName\" : \"2022-10-17T10:45:27.502128Z\",\n      \"probability\" : 1.0069422982684002E308,\n      \"predScoreFamilyName\" : 5.041606151959256E307\n    }, {\n      \"predScoreGivenName\" : 8.164588500438406E306,\n      \"candidateName\" : \"2023-02-27T09:46:27.502173Z\",\n      \"probability\" : 3.200882594932429E307,\n      \"predScoreFamilyName\" : 1.788437108240014E308\n    }, {\n      \"predScoreGivenName\" : 1.3754899491084E307,\n      \"candidateName\" : \"2022-12-31T09:29:27.502217Z\",\n      \"probability\" : 9.423341668262107E307,\n      \"predScoreFamilyName\" : 1.486448476246182E308\n    }, {\n      \"predScoreGivenName\" : 3.696620626701742E307,\n      \"candidateName\" : \"2023-01-04T11:46:27.502259Z\",\n      \"probability\" : 1.3126985437117085E308,\n      \"predScoreFamilyName\" : 8.134657582910595E307\n    }, {\n      \"predScoreGivenName\" : 1.7057229978401715E308,\n      \"candidateName\" : \"2022-08-23T08:51:27.502301Z\",\n      \"probability\" : 1.3440433791992783E308,\n      \"predScoreFamilyName\" : 1.3109502384490985E308\n    }, {\n      \"predScoreGivenName\" : 1.2884465579937483E308,\n      \"candidateName\" : \"2022-05-06T09:50:27.502343Z\",\n      \"probability\" : 7.073645244710543E307,\n      \"predScoreFamilyName\" : 5.911037132488735E307\n    }, {\n      \"predScoreGivenName\" : 3.726663220156353E307,\n      \"candidateName\" : \"2022-08-10T11:14:27.502386Z\",\n      \"probability\" : 5.295676366761148E307,\n      \"predScoreFamilyName\" : 9.368107951112873E307\n    } ],\n    \"orderOption\" : \"02xbmo8c06d388ybgqh3qi4qq8imwu8t26lx65nvh6rv82gev3dwsn1gagn3iqsuk2ptfzftcmlplqzyxq\",\n    \"id\" : \"jgkz\",\n    \"script\" : \"qfdzhf85ajdpe2o30uqr7s06ebq93wb65crssg0ij9azas73ml1urwyf5laiuhhv3aenagj89rvw91tretvy7p7sqw9cb0gutgg7aodxnxhc0bum8t6x3kyi2t43cqgergi6b69\"\n  }, {\n    \"firstName\" : \"Flavia\",\n    \"lastName\" : \"Quigley\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.696637748631747E307,\n      \"candidateName\" : \"2022-05-09T11:54:27.502585Z\",\n      \"probability\" : 1.356686268392006E307,\n      \"predScoreFamilyName\" : 9.816232860059851E307\n    }, {\n      \"predScoreGivenName\" : 7.99380805884001E307,\n      \"candidateName\" : \"2022-10-25T08:53:27.502629Z\",\n      \"probability\" : 1.7142609426886046E308,\n      \"predScoreFamilyName\" : 1.304889644198777E308\n    }, {\n      \"predScoreGivenName\" : 1.820774238732328E307,\n      \"candidateName\" : \"2022-11-20T08:26:27.502671Z\",\n      \"probability\" : 1.2055063499463267E308,\n      \"predScoreFamilyName\" : 8.642209128315843E307\n    }, {\n      \"predScoreGivenName\" : 1.6947624778752682E308,\n      \"candidateName\" : \"2022-08-21T11:45:27.502716Z\",\n      \"probability\" : 1.7005861097409091E308,\n      \"predScoreFamilyName\" : 1.329131248360345E308\n    }, {\n      \"predScoreGivenName\" : 1.5980279743904952E307,\n      \"candidateName\" : \"2022-10-20T11:23:27.502759Z\",\n      \"probability\" : 9.641593682146105E307,\n      \"predScoreFamilyName\" : 4.0118712943898413E307\n    } ],\n    \"orderOption\" : \"wnitmha87yvd8jgi22mbazz7gaeh0o6syjq3s99si5y3zq833ahfljli0dq\",\n    \"id\" : \"5135\",\n    \"script\" : \"ddz1brhi4bjvjy4d6eqom64j2kf39699km7u6pfden07j22fktn1308dwxirnlpd\"\n  }, {\n    \"firstName\" : \"Raphael\",\n    \"lastName\" : \"Nitzsche\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.157824510943433E308,\n      \"candidateName\" : \"2022-11-15T09:24:27.502955Z\",\n      \"probability\" : 1.5064204446086318E308,\n      \"predScoreFamilyName\" : 1.7373054422476469E308\n    }, {\n      \"predScoreGivenName\" : 1.2504493505652214E308,\n      \"candidateName\" : \"2023-01-22T10:05:27.502999Z\",\n      \"probability\" : 1.1088028408105563E308,\n      \"predScoreFamilyName\" : 1.2082783009949064E308\n    }, {\n      \"predScoreGivenName\" : 2.4701977316944423E307,\n      \"candidateName\" : \"2022-08-27T11:27:27.503043Z\",\n      \"probability\" : 5.697886129053074E307,\n      \"predScoreFamilyName\" : 7.826343235493382E307\n    }, {\n      \"predScoreGivenName\" : 1.5451181882290731E308,\n      \"candidateName\" : \"2022-12-11T08:49:27.503089Z\",\n      \"probability\" : 1.4146486215189484E308,\n      \"predScoreFamilyName\" : 6.710659882405235E307\n    }, {\n      \"predScoreGivenName\" : 6.499066051998084E307,\n      \"candidateName\" : \"2023-01-06T09:41:27.503132Z\",\n      \"probability\" : 1.5007458689056734E308,\n      \"predScoreFamilyName\" : 1.4662642661981846E307\n    }, {\n      \"predScoreGivenName\" : 3.696713847132454E307,\n      \"candidateName\" : \"2022-04-13T11:37:27.503176Z\",\n      \"probability\" : 9.970720584135522E307,\n      \"predScoreFamilyName\" : 1.3068889669152164E308\n    }, {\n      \"predScoreGivenName\" : 4.76138579470359E307,\n      \"candidateName\" : \"2023-01-08T08:16:27.503219Z\",\n      \"probability\" : 1.4551926835307713E308,\n      \"predScoreFamilyName\" : 1.4391211162852555E308\n    }, {\n      \"predScoreGivenName\" : 4.254294185986923E307,\n      \"candidateName\" : \"2022-05-05T09:38:27.503262Z\",\n      \"probability\" : 7.165986582424768E307,\n      \"predScoreFamilyName\" : 6.156650352110919E307\n    } ],\n    \"orderOption\" : \"kdixhe57dnc401mgl2id6uplz8edizfs7dffo7lt0jga6swl5nqb27scaigonb7vykqyaq9q0s13zicmbaa0f4bz0jcwxn8zdocichb59j9rk56ycg3dqfszyctgyv8ohhdwkxy6wnkt1uetsc99t15mb8wxw2tqtt58zyqst03iag0326b1lth1gw93\",\n    \"id\" : \"224e\",\n    \"script\" : \"skzz7bofor2rcxgvv7mp6lb7pwz6vq1piz2ow39sv002mqh891bkgw4f1xbhqlzvqi6iv6ow1o81kfytr33sap2fypoirvq3rvvmlu1uq3651\"\n  }, {\n    \"firstName\" : \"Lacy\",\n    \"lastName\" : \"Sawayn\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.219690006136442E307,\n      \"candidateName\" : \"2022-07-16T08:34:27.50346Z\",\n      \"probability\" : 1.0410060456099709E308,\n      \"predScoreFamilyName\" : 8.25243135419558E307\n    }, {\n      \"predScoreGivenName\" : 7.398240410078993E307,\n      \"candidateName\" : \"2023-02-10T08:00:27.503504Z\",\n      \"probability\" : 8.452142213055234E307,\n      \"predScoreFamilyName\" : 8.122476366156554E307\n    }, {\n      \"predScoreGivenName\" : 1.1825100949404664E308,\n      \"candidateName\" : \"2022-05-21T11:38:27.503548Z\",\n      \"probability\" : 3.6453856386197304E307,\n      \"predScoreFamilyName\" : 1.3534129845890914E308\n    }, {\n      \"predScoreGivenName\" : 1.6950749216779042E308,\n      \"candidateName\" : \"2022-05-11T08:29:27.503598Z\",\n      \"probability\" : 5.441981307564448E307,\n      \"predScoreFamilyName\" : 1.3590907763775468E308\n    }, {\n      \"predScoreGivenName\" : 4.3426195195542083E307,\n      \"candidateName\" : \"2023-02-12T10:53:27.503642Z\",\n      \"probability\" : 6.114498203964792E307,\n      \"predScoreFamilyName\" : 9.812522564864484E307\n    }, {\n      \"predScoreGivenName\" : 1.1583437556446156E308,\n      \"candidateName\" : \"2023-01-22T08:03:27.503687Z\",\n      \"probability\" : 1.2257049954776043E308,\n      \"predScoreFamilyName\" : 5.754777859805232E307\n    } ],\n    \"orderOption\" : \"0vd0x8og9g3qysmebkvgpskrafohdmtlfrz2bhhgmcqqm7ljsaep91okqs7vw4rhz577zhk7afviteybtw0kmp3l2l2b9l5v9j8ga0azwpav8abea55wk6juobymjxk9q4j5s4oaesjdbv1lrudmu1qjvqy7z\",\n    \"id\" : \"5u46\",\n    \"script\" : \"wgjexapds6qnu8104f25bjpztao80upluzr0qqsddxtccg2r2psqmsdd1pwhyu6imi\"\n  }, {\n    \"firstName\" : \"Carmela\",\n    \"lastName\" : \"Schiller\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1997336909019411E308,\n      \"candidateName\" : \"2022-10-27T09:18:27.503892Z\",\n      \"probability\" : 1.4802118313013553E307,\n      \"predScoreFamilyName\" : 3.7722896074931944E307\n    }, {\n      \"predScoreGivenName\" : 1.0271470035178977E308,\n      \"candidateName\" : \"2022-10-09T08:07:27.503937Z\",\n      \"probability\" : 1.4689913505738441E308,\n      \"predScoreFamilyName\" : 4.054100150852206E307\n    }, {\n      \"predScoreGivenName\" : 1.1568812339308306E308,\n      \"candidateName\" : \"2022-08-05T10:31:27.503981Z\",\n      \"probability\" : 1.0656560099427454E308,\n      \"predScoreFamilyName\" : 2.5529842054420237E307\n    } ],\n    \"orderOption\" : \"b4shpvw2tfmyrseizyv136xaes2flnl0fdmz4lpdykbt3k3wjsfhnkq\",\n    \"id\" : \"l7se\",\n    \"script\" : \"a0lv8rz44317hfpra5s1pfphwq68g1zszkx6p8cvo21a5zfb3ywk3a9hd4cqzpqmh05196nicn299608a7f5u8t9yix0sx3ouqmwg26ayv8mgomrbern5e37unppf1yt48oktnn3ggfxr0njihuxtwtvldhmsmja5ga7h9vpko0kmjg\"\n  }, {\n    \"firstName\" : \"Maxwell\",\n    \"lastName\" : \"Corwin\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.636574555384856E306,\n      \"candidateName\" : \"2022-11-27T08:16:27.504176Z\",\n      \"probability\" : 6.587571597557028E306,\n      \"predScoreFamilyName\" : 7.561929090404737E307\n    }, {\n      \"predScoreGivenName\" : 1.3221546770017432E308,\n      \"candidateName\" : \"2022-07-12T10:51:27.50422Z\",\n      \"probability\" : 1.4051333696936523E308,\n      \"predScoreFamilyName\" : 1.0030573803644461E308\n    } ],\n    \"orderOption\" : \"bzsqwcvywsrz5fglxf9z1ej1rzukr1pv5panxfognvijf5102ltt3v0awclxsm9iupkf1e0xsiuq9oagpxn4a9n4mnj3cl0\",\n    \"id\" : \"14y1\",\n    \"script\" : \"16s8mc1te7ejnlc9nh48jxpj2syf91sanafks84occbtri78vy3zqnw855dol9mw6kjqmtol962y0dxbbaweolvzovwb59utrneb4kz61v9fybum69apb2yaw98vreq7d80qq1s56vtclg35o0et8kenlb8x7s009djw0jnkiw5wlc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e646b2f-c182-41b9-b5bf-756253b45f2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.504507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "0281552c-9a87-4353-a241-4506be5c6177",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/wawx7wnf1tjnkasu0wwedy26ot07e5bqyft4oitpwn2w4hak21tpyzqucenozrwvtqngbxfvlt3ooeb6brgrsh5c8yawyt2fycua09rh5j6aq6u15az5ex3f1jd4/6o6mqxdzook371wlrc4qhhoiw58namt1teujpx0e3loz4fr871wgaybb4virt87cnq4rck7epg8saq6whgaj9pr4nw983o9ct2mn3b2899wox52kkml4h50so1iog6go6fqxrxbbk38g8semkkwpkn3sfedyz/Male",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0281552c-9a87-4353-a241-4506be5c6177",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.501518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "f1407f5c-ded9-45b6-b889-a7c3f023b93f",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/0lgrucozdizezh649pnzujp046bq020f6cdpvpkoooufovf1dmhici7nr9lplvqrhremrsyi5aw5t9w01bdq3n1svy97kzhdywlfbnllrfn43r6orladshnoe930l9horkk5ml6jsgq4ddwa4kkuakcbgeowdhl6hb26sawf62wpbs0d4kfhq/4arpe8ern4r/Bigender",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f1407f5c-ded9-45b6-b889-a7c3f023b93f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.501455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "0b6ca2cb-1c38-48db-8a8d-412a0a4dac3e",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/mmnu72ntk4z3yb0zmxhesqp76inktv94035u8wv74t85l9gy5econwc7v1v1soma2albd6y6qu0skbncwofwyaf5n1tsl803q9todamw1awt8hhu980rsupxvjlbxamgmyjdc3scn75i9kliefxjy4bg7/sg9aob5xcgxkb5j43l43dz0tcgiwr4hmdzdm5jrak1j7y9k23sj4uau6j08j709mgzgo9t9rb1tnxv9qi7/Genderqueer",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Willa\",\n  \"lastName\" : \"Bayer\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 7.212055089240609E307,\n    \"candidateName\" : \"2023-02-15T08:25:27.501071Z\",\n    \"probability\" : 1.275486846325854E307,\n    \"predScoreFamilyName\" : 1.39276163206924E308\n  }, {\n    \"predScoreGivenName\" : 1.4168883612357751E308,\n    \"candidateName\" : \"2022-08-19T08:35:27.501116Z\",\n    \"probability\" : 1.5454061856931923E308,\n    \"predScoreFamilyName\" : 9.776762250331476E307\n  }, {\n    \"predScoreGivenName\" : 1.1843859271227716E308,\n    \"candidateName\" : \"2023-02-21T09:04:27.50116Z\",\n    \"probability\" : 1.4985546950909435E308,\n    \"predScoreFamilyName\" : 4.4918390498717257E307\n  } ],\n  \"orderOption\" : \"bc2m\",\n  \"id\" : \"m3f7\",\n  \"script\" : \"oj5j5zm0v04glihzflkd81u4bgp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b6ca2cb-1c38-48db-8a8d-412a0a4dac3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.50138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "cc155425-1543-4550-9e75-86d9eb04a70a",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/t4fumz0pk017zg3ixxn4fu5gzdo05oh70fvp8j477jfzlfebxdi2dd5bd20b5kv7ixvy326thjqdwvo/q171sk8u70i16flyxwrx8jmmevdal2gpxhw48rxxktuqtgvanun8ru12y4qtfulgandfb50b0od3r1s94cj3bwd2767ey2z09actsjtm0dtxwzwcylq9bgkeiwsqrod6uao6sxv46lww6abtsawoc53f1rep1xdta8pczzvcr3m4umgyhu91do53dm4il1pw",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "cc155425-1543-4550-9e75-86d9eb04a70a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.500977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "08ef9e8e-b04d-41fe-b03a-1b790d6bb2af",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/8h1za6wr93jl6v6x4laehhmy17a3v83na3p9fcmvw8k9hxy774zoh4dj96afyo5vcwkfqyyz42khq7c741q3kyjjesgc631rhyzw68nzw1h1qg6biwqrzulola5kb6t15va8cv76si2u1m24xls0hlf33ycnpgamdxv0ov12c7svylp66gnjkepz7x5cr1l2/9gmxoff2tmv9m95bngwlntvasbx6so5wj7nk8cen3ltgi1ttcz8bvyk368r3z6zdkvvyt99m6xsge691e253yw1dieza2uvm8p6calqu1gi7b7d0u7rrq74dpu4ujxpwpzowmxw8goobhwaqsndpog1y7n4ibv1akmkwf4s412tax",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "08ef9e8e-b04d-41fe-b03a-1b790d6bb2af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.500937Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "66b68090-006c-49b2-909a-481bfd044f3d",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/vd2k82i3tdcekjms9v1ul3hntpfbvhv6b/2o6kqsh9slne4nt7uvus7vsv0lecsop2o82tqxy1kex36bcq2iya1nnlb446thben3ip88zva039nzish7kxrg0ahfdkbolmvs3rj7xdd7c6a790bz0olpkvjstdddaf84vks5wljsdj8qma86i4eoz66xo",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Huey\",\n  \"lastName\" : \"Koch\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.5441259761544243E308,\n    \"candidateName\" : \"2022-05-29T08:02:27.500509Z\",\n    \"probability\" : 1.4090511365041915E308,\n    \"predScoreFamilyName\" : 7.582493710483659E307\n  }, {\n    \"predScoreGivenName\" : 2.37254427074697E306,\n    \"candidateName\" : \"2023-01-16T08:02:27.500551Z\",\n    \"probability\" : 1.7527207179458754E308,\n    \"predScoreFamilyName\" : 1.8918831174014523E307\n  }, {\n    \"predScoreGivenName\" : 1.6039310635974027E308,\n    \"candidateName\" : \"2022-10-30T08:33:27.500592Z\",\n    \"probability\" : 8.845199056407259E307,\n    \"predScoreFamilyName\" : 1.069466537616688E308\n  }, {\n    \"predScoreGivenName\" : 9.862734394996414E307,\n    \"candidateName\" : \"2022-12-27T11:51:27.500637Z\",\n    \"probability\" : 1.1834747818765773E308,\n    \"predScoreFamilyName\" : 1.6423327986199403E308\n  }, {\n    \"predScoreGivenName\" : 2.772536735089953E307,\n    \"candidateName\" : \"2023-03-10T10:22:27.500677Z\",\n    \"probability\" : 1.2671170288378982E308,\n    \"predScoreFamilyName\" : 1.5153485131069475E308\n  } ],\n  \"orderOption\" : \"k0j1spc7mgn32xgjvnihqzcfqar88gcklfuvlghptt27yg3ez0n8cyzpozkfm9qiifm3yjz00zbmuwsnx8rjwzxapwheq57wahvm3uyknxhbvanqo4heyxu5svyf5d8cx9jyjeir3lx8lsoahgec2yv6x22prr61zyxgjd7nnwqok8j3mgp\",\n  \"id\" : \"84qd\",\n  \"script\" : \"y9s2cl0k616lnfni7g2m0g76nvhvxo266xgoghhfcgnyl2qgujzheybhnqm1glm5gxswhp1b5dl59m910wvu3i4rv4uantwcgl4sre0heig677b3ejouyxmts5509lccxo8xc7thpsc1i2phksgt4h0ne1cxqoe8hn0r20pd3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66b68090-006c-49b2-909a-481bfd044f3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.500884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "d21d3bab-459a-46e9-a918-d0656b0a9a9a",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d21d3bab-459a-46e9-a918-d0656b0a9a9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.500416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "84ba09a9-0d16-45b7-82b0-a63893822da4",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "84ba09a9-0d16-45b7-82b0-a63893822da4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.5004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "e75e4c6f-6651-4ccb-99cf-f8c0b5d6ba07",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e75e4c6f-6651-4ccb-99cf-f8c0b5d6ba07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.500384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "d228c059-e823-4f20-8246-77622d25d5db",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Booker\",\n    \"lastName\" : \"Renner\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.5029849578877988E308,\n      \"candidateName\" : \"2022-09-19T08:10:27.498967Z\",\n      \"probability\" : 1.1403260234112173E308,\n      \"predScoreFamilyName\" : 3.1418119930359465E307\n    }, {\n      \"predScoreGivenName\" : 2.190251334160353E307,\n      \"candidateName\" : \"2022-04-10T08:28:27.499014Z\",\n      \"probability\" : 1.2156409256215137E308,\n      \"predScoreFamilyName\" : 1.477479130190341E308\n    }, {\n      \"predScoreGivenName\" : 1.4342110918232604E308,\n      \"candidateName\" : \"2022-07-07T08:28:27.499057Z\",\n      \"probability\" : 1.0556299283534303E307,\n      \"predScoreFamilyName\" : 1.7082911324795795E308\n    }, {\n      \"predScoreGivenName\" : 1.399542802313974E307,\n      \"candidateName\" : \"2022-05-16T08:39:27.4991Z\",\n      \"probability\" : 1.5665739302751694E308,\n      \"predScoreFamilyName\" : 2.2379157940723519E307\n    }, {\n      \"predScoreGivenName\" : 7.810590685478152E307,\n      \"candidateName\" : \"2022-09-03T11:37:27.499141Z\",\n      \"probability\" : 9.30975798155827E307,\n      \"predScoreFamilyName\" : 2.5407427946935663E307\n    }, {\n      \"predScoreGivenName\" : 1.146402644908147E308,\n      \"candidateName\" : \"2022-12-26T09:23:27.499186Z\",\n      \"probability\" : 1.5347505126451295E307,\n      \"predScoreFamilyName\" : 9.456036537569417E307\n    }, {\n      \"predScoreGivenName\" : 6.389877289795643E307,\n      \"candidateName\" : \"2022-07-19T08:50:27.499237Z\",\n      \"probability\" : 1.145927824051549E307,\n      \"predScoreFamilyName\" : 6.730161869524739E307\n    } ],\n    \"orderOption\" : \"bhvp05nsisd4orgumfd6iwdp0or4x2u43hmlv4bvpsmc7c0g9xeydwzczpmmedw82b6654k68msifn\",\n    \"id\" : \"uplh\",\n    \"script\" : \"123araqd0zo8j3j6lxn38fetg3oguabxrrf95332xhc75ha10qsj5k021exam5l0wyos69f83p5wna56izo6jp6m9lo7b8y3ed8c61tzmkofo9zp9m3n516p4rszmc4iwuuk87jzaw5ahqelr8kushruimybycclfn\"\n  }, {\n    \"firstName\" : \"Cyril\",\n    \"lastName\" : \"Bogan\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.760964177578974E307,\n      \"candidateName\" : \"2022-10-29T10:46:27.499444Z\",\n      \"probability\" : 1.1526839839843208E308,\n      \"predScoreFamilyName\" : 1.4407227321503057E308\n    }, {\n      \"predScoreGivenName\" : 1.2965546776839941E308,\n      \"candidateName\" : \"2022-11-17T10:57:27.499491Z\",\n      \"probability\" : 6.546468654200436E307,\n      \"predScoreFamilyName\" : 4.68845316455145E307\n    }, {\n      \"predScoreGivenName\" : 6.280966083188879E306,\n      \"candidateName\" : \"2022-10-14T08:47:27.499536Z\",\n      \"probability\" : 1.3025428108973596E308,\n      \"predScoreFamilyName\" : 1.704267842298332E308\n    }, {\n      \"predScoreGivenName\" : 7.79930198821968E306,\n      \"candidateName\" : \"2023-02-04T08:55:27.499581Z\",\n      \"probability\" : 9.001649205317373E307,\n      \"predScoreFamilyName\" : 1.5340141882789933E308\n    } ],\n    \"orderOption\" : \"zgudk5av4u0z4s5oga66v8ebarny7xakabk4n1aezp5hegbrm2uup1q8x6z300h7ct7xlf8zmcwu3rkv1stigebglj7dckl\",\n    \"id\" : \"5v13\",\n    \"script\" : \"llzl249su73yxbkv2g8t61kl9wolgih4iqjj580c8yfqq31pqsu0qpuxzwqgnt10uyb8zxl9ns8h0tlww0mz8ny4s530p2\"\n  }, {\n    \"firstName\" : \"Charlie\",\n    \"lastName\" : \"Ledner\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.894026565487738E306,\n      \"candidateName\" : \"2022-06-04T11:20:27.499783Z\",\n      \"probability\" : 1.6044281863912915E308,\n      \"predScoreFamilyName\" : 8.827277770035947E307\n    }, {\n      \"predScoreGivenName\" : 5.035584688010114E307,\n      \"candidateName\" : \"2022-05-26T09:11:27.499828Z\",\n      \"probability\" : 9.770327924360503E307,\n      \"predScoreFamilyName\" : 1.6873467034871537E308\n    }, {\n      \"predScoreGivenName\" : 1.9606589305663816E307,\n      \"candidateName\" : \"2022-08-27T08:06:27.499871Z\",\n      \"probability\" : 3.622780264212919E307,\n      \"predScoreFamilyName\" : 1.4417038665574706E308\n    } ],\n    \"orderOption\" : \"dw0fs6aabq8sckccw13724rt01v0onf4q2foucfq2ydq7bjfhqmmctdt\",\n    \"id\" : \"wf1v\",\n    \"script\" : \"wbhprfdf4yj9sm6k0gct0vbjgu9ajb0i05pvy7xpbw615n5vyfbwqf23ztq71iho\"\n  }, {\n    \"firstName\" : \"Ozella\",\n    \"lastName\" : \"Toy\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.86893759547257E307,\n      \"candidateName\" : \"2022-08-31T10:30:27.500072Z\",\n      \"probability\" : 1.3143217789981273E308,\n      \"predScoreFamilyName\" : 9.590861205841719E306\n    }, {\n      \"predScoreGivenName\" : 1.423778911201557E308,\n      \"candidateName\" : \"2022-09-20T08:46:27.500115Z\",\n      \"probability\" : 8.883165466217483E307,\n      \"predScoreFamilyName\" : 3.1515398290295457E307\n    }, {\n      \"predScoreGivenName\" : 5.452870836205584E307,\n      \"candidateName\" : \"2022-05-11T09:20:27.500156Z\",\n      \"probability\" : 5.395701083857917E307,\n      \"predScoreFamilyName\" : 7.391238633607964E307\n    } ],\n    \"orderOption\" : \"5x4r8c1tig8td8sxalq7v8cwgx0eoxx4245at08l6lgkh622ry14i0uc2hsg5j5kbwrm0dy1u9q1rihrwaitxw1sid9ylu42i9qhgsjumbjmnwxrql7yj2ig75myv169gam9t8xfuexe2p2q92gb9gppbx7ukx6qx43w0lat6bi\",\n    \"id\" : \"w5n6\",\n    \"script\" : \"4rgy7l1yx0uc9mo0el2cduz2fmznha7w6n9ocg7magf1avgtmhhpj5jrm5uw30sepkyk3qx99ecwfd5grzlwyngenzrd0j9qjhrk27b4k6usbfuqn0zetd8ad5r2qplkjbnh3rh6yfxmkmhhoofnhg9vpbp320\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d228c059-e823-4f20-8246-77622d25d5db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.500358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "1381a454-3fcb-46d5-a116-93699fac5547",
    "name" : "Infer the likely gender of up to 100 full names - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1381a454-3fcb-46d5-a116-93699fac5547",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.498855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "d67111c9-650a-47a8-a6d0-bea99821378e",
    "name" : "Infer the likely gender of up to 100 full names - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d67111c9-650a-47a8-a6d0-bea99821378e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.49884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "45ca201c-d2cb-43f4-8459-781ca3112abe",
    "name" : "Infer the likely gender of up to 100 full names - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "45ca201c-d2cb-43f4-8459-781ca3112abe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.498824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "1e60def4-a37e-4f75-9dce-adf8437621d4",
    "name" : "Infer the likely gender of up to 100 full names (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.898158106693034,\n    \"score\" : 58.70513761070946,\n    \"probabilityCalibrated\" : 0.5126480823151287,\n    \"name\" : \"Lorenzo O'Kon DVM\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"0et7\",\n    \"script\" : \"6a5y66aon17cakzj501up1lx9rmgf802lyvqaksqmcok0va4s4xn6wopu0v2tij3wt118q1rzg2sjwytxnnpci47z7zxhq5qcblq2817tk2w966exvdfmyx6cdsu36pnpiivzz5yho0cgon0f066e3ozgmwdw9fyi\"\n  }, {\n    \"genderScale\" : -0.4933964131694968,\n    \"score\" : 1.7718855075363416,\n    \"probabilityCalibrated\" : -0.27506644841788286,\n    \"name\" : \"Gaylord Langosh\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"ow07\",\n    \"script\" : \"et7p5iitqjnnqloxo2t1w2fnq9t5js5uq0kycx2sez29ovuhrkvl363swtr\"\n  }, {\n    \"genderScale\" : -0.2801275787659643,\n    \"score\" : 72.63097796940822,\n    \"probabilityCalibrated\" : 0.16100517705266015,\n    \"name\" : \"Dominic Walter\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"sjhg\",\n    \"script\" : \"usq3bb8lcq3kfffb4dh7yr84zli1yoeh7g8s21fqsfjufc8bszzpkecuk9g1juuvfmap622e3bhe1k95d9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e60def4-a37e-4f75-9dce-adf8437621d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.4988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "6d0b1e48-1b7b-4866-aadf-beb6fded179b",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Elden+Reilly+II",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6d0b1e48-1b7b-4866-aadf-beb6fded179b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.498311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "c828c919-eb28-4d05-a29d-875d0364557f",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Madeline+Kreiger",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c828c919-eb28-4d05-a29d-875d0364557f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.498245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "80b3294a-b4d9-406b-ad1d-9537f9bf486e",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Keturah+Nicolas",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.4147842823251593,\n  \"score\" : 76.00789912517992,\n  \"probabilityCalibrated\" : -0.6724188501680046,\n  \"name\" : \"Norene Ortiz\",\n  \"likelyGender\" : \"male\",\n  \"id\" : \"d8vf\",\n  \"script\" : \"e3ccnwxcmxm0fsp1r7iazgx4j9ryctrjczcj8xxp8ew8r4ctlstkskmrnrb33adav744aefy4nzplymw4jj0rm4htsudo192l6wp7f9m31f041oluk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80b3294a-b4d9-406b-ad1d-9537f9bf486e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.498174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "5fc0b216-ef65-43ae-9155-3e40353ae523",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5fc0b216-ef65-43ae-9155-3e40353ae523",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "8641c212-73e3-42d9-9060-9142da08f11f",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8641c212-73e3-42d9-9060-9142da08f11f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "66159033-2800-44da-a5ba-a5452564499d",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "66159033-2800-44da-a5ba-a5452564499d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "bfcb8b34-dfa9-4a8d-aeda-fe0f4a5c045c",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Floyd\",\n    \"genderScale\" : -0.5460448489846066,\n    \"lastName\" : \"Swift\",\n    \"score\" : 74.24496555488423,\n    \"probabilityCalibrated\" : 0.8593976934697898,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"ip24\",\n    \"script\" : \"hfi3jwv0lkwaqk5opi0adrdy2rr937ilpcqudhpsi7g6sri59634l89odyxtkps8nlcx74nw68k7yzeb2gxo7x642pvclctq3usrezpgcu6hiam6myni3ki6vnjudni784h9dk01tqv4rigadpd1xr57lxbj0iq43mp7kqzypj7nd4wg1g7yeo\"\n  }, {\n    \"firstName\" : \"Denver\",\n    \"genderScale\" : -0.32832837202855103,\n    \"lastName\" : \"Dietrich\",\n    \"score\" : 39.75381809634939,\n    \"probabilityCalibrated\" : 0.8901947549880826,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"x7vu\",\n    \"script\" : \"7fw3czccq3bdbnxyzum0tzaqskgo4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfcb8b34-dfa9-4a8d-aeda-fe0f4a5c045c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "2521d54f-a639-4139-bc33-c769c7148998",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Becker/Myrta",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2521d54f-a639-4139-bc33-c769c7148998",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "e7993557-feac-4e28-9ae2-385ea1d8a2c6",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Beahan/Teodoro",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e7993557-feac-4e28-9ae2-385ea1d8a2c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "489e6c22-e09e-448e-9ba5-fb8824fb9253",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Zulauf/Arlinda",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Bennie\",\n  \"genderScale\" : 0.7778148248334025,\n  \"lastName\" : \"Trantow\",\n  \"score\" : 31.71047924700161,\n  \"probabilityCalibrated\" : -0.20721552036215307,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"dr8s\",\n  \"script\" : \"uv0qjzgpu2d7g28ubmk5tmv8kopuc1g09v53fuffcuuala5gxr5pngj97axxdxmvve3ch5hhlypfk3s4gp9gmkxqtqtooga1wsnh07c1wvctz1kfdwptke9pxkf3be64lhone5e9bnlt0klzzhl5uh7w7149zb1v9aviy3dz65kacf3ei2w3cnsqwc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "489e6c22-e09e-448e-9ba5-fb8824fb9253",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "53e2cf18-8bd9-41c1-a199-06c216f15761",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "53e2cf18-8bd9-41c1-a199-06c216f15761",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "b7666a0e-7b11-4acc-81da-510b20a2e553",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b7666a0e-7b11-4acc-81da-510b20a2e553",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.49709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "62561187-cfda-4190-a9f9-0e546d4a617c",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "62561187-cfda-4190-a9f9-0e546d4a617c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "27a8cd0a-0560-47ff-9cfc-2de015bf00b2",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Son\",\n    \"genderScale\" : -0.9093814556343616,\n    \"lastName\" : \"Leuschke\",\n    \"score\" : 9.146555732720852,\n    \"probabilityCalibrated\" : 0.6708875143582675,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"34ph\",\n    \"script\" : \"iolthvd0ccvi39356j36cu2nssxdtkwhspkess5c87vgom29u07dfs0g7efrnl6ld2ap1fpvqjo0x8rp7j9bf\"\n  }, {\n    \"firstName\" : \"Marquitta\",\n    \"genderScale\" : -0.9708431747202366,\n    \"lastName\" : \"Miller\",\n    \"score\" : 87.61463246144037,\n    \"probabilityCalibrated\" : -0.9856564227058207,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"eqj3\",\n    \"script\" : \"ztwgrjmf63w1jemfcf9muz9hsmezxake8xeiudnk3n4fdolk60yegdekk8wghwbi7kgpwwebu4an0f4cfm655msbt1a80l3ekz7e7r3nphc1s4mel7ovv8jiyd7l2y5zf6u\"\n  }, {\n    \"firstName\" : \"Emerson\",\n    \"genderScale\" : -0.9494001761473911,\n    \"lastName\" : \"Lesch\",\n    \"score\" : 52.67687241863619,\n    \"probabilityCalibrated\" : -0.12367871529842667,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"8z2d\",\n    \"script\" : \"kh7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27a8cd0a-0560-47ff-9cfc-2de015bf00b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.497052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "7437835c-ed20-48b6-a6c5-cf6e77038595",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Zona/Hamill/905gsrmrmxakquwjz8496cnhi6fij9npg4jbecjdmcqs6ae86ufoisdvp626w4xufc6b5kwfjq1iiz5qyk8mq",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7437835c-ed20-48b6-a6c5-cf6e77038595",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.496546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "7af8bafd-4568-4ea6-abb1-9fc83945af0d",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Danny/Leffler/5qsua5s9owe6p67ryur3c22pzydm0pclfkvqyg64y7yc44iy3gyvwt8uix5sm8in8f8as1anrorgt58g8af541x1btjagk99vglw3sqoxg3d8is7rfozzsu8yiu4dy07dzsq31cq1ubwy5z29sjv14zn63wq",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7af8bafd-4568-4ea6-abb1-9fc83945af0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.49647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "b996eb4e-6a42-4b80-a8da-e8703052888f",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Kendall/Olson/86nd8nil8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Delinda\",\n  \"genderScale\" : 0.6450871084727603,\n  \"lastName\" : \"Keeling\",\n  \"score\" : 3.9631121307276973,\n  \"probabilityCalibrated\" : -0.9859616170380205,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"i2m5\",\n  \"script\" : \"nt7t9gmp6zonkj0525iuouv4xl4nya844zpd12gkvqm7mj1nlx7id5tnimzwrjkq9eqave4dx682z58va78x7uvuvb0aq74qnh9wlm1r5g14t5y79gz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b996eb4e-6a42-4b80-a8da-e8703052888f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.496383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "9764413e-3ae0-4361-bb08-209bdcdfa1bb",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9764413e-3ae0-4361-bb08-209bdcdfa1bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.496097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "7096e754-30cb-458f-b449-f43b4bd90b8a",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7096e754-30cb-458f-b449-f43b4bd90b8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.496082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "1951b628-f92b-4139-a411-322ffd20a747",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1951b628-f92b-4139-a411-322ffd20a747",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.496066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "a562793e-9c2f-4459-8519-cdef49dd20d2",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.8735211565598071,\n    \"score\" : 92.25917160785632,\n    \"probabilityCalibrated\" : 0.3539305839480038,\n    \"name\" : \"Desmond Hoeger\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"8m5k\",\n    \"script\" : \"kpya3swhf9lhk63h5v8izlp15m5fvaaxeqxvrn1d9j6akd0dsvbpvprc785okx9v21rtk65wf0nobhu9hy72i8rooc0kpkrehqen2aq28ftbz7d0wq5mwdy4c5afee5ulp8twm3mqu0byeqb2pxr0521l\"\n  }, {\n    \"genderScale\" : -0.3503653725437297,\n    \"score\" : 59.99314290005009,\n    \"probabilityCalibrated\" : -0.5821418169097425,\n    \"name\" : \"Emiko Heathcote\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"3v98\",\n    \"script\" : \"8ia5efxz3cos0gu2x9m9ry3iw614f22\"\n  }, {\n    \"genderScale\" : 0.9979755111737585,\n    \"score\" : 61.594446522786775,\n    \"probabilityCalibrated\" : -0.9797080242836727,\n    \"name\" : \"Jessie Heathcote III\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"z00c\",\n    \"script\" : \"s9vcucjcv\"\n  }, {\n    \"genderScale\" : 0.8111967226550632,\n    \"score\" : 99.60676336626665,\n    \"probabilityCalibrated\" : 0.28473604948935205,\n    \"name\" : \"Miss Minh Goodwin\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"8pk9\",\n    \"script\" : \"uqjaxv8a1hr6k6mv3mnw88nu96lr2q9fsore6ig1qzblx3taf1rkvi50nuspwycbg9pi4dspydfklopsllrppmsq3ox3flevctka1rcl7cpqga2fwy3m0cube51hznk7c5tv31131b516hp55hqwj0aif3364sc4b0sljz5iuagp3kocjllme54lyc1227cs1u07hpu\"\n  }, {\n    \"genderScale\" : 0.11969869023769575,\n    \"score\" : 74.1381029884246,\n    \"probabilityCalibrated\" : -0.6247222111681294,\n    \"name\" : \"Marisa Beahan Jr.\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"6823\",\n    \"script\" : \"jumaibwlvkpr14dkyszf0beqcq4plv20rfj9akk5v8dm98he013vkww61ae3wnga9ofkr16l69hasp99kvk1b3zjcpmaguf3zezmuzu92v2z9w30ddvryddzabo8su2q0g27ru7l6mbv54dl\"\n  }, {\n    \"genderScale\" : -0.11931858583782895,\n    \"score\" : 90.64032107574369,\n    \"probabilityCalibrated\" : 0.9832572687628871,\n    \"name\" : \"Eldridge Schinner\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"r992\",\n    \"script\" : \"yu6g7ks00lm48ia\"\n  }, {\n    \"genderScale\" : 0.905636137361091,\n    \"score\" : 67.49946990877989,\n    \"probabilityCalibrated\" : -0.8927400644853176,\n    \"name\" : \"Mrs. Margene Sipes\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"hpax\",\n    \"script\" : \"6m1vap652szjyjbmmjb2la\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a562793e-9c2f-4459-8519-cdef49dd20d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.496023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "b684427c-87d9-4d81-bf4a-39cb2933a2c3",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Johnson+Pfeffer/0zfx3kye72uu9bcq6gm1s59ilwr0qdwgrpy2ef6tdsqvqrw0a89o9q3pmc0c3dhz10s8ubj5esueg339incpa7p751oswtv79t1mb6iq73ispt44rys21gq89bxvtft207xxtmawocdqcv02919ofdq9nxlizar69bchltsk8g5fhk2pj7vm9iy5fr6hg6mj",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b684427c-87d9-4d81-bf4a-39cb2933a2c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "68743583-8ea7-48ef-9d35-db84c85c5fb6",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Saran+Jacobs/qpgksqp1q2l8z3gogdpn4d56k3dx4sgjqp3fofuxs0keessiel88x5i901yv3g2ds2qw6n90po",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "68743583-8ea7-48ef-9d35-db84c85c5fb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "46051d16-ffcc-4598-bd4a-068fbeb02c61",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Kira+Heidenreich/p4u85dsogljcysiqe007dymoxnmfiv64es4i79vmge4uhnqrvb4hoauo7cf4p",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.4292087231364976,\n  \"score\" : 5.559117051390727,\n  \"probabilityCalibrated\" : 0.989078989843011,\n  \"name\" : \"Dave Balistreri\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"x8l2\",\n  \"script\" : \"px5407hjjbupn4eoh8uf15soqosph551tt47w44i16sb2pikk6s6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46051d16-ffcc-4598-bd4a-068fbeb02c61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "c5bea304-d1b6-425c-9792-f71cef0e0bca",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c5bea304-d1b6-425c-9792-f71cef0e0bca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "8285ac0d-8c4e-4bb4-b2ae-5b8b4aeb542b",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8285ac0d-8c4e-4bb4-b2ae-5b8b4aeb542b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "38e6a966-741e-41cc-b56b-25c34c922235",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "38e6a966-741e-41cc-b56b-25c34c922235",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "275f960e-5ce7-4a1e-90c6-5ecb97c915f0",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.20418800797579895,\n    \"score\" : 88.61922334443558,\n    \"probabilityCalibrated\" : -0.7292332168527933,\n    \"name\" : \"Miss Brad Larkin\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"yc0z\",\n    \"script\" : \"g7c4r93yyajxbj4njssjai8csmcn2sjwk6kmr9iwgm7bpgghw5p0mjd99tbdjewijf2n6syxi5zxe3u7rfd2jcc36sgp5cd63hybacituz2onyuy44ehxlzrpxqv1wtxii4ye78pqbcur8waz0nmjn44se9z6hdy5wcwb4e1821xytzygd4f54nv5cx9l8g2hcviz48c\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "275f960e-5ce7-4a1e-90c6-5ecb97c915f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "1b0a1ac6-349d-4bc7-9928-e12f8b25c691",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Miss+Kylee+Padberg",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1b0a1ac6-349d-4bc7-9928-e12f8b25c691",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "7a6ab980-6a71-4875-848c-afe283bceffc",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Clyde+Flatley",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7a6ab980-6a71-4875-848c-afe283bceffc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "7ff6a88a-12eb-40e1-bb69-5fd89a636f86",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Seema+Conn+I",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.012240935295894984,\n  \"score\" : 82.73325059813843,\n  \"probabilityCalibrated\" : 0.9052985028588174,\n  \"name\" : \"Ms. Arlie Rohan\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"ki37\",\n  \"script\" : \"nqsbu4dzza61ihfmi32v1bf6vyplwbv0sz0t283q43wnf94q3z0uzyx7z6m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ff6a88a-12eb-40e1-bb69-5fd89a636f86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.494135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "75aba4b5-5e9c-489e-b3d9-0853fac6acd6",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "75aba4b5-5e9c-489e-b3d9-0853fac6acd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.493833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "eb6592b1-c2a8-4545-9761-dfc76057499d",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "eb6592b1-c2a8-4545-9761-dfc76057499d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.493814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "8a56b6a1-5e9b-40e3-9238-20911fef3805",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8a56b6a1-5e9b-40e3-9238-20911fef3805",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.493797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "85ac3c62-7632-48fe-82bb-414ac17b63fc",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"William\",\n    \"genderScale\" : -0.4452955032442567,\n    \"lastName\" : \"Bahringer\",\n    \"score\" : 46.340724034186344,\n    \"probabilityCalibrated\" : -0.9283790560037348,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"w0ue\",\n    \"script\" : \"x16zc6hzt54tj3g57cq92hcw3qlrj2kobyy37na62z5n1o\"\n  }, {\n    \"firstName\" : \"Joleen\",\n    \"genderScale\" : -0.7984398911458566,\n    \"lastName\" : \"Murazik\",\n    \"score\" : 13.663506800600588,\n    \"probabilityCalibrated\" : -0.575866046811141,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"531v\",\n    \"script\" : \"6yd55u0jfh3tdxsm763u6p8k0x0zs6vfl3n0t7wmyclfx9k6s7n0pn62mu178qd08cni9z58v1q\"\n  }, {\n    \"firstName\" : \"Bret\",\n    \"genderScale\" : 0.3011421004015893,\n    \"lastName\" : \"Kozey\",\n    \"score\" : 23.319115218603727,\n    \"probabilityCalibrated\" : 0.24003425236447606,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"6sm2\",\n    \"script\" : \"p9gogbb1rlp0ab6\"\n  }, {\n    \"firstName\" : \"Gladys\",\n    \"genderScale\" : 0.655193238860722,\n    \"lastName\" : \"Prosacco\",\n    \"score\" : 14.13097308566792,\n    \"probabilityCalibrated\" : -0.9404576463395962,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"3893\",\n    \"script\" : \"kt33\"\n  }, {\n    \"firstName\" : \"Kimi\",\n    \"genderScale\" : -0.3939153043601251,\n    \"lastName\" : \"Mertz\",\n    \"score\" : 70.65522052009506,\n    \"probabilityCalibrated\" : 0.8280772202170461,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"46sg\",\n    \"script\" : \"4y6tdcru52swn05z0gcssop2tkhqhj1bqsk4dq1z1ge4ek3qj2zbsdy24jwyeqhmfwu3yjbv42zk37qya1p32bxs00m8w2jgujsy7ikcrz4xuug4l06p4hpg6agdhxjxzfn8et4og7svnw7214tkoh6elhmkihaaqfzxl2r52uhpaje1dkmprd06yq823fvl8k\"\n  }, {\n    \"firstName\" : \"Yuette\",\n    \"genderScale\" : 0.3278853808139168,\n    \"lastName\" : \"Treutel\",\n    \"score\" : 76.77225563314009,\n    \"probabilityCalibrated\" : -0.2530521982793832,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"6md6\",\n    \"script\" : \"3f6w0tdcb3rq94ilf5jd857gtujoiy92uylxwk0gyowm2zds0byse7d1orujhyyqe4t06rt366it4z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85ac3c62-7632-48fe-82bb-414ac17b63fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.493761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "515974bc-6830-418f-8ab2-80e3d6f197ba",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/8yakqgthnn2wxlnnm3x7y0ru6qmvjw6ccyx2iohmwkmqgncia7i4mn87c5xcluu49dszxv99hcm2imssrulxnb209z45oqvloa7hhqeub745b4bxiiea4coy5ed3k8u8s2zpcfid2y6zg3aafrsahan07q1i1tenf12u0jd3tphg7qsmiotur6u704wu/bfo7lvlzccwiblwaahyci8ggf7o3xt4g2h4yabbsvaf25414iaye34dib9izco2r9xxwb3pstw5qng6u5op8digm7lr4me4ppe6k4s24wzwux58c7o7856obr8p423z8yupzj4ab1b92vrbmkt0sp8exipnpzr12jxt5ttu10jsthmxtr8bxfcl09xkr7amj",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "515974bc-6830-418f-8ab2-80e3d6f197ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.492662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "2eeadd22-c341-47e4-b960-c9a1fa728fb3",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/d7v7aowohfzu992tqkeo8ehok8a592faqzpcpd9mpro8x7le8by56nkq9mxmu35tafp20g74xky03gj0g9qonqzspbsqxi7i3320fmr8ye3dmljtuo5ixhtg0s39s6y1vn0umbc8/xpdfijkmflfxh8hdgaun2bnozg035j81u3pwr15ih13ina45i9qbhd3lf126cvs6p4yf49focghdap7oq86ulsm9zz5i",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2eeadd22-c341-47e4-b960-c9a1fa728fb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.492619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "7d8d96b8-ebfd-4688-a792-2de34f4a52c4",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/xpll14xv5821frf71rprqiosqzrnoaofhjgnva6i2r33sipz3m59yw0gt96wbcefnn6i7dipwixzu6xrdwz5y0qtjs44als8dkg93zjlobk8iw5zsmavcau3911bddtn3guc/fb5subgxxtgskx2fjnmfkk4ydt4who9vrqm68gr4zor7uojnnpihgljohjt3pdxfg4jo4wrn6fv6hnz8ygwpi8p2d3odkra6",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Orval\",\n  \"genderScale\" : -0.8398906383237936,\n  \"lastName\" : \"Erdman\",\n  \"score\" : 63.00012630620374,\n  \"probabilityCalibrated\" : -0.8676245624354073,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"v54b\",\n  \"script\" : \"3zry66uayxj34lpm60a010h3e6sznq3tl3taz9zeijwud179dqlsucij05j5sgmi31lkhiefs9ghgvsuza7qyrzuji2253mge33xgc7poerspbsikeh0plx1c8lg3ujnpfah\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d8d96b8-ebfd-4688-a792-2de34f4a52c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.492559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "1458d351-3a33-41e7-b055-f06f86c52f33",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1458d351-3a33-41e7-b055-f06f86c52f33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.492255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "651ffe5f-5bd5-487a-8fe1-7bb65e105b10",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "651ffe5f-5bd5-487a-8fe1-7bb65e105b10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.492237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "a78d1300-1c5f-45f9-9324-5e00fb80bb21",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a78d1300-1c5f-45f9-9324-5e00fb80bb21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.492219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "751ae875-a813-4869-bb3b-926f42547b4e",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.0666081566430139,\n    \"score\" : 55.45699041762323,\n    \"probabilityCalibrated\" : -0.9535689330790946,\n    \"name\" : \"Ms. Jewel Marks\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"0amh\",\n    \"script\" : \"mdcyoyc44dlh5vhyr3n5rptfwtd3i794tdiuhgtx7bunwg17qla9v0ar7o03246faawui9nu0f0y2qkmx9sprcmria6p20zbcy6428qpisv0ak43bwj2n5021vvonh0u6w55vj9hna7hllzerpuk2qpkgkjd50tamxnttx9a1qcnjj7kvomyplmtv0bkz55\"\n  }, {\n    \"genderScale\" : -0.960615231894004,\n    \"score\" : 26.333563159384667,\n    \"probabilityCalibrated\" : -0.25698579423981727,\n    \"name\" : \"Ms. Demetrius Zieme\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"da50\",\n    \"script\" : \"9dtfrpb658xaugi0h85d4sv1tms7djhe3oi9zl8vdbit2amqyaqy7nj8x5zxnmbh3uttuls0rbs0e6ispmy3b11oxnapjrf4b8so4p49e8piu7nn3zt1481ml753o06w0qg2mho4fhn17oxufebon6d48af7c073pzs7ad3\"\n  }, {\n    \"genderScale\" : -0.8760409781312934,\n    \"score\" : 3.0640484191458706,\n    \"probabilityCalibrated\" : -0.18997935023372192,\n    \"name\" : \"Margarette Kris\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"frgc\",\n    \"script\" : \"93rcwzlg3ridreta9jll58px0obf6hyrr4m55jm3rpqvpnrdhrd56hwzo1u0s7861vs1ktc9ce2gbijoiileo65q\"\n  }, {\n    \"genderScale\" : -0.8373050251051031,\n    \"score\" : 95.01567094317241,\n    \"probabilityCalibrated\" : -0.23568996845938783,\n    \"name\" : \"Eliana Watsica\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"v5m9\",\n    \"script\" : \"wgqgxy9m2r0ep420orw4uw2slw5ubyki\"\n  }, {\n    \"genderScale\" : -0.45748653533848205,\n    \"score\" : 66.34425804999564,\n    \"probabilityCalibrated\" : 0.23397834077353163,\n    \"name\" : \"Holli Schamberger\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"757p\",\n    \"script\" : \"l5bbx5w90arv10ojcxxg8aipu1fign47zzlqy93ozmjh7pfqy7bv54r4xq2pdr6j8uvvc3iib8uj49d4ug\"\n  }, {\n    \"genderScale\" : -0.4990525409530171,\n    \"score\" : 59.910278157876526,\n    \"probabilityCalibrated\" : 0.059844958410410154,\n    \"name\" : \"Jonathan Nikolaus V\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"i829\",\n    \"script\" : \"sdtbaq1wlc2ev1fz5l0577lecys1t0248a93p30bczf4nh5poospansvd40z4iiov4mfmyr6x4mry6ogtyurrmnialv\"\n  }, {\n    \"genderScale\" : 0.36132168737397263,\n    \"score\" : 95.40736771931579,\n    \"probabilityCalibrated\" : 0.7267640078770277,\n    \"name\" : \"Dan Lowe\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"80zy\",\n    \"script\" : \"598os75msjfwtmczhsgpcoaxegpqzyzs9z9xhldps0l4c1pdwhloka0aqlplv51f39uodjkspl1vv4ubp8cg1tlk60u66z2lhitlcduyl77iqpfih9z1k7a3yliouklljew2u7sjlxu55blszfc2brljlp2hlkvbrz150uxjc4o0ligfkigo0xmxg46be3jorjqcps\"\n  }, {\n    \"genderScale\" : 0.7440962756906997,\n    \"score\" : 63.74113377814559,\n    \"probabilityCalibrated\" : 0.536470657042359,\n    \"name\" : \"Dewayne Emmerich\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"574y\",\n    \"script\" : \"n5d13bd47gkgjhozkg5s74us8xnycvk188a17swpqleca9lbabyj4oeovaupcm9lpgvburtqbgwf7zubkyp6jn2qrc066qrq8ikwt3ltquzu0p2nho1xjad9z2lwzy6qd0gvgiac0uip61h3ut6pyg5o0hcknrm\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "751ae875-a813-4869-bb3b-926f42547b4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.492165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "b5fb2691-0353-42f3-bcc7-d26e82c2ee66",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Adolph+Gaylord+Jr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b5fb2691-0353-42f3-bcc7-d26e82c2ee66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.490704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "fd1e713a-c264-4722-a5e1-799552b575ed",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Miss+Tod+Hermann",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fd1e713a-c264-4722-a5e1-799552b575ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.490633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "9be39d8a-0579-43b0-9f8a-4ef1250f7052",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Mindi+Grady",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.15994626919003752,\n  \"score\" : 17.875528460020853,\n  \"probabilityCalibrated\" : -0.41696111532667124,\n  \"name\" : \"Mr. Lucien Block\",\n  \"likelyGender\" : \"male\",\n  \"id\" : \"foda\",\n  \"script\" : \"och522jc1m4ig3fqa2oox8wjpxv3llpwpdih8azogxnrw2acynq6wx3vq61mt2eqi3lixt7pcg8y9lig2sfr8flqf4newgilosht567ov20\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9be39d8a-0579-43b0-9f8a-4ef1250f7052",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.490548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "e851fe08-3930-4c9f-9a9a-a156dd8dc848",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e851fe08-3930-4c9f-9a9a-a156dd8dc848",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.490269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "69ae565e-d1ba-4226-bfa1-7129e694a116",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "69ae565e-d1ba-4226-bfa1-7129e694a116",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.490254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "99c52b68-acc2-4247-88a2-91eca635f598",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "99c52b68-acc2-4247-88a2-91eca635f598",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.490238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "35c6a7d0-62f5-45ad-a14d-7b22bf476869",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Diane\",\n    \"genderScale\" : -0.08450729768515552,\n    \"lastName\" : \"Gutkowski\",\n    \"score\" : 80.3960660648923,\n    \"probabilityCalibrated\" : -0.20867662408974885,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"lb73\",\n    \"script\" : \"m4atwwggpn2w5valxs2erj0qaddb44ruoy51dlpb2b6ugbprmloi8s58qz97xqq14ns5ljk8uf3wrl1rjwt3v99p8uss8t4gnn71jsyz2v\"\n  }, {\n    \"firstName\" : \"Jamie\",\n    \"genderScale\" : 0.5077616507605802,\n    \"lastName\" : \"Hilll\",\n    \"score\" : 76.45105749586469,\n    \"probabilityCalibrated\" : -0.05931294203307669,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"8cs8\",\n    \"script\" : \"8fisqdels6b6r29ddtzsvu5kiltdpm9wuu5gikgy31ikhpw19yknqfj7p2kutrv23xpj1k3wqt6mqtqaxkakpr88ui2egzazo83\"\n  }, {\n    \"firstName\" : \"Josie\",\n    \"genderScale\" : -0.9628188592906499,\n    \"lastName\" : \"Zemlak\",\n    \"score\" : 91.15278656267971,\n    \"probabilityCalibrated\" : 0.25199370555807676,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"29lg\",\n    \"script\" : \"7jt6bfb02kykbxrly7v8rg4seb2qc91pgizr3veu54zm4bmwkfyvuyeeretrc4zo45h1qs25s8109b76vpfrqgxwa0c7br0bqmq5sff3bxdfv5i\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35c6a7d0-62f5-45ad-a14d-7b22bf476869",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.490211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "27326eef-f0aa-4502-b8db-1720656716b1",
    "name" : "Infer the likely gender of a name. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Jean/Armstrong",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "27326eef-f0aa-4502-b8db-1720656716b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.489675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "4954dd7e-853a-48ba-9e1c-58d4d2472129",
    "name" : "Infer the likely gender of a name. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Alecia/Pagac",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4954dd7e-853a-48ba-9e1c-58d4d2472129",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.489607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "c9f88550-f2ff-434a-bdbf-ebabf74b10c0",
    "name" : "Infer the likely gender of a name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Timothy/Mohr",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Otis\",\n  \"genderScale\" : -0.4725122811239888,\n  \"lastName\" : \"Klein\",\n  \"score\" : 40.132327026542,\n  \"probabilityCalibrated\" : -0.30541001438315196,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"16yg\",\n  \"script\" : \"1icsdsjcawp9zncfctj5tarjqbpuwkkkok1mivp0y9uoui633epazomwkc6pkgyy827obnvbnuh57gldmi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9f88550-f2ff-434a-bdbf-ebabf74b10c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.48953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "9ce26bba-6bb5-49ab-8e58-e011589571eb",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Tuan",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9ce26bba-6bb5-49ab-8e58-e011589571eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.489247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "e5ddbc9b-c43e-4384-aafd-f189618fdd43",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Solomon",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e5ddbc9b-c43e-4384-aafd-f189618fdd43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.489196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "a352c987-a6e6-4ac8-a00d-abadab34739c",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Franklyn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Laila\",\n  \"genderScale\" : -0.06468494087400112,\n  \"lastName\" : \"Weimann\",\n  \"score\" : 76.24441883299444,\n  \"probabilityCalibrated\" : 0.7137681529049451,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"7ubr\",\n  \"script\" : \"hc7hdeu1kryzl43du4otbqvm9chu7qlaacptnm836apxf77j44amhw8tsyd792bzy3qsxf3cncdfet9smebw05y0ob1j1il5t97yvp2q4z6d5pkoadycxerjrhodsz2r26dk7hied6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a352c987-a6e6-4ac8-a00d-abadab34739c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.48913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "f17645ea-1528-433c-bf4e-1bf679697510",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f17645ea-1528-433c-bf4e-1bf679697510",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.488843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "b94cba0d-43c6-4ff0-a3d6-d6a315d95288",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b94cba0d-43c6-4ff0-a3d6-d6a315d95288",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.488827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "f8e937ed-047b-4bdb-97c3-950f8e0aeecd",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f8e937ed-047b-4bdb-97c3-950f8e0aeecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.488811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "d51769da-9509-415e-be6c-bea4bd1681ad",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Weston\",\n    \"lastName\" : \"Denesik\",\n    \"score\" : 60.63400434763236,\n    \"probabilityCalibrated\" : -0.7426711549723779,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : 0.04371210736303377,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"lig9e7xt2obfu68uudrz29mdhhne7cdvdlsjd496j4w1x8zt2kd4l98xlpdot21f3vcox8nykmzo5mahvs5f8qzv7b2da2k5nepd3v8roowvocmug1svtgobyu\",\n    \"id\" : \"xpd5\",\n    \"ethnicitiesTop\" : [ \"1mcl4mcsfson1cp35r83ntys15nl2xj66l0zicssmoi8ts76f9wy2yrl8103d35q6van6krb12bov6bhmt89oylaw9dvodewp7cmr5qbgha34iezm1anedmwr9\", \"37krowdmnv0lm753wrs2s4mu4e7zpeumfx6zt7cvs6e1s6rm5nyi7nlim6xtqisn6nshw9recflyi9pi3hwh06hnllirthwy3itv67ah7ppmrk5ywmlvdqs563d56is8nidqzzhoildv14u7u1qkfcgtnqzaclfgs2lpzr4\", \"37yykq640lvdgxq6mlkbdleh67oy0w6axs3nh17l8lor8d57150p2qachaiiny26e8yzfknj8yjnfp92xq7ij1lqfxoezbvtefylk7sulfygdzezrp2lg9tjvpva0qicu6lv6iluu8u7u902ucdnorsrq4e41hk0p4hpep77bdy315\", \"k6zvnrsuz7ar6oyv125bga79fwva8b7x8rntmt51rdopddli9hlrbng32vcitlx3ys8d9rkyazoe0okclp77cz2gpe3f5y1e2cg9x95pfmxka8blebb9khoxyrqos67p0ppvq4lpne2s85h02jl3etjpba853duxnp1l3bgr3jpjoomaykp7azv599xiy0bm19\", \"mtml4v\", \"eyuxyp076alkpjm2dkwlt9edxbw7hv8p4moeeyo8wi9qppfe65ggzwjhigoa8n252q7nyj3twm4sokdvjwfbe01bqc539iho1xz6t7x02z054xksaddvimtumzuawxflhs38fwz398ee06zybzh8ruyqxoi7eyk4e25gw1ci\" ],\n    \"script\" : \"0nlwyqq9jdgv1pd3lq1ic5r4qae568v30a880pw98gm3lvbin17w1do11tzuuiyecv399c68x2we5mkv6wceow54y8gcsn5u3x\"\n  }, {\n    \"firstName\" : \"Deneen\",\n    \"lastName\" : \"Rath\",\n    \"score\" : 8.766743352117977,\n    \"probabilityCalibrated\" : 0.8205180684624276,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : -0.31526166851154436,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"alol4rjk83b86hvjcrer2jkp5o2khgmr2g18ulsas82mhhwq7e0rg34hle75\",\n    \"id\" : \"7lj7\",\n    \"ethnicitiesTop\" : [ \"2xolorkigv4vbw4bj7hz14ppd35ij2x351w7zc1kdylbz98ir6\" ],\n    \"script\" : \"8sxz88pqdgrqf7fzkknkg1455yiu1wzeqwwgyak2azmmpjuqx4vcykw8qe1qegpzz1u9h22zpclo9d4z\"\n  }, {\n    \"firstName\" : \"Adolfo\",\n    \"lastName\" : \"Herman\",\n    \"score\" : 22.880103949600496,\n    \"probabilityCalibrated\" : 0.8856140243016897,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.944112121340136,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"fulk7tck0kpk3p90rl3n1m0hr0k304dr6taqa4pvh82y1m04a8j6jxodt\",\n    \"id\" : \"q69p\",\n    \"ethnicitiesTop\" : [ \"faeu50gcpjy48u7c7bwgygrasy0d9w5n277tuvkbhts2lzh0eiaetjpnmmoshjx7ayz7ge98pb3v\", \"v6orona2rvj91om7zfst95wiv7zrzy1dekv90ne8bbko8w3kmqf3ft69x97imq2j1x0s6zm0kswg9cdruiugyap6il4o30mwseyzueeol9v6tl4sc0tak1f6tzd24hxe5\", \"8b5gp69w93w6ava5jhabx5zarxifgng704y7s5joapxxsr3xoev4hi7qm6oi48j2rx4d1zydbd8fui6rhxc665ski9zwdv48c\", \"8xr18i4rk3tt1j4jynzlarnu928714usxcy4borp8rpblx8f730ue7gsrpkfds67v267hmyvh46dh8rf25vvrd6vclk4qzj1uwrw6tkkc5dv1kcs5\", \"y3xiklrjmqmu6xjpu7wp4fb3dd8k2ogijbull9kmohwnitkh4nk0qnqw1s05ydu424qheaetkeltbkbi9yfx3xbji30h5mb5iuztgfct7k9cqs3d137wurjwsmpgg7ny0smgte\", \"8b2892qkdvdi6ozmoyu0cm7mn6ajqpuxqezbps59jzqggqp9bbiecrquifb7v4sya6zywtpshlknx9w9u6frr1v7f\", \"12teqclok44lx40tusnksdp2kxhgquwtf0qeo0x3vyc2tg2bhv0rh39rftthz5sl4uthcsvfq918v1eehhf4t02qb7n8cia0oks0i6f6l1qq44eaixkmhvuzypsu6ngibqnyt7l5\" ],\n    \"script\" : \"i2u3o2w76zmqr02bq8tvn39yejrvo1008jd0v5r69spul7c8fczpwzxeu61p3tif9jsgguq8c757hp69kw4ol7vdgjxhhzysksrjxz3biqjnr808i4w1o05pz5ub0fchy846oy0ev03tq2\"\n  }, {\n    \"firstName\" : \"Kaitlin\",\n    \"lastName\" : \"Crist\",\n    \"score\" : 31.619810521016035,\n    \"probabilityCalibrated\" : -0.9135681564500424,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.011277967838080327,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"eq1p1aozv93h1pwabynqa1wk814b8e3nxnvcl7smewprlhoiorvkhjeaia1jcuxwsgryhf5w3de22taxeyrpvyb1efu2rb47b6ciluow831f0pzdyru4wu01ajndqac0tophisds3y14scr0kznham9hwugb76cz0ic\",\n    \"id\" : \"928m\",\n    \"ethnicitiesTop\" : [ \"wq66y8q7jjiync3xix1ut2awwrt7kex1uptpw5psy6v7dnzsa2023pdkoslbfvsvl1mzlzthwaqusfprpesk6rvbo9thzwyt9h9an6hmkg9dk\" ],\n    \"script\" : \"1kchdm48cv2c2395zjaq2c78opj3lqj54sbs7d5jft255ry9fu3uivvv0yvs71gt4w3fbed48ci2r2cu9bs0i7szs4gzisjuuzjpdt54bk29svl97q6w6qaoomfm5l85prsfge7a1kpwr0vg0jtia2uhk67fijj5x1tihdsrxtbp9cwewl01e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d51769da-9509-415e-be6c-bea4bd1681ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.48878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified diaspora names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameDiasporaedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "95349772-fc4f-4632-87f3-0130e771c2f9",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diaspora/upn2hl5mqp8fdsbnd8j34evo2zx66tpjiinleb7ytpe9oc8ugg6erpckng3wybujtfwe80cjgz99t5r7kq2c82ygs7wjdtybq/Burl/Stanton",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "95349772-fc4f-4632-87f3-0130e771c2f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.48791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "73e75e07-3802-4d8f-b732-7309b03c569b",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diaspora/218lv4sziwmt5goeez13ve83mp528a2iep8iroi8hjajkd7mxba1jk19pebb6nxavlzdbej/Chris/Schimmel",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "73e75e07-3802-4d8f-b732-7309b03c569b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.487831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "1c3d1a34-50fe-4b08-bf24-488d47870b11",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diaspora/h07d62j8j26bvey982ajytqlkxqr8r5vhyx2f3cvui516seevwutu1sx/Marjorie/Cartwright",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Ramiro\",\n  \"lastName\" : \"Reichel\",\n  \"score\" : 88.85589811751437,\n  \"probabilityCalibrated\" : -0.49203972877213586,\n  \"ethnicity\" : \"Chinese\",\n  \"lifted\" : false,\n  \"probabilityAltCalibrated\" : 0.7679776698776908,\n  \"ethnicityAlt\" : \"Japanese\",\n  \"countryIso2\" : \"x19klu7erdm7ihw3erwqljx5wpqnn8ffuvb3wxfzf3w00p5ph5lzgfshcioi4mzvkhzyow327hpex51gdg1inqaj\",\n  \"id\" : \"xz0b\",\n  \"ethnicitiesTop\" : [ \"29zmkved000bd2ktr3ic5ymw3pnkoubhd6mkkysnwu4824k52u75s8n5c88vxh1wv3it6y2f45jz01ohx37elamik8hgvh9hklrvh7rikmgaqw9s9r37igmjxke5hwwjot9glhvfr96ztm\", \"tc681dtrd0o8rq797pij76o62z4s5pdok9g5gyoklw8fzosquh2c39jo483\", \"qkd6y0xrtmmsv6wqig4ivuri6by1ih66fb1o15nbqko2xlfra6c76aibfnf4sa6i3eg1x85dgntxklyivzr1jv73yjaa6ttyzymekwqk61e7xtt0m0cxuh1zo36ue76va3i9kmmhhkfh6dhlf3myzhoigb5s9jds55284oxwga0cc6w49pgvimt5fjlo0ezz3soi\", \"41pa868kgapek00wmr89o63mr9dob5s62hfl5hhpb9h11wz0zumk0fu0c1yxrx2dbz29sxnpsfwaew1bk4wh45cu7pfd1kdhyif0icuit6gz2ii5dhxz4uigzhsctdcujz92fv42xl40mcd7y6dj2psu0uee2t5pd1h42ev8g1pn17cjwm9\", \"d9ko3jkmwyx7ksh72teirobexa7zu6kqgrxjm3fyth28yjwor23dt207s9x6nlqikv0mc078keeeni6jca0douwn5tf4m\", \"8nch1cnhzrs502qhm4klpfrmbes0dyt4fs0ftoud1vlg47q34ji8wjzos1kutbht5lyska3p6blax4cdfgt7t8j0bvxpjpf2y2uf6ijf38c45smyuqzaapsfz8fmcwufpffcgxpk3629q8nwq7pqcmgxkk9bqpyz6wf38yxjv16cb70cm5ul08t9fftie\", \"88fl0r4ajmzt2lok64qsps6uek8x2o1ajqko7bms64lah\" ],\n  \"script\" : \"exwghht5zcdu9jg53usdggsfygbpjpo98iihuh7yr7tzmigg3p1s9sp90w7zfyj8bd6rfl7a040v89n8is6b1d5dhzjhtxrqjl0y2phji47hxtapwqyo8w7bfn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c3d1a34-50fe-4b08-bf24-488d47870b11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.487735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "countryIso2" : {
                "description" : "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicitiesTop" : {
                "description" : "List most likely ethnicities (top 10)",
                "items" : {
                  "description" : "List most likely ethnicities (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ethnicity" : {
                "description" : "The most likely ethnicity",
                "example" : "Chinese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicityAlt" : {
                "description" : "The second best alternative ethnicity",
                "example" : "Japanese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "lifted" : {
                "description" : "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "type" : "boolean",
                "xml" : {
                  "attribute" : true
                }
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameDiasporaedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "15c59e7c-9e08-41aa-b15f-f322f41e2e5c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "15c59e7c-9e08-41aa-b15f-f322f41e2e5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.487325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "68865bb9-e3ba-46bf-a96a-36065eea4321",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "68865bb9-e3ba-46bf-a96a-36065eea4321",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.487309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "1c2521cd-ab4f-49f5-b859-cbe935156ec3",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 400",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1c2521cd-ab4f-49f5-b859-cbe935156ec3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.487293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "520b45f3-d370-41ac-9145-60843d614d66",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"country\" : \"South Africa\",\n    \"score\" : 48.61593445079261,\n    \"topRegion\" : \"v5i9gjcpvyohik7tql33olk8kkvucmhy29j\",\n    \"probabilityCalibrated\" : -0.08936107336972321,\n    \"subRegion\" : \"lou05tx899iebt3arsj5udr1wumn8f6ftgrzm0wdc91nwlq447n5ne99kixikdhycmvo7i2lmz8xh\",\n    \"countriesTop\" : [ \"leamcjwjmc21d32r73ffqrssrd3puxqlkcs4r0uf7lsvunmq5jw3rc5548x4ik6gkl9mvf7ppf22ymf1bmlkry3xhy4xbvgo0t00h\", \"zkcnz8ndtr095qgqwddjqipfqou5xw4uw2kn7tx9nicvv7wh0n8num1innlx26mpcwjhlqokie25oacdh3k9qh5zlp57wf4bjzub006w2n7nsqiyjly423a6yphnz0c8ypbcheqy9tpujgs0bcl15f6a5dqlmsknjv1h0dc5w\", \"4hiqmk8jujxb8rdb2cvhmsdzuwhpjlehcy2d04xt02yjc8plqsg6o2b6v1g5kldef7h50jqmyabsz2zr2juebgs2ty5070fm9kr\", \"qfgf8dhexq4mxeakw7n98oaxbkdcbzv5giurcxpcumw1c4w8a642oau66rrubb2u4u6mis7x61ikqbcctw8dx3acdmdv16e0mfvtb7aoeuh8prs2sand3x6h5eszt8ykyaxf61jhkpowuw6\", \"ir2p37hnnjwt0vpmshklpmh7h34vmavd75ta67giyrlatqck3jeqn1zkm99r5rcgxgo8ne9eboui4solpn7bopbt4ylpatsv0vgipci36vpmffm4ia6i4paod341rddq8n7a1ksunfqmrh2d6sfdwjszbjza4bxex3bdmczyacjinovsekrkwa4psjgh2jxycoji5\", \"5bssz458tx4weo7giebrrvedp50qkvm9wvm5vpzc3fm5mx3siwhpz89990\", \"m99xwwh4u92b5jusk0em74ji0dn38ymq7ylert2s\", \"79uwt28m4tt63oiercqnyacqzxxopwtwixp2xl75997e8etp4lz64tocshjuwf4ry718ei6dnmegljwlj8bzz8uesls8gr8qidxuvkv1i9erqmvc5jorqzcur\" ],\n    \"name\" : \"Marty Romaguera\",\n    \"countryAlt\" : \"gt0ghfh\",\n    \"probabilityAltCalibrated\" : -0.780313778698005,\n    \"id\" : \"h73k\",\n    \"region\" : \"mqj6ug0pwcdqddn22abqkmc4z2rw5caripb75krxayfk467bzzqnmgmffcdh7bia\",\n    \"script\" : \"2bsazzds6w3a3k5mbe2e6kw4efll2836ez3g4viu30gcgdubf6zv8ngyroy7159bt1bxvy5lwzae7aytlnf10fka2nzv0rhny93lr\"\n  }, {\n    \"country\" : \"Jordan\",\n    \"score\" : 25.16159517613017,\n    \"topRegion\" : \"8nez6e810ulnorgcrqu7vnnc9do9xt6df984aja6cy0aan6je24qrkhfgbw2i98zri3y45us7wb\",\n    \"probabilityCalibrated\" : 0.21268695840473195,\n    \"subRegion\" : \"dv6v5iu1s7ut64x0sr01l2zxzlwd1r9dvyi50zbu\",\n    \"countriesTop\" : [ \"e6wbyvm8p3al9fweoggcd597m68c8t0vjeuf2rgj7x5xb1gyfvxxcoc9dkfhrutvd16xxde8jrusiytexlcptvyes6rzpx0nwti8secnmzdh5nr0bcj8ja1wnivwelmc8chxrxycrjvlww6trsujbuax77ziqfieqsgil38zayr25gug\", \"p0pb50mynxmsxgiuv2p0k4pr3o4gyaqcqry0tirl1f2xaklaoou8n76xku59tgktkhvswb15ytxc8dvgkykisw2n9lgti4f03dz5vjhtsqtfqe7njeuiypbjqq99y22g7c6maba2ssh\", \"jh7en8qvp945yy49t8qw4b23l84ngj774rbuv58f048vsrxwt2l\" ],\n    \"name\" : \"Junior Rau\",\n    \"countryAlt\" : \"uaf5eygd7je3tew954d45wyb9wxvz7pvax8p4tq05w06k8itx551csd1myr3977frge8cwza5ykcu0kavjzjw7ag6vhdlzzagmu28rcse0i6hk7bwvw6ojs5lv3ccleyag2zbtcgtytcgyycvcdtu23vt9xq0fmlgubydkck6tbq7oy5ibwhei0ywyn5rba6v\",\n    \"probabilityAltCalibrated\" : -0.8321580726817577,\n    \"id\" : \"2qc8\",\n    \"region\" : \"lj6ukyxpgtl05b124qvuztt7nt8amfqrk\",\n    \"script\" : \"4onpmrg9mccvs96lphs494s5lrn88e4zd16nkx6hic0kjrlpklrl99lrh7lsws9jre6j8y0xckedmmhgd096j0wmqpwyr1cap7vewwgs0dexun0o1j2kd9s292jqohpsc3w\"\n  }, {\n    \"country\" : \"Papua New Guinea\",\n    \"score\" : 87.92378119994655,\n    \"topRegion\" : \"og5y6ngvedml\",\n    \"probabilityCalibrated\" : 0.09410833585567047,\n    \"subRegion\" : \"rs2xtt5jbybf2t4bx3512f9fdqqxo1juc0w8drww1a73s\",\n    \"countriesTop\" : [ \"y312dalssdq831b1tbdlya5b8wbkdlucvz4auqy17w0ptfr92vwp9jbzv5qxxrvucsc4cthpzcxyy2\", \"svt68kn679sj9c4mhiy2eu8i6kj10vi60recxhwjwlzm4p04lok55y5yese\", \"yipdqerirbzs41icheobqtevxl32nt33kchvufza54sc9q2jvftpt59020kqqnck0fwj2pxplz56n95z5uwcme4234r4sxm3hofee5i84dcxqvjbnhlwifum8xhkpchpsi68xzkthwqm9gwigfjpnblyy5idlgxoc9x4tvll0zqg6ggew\", \"9zuf5n5z8x8f0px18ma3vg3sdj48q9lgiflyzv2ty6rpdpyji6xphvzphtzbw3opeyi3jl23c09va51vx3g69dfu2fk05ql186cufqoyqyx4rwdwwqnkex0kx0xaob8opxkfitcqb6x0crzn4vh60g5yls7to1nb8d6ukqum03rn9hxkouc4ac62b2m1z\", \"fiz33hx58wsm4hdouhho4poyr9eg2pw89m4mqdnvtq3dhpl7y2\", \"rb5yngyz6qvft3ul2t9x7gzg33jay2mdw9ioyf628vxhe36c2f214dd3ca74aicbg0mix6279l4h4wzemfef5nwsfouvis4w9\" ],\n    \"name\" : \"Morris Ernser\",\n    \"countryAlt\" : \"94mk3c51wnug5iqpwqcih8tdrgkc50ez3z6unbrchou2v7vr7w5q3oi5e2qipdvxlb1oohs0zgyva49fgojjrpo9gc5dfbi4\",\n    \"probabilityAltCalibrated\" : -0.05200175402958607,\n    \"id\" : \"8p1c\",\n    \"region\" : \"7sm430oqjhkaxzp8p9uu48bt57gzf06bgafyreytwcs4qjimsoy6hyl212fe4mvtxcet5sfh70eg9gmcxbhdxlrpspm59685b8gp0ar4knk31lmfh9hjol5xs9rwrq7tmgj6kvt7z1c0lvhs0lx5ac0cf1wok8wvmewyyjqq0kgz\",\n    \"script\" : \"djf8eek90m9ftizhgykbksuy777ghpfmckwwwgexc3fdntykin4v3wwxnkk0dtic925u5fl6jo0edbu9jgqgqbg8blkfyondwk43oq3ftbm6ipqnpace6891w0p20vk2tbvel68tiuoe\"\n  }, {\n    \"country\" : \"Singapore\",\n    \"score\" : 10.311224429604193,\n    \"topRegion\" : \"8eeyie1zzvsq13rpawqzupoigwd20oa53kgwenbagrbg05a8wffk5qenjbs84jvukmwwwtmqx2nhxydu26v0jippjlfi7326oylq7gjy7u95pd5fpfqls9ifqkqlgrg7g6gasptsw4q1n3pkijkllkddvyh1pbktmvfo6aicdjt3rrmdnam255q1t4cua\",\n    \"probabilityCalibrated\" : -0.5389473402654408,\n    \"subRegion\" : \"6sc0b6dywom48unzrbknuwyfl91z3ms2aa87oo2w6y10j3s7cy4fct5frssp2q246ff5cspqtcgiew3sdtqeb7tdtigfexs2jelk0kalvmz8q\",\n    \"countriesTop\" : [ \"nrtv45577veeloxu2dv22pf2fv2msimqv5ppdkz4uo2z0jj\", \"xvqa8fn3luxypzcdjckv8oiuoovljv6vrkzz3mjmhssgyjlm6x7gj0zfe055g16e8mucvjcb2f\", \"jv7kdv6oz19tt3actxbctfm4vztnrpnfdzdu\" ],\n    \"name\" : \"Jude Anderson\",\n    \"countryAlt\" : \"1qackbbgfeolx8qlkp1qpigprf9qv534o5sleoun9biy30dm68mawp4vhwlr1bhxwpipnugdc29sufyoemyn6kpakiclyzogqab0hu03frokqk7ye8espjtvvsh5evnd90ptnl73vjwx\",\n    \"probabilityAltCalibrated\" : -0.3113786693595997,\n    \"id\" : \"8ac0\",\n    \"region\" : \"oeufjvfeg79txm1dog1\",\n    \"script\" : \"oyg4xwo3la18xp14jp7789on2zhb7n3xlvk2bpvswlorrfmh452fbe0gj5gc9d7v2vpij6hbtk8gd5e92duv5j8531mv3wd6vky79a5gxqokybagauoq\"\n  }, {\n    \"country\" : \"Gambia\",\n    \"score\" : 70.17800327266119,\n    \"topRegion\" : \"koev7zi6\",\n    \"probabilityCalibrated\" : 0.8548247942665139,\n    \"subRegion\" : \"lvf1k84n1fqtjdajkn838zmc21dxn5blnxuupmu0z90kggjiifwfk12nw4l436axe0lydpndrt7h1l9n7r9k5myxnbvtt7ss6y6hcp0gipl6ornagcr126d9vg3ornkw\",\n    \"countriesTop\" : [ \"2ro6j20sndrkmos60zxu2419rd8buap2mtq1lbwfm4ajuc18i5u2vgkom78p313la2vl5f6n5e\", \"o5wskbmsxzzw0vajz47doqqwcejvf4t19fcrcrsf8uvmzgjrv2qypr2rh16aw1ig997at5cyrawck7iecqu4tqnjf2yoy31u5cug126yyjif\", \"vv2toxm1395a0wx5rxm70cuq7u89mqnocuusroqgme46e4lafh04vc4urorfuwrn7pkwfnb2c6a95yrnb6jxpit2kwcolpkv92cgs1ovpjffevvontend20w6fvlsx0qxvj953feycnhgml9v8e1\", \"konr2i2xgf3w610c54r0qdfj0dhexiisww43e60488srx5dilm746uke61fsuonvevtz\", \"fe0n3x0yzqxqf7klwlu1ohnxosoa5nicqydpv2d0kbts2lmob7q7clfszv24rfhhy0an96hbf6ifcdv4h9trhlj3qyjpaciiivbqufceze0jt8x24eq5j0p8oic5repadr09tpxm4tw1\", \"djplkhhvvkprhnnicz4te5ypyrsj4o6w1yjbipg4yqexf3fse21cwdk575jjlgn7blc81m9x6gfgootsqjzgmkhfe5k1mr90tod1m\" ],\n    \"name\" : \"Jesus Tillman\",\n    \"countryAlt\" : \"xv8to8zntakgx8gd81y0s6o7i6cnpvcq\",\n    \"probabilityAltCalibrated\" : -0.17047541928522647,\n    \"id\" : \"5zph\",\n    \"region\" : \"z8nmk4uryhtq58id5q3jqsrhi2j64x0plwk7t4ymdpw7774h7izb2wigc9yzc9ctzcr7eqzpulu5xxwqsmrp7yldyasz2jtdz614ppp9pk848sv1s7dtq6gpz1426v\",\n    \"script\" : \"fxfq614e0b3nmyda1xc6qni31fp5rm6gbm4de628xjtw8o5tup0d4f47cca0mxf0mes59l2evnrb6wphsq8n2pg4dnh3critoc2hos6v4u0skm19bbtnbfwa4r9uo10sttu2rskv6c5in9o978exdf9hponx7weu18cvx6lrz6sq\"\n  }, {\n    \"country\" : \"Austria\",\n    \"score\" : 86.6396518227371,\n    \"topRegion\" : \"193k4a8oeibziigdxif708c4nwq41lpiwt4q6lrieseqzbiu2ppc8t4btxmo4ddncd56scl6pwxzwrenj8hf4emq9txrg7wy7f5m5ykyj2s65kq94hqhqpagal7magy8cthz47idcp0el5fniopj86wu14yhiu8kvb8e679gduh15m5i4ndfun82w71w4noihu2x2r\",\n    \"probabilityCalibrated\" : -0.06020296731183561,\n    \"subRegion\" : \"mk40fyia3fhaip8bsw2k1d3c4pzl40v6bsvujaufnrlfvr7fovzai1w5wqxt6sotju22fme5sy30kesp1pp0ty4snsjuv3qjv2q7iyr2dz33ia3g8vreiqbyzmx4janwug6j96dsafj5gosk8hv0ggt9ut6vqvhswni8w3pvweiec2napzticg\",\n    \"countriesTop\" : [ \"kmpoc77nxwqkkzx98wwbpih62zgdvu7s\", \"ofigxaknbvybup8dwc584x631u7g08g3ayst060giia1vzmrrojxye7uhlo7kyj5jjm93dqq01gfkbqaf37\", \"qvbtpj0bf745pyhyd0l4tmo1zqoxmy9wjk9sr4wusu6206ak56f1rkbvk9nyxpht3oht1mfsq93hjtb3qha16ja7bcsbyog7eukuylhlz6s9rx424jxsjq33jttkajo\", \"jtpsfmz4mqj3cmiucei31ippovg9jk73exjrdms7mithpmmbixcbyrnya299cxrqosy59dc2mh240me1gddkpdylwye32h\", \"ciy1xka7dxadr9umbtdylxvgyje5v6fyjagy043jmeg3w28qs7oq5mqgn3fucs1rj7c2yj0bsq9kp64\" ],\n    \"name\" : \"Pat Bernhard IV\",\n    \"countryAlt\" : \"183dlkk9tazzckpyhp0xjzao7av13tlv0nt2bvit2xcay1j8kburwqn7t5vjk8v\",\n    \"probabilityAltCalibrated\" : -0.02028106074013203,\n    \"id\" : \"h6a5\",\n    \"region\" : \"9vmcmz0ayxuq2xgrw6xw59ogt4v7k46h7zcl067s826ansoup\",\n    \"script\" : \"sgo77wt0xs365rlvlxydtp86qwl92a026fqlduzqtm661my64j\"\n  }, {\n    \"country\" : \"United Arab Emirates\",\n    \"score\" : 77.02019761314683,\n    \"topRegion\" : \"0ryvfbvsv30b2you6msr8ys5no5bzjcfkmdh5ctx5xyg8q0z1opndhj9scy8okxmpdhc561edruv507hqjeypcob9xfeicq442y7mmir4l801socwvcn1eurz5nc5t849ego6g0nq707gfvn1k2c27ixa6jao71bb97qgao3m91\",\n    \"probabilityCalibrated\" : 0.9743105861127763,\n    \"subRegion\" : \"hsnqw3kahd465tfwo34psshn7sfhkqptdfm21z7vdyj9nrp5agcumxrq5ucrcob6cfg0dnpqh5vf62kwc\",\n    \"countriesTop\" : [ \"n9zv2gfrqff13wvaxffpuc145wnhjh6qthulmynagkcinki61cgi8wmsebo64k1bzkduzplcdue4pmpy5fdtuniadhjhdqxjfo3byp9u79oi6t3ynwh0f0b6ayd3ij5trftufxzc892gxungufe90g3zxqpmcl77qjq26xreyiljf0iu64045efa\", \"iomqeqmwlo8jjv952kj3k93\", \"ftbqugwrl945k1108jnz2jordmjjt7akk47gxv4mwin9lpt5jfp1l3yvx82adh7mwnl5di1wu2gwc37nn8oau5voa0z6sewz1g5cpkus4rmip8nwv338z5qytvik4io5l5oquqx00oegjf1s8yriiatgkrxiykt2\", \"up6o4v1qrprazvqvxcnrat35w1o425zd3rnez4kvmi9oic6d7ryaybf6ogretrh4d5tihip670bs9v429lmw3rarrao59soorwz8q1jz538ecfk6lp6udxgdlw6wzdj9\", \"sv4ldvfx4596evf1oziub5wnac03ci0qs67q7lxdrt2gmn79nvtkf6a9t8yyyc1yjp6r5z8djae5gzulgu31ds7zvzgsozv4asjoj\", \"sby5ruop2vayikclef8ej5gact8f4fx7h9mmzhtwja2e5x5izpdm0m6evbviyspeuzulyq5xg539sadfdr911htudz6uey7y2adq3znpv3d\", \"a8fvintug5w8obcex5eww2c2sz0ulys2yhtq1opzy0fltaxve8ce3751zblkdnfvxcxn4248z2qitzj6rgc7xf7n34n429d1d29e4cbz4nli5e5n38ltwt3jce41x6922tgoz716a7058uo1f8v4s2xje17o92b7irecc3rnkm0w20z6rh2n0h4ht6gw7a4xbbjvjbw\", \"axylbmu176gtu36uuxzmcw55c7f5wzecyb0feq2m7z1rit0y5gei6rwbrfbp35riuo337kwbjzxyxhuuvnmk687hmd4z1fq47oj3gq971s8ktbmj3sd6t9u7wxebj2d6r2mte6rfdwpy2rqjd1bmz9d7if\" ],\n    \"name\" : \"Tobi Donnelly Sr.\",\n    \"countryAlt\" : \"8rfy\",\n    \"probabilityAltCalibrated\" : 0.16512172937564706,\n    \"id\" : \"hu6y\",\n    \"region\" : \"9kkokqol5fc241ff6ayjvmflf39jug2bw31iwgbfpww8qnarmy1880o3aodqqsg27twn8o69m1wphnj5xw69wf6zf7yy6\",\n    \"script\" : \"kopna219ztmsrbeor6lnpr3j322aiiu53bopteic2wd8pn2e8frabtpv9ur9bimrked57dpels6kerctbdog62jphkdmivol850r\"\n  }, {\n    \"country\" : \"Sierra Leone\",\n    \"score\" : 12.118678768104784,\n    \"topRegion\" : \"bemvn50phdky4wiylivknmlvtjnopxccsuf0ngsldplrqewlpude1q8j3j11sg04girfkz7r0941mcm31fdq61\",\n    \"probabilityCalibrated\" : -0.3590157081583383,\n    \"subRegion\" : \"ukn45pqre2c1h9doe8ytc51rjv1jhcod1zkq265zi16hupg8bs433iclah0ylmzj4txd0bpr8fc31etz6c0r6kmn0oa4sna84kxw4g1p43r2f0vevk6dfl5mekf1kcci41mvs2udh772momcf79yn1ntr0rx449qlcimlonsbmfczeeyevzdz7oxku5hwoibn\",\n    \"countriesTop\" : [ \"qat1dtgq4go878ymf9xk6s90w2p6ttq5qyblehv6i0ezxbz5nda3gguelv8pe58ufyw5e\" ],\n    \"name\" : \"Magda Morissette\",\n    \"countryAlt\" : \"c14pyvcb8syi3hqi14n1\",\n    \"probabilityAltCalibrated\" : 0.6164739315595003,\n    \"id\" : \"g3gr\",\n    \"region\" : \"yecldmhtpmv5d8kw6gmaqu7g67rtfrub8e2s6ry0i7dkzewgtp6u61yzooggsytq959m6e75mk8rab6jg80nn4earfr5winakcgkd2pva6c74vhx9ccixait90twzepzzm6\",\n    \"script\" : \"4dol6owy0jeawfd7sa8p0fhvb4xipqyislk8lr76biefjaib25bakr85dfh9735gtg2kuh3r6elxpqh8aqpek5uimk7guf8zo6yw2bvxtxqyi3t\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "520b45f3-d370-41ac-9145-60843d614d66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.487258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified geo names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGeoOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGeoOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "eb2b0b61-a3fb-49f8-a762-59a930be1814",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/country/vcf7brqqrtc526szudo7dazkbnjejmpw3zitqsffelp2uq3iq8lge8deprl77nptljyryeknjyh1g1g6jxxn1sb2jvognkse5vl",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "eb2b0b61-a3fb-49f8-a762-59a930be1814",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.485202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "12b95e36-4c12-42ba-9be5-3400770bc9b8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/country/zcqbqvvf46bwjbyem9pfm3x0g0y88ib8qf8e76g0jv4hm6o4lo2pwp9c2uwp9hblb378mxg0wbcn7kbmlwpsohm6hxio29iyizzxd2rluul16j61t0a9bxcu6",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "12b95e36-4c12-42ba-9be5-3400770bc9b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.485172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "61903a7b-a378-4e85-8932-eebb211a2dae",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/country/hd5bor6wkwx39jf7objucovekj9q0s3yblsvh40ihama2akaekj1cz620fmox1ojo5bagl8klgs552t6eg29nwd8iquh36a77lhwkzuqqoqp7c16bi5mtcvbbcsgui59adn1m6ir311hzjrzxly9cia0pcomexs6wmca6",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Equatorial Guinea\",\n  \"score\" : 28.226741016722436,\n  \"topRegion\" : \"x9usvgeki11hdnwy56kpcgw55bqlq5odgdlhm5\",\n  \"probabilityCalibrated\" : 0.424547518970118,\n  \"subRegion\" : \"pzd0h\",\n  \"countriesTop\" : [ \"lhrmx2opex3srx3gestw1qd8iipq8zggbqnm47a\", \"mk2z83j7lpxbkjd4kkbg6l9bh4g340jgqgxbdql2cweqw35lehefftzcl55yxk0umiuh9pgukekjeh4olp9hx88fow5rcsm6pt31yl0xsu8kbb10d1184lsc26t1i6za0v8vq855nopsuvs9nl9qqsnwhy53m81uydi3qwv20\" ],\n  \"name\" : \"Annemarie Bayer I\",\n  \"countryAlt\" : \"xf7c718c6i3z91ok58bhimp76xainyrxykwiz8qkl16p671f4asfvwhu3jtnrludoe9i0ug2qtuveonlyxrydj839jbzwndmvpvhi3clxvfctefp88sh13lsrfxjhagqs0dim70ku2lmyoy0g8st60d4gr2a3venhb7qsq1t671uhil4bzmi\",\n  \"probabilityAltCalibrated\" : 0.8960158310505242,\n  \"id\" : \"z1r1\",\n  \"region\" : \"q2emrba10xkqfwv6qvalznbkwjxphb7rwv4ps0snf25wyg4zoe6ga4q8e91mf39waxsazv552hp5d13h2ibwzmtymdmk8wctmq6qexv8848pg46y95f9thkv04kj3j8mwjm30pg465mp031jwi\",\n  \"script\" : \"f9lt1w4gyvidjy817aac931dpr0or55kcbwi64fhktu267g47qce4moy2z7u4ntgvr13gy0ecz1iviy8qko37kj43595vhd04vqq8pyqv6d000lgleb4t9pfktnniray25g5ja1ycc6onw8tgppw8qf5iqairenjaeae7gaq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61903a7b-a378-4e85-8932-eebb211a2dae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.485127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country",
          "schema" : {
            "description" : "Classified geo names",
            "properties" : {
              "countriesTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "country" : {
                "description" : "Most likely country ",
                "type" : "string"
              },
              "countryAlt" : {
                "description" : "Second best alternative : country ",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "region" : {
                "description" : "Most likely region (based on country ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegion" : {
                "description" : "Most likely sub region (based on country ISO2 code)",
                "type" : "string"
              },
              "topRegion" : {
                "description" : "Most likely top region (based on country ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGeoOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "a6b6265b-58f4-40b1-8af5-d6ce7f9ef7ce",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a6b6265b-58f4-40b1-8af5-d6ce7f9ef7ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.484747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "a8ad94d1-1547-4b38-b802-7e8520647718",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a8ad94d1-1547-4b38-b802-7e8520647718",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.484732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "e529f145-fbc1-4dce-8775-9027f0005e0f",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 400",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e529f145-fbc1-4dce-8775-9027f0005e0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.484715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "71e991a0-d483-46f5-9756-c7d4207fe6c4",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corridorFromTo\" : [ {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Tommye\",\n      \"lastName\" : \"Ledner\",\n      \"score\" : 11.897814321178846,\n      \"probabilityCalibrated\" : 0.9728766235585264,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.42583846177383533,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"4gnzah41bj04ne1o4peq3vvmxvtfo\",\n      \"id\" : \"w567\",\n      \"ethnicitiesTop\" : [ \"xihhyr04akhjmev9pwrtk49cgoa4kvi5iokrfua97xvlbt0s7s89g70u3u98w9ttx8erf1j27lpb8la5oxlixwhsaqzl2pjwuiz1uxkpa5k8jo9025jb2s79purz0ezogermq6p9skih638xeum5n6\", \"u9elx5\", \"7w5ui2e7u6pydm16odztb7fyzkhuul53xg8fxnv1z87v1c8pbmsdkf3tn581pxrejivktsgi2ttmg7gzlj208yas1n2jgwlp5fyxuxx2qh\", \"8x3zueitnf33ex07wo\", \"hwdm2sbmcnukqlwt98hf27qjhstb7pmoechctt1db79qxvusd9qd1wgd100p9selrufz90hqadxq3wqtupverxpekll0jcfjtqpj2wdcxxgzv4wkchym162m3moiddn877d7xzj4f8nzl3g5i85c13butc8rkn1q39odocb8922o9tnklvxlx5ms8indu2q4el6fh7\" ],\n      \"script\" : \"lnegt5jpfdxtulwkddsov78m3on29rvm2rfsnc999m99745wtsfsy8cez6v33xabmrktcv99u0v4mh67dhfbvr15ze\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Wes\",\n      \"genderScale\" : 0.40041837151850035,\n      \"lastName\" : \"Anderson\",\n      \"score\" : 73.36745017281544,\n      \"probabilityCalibrated\" : 0.05131452916502921,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"8xo8\",\n      \"script\" : \"haomzdovu1dr6wncakssqgdqh5zexeu4rfwtsfxdy1qtc5lf7ppk2an91yd2wv3ue1sdfye5v3y464e7xx1bu0vyceuh9l1d1wotk3ht1nqtgyzp683xmxfien70k86nhh55pe7ixx0mtfwske05fustgbrd5jgdsmu1sew7xy8dmatmtwyjtiuug4n7zj9b\"\n    },\n    \"id\" : \"ezso\",\n    \"script\" : \"wmnt826h8o6g3du8whhkh5jyy4b5nflajilcpaa5tqmhr2frgnn6rh178mbc041t1ubn03st0\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Graham\",\n      \"probabilityCalibrated\" : -0.8776471498707838,\n      \"script\" : \"7mfe4kwaoxjo1b8aqcnra8mxl2biesqw1x8zgj4f623ks0jncp8y0e67rjsxnnygnxv5lktngvpkcss8bc43k8iebaw8jymjwoire98mcq9zi0kc8h42nwx22\",\n      \"regionOrigin\" : \"bien3dwo0b7r90jeaw8yrbr6gr5olb0yymim8qnrm33gangugv27l8shu97ac2r2sqa6v9u58snvn76bvatubvm3tnc\",\n      \"topRegionOrigin\" : \"3m3luq7dgurrt3w6emro9zk3tti5cvjjd5ki2pwf7x69\",\n      \"firstName\" : \"Laronda\",\n      \"score\" : 22.178381354654785,\n      \"subRegionOrigin\" : \"jvchasbsa1hp8bhh6pquskwqt19eu4tfvq5iqweupndty85o9qtpr\",\n      \"probabilityAltCalibrated\" : 0.7051193823512314,\n      \"countriesOriginTop\" : [ \"yus9onj2pvnq0yekt\", \"xkrbmq89a0sayczfywes7y5mnwsdotb379vxywdo0v2ski7z6acqdva6gqk9sm326hrjjacmkxy00mvihsfq2emykhv0tyxbyyfl98m2t6mcaohiihkjeggcr16b5eg9eh2f4bd9j9fmizpkynjzalo66dq02tplm2le4yfvocxwojln\", \"pjzg2rxlt4v9v\", \"o22gaig9pt96hoi8hb73x9c2sk0mx6i8ugcvut9y\", \"ouha71olvb3ykgq52opv76ghttsq3yrereis201kcjw6cyuezpvllq8k0gixa7cvfomvncqxyyqg1y03nem9q7v833kq03khnklqttodenkj98o886n7xb0pd4srubgpgmh1sp97n8zzb788dbe4cx8imyrb8m6vxu447i\", \"a3gm9n8jp96r6ayelky03ksjl15244lqsk7w7n9ur6g5c9gpau3n7nh3u4c9j75i5k31rlz97nm7qv009blswqtxlncncvtmrxu2teyowy6hr9hst\" ],\n      \"countryOrigin\" : \"4y7om6szgyv89kloh9zsh2o576iy50wyhbspefgfr753t9sfg6d6mw3iw61o3jzsuyxjz6dxvqk5q0tt9ba5fk5zl20p5mus8axtsklm1s33q4b7los3f6h11j1\",\n      \"id\" : \"y2sx\",\n      \"countryOriginAlt\" : \"whaxtmbg0e\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71e991a0-d483-46f5-9756-c7d4207fe6c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.484686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch",
          "schema" : {
            "properties" : {
              "corridorFromTo" : {
                "description" : "Classified corridors",
                "items" : {
                  "$ref" : "#/components/schemas/CorridorOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchCorridorOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "c0de6c91-cd82-4ab4-b89a-c20b466204c1",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridor/jl6nvga7s8ab9mgy31dxu4ub4c0wbro2t3dhy2i9znznpz098itawpeijpi6b5c9rwmw12qgufclmzhecp9o9lso9szaegz0x1fk9422jrpq0ir75prtgmbkxl268spyf1j/7jyknzca18eu1s20c8wi74q4ugz2bw9pr6jqkfindko7vdrd4l0v24otr55i026092wd6rh18bm28x/igvqmfpxbhawhw9k2jkor02edzbfsngnseaxmu7sz7ce00ylvikgqvbw1s16iudqhnvkit0mvs81nu4m/hbj8uu5rpjw531cwvt8klzx2o6xe19bnxdtf8jn5oqja66ui8wco0ql7pnsw8oiu22ooh4114u3bxold21j4wvyctjft1muen3o1duyhmm5n8n0lwbthmqgo19df7jx5awpopz3wyjho4rs8c6uzofscpag2w3jnh4qt7hb7j1fg7gg8bk/iaekb1yeqd2b1vulrvid5udet3uhke38z5b4jnd4r1fvfbrq25j8mckql6fb41jhi78naix4fqy42yslfklw96xmuywoitbb9kop9jd5ff5pd00z1kedccuypkbzzt66u85m3a6xmkqf1cosb50421g6yd6gqymn6fyzgm/n314rnjmqas4stm7wsckkr06vvu5z3qnqub8rzzfhzarnru8ga5cfj2i0ir2eowd41mlj0321qq4whjtyn0ydw3u44jzcfvq3kmxjtq8uxcq5ige22yuxhsr36g727u8lzkmroa9cms1s33zff3xin0tl6pzsqe9ynig41v5yrim5fwsrmki7pgkx",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c0de6c91-cd82-4ab4-b89a-c20b466204c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.483842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "5cc673b0-842f-4f85-b0da-06c3ccedcef6",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridor/h12mw4o1n4/96vbh1evm4fsceiy3cn1xjb53ircq1vpf8cm67nz4g72wd54asbago6lo9lg6i7w79520cagug3qmq3o/c60kl6n7e9mssofjdhmmd145omuv3ldt1e7ownwnwfkjs44en5zful6wxho8/8qt8opccz65jrwqjt9v2kh3ol67zpwqz4avm5vfjukbj8jedwhr3p1fbenmw79g2cxnsqdsnb1sltmohat5vnyq90y/2aanp7gdaz6b0ylgcs5rlm53vccenk7fkp131huhrdg3nio8ph19zofh11mlys7qtp0wecwv01zpz4y87x/ixmcdd7dr6jaa1osu37bvf85888cpec6duk6hx7j6aqtp0x4m01pr99h31ow33mj7bf6imnt5hmbv1nwn7a8e2dl46pm9h5qt1n",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5cc673b0-842f-4f85-b0da-06c3ccedcef6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.483763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "232d629b-88d7-46cd-8c89-de1c7a49d837",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridor/jel9nyihr1j42j9uwa9bnaohyqib0bvg1oib2cipmt56i6jx2sdeq6lmcf7trttdxvfji4hr17ii94rw5th40qvzlzp8m7mrga1xndo8o6ltt42i9wv355c8rfydxm6q6bl62wqor8avtab0qb9misd/ksc2o4kubct88feueohqhumckqhcbnpxda81gr0024go4t5n7atdem/7yt2zsmv5c9qxmm1f61a35du0pcmcx7wps0sz3newfth0yej59ebfilh7p10/axb3yrfabh6rdor1zxr7lndeiaox90q6kuwtkezrcjl1c4djfqxos/b9omhfvq6p1j3gxcioyozv6h39om45fnz7job28mzuh5g2g3x49qwl81qgz1qrq3ilnzv4tvx/6bfnztbot9nhj5ebgw5r593b2covxr2s2",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"FirstLastNameDiasporaedOut\" : {\n    \"firstName\" : \"Steffanie\",\n    \"lastName\" : \"Bahringer\",\n    \"score\" : 57.53346890159873,\n    \"probabilityCalibrated\" : 0.47897527770969983,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.6718698312467919,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"ex2ejqik93ppobwb8r3tkme4eny7fdcbemypo63ee8siihkkdciauivopekfap955wzk4npa231fsw416\",\n    \"id\" : \"co5f\",\n    \"ethnicitiesTop\" : [ \"x7jgaw9vu1gjvt861i0y6qo6n8v3d43wcmtla7q5rbcv0zmr711fbi4g9jn4jka1tk8v\", \"r1yhlm9ppt8p8ztfmt7qas9o5k1vw37si8cg3nkb8ok3dp63dwatqata86pw06xahgdkn45i0eqs0klkurdge7xuewbyc303p6nig\", \"ez7n3xiaqgd55hsb5i9lxb61u266belyqgylafjg4anjhopvqgekvzdjakukf6g4x9d6ces8r17hm23544kxm32t0si01vz8zlcbic6e5k0wffzn7hlnz3pzbq4zyx\", \"lrbq23x9j63p4tzu08y0rhf3kl5zyf6mty18bye2hegf4hbzdvko5zq0brw2g0dlspowmj87ez1vskqxmnepz9hb7w8hjet0dzeipilpb1l78ycqs10aj75hpn8api2j1ulyboc4j\", \"07y7dzz2z98ach2xapn2bne4prvuwhg19j8b7f3ckffghna\" ],\n    \"script\" : \"lgtui3mscxdap1rfm8sqb1ru7\"\n  },\n  \"FirstLastNameGenderedOut\" : {\n    \"firstName\" : \"Taina\",\n    \"genderScale\" : -0.08563909916646795,\n    \"lastName\" : \"Keeling\",\n    \"score\" : 12.970977880883838,\n    \"probabilityCalibrated\" : 0.9309904655260983,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"0xh6\",\n    \"script\" : \"fss3lha4um9ac3ny5lcirc9winlapdn3dkarr6rvshhi7kwpock6t1d9m90syv9v4uphslaigb9jjj006ei38qofjb6zqa36x9f\"\n  },\n  \"id\" : \"j138\",\n  \"script\" : \"d63txf7vm00ebgweqhgm4lbns3qzjw8wajul7149zha3149z5dev4th6v5sqflzgqy8ypvbt4e014qmbk00yln3tft7whdzu63n8r7d15atlz2\",\n  \"FirstLastNameOriginedOut\" : {\n    \"lastName\" : \"Brown\",\n    \"probabilityCalibrated\" : -0.29545830023589237,\n    \"script\" : \"l1j0bwwre96dc\",\n    \"regionOrigin\" : \"ktc6yaxjgjj1x0b7vnrniexsqtqf0w3b3y8vnv0g7x6hwql3iefldp89kjqu2k579f9s8nkr2h6t99d4qruyu12wpxh9ve8h8kzie5aemppvsbsl7i1e5eggpl0j0d4deur08ppwbrmufk\",\n    \"topRegionOrigin\" : \"opzdph55grocv3jwhj2dwppe0p9pveqp0hvl275qfb391fjfo\",\n    \"firstName\" : \"Lenny\",\n    \"score\" : 40.988807584955765,\n    \"subRegionOrigin\" : \"e4lbhwbhbt8qzxbgr937npd6pl1fhyikcwmbhs99rfbbwce1kfzg3aw4ojzz1w1u\",\n    \"probabilityAltCalibrated\" : 0.88759206900562,\n    \"countriesOriginTop\" : [ \"ckq9k5ilufmee3zhylv1hqq0mb8bsx5vfoxt9mhdxnwj0bjrmpbcuevbadqqjmwrpt7n56eu304sebevqf6vda9ureead9l4qpac8p9bk5r0kapconxypfvj29hv9pnkt62yt5btiwlgr1r8h59h61iv7we1irajympjy13sy\", \"9g610okdniuia13pu1izfmdjej1ky80sbm73lyc4rdtff7sbrui3fa30ennlsvzwtbopi8591rs\", \"q0sdqj5os0s51cn2o5km1ug0mo2ipwc9whhskfnmp5329hasgu3drvgeo7kxx1ahjqnojpmg7vdg6h0ihw2qv8wk6la7wqpydbrcdeu126c7gmlbxdfy6iegra80be0o28blousw9fpcw\", \"e1ron1w0rbv4vedy02qn719j0a3roa4v4lvwqyhunv\", \"qfnj7sh89dkap9ta9otv07tj\", \"x6vas54pvmm70sxu969m6u57p6rexu753r02ozthvvpf3jho20nvagoahmoh4cup8jw60esc7s43jk0e8u6s7psqjbictp3bopujzmy7c7vabb894hofqkloju23prejbdyd2in0cr4a3wjj4ovtqnznx3ea3sflx8pshk6dxtpw83u\", \"jefzxir8yxoz6uxay7bxtk00i8qufabqth2s1lo89ep6ktetitc0wj2cdq7f2hvasxu57qs11uvz1havkffocapqk4cky5xya12i04nqvo8liprawccj01twai0kp55yxrak0c5wu31s3v7sro8pcblwn4wg9mjxc6ua\", \"00nscn9xrrv0ddkz0ty29ev7934g18hckimipg43ozxy21gzhi\" ],\n    \"countryOrigin\" : \"7t848fp9shnnpdsvk0zo4p0r5dqtsg3zwheoyjx7y3y4hh3annm2i2k3mx321rsqndr9e1safy66lxmdzyboaknh1lnrg9kzx6ws\",\n    \"id\" : \"1l7l\",\n    \"countryOriginAlt\" : \"hwjfktg8t3y4jv9j6x4e7osf4bfrsez02gpu1lhm340nw0u5shf7220ootray420q3aj2bpwuya894l9fautu5g0tfzf3jnccr8airz7zwzxfnwui1tunglr8w1h9rh4tb9v5y3bk4idkujpqakk8o6hks70y5\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "232d629b-88d7-46cd-8c89-de1c7a49d837",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.483673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor",
          "schema" : {
            "description" : "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)",
            "properties" : {
              "FirstLastNameDiasporaedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
              },
              "FirstLastNameGenderedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
              },
              "FirstLastNameOriginedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
              },
              "id" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "CorridorOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "6d7a7735-b815-402b-b5f1-f43c1f76f1ef",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6d7a7735-b815-402b-b5f1-f43c1f76f1ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.482755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "4f7ef0ce-57cf-4b02-ba79-46fe7b288b30",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4f7ef0ce-57cf-4b02-ba79-46fe7b288b30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.48274Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "471fb28f-f22d-4176-9e21-aa75ec948bd4",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "471fb28f-f22d-4176-9e21-aa75ec948bd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.482724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "ecd51c92-af4f-4390-a370-a900ac72bf58",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.6859156235464445E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"uxn4\",\n    \"script\" : \"qfoz7llhaf7j4uutuat69omoqy3rl0qfftyys9pqzsif57geck27ow3xp0e880iqcmzbpqof9aien33x1dlcxsyguj3hbt185bshotzpv5603eno3ykop46dzpz416iyz\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecd51c92-af4f-4390-a370-a900ac72bf58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.482698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "0cf76771-3249-4015-b391-e23e1d96850e",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/9bmvhm1f3wpytx845fdmrdq9j95vrxq9slbe7r38c1s9/nqgj90j9a00z21ohgtce2xornet58cyz8eewsyxtsqkmh8v4li2ruv5ddzhnoqr6y9g2y01lwkewnx8ku067eopgcn5p54eo6fcm2/Rich+Murphy",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0cf76771-3249-4015-b391-e23e1d96850e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.482531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "68dddca1-7d50-4e18-b400-a8b5689fa620",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/fh9myy2oditld5e3jwa65jdy5mgic1dy5xeuncz6d2ja6a77y4jhc1lxw6w68nf343o/p1dnay4oc6s96gtu4tyc4mnzlm0409rg99u5qo53zreh4m0uc55bkb8lt640c57yeix6omrs96mrb05as9sopv5qeutblzfdaogn48vjyop1xnhd1nu26h504rmx840wks137214i1yni38i1p36s8eqzk021wy5w9jc9stndotvfgy3p7z375anbeuxnj5fu4jcx/Arthur+Brown+Jr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "68dddca1-7d50-4e18-b400-a8b5689fa620",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.482423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "b30814a3-973a-424b-8594-2d88130b1707",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/bi62decg9hqfn0i9w26m6ekwo4aa8vvwxasbh99d13o8p6ckw7n2nh286pnsvkeegt/uvd1p1tm1o7clheh5jsf9r8ts1d8vz6qrpgy6nllaor1os7kcccqyxeppjjmwh4w9srvq8iz3y0wnjgwztmf59yjrm07qi52ibdewgetjxili5eszg1sw6weaz7468itdrih2vbbr6sr4d94m2yvshciylp905d7/Adrian+Klein+III",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.4013742232833356E308,\n  \"matchStatus\" : \"Match\",\n  \"id\" : \"pglv\",\n  \"script\" : \"93a01bypsa8o919q42shdng06722t8tnrz37i908deab1w02phtx0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b30814a3-973a-424b-8594-2d88130b1707",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.482316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "3fd66ae3-4870-483f-84d2-24e4af94057e",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/6pd4xk1zz14hw8boj94oilll8j45wgeyo8l5ftmifb9c7z5ptugfw5f36y2btmci8buf9y2ztiqd3b7h38yqcs20px80lpfnteq7fg5dyh9k5s5wtlqjqil51e0a120ogtbreqipm5pq43a12jszv96h26w8tb2mlfg4q8ejseehtn7k/o51nbwejb6n3loh74ocqqjlj4t98yz0x9vp14/Agender",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3fd66ae3-4870-483f-84d2-24e4af94057e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.482077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "789a69ed-34fd-4dd2-ad8c-443f5cd53fbe",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/mm0cka3c5atzk6gonrriw3iyuqgg4zg8i1dmd4piyclxrfkprwtkfcykh63r4s46mw18s5c9oe0ahx0c323cavwdqo3xxg3bp6ebcnepq867ekmx2loa10xduw3rf7l0wz4ey8tapjeau8lntah0sef8s3chqs6y2ckebkw4o61zxwy0v7dvmz4mlvuqqw/1h0quanpto7rkz4ykaekf6uy8jjgt0wtnivzbo71yuvhjci98r41ugbgf4k5jz0xjoymdqricmxqhu27gqxgpefdigr4psdxoy10ha005jw7/Genderqueer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "789a69ed-34fd-4dd2-ad8c-443f5cd53fbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.482015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "37262114-9575-4072-8bf4-bd50fcf6ea73",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/l839an6nufasvu01b/12syogm48erwkw4b3476cppzek0loyrgqkgaecvut81g6h4hutu13qmz7jyysmrblyrucl15niwfecpjuwcase5r9lbabif3i2f9xt7j0wkjdaobjjr1iivnulojcjik/Genderqueer",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Malcom\",\n  \"lastName\" : \"Gerlach\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.549450566002856E308,\n    \"candidateName\" : \"2022-12-29T11:15:27.481476Z\",\n    \"probability\" : 7.868414874632247E307,\n    \"predScoreFamilyName\" : 7.107611049579984E307\n  }, {\n    \"predScoreGivenName\" : 1.7450371412380276E308,\n    \"candidateName\" : \"2023-03-02T10:04:27.481519Z\",\n    \"probability\" : 1.032522117600912E308,\n    \"predScoreFamilyName\" : 7.987396011281781E307\n  }, {\n    \"predScoreGivenName\" : 1.633505554624078E308,\n    \"candidateName\" : \"2022-11-06T11:47:27.481561Z\",\n    \"probability\" : 9.170522985861666E307,\n    \"predScoreFamilyName\" : 2.1065482653158949E307\n  }, {\n    \"predScoreGivenName\" : 8.21926563592584E305,\n    \"candidateName\" : \"2022-08-23T08:18:27.481605Z\",\n    \"probability\" : 1.3968212667139482E308,\n    \"predScoreFamilyName\" : 1.704826551813887E308\n  }, {\n    \"predScoreGivenName\" : 1.7192729240861801E308,\n    \"candidateName\" : \"2022-05-06T08:41:27.48165Z\",\n    \"probability\" : 1.7106564060045095E308,\n    \"predScoreFamilyName\" : 1.6220588974238055E308\n  }, {\n    \"predScoreGivenName\" : 3.083245740959963E307,\n    \"candidateName\" : \"2022-10-26T09:26:27.481694Z\",\n    \"probability\" : 1.3482449969946247E307,\n    \"predScoreFamilyName\" : 2.2366754353361363E307\n  } ],\n  \"orderOption\" : \"nedj91ua8pzp4nnvtvi9y6ro2bbqt7ha2694rb3wbspuo4qrk6e81rbamfmd21mlci72sobv0o2jch0ulbur5lo33b2pxp2so1an5wh76s1k3p99iu6y3zkam2eqan6iu50pgmyv3ug3bdh77nq2he9wu775um4b\",\n  \"id\" : \"6iyp\",\n  \"script\" : \"encwohqxb6wytu8zylz2bgc84nkuek9s3h3p3ajnj74m16ksgyv18vwou89il3hprclmufneoprnvmpbg90hvjxjil74id3038ayisim996oyqitxvi2kt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37262114-9575-4072-8bf4-bd50fcf6ea73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.48194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "9ed5a59b-fcce-4897-b725-f9a5ce32b9e9",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9ed5a59b-fcce-4897-b725-f9a5ce32b9e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.481378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "e655fa11-ea9d-4f52-a039-ab5f7b405b5e",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e655fa11-ea9d-4f52-a039-ab5f7b405b5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.481362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "22d3cd86-7354-452d-a513-e6f4cd399bb9",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "22d3cd86-7354-452d-a513-e6f4cd399bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.481346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "ca1f6e3d-97d9-4c7d-8df7-3dd1cb5987cc",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Son\",\n    \"lastName\" : \"Bernhard\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.564805185585561E308,\n      \"candidateName\" : \"2022-09-02T11:38:27.480577Z\",\n      \"probability\" : 4.4833001346592516E307,\n      \"predScoreFamilyName\" : 2.009295453277673E307\n    }, {\n      \"predScoreGivenName\" : 2.6276538630629243E307,\n      \"candidateName\" : \"2023-02-11T07:58:27.48062Z\",\n      \"probability\" : 1.4036142765608035E308,\n      \"predScoreFamilyName\" : 3.7406493588803323E307\n    }, {\n      \"predScoreGivenName\" : 1.6934884374094064E308,\n      \"candidateName\" : \"2023-02-17T08:12:27.480665Z\",\n      \"probability\" : 1.5407419128151432E308,\n      \"predScoreFamilyName\" : 3.877040629832262E307\n    }, {\n      \"predScoreGivenName\" : 1.1587432567999084E308,\n      \"candidateName\" : \"2022-10-28T09:33:27.480707Z\",\n      \"probability\" : 2.4293720844466544E307,\n      \"predScoreFamilyName\" : 1.3185503543739422E308\n    }, {\n      \"predScoreGivenName\" : 1.3963566802733842E308,\n      \"candidateName\" : \"2022-10-27T11:49:27.480752Z\",\n      \"probability\" : 6.002383078908628E307,\n      \"predScoreFamilyName\" : 7.815255618235541E307\n    }, {\n      \"predScoreGivenName\" : 1.5642833099970334E308,\n      \"candidateName\" : \"2022-04-09T10:20:27.480796Z\",\n      \"probability\" : 1.4679180142754196E308,\n      \"predScoreFamilyName\" : 8.904146548822555E307\n    }, {\n      \"predScoreGivenName\" : 1.3425685845560647E308,\n      \"candidateName\" : \"2022-12-03T11:18:27.480838Z\",\n      \"probability\" : 1.0425429330152135E308,\n      \"predScoreFamilyName\" : 1.737938779260849E308\n    } ],\n    \"orderOption\" : \"qrkmkw7lvg06uy9ioo6zv6a6qtnhh79q3b665zs6aeiok8tewstjzu7ulieampno88fcgarj6nvo8joa0wx3ph594vaav6d4beybgd\",\n    \"id\" : \"88s2\",\n    \"script\" : \"qmvzx0g7fnet03uvrptvwhcte7884atsj6e72vjcl7nneut4h29wstjucfhowdbpsk5f900y05lnsnvruuc4880m6n6gh176pnlsf6dcc0xo925w9hhikfx5a4i0cpdn6jc87y8simev3coydqhnm9neew1ad6cgo0d160qo0axesty2xnnlsf6awwg4nre8u\"\n  }, {\n    \"firstName\" : \"Maire\",\n    \"lastName\" : \"Casper\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.557717695491796E307,\n      \"candidateName\" : \"2022-11-17T11:10:27.481046Z\",\n      \"probability\" : 1.299823963898315E308,\n      \"predScoreFamilyName\" : 5.257283977575795E307\n    }, {\n      \"predScoreGivenName\" : 1.6352717018444605E308,\n      \"candidateName\" : \"2022-05-17T10:10:27.481088Z\",\n      \"probability\" : 7.7806479455366075E307,\n      \"predScoreFamilyName\" : 5.078743570139091E307\n    }, {\n      \"predScoreGivenName\" : 1.1575763268078122E308,\n      \"candidateName\" : \"2022-09-25T09:53:27.481131Z\",\n      \"probability\" : 1.3092714326963548E308,\n      \"predScoreFamilyName\" : 1.1295263912425566E308\n    } ],\n    \"orderOption\" : \"oozfs77dvgvl43o7q1iktd5kmurn6jdikkt0b8jojg9zho5275l37c98gp9ey\",\n    \"id\" : \"n4v8\",\n    \"script\" : \"b1fl25f0011qbytz815su9v937v8fzs3p5k2qmvglqqcdnwryvuh6qxihjkkhiej95x0oohzle4s15qksymmj73ksdp8lecuig8c44re3nstkvd6yt4dkvk535u19mqog1787pn0nfe5zibxqy9o5msyynihzu1kc5f2zsd6z3ikx5v0znximhv2y6ae\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca1f6e3d-97d9-4c7d-8df7-3dd1cb5987cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.481317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "39f0a39b-cfe1-45a1-916c-0396c5eba580",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "39f0a39b-cfe1-45a1-916c-0396c5eba580",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.480471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "3ece634f-9ede-45e8-9e2a-45390171c97d",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3ece634f-9ede-45e8-9e2a-45390171c97d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.480455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "d1dc1681-611a-42f1-9182-547fddc6cf17",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d1dc1681-611a-42f1-9182-547fddc6cf17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.480439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "7ed4d6bc-d8b4-4b7a-8662-e5e89ada3c62",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Isaura\",\n    \"lastName\" : \"Swift\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.578810795331333E307,\n      \"candidateName\" : \"2022-03-24T10:37:27.478249Z\",\n      \"probability\" : 8.424731075669887E307,\n      \"predScoreFamilyName\" : 4.1046484389213873E307\n    }, {\n      \"predScoreGivenName\" : 7.251748373983376E304,\n      \"candidateName\" : \"2022-05-26T10:42:27.478295Z\",\n      \"probability\" : 1.6735280300030366E308,\n      \"predScoreFamilyName\" : 1.512108120800707E308\n    }, {\n      \"predScoreGivenName\" : 1.6259686717795633E308,\n      \"candidateName\" : \"2022-08-16T10:26:27.478338Z\",\n      \"probability\" : 7.445686809745402E307,\n      \"predScoreFamilyName\" : 1.9519637218521906E307\n    }, {\n      \"predScoreGivenName\" : 1.559543577256406E308,\n      \"candidateName\" : \"2023-01-19T11:28:27.478384Z\",\n      \"probability\" : 1.6863075855487661E308,\n      \"predScoreFamilyName\" : 1.6029749826510546E308\n    }, {\n      \"predScoreGivenName\" : 9.745320381439203E307,\n      \"candidateName\" : \"2022-03-27T10:39:27.47843Z\",\n      \"probability\" : 7.148443763139528E306,\n      \"predScoreFamilyName\" : 1.7186294446386384E308\n    }, {\n      \"predScoreGivenName\" : 9.10806875312812E307,\n      \"candidateName\" : \"2022-07-01T08:44:27.478473Z\",\n      \"probability\" : 8.050175545263336E307,\n      \"predScoreFamilyName\" : 4.4824600247074626E307\n    }, {\n      \"predScoreGivenName\" : 2.276879801271343E307,\n      \"candidateName\" : \"2022-10-03T09:06:27.478518Z\",\n      \"probability\" : 3.893331860674416E307,\n      \"predScoreFamilyName\" : 1.7524860313268768E308\n    } ],\n    \"orderOption\" : \"gpoojqjnsgeppjyc3vacaov29itziranyss7g70mfolg9v4jvpm787zjrnei9npx\",\n    \"id\" : \"0603\",\n    \"script\" : \"2d13v93jdotufbezqmk2ruhd814sq0c1b19xtlw34s73n8hnmdcxx6gxdxze69ktf9azpe3jrlhrr\"\n  }, {\n    \"firstName\" : \"Kasey\",\n    \"lastName\" : \"Nikolaus\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.968160350046819E307,\n      \"candidateName\" : \"2022-09-08T09:52:27.478727Z\",\n      \"probability\" : 2.5229221576184135E307,\n      \"predScoreFamilyName\" : 9.58278419923478E307\n    }, {\n      \"predScoreGivenName\" : 1.1951231059544014E308,\n      \"candidateName\" : \"2022-06-29T11:41:27.478772Z\",\n      \"probability\" : 1.6767478759379448E306,\n      \"predScoreFamilyName\" : 1.2926581802249552E308\n    }, {\n      \"predScoreGivenName\" : 8.377326432878421E307,\n      \"candidateName\" : \"2022-04-19T09:36:27.478817Z\",\n      \"probability\" : 1.3387674188551213E308,\n      \"predScoreFamilyName\" : 1.2879250168532075E308\n    }, {\n      \"predScoreGivenName\" : 5.467211348253446E307,\n      \"candidateName\" : \"2022-06-08T11:49:27.478861Z\",\n      \"probability\" : 1.0865880556740023E308,\n      \"predScoreFamilyName\" : 1.205219067482916E307\n    }, {\n      \"predScoreGivenName\" : 1.299677836894658E308,\n      \"candidateName\" : \"2022-04-11T09:03:27.478905Z\",\n      \"probability\" : 1.1026382451467675E308,\n      \"predScoreFamilyName\" : 6.253318698565338E307\n    }, {\n      \"predScoreGivenName\" : 1.665463399472945E308,\n      \"candidateName\" : \"2022-10-15T08:36:27.478947Z\",\n      \"probability\" : 1.567920495182491E308,\n      \"predScoreFamilyName\" : 1.63072707038066E308\n    } ],\n    \"orderOption\" : \"75mit10mocdf2t7tbchzizez3pmldix\",\n    \"id\" : \"zk51\",\n    \"script\" : \"u0tyrobaaa9khbq8ppb3snu7ktf54s1ey00txs6vfwpxj2ajobsjrwz8cwbo66cduwszt36k7y26xnm3idwnyjpqca7tq6mi3bl4dzc08xafg4q6fy7lz8pd336nw129kmrf3b6oz0vc22naigpjlz6a2qunw7t2qk2lhmzvv0mc195mozeag0pnlfixrxai1\"\n  }, {\n    \"firstName\" : \"Evelina\",\n    \"lastName\" : \"Haley\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.7281474446000655E308,\n      \"candidateName\" : \"2022-10-04T08:31:27.479151Z\",\n      \"probability\" : 1.3417878508986996E308,\n      \"predScoreFamilyName\" : 5.079247564812912E307\n    }, {\n      \"predScoreGivenName\" : 1.049542147261822E308,\n      \"candidateName\" : \"2022-11-20T09:23:27.479192Z\",\n      \"probability\" : 1.590973064015699E308,\n      \"predScoreFamilyName\" : 6.937889895839979E307\n    } ],\n    \"orderOption\" : \"gxipar1y2kboqh3836tcgmgkc80un2qucz4igbktzvia8m6v78w1fkqevx01i3bnelgj6t2hsf7eqir8tjyucrgwjdoxnz24r3ylqe5h48ny7dsmyk1utjq4sg5azf2hj5e51x3mo1qdtg03tzfb7mgi3ufko9jdp2k4sifzjosjzufcvsx5b\",\n    \"id\" : \"h6lb\",\n    \"script\" : \"ted3kk6xsacvqtgzvj8zs5krsccxnysodrh7b886dub7epfr1h1uqb31clgatwql1r0dcxff7z8olz5nfd4x3o1h8mygbm9tbjrveqln9lka7ay0jjr6jrrjdmextv60dv5sucwsew5f0bq6\"\n  }, {\n    \"firstName\" : \"Kimi\",\n    \"lastName\" : \"Flatley\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.071278014696448E307,\n      \"candidateName\" : \"2022-12-24T09:59:27.479399Z\",\n      \"probability\" : 1.0195909601349862E308,\n      \"predScoreFamilyName\" : 1.2411177545327266E308\n    }, {\n      \"predScoreGivenName\" : 3.264240067642248E307,\n      \"candidateName\" : \"2022-11-07T11:12:27.479445Z\",\n      \"probability\" : 4.867468913731209E307,\n      \"predScoreFamilyName\" : 1.7355585335904523E308\n    }, {\n      \"predScoreGivenName\" : 1.6831684046183157E308,\n      \"candidateName\" : \"2023-02-28T08:57:27.47949Z\",\n      \"probability\" : 1.616006216626415E308,\n      \"predScoreFamilyName\" : 5.259462146992945E307\n    }, {\n      \"predScoreGivenName\" : 1.6548061018782357E308,\n      \"candidateName\" : \"2022-11-07T09:04:27.479533Z\",\n      \"probability\" : 4.2238077895883137E307,\n      \"predScoreFamilyName\" : 4.4012171898863486E307\n    }, {\n      \"predScoreGivenName\" : 6.209808481062363E307,\n      \"candidateName\" : \"2022-06-02T08:37:27.479576Z\",\n      \"probability\" : 9.220193411928657E307,\n      \"predScoreFamilyName\" : 1.2926061335738487E307\n    }, {\n      \"predScoreGivenName\" : 1.6859494891752427E308,\n      \"candidateName\" : \"2022-11-06T10:05:27.479621Z\",\n      \"probability\" : 5.025886422157389E307,\n      \"predScoreFamilyName\" : 1.6683854730784483E308\n    }, {\n      \"predScoreGivenName\" : 1.084125108394739E308,\n      \"candidateName\" : \"2022-05-10T10:33:27.479668Z\",\n      \"probability\" : 1.077302201572747E308,\n      \"predScoreFamilyName\" : 4.682321170948461E307\n    } ],\n    \"orderOption\" : \"knjh1iu74a1eisqzrlk6mtpkj6ckq07vhycptk5ve6cgz884y7yb6j0vbzjt3zu76dj85cdg1h4iijh7zynp8grqupzs1uxfcmry2s0ehr84z4s922zgxpe9pt7ayqeni\",\n    \"id\" : \"do38\",\n    \"script\" : \"bx40pwbhzheouayz21sy648taiqm496jq7654x20kuf66ciodh1tg5ca6pajjkhejesach8kn8q3kk9bdb4uqz87mvxkpdqrqgydcjkqan3uw9khcfizmw978ojty2k3u7gttcblvvgek77yncevwbzr2w82jzkxp8q2t\"\n  }, {\n    \"firstName\" : \"Randall\",\n    \"lastName\" : \"Buckridge\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.7721690197606392E308,\n      \"candidateName\" : \"2022-05-18T08:14:27.479879Z\",\n      \"probability\" : 1.4841516673765762E308,\n      \"predScoreFamilyName\" : 4.560911827120667E307\n    }, {\n      \"predScoreGivenName\" : 5.005290791936168E307,\n      \"candidateName\" : \"2023-01-22T10:01:27.479921Z\",\n      \"probability\" : 1.059184496965226E308,\n      \"predScoreFamilyName\" : 9.059888848711935E307\n    }, {\n      \"predScoreGivenName\" : 2.3374275892103904E307,\n      \"candidateName\" : \"2023-03-07T11:31:27.479965Z\",\n      \"probability\" : 1.6009889368955314E308,\n      \"predScoreFamilyName\" : 1.052711601099496E308\n    }, {\n      \"predScoreGivenName\" : 2.595321666948102E307,\n      \"candidateName\" : \"2022-12-17T11:33:27.480008Z\",\n      \"probability\" : 1.1752016562057848E308,\n      \"predScoreFamilyName\" : 1.415958886933237E308\n    }, {\n      \"predScoreGivenName\" : 8.412061775158811E307,\n      \"candidateName\" : \"2022-03-31T11:03:27.480051Z\",\n      \"probability\" : 1.1005582579195287E308,\n      \"predScoreFamilyName\" : 7.247762020585008E307\n    }, {\n      \"predScoreGivenName\" : 1.4559022142384445E307,\n      \"candidateName\" : \"2022-09-12T08:50:27.480092Z\",\n      \"probability\" : 7.691299744510658E306,\n      \"predScoreFamilyName\" : 1.2894275510914294E308\n    }, {\n      \"predScoreGivenName\" : 1.5022535176779862E308,\n      \"candidateName\" : \"2022-11-03T09:14:27.480135Z\",\n      \"probability\" : 4.922747684041532E307,\n      \"predScoreFamilyName\" : 1.5071576358695363E308\n    } ],\n    \"orderOption\" : \"13nr6ow6bsg2q90ew9jfw76bfo4cy7e9b9glj9mz1g9rdxuj\",\n    \"id\" : \"b3wh\",\n    \"script\" : \"no7d9d6jeiycvw6s3l1k2c4jn8po5of9r72smqs2c4hmuh43l6qi24s7s7zno7kongrxcjrw85r7ny9jd6woqyx1tbmzf82yo1awfnubaogyyk9wkqpge9qd92m2zterycjcfj2aixkvbfp9mdnt4ebrh6jy3v\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ed4d6bc-d8b4-4b7a-8662-e5e89ada3c62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.480405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "0973a5d5-958d-4ea8-9bab-4db5e229048e",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/9zt12l587rnbh1caxf8w0w9uc3sykgk9excgm7qf3crzigpw2jsf4us2ii0o7rpgosnl6z29tnrichliq2/tx5wdg510jk5z92bbc54jv",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0973a5d5-958d-4ea8-9bab-4db5e229048e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.478141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "3f89d985-2495-4b4a-afd6-a141c3cfdea6",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/w3rbaesmpxqm9vpnl9d7ul4dxk38c1f/6rweqwni7tqjll7xskned72e",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3f89d985-2495-4b4a-afd6-a141c3cfdea6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.478096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "255f71d2-e961-4476-9d5c-e575bacbed9c",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/2g18gvt11fzvkue0t2axvg3yu8hdguhvs6z1gta3rgickuldk564c6atomwg0yhyubprzfp1rreuoqe07135j5pzvduqub5puiycu020dbu952vow1tk7ts3hehrrgy4ihielokz9j/ivayw82qmgpkwqx34fvfvz1lth17ekak9x1xfb7jhlqpayt38w21amvygt90nxak0ye3n3scx66jzufvu8x8565o6yfz5p2e6c88aub9ypa885jouldc1ll73gx05tyr93twgkalzewesgcawlslx1sh67p7riyej1tb7zds",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Marivel\",\n  \"lastName\" : \"Hermann\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.3714375699255009E308,\n    \"candidateName\" : \"2022-06-23T11:47:27.477835Z\",\n    \"probability\" : 8.121072250356255E307,\n    \"predScoreFamilyName\" : 4.762451990513283E307\n  } ],\n  \"orderOption\" : \"jxgactdb8mqrz9xrhctr5tvx1yvn8e5ho21h1kiy\",\n  \"id\" : \"i2d3\",\n  \"script\" : \"mrhgxibc4p5mb76zlzpaceimekz2jgredg47dwfcz26\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "255f71d2-e961-4476-9d5c-e575bacbed9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.478046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "cc09636b-70e8-4b88-8746-aa51306e992c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "cc09636b-70e8-4b88-8746-aa51306e992c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.477729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "78816969-4efc-49c7-8462-7abed5878251",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "78816969-4efc-49c7-8462-7abed5878251",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.477713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "cd3eeabc-fd92-4218-bce2-8fac31ad0ae7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 400",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "cd3eeabc-fd92-4218-bce2-8fac31ad0ae7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.477697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "5195a768-6f05-4d0b-9547-4608f20ea8e3",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"castegroup\" : \"ouw16w2\",\n    \"castegroupTop\" : [ \"xuz3gcwbecljgw09eanj2elq9icg18gdigutr0296w\", \"rrid5iui9dxiwy8jepc8ntxpdx023gez7w536pkb0aknzyyw40qlsk5syyub7i314zyrkc08o5jmcewj5f\", \"1g84f5ud62nkxbazs63ymcin7h6m21hvo9cw465e8xp9bwxm594pj56b3nxckn9ywqnwjinmcwib3h7bxh6qhtns0pmqnz3z6r9fkww5rsrd94u9pv1h6uld1cgz\", \"enorzpchjfnqyiknhuxkq7sxdhehj3likmoojxxd9nuemt5fyqvekhoqut6vop0bqbqclzakph1qibfz19qd\", \"ppbqshbw9c8zhwm2ofsasdy5gmaq1kz15zz6xxwa1jmec1f0aa4anerqwl6clbce9f3lvar6kn9cho0mzs12s81flttkbfddsobv4dsqkmc2yq38nt3i6l6uvsm1w0s3fmar9unsz7p4sreubpof7qktw8u416\", \"0ygmwt1iyo8iggmcfbo77aolsc165tovr4exqjklj92acvr2owfnx2nh9zlky4kllyfiwyjwhv1\", \"bhxmssle6iwznru2rdrf5l3jsej8kp1avlujn59buctml9pmnv8d20j04\", \"xy2efbwof25idrskcf66slgsvy6\" ],\n    \"score\" : 54.50582716623445,\n    \"probabilityCalibrated\" : -0.44754405218469784,\n    \"name\" : \"Mariano Kub\",\n    \"probabilityAltCalibrated\" : 0.5040814303820171,\n    \"id\" : \"95la\",\n    \"castegroupAlt\" : \"sw8613q2159nj82yqa54vpixlyb9m1zt75gjfww0dlp041ge8u9fvb6dyqh7b7omcx4c2byao1zqayeyimovaxrisfw1kjwzo36dymvcikjcnjk4drp9p15yw5us9ldifj8x7b4mwqse97q70z1cx113uoc3ytt\",\n    \"script\" : \"slio8r8uij61nhs45h7u3jnqsuik0b0dy1835rldmf7muakhe9iajjrblo4urv8zkbkmx5dv7yue66sl9mltpeb6zcaolr9vkgry97nock1v3k4i4vs24xduceix1fg24fcmt20k5t760f43xdfrdmv8ylb2cf6mr0\"\n  }, {\n    \"castegroup\" : \"62mqkbypilqupoe6np2i4g46upogapxczradua95j7n5ojp08tzx0q0aerhs2dfpusglp5yo\",\n    \"castegroupTop\" : [ \"ty5evog9mgg2yxyjjhbecipa9ccpghco6iv0gbs5xenuq9hax49a1tdrm17u1xrf2nar1ddy52w50p269waibckgdeyc8cfpx2dgqkrr5manu72n5vdl7s\", \"1ppgf91qpogi61k05eykqkkn43odzqb5vhty7vuu96chnp3jzant8r9ew0\", \"4pfkrb91om2emzh4xesp163rc9ioa6y2t5dv3yifkr3lt07hnh402v1zpru\", \"bytz4lxbz5x26gyy7b3t8kewkpgseruti34621u2f3apepuqqbfp4oj6vm4ghvdlznezpl3sawiz3mweuw7tbtq1e5dupnzr6ey30dm1z621mc\", \"dj9s9elz6ppxnr9gsoa6sc9awb48x5n95qzsx2ft6bfpifet627zv5wqd4c5sjfvmzp8rdc814y5zs32c72y4foswnrlkji12jvbpb4zop3q5gkon1d7si2g0bqnr4z9xguycojpelxraspru\", \"2cpgvsz9ru0ym2xol0ykhj7w0bvv5otaiygo31mqiatbt1ivwj4l0wqbxt96l2dz62xrim14tyd08wxnd5m3wkbohnoavq4etg454we068c9y9yb4wgt\", \"pn1qbl1pouxwby4c7rxwz73m7y17h0kuc919tt35zjvq59sgiz6102viv784a46993g4ir6b90hsyk6b2ntea7m7deyvqx0kpfk2maivvi4ag01ga16q6973t7v9n7ypv7rcubyphs84r8alcw5bjmz0i2rtvx3\", \"0a9zu4hri15vg9066gd4m2e1q3547ja0pe2g62x1eiz5xkplxroe8rneip1rbq3m71k10mzamna1qh0p0aqkmbnge55dpbk5vimgrsei8v3zmxpuufqlo72or790wfisd7pchnj700qfozpnshdp2md1ojo\" ],\n    \"score\" : 35.10549295848829,\n    \"probabilityCalibrated\" : -0.7286190168532605,\n    \"name\" : \"Georgiana Schneider\",\n    \"probabilityAltCalibrated\" : -0.6588588548877021,\n    \"id\" : \"n7ak\",\n    \"castegroupAlt\" : \"kz29mf1fi51fvgp2xmemzo749ykxc0e72nsyjrfn7u8bf24bet178ujo0z7qcenjjdckoj6m6c50fxdrnibad1bp9la6wntx98dxfnrapaspix1243onunuj7v6pfzcneoca0va1bdte0q81hsktgymwdh2\",\n    \"script\" : \"fcj973g50xcjhuf3baym2jlvecn9tpc3g0zh9or6w8xzuwzwntri5jnih9tcujtwdvaao3\"\n  }, {\n    \"castegroup\" : \"4btcikgoox7j9eoh6wl43fcy7sawzyzue8oesah9dly1p6y6jrr4jthtly5to3\",\n    \"castegroupTop\" : [ \"jnbi9zj6xtvzev4by5udii7fcap18jv8j65k0iug4hrve2n8cahzpsjjjpdhteqbnfjfzocfpr25uhmj1skcp61vbkqqxivkti\", \"58dn471bocdprewn6it3jp8wkybhxyj8aqnbbw0zyjc0bh0iz6\", \"mlzr94zs1w35xn6r3nwfzv69cdkvbpx7hd3upmabutbcywdvvo0khiujz5f6jmmijvzzdyxdbr7pa5it2p591wlvgt5iekznaled2cjje1nou4rfahr5onllh65ypaywtn4sfrl2lf8ysvdfkhyd1hm\", \"wx4wjonz6ju4dcosq1co8h477h6zkvbox7phcf4o1pys2rvlqa5x648m89eh79meht3mgn5uu7vpos0umdbjiuvakn1297ym3pc6ko3n025mmwjl4gwqy01ptjr9\" ],\n    \"score\" : 83.1799539290257,\n    \"probabilityCalibrated\" : 0.7154079785281213,\n    \"name\" : \"Renata Kuhn DVM\",\n    \"probabilityAltCalibrated\" : -0.14560766287851878,\n    \"id\" : \"05fb\",\n    \"castegroupAlt\" : \"wio4fa33gsh7xym0ht4kpzzhzw9cec5dc0a9ji4p12qs3b31tseuh1ypvyotcm9tmwnpb7i631wdl7ucv3j1xj0gcq\",\n    \"script\" : \"864rwlxgdwff9otluken25vgxsf2jv8q6obw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5195a768-6f05-4d0b-9547-4608f20ea8e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.477668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Caste group-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameCastegroupOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameCastegroupOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "dc37ea3f-408b-46f8-9c5e-d51d2c05cfa9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/wqgo9o7ygfne90yr5zb7xr40p2fuimbdh6kewd1ft57obj62983al9l5ssa3oujrtcs7amlp0nqukkey94su59jhoqre41l3x47b6bms245jsj7psxmahljgt/w68l563fwewbcvv76xoq2pinwd3ld",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "dc37ea3f-408b-46f8-9c5e-d51d2c05cfa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.476963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "1f13cf87-405e-4d38-ba0a-acb62880f81e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/8eadc136if1z4jgwnli78fs06ib4dakdti3epmrdmz3bc5sof10w00tijtezxzu7qsy5hqhkwmgmb7xo6dxhnwim3tibcjqr8mjxdaqqk30sxa568jylmdbobcnv0/ghol4lly2zv2exgn34to8huo5lty",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1f13cf87-405e-4d38-ba0a-acb62880f81e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.47692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "31695a9f-e2c6-4f52-aa47-ac91e15cc374",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/got1qo0brbx4kncj8mrb3tsv87v6umo2ikvasz4zrvtnlunxzz2pfsu1s53nfs3ioy07nu5vhvyzalgsdwiu57/9f7hunmyopn7iezufm8ung8aflaco20",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"castegroup\" : \"5ab10jt50sdf6v1mcsd3a5n6xx4wl0pf1wl\",\n  \"castegroupTop\" : [ \"fsjz8ivnear65hklkqck2yi6t3sj1glovqhuuewdogog34aj230dy9qk2y3tm74xh83qy0qn5dmtglfn8mipjrajbzm0k3g0pk630zx5hu7bohmmy1sgvwqk125j8cvpdnadkglf68wsbn4bz90qkx470ej7w0fiwen9f\" ],\n  \"score\" : 19.630431392591174,\n  \"probabilityCalibrated\" : -0.5355757485282806,\n  \"name\" : \"Dannette Kihn\",\n  \"probabilityAltCalibrated\" : 0.2989550824805345,\n  \"id\" : \"18di\",\n  \"castegroupAlt\" : \"sv9x02mqc3r5z4iii8hf5l5hlwxpzwlqe113cuqs2u3bncuxk5aflvpf5gi3vmcr6anmebdz5duf2oplzvyvnx4segcfq44nsnnc4f2ri68utz37ig27e0\",\n  \"script\" : \"sxfte33i5uo0xbmfoohugh53uzlj7arvd5x6t5e7drsz5vqc82fpxwhl7fvcj8f29bsjmm54w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31695a9f-e2c6-4f52-aa47-ac91e15cc374",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.476858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull",
          "schema" : {
            "description" : "Caste group-coded names",
            "properties" : {
              "castegroup" : {
                "description" : "Most likely caste group",
                "type" : "string"
              },
              "castegroupAlt" : {
                "description" : "Second best alternative : caste group ",
                "type" : "string"
              },
              "castegroupTop" : {
                "description" : "List caste group (top 10)",
                "items" : {
                  "description" : "List caste group (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameCastegroupOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "e843c073-02fd-4840-b218-5233759c705b",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e843c073-02fd-4840-b218-5233759c705b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.476534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate"
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "49b500e4-6e1c-4940-9348-79dc7662e7aa",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rowHeaders\" : [ \"h3cnurfcxo68zx5gu53x7ehjk20qdam1f7wooanmf35x0xvpfa2ba2u4cnjotobjo62r6g2oivuhlalbm9\", \"consbg5lmkapd3amywtw54mb0mzreff5tv7ic6m1qmv\", \"uxot8en0big3oghv98dz\", \"8e2fa8ym3f3h1npizjnxtego6dx7mada28erz3mnrzl5o51pjqecxp1lko7o47jr9to92zidgb8j9y7qte52jg4d554thg8kw1254t1vfjvcwdpo20qw3e9u297jyvs0zdzikhhtikjc08\" ],\n  \"data\" : [ [ 2054810398, 1635602569, 744664476, 132216045 ], [ 347115637, 1111165659, 1541440057, 1914440892, 790901741 ] ],\n  \"historyTruncated\" : true,\n  \"colHeaders\" : [ \"bfr6ttv1vt9fi\", \"blflmhqgk162wrj7rlmef91oav665xl1sa9tgiez4iwtfrhk2ilwu7vt\", \"lc681ewsvyny4wixu67dxj7x4fr3703yxtrwpfb4669vfuq0qryhpeh7vlfy9\", \"3ze0wcbhjd63117kvul0bzjb7hq85ar6gzrou61jfe7n5jha7f6lovth1sivgijxinivw10u6guwn7ka9v44kruhjryftj2a2zbuztnskxtu9\", \"hqwot86kqkd8znorhgrlfoyb099ceyfhstryroprmd267kau73v1utjz0gkr4fvk2cypnfchufzbch2dhspc50tc9312rea4ugcpfqmvx79djfe9ovsyuwxrvu8x1jlk4962d4l4wp3p38vpbqlnv0nbbcm4cumlgmrsmc\" ],\n  \"totalUsage\" : 4982057946315190917,\n  \"periodStart\" : 3095436253005294833,\n  \"periodEnd\" : 2732302889732553937,\n  \"timeUnit\" : \"2023-01-23T09:10:27.476398Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49b500e4-6e1c-4940-9348-79dc7662e7aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.476503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate",
          "schema" : {
            "properties" : {
              "colHeaders" : {
                "description" : "apiServices as column headers ",
                "items" : {
                  "description" : "apiServices as column headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "data" : {
                "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items" : {
                  "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                  "items" : {
                    "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "historyTruncated" : {
                "description" : "If the history was truncaded due to data limit",
                "type" : "boolean"
              },
              "periodEnd" : {
                "description" : "End datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "periodStart" : {
                "description" : "Start datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "rowHeaders" : {
                "description" : "dates as row headers ",
                "items" : {
                  "description" : "dates as row headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timeUnit" : {
                "description" : "Time unit is DAY, WEEK or MONTH depending on prior usage",
                "type" : "string"
              },
              "totalUsage" : {
                "description" : "Total usage in the current period",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageAggregatedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "bab734d1-901b-41a3-9449-c84516f25158",
    "name" : "Print historical API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bab734d1-901b-41a3-9449-c84516f25158",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.476257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory"
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "bdf4e19d-9b58-425b-9216-2b467723938d",
    "name" : "Print historical API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"detailedUsage\" : [ {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"m3zjgcdn1v30z2pl3mhtj6x9db1pxbsp2tpsnbnxe7u7ndpjatgsemev9mdsh17hpt5ai0onaa3zj6w22oelioclba16ziwbvggc9e8w7p4t80jtfba6syvd38nw0j6shhlwnsi0jrosm5qvtnhd3iqqpnmmjdeqpxsk1rbnc4\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : false,\n      \"userId\" : \"92f7\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"3j05zo5g0nk7m9s2lw2ez0zo60r5x87rni2wbhc32hr122oq7tr20dqf5g8r9l1sju20665sucbptgih3w8c\",\n    \"createdDateTime\" : 8349629758899353798,\n    \"lastFlushedDateTime\" : 8945150253638527813,\n    \"totalUsage\" : 6831050938034026917,\n    \"hostAddress\" : \"qk3aii6xs8kca1v\",\n    \"lastUsedDateTime\" : 4869584767244288950\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"hazaqlq2dtitno7anvg93e89ufdfnd3ytwcq43q7lv33qfpgpatdzsrh1232zdrbamhbgn9bp4gvdvkeda8po8elnak990lmu5imevioqhaea2lnar4k05il0\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"6cdm\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"jborfpdhub169a2xa85f12v3e\",\n    \"createdDateTime\" : 9014025387208254681,\n    \"lastFlushedDateTime\" : 4840947599383448489,\n    \"totalUsage\" : 2632465791742357531,\n    \"hostAddress\" : \"13qbwxjgqb05ci5xbftqa44sbpthkrl5vguidd4rgwd3ewi\",\n    \"lastUsedDateTime\" : 8939771433648371762\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"z4alrpyh097ihpr9c64kzb6y1dc07ixc4l7upwc4xulmdksuciliffhb0okyonxrvt0ngap8rawzkfdbknk9u4pq0237xmk5tbfeg397bh8kg66ehb6yw5mzuoey6ms2lsi6tmkizo2yalrylkzdt0sydgokfsfik2ltjl26iiag2s0sfeih5z03itf0b40h5bdvu\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"h237\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"p6gb17dewj3os58qdnc8mwbyx7ivkacei2i876gwi4r717xxugvicvqm818ich33zsq2rgs33syws1fygbe2ef5x5816rar9eba9gvyz061v5dwl6r7033q3jv417333g4ox5pd1lngf0pkisa0ujn4prigg3if112p5hw\",\n    \"createdDateTime\" : 886904665020449688,\n    \"lastFlushedDateTime\" : 2605225704966328429,\n    \"totalUsage\" : 1484317366507226673,\n    \"hostAddress\" : \"0b770lw6i46zhj2h1hsjt29uzba0u\",\n    \"lastUsedDateTime\" : 8729594840231039359\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"cvzig7odh\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"8p4e\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"97aj50rthwae7qk17b39y7788168eyqdvk862s29pqwkldc5fi\",\n    \"createdDateTime\" : 5633652851829712705,\n    \"lastFlushedDateTime\" : 6248333714356289925,\n    \"totalUsage\" : 2347061191919313267,\n    \"hostAddress\" : \"kede0l3q5kwrr6obweixvgm3srpaw26k9hzjnp\",\n    \"lastUsedDateTime\" : 7931419780257049874\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"8qjlh7o78u9q1kqw5o51srgnzi1w6vr3uhhzhh09iutl5858x5hmg48rgkcoq11rdu8nya8frp0ur84yryymj3gs99swfx9nojm0skudlqyyj2a819m9en1c\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"z49r\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"mdr3b\",\n    \"createdDateTime\" : 2025107962082619208,\n    \"lastFlushedDateTime\" : 7244954067397590111,\n    \"totalUsage\" : 5146240437795431372,\n    \"hostAddress\" : \"dsh6lgbtvgc15rjbz1z75wize8\",\n    \"lastUsedDateTime\" : 1563314510308357879\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"dahte8xdtgjwh7rf30lm6cm7nfijumvy9e7ivh47g59fj6xdfyf8komm2wg2f3ijh66fvdcxtn43sphjk11os18ykc9czxlr8ar0wgq9iq1cpk8xfvl8j2mw1fny7h8xkqg6hml0zf03cea3gr05344\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"s4w6\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"qh3n288gc0hylmz\",\n    \"createdDateTime\" : 4618418541958577024,\n    \"lastFlushedDateTime\" : 127645124476609979,\n    \"totalUsage\" : 5719603694864889270,\n    \"hostAddress\" : \"qglfh3k3z2sfz0hd00us11u07cgj5gf7bip2gqwoau7bjyo\",\n    \"lastUsedDateTime\" : 6439667550628670112\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdf4e19d-9b58-425b-9216-2b467723938d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.476227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory",
          "schema" : {
            "properties" : {
              "detailedUsage" : {
                "description" : "Detailed usage as reported by the deduplicating API counter.",
                "items" : {
                  "$ref" : "#/components/schemas/APICounterV2Out"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageHistoryOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "bf9af8e3-7cd4-434a-a5c0-7cfdd33c6660",
    "name" : "Print current API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bf9af8e3-7cd4-434a-a5c0-7cfdd33c6660",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.475221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage"
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "6d42304c-4472-42cd-adca-2f451ab45770",
    "name" : "Print current API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"overageInclTax\" : 8.624667329234368E307,\n  \"overageQuantity\" : 1328304447629911690,\n  \"billingPeriod\" : {\n    \"apiKey\" : \"56boobg0azp65vx5bxv4zmz2fmkvc89vxy3h5fgeer14nondezld5v71kaeuy5zuxfru3911kpz1vhv8pkwm5ciyp\",\n    \"periodStarted\" : 8253971118664030494,\n    \"stripeCurrentPeriodEnd\" : 7756112920804799281,\n    \"usage\" : 524782986208336192,\n    \"hardLimit\" : 7780106067785671532,\n    \"periodEnded\" : 1504156222508623493,\n    \"subscriptionStarted\" : 4819226603613424873,\n    \"billingStatus\" : \"64gm3uqxmo105blb5bc3sa67mlwlgdbnx4br8rk4saxi742qu1gna90xvim5qvurhd40gigxg4o5nk31fho571zrsfxjp9i6z9opxbnxnv4523zky3t25lwl9i5td5s9ixrezni3wr3m4tkphuy0m514vjjm2ngqi04i0877r0dsxyhb\",\n    \"softLimit\" : 5437608126642877942,\n    \"stripeCurrentPeriodStart\" : 202723150029658231\n  },\n  \"overageCurrency\" : \"PLN\",\n  \"subscription\" : {\n    \"stripeStatus\" : \"vdgxh3922golfzyetvqdq47tekgoh4v9kdj92wbw6e9g7u4w35zf9vhkyz2a7t3xx92shpfer1bf2e4gj8xzccwakmpzdi5pt6pax4ts3wu3ccg00240jgmd8gzbjeknvyi7nqxh4p4r143pu1575ndqidzg7yz4\",\n    \"planBaseFeesKey\" : \"v2anie2nxq6a8mym990oga7mm3os131sda4inthlj3oit0li03ufanj0x8xak51wqsu90tm6wf5aaj8vc2g\",\n    \"planQuota\" : 275733424309740443,\n    \"apiKey\" : \"fcin7lz9k5cgryagl1d99i3ueiqnoygr8q0vjtl0o0nfu7us6f7pnjrdzi6h5sptht04strv3slpjd6510iswb3ec7c\",\n    \"priceOverageUSD\" : 1.5789182009268215E308,\n    \"priceUSD\" : 1.621474884794388E308,\n    \"planStarted\" : 2155100948344223404,\n    \"planName\" : \"Mr. Florentina Durgan\",\n    \"planStatus\" : \"bftxi6shsievolywutonl6k86g2zh1l6pmy16qopu0t9hzjf5g1i\",\n    \"priceOverage\" : 1.6782581289098396E308,\n    \"userId\" : \"pvku\",\n    \"planEnded\" : 2545817868089729922,\n    \"taxRate\" : 1.52033967580927E308,\n    \"price\" : 4.869759483019869E307,\n    \"currency\" : \"UGX\",\n    \"currencyFactor\" : 1.6582364603928388E308,\n    \"stripeSubscription\" : \"u3exqercir159gc8y72792uwls575i1nxc7x878tclghf106ppb5j3wceve9sfcjlckmmhjomrp35wjds9hrbeyfp92cn85kgctg1fysq9yzd7qor3m7x0tpgxa6hsbptdbrw2fep9l9ekddyqh6as5kwlgpvfj3vg48c\",\n    \"stripeCustomerId\" : \"xbwu\",\n    \"priorPlanStarted\" : 2732478961880066454\n  },\n  \"overageExclTax\" : 1.6703344444135452E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d42304c-4472-42cd-adca-2f451ab45770",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.475193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage",
          "schema" : {
            "properties" : {
              "billingPeriod" : {
                "$ref" : "#/components/schemas/APIBillingPeriodUsageOut"
              },
              "overageCurrency" : {
                "description" : "Currency of the overage amount.",
                "type" : "string"
              },
              "overageExclTax" : {
                "description" : "Overage amount including any tax.",
                "format" : "double",
                "type" : "number"
              },
              "overageInclTax" : {
                "description" : "Overage amount including tax (if applicable).",
                "format" : "double",
                "type" : "number"
              },
              "overageQuantity" : {
                "description" : "Quantity above monthly quota of the current subscritpion, in units.",
                "format" : "int64",
                "type" : "integer"
              },
              "subscription" : {
                "$ref" : "#/components/schemas/APIPlanSubscriptionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APICurrentUsageOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "ebc10937-4dac-4dd8-a39e-bee1cc431d1a",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ebc10937-4dac-4dd8-a39e-bee1cc431d1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.474626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus"
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "7b2085fa-1c6e-446d-91f7-091ead9f212a",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classifiers\" : [ {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Esmeralda Mann\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Venice Price\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Clyde Schuppe\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Gala Schuppe\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Gerald Corwin\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Paula Mills\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Randy Ledner II\",\n    \"serving\" : true\n  } ],\n  \"softwareVersion\" : {\n    \"softwareNameAndVersion\" : \"jd6jwgswtzvm8f87l92o2rcm20kjxa6xai3y2f10x27xreuz5fol5qwaw77skjuynaenbg1xn0ehetxebx5imhamfkvht6hc0r2lcn69bl8oqo5r5s5i056q\",\n    \"softwareVersion\" : [ 213723211 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b2085fa-1c6e-446d-91f7-091ead9f212a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.4746Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus",
          "schema" : {
            "properties" : {
              "classifiers" : {
                "description" : "The list of classifiers and versions.",
                "items" : {
                  "$ref" : "#/components/schemas/APIClassifierOut"
                },
                "type" : "array"
              },
              "softwareVersion" : {
                "$ref" : "#/components/schemas/SoftwareVersionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifiersStatusOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "672d0d80-afa0-430e-8415-ef7548805093",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "672d0d80-afa0-430e-8415-ef7548805093",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.474061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices"
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "026dee4c-d461-45d1-a303-af6065a79e52",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiServices\" : [ {\n    \"costInUnits\" : 134113275,\n    \"serviceGroup\" : \"an6i5y860coxjt73syee287gx65ti899awjo042n4i1p4kfkdx69lqsupuflq7gjnmbwl\",\n    \"serviceName\" : \"Deloris Macejkovic\"\n  }, {\n    \"costInUnits\" : 1600747521,\n    \"serviceGroup\" : \"84rpde9m9ksjheb61kaepc3ltsgmr5aejrgmjsq81tnz7pim15aml12js7lslqtzwv7tu1bf4on9eqj5tyf4oig5cswjbpl819uwqkjovyex3f3pq6s9r7qm24\",\n    \"serviceName\" : \"Norine Jacobs\"\n  }, {\n    \"costInUnits\" : 57121299,\n    \"serviceGroup\" : \"hxd7g5g3aqa9azrd5s66e7it41fmq2ofq5a2pgs2cxdebfmui89rdj51idhrahrk9qh9r6asg04g4mm7r1lxgbhitkxzgth11avorhgcuwq\",\n    \"serviceName\" : \"Christopher Klocko\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "026dee4c-d461-45d1-a303-af6065a79e52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.474033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices",
          "schema" : {
            "properties" : {
              "apiServices" : {
                "description" : "List of API Services",
                "items" : {
                  "$ref" : "#/components/schemas/APIServiceOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIServicesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "e79fce1a-2467-4e64-85d7-b962ab9dd562",
    "name" : "Read API Key info. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e79fce1a-2467-4e64-85d7-b962ab9dd562",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.473746Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo"
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "6e0fda95-6da5-4a2a-8080-3abfb42894d5",
    "name" : "Read API Key info. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"ytvx736u006hbgno00i90unjow6iyl48be1qk8f5e75zqbbabt83z69b1w9kkyljlnjne7gcfeu\",\n  \"partner\" : true,\n  \"corporate\" : true,\n  \"anonymized\" : false,\n  \"learnable\" : true,\n  \"admin\" : true,\n  \"disabled\" : true,\n  \"userId\" : \"614l\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e0fda95-6da5-4a2a-8080-3abfb42894d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.473718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "1a051430-2b1e-4dce-b804-83f6d02e0bb1",
    "name" : "Activate/deactivate anonymization for a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/anonymize/3gafu0gk/true/gti8ga9mgmjkjht3ptnzp8os7vwolyh7nbo9izi6v5zksauqq2rh5by6r0yg06q0ww79qa3bgm22uu4bz2naj728m2vpaj67mu89374ebivuoavkbz6mffh6y",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1a051430-2b1e-4dce-b804-83f6d02e0bb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.473532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "26ca24b8-d06a-446e-a078-3ac0c488564b",
    "name" : "Activate/deactivate anonymization for a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/anonymize/td014kppv3quiuaf8dn2yvnyz1lj085dlsa1rfx0xzg66v7sx9v3z5dmmd5ene814m4scdq63fj2mbwwy6x5uqaq0vwgt9py50bahko9xfvei1wz01px6fxtfeaclozvdgtktcemqbsr3bwlr87ib/false/7gkxwyh75159uo0qftij5e90sxjwd7h4rorv5h71bm2m6vaq77nk4wxwqqai7qipcnzo3ycc63xbbkodtwny2xig3sab96",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"g0s27aexx\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : false,\n  \"admin\" : false,\n  \"disabled\" : false,\n  \"userId\" : \"o077\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26ca24b8-d06a-446e-a078-3ac0c488564b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:27.473457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 275
  } ]
}