{
  "mappings" : [ {
    "id" : "d0641339-05fb-4917-b16e-44e704aa28fe",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d0641339-05fb-4917-b16e-44e704aa28fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.810403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4cf0a6de-ca67-44de-b224-14ba231b4f3b",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4cf0a6de-ca67-44de-b224-14ba231b4f3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.810362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "dae2f7a2-df33-4e42-a30e-2bc5652a0cf8",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "dae2f7a2-df33-4e42-a30e-2bc5652a0cf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.810345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "6e79c9d6-d1f0-4de3-bdf7-36155fadb6d3",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Jeff\",\n    \"lastName\" : \"Monahan\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 39.46245596764155,\n    \"probabilityCalibrated\" : -0.6303379202647046,\n    \"raceEthnicitiesTop\" : [ \"4e50b7hb2v5zoqjye0aqlzxih9s80kwb3rxdu639\", \"sc8dswvlzko9dps8s2bx1x352beo38qrbxrcq26h5qx4avuhzxmqeun3jrll6ueu7rmw4t43y5zlsf3raa6q\" ],\n    \"probabilityAltCalibrated\" : -0.08535038331611,\n    \"id\" : \"3w8l\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"ak8d9pgcic7jcse0y2rgpp3wkkp7tyo6r6r9xrpayf8xbt3bit3456m5m2f2qd62uz91m4enp3gfy2wh5yj65b\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e79c9d6-d1f0-4de3-bdf7-36155fadb6d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.810319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "2dce4feb-df48-4dea-a3ad-566b74b0ccb1",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Marcus/Kassulke/57130",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2dce4feb-df48-4dea-a3ad-566b74b0ccb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.81009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "602a6a40-acaa-4e09-9539-816bb7f9fb30",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Wendell/Beatty/46474-2468",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "602a6a40-acaa-4e09-9539-816bb7f9fb30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.810019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "a2d418bb-259d-4cbe-b2e5-f72b0421ccf8",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Kaye/Crooks/93535",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Classie\",\n  \"lastName\" : \"Heller\",\n  \"raceEthnicityAlt\" : \"A\",\n  \"score\" : 63.898453049353044,\n  \"probabilityCalibrated\" : -0.6298085722832552,\n  \"raceEthnicitiesTop\" : [ \"rmcam2uvtlg57408jsz0vzpcqu3u1758ji0sdhtm9ocemzf7tgzz0dd95rszb8m8kv1t63w9fh2ns305qqendcwljprxerchu0adgbbufks082ip3nyre7mnepytpoxq5hzgkr0whzkgr2zsqydgy0apwpoesid2pjpp9ltv1dlsldp488qyy99z7g5ykjm\", \"90hsy66nw\", \"38vny2cp32ziekqs3tg1o5m6jjp2gk5w1cc8kltsfc3ywqd3bgfcgrw8d7bex\", \"9nrcc5zupkpjiy1ep539tr06c2o9kufn11pb4ideavta56388gjz36hc10jlpng65d0mhcgix9bcu9fhijzr88h5qzmnzgex\", \"a2ntqg53hyz9mqx72p1f9t2h452cmux7rwjidxxojqhb51nqhusiguc4s94rubnf1w\", \"z8ym15hm4cuwyebre7ni4cu6mfc4jejkhh4h6i8q7vcbwf31xtw7f2baklpk328djlyy7ib\" ],\n  \"probabilityAltCalibrated\" : -0.22228716395523884,\n  \"id\" : \"0m6r\",\n  \"raceEthnicity\" : \"B_NL\",\n  \"script\" : \"7rkj3c2qklhjpc1fqboy6snl7bo90m67iydehgmczg2wd5dxhvxpzjt3jcfyh7q218ft28qme4a330dy1ldqk49j9384mggmnqedtkvudog80vjpajlaykjvid9k0zu9x739lob31ggakfx21r8gawfyet6tnljcerqacno9to8a7whh69gon3pocjspr13c3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2d418bb-259d-4cbe-b2e5-f72b0421ccf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.809929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "13ed3333-832f-4349-85d4-0ec8194e138f",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "13ed3333-832f-4349-85d4-0ec8194e138f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.809546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b5732017-9ab7-4ac5-a011-9a7f128c8614",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b5732017-9ab7-4ac5-a011-9a7f128c8614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.80953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "79a7c5b0-73e9-45a6-8c57-a5aa214a744b",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "79a7c5b0-73e9-45a6-8c57-a5aa214a744b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.809512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "ba87d3f3-834e-4b03-94a8-11e82e4b6945",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Kasey\",\n    \"lastName\" : \"Walsh\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 17.461886072600418,\n    \"probabilityCalibrated\" : 0.41564989023430154,\n    \"raceEthnicitiesTop\" : [ \"k7chqwigr8h2rhpqtoqzt5w9cjwghcy7xolex8ohptz\" ],\n    \"probabilityAltCalibrated\" : 0.32427929104793196,\n    \"id\" : \"xco0\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"awhx89\"\n  }, {\n    \"firstName\" : \"Luke\",\n    \"lastName\" : \"Dickens\",\n    \"raceEthnicityAlt\" : \"A\",\n    \"score\" : 74.3277710879237,\n    \"probabilityCalibrated\" : 0.9855755297942181,\n    \"raceEthnicitiesTop\" : [ \"e7veughi7dlqu2aol65dllavfw2u9b52dicew91uxdum3gbepejymefbaov94pl9oyc28f7nw784k0saocrqjng2n5z\", \"6mok6mgn4qe60n02zl3vexp54ia1a7nm46ua6vebdgc00t41nb2m3qglo9sm23o8j06yzxj8gtcdxsjjqm\", \"wb5iczxqw891\", \"zin2eufy29igzinfr2racfkp0nrbp5cmte0jztjcl30tnd27wksh339dwhzuyqv728ete36vbdny18do2uc2x0026sfba4js5w59lvcd9bw50b4yc5z8jpji5d6bmx2ora02hjezj7v06accmw4zv4g01qluiffvvj0ledj1bj7vpo3ol38gqrdkvd\", \"8na7uael8csc78x6u1k2a9c8pkj4hcqz358uta43i674meqzb480m9cpq0rj619jyu34e1ch7cwczbn4zj7gstmk0tipjo67mh2qfjgjvxvci19bxbodeu5mgzdd8xt9di6w6c3xjq\" ],\n    \"probabilityAltCalibrated\" : -0.39702710321032164,\n    \"id\" : \"06j2\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"r5bpfdntj9apr2sz5wzw2i00xf55st6ic0u3ufygdgqsual4q9stx9rbjvj8dw42a868ugz0h58ltm1kmk4jjlqti51ueih6lk6c80whznab5qeata9a5pbegot4f5j6l8qmjr347i2g8p95z2ldijnjv12xl60\"\n  }, {\n    \"firstName\" : \"Deangelo\",\n    \"lastName\" : \"Hermiston\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 58.14281593641441,\n    \"probabilityCalibrated\" : 0.7081994480085072,\n    \"raceEthnicitiesTop\" : [ \"c4gnzzl96yvto3joldrp3m9jcwe3ig24b3kg4abssidvdu90pp8ilgc9g8lbg\" ],\n    \"probabilityAltCalibrated\" : 0.9579473645106957,\n    \"id\" : \"r5b3\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"dvfcuckl2zpq8cquden1twe071voy8kpgyk90jbdk\"\n  }, {\n    \"firstName\" : \"Marcelino\",\n    \"lastName\" : \"Roob\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 28.077675416064483,\n    \"probabilityCalibrated\" : -0.09304008957370846,\n    \"raceEthnicitiesTop\" : [ \"aorgyt04pi8cwt9i2asnavwalpkzf1gkxycbubh2e2t5peptpe2vkuaj0vdm8tkrs8lhad97lasbv5zdyf0cvk69fzurvbb4kqs2h7t4lf40hkp1ihst3zro6uw65h5zxfnq3dc3jgjdb1npsybsw5dlkbp245ldqj3ggfbe7qnpl6h9\", \"h1uc88su5v1ye92lcmxjxei4jo3enfetcugjawnia6q32mt2zkcc38hwm027cj9csvqowkfz6b7f5m209l664yrcoa7jm9snpkgkpq4\", \"zc6fg1ir417noj27sbqvh8i40x9nots9rnglgkfc34dsqgk5bw1wzk2q5pgpdpiyhjobqeqz\", \"sp2diruhrqdzlreg1gt5wd1\", \"656dj2xr26k\", \"bdhqk4l957rla14ml0mxm8scvgfqdnx39c\", \"i4hrzdof2q3320wcgepjqe7tlfs48q6kdhy52cvkav6dexvd48j6cp2tzrido8hm3gbxi3386ucwt6tps91\", \"1dvtzvx98csjtej6j360ddn1qcnv3zon15q4ko5mvdw5ngk3v940b41xqt75il3piu9aiu9uj4pvcjybyroenyl69cy2dn9tgmvh6t64\" ],\n    \"probabilityAltCalibrated\" : 0.7334859413605921,\n    \"id\" : \"3030\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"ou6dyi73z70r09wpcbz5an3pii3jjpz7sgkg9vvzp4psqefpd0zrttnfnk9n4osdf6n55o0sn2l7b07voiz34x617jbuu2tky6cl44e6e0br4bc74mu17qz9u5zkqjcy8ieqoozldyg97fb2171yy69gflqf2zz1m\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba87d3f3-834e-4b03-94a8-11e82e4b6945",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.809481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "d5d4bbaa-09ea-4d34-839b-615dbfdf111c",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Freddie/Breitenberg",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d5d4bbaa-09ea-4d34-839b-615dbfdf111c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.808695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "2d0a52ad-7ef1-495a-bc06-b45f76d260dd",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Cristin/Effertz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2d0a52ad-7ef1-495a-bc06-b45f76d260dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.808639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "7904be6f-a343-4f1e-b438-ceace0d63250",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Nga/Rippin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Shaunda\",\n  \"lastName\" : \"Bahringer\",\n  \"raceEthnicityAlt\" : \"B_NL\",\n  \"score\" : 40.548837507870005,\n  \"probabilityCalibrated\" : -0.7009495496904434,\n  \"raceEthnicitiesTop\" : [ \"wbwh4l4ytcrkhbglo0jkx51be88cgloz3sdfaf0cy1xstz\", \"f8svefppmgd1vmzp6sxf3m86a7qbj3vy14zn67n8uncxwhbzey4m8e45kp1c2xsq0c255ol0ei8\", \"zj7e8dn8qe1z41hrm4i7nx6gcdd7bp7qflf7dv34llakrfy\" ],\n  \"probabilityAltCalibrated\" : -0.8119587835543858,\n  \"id\" : \"a07l\",\n  \"raceEthnicity\" : \"B_NL\",\n  \"script\" : \"973oi5tqwyowm21gfyv5d7wmahv0420rzglx8b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7904be6f-a343-4f1e-b438-ceace0d63250",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.808566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "562a666c-af50-451c-93e4-24d3625225f1",
    "name" : "Print the taxonomy classes valid for the given classifier. - 401",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Izola+Runolfsdottir+MD",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "562a666c-af50-451c-93e4-24d3625225f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.808163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "fb6878dc-c8c8-4258-b63c-603c67d917e1",
    "name" : "Print the taxonomy classes valid for the given classifier. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Ms.+Malika+Adams",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"taxonomyClasses\" : [ \"9787wqh9fgtbo4xbp3vdhd4ki060o319olsvi8du5phewuxcqslvcqzqvmdz9rxqsll421nj1p7yahd2\", \"vz83qrao143qsb6ym7v2fkk3gw4ikcjpbf2ft6h9lg1t0dnhdmyoswol3zkxp5yoxowogo0arqrpbagxs1jxdsuumhqwgk7uedpt9d3\", \"mocnbcoh4\", \"ibmvoqgmal61y3g4ux214bqvg0j7wqvjgji7o1vbbpkalhf1e4cty8379kielw2ra9ro6m2vusdixzzhoyl8q6xrvkhkl08zetauddlkrnl1ah8vqpe2g0pzdx1bj95obj2xrf03a0ahbayojo3443jmagueofta5bb2dgr80xicdn4kbre9tywxsj6ig\", \"v96b2msslstbxymiwg88mxecixx2j1\", \"ncx9v8d0cwfv1jnpfkb2a11zfyjvs4ks9otuhq544yjk863v4gcigsp1xxeoc8i1udvbgie58gqa8g49ag5lhuw306i9tpwv6cw94glvo09ir20kcvjbilb7li5xz73lcwtg5k17zm0fcyba4p3opbl7zbttguy7d20ks3i0a7vrqxwmz83o0\", \"1b26tq4f80lne6b7cpzc4vq7142gwu9jqwrkt53vhlgu9y2wn1zond9efo677x8v4d7wui8u97ja4h1ky54drqlfpyl7k9khzomy7xj9bcnstb7hckbitrhk8vnpt\" ],\n  \"classifyingScripts\" : [ \"h1xy5xmarsrzypohcdddou4mcojvuiiv3yi8p1oohd96\", \"1xz1bn3l\", \"rxdm4b9hh1knz0xt0a55zrzu4gnbjhuvhkx5o8jj59ij3ke9xb4qw81vlyhvkud6rgzqs2ebwmt31brx0rdfl01go4k4\", \"ypy5efsf89z1xzg1i24j4z9efmg205uvhnf3rakiewx3y23f1ho6qi6jwntujot41hv2l5cqbghak2udbb6tpfcvy30iayxyb78xs820vsecbfx5qu3f76ncwtvuboflrgpeqoavl1cc4xb7sfdovnyfkq\" ],\n  \"classifierName\" : \"Milda Macejkovic\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb6878dc-c8c8-4258-b63c-603c67d917e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.808097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses",
          "schema" : {
            "properties" : {
              "classifierName" : {
                "description" : "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
                "type" : "string"
              },
              "classifyingScripts" : {
                "description" : "The scripts / alphabets this classifiers classifies to",
                "items" : {
                  "description" : "The scripts / alphabets this classifiers classifies to",
                  "type" : "string"
                },
                "type" : "array"
              },
              "taxonomyClasses" : {
                "description" : "The taxonomy classes this classifier classifies to",
                "items" : {
                  "description" : "The taxonomy classes this classifier classifies to",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifierTaxonomyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "be10de21-9329-4948-bded-cdabde1ad9f7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "be10de21-9329-4948-bded-cdabde1ad9f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.807847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "19f28a62-b040-431c-b158-898d7c985d59",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "19f28a62-b040-431c-b158-898d7c985d59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.80783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "38019108-13d9-42d3-94f6-15bbe5a67ad7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "38019108-13d9-42d3-94f6-15bbe5a67ad7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.807813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "d6213a14-a49b-4981-a1c2-5f98e783b0cf",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Carroll\",\n    \"lastName\" : \"McDermott\",\n    \"score\" : 19.42791168617698,\n    \"probabilityCalibrated\" : 0.42941029976534706,\n    \"subclassificationTop\" : [ \"2cq0bazc\", \"t6eq8p2kk32osdh414z0xlfjeymca9kqwe\" ],\n    \"probabilityAltCalibrated\" : 0.8217299539565603,\n    \"countryIso2\" : \"rqy9ugkitzafwws1q2pgas\",\n    \"id\" : \"0ah7\",\n    \"script\" : \"bsjkwm8vrzqnomiqkkqso3wtz6zma6mjcvc4dp79nmtg4di9fck26vm9c67w8harenfwi05gmn0qi9fio0yh3p2czl5byrprin1j023k2eis95kr2nxlloyvppc9jq2wfx2q53o7vngyphehd05zyp5m5kq8b892i7a7e4gjcya9mabj2op5hfs0grd\",\n    \"subClassification\" : \"32bs4y9d7lnjjl106aogrbcrj\",\n    \"subClassificationAlt\" : \"mo8utkvw5uu7lo7hfli9h1hdtajzjpza02sns6k1ol5ifzchc8p8hcow6fzwnyszwfzutjdibsonybvx8c8s3dpjnm9bni9nqzkwq0r51ch8wzz0dh4kcj1ju743n0ifuajrbkajy3y4i424ej41jbgg2p40ucba5gxq6w2ni2\"\n  }, {\n    \"firstName\" : \"YYYYu\",\n    \"lastName\" : \"Murazik\",\n    \"score\" : 24.628654636922388,\n    \"probabilityCalibrated\" : -0.12415335002427064,\n    \"subclassificationTop\" : [ \"4sum067diwz5xzz7jgz6yerhcpimn1bcsmhi88m3doousu9iy7hi9ia8xq0xojz972ucjd2kl0gve9w6zl30xf0ogtzuyzuof82egne5xy3lhi8ye4p3dsg6j0fc58tmmo3bw8fx7f5i6vnbquvnpa3qo741eu0r1mnnejllhyj3znn4x\", \"do2duqeugji38dwhif30kj9lj0r2xjvd5h5205zhh4ustj1ldox4yi4p37vl6v3oc336vc8etnrdzm33pcomeq8cxexu6uwrqy89iqcpe372bx2gnk3s5bdna1s5ta4jd6zc\" ],\n    \"probabilityAltCalibrated\" : 0.48809727603314523,\n    \"countryIso2\" : \"x24ydhr76uaxt4xcy09lr9lt7h40r3qbzzvuqurhlpuvv9vwj7a0y29l0u1qlhde5xncdx6dg4tof0erqtbu5zt1qankg34edwcw9k17feq52iltpey17eo6fi4nzux4kgn6q14oa2wsua90dd9wwyw0ha1fi\",\n    \"id\" : \"x04l\",\n    \"script\" : \"tltdwjopsol045kfg8d2drrfsyyrr5x4e2jk373cxfnb7ndrdxlgul81lkv3pvx8n4\",\n    \"subClassification\" : \"jr0hqb6b0v2bptq3k0hlxhal6x96lmxsws41aost\",\n    \"subClassificationAlt\" : \"gnulr531zrqab347hliuze3o5ivkpekm01r51h2nfthusejiwfus1y3y4mlhii5\"\n  }, {\n    \"firstName\" : \"Cary\",\n    \"lastName\" : \"Gulgowski\",\n    \"score\" : 96.30830840065208,\n    \"probabilityCalibrated\" : -0.1575392107791307,\n    \"subclassificationTop\" : [ \"ed6vxep65tlxv97jmn0\", \"esc8mdxjnpnnz4iwzhicd4shd6an44beghqblkd7gqpxbxp1sn1fo62xg87l297bq0u\", \"lr91n09iyx7okutpl1o280a704ejtnusk3au0ok5b4gqhrcjf6ivxsese8qlhy78152l52xh7id14bxv9tx0\", \"kip9z5j71le1pluz0v7sj33bmni499uegenc87z09fb9fz6pmzirym28jxnd25khluxnyoqasixv5nq5cg4pffqs9u81vdf3s2v9gbo61hhzyvi093jq3vfgk5f57z87u5lne913mh9pzt9p3kdildsbj79a367vtdb6h4weia7dqdw5hj1dxxauogb\", \"nabguldj2482mrowyxcet4xfk54d3lkxffcmzxb3njtyfnimp7fxbqwz0l6y5vxjzran420j7epu6gb0fjl0big8vgkxgws2zbliv602s9al4yuqjc50fwiuupt6uou0cfxclzs86lppmlwdmnphljdpxxj1yvv5qilpzjftqhm4d5gccfsnnpte8vsmw\", \"882aoo3ofwv41ky0db\", \"i6d9lol78mx43eb3l8htg7yt5evw0y\" ],\n    \"probabilityAltCalibrated\" : 0.588841817674395,\n    \"countryIso2\" : \"e1qukdovyyvwx4du7onppof5msjte90lonl0qockogn40cb3onvjdigitkym16aoqceqarbh5ze21m7nwwm35irq3etmmdoevsx9blesw6fu9w79g2txhwo1nb9q7j8w0op8jwaoqpnz83xx2krydkf7huedpgkr\",\n    \"id\" : \"3m60\",\n    \"script\" : \"qukh06z36gdcovtnp2un9fnf49jguahdxwgie6mitvvb06dn75mwmjal4y4cp6k06lzgo06zz2onbgsdmo0n7c1ayvnzwowfru8y4g4haahejptilu6yz8be5pvpb6v7mega1iv0fe3e\",\n    \"subClassification\" : \"39p7kpcl6nggwet07uib237kh7jvaeloti1sghjy4zpg4xrlo0dn5sk2o9dv03vz6askgccmq368tdfe17lo3alk40l8latchthmkzd1usqwopd32v4w7u8o2quzjc8edexful7qmg169yks8o91uoi40m9ag9i2hv39gz6igccofjmc6697ofrdws4rwcgsqjrqu4\",\n    \"subClassificationAlt\" : \"k20i98b9ngskotbssyf\"\n  }, {\n    \"firstName\" : \"Michele\",\n    \"lastName\" : \"Vandervort\",\n    \"score\" : 47.006324308501554,\n    \"probabilityCalibrated\" : -0.3469633737132083,\n    \"subclassificationTop\" : [ \"gio50qpitcyhrba14zbyg5joybvyuvnr73pl65cc69d2r4stl65v6xjbk9fzm4i6v7430mh0fd6fo81chvy8uzidi0jquwa93txokzb6u59kb2tlys76t99m3qjmptz93y70kukd5x\", \"swbh89ap3okffmbrtgcuwuzgoj4enw8ewb87s4obyfsaul68vqfgr8nksxsjoejxd4z9b2yq4pq8vwhr4vux3u5s8olv0noab336uax3nqnksz2tohk5edorsouwvx0naolbl1na1iij9hjafqa5lduvs9wxo8s1yv46jmp7\", \"56fp2mecyk3x3obnz0noz232xu41q2m624aedycvqmh1t4219c0xpoz7aj6p3y9fcvr9vlnss35a9c9q40lapnt1v99l67ql7hd5xl5rluc6dnqyd8mqavdmk459w1z4bdl2jtcfk1xg16rwx4ahp3f7q8xec960tv6g0ne2tnhw7whmp9twesycj4dj3rw07\", \"dpvdca86ax4kgd0z6kjv87yoe4tfh5hepkfl5jjktphxvo5ql2dcrcd37li5lf57csg4jcvhx8daijshipnlborrm3hejn8akurxlyv\" ],\n    \"probabilityAltCalibrated\" : 0.2903230695360757,\n    \"countryIso2\" : \"gqwd9egm6mbnf5unueuiecqj7s41pzpdvpo8560lxrtyvuegcr65xudyu\",\n    \"id\" : \"m919\",\n    \"script\" : \"cbj9xxg975rpo8ithyz6v9zwhukvzjycgb2pg863kuuisyrfomfpyk8z\",\n    \"subClassification\" : \"jvofl2h6jfgsfw3334xrl70bqa78laquf0kr\",\n    \"subClassificationAlt\" : \"hsxi3t9cg11zghw15lmwjin59gdwi8z0a0y80wo5hmz23dsqwyi81\"\n  }, {\n    \"firstName\" : \"Jere\",\n    \"lastName\" : \"Kling\",\n    \"score\" : 31.403721493092828,\n    \"probabilityCalibrated\" : -0.7537227716048074,\n    \"subclassificationTop\" : [ \"x6xk813tng10k9jm8nrgfxeanxm99vu21a4p8h7vr6wkozf8qnodba9axtfk5xhi8msaxbtnkld6l6eyspkouvbniodp5p8o\", \"7fyxx0vb9pjbt143ocozr9j3c5gq1j7r97dto39y0m5l5vcgpvtt\", \"g8owfggcsdjr8vth99fmp0ba2n18l0g0h9rv1ylwq44o64emhmrle4szojkx3mkdyf1cymuw4nu1egrwbl54q52786aidc4xqvnidcfk4roo3m6rkt0\", \"8e21wjcotgzk5fihde3fl865kmwuyb3e7uzj6h4tc3bxwfzd9n60b55oepcakzm3d51hu9j1jdqiegt3akwzwiw6i6l\", \"qa24uaubpg6z520uaoe2ylom8nf1r252ieqes28j6kelqf7zro653azqwpddyj69cqz639wesimltdetqntrul2jtor22i4jec6vg17q8ewkfnkko9dcpmui97u4morghnb26j16ewql2y6g9idlj4uvi5bpnhsfxn6uhyhlhlmol1f91y5pccv\", \"7grp1y5848rr9pnt1zg0o91ow0hftk59lktihlnby1i0q8z3kwhlf3meb6biqo1d5srwbvc6sc5qfbk2vdwt3m96kn9lcqgv81hvhs5swsdiku6pen90na2fuzkogb2k0vii5df9oeek9dx4lxzhcndpdz2y2inzbpqzcssizmz4podsp1reiyu597vlyvfsp4m5i\", \"cpdlti9c7h85ag00noq7fay1f9kokc53kjsanmei9z24w0o6e\", \"dh2ehnglrm6n2u200efvdn2r7076uo3xawkpmljatay7gnelu6gl\" ],\n    \"probabilityAltCalibrated\" : -0.6327087796731272,\n    \"countryIso2\" : \"yaygl1twjpyk63etxkadx341p0coqhx7dsr9bzdnks3c7rsbdq\",\n    \"id\" : \"18lc\",\n    \"script\" : \"aptcoix0jyo29z2fhnk38k2r21ko4tvpnn1d3\",\n    \"subClassification\" : \"uyd07e7wrz9uk921sblv5f7ws6ah7eis6u8q0xbsdjinvhtfvos7paej3dwy2kwseppgsw9woqqqbng9jd4p3n54r633w75pkxtjc1jarla2ovzn9vwu2kypxb800hjdqhq3furjabh4xdd2jdk6f33ka7eleczjeyuwu9qcltzgu8swfr10xadj0r1tcy036uk5kw\",\n    \"subClassificationAlt\" : \"l3djrwp7cu0roswmewkgpyug01todjxe64nwgr3og1irsvhg3jw5jm4t4l8py27ubmexvhurtmwa3e5sfonngftmkjf4faxnmzic7eq6hckxc5ruivg9t1gmky1gy0jsea16luuv63iggjeqvpf7lvvd4fv2c00s34pzh4rt2wkmb6vhsxw7hfw740zyrq6p0fh\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6213a14-a49b-4981-a1c2-5f98e783b0cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.807781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "1f7ded37-2b25-433b-9511-c2cb17b48d69",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Jody/Lang",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1f7ded37-2b25-433b-9511-c2cb17b48d69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.806691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "682a6b85-8a8e-4953-9532-7ad6c6d0ccf1",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Jenelle/Bins",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "682a6b85-8a8e-4953-9532-7ad6c6d0ccf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.806634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "db91ef40-99f8-44af-a88d-98abd185387c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Gloria/Bauch",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Waldo\",\n  \"lastName\" : \"Abbott\",\n  \"score\" : 97.82853915746352,\n  \"probabilityCalibrated\" : -0.6568817861664529,\n  \"subclassificationTop\" : [ \"tuvuefx5m65r5cs8f0ov4bj18deqqd2psv975xtoq8utm0t5wm93nvdmixlv67jkxuuu9j26eq6mpwobq0zikwv2hygd9zx54htj55pfpjaa5tk80wgesnz09mthzuinm27bx68jr59yf2z1ycfyn36zungy6rzwdf7dbag1gbkhn0jp0a9z85wyk384crkinjx\", \"vp9u4sf19kkzbbb24ylq607q1mlswz1no8mikt7u0gbgd0mtv36vnctc1n4o6ztct3dqfq0zt47b0xk51slqau3aszli2628wksy6qbh84ayfe125u08y5k1oggkgjswjk9p1dw7x763qk4a459vk11njm58ua273by5n3eu821gi66mvpb\", \"3bvearxg7w360bjsoggpbgu5z1p9w4gu1qbul8qcfi0b9ihy5ffrjhfbn0ur\", \"kcin03sut46o4pblgccw4izgnu5n7yn83dyac3v1nbl18q4tu9v3n9zv9jgh7wavif8kzzddejnm5jpxzx2qge0l9ooumdnwx21i\" ],\n  \"probabilityAltCalibrated\" : 0.550075941474131,\n  \"countryIso2\" : \"tj0is1lv3zbk2d223xj\",\n  \"id\" : \"d2hj\",\n  \"script\" : \"ul0rm0r9bgecxgodwqa8on5fjhpra34zcnlti47ovj6gc4wybd8fq68xfxttsq9qyc97yv1o0h9xnje9ldzpime8vziahjih1wsaapwxn7druf\",\n  \"subClassification\" : \"6ywkdyp6jr\",\n  \"subClassificationAlt\" : \"8j1h97l0tuon3t6q4kdy2fmetbnezd4ve24vv34jb9n2fduss5aq41cxlq1bjzr5y71lammx62\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db91ef40-99f8-44af-a88d-98abd185387c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.806566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "84ba2494-2545-4d32-bb50-364ea63b8578",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "84ba2494-2545-4d32-bb50-364ea63b8578",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.806209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "75b23fe5-1aca-48de-a482-06b186ec6a9a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "75b23fe5-1aca-48de-a482-06b186ec6a9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.806192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "e7796058-6bb2-41b9-8c3a-8546d3b1e697",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e7796058-6bb2-41b9-8c3a-8546d3b1e697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.806175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "1aae885c-9877-4023-a973-6faf5cc07525",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Bradley\",\n    \"lastName\" : \"Buckridge\",\n    \"score\" : 46.53673328094966,\n    \"probabilityCalibrated\" : -0.24132531447989125,\n    \"subclassificationTop\" : [ \"saxb1kcus3g1360n7ntjw0pj02ilkk77y8m80erra2ek89bxrf5f6dwjxyukgomnisob1a86ngtdw6h8nxmmftr0qk7khoaens3mw79u27j0fqwbj4rv100zk8jbfsvbuuzrpa41g\" ],\n    \"probabilityAltCalibrated\" : 0.79041429195182,\n    \"countryIso2\" : \"pbxtcnhdoi15hrdh98ljvux1wj5yhqnkpb5o\",\n    \"id\" : \"pkfb\",\n    \"script\" : \"13ystfsxdprufw9rlfk9easi90ea8an040wlp0zr3743ska7p4lif0s5xmvj6nx7xuomy2ikraf0v294w31srwvy20i7ewpwrsa3u6quq7abifp3qeqc9c4m0x9tew5lrvy02a2lzqbanlubh2uitm8weaeewtlx9vwk70iz86g65yc8nxaizc686n7imeg1\",\n    \"subClassification\" : \"6v2omr5h06hdk7hb8u\",\n    \"subClassificationAlt\" : \"avfbg7tsqa0qs0j7wug5gwpxuctx1pq5i8xrermlykqssxcydq3rgua1gfhvsewyic28dssp3q6n3fv1i7cwls2vjphts72tkvl6rro9r3rkx1khultwhd2eagdnl5gz89k137o0q9qomkchujggil97l5kp782zhaxqlhjsr7nme6era\"\n  }, {\n    \"firstName\" : \"Stevie\",\n    \"lastName\" : \"Ferry\",\n    \"score\" : 60.24374708087247,\n    \"probabilityCalibrated\" : -0.9361430872625829,\n    \"subclassificationTop\" : [ \"lzhaemy3kgzma7346kb1u5s0fq6kn0w1gr9crng2q2oc5xmwp97b4w7\", \"ypw\", \"0c20ivkvhg4oszpo8rnxf4xszb5iolxitt1osyvp4pqkbgkze9fb4x\" ],\n    \"probabilityAltCalibrated\" : -0.35235095741270506,\n    \"countryIso2\" : \"hoeh\",\n    \"id\" : \"74ts\",\n    \"script\" : \"nqbnd072\",\n    \"subClassification\" : \"jp7t2xiawwmoc78hyqcxmm9n80pgs4diidieu0bvb\",\n    \"subClassificationAlt\" : \"rl18v953hq5lo1tjgl0xskvlvyqld5wczsynn5964nnm1plg01jcltc3140revbslmkcjx4dsbf3ae5tjrhsghq3ux6v5kpz2s4sy93i79ocwsa2xqipgrucmg4pigesph8nwyhbjf7cefrgxyav07zqud291jl7kipldqj4k9t4kv1lp1tyr5etaiv67des8m3mp\"\n  }, {\n    \"firstName\" : \"Vanessa\",\n    \"lastName\" : \"Hills\",\n    \"score\" : 66.56774466111995,\n    \"probabilityCalibrated\" : -0.5198941282131471,\n    \"subclassificationTop\" : [ \"w2i83mq041orlkicb6hmqyiimmxisqdfu4csoio6kj719v4o09fl8uc1ksbr378s89j204ruuzpd12erh45z4kcr7kajqhjugn76025s2flze0p55z2h9qhpmg4ke14d5fdasdnzkt3bkyqiw2im8w93xe0p62skjyd8rcx59j0e7grtmlp69n6hghrbwlbtqa6b\", \"2nd3b4djphynlq5krm57f7tp0wn3yu1zkpn6hk0264wctyn3gwpbkvbbiajy1fkumj3dsk21yrjec9k27nn4extsivyzpsk77wja9yx8bvm899oan\", \"hz53fk1s6leqt0hueyfgrr08g4o05zvwn0xeg5f8sgt7n1tv\", \"hhm1qg4m8ai4dxsvu05hmn7iyi6wigilkbcqzz447n868lw51ahx4vg1jrarhtixkysjn0omdeyqtb9pn72jg10zqwmcwd6ihl5j8ts1temimwb7piqfyzabl88guidlplx3kwdosk12xyr1\", \"ilywh4i55hxhk5x051f78bl9gjf8t57ovylzt7ecb5ptxi5n4haffq6vwtocntj28th9h7hn5tk2k57tgoxv1oj930l6w9p15aw154p864xfoz5\", \"gmr9qr4ychc5op8e3o3b6agxxjqngkp4bztxml9q6kqe8p76jwrf8b9wbqfakomnmzuifa3m430z9hvt09u31tycdqea\", \"au08s9y8y9ddklw8xg3f1r07lydx4wy8cdl1zaf167u89m6319ur66mhkilnivk1ecppgryl6n4n15sjuryo4znhhel3wyqxfj2lnqve\", \"hwhcqbfmpp7hce775xxt16esdgg19ye8ifzfwauop615ayvz7pkttttuppafgj1cvc0zovvue0vy79fggku0us5ikivlsdnj4lyf3pnd5d403bbrzhtusja9j3bhmvie2whfpp6p0bx8kqqvg\" ],\n    \"probabilityAltCalibrated\" : 0.11444823785297387,\n    \"countryIso2\" : \"klpia2g6xfc5i11bvfk5fazao1p0ae0xlmhupwev2uc1276sxh68wblwvvmumzs27di2ptxzgbwyx732bey6ke66y1ivpjk1xea6yzcx0kpgy0azrr49zkxp4d10cun9gtiejecm2rq8gf6zthnn4wy9yxmb7h5rj6y6qpzt5hl8p3b8mid\",\n    \"id\" : \"86sb\",\n    \"script\" : \"y6o8buajoefga3j5mo\",\n    \"subClassification\" : \"woac2fb1orkbhmgvi2gdjtt59u2283b59pulk4v74zotokquy4ahvsk6ap91emtgmo7642qf2y63dksz1b7yry6xaicjbtb0w6ahwd6bhlb5kfw2qakchw1kx0jm54zc1fy\",\n    \"subClassificationAlt\" : \"wzhvw4ouqt826pawb39rjpmlyhpstp9\"\n  }, {\n    \"firstName\" : \"Markus\",\n    \"lastName\" : \"Herman\",\n    \"score\" : 27.689530438522247,\n    \"probabilityCalibrated\" : 0.46884014612334424,\n    \"subclassificationTop\" : [ \"vv388o8han6qze1h6kfnwde7ryghc1vhni2\", \"m6w4xzhpv812nl9zy047m2l4y68jxs0e1ou6sg3s5cpv9ol0m60mye3qh4x8s2142rebl02xuum4blws9v0z689ft3ozxrv3pgrshlgcmmqesqtflkf\", \"bim3cgalvlorjrh5512efvffbvow71zeledq7dscodadrr06u1ib89unvq46s1omtb42pplb\" ],\n    \"probabilityAltCalibrated\" : -0.7514014544003078,\n    \"countryIso2\" : \"jif82zjzxls1y4x1632wetdc1gmaei0xdjo84qmfs\",\n    \"id\" : \"1u51\",\n    \"script\" : \"pwkbshx4oieh6xf6onknfvlea1r0fantjd3ye33vlsncxeu5xvyfwy7b83qej4mfgp5o2g432iph7qpunrvk4isb4m9en72r8vt5v0srikwayy8rt4ef2i1w6fr0yx97ubhewq0fm4mv3xfywdc78w7v8s4y5s65ueqivnajtcdd\",\n    \"subClassification\" : \"pgtfve1nasc7prv3rb5vjzbid61wkiqtsauf4f1vwr1hsbivp\",\n    \"subClassificationAlt\" : \"grcj888rl35rnqqt1hmu1lncwnfgswh8h1tjo8wijp74qvhiqrkp1oazxi9gap25ztiq5u72gy6hz09xbmhu3bdrbm3nczxe0r4yj8l5hmjnyt9pt0oxl7yej784hrzqzje4dki0te2tr15ubobtikpblm5kqga51q1y5i6r1pq8al9n1r\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1aae885c-9877-4023-a973-6faf5cc07525",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.806143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "11bfc8d8-8e18-4c7f-a94e-4f7689ed36d8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassification/z4xvj3902xqclcjnc6z07f4ppppufctjivbf75zvkxf8o7fql2jm63embscxtquezmymv6jnex6iqky2b/Tilda/Kovacek",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "11bfc8d8-8e18-4c7f-a94e-4f7689ed36d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.805266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "31b6844d-833c-40cc-ba22-f7728ec533fa",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassification/dmxjir66mtfurwb3hwlfnbyy6wrpmh8ifopx9i9jf9e0as0bpxtlbe2a5tfiiri0lseudi3glgb2jukl7yw1p9e23vzhtudfwz5pucfjwj73ui3droryy2n9w8bat01m399kg/Samantha/Raynor",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "31b6844d-833c-40cc-ba22-f7728ec533fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.805201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "4381559b-430a-466e-9fec-d40c32a55ded",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassification/plizgqfkaahl1mos2gayvnerry08ia2z84vm3olpw16a0anb838zbth98bbynq0d9wnmo1f1iafmjb86618fzxecz0g898su/Chester/Pouros",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Pierre\",\n  \"lastName\" : \"Cruickshank\",\n  \"score\" : 48.36226892592269,\n  \"probabilityCalibrated\" : -0.6468872277782833,\n  \"subclassificationTop\" : [ \"brui5dm7ie8nzwdbuib43gn3fm8ylx1k8hn13gxbpoghac7pml4id0u5zxop7uepb1mwal9gzwd5670yuffbqfp6kwe388cfxbdorcfjdf2jl54mv1nnbzf2sr62u7etq23ppdm2v0q3bme7hz7p7eoqofo0fb1zl3fmggz30\", \"ugiou3ezkxkaw8ks0wo2clzmgn51tvyjjrwl2d0ndshkw4ubamd\" ],\n  \"probabilityAltCalibrated\" : -0.34779707753594336,\n  \"countryIso2\" : \"q4wiofcekgi8staurpksz140sn95dg3j29ue2b09rfg5gtxv7yl2m68wxcb19hchnn9nvm0igei09sdzrvq46r54md5wo3o954xtj7fhiflmre6m1of40qt3zkb81jf8le65873q3gw9qxo8nl7o4ouqpwqhyktx5fyuspro2w4b9m60nfev9f9x7d5dlzq\",\n  \"id\" : \"261f\",\n  \"script\" : \"ysoqgw6j6p0jrlpth2wdlu30dwfrixjte16sg3c7nyul2axatitpxybe29da2m2jitwyhyr\",\n  \"subClassification\" : \"mn18gy5xfw51kud1dxbkt30vh0g8i9627lq04a28lb4wkwe9qep1pa8v74lhbtuux6yiwwf3s2rpbazzdl8xrg22kfwboihl6jxlhcvj0mzayntx6pclofyrgptis87w0nravabapir80yo5piign1f6zhlizuo\",\n  \"subClassificationAlt\" : \"mjx3kimkzpxwjdeq0zick0g4p9mp5omx96jo4czjxckksoq1m7ph29iul2glir25rg4uax7f34eyj9zv5ojdx4i0nu3215p5tdi5m74ju8exaitn67unfpwx3fy1dv7lu6p8c8t51si6o40ss70k2w5puvyhpywlvensodu4kwnl43ggos\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4381559b-430a-466e-9fec-d40c32a55ded",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.805114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "00b638f7-bccb-48f7-90d9-16282d8c967f",
    "name" : "Get the current software version - 401",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "00b638f7-bccb-48f7-90d9-16282d8c967f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.804666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "149a1e9c-a225-48d9-8bf4-be358b6e83c5",
    "name" : "Get the current software version (application/json)",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"softwareNameAndVersion\" : \"09lnx1ef3mxks3909dnssgrg4vpjgz23tj87qv71u3sz5g3pgikubl3dpaa304dqr504hn0eft78db04jlsvrpbjo32r8qgk79dqpgzfv6psrt3jlsbsi0mciiifm58thpv2c\",\n  \"softwareVersion\" : [ 843681638, 1184006061, 376683998, 1503008732, 835801213, 2123555161, 325361025 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "149a1e9c-a225-48d9-8bf4-be358b6e83c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.804639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion",
          "schema" : {
            "description" : "The software version.",
            "properties" : {
              "softwareNameAndVersion" : {
                "description" : "The software version",
                "type" : "string"
              },
              "softwareVersion" : {
                "description" : "The software version major minor build",
                "items" : {
                  "description" : "The software version major minor build",
                  "format" : "int32",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "SoftwareVersionOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "f7da46db-3e72-481a-be32-bfe400f81b97",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f7da46db-3e72-481a-be32-bfe400f81b97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.804508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "1bb527ba-1c14-459d-88b4-955a39cacb0d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1bb527ba-1c14-459d-88b4-955a39cacb0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.804491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "9b75f4f0-027b-455d-9029-8690c146a171",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 400",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9b75f4f0-027b-455d-9029-8690c146a171",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.804474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "424217a1-f7ad-4342-87f5-ec24effdfe8b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"xjlp57rx58xbwmd3q09cxta9uub2d4wiv07t0o23qdrgmrajdodaih2onspht68vhl22dpkitlnagfrd70\",\n    \"score\" : 12.467144970151956,\n    \"probabilityCalibrated\" : -0.6186210795557674,\n    \"name\" : \"Tanner Yost I\",\n    \"probabilityAltCalibrated\" : 0.5598966908013296,\n    \"id\" : \"nx1c\",\n    \"religionsTop\" : [ \"c8w5q48zcr93llq4yfsflyz9u2libjtt0cqv3ez2rjrzhpxkx5ucy989zbjhyvrc7h9xgvbf0yi4td\", \"rdxs9rgk\", \"n4yu4ik22bcbtamr5dtifa\", \"tcqwpuoayujatz0t2km24mpkwlmp7j0vr\", \"nqqe3tnneytv928t37l1mqclhtyefvyzxjt08oqse6jpbri9401n7izdqqwh7pf2tii3runfd9y\", \"5jx6uxfjc9r4dm2tcxyn9m04ytvs93inybe4g29o8j7d9d7qwecgornp3249fc4zb3kwabh7m9hv3g3y76w258gc2qt2geitcfcj\", \"3j90jtlpz204onftbrju2733gsg64kdk8ldjlen0zw1qksegu42b8nt2mfb9tabjitf48q02lskqy18rfs50uo388qss27rkpmo21q4od6f433uv\" ],\n    \"script\" : \"wk06kb1wafzm2eniszr4j608a7h0jpfr8ftxwynkmik00f9hvg1tvzihrlywktojsgx11rk72sihmcurou5m06m70t6ivsid3we0xn35ra0gqxnxydfzcppxnqo46k6oh2qonn8oxo4qa67uu87rgix\",\n    \"religion\" : \"g02xhyjiya7sigbc0iovd9prbonbh5sslqe368ydnay1jwfkbjr5qyedq4g35tlc90lb0h0fzvl0vlud8r8hj2cd203dm1nrshsoscfuk65uy9z3vkyeb42u1ihxvcx06venu38ctdhpvlg\"\n  }, {\n    \"religionAlt\" : \"c6siz2mx2wde2vtv56g45yp4l7urng9k28vyxm8shd8mr2j65wdc6fp2m5zgs2hwlabv25z1t6g6tlol6kdelpd86u0hh2vz2ccbc2cphsroorno2d8qij\",\n    \"score\" : 32.838250150568506,\n    \"probabilityCalibrated\" : -0.8283778521337837,\n    \"name\" : \"Lowell Rohan\",\n    \"probabilityAltCalibrated\" : -0.5846961999256932,\n    \"id\" : \"b294\",\n    \"religionsTop\" : [ \"30quwfc59mjy40ipj7flkv55quy\", \"rydjujtj5ypzjiqpjvs7unzbhi3o8g20hccbnga3b4f7kszn39i9abp66q56w\" ],\n    \"script\" : \"ce1hzfd096m5aaoryw7wna942g52ormvabghjhghsympsk4ij32tlrodwwpa3m65718t\",\n    \"religion\" : \"0k9k0bdexpk3sef37qzowzbandnmawjyz3d3ozuvemsisndgo0w38w5g3y3o3ra6zw0w1c12deud66ifjqlwbnesm2897i6lecjdbbyqaunnmriwhhpudu4o9vmeoaz567ppy31nn1udgedkcl0kq410eu0mk2d6awr7efm2y0cw3bk265bg\"\n  }, {\n    \"religionAlt\" : \"zcy1dzfa1uf0uxeloah9byp5f4ughe8xdx6aklpkw5jxihmlrl7exjk2eavevxobbbj1ul6lpbm9r8mo6kcgcwxuyh84oyvnbc9ubwkn4wzjd0\",\n    \"score\" : 28.95015737087049,\n    \"probabilityCalibrated\" : -0.2091942273659173,\n    \"name\" : \"Syreeta Hintz\",\n    \"probabilityAltCalibrated\" : 0.5392993164998818,\n    \"id\" : \"dtfd\",\n    \"religionsTop\" : [ \"a1cqyw3xxn2qv4d9absi12o\", \"oh3t0mp773v5vhbu6gwuv33cm075rwj3eaqin77sehb7yd1200ktpys7omrbn2qjpexka93ea5nl0j1mkat34sguxc49c8lv73tcj0o285zcqafcu6v191zdx5fnomoprwh5rrepkfark80ujl6riw54cxcmp47kmur4i89hpehzm3veuuhwki2nnoi25hu7u3gwg968\", \"myitt3ib7ei9alwv2kkvb68cgom4f48avrbxgvuplhl8zfsgnmlw2a2\", \"j38psxil9cnohmibaqckgroiq5vlnjfc6sl77u2qh9v5ow5d0i86ksk6toz00r2jvk65tpzucqvyjkymykukptntvgh6jk97k77yath7kfpk3v8itanpo2th93314uckuq4jiv72\", \"hblhd5935fb3h82btkojzlo\", \"nzseldxaomfh4915r4thbi51x40cii2nkdm2666l2k5ps31dsdo8l2tp9pnp0thp4a2cfe5hcs2ox8kmefajwr9exsfo0uy7xr05uk36h8a69tuphghekrxbc60fy8jk24w0cwr725pw2pod4mn1mwti036wa3u1lxx59ro9mvvk\", \"v7xbx3wkl06jzw56lsvx9l4lqpp13vd4yli7w81mqy4fqodcgdzjv707khiphywpja6324yeq8l5bes9vzsfx59ayr8xbu9ntfskx9xhwvtzwl4pmrlkm7wtdv4begoq1n1getby1qqqjufp\", \"odrx66dck3u11ktqn5h4bbb87hz513y4gbfkp64yf50eg9ywg4d9hbbdkvxeu4pkjw3113ybfcmx12zrfte3c8kc4n58712jnp60evjdkjhrv95vsnkbf4vir2jvko21u2w8rpxjueo\" ],\n    \"script\" : \"7wqhiaeb8o54sys2n7j0f8bs9v9v7uelk6yncsdbnfegvg979avpykyvfacsr52ftsgp80y9\",\n    \"religion\" : \"e8gc43vobfil80gqdu4kb5u8whhp9896h0l00x5xa6faisnvzjc0wdhdiym3b6sa430iuf9ebmd2lcf01ta2a6hj72qennalc2408pe2li1d\"\n  }, {\n    \"religionAlt\" : \"clo7dgaw02pc8jeaie9aylpvvbey1f68a379yfbvfdq39udu5a0551p7wexxciohculekl0bbhja7t8hytx1aujw4kh5i6hulm9a5ib10zjhaornob231oewuz7gv1cld34q7nfwhv05rozvg4cpesq0fejtbnlod4mow31ai1c0ok3h5bflpio4u\",\n    \"score\" : 98.77036643364619,\n    \"probabilityCalibrated\" : 0.161351293067459,\n    \"name\" : \"Wilbert Zulauf\",\n    \"probabilityAltCalibrated\" : 0.5904178800891509,\n    \"id\" : \"w2lh\",\n    \"religionsTop\" : [ \"9zlmtd71v7gtoe4dwxmhnj6m2d725coiyclz5mvanscgee0rfs773vltwuumgf3bwm6dme9wd22yqobq52h6u5w2ujhuis0g62loket1c3zuhu6597jrx8\", \"syfqsdsv58kgtec5fdlfco6bvep30b108sn79yohm472z20pb2wqhlw19u5b4wekcyrog4x4zuusn0r6gth6awxxhmkd9vgjbw58omsqok22x\", \"plizlvdo8wictib1jaucde14r89t0w8uerj8jy5t5re20jrtp0b3vltaatxvbhh6n74jxoeerpraxx6f4ziyiz06fwcaiee3ut2bfq4f5591atv7x08\", \"8nskb4mukmfkgg8g6ttj9sh6ilht5pjuy7mf64ampqahqbqqn5ld92ja4493a3uhy7o35dgeoj7lo8fn0frn1njdvvvhjzqwx77v96dpflla8ecqcabwehrf3xp7r0tdxr99mcdlxv\", \"dfpevfh17tzbdqgf5n9aftohz0kehk3ejtryxekgy0ggxll0pj12tf55dcs63xypos5k2csklin\" ],\n    \"script\" : \"93suba12otqaiizu62fn8ov9nzval3a528tzj3xb72ykyf5ek9yttfvpbd8jvofpiu6r7ktaum623xzb8vio1z8lynwrkw3qepla0p4ntjq8xf5w9facn4acfk9x0mhnixfp8oeetupr0i07cr72zf5rfmj5c61xhpsqtbr6yfopg1bpguc\",\n    \"religion\" : \"peuwzdy3h8fe4zoymryeq5wt4nufwdabv16yzm91hno7c8lmnwkg0yzxtpoi961ud1znfcgectkrq3z6evmdwy7nkf6fa0mjhlmetre1vcexy19lhu2i\"\n  }, {\n    \"religionAlt\" : \"mxfw3c7qpqdb02njm0hpny5ajsgz6k6mvpzmixyjpynueqt\",\n    \"score\" : 99.45749892693992,\n    \"probabilityCalibrated\" : -0.9495795868553913,\n    \"name\" : \"Lovetta Heidenreich Jr.\",\n    \"probabilityAltCalibrated\" : -0.5942825097714735,\n    \"id\" : \"flwm\",\n    \"religionsTop\" : [ \"6qo1z5zfqy92mw7b47jwbs04hmtaglhmxu5qc9ft1446b54soc5jt3evwl30werdgc9bt99elxqkljtejldwt40cnuf2n2yo0ehs8og5s3tjei7mlfpaeqykyxdrdoam9m0ery980cvrwc9oym3r4p335h2fswqgr8inebjf69akjndzutn2gd8o0s0quabl6ijsssf\", \"mdv23xo04uwwikvoqzc60hhvl6v8pag4nphhs1w23mxyiihk2dvacmdpl42b8uoo36if0iltxrkcw2o5pp1gavcp2e2596w48j8tojzkm29iyz945sc0\", \"49acikemv61gjdzx005c3w2hqtc7dbdg77o6c69ydo6zsvxhzrrho624zhu40dii3o7u6pjgunwzneycag71cq6qh30tyvsmihe7s7rva2veivjtd2qgylnj852ngzsiampp3bejpn7b3hnxvi26v55ckh24av66k70o327ubs9em4wve4tf24rdx4eyu26nw3\" ],\n    \"script\" : \"hsys2ddmuugx22gnp3ojqzje8jqubeajdi67rk4lrcyzfdpkkael57hcu7zblisn4kvtxhqqwth3fniwsd7zn2tavgqpg3idio98db8qhffren0kx2b91cikhdsbnot4bkomqjikievum1vkb23jv6l3pdqze9o53tt9h7rduo1\",\n    \"religion\" : \"bfp5iao2x8t6ac6odgr1rz247h8oh359lm4dtgzmjqbcm9rxg4npiggc4vmjrgvypjbtx9a24mi04r46v4ya3eb6i74s9bsi4zrg95fnpic3r059uhg049blacarg7v5l\"\n  }, {\n    \"religionAlt\" : \"7w4objjc743vikw32mpf453don4ilkn67iga2dl0qj4ew5a0h6icf66cuaqzg3q4o0mwmpui82t65ujciu70ev26kfmzsaj3blb6w43jjiln5m5b7xtpkr0mqzgqxzav3lb3s06qx7th0p3m35jke82qkar7nqc1syp5p7tnxtcwubh4yrqhwduijbnca1zpuai6\",\n    \"score\" : 31.89423363995291,\n    \"probabilityCalibrated\" : -0.580086779475806,\n    \"name\" : \"Werner Fay\",\n    \"probabilityAltCalibrated\" : 0.14229006109830755,\n    \"id\" : \"g46y\",\n    \"religionsTop\" : [ \"7jnxwd8sy19srzqrioxn3hza1od5mmla6kb1vzrngamf6ytroeln0qstwr0sytsasvhergbkn7lg8ul1\", \"hdit29g9pf2c6rj80mbbv1zjcg08gregn96agcq4l9x0jxuzld5yrmo9v0qh9m6s20sg7pw2voqr09v2c4q88fx8aezyftmjfty39r8s8yx7okv6o1u5wkh6u6cj5xm\", \"kk9qtwiptodcq5r3erpvh7uh69r73sbz5mrpicowx3448sczl2zpn6pzpczdddqgio3cxz11ayu1339e3jauotl575sucf7zq5xn535xj243613dgxtsdomwuhv27upm62v10t03traakagi5elo2bsyhscpwumj0zywoma4al7usn90pwi37\", \"89to740f8x3257rsnhh2xju2vg9mvc37n3a21xzohhzbdk5srn6k7ydkg938ugcx1y05dzp0a7kmrxv8k0r6\", \"0w6pugh9naup75ehon72eafjkaahncapkhsst0qxln7woh0zkul01wj1wlxo3i55tzjb5ytrky\" ],\n    \"script\" : \"djhffof6dk246llad41bi72xgis25005vhzaredj81oma0oky5jr5serp9qjfcxonb6odj45gs3z1vlkq1rfnqcder09nnm7wlk4kz7kvvgoaarftjeokdm38do5j7726sk3ou0kksicu4vvr46i996f1ng77lkd54383otmzbdh\",\n    \"religion\" : \"zgjb2shlknlb8mxtqj6u9azo9fybp3zxebktz4hudwkzaaop5ynph8c0f7bt3q43av696k8yvzidnhzi7sc3k31bc74kcj20j0q22jxf0dg9eq9wsp98e4zblbyf68dnpusc8q88mtkcw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "424217a1-f7ad-4342-87f5-ec24effdfe8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.804439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "38e4a371-b047-4603-8e05-2f45210f5289",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/c5zsbgn1dqnxjo2urgcqikipbqq931etqyc6iyg90nmzcq23ajyovizvlas4kkt2meoy2g6w6csoaas0xo8vb53jcpc81hkxxli8vttdbuqpbad9we3iaxiv5ahemhidqjjh1elyjj4d16nprqndr8k1a9oxyfp7gga4bfuxnlcc8v3mzeq1zfob/vd2peixabkj5lj18664ce42cifityhbp6pm201emvayk79119iqhcqua272glbz2",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "38e4a371-b047-4603-8e05-2f45210f5289",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.803254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "1fad9089-e325-4aab-9545-4cfa64f34ebf",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/xrk8jf1gzqtkb96oqf0zvilw6ugz0mm5ysannjjj371izq0eqa5yvwo1a44o53qdzect0005gomsuwo41e58mxpg1ku5v7mjpr9netexrrrkffxerh6c88tfkwwokvxa3lr2tvx0zplt20ek70djx1yimt3z1q3zaug9hlf1smsbvbut1vhjdp3e4jyxftc55c9oy0qx/fw7vq6ewq1pqo7eq1p4i4n49yn8vw2jee2lwbs2jytd801zr34qfjkiocxbd94lhofnd2tu7v2znazm7z4n2zz16c9uyzoxnizk3vzm53egrcy5do9ck6kbf6rm7l252nquiaov3obomp",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1fad9089-e325-4aab-9545-4cfa64f34ebf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.803214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "0babe0c3-eea7-4da0-b959-16578d99ba39",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/5hz2t8tjrbzmudr9bh4vg2rvc4c080j7zg7lnqh3ffas2kqfpd03qzwsds5mzoccnza7168uvkt0u2fp8z7kw6jhky5fh99a2k9thrlfycmvib91tiwb8yt6perj9nxm8dkyuaah15c76zcgdpb0utqjcsx8r1xehdk2lzrpwq3cv1tirn89009oo1al/oh4e29264te8r0ar3xgocakpfblj66491tq4qz2jgovogvsqhaqufky1fgow5vw7evt80jnvlvavd66c1nptdwo6xizuklsme9bh8zzpq11pdhy1i9jvw03ru",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"qx4q8sh6xr36fpt2iswng3xpmbyhkd5gmhjq6oah9wfwl0f19wsx56djqsqeyiz5l30a3oinapt20peg2l4pg8uac20jfvbwzjg0cd5xu1rnfnk7raxw8d0np1nc6w41tiad4rzuftc1bc6v97py59i8b2vsjpw8pn2006n\",\n  \"score\" : 64.0754250441273,\n  \"probabilityCalibrated\" : -0.5620086445952146,\n  \"name\" : \"Ezra Jacobson\",\n  \"probabilityAltCalibrated\" : -0.6447801619613172,\n  \"id\" : \"6123\",\n  \"religionsTop\" : [ \"xo3w3ejt7zlc0px6jhki7n0n4acy\", \"iv4yd9g9lrwx4s79k44mdxs0s3d7fq2j8gg34majuj19dhm2p0aztdx2h8qsso7gctke34uf1hb886xqpfa882yk4jntoy9fym0lv6tsgjvc8xscqnnn52o2f6imwjxu2aha7lvmh3va1lih6hnapsqrcbdvsbv1srpvjbzv\", \"ffabvt3o15m44j6inuqm29ln9t575qutu8t6pkvyjep1iidd\", \"2okf0253kpg1wloiu0jafkyu1msmhev3jzfp2o384o\", \"dv48cmbcxkgnca0pvu6m53i2oryggrkusok505w9ikag\", \"l1pn1yjn5z9jw1mqb9njdds26d750i8hu19ou5urbq2hgt63tgavkg5wfgkow6ggxlvpj5uw46p1ar75muoiwac4463t0u8aeani9dex7z3dsqddvrmijzmiewihev2gkfcurvzy1e4akw5yku889nnv1au0\", \"oqq8wc9b73sbhdlpsh4jph8f904hjb3ar5221i79zt7y9e\", \"vw4kiurez4zcaezs6lroksafk7ylc9b2czpuk3gcm3mteuc4ikfhfbhf7yknrm7jhbo3idnjpqgpwhgz\" ],\n  \"script\" : \"hrmp0dmj3nmqq6z6rexmjonieq5414ay8be1ipccpehr7mgjyzft15gb44afnbnackm0d0u2hd9dehrr4vvkj618yyirp4t6x0bpi61662elchgpl6hcg9jz5fi5n3i73tcd0edv2w9i\",\n  \"religion\" : \"p9fz1to1fw6dnqkpkht2tyyrmdso23kztk8yfudfo6najx49eq5ywngxxxuorxte21xoq9hz6s3b5f8niop39bifze573g8h61dl306gh6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0babe0c3-eea7-4da0-b959-16578d99ba39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.803158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "5ebd69d0-7897-4b51-a526-b67bb1c4705a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5ebd69d0-7897-4b51-a526-b67bb1c4705a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.802777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "45976ec9-29f4-425f-9663-000e3a31db41",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "45976ec9-29f4-425f-9663-000e3a31db41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.802761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "db85ba13-1f4e-49dd-a26c-f7f463be5ae0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 400",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "db85ba13-1f4e-49dd-a26c-f7f463be5ae0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.802743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "cbacbb9a-3f33-4af9-a581-c164a60830a9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"mxwx14mvhaowlqdq15udhxuslbu97vfep8t9lnkgbe1omiu9jqv1bjih9h2o0v4hzfri3yv3lqoohbxxaojkdr4emcv7z2doch3nq81mfvnio1gzjjjho9s1mvk22sdj13014y4zi0c2h8tc9s7\",\n    \"score\" : 41.305240936368016,\n    \"probabilityCalibrated\" : 0.05995431714436905,\n    \"name\" : \"Lucien Thiel\",\n    \"probabilityAltCalibrated\" : -0.2603259696646141,\n    \"id\" : \"qqu1\",\n    \"religionsTop\" : [ \"l6wlx7jlaj4ij4kdg8nuphvlqsmiow0zlhfog1qssq5jjif4bxqi0i8m9hespnyfaimyw8tyxhj6\", \"tpdo7i7e08hirpg4uaopsb29irlox6wse80huq4yltjk3wd2y8rjze5ps09nv1\", \"p7adxeiyr05snd8kpgwxigxnm1n1furmhuip70u3jsppzro6vqhjzcdn8eu3ntj3uf7143\", \"ir4459zcgelek3xn5wc6o3939cz95ayefx7ltw6oijjke9h1ijwfad531q48l0ehor1rzext5cw44wiug0oaw0f1sbqapc\", \"7y6rf58fkd6p2s7dwebf2ezkexypb6suu3cquhncfe47g7uwam\" ],\n    \"script\" : \"3ndw7mamzdjnyypzxqc5nzhhqu4lp9yyv7ebhj5kgoic6qb9zre9ok57fy3hemg975biteqbrav79hed7mfs1pyoo3mn50on0w9hp2namx9jwixuxlzdni0vwnw99eqsp\",\n    \"religion\" : \"y3peboru3hske4jo44haud6zokz4j17y66kmitphvx5drhno6\"\n  }, {\n    \"religionAlt\" : \"stbjt7c3ftyscv3\",\n    \"score\" : 68.64447802550474,\n    \"probabilityCalibrated\" : 0.6361974568811057,\n    \"name\" : \"Raul Kessler\",\n    \"probabilityAltCalibrated\" : 0.23460753060176098,\n    \"id\" : \"23h5\",\n    \"religionsTop\" : [ \"7rqmogiiz8chcihffg6gz26jgp0znvg97shlr\", \"q6mgajen5yw1z736npcsxr5ltmhehl70uggrky0h2ati2m0j3vf3x4kqmd3dmf5\", \"plwz1g5yio2dzv6riqhtqr7miihv9cdy956gp0s551e4x4dsmkqwqolert1quknu206547urw8\", \"xo7gmwwm3i9a6rizrb4027vam2qkqhh6iwoh85vy9bdiw8c54oxqaety6qrm4lbwxwhjrgoru7yfzgsd71ektii5hn7gymavfz8pbdudzyea08jvuaxorimrtchp4lhe4vi0s05c7iabo6szh28rspq9vek3qchtjw74epetb2a\", \"5llcrgi945bvhny73cz0on7hqw91h9i9aq1tdta3p9q5tmdmvuclo6il3bjxic8kze2tdr8a7chfmeb7usm6nc19nzjuwress8tkhrxzmj1ht\", \"f8cgji88pkbxp3t03q8imflfdiyx9atnrhm6v8rr5cpag31sk7c5iqnlj3f1dl4\", \"lcn0r3ujoyx\" ],\n    \"script\" : \"bipkyjhx87rv74083vcmwvcvew7ohoun30qq3kwpnoj3i6eicxcpspu21icp48h0ycyvucizewnuvwrmf8aw78lpqq5\",\n    \"religion\" : \"9ax97\"\n  }, {\n    \"religionAlt\" : \"prpsjskqomv1w5vafzshs04ovduxfyos18648um76swsnhnw5ybhhw4btvgtki\",\n    \"score\" : 43.84825086808285,\n    \"probabilityCalibrated\" : -0.2835610369918862,\n    \"name\" : \"Waldo Collier DVM\",\n    \"probabilityAltCalibrated\" : -0.5222255013734194,\n    \"id\" : \"hn24\",\n    \"religionsTop\" : [ \"a4je1i2y4ehygzizmpajph8rz8wwb4u3sk8wvjwm6tnu9ezdfsjzvc8uegxwko16uvyry1y9a3lmgvxynjad8hypgpdf9v3bl7fh2r8m\", \"zl8mhcjj3i73mrl9jr6qo1pozc713uie4iwzd0giukr8tzsrhwzycvsyjxgj0rd7o8mvgtmdko6lw3jc7vrqqtrj4wmzip983phhd9vsq0b4zeyar8ja5o\", \"wbffiu7q0jk5fhkquecsdypkqnp1ekc4psfc5rwy5j25jzhtqx21invvixpgkdjmdjkig4uetjqogjcl79aqhh11sz54l1nq54x2o9xzatrudk9nqkyr1a2tcm8l18emzu7dqip7ryujsv06umnzv06gny3y7aqh\" ],\n    \"script\" : \"h927p7r0o2qyj16b7lxji1xuuwf15lrjbmwj621v5dv9rzq6mo7vwrcwuuwtx254jlktnc8hsski4tbc\",\n    \"religion\" : \"11r51qnjf7e2s9fl3nxgp3vct6f0doon4ma6ogwzk\"\n  }, {\n    \"religionAlt\" : \"duy2pi8h3qy3orjnks3122jcmqjop786nukigc3srf2vf5ruxr8fh2r6v4rol5ufl06nfmb6ln6nd5x4htnk34bp3ehr5zbxjc0cwtvetxolxunrg4gyw0cob62t90o\",\n    \"score\" : 20.68000691836098,\n    \"probabilityCalibrated\" : -0.7933370919147078,\n    \"name\" : \"Mr. Graham Rice\",\n    \"probabilityAltCalibrated\" : 0.7000044853063165,\n    \"id\" : \"m1ba\",\n    \"religionsTop\" : [ \"jzlahci80kio2m5qb16sgjcrwx72sla3psmi2okjepmcz8n9tcaluromq2p401ajjid47wojk0bq2b0xgjs929sjd4rc6drn0m4gsx\", \"glpyr1n0634uktbak9hwuesc5b1coepbveg\", \"81kzz7xha04wnyna5dhfk55otjq3tt92ipkmpu02dy5s1y6g96g7twdzweuqvdusp5pgmu5fsdcjcpozq5u3j\", \"d2q47ceftu8ovlfzonkcs8zyp4ofkk9vo9\", \"7wo4uuej49apqdm1pdvzaulsy6odremf382znv3b1llz5f6fenhadfegleil6s0lxrdslwxvx9weh1clb7bir16oqk924jrgttv3gs31cyhffg8zfoilbscqsf6hz\", \"qipir76frflbtgl5qqxpigd2o34o272w54v6x2p118j7v723oh9k7hdgbjgju3ozd26wzdcx3ut16b5512unr71wfgxvay9gca91qr5knw2fj3mm6baq6zrs9vb0psifhy9\", \"sy3e1jneic3csoyg7ct2j2dfkhp0ghplqregsgqjyzsgislr5i6qkhaawbw2guutg4q4gxe63p\", \"j8z8ipgen1wdk24a545qoss9gl1m3avhtw2s1a47jjmroxuu\" ],\n    \"script\" : \"6qctgzmnoqq3iniwzi33h6koc49m6esma0a0e84wm6cslc0j3d3roxk4lxo55tiknhht3ymdb6tpcuvaqhej1m1uu5u5qj3t5ulujnghl2zlzinp3\",\n    \"religion\" : \"1whmlxqltmp4hh2rm4g81fzc0ay1bnc1wks5a0c8ssu0qempbuxiadogis6hopz24l82c\"\n  }, {\n    \"religionAlt\" : \"fclkjrgbadrbrzvqb5q3a3hcij9tu0ul4x9tfdw18v574y8dqr9vj4u58t1jfqubjfh9qdzy0qkuaskrtrioykz0z374vps7\",\n    \"score\" : 62.95758669110767,\n    \"probabilityCalibrated\" : -0.1461244505578878,\n    \"name\" : \"Mr. Burt Blick\",\n    \"probabilityAltCalibrated\" : 0.49914976441826964,\n    \"id\" : \"4w24\",\n    \"religionsTop\" : [ \"p65igizqzzollbu4d6s9snrgj39ngc\", \"i3gx1y36204b0alai2q6aq34d8m5639wnq8u97\", \"5geimzqna3a6de30jvazt7ayf57o1x6j7i4hyh99tun0o2sc1clnxt3t9n0vyp08u6yub9meb0x2hoovusyzinhhs9847z6n7efyjeeyzwjjm6b7ffg7m5z6nsma2hes9pog7lz2eqqz1al68lks0zdcmmae0swvlgo\" ],\n    \"script\" : \"tmhydvtib3tu017bh3rnk56w0msuz6dou09qg64in6xw7nrtgt50kinh8jhwvrctd452t87wradw9h5i068lsnpbww1i5f1srntguiqy6ceq48rk5y8k9ux2ul8x152x7oc2dag4swguiym6x0f3j6sa\",\n    \"religion\" : \"vi5l2zucbkp9y1f3qyfm9wkpciaon3gxi200musejx2y30z3\"\n  }, {\n    \"religionAlt\" : \"wug0zsou9s347oxl4lnuli70pod9gitth1dm2h5wscmz741nr73u75moa7f4wjkbrlqo3lvfkyxnnfnihp6f7acjrt5dgayd9hn8dfab7ee19bbkl1eszbxuw\",\n    \"score\" : 24.346180601789268,\n    \"probabilityCalibrated\" : 0.38863304060077564,\n    \"name\" : \"Chance Bradtke\",\n    \"probabilityAltCalibrated\" : 0.9820597644610927,\n    \"id\" : \"7m75\",\n    \"religionsTop\" : [ \"ywj8n6rqkr2561v7xuapr01adq4k7o2a8kxo4lgddhomdmw1m9v1a3dweav714b95baokedlar\", \"6u3ivkhjndizdtj8mep1u9wtgtkztq9rreezrx6bg3lc29uwwj6eul4oolzn4\", \"u2gl59m4fxu5awvak80lueb1oaw1o5bgglxvgarixmmd52fzrxhy2rajum25bp0gb14nictcou098k9k91jgjo8uvzmzz21w57xfylkd0peqqtdu0edjg5syrxrao0xtaqcepofqlz728a35meqz97z4ukponf5lksmoueva7nwek1q\", \"gbwmyty7hqzf6k5lob67rr8yc43g5tddictxq0vd4vfhz3h0l364176plkqhji0e65yw2n7umj6g3vt4qg9x\" ],\n    \"script\" : \"x522zbinn30svlw1vwbkk3r26myhj61lums0fbvdw7pwtaidw18r34rtw3y9saysd35y99fen7p519cklr6plhxhqb3c1bd0t4d31uf1hgtzw5m3lnlg86nx9aapydeqicjha81yhh0ulb75wln1q3utnrf2d02qwofmu5ja4rn9ikhz75n0r0\",\n    \"religion\" : \"vfe26h0ein54zb4z1dhae3bd0zz7tuuvhug0vwu7t2yb2j8n11lcg2pfrlqzvf9kw5gjn35a43nskinqvcexbwe4llafbksa686zyoqr1pz0fykk4pouf46qypgze0ktufsaw57aswf6\"\n  }, {\n    \"religionAlt\" : \"fbkxsxsv5p6tzcq560cxz54muiishyae41lohvpfg7i8z8t9r9nlyv73q6mj0x4tqe4vveohx5b8tv4gn8rz51s4pc0o35sd635hkob2kk6crt6rz0r78w52p1rpwer328erakol6sa67rdh1qwluy40e90k99rmssgye6tnutxsakg6cmyxtx7iane37td\",\n    \"score\" : 20.77748730332273,\n    \"probabilityCalibrated\" : -0.9336759885683432,\n    \"name\" : \"Malik Kessler\",\n    \"probabilityAltCalibrated\" : 0.5796437581303913,\n    \"id\" : \"0os5\",\n    \"religionsTop\" : [ \"ymo406fivq3mia21uw1iirr5kcvyzq3p0sbmc9rp4s3a869kammz27anb9a0918ciby0tf5sis5636aib6hgc0dellx02rau1e7bdw9dodmsnum8js0ityz2dggp7uxmu54ajs25o78ch9kiod5fvsgg4mj43jkfgc7ugq5c0qt5g8xoz3ee505evr6bmh\", \"k7m0enbfn57qi86hr3ybpbwbil5h4g5xihnv4wlawsm2n0tp3lg1rsf88s3ufto8y83uo3te5d111b7jca7vk591g403vffjtherogq0t5f9etsgij\", \"1h01uze3rqgmgh9gspj5sz70s578ukgp1osnxw9yu24ljz2kmodg6om20ufp2bgehtwpb7apj1x9hciaizcio9jjafu9cb2yeuwwzrixlxc673yeg06f7y47wcxwjrdynd97adut7fcstli30ljlvq2dhh778nfyk\", \"8pkhtglp1y2hsrqmxr5hr4yxtkdrigi65pt5euxi9z40kd89zf02lxflq09mow9qgqqwhcvhkbb0ff1jsrldjd7po9h3madq5lxnr32ibltoe78o26eih3mov2enrnxs8lpurpfysetx\", \"mxj03bsksot0ikv9zyzkwhzfuw450ce5l137lernid8blbn3kkjcvcm2jv0bbv2ydbkpp6jflmed9pd4cfzs8n1paror95kc9kw11k5pqzuwj573tbiuxgk\" ],\n    \"script\" : \"gh1x0ya4hqaddfs4oiwvdfiem144e0qo0etbutkusz8cfsv1jdoeduxgxp9qozwfiwupdzhftw54rpu7dw37s7ddq7al7fh93hgyhv60fw7diqp257w1iwqw1yqrixw2qoqatalmr72qu642oz4922lx9qy\",\n    \"religion\" : \"4tcq5ywj7yrleum29xitenyj5sd7zd4og96cidkttychpl9qndmx9d1ag9earzpx1j4ffcyv6iaudg47c6nr9dz0igt\"\n  }, {\n    \"religionAlt\" : \"3qdf5myc9vuw1v8gcteho6nh6y6omwf1q42oo5gelkaxtwa3l2pabdzqo8omixw9tu3902b7t91b5dql32idplifkij4pz86zpq3lxwqigd2nhgzb4vzdhhinm6afauyqf5mpru04zfnb5uq1kqrz2n9\",\n    \"score\" : 44.43355538674321,\n    \"probabilityCalibrated\" : 0.7541236159823173,\n    \"name\" : \"Spencer Langworth\",\n    \"probabilityAltCalibrated\" : -0.718344567804915,\n    \"id\" : \"4873\",\n    \"religionsTop\" : [ \"llaugus72l1avec99zr4n29f41piz\", \"k08hzo2nr3eoozle7q1qnqp8745llq22kgs9v981fflkse7hf10km0a9h6x05vmvoe2jq4eibgjz9cpzcype4h9qob50i\", \"6udp5u1ybhtejq991vdu5f6to8rm70m7uug4xt6we0fd8afply188gtxljwwyutzu26lgts07dkv58843kqpgkj2\", \"0nqlk1e2ur3ntt9y4elacsipxzsm42tdblvy6net\", \"cn5i5envlvgd7k056kb3524hw75yteeahok2yysee4\", \"7c7hctvyfzah5au3l0ynfgwugz9soj9d4p0dql9baa18vl8wafpevebgjcwvv0dsjf95ti9jdqlk7c4mpscyfnhskwq8xgzu6s97rkjbpb18dactx7mkbug2bzifpn57ci5di2zb4pugfpqk\", \"cq24nvbixow17j2kxqrzrash\" ],\n    \"script\" : \"cofejifzj\",\n    \"religion\" : \"0qu7ba9a7lqffsx9m798mef2irfssq6nzjt7ldxk18g0ayct7kvneo8zcvsfin8vwq7d8acla2srdfutpd3mox153vfo0d3wn2dy2x0kci42ibz51toegmyw3j1jk30g2jnmgyfvuooxzygdpsz2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbacbb9a-3f33-4af9-a581-c164a60830a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.802698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "5e12b320-7553-4dc6-a0ef-99dc931e87ea",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFull/8yzcub32x3o2l0sxf4px2xrb6lu06cpyt0xhs1mvznhlyqjobsudtxwd5sx5d6/5yp6tzlzm17oqeqvmnx0bvrrl2pq5lz253ousmc4wwc1mq50s4yzrrs1ubkc3swbr984t4b9cty47ygqrohob46pj1p179zmcber91250cs9z6tsaepx8qz3yi1vhxyofqwq05u4fgz8/m8wo",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5e12b320-7553-4dc6-a0ef-99dc931e87ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.801068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "1c8b3567-9dd8-4acf-b953-bcc5ad328c16",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFull/819zghbo0etww3dmpfbjmt1n5d7gx26mlxbdaoxs3hr4dxtl2527bo6hq32ry/qcliymcjwc6g9l3jsuqtpc6p49rikx333ov6k34ao5bev99wbiljzys220/cdn84pj28z2y4m2",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1c8b3567-9dd8-4acf-b953-bcc5ad328c16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.801022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "363acb57-6f00-4549-bad5-1aed023103dc",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFull/j0uzlxwfct9o1/cdk3vo97cpay17th83vaew3qjkgkphbd8hjm7g4j8d8eiklt0n5x7nn98uhbw7fu9rwc17um8vkerpflozhf8smw35e1g9pc4h1xr2p76rj3f0sn4upqi2qca0wa5pr/ni8dbl0g0izzgaw0j6k4zr9fk9pvtjlqfpnze8vppn5l2vp30wbn67fh5sq5p5b3cykwploadmelwzxaw50yqeh4q0tlnoal3gufrvkhozlu0hlhjhzuw1r93n0rxgfdcsrdact",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"a2psbmagoud781uh0ft5trk0xndajif5q30lmnogvpu3emtiutrmorqwsxv31ewialt0bgg5vivewz3e6yuk82oki2rh462d8yi9nehpsgz0qj6x599ppw19vapnpuslp0dfqsrfzcrkkx7j6rtdbwxhc2km9imavujv0o2rn1ijq0vg2adherh59x9ym\",\n  \"score\" : 28.11383006286896,\n  \"probabilityCalibrated\" : -0.962686241531783,\n  \"name\" : \"Mrs. Forrest Runte\",\n  \"probabilityAltCalibrated\" : -0.2371705730545013,\n  \"id\" : \"ogo6\",\n  \"religionsTop\" : [ \"vh6c6w27perf5g61b5xt7zweogmb8hy84m97nmlx4zd5f60jrdc3lxj36zsn4e0bczxd7h11etof8jztsbxup6g3xo5pt3u4zzw6vydjc2ou3ak6e2872zkkv7151dflgm8rytlj2w5lpo21sexdsoacug57b0zv5wochpfdfm8kkh2jbfgh8h38zs7k\", \"ix6ozzxr225uyp28ur5b834ymsk6lbbcfwl1zduz3zgzqu4cgsn\", \"od9a45z6hsq71ea366vy0lzkcxlwymut106hpcbechjoqz02nj9pvvfvjapi376copafmes5e2j1chnihqvlx7ezi0b2zbasdqoelo2zw7rd7okdim6id8nojpabrt53cyk\", \"yexnqicer2sxqla0ksa902fy2i4d4a4i3ll9afegjieu215dllm5qsqygdlvwzq636eruoqafde6ot88d792mnybfa5bxmrdu58tsvvx640jgkrgi5utenv7385qxrd3ibeum0qzgir\", \"w98\" ],\n  \"script\" : \"r1qh2dmi9qj6rtqijt569aw076w868pk8f0senc7o336g6p980wjb2n56aggx76ql00oj34ez44byofre1yyf\",\n  \"religion\" : \"lov5buaoq7an366h2ib5dux91nlta2hmu9t5e20yq3qyeqpg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "363acb57-6f00-4549-bad5-1aed023103dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.800963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "2494e345-bf40-444f-b37b-76dea7ae8ff1",
    "name" : "Print basic source statistics. - 401",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2494e345-bf40-444f-b37b-76dea7ae8ff1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.800572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "1a23f0ff-9cda-4f4a-a962-7b96c9cf32a3",
    "name" : "Print basic source statistics. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"countriesAndRegions\" : [ {\n    \"subregion\" : \"p8qsbsnvbtd9orgyiy7ldz5odbcbs4j0dgzth89plne2czk17xxh47lt3wl8zh7qxbytqaob83fnc210vbe1r4g8zhvek7bfknrn1ek486z4aocos\",\n    \"countryFIPS\" : \"slq1q9g4wetgknp\",\n    \"countryISO2\" : \"8bbmfsk3uf0ygbg87rd1j1tz5c6cj0qoac2wivpuukqtukbk5i8f5rqd30gmd251il6j01z49xhy8xq4ovtbjyh9ll1vg72lorhesulawpktu2qcrrvbvfni1w0huib8h2jn4nvj5ms6k8ode6adrkywm4uaxny80ips6qxvzkhhddunij768vjr\",\n    \"countryName\" : \"Mimi King\",\n    \"countryNumCode\" : \"e0d6sg2ewjr24ikfihmvsk50djvzlrxik9osnik0e3riyguxzmikec5k2v2mlj7\",\n    \"countryISO3\" : \"b4vzxphizyiyj6a22np6pjm8knjnbhimt0yj32bx5a970gcwkmugywm27o8p395447pp0cxxtpg79favi9b0rcbaamewdcnmhna6ie3y1n7upf597sinhimtqunlcf8kwqnlnugo7gua\",\n    \"region\" : \"552nrlykr2wa0b1gusa4jrsmiazn3mztsw7qntitvvzgxswcxvz3\",\n    \"topregion\" : \"b438cnsmiwujgo8k4uttjlwtamx9hhpba2rqnewempautq7mqfdh59ezuowtz2j6pyvordt42sjbt4wnfk77z5n7hz7rtb368pzvrlet9jtl6gakuwu7si1r3rh177819xv9dactxtbgim51chzlsyr71sled3ntdzrggim4uqaksd6hx92qqoypr1ke3yeqiz\"\n  }, {\n    \"subregion\" : \"muezwwgiwbr8mw2kcs0wjy0bfe7rekz3tixoqjqu6pi23a4y2se9m6ldtrbvsd12fu0hn5834o\",\n    \"countryFIPS\" : \"c435hfz2wp8calfcq57t8ypnps3k3d3xb5vxnbzt73z83fze7xtlj8hf6z5bj78a9gu2dsdrmopqus3r4lwvg1ewo7ddlezpby6j6ay0wc7agqi9ipj03xki415fp5c6r2lprhicvcc3satfi2rszcftuowcw7veyw2nz09rafwhr00pe77qk9r57\",\n    \"countryISO2\" : \"498vufmitcfh2mt6kccchrnazhfi3enuq6ttfrfnyevb34pif7v1fgsrqgebdk1dg9wjc8uinyr3skalzjjxrh2u7c2byztioe\",\n    \"countryName\" : \"Monte Paucek\",\n    \"countryNumCode\" : \"ckz4mz6x0e71fnvlei68rrl35m5xbcncr2uv2jtn8w6d0jk1uqi5ddpat\",\n    \"countryISO3\" : \"rdmupe9f3b8mmyxxic2zyhdxvbpmp7iddi2zupkxqbmvwwyp84lzui\",\n    \"region\" : \"z2v3oskr5diz5cttxbnvpw7iqdkojabhh3jb19lyowd257cybrwftxe3laf0tqrflyv5xw1ses916xmnx605bjacgvd6u7kf6vieq5amr7tkrh4cuos378yq7112tszx8s1yqnqauxn92hc9zabt5s3qirkvk7amg30oj7o27x8b5fzlrvbgt\",\n    \"topregion\" : \"zu2i5tl7pbmi0a7lz403nvxvf5v1dsn315s9oxnqfrgevto1uu5hxa3k3k3l5m1d7rvzelw98an3awpd4uuosbhqpuafrjelexfcr5trev4jl87x9bus8y55smi30ceb923gfg5kakr\"\n  }, {\n    \"subregion\" : \"enm4\",\n    \"countryFIPS\" : \"91xy3i481vm3q1yz4bphoag7jlwsjz8nfb1frtnbz5brio13rj\",\n    \"countryISO2\" : \"hmhe5uk8fx0d7g35e81a02okc26xfrgij1518nxv8sozux7ohwl5v4j1et2e83763j5w8untf7tx9c15itzjy9qykpmw5fyos8m5qeffhe4oauuu0ugvlljq3vlenrp1a0kz2489yc95uq40opk3ntc3yb0cf4456e7a0nya5zcdq0lmhdb7m0du6pr2j9sbccnntj\",\n    \"countryName\" : \"Martin Wiza\",\n    \"countryNumCode\" : \"r7d3tv3w7zfvrw29\",\n    \"countryISO3\" : \"55chprs9o0zwhytf3je77f3hcdyl4txkj6wjdbosykls938q38agtj8k41biaeh951zbit3bgpy2zkfekf28lor4fnzz0wgl006hjdbekmob20nbsjws8o8n58wtday0in0wtvullf3n6yf6y13wpgu\",\n    \"region\" : \"obvbomzwecl6ll9ar48vk4eh4drzyew041biy8u0m72nabd06emg5g9dv2mpy94wx7zrjvzswzsu237r3wvxf7s6u99qr8l38g9lxfh05fhble3ngcu5kyzt6akcocm9wwb4ex5btervy45zt90stohi2puuvkf1\",\n    \"topregion\" : \"fpsxyxxex7qhw18mm8hodw45g5ce1qlnb5ba7gdf342vk8868xa\"\n  }, {\n    \"subregion\" : \"sz0aeniz5hdtmydweblth6146ok8j8glce3o2vptno0m9ilvago\",\n    \"countryFIPS\" : \"fjmpx0eyxphouzg2kvaptufol05w9u99opo8nlkhnwrs2s8vur6nekts71yg2pvsxw56nmonyb1goayl2aaui2nuvgy2frza53yj8s5x54019azsj2omhhx9lv1bp5jrc2mgne5vsqza9vfb9gw490zamsm5vz0669iw8xb1383gri7r0x0bk0\",\n    \"countryISO2\" : \"geuz5gpo9pt8jmh1ksbeg2037kftfhrqeg760mtxh1sxk8wgguq7lu0pat6b9bkbrva0g5zq3jxpcec7zw94qe3xjirjwqt545jef7ompda2zgab3mdigv9r3xw\",\n    \"countryName\" : \"Georgianne Franecki\",\n    \"countryNumCode\" : \"3yqcxgonsdd9gijmjngy3ohz7y2hxb81w8td8ec8stpyuhestnniczgun82h1lq51zu1tolm8qqqzq\",\n    \"countryISO3\" : \"nwwfm9bvct2u4p5r72uxhtwslbq1jri53zgiogp6untl7k0lod21sw7zhqub2x2eaiak88d2q8ebjm3uz029duyupf2rpsvjq6do8\",\n    \"region\" : \"ec0klf7t2z320pkf7xu29vuspvo2lqjg4lfllfe6deb9tvfmhfhtx7unnw604caag8r3hrflsukakyecg6jrjweevf39bln5m4z6evclpmqdg2t06b24chfpjajry1tsqg7eocq3az9aybwzsyo9njkb0f3\",\n    \"topregion\" : \"s953p5or6rskwv01fi4t8z113arrrc7uk466zl1q8k1re62vxvwapieas1uu4r2amxxp3n7c563zrrfubxe2h4uixe1tmzqayygq9a22ljrx03aqxxzhqldrrgv05ke3alo99zb0m01qjh8n2x73aajumxa71syw1rtgb1wxj5ppx9wsf2y97al65bwif\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a23f0ff-9cda-4f4a-a962-7b96c9cf32a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.800544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions",
          "schema" : {
            "properties" : {
              "countriesAndRegions" : {
                "description" : "List of countries and regions",
                "items" : {
                  "$ref" : "#/components/schemas/RegionISO"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "RegionOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "a64ef622-5400-42f4-909c-437a91d332a0",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a64ef622-5400-42f4-909c-437a91d332a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.799973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "4df09bd5-b17d-4ee0-aadc-2b9a58cdc65e",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4df09bd5-b17d-4ee0-aadc-2b9a58cdc65e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.799957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "bf9829ec-40a0-4292-ab11-ad995e0501ac",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bf9829ec-40a0-4292-ab11-ad995e0501ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.79994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "c6111735-4a47-413b-a720-daca357837c4",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 54.05223327670099,\n    \"firstLastName\" : {\n      \"firstName\" : \"Camilla\",\n      \"lastName\" : \"Gislason\",\n      \"id\" : \"2m43\",\n      \"script\" : \"0fznyycxagpe3vrjhh8kikay0f8s8ncvl6xl5ahxoa8i6as2roo5fc3bh8de5ld5xvnzdfnwv0472fy8k89l3mucoflwiyhtbmdti8g68w8a5hp2vnc3a37jc\"\n    },\n    \"name\" : \"Miss Jade Satterfield\",\n    \"id\" : \"iup5\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"b7822tp6kzpihira63fo3roo4xts30khs5qlt9kgdrqld8i9jg0wv2ehnq7tu6oodnjm2ts179v038h9oo69i0bw8dfs1s2ms4vgxl3esn041t2y7d2rpgk5bk3h9u8nfuj0t2wcqfa01nuof9rv0jtfc9opqvnm10a8n\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 44.043249007351214,\n    \"firstLastName\" : {\n      \"firstName\" : \"Taryn\",\n      \"lastName\" : \"Gleason\",\n      \"id\" : \"ye7w\",\n      \"script\" : \"1qsmkgsfo1ufbuuoud9sa0kuc5g4ahligfpelkwykep6aeoj4rkt6h5jbmuvts50q0vxhrzl6sjctxyy\"\n    },\n    \"name\" : \"Kristine Wunsch\",\n    \"id\" : \"wx90\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"mjsxc3fkjslfdt3q5xmqsadd9mmz8m89q54mpkqjc54lb9jaxqlltvfnr3ym8m5pyq8vnu05huzbre2721ihmik2fu1ohi3wh0mfwczflwbi91jpsjwu70m061nsaha6rqhy9zs9zwnkjqc3nmbdzhbjaubz489ul\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 30.34157150123401,\n    \"firstLastName\" : {\n      \"firstName\" : \"Karon\",\n      \"lastName\" : \"Kiehn\",\n      \"id\" : \"3rch\",\n      \"script\" : \"3dq3y6xhv1b6ortllw2zohm7pd8xez2u2x12lp62g0thztg6q7ohyrujtdtswam5qoyqmqoqcyphxu4kbzk1zpa9hfab7m9ehq38hlnfetvke53ew87xt9ddebmzkld2wzxamxj67sb9u\"\n    },\n    \"name\" : \"Lynna Rath II\",\n    \"id\" : \"0f63\",\n    \"nameParserTypeAlt\" : \"FNxLN2\",\n    \"script\" : \"h09pqkyjf98zg9zeqss5hqbvd7uljl3hh4tv6a7bja7jzyvgmmrovifz0sy0v9sc7twljdfornq9p7msj4b65ievddkar3hjfgmbq7br620k1jrnxt0uxa5pgihg4636e4rbpvp7x3zubxvk7a1a96bfson6ly1t8\",\n    \"nameParserType\" : \"LN1FN1\"\n  }, {\n    \"score\" : 52.09192812811034,\n    \"firstLastName\" : {\n      \"firstName\" : \"Julee\",\n      \"lastName\" : \"Crooks\",\n      \"id\" : \"m7p2\",\n      \"script\" : \"tmvltpx8bui776ocpoi22g5qbox9dw0n7nlrxc72xvxyq6qthk6mhhbvjne\"\n    },\n    \"name\" : \"Mai Padberg\",\n    \"id\" : \"ea1p\",\n    \"nameParserTypeAlt\" : \"FN2LN2\",\n    \"script\" : \"m0h14bxtklikvmrpbckidqem8036459eseaz7zuudogilugzb82nct86f\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 32.9634624474558,\n    \"firstLastName\" : {\n      \"firstName\" : \"Shanell\",\n      \"lastName\" : \"Rice\",\n      \"id\" : \"sro4\",\n      \"script\" : \"0wlwpqgw1ax0wk2k5sm50znahurdyplfvggx7hvu03pewohg7bj4ko2fzpdci9xlsvcjjmkv2crbr6j1sf7u51teil4wmepxmmpbe8l1qin\"\n    },\n    \"name\" : \"Trisha Gorczany\",\n    \"id\" : \"mtcm\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"f2dgwnf27q61no52ed2lw\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 49.55476606647402,\n    \"firstLastName\" : {\n      \"firstName\" : \"Tuan\",\n      \"lastName\" : \"Blanda\",\n      \"id\" : \"779m\",\n      \"script\" : \"mfxm701uzzdarlpgxw2kd5itaj5isxnfew8zlqe783yfuyaxmubf5wbt0s\"\n    },\n    \"name\" : \"Jacquelyn Oberbrunner\",\n    \"id\" : \"7ygs\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"ltnoo16pvg007zmlzbef8s3hno7pztjxur7qne0qysbh\",\n    \"nameParserType\" : \"FNxLNx\"\n  }, {\n    \"score\" : 43.62209908812629,\n    \"firstLastName\" : {\n      \"firstName\" : \"Denver\",\n      \"lastName\" : \"Franecki\",\n      \"id\" : \"j6fa\",\n      \"script\" : \"9by882l458jwqlgqk9hutr1f9l03rdf2c5vvuv1bqvnz03g44ymyrwlmtmpy11xv3eahoeykxfum3jcizfz7nd9xndbefa7tq9ru0pem1u4gl531kxctz11kap1s1jfrir1usyc1acvvsl93bosv9wat7bg0r7oi9bo8603yxzal9s5b5v4b\"\n    },\n    \"name\" : \"Penni Borer\",\n    \"id\" : \"c10v\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"ef706onztx34eytec75pxhdh8fxdhpi513k7e4iaex3cw57yt8n2iwi9akxrqkprcmcyqny4h9j\",\n    \"nameParserType\" : \"LNxFN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6111735-4a47-413b-a720-daca357837c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.799898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "c4587221-bb77-4171-8a46-89862bad7bfa",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Yung+Legros",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c4587221-bb77-4171-8a46-89862bad7bfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.797887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "5fd3ab8e-4634-4a36-b579-bade3bcbb9f3",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Delmar+Rice+MD",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5fd3ab8e-4634-4a36-b579-bade3bcbb9f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.797834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "8ea98bd8-47c4-456b-8ce4-c49e4e678790",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Harriett+Barrows",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 28.745834522342573,\n  \"firstLastName\" : {\n    \"firstName\" : \"Donte\",\n    \"lastName\" : \"Baumbach\",\n    \"id\" : \"l147\",\n    \"script\" : \"dacn11x3uor0qdt9tzzqjz61wn1fplarpjhuu5s57\"\n  },\n  \"name\" : \"Celinda Leffler\",\n  \"id\" : \"6r85\",\n  \"nameParserTypeAlt\" : \"FN2LNx\",\n  \"script\" : \"8gqb9dc55jrjk3grml3wjiad4k397jsr9lo7h6grqyw9jjbdfrrzkzez1nf57b0rw1vqzlpmw2bzxbhpc3ur39pk2hh23o80bvqnenei9bvwd7g8jiuzz0ys2bzlwwb9woyk34pfv6w543tsent82sqrzkt5itbzuyund8wa4umyhr0jwnzqtldadkhjgw6gg\",\n  \"nameParserType\" : \"FN2LN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ea98bd8-47c4-456b-8ce4-c49e4e678790",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.797756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "dca99985-88be-4638-a9dd-594c31a68880",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Inger/Huel/1-888-346-9223+x9537/jsachj900001badaosk5eizoy0tohwg46mropvt5zuuuh0ba1kg5n3616schmed5yhb1wkq5giui7ovl891lhpaz1sc0p9motzpcq6kqm7f885e4le3wwfs5/at4a10",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "dca99985-88be-4638-a9dd-594c31a68880",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.797264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "54332a92-5fe5-408c-8757-2b5d89e6e8e9",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Andrew/Torp/1-395-677-8078+x30919/aq1224lagde/n5x61fvxupw4628zsn995en7hua6zfeskf0fkvdaz685jblk3dt32byx2ej3mkqhr3iwqjfbhdgrl",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "54332a92-5fe5-408c-8757-2b5d89e6e8e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.797168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "c22f715e-3b91-4b32-8603-28cd88491792",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Jacob/Ratke/433.549.7575/rvpgfwwqs1nouuzgiy/2i9gr17s74btup2bzaaoictulfaq5j4mdgjz1urckvj4kbfmvz4w4yxt8obpow9bgplp4l0gffe7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Considine\",\n  \"originCountryIso2Alt\" : \"uylus1em9vl31nsuthhlvqtnrhx\",\n  \"phoneCountryIso2Verified\" : \"p5hz07fjxwxvxotussbzpjjcklxustbn4yxevg003apojq7a94w37jsxi4nfdsttc6dukgfpogb6fniq114v8ipr35qbior5dlif007iwejeyucbxmzmqxx8a0ggg3dj0fkldygmuvl1pb8cg5l003kd8heik408dja4saa3atwtijqq7992e1rp40\",\n  \"verified\" : true,\n  \"script\" : \"kmdqbiup9s1epj1r6iubn175hqw16z5xvz2txrkfhsxf6vre59i6j5o6jngw68b1oozh949s1etp7iil4j948irhq7ubofc8rvc58zf9h9u9rhit4no8qhose7j9osouoloreq49\",\n  \"firstName\" : \"Isaiah\",\n  \"score\" : 88.8770011047709,\n  \"phoneNumber\" : \"058.914.0667\",\n  \"phoneCountryCode\" : 225935442,\n  \"originCountryIso2\" : \"1nd6c4p4yl0vpjba91lkwcokm6cgoiwsjdk726tg5o8rciy8weg549o70sfiv1nhcbkqxjugnz4n1d89rpcqm8bn\",\n  \"phoneCountryIso2\" : \"m6mspscjifi327\",\n  \"phoneCountryIso2Alt\" : \"bk8vf1km6rffpi4bah7tahb2bwo0m9f\",\n  \"countryIso2\" : \"2c7dvp3ddzzhqmy3hduye0ykaslfe95en0k1907lkrtq57b4moudautwsztny533lmhi0hh6bqr1nk2u7y72mg2kkqayy7oovdc0d9c1dsx2vronxgl5c987du697dqqjummyiklvrng5hr2gt8cyf8pknj0b8lr9\",\n  \"id\" : \"1v48\",\n  \"internationalPhoneNumberVerified\" : \"kmb\",\n  \"phoneCountryCodeAlt\" : 1027827407\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c22f715e-3b91-4b32-8603-28cd88491792",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.79706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "92c2482d-539d-4a40-8ab4-c852cb2cb0a2",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "92c2482d-539d-4a40-8ab4-c852cb2cb0a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.796588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "43db52d5-a88c-41ca-b479-629e68534acc",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "43db52d5-a88c-41ca-b479-629e68534acc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.796572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "69287d45-1290-40b4-a269-45cf622b2a73",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "69287d45-1290-40b4-a269-45cf622b2a73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.796556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "0a2e50d3-e763-44cc-85ce-7c17174071a4",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Rau\",\n    \"originCountryIso2Alt\" : \"3t1sfvj04a3zdd7pzoysw2sgmxknzkuvjdfni00c4h7ojeupr16guu3xvgx49\",\n    \"phoneCountryIso2Verified\" : \"kbbxu59n2d61a1qk1w2v6hltwa931sndioxlt19l2\",\n    \"verified\" : false,\n    \"script\" : \"6ltg4hwkavbqxh4xwlr2d8oz1x19n7pdhfsjso95fl3atpzac2dbtk9umqew5o7tcwyy6mvrpqp07dw9yszlyyggdeza904wag5hqgoa3wxnx51edsgf6qlpjbsjdu7kj8y9c2a2ij1s1fwpe11amzs1n3qgjs6fgn9m0swbt5365dcycvm\",\n    \"firstName\" : \"Kelley\",\n    \"score\" : 94.0283695829583,\n    \"phoneNumber\" : \"050-164-8820\",\n    \"phoneCountryCode\" : 1601245187,\n    \"originCountryIso2\" : \"0jk87ykk3wdteem4uyeaxmp1lo01m9lxn35bdcha0gwnp3j094863q5xp21a5yxcv1d0wzicdcowyellmwv\",\n    \"phoneCountryIso2\" : \"3o8qi1iud1zv0mx0nweab68ar2gt38wgtgrl2v5fsdt2e1siiwi69a7qmi824qxuu7liyg9z6y990jcs1cbiphprd5egte2ili6\",\n    \"phoneCountryIso2Alt\" : \"cj8cgkcubfel3iow1bjw8mezt11wmtfrejd1o50ysnzpu5dndil2w7v0x307ww3pjzu620kqc5ste0gdmk946mavvdxizxll58rln2s9ww6gekb8k4bgctcfa3h2kwv0qhucrkvbv01x57cgh\",\n    \"countryIso2\" : \"1vp55qkpq3x2x2047qqgasykymcuyw3aj6s0rl11ek43v7nfqzqgjxci62x8k88s7v9lv38baxuvepcm5de7ypod3ckzus5l2np4zwfdd1jmvfjwwcq3na\",\n    \"id\" : \"4g7z\",\n    \"internationalPhoneNumberVerified\" : \"4jt0nx3sj9i3jrjt7vb94xan99hkrn7ao7aikgyixlhoct92tg72nnsa2r16ubt7pgs8ywdypfwxr0semsj6a4s2ey87efb0vktmunsy2csrg5h7hc2sn87aqfa3aegk5ii9i7j85k4brk3234v7zh4rx\",\n    \"phoneCountryCodeAlt\" : 713652794\n  }, {\n    \"lastName\" : \"Klocko\",\n    \"originCountryIso2Alt\" : \"zb10z3sf3jbxvmo4tyfsywv25m5k3ho5jiaq692evefn1tee1b4pvumryq6w0anjpnqv7o36a4ztio89ah7idmmbo7yx6qoxwb1iej4jkp8ziy26anvgv15u75ogm6\",\n    \"phoneCountryIso2Verified\" : \"jlxufomhg5inajwgzxo14t55n\",\n    \"verified\" : false,\n    \"script\" : \"92klp4ixfjt1nqixla2v3thtyyvl5ii1lulphr6707u7l5v00h5qxaeudcz31ezrs5i3fbcobou7276sm92cfqqk6hr6f6xu\",\n    \"firstName\" : \"Ora\",\n    \"score\" : 71.17513753530102,\n    \"phoneNumber\" : \"876.736.1905 x23029\",\n    \"phoneCountryCode\" : 923620174,\n    \"originCountryIso2\" : \"5smqetiiuqwvg9gzogz6pzmsuzfxjsv8qvlebd7k6nzzo299xcsosq65gi6zcl16fmxv6xvo323y6aajr3szjpkuw6xnd3u53emnuv7nj3uorzgshlvx6fncq1sk62mhh6h1c2zw7hmwuzjlwy9fcws2ygvi49pr2sos3aacfhp8nqa\",\n    \"phoneCountryIso2\" : \"b5jj6axux3gu9cb\",\n    \"phoneCountryIso2Alt\" : \"e8h7f8gnqz3cfd0m2osa333gx9\",\n    \"countryIso2\" : \"ywbmmouailu9wlnbcckbx8plqa7rdr3teu5nunkuzhvgr1s879tmp0czzbw6d8e7zynhjquc9digwwe1qpp05b7iw5kwl4p\",\n    \"id\" : \"79mo\",\n    \"internationalPhoneNumberVerified\" : \"oio3zuo8o3yzleksb2aefzx2ug02weztbrlj790jaqrdy682mdrfrvoif2x5kmsdzp9iw6zk3kt2d7rhxn7tk27js81de3vuhgg8gk412ko3ogunv8k3st79uf3vggq60cgggdihnmzrg3b1wkequ0qr4ytjk6j85uma8700fn3r5akz\",\n    \"phoneCountryCodeAlt\" : 2052712662\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a2e50d3-e763-44cc-85ce-7c17174071a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.796529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "27fa9ce5-33ac-4eac-a892-0fd645c7c03f",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Hermelinda/Thiel/%28107%29+276-3191/dbhb14znbwhea5va1iytu2d8q5jfb9gc7vodaptokpsy6cx760he6fd5lmjguz1084cqv54ej09eljzfnuv1nfh6yk2pvo35yb1jltdnexofsrfngro5hkcrk2m8asi7vrncnc8dr1lt7kydx7c3vjwwyge1pnibl1fcbcgygr9r5p8jv7",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "27fa9ce5-33ac-4eac-a892-0fd645c7c03f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.795956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "efac9db0-8647-437a-9a2e-f8c671034241",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Bobette/Marquardt/%28935%29+487-6693/30yvcpq9tkkbfh757807tbxbb0vpplin99jnh195g9l92q1njjxjgwl8n7exxz8y5wot354law0xr3ol8f41qyrvwo9s5w40r2a8qbukzrk07b78tfipz9q4qmcikxy2d5ht14bssx6pgj2x7",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "efac9db0-8647-437a-9a2e-f8c671034241",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.795869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "2906f506-0e87-4397-959c-d3df821c6e35",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Hui/Steuber/1-884-859-5157/gswmj8tlt7s3g1u5e9i60rzfnaagg23wcde9vqj4rnj4p7qhbdi5hfqjico4b0dvjtlk",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Willms\",\n  \"originCountryIso2Alt\" : \"2434r2llm1600lapybpmu4rom1rg7u90oik408k6f22qwv02c7wlr7m6ce6jn00pfweyvpsdybrbu\",\n  \"phoneCountryIso2Verified\" : \"7ie6mk3kjrpy56zwtw20yr67lwwn9shsp2bl6f4q0\",\n  \"verified\" : true,\n  \"script\" : \"5kdr5kbelu96jav03tttueovllhnp0bt4ozjmkx9bklic1hocfyqodefbm6fqvcmoco9aczua0d0hymb378yvjzqkmdoomx4o8jdt4zsqiwdih4tlduy74rplxha\",\n  \"firstName\" : \"Pamula\",\n  \"score\" : 23.867036845579083,\n  \"phoneNumber\" : \"(228) 827-7321\",\n  \"phoneCountryCode\" : 387274617,\n  \"originCountryIso2\" : \"wa4s0l3m93zqde8zlybnlcolq5klyf9586qi7s6on3wrnrl9\",\n  \"phoneCountryIso2\" : \"h4u7yy04nrj8vlqmdrsufkd6qgsssuzl3yt0ryvssxvtiwytqd9cuenaomwl7zxogw9m5bt6cs1bjw3j7kwwfq9q32cie3dhq242vglt7rwjpqj74lp7bhsh35fbpfn9i7oe9d8dpf05ssbp8wouh9gs83lr76qv08wr06yjujt5tli2dse7p996p8e0sgv845s6bk\",\n  \"phoneCountryIso2Alt\" : \"wz4mxdmb3yn5kltcylqs77s9j85w2ev35unmxsru5bi0ij9v0vfcfx57jqga2842den2n28odj6fy2tjfjn12onyhlnoqwcwrd81d3865acvnsk4a2dc04u0htljiq5hoy1cknbl9w\",\n  \"countryIso2\" : \"djek0lyilz3pc4nwb0654smo9jplda5op8wa8pu9o0x4f2ow0scbwenk3wapfk2i7xjilqya0\",\n  \"id\" : \"7403\",\n  \"internationalPhoneNumberVerified\" : \"5pv1vkt10h7c1tj58t0hlxczkp7vaj5on054ls1xyd49z4i6l4mkvf7hebl8hq8t076kj2xpxu09k1r4ssr7fms8ro5lk7mdahi76d8t97l8a5szl2wi60v233k66k3o7jiqiz8de1mhphib81rg3ao1bsksfujrxwx4q\",\n  \"phoneCountryCodeAlt\" : 1933393430\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2906f506-0e87-4397-959c-d3df821c6e35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.795767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "4650adff-d64b-4355-a91e-1723f5ff84ed",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4650adff-d64b-4355-a91e-1723f5ff84ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.795292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "a84fb40e-fcba-4559-a28e-43b803ad7ea8",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a84fb40e-fcba-4559-a28e-43b803ad7ea8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.795276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "3fa51b57-fce8-4fd4-aeb0-d0358a52edaa",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3fa51b57-fce8-4fd4-aeb0-d0358a52edaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.795259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "2a184aa0-ecd3-4a9c-a6f3-c9d1146cac8d",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Mraz\",\n    \"originCountryIso2Alt\" : \"0ajfhc9kxsk4uh\",\n    \"phoneCountryIso2Verified\" : \"xyftuaowgkr9f45dvvtucxupf6gj5aj2mdvg092i6hdiwenna9vadg0nugeyf9xc383uyhjopo18o34mf\",\n    \"verified\" : true,\n    \"script\" : \"let1uqn181slpkr70k4ba7992i3vl0hz4c3ht0e9\",\n    \"firstName\" : \"Thanh\",\n    \"score\" : 80.51874672026182,\n    \"phoneNumber\" : \"836-727-2464 x6516\",\n    \"phoneCountryCode\" : 501825981,\n    \"originCountryIso2\" : \"xdc8m4wkjvck85xpn916thmq8yrghodeb1tfprtjgp8inb0cem38wveclh7d7eptnvehsg1mxfl0xtj5x30olarp3q7p9mnsd8ork90ltv8ad76y\",\n    \"phoneCountryIso2\" : \"9e9jgrtulupnvndze2dgr366qyc4y3gax4z9ssrmtdsosb8gna1jf9wrp0g\",\n    \"phoneCountryIso2Alt\" : \"7gb2w6kpulaemuc3fo6eev5lthwyqbhnf8tu4h3rxtshakojx7qwmrhn7k35rkvqacfjqbxcnj65apx3k2nkvzrz3e5sif0ceqwdvzcclip7tv0vofts9hklvr6urs94d7xkfbvoerwn0xfgvmdfw428itdhy8wmuaa4ez5rmqwlzzgpbtbh0t6cxeer6\",\n    \"countryIso2\" : \"t4b64198pr7r3seil2gud2l2hhtgoym2attey67k1iiac2jvq5nt2ozowj4fqnn5\",\n    \"id\" : \"3z2g\",\n    \"internationalPhoneNumberVerified\" : \"41y0sp6proirutuyfnoj3hz4m15vdbgta6l287th89tt16e4ykvdnq7paibivfw7ejd99akcicnbb5r51s1rm1pexf1fpn6oxme\",\n    \"phoneCountryCodeAlt\" : 903060385\n  }, {\n    \"lastName\" : \"Casper\",\n    \"originCountryIso2Alt\" : \"4w35pk0rsu6ojd0p2aansonqsakqgmazfikrxonv9f8e8q0rt6bem0ewwzvs7krldpv5h4c3eu856a3qd00o9sdmrohxhn4xr3ejaay9s5v2tm4sawjskd8tdo8uv5ua2armb7iyiavg66b6ubarw75advr2gkk6fd99ovfaecljcle4b3ccjp\",\n    \"phoneCountryIso2Verified\" : \"84s\",\n    \"verified\" : false,\n    \"script\" : \"uuftpyawhvl6g4uy6fzqk9ehetryt862lo8sn6c8rb1t7jm1vubfc759s9507euci8k16skcfhy3u1q4cz55udzpnaishxfgcwk0crq221wlqq5zock71farmv2lt41j0i3v6xz4vs\",\n    \"firstName\" : \"Tonia\",\n    \"score\" : 18.439085716012816,\n    \"phoneNumber\" : \"1-388-793-8251 x9007\",\n    \"phoneCountryCode\" : 87087452,\n    \"originCountryIso2\" : \"vuipbo7zsi9g80psfrznh0p3a5sqjk8h07p06aige86vblikt1yiz3kz0d7t2b59ob95jvdr8mbtcqegggw1ov7fg2pybn\",\n    \"phoneCountryIso2\" : \"zmr04c2hgj8ctnwcw8g7nmm9imn1zckv8dv4prrj7gmrpgt3lj1efqh2nrr6wc11mpif5mmg3z6wd70lhkzo0dvrfcp0gf7b9tfbzxtudqbcc4t1zop6mvl4fv5nhu8bn9g8xyif4fvac20xoe4k0vuxq3eiwpyojm2r6j4apmyzruxcbe8toj\",\n    \"phoneCountryIso2Alt\" : \"zktt8e4fii9yr8rz792yzdc5l8187gk92qfg52mgy8dxlv99vuxlygu\",\n    \"countryIso2\" : \"h6ilh0e47fzbkun6r1e9x5g6hbb3z1x9gmttio3g9of2wxenzw4fnx1gt7mzdb5zpneulo6a2vyrc543n88v5ymy136dzv6vw9shf8u9ipf7bacrmu18spvdyzp58uj7hl\",\n    \"id\" : \"78q7\",\n    \"internationalPhoneNumberVerified\" : \"vaqse4yct093sg9dws3o7uv2obvimo634qvm8t33xtsay77r4g0i381nuklj5tk4plp6npfylm5hebhepfoeamol5aeivgfrn243mkqxwv0\",\n    \"phoneCountryCodeAlt\" : 1146530525\n  }, {\n    \"lastName\" : \"MacGyver\",\n    \"originCountryIso2Alt\" : \"6ggyd7ztwgdhzl1bb5ddckzdg2pcg261czf3tq6e0\",\n    \"phoneCountryIso2Verified\" : \"6l2h0xsid9woqwxa4xkqf\",\n    \"verified\" : false,\n    \"script\" : \"ceeftqacxckxvpaq3e336xv927dylwxo3ntis0rw830m5a5yvffbclmxjdnqf2umwibkinp6vmdccu1c0ph9b1k11a3xvozqtchebwzuu17m68o51lk0rwgaq17vdnja82j0krubx5i\",\n    \"firstName\" : \"Maryjane\",\n    \"score\" : 47.22787740895688,\n    \"phoneNumber\" : \"(422) 096-3459 x52738\",\n    \"phoneCountryCode\" : 1877964733,\n    \"originCountryIso2\" : \"d4ip64ajqr3puh83nncaoqawo6whlgch9x8nn79lq40h\",\n    \"phoneCountryIso2\" : \"5x0itobppoovqkkx6h8fencq2kncudf2bnhtpqmhczr3lbzg57r9e0xql4ujbnvdfvng2fspronwy29okygqc20gq0g6tsd8iudzbrkiehh1h9whwmpjaskonq2uamp1n7tdupg\",\n    \"phoneCountryIso2Alt\" : \"ppcj7rq6292bk97614x1n9ltmh67bvl65clpo9z66nokhkhe88f8medvz3rj8ux8fyx716ym1smbvgirhx1uto0zgoe5zj5a9r3l1zmzytby0geatu916g72hfbndfyj4vhfwjgtwup\",\n    \"countryIso2\" : \"xogkpdsxp1vnj8b9omnq\",\n    \"id\" : \"z80u\",\n    \"internationalPhoneNumberVerified\" : \"3z25iq83jk\",\n    \"phoneCountryCodeAlt\" : 1791881565\n  }, {\n    \"lastName\" : \"Hartmann\",\n    \"originCountryIso2Alt\" : \"4xgtjwp1ye6sea1egb4ab8oskhigi2id4qa9wwu2dyra5k9gl16mv9osj6avel8bf5xbfsqiltanjx86gfmeu88ko15ie6amabzesup4pod6\",\n    \"phoneCountryIso2Verified\" : \"pdxec12errxp9rcbf8y36yamhswr0i3j19v02glz4o\",\n    \"verified\" : true,\n    \"script\" : \"3tjxya96kzhgmo78f9cghstyndxten9p7in2vytz2kjs1rbvjzykg6gl1j2qcbk8z6lx883t0q08rlq8teglpvyk6to5ij0lg04g2aiodz7kq9k4pd265w\",\n    \"firstName\" : \"Gary\",\n    \"score\" : 79.2051620926986,\n    \"phoneNumber\" : \"988.048.0427 x599\",\n    \"phoneCountryCode\" : 180707740,\n    \"originCountryIso2\" : \"y4mxyuhufhw8na8eev3t6w21s4wmcfq73sxzwcbmo63jful88o945mjtx3spfbpagkrbkbe7yv2hzc3\",\n    \"phoneCountryIso2\" : \"t0nh7e1qam6aiye7zrwtxjdzuvlni95q5swvfgwiq2kd2ajrt5sxnqljzf4b4kk4d8dawli2nvr371h08hetbdvoky0sygq6xk8rl7lr\",\n    \"phoneCountryIso2Alt\" : \"hpqts9su4b6ims8jc6scbax6tyzwcyeg5v9j1pe2a78sprsnsjk37ehud0dfx9r2ynrwlrac91ipu0qsnzqe9z6o53tjh1xvhx2753guo9txzj8x6zxqkf7imlgdhyk1dzjtxowmk0tthqt6cuaryn82\",\n    \"countryIso2\" : \"jmf7fm6uls0yk41603iz1q41fqjqriclx235y00pkfpk4g968jklf6gaqbkspxv8bxcoklyhhsngpwioa65i6wlfe29raymbn9jsxg7k4d8a3b7t0lerj14gm27y6k0vcw6qf9xcht3fpuuth0eua30o2ztpkscsa9shwdql10\",\n    \"id\" : \"6mh7\",\n    \"internationalPhoneNumberVerified\" : \"bqrwwk4v4wc93d0oofr4hasa20gpvsxqrcs62m4l4vslwcjyrrsnxnoh97spidwsniep9mtxc7e7qwcng1wpn40gzql5tjk3mdhjr18hxli16fw1j9jebavtsv54yg50lbdi2v8fv4o6mh2yjjpgm4lv882yz9uywe3yyka9l08wwv3b9z2m7rb128msvljrrxle9nxd\",\n    \"phoneCountryCodeAlt\" : 1023312307\n  }, {\n    \"lastName\" : \"Rutherford\",\n    \"originCountryIso2Alt\" : \"956ftd8306w3lsti6x9cvv14hhucxlqh9z5594rpodv5ivjva0bi1pctxs5w550oy5ns7yb3iebsqtqce22row9s37yrbr652n5fojbc44nxywnev7r3fw5cuu\",\n    \"phoneCountryIso2Verified\" : \"sh39cjijf6drlbo156v6byazri2dokfqo2atk3kc0fgzejytd4dru901y5m62zwwoufsv1vszreq69urrdj92n51ssj1he49gr364h6x2\",\n    \"verified\" : true,\n    \"script\" : \"373gqa04kly5dhqq1vs4ffetnhsnhzoigy4qo9b2scohtzzv097qv90s4fmct8i089u16tkmr8g03bz3gaw3lwm26\",\n    \"firstName\" : \"Mario\",\n    \"score\" : 22.018242010095523,\n    \"phoneNumber\" : \"360.518.1303 x73457\",\n    \"phoneCountryCode\" : 1068306274,\n    \"originCountryIso2\" : \"ufumbak92fi8m6o0ebzhm166virwkjz9xfh8d2hnxlvgqcoepldd5godqkt4ui8igzwfulfwsbfq8ib81de8m38t35ukkatlzgoa8ivs\",\n    \"phoneCountryIso2\" : \"tzr4n21ab61o6t1yne98d3cwvq0plqz54vwfxpl7invzocgejrqvd18xogyemeirtvpvdc241it373lfz0oaasebm92zepwf5cyozda8bvseh2i8j3o3kpyq1ytwgeaajiamxerwwdgqbm41wt1j621jxae1j5mzv9udpdsjcp808ifjt9kuyt55i2qi4uhzao9to0\",\n    \"phoneCountryIso2Alt\" : \"l3sc78zrlvsetq43ziczuc31msk48wnglhts5mft5x1350r73xhr1jlxa1in0tt4furqq2pkmnbmjohzghxf41nrnhjq6drmmdd11f4indsfhf5sfu\",\n    \"countryIso2\" : \"7tf2nwj10td6n7jiawnczlybrrttcr\",\n    \"id\" : \"2hxe\",\n    \"internationalPhoneNumberVerified\" : \"oi23gig3ck2ua0zpt7vkpciig4wq0ji4444fro2kkeankgk2aigvdrlz9efx0hofgm9t1sc951iw4m58yzfhkxaxeapg4159gradgixuugur5s7fgl7bl0dy6thkfxp254qug2ebxsa1jcdv3d4xcau0hizlir0z1cl1ovnk133prj90xauuuo09z2ruw1ha1fz\",\n    \"phoneCountryCodeAlt\" : 1021996247\n  }, {\n    \"lastName\" : \"Mann\",\n    \"originCountryIso2Alt\" : \"bswoq1jwgdkmvx05b3q9whquudjjm4r8vyecm74y6kkor2m7acv2asg1a3dbri5f1m4ojw0soaxzh6sq1pf2f8vrvrr9ou56e8zkl806i00y6imxwmaqvh8iun8ipkfwdduvjba8jll68ux28r3l9veoed5l9ffgvg25f0kabtbmcins04\",\n    \"phoneCountryIso2Verified\" : \"t4zuxceh48yvsqkec7lz3glmu9wl7b7qew41xog7ozpx6i4gk09m3ba7qjirmnfrli4ae90lng8zr3cpbs2mj7s7yyf5eel8qavlmzl8phowje9zzxkqk3ba3aqq3i5pp4p7\",\n    \"verified\" : true,\n    \"script\" : \"tofjapqaok1boda2k\",\n    \"firstName\" : \"Terence\",\n    \"score\" : 23.60099727211261,\n    \"phoneNumber\" : \"1-294-870-1430 x69376\",\n    \"phoneCountryCode\" : 375526588,\n    \"originCountryIso2\" : \"jllaqho6jpyvrwd4mxp\",\n    \"phoneCountryIso2\" : \"dcgfce6kqzc247ns97mmw62bqh3dz0tyki91nbgaapmf3stmt2hgx34f4v3os7crbz2w7lf8oixtcap381e05jl7ed2yi6hhatobwwe0r6pgr6lgdkcbg1fovrrzfk6aaxg2antbwo5sfzrdh74ci60q0frnk91sa7hx5acouiqaap\",\n    \"phoneCountryIso2Alt\" : \"4jsr10fp082zgz0ee6eb7sug6acbwu7oozphnu1s4mq6ahxc2k8rx2th3iuyl2y\",\n    \"countryIso2\" : \"s3v73jxnqrfpkqz5nnwuemo2jg9npj0qujecceefyqfniorexmmnbiqaxrna5ub75djeh4xsbdsn0dx0qhxegsjlnfjnb\",\n    \"id\" : \"ze58\",\n    \"internationalPhoneNumberVerified\" : \"3z55d3mvhu56d93bbarcixq25sp9vmqony0bep5lbdfcre1xkctqwzbqaznb1vs3w0x534ioxu0iz2oz4sid5tfc16rfihl9gcsjktyzd0re7vl37fwrk95dbcbizzebp4sl667mvwamh6ccnth1xx2ovyl4rpz4o8fikp9qgxzf3c7qm5iygb1hf4vddnn\",\n    \"phoneCountryCodeAlt\" : 106890258\n  }, {\n    \"lastName\" : \"Jenkins\",\n    \"originCountryIso2Alt\" : \"csgmdjb81ia1rj5qlx9dvbpnhb77nc4n0k3zdvbb79cqfmjljs9de19e2ofly3iwyn79jsoegwfhfval2cxjx7gu4ifm2rxwe1vxbfikvysy\",\n    \"phoneCountryIso2Verified\" : \"5a00qzm5ss704d0hjbqjci3k0jlyq94b4gch719gl6qu6rpue7toax4\",\n    \"verified\" : false,\n    \"script\" : \"byubxho2xct20qjueujrpxn43zfcppil2t4d8pm0lnuw56u58f\",\n    \"firstName\" : \"Donna\",\n    \"score\" : 84.3282147348417,\n    \"phoneNumber\" : \"902-778-7774 x490\",\n    \"phoneCountryCode\" : 1139796342,\n    \"originCountryIso2\" : \"da1rykwgf\",\n    \"phoneCountryIso2\" : \"bkojjyu6y9vyl5yewovnrh071w1uqxo9orv43lgnedcqe0pb1mph3a73l91hg017e5p5p9m3f4hjhc5457tmrtd8dv0l6nd3dcsqrhh6m9qpiea4bx2gdqd9oatnn905n9ufedj\",\n    \"phoneCountryIso2Alt\" : \"mnubehhlrf16gsqdh2y7i3z5yl8sz68s9jndebe4435rfkolrlep9nutujtu47636d4gthdqc6s8ppdlsfpl9kadnwes02f8d8bu2fxa8c8be7hbeggitc9ey3z498id203gyt04i7fp46vp703xmd4ixpt63968aygldv8sv6cxcilplkwaj\",\n    \"countryIso2\" : \"zahhwy6kznqlhlqqoe7fhxah5cz2pzj9jsxrf4hd7c9e0xs6lqbth7i15ndqwwdo8kb56wge07urvwvux6ovum9j0scdk332gdwtmywunm3gl70yi6x7n5re2m0x9f8qcsmddvcdyj0tb93zaeqzhpjr385w4wlds67ny\",\n    \"id\" : \"8rhn\",\n    \"internationalPhoneNumberVerified\" : \"gc0nkknoi081lvbnn0y6jw4ol7kbb77rnh6dus69nkn0qokv5xp81rnbqdloswo021octein98el5zy9562yx1ksyp4y57sgcd96c2llh5i09ed9fpg3kcawivlc1jq77kpowgwn5ax7i40pg2k8e6va4o4rxn8dm7p5c075rk1sakxqubc96hppe4q3cxknhp\",\n    \"phoneCountryCodeAlt\" : 1550582280\n  }, {\n    \"lastName\" : \"Rowe\",\n    \"originCountryIso2Alt\" : \"pekggf0azjqnwyky0rqfflccc836xsq4ka98n0fgmlg9ra5mcwcw509pl2s8n6mgqkl8pqf3i0rw5p0ypxwz17pv0efwn3pgj6e7bi4wp23vkvsd3cabperwg4xzuu76i666gkpjc1o68ju6dgihrk09zcis6x9s163scgmv6oeq3ihi9tggqmkjvru8iljn\",\n    \"phoneCountryIso2Verified\" : \"4xcsbp7abphxwykxecajsrlp39yngce7nldqlue39qdsre1554x9gg6vn6up3posz9o5ndm8dk3ef1hm425dd9688\",\n    \"verified\" : false,\n    \"script\" : \"71wq0phsmuxf8ju5cg7fofxio0r6r01pa9i3foxxwgq5qbnapn99ifqgwrciq7j9185s6qn032\",\n    \"firstName\" : \"Patricia\",\n    \"score\" : 87.70201973527367,\n    \"phoneNumber\" : \"(948) 147-4295 x255\",\n    \"phoneCountryCode\" : 727919637,\n    \"originCountryIso2\" : \"nfqnlibbu4egywxj2amm0biswq2ftsh5n6dz7p5z6baycftcbhzxwiuo9stqmzwo3ri9qdukjx53fey2fyefic3vmdzt1ali7839tynl4keu434lx0ttretrqfi5wblfspb6h2lufciwborx1k7vzty2po8ez87z8tuhloycfkj0bbyn25p8pbg7z8pz2f53\",\n    \"phoneCountryIso2\" : \"i2rms2r77okaeykscsuunqlz7typ9zfqd3xbtnny\",\n    \"phoneCountryIso2Alt\" : \"ih5n3mkaouemg9jgoyrlytkr7lz6aawhm5psnvqvs48vu81d1td9up7gr091yy9qld9ardfhapgw1mz8s4tqixa3fn7ioec3tf219s\",\n    \"countryIso2\" : \"iapt\",\n    \"id\" : \"9n1e\",\n    \"internationalPhoneNumberVerified\" : \"rvqftcw5n9xx25qlxjcq443g6wluuh2me47zbrnx4cme5jhaflb6fxcz1tbtxihbh91tk2\",\n    \"phoneCountryCodeAlt\" : 1176433422\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a184aa0-ecd3-4a9c-a6f3-c9d1146cac8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.795219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "7b000c6d-8565-40b3-b2bc-1199831420c1",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Bret/Stracke/%28794%29+948-0600+x914",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7b000c6d-8565-40b3-b2bc-1199831420c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.793068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "5f310699-5822-4a1e-9860-c22b630e5e63",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Betsey/Johnston/%28029%29+636-5017",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5f310699-5822-4a1e-9860-c22b630e5e63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.792993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "17384479-6aba-4972-9471-c3b71a72935f",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Emery/Schaefer/647.487.2726",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Sanford\",\n  \"originCountryIso2Alt\" : \"my0iv6tdk074l9mi0jfsso40aidzafngb43rh58jzdvdr1zfum9kqlfs2m1swgxpu0q741o23tw4ybz9ph20qk\",\n  \"phoneCountryIso2Verified\" : \"t27jew2uzgl4av1moyrmxvpj2qn2vefnkqi3tji20e0wf6jle4v7kx5hji8eh2x2now1grymjx8wu8elr813teydg1neurhhujqdoeu3fscaza1f6arz0nxv4ixnvlp3i8uuov1cssgb965afxfz2cerv59dk93j\",\n  \"verified\" : false,\n  \"script\" : \"v5m82xm5vwga1aeddl17ml0alo6z1242sx035ahdlw41o2lendfyk0gqe3s3i0hjjgyuq3y5uvdy4bpgnhhf3cjg7c9d1knbiy7hsj5mc2awszx8a29qr130wrff369f2bft0jef4qz79gz90jqnxg6ot7ckzmcanvag\",\n  \"firstName\" : \"Joe\",\n  \"score\" : 87.4876596478215,\n  \"phoneNumber\" : \"762.916.5563\",\n  \"phoneCountryCode\" : 39121053,\n  \"originCountryIso2\" : \"iho0ycu2r45dakoebp5ysxgqdit04cz5jze80aeplgarj10plrdr6wptfn50m\",\n  \"phoneCountryIso2\" : \"v1klpbjz0cv6plhbddeb1hzk2r83es9pl9n5d1ik1un16xaswbemoeg2om642qwrqr2wsjdl5uosrrvzribugvpgiye9okggoj35dbnsrytarm5c6px6zuxg970kz20tper1s70fpxx763vzo0kyf\",\n  \"phoneCountryIso2Alt\" : \"4xppzn06rhwgwl1xgq4qme3mdhu5to9qypvze69n29pjtwbif2x2gucthbe4eyzsbdp2dd71k3rs2ff5zt9ytl0z3j7x1gidrkgo8pm8n4ew8sd2h4gm36nbkf3motcmrcvo6c2uakwfjpw4wft2zih93nukhpm6yyf50cntyn25jgan0p9u0j224h1nw\",\n  \"countryIso2\" : \"cdeohrmkfmcoimrqvyvw0kjyi1ty8320x7tdnra8ftx0tisefnue221k6humonup275uign6g36tisvlfsyrjupbx6at7bgfsqfzy0knf4dkhbrzk4w1bhof07cffyev7mmwz61izfcvhfc1sdwa3ahzbiddy1rhuko2tb70068w8dqzfxeh1lw8tm5udfsc\",\n  \"id\" : \"67mm\",\n  \"internationalPhoneNumberVerified\" : \"4etojit9wmhu00jf2yt4xkohgza2yxqlxq5kuz8fr5py6e88616w7ontjjs14z72e5cx1u7x8gqphzphthdrcfve2u08djiizwig5ne2ig3yx6vs2bonff59wgbda0sl46wpp6gg1g8if1ip42lylex7\",\n  \"phoneCountryCodeAlt\" : 706525468\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17384479-6aba-4972-9471-c3b71a72935f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.792894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "b9fb4341-d7fc-4210-810a-ab6648965c29",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b9fb4341-d7fc-4210-810a-ab6648965c29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.792148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "4bbf228e-0d02-49ff-aca0-db2254140622",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4bbf228e-0d02-49ff-aca0-db2254140622",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.792132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "bc12f445-02f2-42c6-b4ab-48413548d19c",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bc12f445-02f2-42c6-b4ab-48413548d19c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.792115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "5500b614-8f3d-45e4-94e3-180d2ca5e2b3",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 11.24551434643215,\n    \"firstLastName\" : {\n      \"firstName\" : \"YYYYi\",\n      \"lastName\" : \"Wolf\",\n      \"id\" : \"hf77\",\n      \"script\" : \"zpl4s8oechfp5um\"\n    },\n    \"name\" : \"Angla Crist\",\n    \"id\" : \"mcj5\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"4ezrq88x4kb7cqz7dz1rvdmkgfs9n63igywa680npc2tpmuyd1hhoe6xh80h9d7yf51le9d7bcyzqlmkxpb975k9s867ippr9jyzls\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 12.669485038687068,\n    \"firstLastName\" : {\n      \"firstName\" : \"Carlee\",\n      \"lastName\" : \"Rolfson\",\n      \"id\" : \"qu1c\",\n      \"script\" : \"4iuedznpqmbwqmwn1x896d3wsigakrfcunh81cw0oam3krnx0jlqdw9ouwe4vlwce\"\n    },\n    \"name\" : \"Mr. Moshe Nolan\",\n    \"id\" : \"3619\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"lfxcaegp5l4ldblkfllpf22ee7fv9avowcan2zkdcdk1xrmyua9x3jdavb418qderemyjguh8i4psgmly1n7bq7keqosbe3bxfx06eqdk4o91vswri5euw6z35u67hfuapwde14tw8d1pfhx19529dc4je3uwvzgaqflk0k9wsjyg5a2s6bbbnmfcqmty1spxslp8k\",\n    \"nameParserType\" : \"FNxLN1\"\n  }, {\n    \"score\" : 15.302034992674617,\n    \"firstLastName\" : {\n      \"firstName\" : \"Stacee\",\n      \"lastName\" : \"Reilly\",\n      \"id\" : \"cwg3\",\n      \"script\" : \"9asqwhqoalhif1giz2t3mhfmsah2wfb6cuv1buylc96mf8hbnc0gzwq319zk1x14y4a1wp4wa0rkuy974q0kggkbl8zbbgzuzngueunvc1rwoj7wegwekvt3\"\n    },\n    \"name\" : \"Elfriede Hettinger\",\n    \"id\" : \"65u3\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"zm3yihmy4ffp38gyylcly7p139kvgqaqowh4h8pgfuhsnc13yb99x6ikertkg8mt5nm457gsn72s8sj7kv7719r2k9sbbwny57hck4\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 40.92287717232427,\n    \"firstLastName\" : {\n      \"firstName\" : \"Frieda\",\n      \"lastName\" : \"Russel\",\n      \"id\" : \"019r\",\n      \"script\" : \"n5lwnrz806nblhz1fsu4si04m58nnwibvlfvaw8gkh7gnq6p7lec227hfgtox672s0iegs29vksphyijoojeddpd1h6z9tc91nogt10p6kab4gohhzf1phtdenqsnowto4i\"\n    },\n    \"name\" : \"Ms. Illa Pacocha\",\n    \"id\" : \"5dgt\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"ayu7qasahatx3s0z4eqempap8ws3omzmvt1yidi5p9o0od9gm5c6xmecp3t6tcf6jml01mctophw2ksbx67w6nw7gwajgqeqyjha8wnc3o2jsi9pkw0vvkdygs2rm1xn0j5r5lbl6khwujbetfkf2wg16t05pcg18mhoiavzpockgezqq39hyw6sqh6hr\",\n    \"nameParserType\" : \"FN1LN2\"\n  }, {\n    \"score\" : 48.296994262743866,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lorinda\",\n      \"lastName\" : \"Kris\",\n      \"id\" : \"h38z\",\n      \"script\" : \"62y05efhmcj8nd6ct13mpdy68fpoq2w2yz3vf6l53jk6llr42xsc1jpm7zv8hjbt59h41zg2oi04fsmi8wxq99y9b6a13h8zaee4m3\"\n    },\n    \"name\" : \"Miss Ferdinand Lynch\",\n    \"id\" : \"ir2n\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"ask7zi4le318l0chrymax5duknfs563790k1rcm1ooycdfi8odg0t2t8vm5584hc5mkwjmsv0vrvr5atjsoyuwnq1vgqtsu7qjup31anu213gj6uqr5alyussszjshrfo5azz840rz2a3pvt8egiy5ku3fv82oi3r272e8q31s5b6e1f69jegl7rbfvaf0c4zg\",\n    \"nameParserType\" : \"LN1FN2\"\n  }, {\n    \"score\" : 30.715728150795517,\n    \"firstLastName\" : {\n      \"firstName\" : \"Gisele\",\n      \"lastName\" : \"Bartell\",\n      \"id\" : \"8vcb\",\n      \"script\" : \"ozayz8w155gjh3x6py7hfl1i58ifj5isstbald9qho\"\n    },\n    \"name\" : \"Mr. Ernest Crooks\",\n    \"id\" : \"l126\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"xg659gj11tug17jwg7827uss5isfu3o8volqz8ftgsaamhzslzs1vci1nridlky0bark5w8kfhv1zefwm6m7jeh4nofjtrn6eo94hakf4f5f3oxgzgp046nssk\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 10.731339690904562,\n    \"firstLastName\" : {\n      \"firstName\" : \"Willy\",\n      \"lastName\" : \"Bahringer\",\n      \"id\" : \"uq4c\",\n      \"script\" : \"frosspmllocefhgxw0aoe5ne72rgc1lz8e2rqnim6qfri52t0ycj1t6\"\n    },\n    \"name\" : \"Sharell Hills\",\n    \"id\" : \"9m7o\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"zpgxshwyrbw4zer4cbfg4l9epsu13ssnphtlov2txsvhojr3hqs9vgdz48w39ajo2fec2h8od4grf4bmj4jvc5qqklxlea47ebxvh9hfd0nts8rbh45jtxky90ex80w272\",\n    \"nameParserType\" : \"LN1FN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5500b614-8f3d-45e4-94e3-180d2ca5e2b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.792075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "59b8cd6b-ae69-46c2-aca5-e5eb504ce069",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "59b8cd6b-ae69-46c2-aca5-e5eb504ce069",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.790094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "8f0dc93c-f872-48da-9eab-d17c2798756f",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8f0dc93c-f872-48da-9eab-d17c2798756f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.790078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "0577e34a-9ffe-4794-88c6-2cc5630242fa",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0577e34a-9ffe-4794-88c6-2cc5630242fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.790061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "41c759a8-58f5-4d4a-b7df-f3ea2b5bf82f",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 7.496342195389827,\n    \"firstLastName\" : {\n      \"firstName\" : \"Regina\",\n      \"lastName\" : \"Mertz\",\n      \"id\" : \"br5x\",\n      \"script\" : \"4kwgqy2tjqwz6lxng6y42ykb4pzyeti7stea9oedhsg8s6554s2977ip2eitezde1ppvx4j242ax\"\n    },\n    \"name\" : \"Patrick Simonis\",\n    \"id\" : \"49v2\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"gf2wwlgmiw674yik0pvzlt5y1dkl1ik1rkvgyic6dtd0d0ys5rrxkvfyuuqj8kufi1f9jl9hkb0gz2u9435ipwjjp56hbiqgl53f9a5hdd3mn3rrsx3vl91j4jp45mt8xwy709x23v63tywqrjvjov4gynicrquscbg1b\",\n    \"nameParserType\" : \"LN2FN1\"\n  }, {\n    \"score\" : 3.611160201630792,\n    \"firstLastName\" : {\n      \"firstName\" : \"Sachiko\",\n      \"lastName\" : \"Becker\",\n      \"id\" : \"kt34\",\n      \"script\" : \"8uwgtg\"\n    },\n    \"name\" : \"Jacque White\",\n    \"id\" : \"68oh\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"ha4klahetxgu2269lt5n7qndzccfty9a34rg3gs7gbonuvkflmoci1arkopoi2wvytwf7ccmkd3tkul8nzjebfu7xxrbyug5h8j0vtn2mmwaovd8gmykfoxvsndcfy0vgublorgnx7g4ebc161kc210vjk3jrui5jfs0mza5dob1htl5ng2sv0zmua74r25s3n\",\n    \"nameParserType\" : \"LNxFNx\"\n  }, {\n    \"score\" : 56.859021906438656,\n    \"firstLastName\" : {\n      \"firstName\" : \"Marquis\",\n      \"lastName\" : \"Schroeder\",\n      \"id\" : \"6491\",\n      \"script\" : \"tnftf1fc8xer0c9m0p0nkjzb5adz21jjez2hxll710mefw0ovw8elvg3mwop3i4mpmfk6xr5nrp\"\n    },\n    \"name\" : \"Benedict Harvey\",\n    \"id\" : \"46be\",\n    \"nameParserTypeAlt\" : \"FNxLN2\",\n    \"script\" : \"prozi5ee11y1or9ayz6x29fp6kkhp8mtgqjhclkc0kd5hsc77ngosetdpvdkl0r35t81m4zf302x2vb6aapqbnf09pfh855gd03z7et3pd6wkr9n5yzx7euhneybtn\",\n    \"nameParserType\" : \"LN1FNx\"\n  }, {\n    \"score\" : 72.194888926293,\n    \"firstLastName\" : {\n      \"firstName\" : \"Armand\",\n      \"lastName\" : \"Trantow\",\n      \"id\" : \"s945\",\n      \"script\" : \"9769d5zphv6q9gs0522e1gvqjj6krqf4oqi4xpdm\"\n    },\n    \"name\" : \"Lia McGlynn\",\n    \"id\" : \"9rz5\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"qgl6kue9gqf58j462efatr5762xg6g25ehg7n4j598mm0rj49wsrwmr7zbvqn3iq2jwo0dpqjfc3jzohke7kr27mo0471g1zw5b2ap01gnawke3wqykm2n2h5hdhfsd1ujnsy8883dew4ivx2wowcx0y2p9g598qqq0csi15nojsjim0ysq72vgvbwo\",\n    \"nameParserType\" : \"LN1FN1\"\n  }, {\n    \"score\" : 72.98000103100318,\n    \"firstLastName\" : {\n      \"firstName\" : \"Tashia\",\n      \"lastName\" : \"Haag\",\n      \"id\" : \"621h\",\n      \"script\" : \"o8o7xww54wgve6k3afd5oekbws1wprq2wobahf2n63jjjja259ydj9aymvrzqmdte9v8lkxsnix30rvy75eq7hgskwug845byldofcfz8zqa8n37fjnud2344cu65q2ddh8e5msa1oqj1pmv7q77nb2nu8n9zi47fh6n5qyq5it8m8xkvczwjct15uopzsc8b1\"\n    },\n    \"name\" : \"Chandra Miller\",\n    \"id\" : \"6f07\",\n    \"nameParserTypeAlt\" : \"FN2LN1\",\n    \"script\" : \"hl4rny0o3b1h6a0wn9rq2bwlrsucms732tjf0gsv75vmiff1n5pyjsg2b3fgeshn9i9i0g2gtdq3guc62t4qf81h0dpid9wx19usg\",\n    \"nameParserType\" : \"FNxLNx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41c759a8-58f5-4d4a-b7df-f3ea2b5bf82f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.790024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "6b7505d1-1b96-42cb-9b87-26f44450f55c",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/200zv46ik7cnlgf5g0po289lfcpu3m8alv6iyzv3bc54vk8h858ad7gd6cxn8ol53nboq8xgftatswetu5b5gupr4qmxard869ehpv3w001ztr9eaqu9/zkizyljwuslyq76nb9tzlj7y1zys258af8uxnhu9rwddm8h7kg2kpbn96kkn95x2laqe2z9zuns7ibo4sjl9xzdjkqfx90s9pno0bhfqw",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6b7505d1-1b96-42cb-9b87-26f44450f55c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.78856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "c5d8cc98-b81a-45c7-8c2b-423aa195c5aa",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/1cpt5esz7sqqm6ojjggz8brguizvsqj63vcsv0xko6bjcqmf6a3l23et8/3zs5tsvozj3c694i3j04m9xq",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c5d8cc98-b81a-45c7-8c2b-423aa195c5aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.78852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "fc801ff4-6ccd-4b77-9328-321d2eb29d14",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/ba3xzz0w6qkpfg0xf9cp681f7ir/a7lrc1al0c3adgomooej1ebynsrg002qof99vuqvn5frx93bv6y1zi4feu0cnex15vgw8af4hkkb4i4lfiy6t3m2wb2sc30iwskhwlcpusqcc7m36h12w2nqif0czaeuya2xfcaivygrrpctaegxc11s",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 87.4121876072721,\n  \"firstLastName\" : {\n    \"firstName\" : \"Ryan\",\n    \"lastName\" : \"Torp\",\n    \"id\" : \"8515\",\n    \"script\" : \"aot0ze3t869h731nxxbozdxjvikmnp8f4sy5gp6x\"\n  },\n  \"name\" : \"Miss Wilber Auer\",\n  \"id\" : \"huz2\",\n  \"nameParserTypeAlt\" : \"FNxLN1\",\n  \"script\" : \"tknbea1955s7a7es09639c8qykdk7y5izxo9ecwqcc96ekq9pjcf8hyu0r33yddwod3vhma6y7dfr2vqcyitk5\",\n  \"nameParserType\" : \"FN2LN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc801ff4-6ccd-4b77-9328-321d2eb29d14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.788471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "48cf86dc-d737-497a-a2f3-c880f5385e7e",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/p8hk",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "48cf86dc-d737-497a-a2f3-c880f5385e7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.788083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "0ba63dbe-fad2-40d1-853f-c30edd8fb4b9",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/s4b7vk6ldjh4vol64bybmwz3ldczqpdkehqq",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0ba63dbe-fad2-40d1-853f-c30edd8fb4b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.788055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "b0c9839a-17f0-4220-9872-6fb0da28d9ba",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/byrsutcbv78oaahxe0mloexye1v1g933mi6h7b7b2p83gsj8dees8gqvrjz2c",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 19.775515807329647,\n  \"firstLastName\" : {\n    \"firstName\" : \"Lemuel\",\n    \"lastName\" : \"Bashirian\",\n    \"id\" : \"59so\",\n    \"script\" : \"qtyywjaea10gh259m436g2ham9b9miy8beqpkgwgy8jkwmb3a6l4rvyf8rfkmmuu33fbe7eoi1lra391ugrvhox4bcbkbe4dad2fqbzg54xha3t6scn1fhaq4y45zj9\"\n  },\n  \"name\" : \"Gordon Dicki\",\n  \"id\" : \"62xi\",\n  \"nameParserTypeAlt\" : \"LNxFNx\",\n  \"script\" : \"0nf23il4hkqcmrr2studf0110mmj\",\n  \"nameParserType\" : \"FN2LN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0c9839a-17f0-4220-9872-6fb0da28d9ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.788012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "52c69df2-3fbb-4a42-b956-9086b730e384",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "52c69df2-3fbb-4a42-b956-9086b730e384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.787637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "739361a6-0d89-4ee4-b9b5-1a87f6d31149",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "739361a6-0d89-4ee4-b9b5-1a87f6d31149",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.78762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "fb1aa553-2716-40b5-bfdd-47b0d71bb359",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "fb1aa553-2716-40b5-bfdd-47b0d71bb359",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.787603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "50d647b1-8bd4-4075-8fd9-338c309d01a1",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 27.392722355994415,\n    \"firstLastName\" : {\n      \"firstName\" : \"Nick\",\n      \"lastName\" : \"Smith\",\n      \"id\" : \"z094\",\n      \"script\" : \"vf6m1v2no48ibp1k6w6764mwkqctjwx6ozbqzd9oj5f77new885ucmzppsx0zihsgg4eedl073nislt4w2245dsedyyzi1xnw13z9g3o3xp6qnrg1\"\n    },\n    \"name\" : \"Javier Wunsch\",\n    \"id\" : \"ya09\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"gw8rxqsagzj2t01m265hrs82w61r0z45n6eo2h1hru62x7fmp8k6yphw4r6mjffjkmzrpn50p3gqvcd3oq3fdu4k3tfu65oc5rh3s1z7g26381itl35obeab7a9ndurk7hxt57v6hsqr6rzwdbckkjmfyodwdqr3y8job8acvj2mo13zvyn7cayllj15408ox\",\n    \"nameParserType\" : \"LNxFN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50d647b1-8bd4-4075-8fd9-338c309d01a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.787576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "71c6e104-e88f-4248-b9d4-da20b8f347ab",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Jennie+Kemmer",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "71c6e104-e88f-4248-b9d4-da20b8f347ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.787246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "460f48b3-b87b-469b-b8a8-618c686d4b6a",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Alejandra+Huels",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "460f48b3-b87b-469b-b8a8-618c686d4b6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.787196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "be6aeebb-28d5-4cba-be09-fb25a8c15c3f",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Lenny+Schumm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 11.79255389762288,\n  \"firstLastName\" : {\n    \"firstName\" : \"Jan\",\n    \"lastName\" : \"Kohler\",\n    \"id\" : \"7pa0\",\n    \"script\" : \"7xhxlk8rtgdab4knvq8kjvz8fviq2wwjue63ovoztl85pt93ncvp51a5r2xo286ro2bdz9js9ukot51rrnxzfojrsebk3uuxj0uqj6alpe2rn1i53ldoj8wfvf94jhov\"\n  },\n  \"name\" : \"Aracely Bartoletti\",\n  \"id\" : \"5365\",\n  \"nameParserTypeAlt\" : \"LNxFN1\",\n  \"script\" : \"o6do8jeng2w6uyvbcxq5ykatp57q2v87n122x4l6kb7qz5tlbybr0jc67osbnc7v3\",\n  \"nameParserType\" : \"LNxFN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be6aeebb-28d5-4cba-be09-fb25a8c15c3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.787129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "fbd231c3-202d-4cfe-a2ce-fb910bb655cd",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fbd231c3-202d-4cfe-a2ce-fb910bb655cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.786714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "831bddb7-5cf5-4af7-9b5d-b86734766c2d",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "831bddb7-5cf5-4af7-9b5d-b86734766c2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.786697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "d8e3e483-5469-4a59-a7e9-3a775357b451",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d8e3e483-5469-4a59-a7e9-3a775357b451",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.786679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "21d56d30-5df2-4c0f-88c7-520ca8c325fc",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 45.41263726386229,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lonny\",\n      \"lastName\" : \"Koss\",\n      \"id\" : \"2e3x\",\n      \"script\" : \"8vab3qqvhw7txef2n6lx3ezzr\"\n    },\n    \"name\" : \"Alessandra Schroeder\",\n    \"id\" : \"4227\",\n    \"nameParserTypeAlt\" : \"FN2LN1\",\n    \"script\" : \"d52u6s5yrz2kfzjd9xuoyjhkzbu3gpixeeyzircnoplgzvn0a6jf4oa0584amrnr40k8ortqqf7jslm2up7dssvfsp3de50qums4i7fvdmckwdwkfnxiturb1lctk3ybw844ydyye3x0dyvkgzf\",\n    \"nameParserType\" : \"FN2LN1\"\n  }, {\n    \"score\" : 94.00459525364802,\n    \"firstLastName\" : {\n      \"firstName\" : \"Maggie\",\n      \"lastName\" : \"Kautzer\",\n      \"id\" : \"iw86\",\n      \"script\" : \"seklfbmsnbxdalaveh3y2ncp5qwbqbiim1eeenkr29nfz7z3oito85hu4xmlc2ucxugbtjzc72562eifx4clixv079q2y7wo1lioa0ygpltbwzl3kphoab0flh1bsgi9gu3yz99zwwh4npzzi34hx8vqjbriqdnnth9juid0epenk99u64x0kn4zdhsho8ww6\"\n    },\n    \"name\" : \"Dion Muller\",\n    \"id\" : \"fn05\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"5ntqkk38s3h4r7s7xdz12jv5lzi6kzlwf0xgw651eubjbbwe6yy0y150kzyelu8thfkdw78q8gwyea3xaw17mjeg6kel3j3k3oxw5v0\",\n    \"nameParserType\" : \"LN2FN1\"\n  }, {\n    \"score\" : 51.284066029248734,\n    \"firstLastName\" : {\n      \"firstName\" : \"Tad\",\n      \"lastName\" : \"Hammes\",\n      \"id\" : \"p511\",\n      \"script\" : \"n5wrzho06bd86glq26jbwode1a2nl4wrszaah04a7as86bhe1iz4w05jhebgoj0tff9z539krk4ntkz\"\n    },\n    \"name\" : \"Bud Kemmer\",\n    \"id\" : \"3utg\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"9944mq07qblhqaurq8yx0ukyujuo5lsnuuvlblcfrxfopilnmemc708ubp1szfoan3fb5iddck3l326edz0lg18bm2c3cq4aookdvpkjy5645xyp0hthw47q8iy25bktsxys5wh35ieo9oww26hcq3qhpulwdtm\",\n    \"nameParserType\" : \"LN1FNx\"\n  }, {\n    \"score\" : 43.05065920058713,\n    \"firstLastName\" : {\n      \"firstName\" : \"Carma\",\n      \"lastName\" : \"Wuckert\",\n      \"id\" : \"6035\",\n      \"script\" : \"dlwge7s7jju8t5bmz85ur5pwzc2ze8fja7vlvrqnog1arur60feqm7lusc86mpu8kzoxlcqg6cf0rpipne33zox3c6ibunqxiqysg6cbuwju0b46k2kpo4eko5tfm5b7sghab58r2wt8fq1ucjks7wix7e4k9\"\n    },\n    \"name\" : \"Jeanette Trantow\",\n    \"id\" : \"2t05\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"ssk2hiulocwzidoeqk4dyp11wtdb4tng1wjp0r52vbczsbwz2nx15kokza3um04dqb3zni4ckzpa7fmhtj4tywkl6lvmvbblvih6a3nieaiwffow2dbkxbe5supq40l040niz218ly\",\n    \"nameParserType\" : \"FNxLN1\"\n  }, {\n    \"score\" : 7.232272778706294,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jami\",\n      \"lastName\" : \"Senger\",\n      \"id\" : \"yt8t\",\n      \"script\" : \"64jd1kdowfrw55wgsntbibov34yn2urvroejejio2gecmn4lnr4wm500qgjy541228i3yqzfvpivyi8i90iqf2mv1s4rdh9e0bzntyrexn82oixf23ngph5i3pt98h0pse5l3da4huww9v3wl7nr5i5jx29hdchygdj2195pj5ubqp46fo9jl9n674e3ci4hp7rmlkf\"\n    },\n    \"name\" : \"Chanda Streich\",\n    \"id\" : \"1oi1\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"381z2wngazltty4hzoosb1houzwburw7itwtiia3nn91tuo2h6woqxt3gi82pxnlfiy3a52s7s57fsb53ncpgompiodzmftyqfxoulr89ocp9kilk6v4sey1q5yzy2zaj1myf6fp6028py7258bd2jtreuxmy0kahw573w4myfi39ulp6oybuzxwin4kxfdg1fescnir\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 96.05355536058975,\n    \"firstLastName\" : {\n      \"firstName\" : \"Wendy\",\n      \"lastName\" : \"Turcotte\",\n      \"id\" : \"211o\",\n      \"script\" : \"8349ltdfo4oezbfvq1bcbbftc\"\n    },\n    \"name\" : \"Harold Harber\",\n    \"id\" : \"0c8x\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"xhknneanpkpquyrv9x6mja4tiqpzopma0ahe60osq7fgdyixxes4grnxg202v3ccsqkbm2qauxohsf2dw66qdrs3zf52v5wabomjd5z5knymi3b2r2h9fqf8a\",\n    \"nameParserType\" : \"FN2LNx\"\n  }, {\n    \"score\" : 55.067419341551826,\n    \"firstLastName\" : {\n      \"firstName\" : \"Neville\",\n      \"lastName\" : \"Lehner\",\n      \"id\" : \"20sy\",\n      \"script\" : \"1snawbumgvqefhinh6s11okm5tak1eidscl4\"\n    },\n    \"name\" : \"Rosendo Stiedemann\",\n    \"id\" : \"0ouv\",\n    \"nameParserTypeAlt\" : \"LNxFNx\",\n    \"script\" : \"5grmp85sh80r6eiix\",\n    \"nameParserType\" : \"LN1FN2\"\n  }, {\n    \"score\" : 79.88537970738656,\n    \"firstLastName\" : {\n      \"firstName\" : \"Delcie\",\n      \"lastName\" : \"Mraz\",\n      \"id\" : \"5o25\",\n      \"script\" : \"4n0xj2nzy9ueorv5cvps7uqagmoh0fq6ldijdcgbzscoaodwhp2i89rx2nlzgv5cx9b6imc923g03262ttxc1ajgi90v4oyww8581e2yolcf8gr429tirzgv0przub9\"\n    },\n    \"name\" : \"Maryrose Kirlin\",\n    \"id\" : \"s00r\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"t7lwynbj0wcxta8qwa0z1mrdfv4rd439er5pfsr8ki6lci7hlraz0vd4597bo4i7g9a1duc9x58q7nv2uaopd71l8ujiaogo0vuabh1vqassgz442oa0gu80vbsw71u\",\n    \"nameParserType\" : \"LN2FN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21d56d30-5df2-4c0f-88c7-520ca8c325fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.786633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "7c845f66-10b7-428a-bcdd-96372fc3f8b0",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Michale+Hirthe",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7c845f66-10b7-428a-bcdd-96372fc3f8b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.784314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "d9181996-23d8-4a13-8148-7a194129947a",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Calvin+Adams+Sr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d9181996-23d8-4a13-8148-7a194129947a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.78426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "97e3e278-81ec-42c9-803a-190fab31b293",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Cecil+Stracke",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 39.25148114833925,\n  \"firstLastName\" : {\n    \"firstName\" : \"Dirk\",\n    \"lastName\" : \"Erdman\",\n    \"id\" : \"76pc\",\n    \"script\" : \"jp8qa99vgsfhy8f47mthua87rkup3j1p4v1\"\n  },\n  \"name\" : \"Mr. Jeri Bernhard\",\n  \"id\" : \"y8o7\",\n  \"nameParserTypeAlt\" : \"FNxLNx\",\n  \"script\" : \"8yte81kzgdmrdi6bnsy7f2360s3bqr7u9cxt4on56r7evvaabckdgm9zmfuackf8rbaa2n671j9gfokcra4n0ji3o98cja0bta2mlwquf4sddtk06r2l71qjimeriacpltvcqfzfqvh722ppbqbligph8bnjxxskmxdil64k0bfgx6ly8cqxts2fesbe99gi3lelgc7\",\n  \"nameParserType\" : \"LN1FNx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97e3e278-81ec-42c9-803a-190fab31b293",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.784176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "bfe9324f-41ba-432a-a87b-e6518c15ec4e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "bfe9324f-41ba-432a-a87b-e6518c15ec4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.783677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "fd04f987-4b81-4d14-8cee-1234c46243cb",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fd04f987-4b81-4d14-8cee-1234c46243cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.78366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "347a47b1-b09d-4a80-96df-dcba6fa3237a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "347a47b1-b09d-4a80-96df-dcba6fa3237a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.783642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "2b8062df-047a-481a-896b-31df1e839f0b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"lastName\" : \"Jerde\",\n    \"probabilityCalibrated\" : -0.6628796106987023,\n    \"script\" : \"v2cmnbuic3xw63fw4ut59r7qkkfr4nl4enqkn3kyxvt1gghzmj39kqpxxvnhmuq8o65rt75m2jj5rmf\",\n    \"regionOrigin\" : \"fh8c8jac1c6g4l6hq9o630w03j7fce8zdsmaixohxgiqdknpt6k3xkd0ewnis8jmqi9ro25ao3nlcnphxe32a6fnjm3irh45t699cl9bbdu91inn0b1flwi8ot6ynvzny1txxvgphn7hk4hqkoddwz2i0qt\",\n    \"topRegionOrigin\" : \"nwu0zq3nls5jpu2g82rhibk1djss456xizadnd3udgt61auiy5arfjrgwewyhl6tzwyp58m2lfm09jrurp6y8682ky32o5hqe3onugd2q9z2oecw81kopgiqpj7j8x6f316wl8vcbqv\",\n    \"firstName\" : \"Deann\",\n    \"score\" : 0.4499694589637615,\n    \"subRegionOrigin\" : \"xy4djjwni727mr4y0zkda8kyqrwff0k9x7pk6wket9qiziq6t1qy90pmicm634xgxbje0nn3r302wcbac8vwc3k5c3o7lsh9v6ktu4vaq1v69shku02bp26xg5p7q1aybk1qjio7cnrq6ngm256o7dugi9h\",\n    \"probabilityAltCalibrated\" : 0.7370329884261311,\n    \"countriesOriginTop\" : [ \"1dyvelu09czsopawlfnziuqox0ljsw2bajpnsrdzelzil6n6vqbh3io7b1vx92icdw3itu1rq60sbte4dztjednqzrldwcxj3wm1ibqmyzavdke870tvhc2l5cxbi7\", \"d1tctv80\", \"cmbz3z5rmh7jb\", \"0adh41wgrcfmzmth8ar0gz41jg4jwo3e4hc5l9zik3wytecstwf0zizmangcfhcp2bqnkx7b4ylyy08be7rp13d3coqru8s1js6v25cr3ytsgyiq37wee2miebpvwyxn50dia4i1ut4yssjhwchb1yuhxkpoqyafu7mb2ixqvc73intjuibxn4h1\", \"hv1ry0rpxlla1\", \"7cdwa3ol2tq64fumlfg5azt3f6o4zu2s90fstrjva708pi9dbxslvp04m6bjkown0l9y0f0l8aodyb3xfkmmhd1icchcixgsrotr23h185e7r9atap0ow2v6\" ],\n    \"countryOrigin\" : \"10wskdvd0a53n3q96yxnju5c6qf54m529zh4rttk37zeglrefh0gu1gamiz03bjwskvorku1m2vmide2c0yzemrkspoig6hr1x2rroowwb2eumg96q80i1l2rl1qu9c3fxv2pn7m5r3vy7hjn0l67inkjundd2fwwl19da9y95i9m5c8c4t6sg5ur7syq38rrn13\",\n    \"id\" : \"ku57\",\n    \"countryOriginAlt\" : \"aamdb97a39iypfyk0sujvuqc3g8x2nf7iwfj3b7n6t5gz50f1107urhqa4uudam0a6moy0fb2e1ppthrhc0t2nqa07j8fr0smbd882q3szwqv5wrcg74nkd\"\n  }, {\n    \"lastName\" : \"Wisozk\",\n    \"probabilityCalibrated\" : 0.9640486326087228,\n    \"script\" : \"49gc8y8rg41kr7ib9gdlzynlnypo42uxbtr9h9jgq3n9aw583iak2xl5fkdgsrmixe7zri5zg0o488tgq3u3o8pdo1ssc1io6s5kfvkhefn3s9tw562e2d\",\n    \"regionOrigin\" : \"dk37f9lci315j49wnhwoaoky5q6yt2cfn4ds6upozlbla7ah5loamwk9yawqlnvy2yolkmmybld6006a3hwej6f3xvq0f4aekg9lorhvaf436phuxof8sqjehcs5enerotihnvuxz4ql343ar6\",\n    \"topRegionOrigin\" : \"0z7tp5btkkvssjbu35q4061pukdhoevchixou4ufg38ogwmhhyk\",\n    \"firstName\" : \"Gale\",\n    \"score\" : 48.860778799303915,\n    \"subRegionOrigin\" : \"isr4z2lr9y81vy2u4tx8ei13wjq9lrhqals49574dqnwvepun56j0o2ugvngrvejfa633olpqmnkcfwqz7qfatp6jd81waanlqhlw4u9136\",\n    \"probabilityAltCalibrated\" : 0.8371379695637757,\n    \"countriesOriginTop\" : [ \"b6h16rldpiefjz5krot3uyl0om9h6vpw3smvz76ay3yuujvglv7kdg2ndy98llyanaa0i7pssm0afopp8x3uo0z888cthj1jmsqlq8hlati27at20cc1rfhni26cug8roi98cdcaoq8u5nc9tmuaxgqvhu2answtxskjgn4ymfye3gmc75mojgyxnawm94dq96y6\", \"vl8ufs7qp1be4cxprvnin55ezzi0zcgt5su7xhgk1drnasyynjlsgzwj644i61ikfllpqpjnt8jjwcum8ephpyrvkusxyxlql83y9bw6tntpwc6xj3iq3ivs8ib\", \"731cojedov2llcnsurt631obs7s2m4vwo0yc1imqr2up\", \"lsbp4tt77rofzttnqp7686s0x6nicqlpu\", \"2ony56k7xa9that7mjbb2uxjdcr0a9g9o9w98qkrk27kqaqjf3u1k1runmoofar7xibn71cj3n9bpxjte6q0duupo8wro9w22gdp6w\", \"gtq8y5yas6dzvz9tm5t3vi2j4gxcewjdk07h2dep1lrwkong62pvffi7irl2nydllfudzsrmlybhgmj8i1fsvll2z2622p8m03c4v55tukct2ocr43b1qz6\", \"07v3yh5zezr86q4eusoyk2dhzk3xq2qcfgr2xkljrkjtyoos3ta778nbpai82sb8bgjlam7jehevj2m7vgcx4rdkirv2s0kgza9c8n6wnyyeox78ibwir7jagxm7pmxj10br87v6an65ineizoptjw8g1tb\", \"l630txe2hcybxyt22dme6i167msc8hhyh0btf05yrry8tyo5fs40wbe7jpe8j2es0pst9pglh3zp6p4\" ],\n    \"countryOrigin\" : \"3t2oz2asodnmsii6zhdbxovf3f3o2fixtlal1oqc0asbw3bzmr5nkq0jjnm5dyvay31ay3qlli4tfgdxjy6tbwcdtorkyiktkrtxptv0rlbjmkp\",\n    \"id\" : \"lqq6\",\n    \"countryOriginAlt\" : \"0uccyjsgzy7dch65uojw334kwruwdk66twf8pvkogumtyrlaqvg3hb2ex\"\n  }, {\n    \"lastName\" : \"Schroeder\",\n    \"probabilityCalibrated\" : -0.19829484397844532,\n    \"script\" : \"qq2clsi5eb2hapz\",\n    \"regionOrigin\" : \"is17ed2awrar0vc9izu92y9bwvljb04ber0bz4dss99i97gowmleylijuz4dz6e7zqcluypjecucwv2i1f2jl46uc\",\n    \"topRegionOrigin\" : \"uwsbanueu6vbs4qxwapvcvt2p3r4os3gsembnbejoop7dke0z0ev8srdf7752c0ncenwbpj5rflx5nibnf17sypso0fnl3zz1kw4xr46rgpvha1a9ihz8ts0fzdqi07sxtq1os2e7iafv5brda47kh4w9g2d430rttb4f\",\n    \"firstName\" : \"Darnell\",\n    \"score\" : 22.145850454179705,\n    \"subRegionOrigin\" : \"j17ydndiewe9jo3u7jya37rl8j18h9lpam5u8vgo04a8aqovv5icsyp4k0kiwue15yb12ep29vddl3j2rof3ln2ufvtyp9gcyt0pctzpgu9m91hvlflpsor7ar8uw3nf3fc916bl4l55xn2hys44drbq\",\n    \"probabilityAltCalibrated\" : -0.7041035672236959,\n    \"countriesOriginTop\" : [ \"bxeyp476nq4c6a59egcyim3uk5o2x6soiwq7ov3oeo7ap39s\", \"zty8arvkszkrj1eo3h3bsudzj\", \"fx9ohssn0wulhbxe6k4b2zkh3jhreh2444e6vefyv6xw7ut6npgdfvn0gugx7e6akzvxoe3t2i55squyt1q9xlr75guf6x9up03lz266v8mol5zz4bedwjuckie0eem511n52x54x3f2\", \"cagtw32mlhdm2r59oqr1sbwfzsfpogmmj7kve3xk3obq4jk8vmpowwq22o58abllncjw58nsp0t667z36cd90wxdmosi105hwwwlicgikwa7e5bdbrcfccogim4okx8nvobix2rf11rqajqfklloflp0ef744k91f8pzm7e3hmf54c1ks8y6zmb03uyr9s\", \"46z7vwgzlhw1wp8urkzhq04m5gq2kj832bbwsnp7ag4rlns046idoem9qk7jpnv96p29d8xd99kozwrmg\", \"ly1a9h58ys07fbhlslbx1acvt1unl1s6to4723i3780smp14bnnnuh23ho4p\", \"7nvktaec1k4sn7otghcu73obi20dowv3wkok\" ],\n    \"countryOrigin\" : \"jem2yl3ll7perb2md70yiyikcodu849z3yzqdq6u6pnowgjck6bvi3jogr8qkkhvxxlhonayn6lkzui3w59n1evn3qj4auwanw7daxr8h6tkiazbprdgxf2cort3fjsdda2zx65pa43bey2l3dgkm5c3vzvfvgv7992f3ksckomc30vdbup5mvhhllxbyw3d\",\n    \"id\" : \"4021\",\n    \"countryOriginAlt\" : \"s33dynafai6in7wmef47hg8yx84mu8uv9m0mdulbbthb98wuz7fhl6we0dwcc423ydatoyjn20nbof5m6x1frl12v484cuds43tny6ctyk24ra3eo0yy6mc8yxrymr2wz9wkby539gncmaorximm6pcfoxb6b012zil4n5x5cdas5\"\n  }, {\n    \"lastName\" : \"Corwin\",\n    \"probabilityCalibrated\" : -0.21014351227509676,\n    \"script\" : \"y20sxcnuxctp3j4io486u0cfamtsyyz6xvxoy1p72jerjuq1dvllza0l8u6t03q7r8tz863by6h0w9j8zy5lf6qs3h5kx2wqafs8yqf25k1ojt9v93j5x0gc7tyfm3v64lhnde4z\",\n    \"regionOrigin\" : \"pgi2xq60dusbke3bdkcka8db39f2asp5leoarmn4kvgob8a9i2yr0a9bwscdfwn6j1oob3jp7yr1qms5f99xg0ehqj6894mipz1knf5yphp156hytrvwwvbyqosxdyz98h1zx2m\",\n    \"topRegionOrigin\" : \"kpnh1s2gbbuakaavy2qeedhz3vxn7s1pujx2vhv1bs6hpjnxsfhz4qmgvs001kq5gzy76ghb16z8hbp4k2m06hd00x5usai94q0qwbbaxuu7zgaej3iy7orsdxua\",\n    \"firstName\" : \"Shane\",\n    \"score\" : 30.070429636064546,\n    \"subRegionOrigin\" : \"a7py80ks1ug5xg90ekc77wbndbo718nwjmdek11d02mnvivpews5kn4j8jwdbxwhyvx9rrodkk9tuikml3\",\n    \"probabilityAltCalibrated\" : 0.8190239185072126,\n    \"countriesOriginTop\" : [ \"3tagldnm7blromq\", \"tcrthbuzds019evzgwvkpf04jx49kgb7s2nj7yrrwxkcbbb9e5bgc0v\", \"yrneqlerbpgiesa5yeob7d9p7bclkhp1j65hzw1xzw9mmlmg9je36zw6gehwvw8hz2gpyfbim8rx6bqgvzudv3o1u0cfhxzxaypyohajcm1198nzqd3e0k2xuyayc04iirrsu2p4i9sz5u1w1exl6eqrqkrg4doep5rr567srq33cg951ahktdoy1uizfxwpeogr8li\", \"zg27b4vg8tadlb8ealdjhjw5wld2ffdadlz4bcpc9wl3uanizha97kwjqrye4r7gd541g36tt69q8gfb4hhhw6cbty3xxwsh8fqxqx3x53oydtq61yea84yh22r2m8jtuvoddx3esvvu7zmp7bfxf\", \"jhjed5twikqkvddv1qq368zaehccqygbyuf93qx04ug5miu60p6nsvp0076ql4nfiygsmntmfv3kjhwx5t49y8d3ynrrts95yzwr7xpykzzcj1jbptsuazzqnwnzhd6d7egew7y2ztc2sezpg0h1uxzus1xrpo7ucn4t3tf3fndoflpfhw4uoqmnhoblg7nly\", \"gg8vcplm8mhbhctjkxd82g00yv5xcl7gxse4ao4m2a4nsssq4h3mh1hgsu0k421tt2spf4tms6r2727moxu1tgw2vnl0piqrmdhr78n7ksug46fpo1yplipr2h450ym0l05s4l0dwy9u57nl76f0ln7k2z4oou8pq8\" ],\n    \"countryOrigin\" : \"t6ap2x6armhyq45jchh6fwm96\",\n    \"id\" : \"76k4\",\n    \"countryOriginAlt\" : \"qzvlo4uqm\"\n  }, {\n    \"lastName\" : \"Nitzsche\",\n    \"probabilityCalibrated\" : -0.7537654617919993,\n    \"script\" : \"7wrenfpsmzoplfyyq7sbvdqo8socgwkyxh9qaej6du2qq3qdv38bk4epe30xk67np74r5ue8w7qq5ncawiqjyppd7f8uaixk1g7rf5ab36btghrj3s0b24bgeg3c3ejwce7smlzyvliwkc9\",\n    \"regionOrigin\" : \"heekhr7asoaiereadd22123taiovaeb42jgt7ogkqjom254m2bjqruxu3zthsg46gfuw2oofnrs\",\n    \"topRegionOrigin\" : \"uqyapyo1gv28x3p9l7c0ci1l\",\n    \"firstName\" : \"Jesus\",\n    \"score\" : 56.81701511142053,\n    \"subRegionOrigin\" : \"sic1ckb8asgngrnzjwzgictfps7m1uwe7t09np0qa688p6d33l6a1xebko5a3upxshr5miv9dtxvqqqhq8vy21wbcnam1wf838rny4pug5a990rd51iq5mniykmaqq7b77b5uud41le0yzjds7sd3iu8s1li7fpfa5vtvp10lf2ybvnyvzvyrgee7kb6n\",\n    \"probabilityAltCalibrated\" : 0.7019242501812439,\n    \"countriesOriginTop\" : [ \"mqup0ug9ss8rd3isyjlhsd3bjxvmrie65asb9idrr8rqn0ui3oad4mix0weme6wf1dlerfqyboa8ywam\", \"nf5ru0zenkafi3qqcj25eglb25qovvfvsrl85gjdbbsvd3ybj59z7c5b2i\", \"vhgtw3efu9krex\", \"dhi3yqrmfamqgh9uxwyle\", \"rtt2qr77cutt3bn4zzbfzoisgguiu7juaxua1d226ualzt0920k63uax3s3sfgvf3gzaa5daiqw7ypkexqj1z0awa1zj11vq96lkl\", \"enko9g0q9ynje5ikzyl67gk7lj0ch7tvdvnyu5jrw08zx1hqtnxkgu7i518pfg4gupxto1exijll3p4yv7ed0sl8urfpqbrp2gmlry0h7299jw50uew54quqlqv98jfqkl6m86qlt6mzd9wtp1vo\" ],\n    \"countryOrigin\" : \"8hjtzzwcxqabwx76eb9achvlev12mxj69lv5pqh0160im5bz8z65lpw3ud3d9765y8io2w8cpojq7nnlgehlesx70bnaspr39zd20kkghrmtnix3cbhmmhb4ko2h96kjc2n7nnjgevddda6jyqvhussraojrmn2qx6x054fne416216b1mu1ma1cyb2zvvdka5m\",\n    \"id\" : \"z641\",\n    \"countryOriginAlt\" : \"ysfx5ksw5qqzxeegh1strgj1c3pn9f4hr1fmr7tljqlef0xcf1x1bw1th671epsxwcx64h26pqyt9gz8ckliu8mv1qi255wftpppwdfa4w3h6lm52caw6oh3w7atxjz\"\n  }, {\n    \"lastName\" : \"Muller\",\n    \"probabilityCalibrated\" : 0.9134522044041768,\n    \"script\" : \"5b2n1ksc2goafcyrgm72c4rbg1qy4ghci5c9x8u68tt5bhjjbcut80kb8vj8n6981s8l22hh20e5ueybzxtirlay19yzq9lkap35sq2ic2jbv9g8oz1ihlbdgfqdpdu87jqq48nnh2xrlvx8pve9yer787xbt6zs\",\n    \"regionOrigin\" : \"hjgn8kfe92dk76csu1qahi8c96bjme2v77t8qhg02wwypteuz1q9hwa06j5jgzvrjmv5cdsntltieo0avg65ruhe917qnmz3y76x844e1a8ukryq9w0i166n284kqag9rfttl1u1rxgur2002whht239k11cg88ba8\",\n    \"topRegionOrigin\" : \"sc8clx63mytsot8zpf5h3apfpnyuvsr3gk8jcs898rg582hyfiloyxqqv34mgl6zh\",\n    \"firstName\" : \"Buck\",\n    \"score\" : 14.548430420982017,\n    \"subRegionOrigin\" : \"9dmc0maoylrpvecrqnfs7t8w9wzn5p4hh3ehx30b3lx878z1u6uddio8urt92u1267azf5s9agkmat0v9dlaqiwhgbzn8vzy4y7rcc03nftqw4oe4tip3e356ukmbhlhwo9onxyl0uo9p9heimys0x11taq5z7onepcmgrmaipl9dtmmwg9qibigo5n\",\n    \"probabilityAltCalibrated\" : -0.4128110928140323,\n    \"countriesOriginTop\" : [ \"jppehh89c70tr03nzj45llc1ij2ra3nnsam8xjkeo1zenf7gxtiqcs9gp3go7physeru4t63gxrgioxahq29f6xgvzews65tk7rvg8uoltn3wrbqlcfplb5q3tdu3v9yjcmvmwv8p\", \"5xj32da7c2d2pl1boao8vc9yif8ekeh1dflabgy8nbdqnex0dqmdhtfvk4tsbyuyozntwcmu9w4022nbe6g02engwlkq17rga0nqa30po7r7opr49xbnrnc36r0wz1cmuq\", \"yge3406o9qnctfoibj27z62ri58wm1ez3l\" ],\n    \"countryOrigin\" : \"r8iczvbfgmz83jdjy5iycqo1zuz5ox1ivia2up7c3hs2\",\n    \"id\" : \"kc00\",\n    \"countryOriginAlt\" : \"ul0qmn31og8a7skxa4hea4xscq3xo2dddp1i3j2ubzsovpbq0vmggbkzs2p13qn5q5fbop2dh08xnhyvt6h71hvj969g53arzns4d8hrm8dyskzrl42y3zjda78kek3vfqtfam289abi25ggo1ca8pivkfqtizdxcixk7d5d\"\n  }, {\n    \"lastName\" : \"Huel\",\n    \"probabilityCalibrated\" : -0.09231598539867591,\n    \"script\" : \"obmtl99rjqahs4071myhd3j92q5nin30j6ekpa8wmh8loqyvbk8lqvcqcu5d048u6zaqh7r1h3nviz7gzisdyivhlq0ge0dwkq35d4gbsfk8sct3sjzlneqe03jg28ahp6xf89qdkqeo3umzrfkp25o65d2hx6zxq8f2sq878nyzjewdj84p\",\n    \"regionOrigin\" : \"t4ees\",\n    \"topRegionOrigin\" : \"bentnph3qln99eszariw14tdmh52r2ejqxqa2rd9vaswpw3gg25dqoyyu544mnj219acm54uthxpv135i48y6tghrh8xlye42qd0ketstul4nc5sulnyaz6e7xhb0cykncu\",\n    \"firstName\" : \"Britt\",\n    \"score\" : 84.2485256772494,\n    \"subRegionOrigin\" : \"9lcyfsoqt518p6p9zdso39zlo4sz7uvsa7wd4s9lfgt7a6zntomvnujvaxbzhs2pjojmkg8b2nv8a28h1nr6ypvpqzo3wzukbbyc9uyiyl\",\n    \"probabilityAltCalibrated\" : 0.2610116578489783,\n    \"countriesOriginTop\" : [ \"bn3o791gepw9aoj4arh56jv62ckbu7b75bdzc3mze1w3x7mvenn9zi21kldfcv7axv71ee9i6z30v71qsou3w65h7odsfmd4hvgreydtqqwbkqabv0umwq4ronvwbgzwp31gsec4698lvtic8x46cvzkc1bmnm\", \"grnc3wp5g1hur057nrl2kmf8oy7acc9z9icerv9pcnxly5o5ccj7d1tfwzi5iq99wus6hoiwpfdhhpt0opashpmrno3yyq4e4w2h1nv3z6g9nss7595\" ],\n    \"countryOrigin\" : \"4zy6n491cfgdwhby04d8zq8rlc7u9dlgqzdiwgnpevf5cmo9dbg6q7nd5rpktv1lz5daj70ytx0mt1poyuy94sr6brjsxq005epmm8obir7395ylsyy25ew4y8gbtvpfj561ess47xj82ljuqxhot2axqqs4sinkqz0b3b6tcthrqckxc9es81qznutckng\",\n    \"id\" : \"bp2d\",\n    \"countryOriginAlt\" : \"15445pcjzq3mpni93cz\"\n  }, {\n    \"lastName\" : \"Ferry\",\n    \"probabilityCalibrated\" : 0.28966178769268347,\n    \"script\" : \"g0sieyg9f7lmm5xhbkw8a6y5xt817l7210gbfyvesdjf4uopy6w9yckzxsq48l5p8w4wbnlyw1bld71rq7vsb0e5yvpmztn91nnp9z4fngt4y5eqdj90sanj8ufrmver0qmmm353qd9gyx5b1z7e9951wemeokax933qqfnczcss1t6ftyb5onuv4i2grc\",\n    \"regionOrigin\" : \"x54nvmr0uuhsffbhctn7qusta767qg9pmpf82lszw9ai3bv2crq88\",\n    \"topRegionOrigin\" : \"r34x6ap97yw7i3a52vrj6ski180sirf42xgzint58ndi3saktjktqpbnhvd41tspy03fadjhxuacp31snnjtvqteu7wqb3edn1im21\",\n    \"firstName\" : \"Leticia\",\n    \"score\" : 19.033947261188743,\n    \"subRegionOrigin\" : \"44qlpt8i6pc73550srfmtlm6qurhe6g6o3wy7lifwyble6od37mo65xwnvwmcun426nd5evst48qkrmlx6mh0icxqzq\",\n    \"probabilityAltCalibrated\" : -0.30710019777349196,\n    \"countriesOriginTop\" : [ \"317j8c6aodrso1b9w9mspj3uv0suz7m4y6tkxnm6da1pxmhdkl7ad6yetelbqfwf66u44nlodz2awir8a78e4hmvvrsqmg0bkixxlm2d7xs1idiu4edc3kzxhjho3rtlnuq9jafo34ssuj0wmfg767x3kuv2ca1o8tuls9fm93hk65umyijhd7rd7\", \"egi9ny5t1d4plcpubba2b0zpqqvuou18mz6wpa2uujpr1l912c6qru1ckn6ewooch8\", \"4cyr8uqiywn3uc90e4f89by6o6dh1wdbo21\", \"4yzfh1otfh4id4k8ghhe4qyw3os6fseicsup6koxwms5q9e3z2vok6nfidjpfn3mk4g0\", \"j70dv6p60t9lssctow8dtqn\", \"zh017\" ],\n    \"countryOrigin\" : \"y7rwr8\",\n    \"id\" : \"12q9\",\n    \"countryOriginAlt\" : \"rpoj3wxtmgrxo42ts4llpowzf5on10iz7zgkx3lo4g81zwls4usrejj13ta4f86daizozz77awt4mdn3\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b8062df-047a-481a-896b-31df1e839f0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.783599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY origin from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified origined names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameOriginedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "0b6fb66d-f711-4052-8708-d9bcbad2e1b8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 403",
    "request" : {
      "urlPath" : "/api2/json/origin/Kimberley/Daniel",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0b6fb66d-f711-4052-8708-d9bcbad2e1b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.781573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "b1d93597-38f7-4fff-a62b-1eb958d07016",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 401",
    "request" : {
      "urlPath" : "/api2/json/origin/Claudie/Fritsch",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b1d93597-38f7-4fff-a62b-1eb958d07016",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.781514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "7eeff16b-23ef-444b-916d-801a945b3a98",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/origin/Jim/Pollich",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Swaniawski\",\n  \"probabilityCalibrated\" : 0.9184374953324503,\n  \"script\" : \"5kbfiwxmnlezqm44fdafzmo7c6xgd5kcacmgj2575mea\",\n  \"regionOrigin\" : \"lc2vy7ohpignk6w3b35lq9gh8zuc8m84v65jyo8bx4h81gbvnq067uvx4jff9rgf9zq6wmauf3bez9q1pe9lt4gb9wa5wypp1bviii5qjpslh3qg\",\n  \"topRegionOrigin\" : \"2gphy1dq47hug40xer7bszroukmg1qdbomtr34wy9zfg11n6djg1w5uavan9bajvhd8gep57ew9a1ss4ypbrw1ie5z3te9dlxzn9ntvzjv8c3w8bbtffbn1wavir1nstde\",\n  \"firstName\" : \"Lavenia\",\n  \"score\" : 59.78977720346759,\n  \"subRegionOrigin\" : \"dwt0q6zjl77yy7gwpos855ekha5wt14w3qsbd4eu5dwgk48wn5u28qank6h9zkeia9echhhuso4f3ioynqd5h1cq61rbt9ihfdrit6zc5txe0r8q4etlhxvw2pacxgc8hxn2pet094hd9e12ux5imawq4sse4ywoqnxhpittb9klsgufbanhtllopgz3v275iti\",\n  \"probabilityAltCalibrated\" : -0.1777804436523316,\n  \"countriesOriginTop\" : [ \"o9extdzfg9yuqc1l2pi08u5ocqabud7igi1obs8kcoo0rsugz9ge2myky4y55zbxy6arlnys6zma99h5e2yrhseqx4k9b7j4ctjm7hmyylp28ps7dky9hsm4r6cxjp0i3vz5gf70zfo2ye43q3n9bsa3dpy3pdu0k8eo4o2ynpnsqbk\", \"mkkm0dl73llns0kpytcq8d0kuf0vkt367md2x7ql4hwamw95gen4dwhzjmbpdn34fj8bgo0fp01zc9gykdisf9h6aczqw8ytj\", \"amuhs4qdxw9t5qdtr5ej6m9ahlfjk64ubyj2hpoi2695qqyd9y7rwxcj6ve6lrdunvy7adyvzc88z98xksplnbzp5pinbtu0jqoycjh4asq033kq2ufnfa7ho0za3lylbvfs9gc8lbzfrp60q7ma6tryp8d\", \"u97rfback7rx1f3upqbd02x63zs5eewokxbt2efjyjwmel1yamfgzx7vychxlc97hmyt6fa376yg21a0sdd5xg7nrasq1cza14rt31u9h8zcb9qc2vf12f7bukx6dxplvgo25qn3u0xub8b3p\", \"pcazfko2iy5w87yxik47x6zlnaffen94b3qdbpg9ckedftv\", \"2p706okki45xirc7b3cmqn539i682es54gvz2hgfyeu6ldj4lvkge5hor7autcb75hj7u9lbuagqx7kbh2ecats0rov9zp2g9wg6lmzvya01q7nory2dx7quhynhnp2tgpxqkfe3b8l7o0zxx15e6c7qe56az0hhjz74rsqw41\" ],\n  \"countryOrigin\" : \"30o10m4gdc6q1kxnft1uas7orwpxbj9xsk8sztr3nzaf5decsfh703710xo\",\n  \"id\" : \"c5df\",\n  \"countryOriginAlt\" : \"m7kl88gyubslqolj2cmjm9q1np7j4od7n2l800b730lnvc208s9xpggivs0l8v0wv3a7tfu0nx3xv3zrj43pog88pkgkf4dh5f9hv9oxvlew06ljhkbbm80xw5cnj2wt6h0j594nqwcfv1as1tqq71urlb0ke2i8h9g09p8od6ri4zo90\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7eeff16b-23ef-444b-916d-801a945b3a98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.781424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country of Origin from a personal name.",
            "properties" : {
              "countriesOriginTop" : {
                "description" : "List countries of Origin (top 10)",
                "items" : {
                  "description" : "List countries of Origin (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "countryOrigin" : {
                "description" : "Most likely country of Origin",
                "type" : "string"
              },
              "countryOriginAlt" : {
                "description" : "Second best alternative : country of Origin",
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "regionOrigin" : {
                "description" : "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegionOrigin" : {
                "description" : "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "topRegionOrigin" : {
                "description" : "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameOriginedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "64378b11-97a1-4e9c-971d-093cc70b941c",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "64378b11-97a1-4e9c-971d-093cc70b941c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.780819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "93ce1f30-8263-4a8c-ae81-c0f58b1bf5eb",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "93ce1f30-8263-4a8c-ae81-c0f58b1bf5eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.780804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "20449535-7c2e-4db8-8c4b-21121281c3e0",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "20449535-7c2e-4db8-8c4b-21121281c3e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.780786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "1a7ec6e5-f75b-4fa6-9cac-61ac1dbb4d81",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 84.8737353567205,\n    \"commonTypeAlt\" : \"u02v\",\n    \"name\" : \"Austin Larkin\",\n    \"id\" : \"b4cw\",\n    \"script\" : \"ibx2s2brpldlecbc85jhsgx7uy01xe3ghrhfs2bx7b9okzo09o6ygawbgqhplx4q6essfx0lxtbjvtajsk7crrvrzbw3jw58y0sddpd2ub1ipqambx642ngc0bu\",\n    \"commonType\" : \"z3zxfafatpjfyfo2dx9i43c1dogcn01xlmzr1bmvz2rqh5hcrt3r4maljpzotvdksbdggp3p6oq5m95bbd9xb4n3h0erm6yiqo4c0watf5r0o\"\n  }, {\n    \"score\" : 48.88515882581835,\n    \"commonTypeAlt\" : \"9svarao75u4kimdgb4kt0b4lv61tar7pk6lo28uaz3ej6n3mdohsjrlkv3dtr6435h4ulsqo7mntthh65fxfxa2u4lv6g43k28amu9h21jniqgnygklpep0hcn2becs80l2fgx78dumcl3j76lpvif630tas4z2b6fcuwxrpi8o6vnwo26q8aehys33225e\",\n    \"name\" : \"Shea Ward\",\n    \"id\" : \"21vo\",\n    \"script\" : \"uky7lf3owb3t8026nu4ynpnmstixj7g8sq238o7wgftw9g24d9vpkguwofnyzpjryfg6gf16plu3lbqh95txkzpi7bd43mbf1n3swudwfouyiko87qjyywbvaxzwjo1z49stl3v4j245lkxm8r0sjta7ktiv6errf\",\n    \"commonType\" : \"ht4hpk9670y9w6kbn21ar1r5lxiseyw3f2ftxtt\"\n  }, {\n    \"score\" : 54.28725599199129,\n    \"commonTypeAlt\" : \"sz854eo7e324van2f7mtdt68yxjyr3cpieiloj0mbuvxbtcxz44buz3o00ulvrkqaihwxyzivltzlghh4dptzdlvvb57wlru9ht3b155e71uu366iu8hjh5wzc7bhlwhmat9uef1lwixs9zo3gybextftn9etj7rl56r9u3s3llgk79jpqnqzlj0xqynin\",\n    \"name\" : \"Harry Moore\",\n    \"id\" : \"4h15\",\n    \"script\" : \"37hlnm4shy0ndhjedp06mgrhbjuqo4y4azn34np2nnyr38pktb6etl2lppuodxmrmsbn6d65i31roxl4wpun0ki8g\",\n    \"commonType\" : \"x3jckbhkp7r1werx0912j3\"\n  }, {\n    \"score\" : 0.16053832599106643,\n    \"commonTypeAlt\" : \"uk8td6kjitq4bre\",\n    \"name\" : \"Arnulfo Jones\",\n    \"id\" : \"n6d8\",\n    \"script\" : \"mot3k8szayuvci0dqjszc12vcqjb20os67xblyvwa8vvohttu8qry8qrreh8tix43y1hhbikwjjm422epu249x08xxfbz2kvpo6q15nowv168v\",\n    \"commonType\" : \"92t0pawcyzqkeaoygihvq6a2rqgjvlyq1l3wrrevu5tjwvsebeqtz56axasdzk6i8y491dw9pgj9j5xly3sgfe46bjd8npr5pfz9jt828y9y0j\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a7ec6e5-f75b-4fa6-9cac-61ac1dbb4d81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.780735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "eb38d6b7-95ef-44a0-9233-a0574376ade0",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/xq39gynayjaynfcbw4e4zt6nqgg0j/wggyb2b2eix511crwpfty95biwkxy5fh6d838certejh17uf751ct5e40fwbn2t9m1ygunrmndulffv8ahhp3m",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "eb38d6b7-95ef-44a0-9233-a0574376ade0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.780046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "f39fd9a6-065d-4e1b-9329-9611dd60ec7c",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/9zs8isu3wqz211vulo0wdnd1ksv1vgynh5fbwkybrnw091olftnmeuoysspr594nainp9o1vk4qrd3dgbw4h98lt7nkj90tevf4ae909vq6duanzzg1g07jxiszw7jlnhs216pajn08y/e1cm3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f39fd9a6-065d-4e1b-9329-9611dd60ec7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.780007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "8da89764-5f98-4cbc-aca4-d2f88c75a784",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/sqr9ir3lgo3x6efby9m4waryt73rvhu53dtoibltit1hgxmts3balm5sb691fqirtbfqllc6om8tb2mem3r17uul6u3c1o9799ok09fxi85q6yxha30ynatezxv3ezzzoxet6ab971yjulsked3ck67ciajntq1xuh4pb8oo1b505m9lnc5sqxb1vx5nmye7/kbp1q563brxhn7fvwd4lue2ze2nkotkty4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 28.55547733048033,\n  \"commonTypeAlt\" : \"hkke0tb4db741bdxbwj2gn\",\n  \"name\" : \"Doretha Ankunding\",\n  \"id\" : \"p402\",\n  \"script\" : \"l43zca557wx32p8rdfen2wom9p22mwg1p02l6w4mt3k6d62j4clxuzgy3jl48xj3i2vlm2lm4kh83korv8haycs89s27qcgvsdi17z52inpkzuxt1vwfp6o83ezm96mv2xnz94v7lggb5tt75dc0z216wcd58z\",\n  \"commonType\" : \"748n9uc305pphajapkw80wp9vmur8gch9ow49sabixrv0f7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8da89764-5f98-4cbc-aca4-d2f88c75a784",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.779954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "24395675-4262-4f65-b0c6-3bf6830bce42",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "24395675-4262-4f65-b0c6-3bf6830bce42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.779661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "f8b874de-1ffd-413b-a533-fdc552f28ae3",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f8b874de-1ffd-413b-a533-fdc552f28ae3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.779644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "93c7de46-536a-461f-8d90-2c6ee46c41c1",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "93c7de46-536a-461f-8d90-2c6ee46c41c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.779626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "8a4f9d11-7df2-40ed-b4e8-95164bb79b31",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 58.78805553608986,\n    \"commonTypeAlt\" : \"2cfh754az5jb6w5xry1ud0qrkhtl8ade7eyit8geqyxh3wwgl3qgzhq0iiou8jtov3nzcndmxk392osq4er1krk0rhkqt3l6246hp9ajcmfzxd5l4qgl2qwcmn1mzycfp4avo7v245li7jz2i31zw8r2ob2td8fhvbkae185wn\",\n    \"name\" : \"Daryl Wilkinson\",\n    \"id\" : \"x249\",\n    \"script\" : \"tb2tqlwrg80psh45h2i1h0cmit3a15ahz8zub8gf1qobhc98k2lfnlp0xc2un8ofcnitg\",\n    \"commonType\" : \"vajd3a3c5owofb1840gv2t1nopdz3q1iyze4ot8nqm4331xyzx6ol4yyhko2mvlfm0pk62109wo3iu9gu41e04nm7us06tqmr\"\n  }, {\n    \"score\" : 24.128054694628386,\n    \"commonTypeAlt\" : \"fyszp9v5rtaprfke5ryzpi66zb9wynefe4rug3xlcycaw98zoehbmwyt0p1icfvwrdqnqj50in7acc8gp19ukk3onhkljpa2148ll7jlhc2kfbn141\",\n    \"name\" : \"Lowell Reynolds\",\n    \"id\" : \"975x\",\n    \"script\" : \"qlcq3w5xd8u1ij6iq5o06emdhbk401ji83pyomecy8vl4bb77szpmlkjdagoq8ajhsn4s7tw65b9im4qh9tyjs6fjxx59464pm2goujdy3esj5sa3kvru0xxyv7nqqvxfw8r283eh9wjp7j0ye50pkzbm0hq\",\n    \"commonType\" : \"mp1u4c0cd9dtglku4fbdshfnsmlp7e3yxmlmt0mfwn0lwtlqr2jv41js6yhv9bssagyrht706u7b5ryfzn9c2oq1ldx2yaarlly2mmbymucjf1qw2qdcv0buomg4vd6m667t4v1eai6dfhjm2er73fgahfurn73dgrgly12zw4p5gamgh0r2gway\"\n  }, {\n    \"score\" : 32.444067573823446,\n    \"commonTypeAlt\" : \"5moznniayn94slq7sca91akx3a5pbhm87h5elxyvatozqi1l65if1pc3hgdgoscubu819rzpk76c\",\n    \"name\" : \"Criselda Schuster\",\n    \"id\" : \"9r93\",\n    \"script\" : \"u8pn2ywl1xk2ldw9cduohfcqg11bw0vxl7llck1j0vz6f\",\n    \"commonType\" : \"lsjb9c2wzpuaanz34w5vprhja8x2oiafeo36kx248i7ub7pxwn56gs2da3usrk86ejjtevkdko97kcsfxmmyhhxvwomogr5qppz7f72ht\"\n  }, {\n    \"score\" : 66.42080954985178,\n    \"commonTypeAlt\" : \"7jlskefkwzlos4wurgunqc3vfd495q0p7n9lfwunjfr14ttok4xvqif8kmw5hgdl5rryiztao6xyqgcbsin1lfm7ijhc0hy8wcz2mjhu9xewgtg\",\n    \"name\" : \"Mr. Louella Lind\",\n    \"id\" : \"f761\",\n    \"script\" : \"a0qjmfp1f52e3ohndvrit78xqet62zqmde2arhpucuvp7gfmu05pavqhfde60ednpj7ypt95mp6p4vanflqjp4xooy4d8j6auhivm49m3kv5pyy3m68cdyvgdgedn5mhwyex7d5tie3aulfiob4s4oafri4ldtp544oh7pwq329a9fto6oswji\",\n    \"commonType\" : \"1kr68ylom76emqrh050alnp3elxzooopkti2x91l38cpca2aiaqw43x2mbm7sqrr6dx4emtkvhmjm03blrqoverh743pda26n1ruaxzgjv1vp11eht4adts8bfqitycvbvyo9x0fng12bpgo5ps8b3kjkg0pj2uz1\"\n  }, {\n    \"score\" : 39.05333542180729,\n    \"commonTypeAlt\" : \"n55o4px1ay1m33vaojh3p8pygg3vkyfj93i3zn5y72m017kjigu4apcmgvfa3a2u239iykm6nq2tpgnv65l95cjydps6x5qk8ijmuh3wux2qa1gqlnbyjg5okwrsfmlnd9\",\n    \"name\" : \"Cedric Witting\",\n    \"id\" : \"thv8\",\n    \"script\" : \"5o9bpx\",\n    \"commonType\" : \"502e7ot3a9yno3odxoih6d6miswk9v4s26c90jrm9\"\n  }, {\n    \"score\" : 76.96948544289899,\n    \"commonTypeAlt\" : \"hvsztnheg9pko41hrnjb111uyzdswt36k9v5eu9jqxjndhycl4iiy7knrj10hjl8a6tv5docd2xadgussbtnn53916rbi90ij377tho14g4x8lh4dgi50oxhqg8ozek27t1vz6m\",\n    \"name\" : \"Yoshiko Paucek\",\n    \"id\" : \"wo94\",\n    \"script\" : \"iw3itqtf75e5ud1eda57av6wg2g7wxywwdvollxrt2ztltpgxxawug6ztp0sulfvk8scodae936n3mzuphncx0lj2979duwep5dh5fodsbeco7sx4yzv\",\n    \"commonType\" : \"8aasay2hx2gn2j41tv0f5gqgdmw3my8aybs0bjzie07bwciiva5562c4edbml7zc821pl0sqw0uwkukava3963coudtlvjyovvipxidcko3iymo76lc8dq7dqxt3mrw53yimdor5ai4tyni6fo68v4gnmmsokfdgjyjnq2h90oalohc2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a4f9d11-7df2-40ed-b4e8-95164bb79b31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.779566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "d7a8ad97-62ae-467a-97f5-cfce1cd79d40",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameType/33zbi6k1b46kwakax223ifhsxuoh2k64su6s0mfiybkj90ptw2kb7lmajxautqhurxdtti0elcgfhk4qsayh4g4",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d7a8ad97-62ae-467a-97f5-cfce1cd79d40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.776371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "30739e52-1e5c-48c3-806f-61d506685689",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameType/chbjwrvxgm5bztr5q",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "30739e52-1e5c-48c3-806f-61d506685689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.776258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "e0608f45-02b0-4e7c-8bf7-79d3c42dffed",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameType/9zyuj76",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 79.94090327181566,\n  \"commonTypeAlt\" : \"z5342tt2wsnag3zwnb7xfbihc1b7269psug6o2cfz6vvo32zhe9cnvgsgknhai02luscivgpwvgc1wvort52wpciz9xmchgbc5\",\n  \"name\" : \"Mrs. Mayola Bartell\",\n  \"id\" : \"7xwt\",\n  \"script\" : \"cg05srz0x7ezswmtls9fj6ejkq8vb4k1d9vlc1t0yj5q2d7z8w13c8pxn6uw17hgblb8s0qo7bb6hesa0hm693ppuz7skonncr8j17zcn3aernxp413m8m7vvadum2gp0kh5k0q4md67j\",\n  \"commonType\" : \"j8besf529u04wvg41qmu59sj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0608f45-02b0-4e7c-8bf7-79d3c42dffed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.773074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "e0390cd1-731c-401f-a98b-e4f6c743f745",
    "name" : "Activate/deactivate learning from a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/learnable/5vk2tapu5rlfzpq0y93p/false/4rzdf9yjkwn4ux3n2zv7vowqomh7twlb4g5kd9ih8pbf7kuyoa9p1ntvzmfx8nb4rhzpr9oqz88xh1ojpe8995urbcon7mrij15ihtmn97m8xjivdce5zh8zgh8lx5hpeuj9la17yrleyjolm0ig8gvry1k3uig8yepp8rc0asihh89iflktvon65w25n",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e0390cd1-731c-401f-a98b-e4f6c743f745",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.772799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "36d2f827-9942-448d-a629-dd6b29a69ef2",
    "name" : "Activate/deactivate learning from a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/learnable/knujymdvk6oqyqeh3vtn8m1zxtqgkxxjw6mddnzhbuvtpcmip6e/true/94mnj3227ff45gua7f7jn8ha74ylqi2ydtnxd75s0hc4bw27e8hzk8rr7pspowplb76kdo7lcvsd1d31uxf3ivdh4sclkivz183wumfpsbsww8mbvjxw6kls0wst7neay4b9ax3h54vhg2ymtm35jddl6aa08hv4nypehox3xktc05lo0",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"z5dxrdcdyckw37nk9958bhlucxxri88i7o7dyisgrfvc9bsjcce\",\n  \"partner\" : true,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : false,\n  \"admin\" : false,\n  \"disabled\" : false,\n  \"userId\" : \"7s49\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36d2f827-9942-448d-a629-dd6b29a69ef2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.772747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "6a0cd7e9-d959-46e6-a5aa-c501d49f33c1",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/wy7zf83h6vjynv85kp3ea9tqtxpi0d1yjy8nni9alaztzkhdko16n8c240gc3rb/gvdy5d2emeczk3cdkqnho0y23g81t4dmaiaq6sx9dd25k8ti4nkeot917l19cn3z2ewqu44hjt85yeipwzlpaxq3gy0s/Mario+Spencer",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6a0cd7e9-d959-46e6-a5aa-c501d49f33c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.772466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "5cc46699-18e8-477c-97e0-1a9bc072967b",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/yb608v6tdpcy/qe1nwccy5p2g3oufrnvro6bp9leir6yjh6cory8nbezuup2x8t433isdyedm75q6xe2h46zerrr5cq5q8bwiq7y9ylwlsody657if0dgteblla/Hobert+Ziemann",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5cc46699-18e8-477c-97e0-1a9bc072967b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.772393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "160c5ae6-f633-495e-975f-1a7fba812977",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/rpyiheqkzk4bl332wzrgu9ci6d8y4wwoefc60ywfqfk5d7ir24bm39kcfvtrh81gri0gxn15e4e6w12cd67t1gn2aol/atrz9s5ut7qxbv50maknje44/Zachariah+Bahringer",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedbackCredits\" : 4736799001655070288\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "160c5ae6-f633-495e-975f-1a7fba812977",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.772311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop",
          "schema" : {
            "properties" : {
              "feedbackCredits" : {
                "description" : "Number of units recredited as per feedback loop successful classification",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FeedbackLoopOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "a0e69c81-35db-4114-a98f-c61e815bd107",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a0e69c81-35db-4114-a98f-c61e815bd107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.77218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "16260a79-8b7c-412d-b49a-0338db064432",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "16260a79-8b7c-412d-b49a-0338db064432",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.772163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "43603016-abee-40d4-86b8-fba5b490ec9e",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "43603016-abee-40d4-86b8-fba5b490ec9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.772144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "7f4b8571-54a3-4266-9f85-da097d6f672c",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 9.88023305370667E307,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"6669\",\n    \"script\" : \"sxmqbsyxmn8rw7ikwhbtzw5fkgibeqw9zbd3p7sclwe7rsxqx0z51h4hetx13bdkmd2rsg1mqewb2kl8w5bfb3sn4pmt1mgtfmq3mc6ius9t7qgd7zkj991q\"\n  }, {\n    \"score\" : 6.198630347042632E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"lrma\",\n    \"script\" : \"0k3p15ttqea8tejvvjbz3tqxiyr7v37klv7gno8\"\n  }, {\n    \"score\" : 4.570542383692821E307,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"9cp7\",\n    \"script\" : \"59illf2nlmv8fs5a4mimqym59ed5iiy9yqplv\"\n  }, {\n    \"score\" : 5.794963484096408E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"mxsv\",\n    \"script\" : \"l7onjsa9vmkmc8\"\n  }, {\n    \"score\" : 7.606104126117202E307,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"u56y\",\n    \"script\" : \"b4loj1xhfdr6zflzufqbclfn8pjsjnpsrwl704kaonllkocni4qfms4uqi5893vst7ykb402s49lv3ig2i1q0v4aglj97zx3g0gblmhnymu4uwy29tf8y9rc\"\n  }, {\n    \"score\" : 1.093869688036895E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"roi9\",\n    \"script\" : \"t39qf2z681gnphsj7kvxfsae0r5hmugyeangxpfgfnf2ajcr8v5mqjq1lnw3neanbrrsf2ogog548\"\n  }, {\n    \"score\" : 1.408315568524306E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"748g\",\n    \"script\" : \"sal7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f4b8571-54a3-4266-9f85-da097d6f672c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.772113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "109f8b0e-0af2-4fd6-a174-bc945b3867ce",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/ol3lrpahtyubj8tohhef4mgykjk6k4q9jl9tvgofpak1n0fpa67otndkrnmn9dwsnf67tctt8ujer7hsnepl1jrdvfqlsx00izuoqdxld1lb1i8lgf4bfpv831g1gxfv2dxbhmtl/w87rda0ieyojzb94onz17y6cxjxk79n075sp8ewkwdfbi69ubi62rve283ry3fwxnbmyq4p70b93/Sebastian+Littel",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "109f8b0e-0af2-4fd6-a174-bc945b3867ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.771359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "b898513f-292d-4a28-b45d-5d17d8eaf579",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/31pidhuxum65v6r5mjqoib0ud73koupoiagz91zym7gl5az8al2ovmz8mloltdy5hl65011f9cql7y10pfr59r5ifefudzoutwrrfoc5d9cbeb3yv3/hu055avm0ml1wx4m6a6kd9fwwsm2vwu79344m44sgqax4fky55ixcsxkqjo37zh0zahcchs289gxxlwz8t8sm0c6avavv9e9wnm3z9v8o0jlp/Basil+Terry",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b898513f-292d-4a28-b45d-5d17d8eaf579",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.771284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "78a2206e-84f0-468b-919e-3134d922c333",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/uv5n4vk0ejmlk0cdjxf7lhftayp52qm5osci/di04ox4v6qfqm6bv6amd5z1gfth3azojhgq9g0op2wfzv11w6xwrs1hhncgaazb2q6t0a60fodamroxeqb8szweshuim79kby16sb7frmrf8bzlw3kp4m4d4khuynq56scklmjnksz7n/Tosha+Boehm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.4447715372010882E307,\n  \"matchStatus\" : \"Match\",\n  \"id\" : \"gnr3\",\n  \"script\" : \"09adee4zgil3kd6fo6uvntdircnykstuy8zxoedj46tks1jdw29n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78a2206e-84f0-468b-919e-3134d922c333",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.771192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "3875e1fb-929c-4b6e-abd6-1dce67b1f273",
    "name" : "Romanize japanese names, based on the name in KANJI - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3875e1fb-929c-4b6e-abd6-1dce67b1f273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.770929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "58c2eff1-914d-4977-8a8e-2ff93f8b2810",
    "name" : "Romanize japanese names, based on the name in KANJI - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "58c2eff1-914d-4977-8a8e-2ff93f8b2810",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.770911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "f2ef581e-150c-491a-a9e0-d3518128ea3e",
    "name" : "Romanize japanese names, based on the name in KANJI - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f2ef581e-150c-491a-a9e0-d3518128ea3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.770894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "d4ee074e-0cee-4217-8c36-adaf83dd95c6",
    "name" : "Romanize japanese names, based on the name in KANJI (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Ashlyn\",\n    \"lastName\" : \"Ortiz\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.56204476270927E307,\n      \"candidateName\" : \"2022-08-14T14:44:17.769717Z\",\n      \"probability\" : 1.1194365867880323E308,\n      \"predScoreFamilyName\" : 6.495339020908894E307\n    } ],\n    \"orderOption\" : \"15d0lei40sm7ywljxfj5\",\n    \"id\" : \"33j2\",\n    \"script\" : \"x75mn2uhsan1xa5lvto2fppp68i8fx3gvr237v8r4jbceopasw\"\n  }, {\n    \"firstName\" : \"Bernice\",\n    \"lastName\" : \"Hirthe\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.178122490418933E307,\n      \"candidateName\" : \"2022-07-11T12:45:17.770002Z\",\n      \"probability\" : 9.696638477639399E307,\n      \"predScoreFamilyName\" : 5.997689877529166E307\n    }, {\n      \"predScoreGivenName\" : 1.2135758507642382E308,\n      \"candidateName\" : \"2023-02-25T12:34:17.770055Z\",\n      \"probability\" : 1.168360099631089E308,\n      \"predScoreFamilyName\" : 7.383633396358104E307\n    }, {\n      \"predScoreGivenName\" : 4.2560610376558576E307,\n      \"candidateName\" : \"2023-03-03T11:50:17.770097Z\",\n      \"probability\" : 1.1887769016966989E308,\n      \"predScoreFamilyName\" : 1.2275829900953233E308\n    }, {\n      \"predScoreGivenName\" : 1.1811343803517974E308,\n      \"candidateName\" : \"2023-02-15T13:58:17.770139Z\",\n      \"probability\" : 8.097931485528398E307,\n      \"predScoreFamilyName\" : 5.9946295113806756E305\n    }, {\n      \"predScoreGivenName\" : 4.810675311379128E307,\n      \"candidateName\" : \"2022-08-19T12:34:17.770181Z\",\n      \"probability\" : 8.221979332239739E307,\n      \"predScoreFamilyName\" : 4.769628790869728E307\n    } ],\n    \"orderOption\" : \"6shgn4znlzj7mbeq6gh8r\",\n    \"id\" : \"1784\",\n    \"script\" : \"ye0wugqxq2rj8z8jqh615zzftdzjcip5k7x0r37um92guibpj003qq943fu34hbny51tqdjxzzp8m69dmrsewtzykabgm2ujrjl9vy9f4wyrihepn\"\n  }, {\n    \"firstName\" : \"Fonda\",\n    \"lastName\" : \"Kemmer\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.141289435830894E307,\n      \"candidateName\" : \"2022-08-23T13:41:17.770374Z\",\n      \"probability\" : 1.617456894445806E308,\n      \"predScoreFamilyName\" : 5.555195521650782E307\n    }, {\n      \"predScoreGivenName\" : 1.7890437041999592E308,\n      \"candidateName\" : \"2023-03-14T13:36:17.770416Z\",\n      \"probability\" : 4.210654156013782E307,\n      \"predScoreFamilyName\" : 9.454317945073978E307\n    } ],\n    \"orderOption\" : \"v0gycgidha9gx72aojx9ik1yyfnppxrrc9hjyb8dppha17fauimbwdmtq0mcj7uveffcnkmpgtdsm0921f7zj62f4cvj0955ixg\",\n    \"id\" : \"4y36\",\n    \"script\" : \"8uf3fjbdh305ryoy9g0piy7bax763hvagz\"\n  }, {\n    \"firstName\" : \"Tracey\",\n    \"lastName\" : \"Legros\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.659220259182506E307,\n      \"candidateName\" : \"2022-06-10T13:22:17.770609Z\",\n      \"probability\" : 7.869124838185547E307,\n      \"predScoreFamilyName\" : 1.1685503452923841E308\n    }, {\n      \"predScoreGivenName\" : 1.494626179938081E307,\n      \"candidateName\" : \"2022-06-02T13:19:17.770651Z\",\n      \"probability\" : 1.676247893045035E308,\n      \"predScoreFamilyName\" : 1.3897339444380883E308\n    } ],\n    \"orderOption\" : \"0ci83rd4cq362mlcgrhmukpyrg9p8s42jpekv2xxcn30jgaft9ba5x97zrtj6dpje6ed1p75hcfvk9qfem54309b90jrlhy38nsckdq9un46z2i09wty0d1th9cuh9syp\",\n    \"id\" : \"7q5w\",\n    \"script\" : \"3438u20l1wq6iespraec1p1ki5x0xwhygdvsm8t5nogvh5fph409zsbvmnsek58tmdbvepmsq1wbhlfkt4o75w34y7impthy\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4ee074e-0cee-4217-8c36-adaf83dd95c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.770858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "81243cc5-ecf7-4fec-bbde-5cc5860674dc",
    "name" : "Romanize japanese name, based on the name in Kanji. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/nrroxgiur5g5gfcpadzfuw2p9ne6llyphxndtbl1hnlpkav1/xrd4nzrb7shldrow4kfhjpm8ul4hbqd3a4iatscoax7w3fs1vmdeftzeo9bq0wabc0ew05hxfdgpbgz5pgtpmg2mx6w7cp7l2dyas6fspovjp3u15amr8toa1k948aqcdom89wtqdiy34zjww35fxhsqlbkb1r99dp6i32wqqjjz2sljlxyg9re88yytxa3jx01g25",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "81243cc5-ecf7-4fec-bbde-5cc5860674dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.769618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "d0fcbb0f-ac44-4053-a45e-1b3d2bb49573",
    "name" : "Romanize japanese name, based on the name in Kanji. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/sc1qflr383dzji4ye0o025wqfvkt0vzc4brmdnf4zy32xib4dgyw2zunwg5czbmivh37wdriny5iueb3m60m6ap7jknfzh9kyv8zqb7dvaoz6oh1sxxf6fb206u5322b94vtdc39rjrn52vprpju5u34wuxqtbq520fzi68qw7w3eln7/c1dyvu2er753xkd6snuvjflc7lv1xuc85cxofaaczfuuuxkpj3uk0ilspwtefjtbja3eu504wjuqmgvittrr52b9vewuyic8xc",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d0fcbb0f-ac44-4053-a45e-1b3d2bb49573",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.769575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "84e6cc64-b472-40ce-9bb8-ead197b60e75",
    "name" : "Romanize japanese name, based on the name in Kanji. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/omzksm6903pxpemypwyqx5jh87599xic6g6qtfl28v02bdo7psn0dpfo06pvqzrk1jz1hekspl2mj4agw4c1vpajcyqx93fihhkxtg7khzasz6pjvgs/znfbpxfbi36419bmqd6nfqqcsrwn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Carlo\",\n  \"lastName\" : \"Klocko\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.630318358848409E308,\n    \"candidateName\" : \"2022-07-20T13:08:17.769189Z\",\n    \"probability\" : 1.243185141918094E308,\n    \"predScoreFamilyName\" : 1.4461180826301662E308\n  }, {\n    \"predScoreGivenName\" : 1.7464075237278844E308,\n    \"candidateName\" : \"2023-01-23T11:46:17.769233Z\",\n    \"probability\" : 4.133901018948926E307,\n    \"predScoreFamilyName\" : 1.5860578096295394E308\n  }, {\n    \"predScoreGivenName\" : 1.743029468276352E308,\n    \"candidateName\" : \"2022-05-14T14:40:17.769275Z\",\n    \"probability\" : 1.0210987798593645E308,\n    \"predScoreFamilyName\" : 8.456284164138107E307\n  } ],\n  \"orderOption\" : \"1zsuvgiggl7amlofblemldu0lohjqkj2jaqma5vi01o2motbqpljuhmbaj5vyjf130z678hucljvipk1h2u\",\n  \"id\" : \"00k4\",\n  \"script\" : \"d8w0sn9huf9c36qk0gfgjn5nqzfynazqqczeztekywgs9wzdljpxpqjet74ybufvcvxvt69co5vtjzws56wk53grcui1poc5nxuojjl3tme3uau9gz8tmsgyea7rtd5yzhb60nrgruhi5q0rqcx0x3451casgw8m3seb5eb1vjsupdo7uigl548xfkzcu1zeti\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84e6cc64-b472-40ce-9bb8-ead197b60e75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.769518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "a90b0529-65ea-4e32-838d-d371a1934d15",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a90b0529-65ea-4e32-838d-d371a1934d15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.769076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "c1d2e434-a0f6-414f-a8e3-e7f4118deb30",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c1d2e434-a0f6-414f-a8e3-e7f4118deb30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.769057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "96464bf5-a643-4953-aa74-b5c0d074b334",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "96464bf5-a643-4953-aa74-b5c0d074b334",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.769038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "088fcb00-3706-4501-8f00-8ee444c51b7b",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Amie\",\n    \"lastName\" : \"Breitenberg\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0201539772857757E308,\n      \"candidateName\" : \"2022-06-21T15:15:17.766028Z\",\n      \"probability\" : 1.5197935229654421E308,\n      \"predScoreFamilyName\" : 1.3337926464960637E308\n    }, {\n      \"predScoreGivenName\" : 5.822142230541724E307,\n      \"candidateName\" : \"2022-10-23T15:01:17.766071Z\",\n      \"probability\" : 6.094650579446026E306,\n      \"predScoreFamilyName\" : 1.2060282545611606E308\n    }, {\n      \"predScoreGivenName\" : 7.917781355402841E307,\n      \"candidateName\" : \"2023-01-12T12:20:17.766115Z\",\n      \"probability\" : 1.2816755358883878E307,\n      \"predScoreFamilyName\" : 1.146256909949839E308\n    }, {\n      \"predScoreGivenName\" : 3.802176167175394E307,\n      \"candidateName\" : \"2023-03-18T14:24:17.766157Z\",\n      \"probability\" : 6.398233221694279E307,\n      \"predScoreFamilyName\" : 2.478636550361934E307\n    } ],\n    \"orderOption\" : \"goz40ukhean1tsz38b3fb6agmea42zryn5ej654f0reen7qezlwu2bapy5enokj5rgz9ytj8zh0bdnf5pwgb9y13uruzow5ikr0l2xyotknc0kbpukn4uw5qlsuumcppq26p48437f81yfso5ilzg3yrd7p6qezzoso3uk12gb4ddalxrqeq3ospnkxcdnkjj\",\n    \"id\" : \"r4k8\",\n    \"script\" : \"xsa9ycbe7km7s222rvlubgnz4rl47vp2bzp1a7y87k4e\"\n  }, {\n    \"firstName\" : \"Tilda\",\n    \"lastName\" : \"Feil\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.4835176453319097E308,\n      \"candidateName\" : \"2022-12-25T14:36:17.766364Z\",\n      \"probability\" : 8.678740392913321E307,\n      \"predScoreFamilyName\" : 1.3300960898749643E308\n    }, {\n      \"predScoreGivenName\" : 1.322193712874035E308,\n      \"candidateName\" : \"2023-01-05T15:01:17.766407Z\",\n      \"probability\" : 4.999365780147614E307,\n      \"predScoreFamilyName\" : 3.500693731192477E306\n    }, {\n      \"predScoreGivenName\" : 3.2011586961880646E307,\n      \"candidateName\" : \"2023-02-16T15:25:17.766448Z\",\n      \"probability\" : 9.239082621188593E307,\n      \"predScoreFamilyName\" : 1.2823267153971715E308\n    }, {\n      \"predScoreGivenName\" : 8.883834332465926E307,\n      \"candidateName\" : \"2022-10-15T11:52:17.76649Z\",\n      \"probability\" : 5.430087248955937E307,\n      \"predScoreFamilyName\" : 1.4495152878346814E307\n    }, {\n      \"predScoreGivenName\" : 6.978685838465227E307,\n      \"candidateName\" : \"2023-01-04T12:45:17.766532Z\",\n      \"probability\" : 5.381087829048262E307,\n      \"predScoreFamilyName\" : 1.2039225880445508E308\n    }, {\n      \"predScoreGivenName\" : 3.2884516144860766E307,\n      \"candidateName\" : \"2023-02-23T12:46:17.766574Z\",\n      \"probability\" : 1.62049789823215E307,\n      \"predScoreFamilyName\" : 5.275182753231744E307\n    } ],\n    \"orderOption\" : \"fns28xcdbmspaez93mj54221gdaw4216jbs1cy6831l5j2tbj0gk72bhmacaq7sa8cg2bw7igij0chqiiqkk33cz00vlnp8kv2riy4xjc9mvibawh6glmnxd3imt0g68zq2x9eekz79qa42ffq7a23a4aw3rvw4qkjleohlv4v58a\",\n    \"id\" : \"q22f\",\n    \"script\" : \"s7tur12xeuy7kxvd36zeyl8gl009\"\n  }, {\n    \"firstName\" : \"Jenni\",\n    \"lastName\" : \"Bernhard\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.969266989951099E307,\n      \"candidateName\" : \"2022-12-30T13:18:17.76677Z\",\n      \"probability\" : 1.1889747986928328E308,\n      \"predScoreFamilyName\" : 7.768013204818969E307\n    }, {\n      \"predScoreGivenName\" : 4.678201168933008E307,\n      \"candidateName\" : \"2023-01-17T12:36:17.766813Z\",\n      \"probability\" : 6.359511941938638E307,\n      \"predScoreFamilyName\" : 1.6673245733198925E308\n    }, {\n      \"predScoreGivenName\" : 5.092388503747201E307,\n      \"candidateName\" : \"2022-12-21T14:38:17.766856Z\",\n      \"probability\" : 1.3465879048448988E308,\n      \"predScoreFamilyName\" : 1.5446867215269427E308\n    }, {\n      \"predScoreGivenName\" : 3.957809481114921E307,\n      \"candidateName\" : \"2022-05-04T12:49:17.766899Z\",\n      \"probability\" : 1.814872728680163E307,\n      \"predScoreFamilyName\" : 1.3903857066800284E308\n    }, {\n      \"predScoreGivenName\" : 1.7071262927864886E308,\n      \"candidateName\" : \"2022-11-01T12:23:17.766942Z\",\n      \"probability\" : 1.3834966343863017E308,\n      \"predScoreFamilyName\" : 7.459600260920523E307\n    }, {\n      \"predScoreGivenName\" : 6.896440061517266E307,\n      \"candidateName\" : \"2022-05-10T12:32:17.766986Z\",\n      \"probability\" : 1.4787861381900832E308,\n      \"predScoreFamilyName\" : 1.6821146884045558E308\n    } ],\n    \"orderOption\" : \"pyswexae2sk1cvtd2vsuu21l71ba8s21h1m\",\n    \"id\" : \"3ij4\",\n    \"script\" : \"m20poltmvc11ddrwqam1j6bq3yisg01pnhahgjwwbzkjep3ooxsbkb1vsmarf2cn2\"\n  }, {\n    \"firstName\" : \"Horacio\",\n    \"lastName\" : \"Lehner\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.6482871850830074E308,\n      \"candidateName\" : \"2023-01-10T14:01:17.767174Z\",\n      \"probability\" : 7.014439729575692E307,\n      \"predScoreFamilyName\" : 9.292425560828745E307\n    }, {\n      \"predScoreGivenName\" : 1.3683697566282647E308,\n      \"candidateName\" : \"2022-07-05T12:44:17.767216Z\",\n      \"probability\" : 4.963787365478576E307,\n      \"predScoreFamilyName\" : 1.3304041385572987E307\n    }, {\n      \"predScoreGivenName\" : 1.6695065159109517E308,\n      \"candidateName\" : \"2022-08-07T15:30:17.767259Z\",\n      \"probability\" : 7.434702688135097E307,\n      \"predScoreFamilyName\" : 1.3170953040053042E308\n    }, {\n      \"predScoreGivenName\" : 1.4936357431338638E308,\n      \"candidateName\" : \"2022-05-01T15:00:17.76735Z\",\n      \"probability\" : 1.3933254412301511E308,\n      \"predScoreFamilyName\" : 4.979857514166113E307\n    }, {\n      \"predScoreGivenName\" : 1.0411602463053349E308,\n      \"candidateName\" : \"2022-12-23T11:53:17.767402Z\",\n      \"probability\" : 2.813070719922948E307,\n      \"predScoreFamilyName\" : 1.0951146923723615E308\n    }, {\n      \"predScoreGivenName\" : 5.616923019137184E307,\n      \"candidateName\" : \"2022-12-15T12:54:17.767814Z\",\n      \"probability\" : 2.488322613161962E307,\n      \"predScoreFamilyName\" : 3.4928585301641097E307\n    } ],\n    \"orderOption\" : \"k6fgpyogfjv5r8dogha49qgzrw33xyegs1x6tuw0d65hf0zcykfwrcj1dvml4h23386pke8u3queimubkk0y0nx3lod7lityy30wpatluhmhdlbo4ps3l8h44vyoi38dp83gomxdph4ie\",\n    \"id\" : \"4rej\",\n    \"script\" : \"1tzxy94lmlszegfhbqshfm2rds1ln62n6zktt8p8bvxp5ah5po5ejjkvpa5v4jgoa9xo68514qw9ee4xk447az4jnv5uyw43lh\"\n  }, {\n    \"firstName\" : \"Genevie\",\n    \"lastName\" : \"Howe\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.297574008038446E307,\n      \"candidateName\" : \"2023-02-18T12:37:17.768079Z\",\n      \"probability\" : 8.07066027461797E307,\n      \"predScoreFamilyName\" : 5.42794625543811E307\n    }, {\n      \"predScoreGivenName\" : 6.589248977218698E305,\n      \"candidateName\" : \"2022-06-21T11:46:17.768124Z\",\n      \"probability\" : 5.487951935542557E307,\n      \"predScoreFamilyName\" : 1.4478003924323248E308\n    }, {\n      \"predScoreGivenName\" : 5.113229454570977E307,\n      \"candidateName\" : \"2022-05-24T14:26:17.768167Z\",\n      \"probability\" : 7.938705715719792E307,\n      \"predScoreFamilyName\" : 1.4273061363779482E308\n    }, {\n      \"predScoreGivenName\" : 1.1105586025386584E308,\n      \"candidateName\" : \"2022-11-16T15:34:17.768208Z\",\n      \"probability\" : 1.3656558592549402E308,\n      \"predScoreFamilyName\" : 2.7978766338164835E307\n    }, {\n      \"predScoreGivenName\" : 4.911952275601128E307,\n      \"candidateName\" : \"2022-06-05T13:40:17.768251Z\",\n      \"probability\" : 1.2196221619116551E306,\n      \"predScoreFamilyName\" : 3.6173732596609644E307\n    } ],\n    \"orderOption\" : \"og5xiuzr2nhhg22bywqc6sbjfen7o0xu7d6fxcw4j2rnds4trf3qefh04jw5c3f4t01cfple9zw6tyocdf9kmuuu85qemcdx0l39r8zqgrwdtj9796bjju22rs1w12247zystphv89jckzgzzpto0dw80jds\",\n    \"id\" : \"82c9\",\n    \"script\" : \"bermzsneufouj0st6ax0srf4u5urffo46iv7gjlmrnq85qrnxvyjfd59\"\n  }, {\n    \"firstName\" : \"Raelene\",\n    \"lastName\" : \"Towne\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.09880422400379E307,\n      \"candidateName\" : \"2022-06-03T15:11:17.768443Z\",\n      \"probability\" : 1.2432066422348335E308,\n      \"predScoreFamilyName\" : 6.33297955891349E306\n    }, {\n      \"predScoreGivenName\" : 8.930951697295314E307,\n      \"candidateName\" : \"2022-10-29T11:57:17.768486Z\",\n      \"probability\" : 6.299087726589859E307,\n      \"predScoreFamilyName\" : 1.3096677391247403E308\n    }, {\n      \"predScoreGivenName\" : 2.797051917853844E307,\n      \"candidateName\" : \"2022-10-24T15:12:17.768529Z\",\n      \"probability\" : 6.791033108266395E307,\n      \"predScoreFamilyName\" : 3.865548624161616E307\n    }, {\n      \"predScoreGivenName\" : 1.4678781802943365E308,\n      \"candidateName\" : \"2023-01-15T13:22:17.768572Z\",\n      \"probability\" : 1.622926297075489E308,\n      \"predScoreFamilyName\" : 8.79599455190864E307\n    }, {\n      \"predScoreGivenName\" : 8.378696886459971E307,\n      \"candidateName\" : \"2022-07-04T11:53:17.768615Z\",\n      \"probability\" : 1.2160680290051633E308,\n      \"predScoreFamilyName\" : 1.7645964758291587E308\n    }, {\n      \"predScoreGivenName\" : 1.4530702629068867E308,\n      \"candidateName\" : \"2022-09-16T12:59:17.76866Z\",\n      \"probability\" : 1.1073252458032535E308,\n      \"predScoreFamilyName\" : 6.778581723178094E306\n    } ],\n    \"orderOption\" : \"fzo4s2vpa9q23ayzt736uw2xlj0vx30rcqg6qata4il38iyevw6eijeumaw6j7pm8e75xkkw5pshb1xbdw2ktqlvgemd1zi2qktgh8kn6ue29sqnko6a\",\n    \"id\" : \"no2p\",\n    \"script\" : \"r0davurf6ea\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "088fcb00-3706-4501-8f00-8ee444c51b7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.768988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "df53e8ca-079f-457b-80b6-279195f4feab",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/lj8d5uigh324jjk9rv4zge07qfv5ncy8uh0urotuaybh8ukpwh4pgas9vo9sjzb58k/tswxbraunpxlxllq65192quji1o6wrxynzusejj994v6/Genderfluid",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "df53e8ca-079f-457b-80b6-279195f4feab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.765929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "32d8cf11-d577-49f3-91f7-ba689015ba4d",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/u8um9vqtgl7gff6jk9wk7xdue53tqco74sjl073s3t975irvh93myg7dkf0xc4qxdyaf7z742mmy8yh9s8b2udash1z0hs3seskgyiybpiwtbqnm0e4apbzr0z49wdrc7rh9hc1v9ztw82ppmrqvpnkp6g37ve/z1p7hktpiro0rwld9l8x19qoe1lpsg5i3h375hysxezs9xnbrx6l/Non-binary",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "32d8cf11-d577-49f3-91f7-ba689015ba4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.765872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "8b1d92b5-4be5-4d71-8c66-b8150f5f93fe",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/v8v0pt45p4dzyv73oprmg91tiwxgf82xto046470annxqkiy/4utdviggj41v9dazjx1qlkzsv6g4iw2eg47bz2kluh269zsgu0xry2me3y8g57fbs5mgn4uz3um47bq7wslki4hwisd9stl105iz4mv21qxqfh6d0/Genderfluid",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Yvone\",\n  \"lastName\" : \"Witting\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 2.76245206790773E307,\n    \"candidateName\" : \"2023-03-17T13:15:17.765501Z\",\n    \"probability\" : 1.5772559485302295E308,\n    \"predScoreFamilyName\" : 2.1800583890670434E307\n  }, {\n    \"predScoreGivenName\" : 7.821482979890223E307,\n    \"candidateName\" : \"2022-04-28T12:48:17.765542Z\",\n    \"probability\" : 5.74875800069166E307,\n    \"predScoreFamilyName\" : 1.7252856462912063E308\n  }, {\n    \"predScoreGivenName\" : 2.9253904561403305E307,\n    \"candidateName\" : \"2023-01-01T14:02:17.765581Z\",\n    \"probability\" : 5.305311790950466E307,\n    \"predScoreFamilyName\" : 6.1262683179092E307\n  } ],\n  \"orderOption\" : \"7zdok8ofrzvtjs7ykksrktoi7sf2fr0kyy3r85evwkr0q71vbg39i17skmio3thqbpkims3ealvf5wyck3fd1zx7k4o5o2n44rkcx29u07num3uy2r1eanwrdw\",\n  \"id\" : \"gk62\",\n  \"script\" : \"n4djimt49k2mzylo6it3khs1v4a7ndh0hj2esl060ux86r3xfqaiuwdudpb70b0ys5pdzrrrlcdvtk8tuc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b1d92b5-4be5-4d71-8c66-b8150f5f93fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.765803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "d8d3afa0-ac48-4ef2-9259-89af3d10ed8a",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/nwx2ssalpjibz08mnqt3kipg6zbnv2r2egw8trpqcip1p5qoninht5abvg5v56hi1tx7jcp2w6a43bfid8ba1p648jantdujbaqzysex1jadvrjg5gmhyqiaqvku5lh6m75esi57ndjbs4hten/li7bu1t1t944l6b8c1fuby6td9gz9up5m6lkttcdxa7006pimdrgrilkn5",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d8d3afa0-ac48-4ef2-9259-89af3d10ed8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.765413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "2ceab28e-3425-42b4-8fb2-d9e10d160570",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/d7cde4h5mqy7aptgstrlxygsq4zcqm9qye6cacds8k6m1v7r/jv9504o7bmzqc2bb1zzjtvee51cxhh1g0c97b7shxn56dhci0sb324bcv3jknfhmrjk32ynu1es9orxov1rnsg5yy5ig3uyiburltkknk8fjfcwvl8i4xg6lpo7m62pwgviuwsmq4",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2ceab28e-3425-42b4-8fb2-d9e10d160570",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.765371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "34fdc2e7-77d8-4838-abe9-af84105d92ec",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/ym9fq3up4vyf5akybxeuu2njxk9zcc09yfcsmqzyrdbk59rvabkhe5kaf3zva0f4r826ba6stvtveuueqvcvhmyo691ej3ngasltx68zem485nprm1rl6atmu2eek95sjdgymjh1emkg577zaszxdshv3q3a4a5p34zf13wbsiht6nhyliix7/mp6nae7893sz63guzhd5xnncy5iwusbe",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Coleman\",\n  \"lastName\" : \"Lemke\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.1262708466739704E308,\n    \"candidateName\" : \"2022-12-25T12:33:17.765004Z\",\n    \"probability\" : 1.7458843544366473E308,\n    \"predScoreFamilyName\" : 7.516258057000086E307\n  }, {\n    \"predScoreGivenName\" : 1.7787055473050989E308,\n    \"candidateName\" : \"2022-12-12T15:13:17.765046Z\",\n    \"probability\" : 1.6580221247194247E308,\n    \"predScoreFamilyName\" : 7.150959826795842E307\n  }, {\n    \"predScoreGivenName\" : 1.4633369900818381E308,\n    \"candidateName\" : \"2022-10-26T15:27:17.765088Z\",\n    \"probability\" : 2.813224629533958E307,\n    \"predScoreFamilyName\" : 4.713382230894072E307\n  } ],\n  \"orderOption\" : \"m3efhaj5qmvdb54gmbsn60ug90ft8to9nhc5vjytiffh3yugbkwy02na8oaalnkfthiq6hythbfwfirgkwd2zv4drw8wyewzxa0h0u9gidjvgos8zzgux49wbxc\",\n  \"id\" : \"8ez0\",\n  \"script\" : \"gvf7j9kct97uwta8nalzmrhhuppdsvk3id6f8teaslla5kg06zezbolyvf37la0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34fdc2e7-77d8-4838-abe9-af84105d92ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.765316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "a833bb58-d902-4f64-8d33-de544816d899",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a833bb58-d902-4f64-8d33-de544816d899",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.764917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "4acbbb53-aabc-4a69-be7d-befa1614b1cd",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4acbbb53-aabc-4a69-be7d-befa1614b1cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.764901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "82671363-7636-4e13-b8e5-71beb0d10352",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "82671363-7636-4e13-b8e5-71beb0d10352",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.764882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "a85fd8ef-1b0d-40c2-b0c5-076eaff11bce",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Cliff\",\n    \"lastName\" : \"Kohler\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1270075167560216E308,\n      \"candidateName\" : \"2023-01-29T13:24:17.764622Z\",\n      \"probability\" : 1.0611101041736528E308,\n      \"predScoreFamilyName\" : 1.7760158592320045E308\n    }, {\n      \"predScoreGivenName\" : 5.4472288981684E307,\n      \"candidateName\" : \"2022-03-25T15:01:17.764675Z\",\n      \"probability\" : 1.7108895958976024E308,\n      \"predScoreFamilyName\" : 9.104502067897826E307\n    } ],\n    \"orderOption\" : \"iat0lahpw1lu2wb85xmhi48m9mwsq1en0tgl4zy09fi7w4z0nx5z9s60563v7ih1rerejcaamr8x8uuyhyxxibs2qy9ymylc90e9zyk4tf7yt9h7jlkit03rogmdd9coom507nlxz8cwf9gy1yw1z3znvh3cs740xrc1ftkngmpp2n2w757c\",\n    \"id\" : \"6h1d\",\n    \"script\" : \"rskyk4fb29pj0d86r5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a85fd8ef-1b0d-40c2-b0c5-076eaff11bce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.764853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "2f2e928e-01dd-4722-b58a-02ce56fdbdcc",
    "name" : "Infer the likely gender of up to 100 full names - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2f2e928e-01dd-4722-b58a-02ce56fdbdcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.764493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "2d79c990-6b68-44c3-998f-0d959cb57409",
    "name" : "Infer the likely gender of up to 100 full names - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2d79c990-6b68-44c3-998f-0d959cb57409",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.764476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "05ca214f-3694-4a74-bff6-28a38d250734",
    "name" : "Infer the likely gender of up to 100 full names - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "05ca214f-3694-4a74-bff6-28a38d250734",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.764456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "36de64ca-1ad0-4c8d-8333-c024ac5132a1",
    "name" : "Infer the likely gender of up to 100 full names (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.27531132572694283,\n    \"score\" : 30.541691296268525,\n    \"probabilityCalibrated\" : -0.014270516554893753,\n    \"name\" : \"Ms. Tayna Pfeffer\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"o11g\",\n    \"script\" : \"p9hb8fakbpulakggrc0l2iyd9wvfrbfds0regvgfhetkdzj2tzxzjywymjtwrc70uik4fh7wnno90w7i8ewuampgt7n4em93uwm1etejlx1xrwtufi2zdysdbu7aahsouwc2k6uwb6euq7\"\n  }, {\n    \"genderScale\" : 0.12062658605528997,\n    \"score\" : 37.43552915794817,\n    \"probabilityCalibrated\" : 0.9872923504938662,\n    \"name\" : \"Mrs. Robin Armstrong\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"cg5m\",\n    \"script\" : \"g4e3i7f4dyzvrfd6cwcvt01s1sg2aervtrore92idxm9wvla2z29yhr5q0o59cq5ke39shcwosdphcgr73s84e9d17xwdwz3ptw12kvjnkahqjnima1qj3zkh1rdc9hc1\"\n  }, {\n    \"genderScale\" : 0.5487926771474141,\n    \"score\" : 32.947952798140335,\n    \"probabilityCalibrated\" : -0.6261140997915915,\n    \"name\" : \"Jenice Hilll\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"t4le\",\n    \"script\" : \"j6rie3wtlwkof9bvkom2kskrihbihi0c6vay53uurizmr19pmj56wuzejrk267or7hzzbp45s22917bxfv0oclcqg4fhrptjl6ao6t93zm1xfp66zy8404u25wqa5gdso684src38ivd7isle2t6n2xjzjobdkfbticxvkj1385f626c\"\n  }, {\n    \"genderScale\" : 0.973191042691341,\n    \"score\" : 80.10334876999224,\n    \"probabilityCalibrated\" : -0.7638448844491916,\n    \"name\" : \"Charmain Towne\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"thnw\",\n    \"script\" : \"j7z26ue3i74cjxnux4z0dh1u1x8iqxadgd78t1hbejbxv402ybxhcwr5kjs6hjkmua3uhvmf5v8ih68cvalometvtxz5jisdgo9ntz3bcuzzxkh7h5koqyduzdqe2k\"\n  }, {\n    \"genderScale\" : 0.8500069546949227,\n    \"score\" : 54.19033376327443,\n    \"probabilityCalibrated\" : -0.2942613643419185,\n    \"name\" : \"Mrs. Gabriel Bins\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"5g8n\",\n    \"script\" : \"fgb3uyk6xnv2emfgspfkwq7re716d729ndjpazx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36de64ca-1ad0-4c8d-8333-c024ac5132a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.764412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "0d6cf670-7d30-470a-9b49-a782800ceb29",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Victor+Stamm",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0d6cf670-7d30-470a-9b49-a782800ceb29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.763381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "87250c9b-5538-4c25-a022-e4d8667b1efe",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Cheyenne+Keebler",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "87250c9b-5538-4c25-a022-e4d8667b1efe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.763328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "0c6ef049-218b-432a-94f6-6cb626d3ce39",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Arlean+Kuhic",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.5044199430742367,\n  \"score\" : 86.24762856634209,\n  \"probabilityCalibrated\" : -0.9488202355093893,\n  \"name\" : \"Debi Feest\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"45i5\",\n  \"script\" : \"tnyautgucz2esdq038averst1m2knofn3y8b3t2ueto1ksdlujzkmxf2al3gtdqt4lja8f3o0e0yyhtqmow6e64vi8gcg3zl4pqg7xgty4rabotyys4safm1vm0t8hfrfyjrcdxhk8r6aum6g3n6t7uj2s9gjoimd4ioya5z99agfijm359776wyzeyf4b3upvljt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c6ef049-218b-432a-94f6-6cb626d3ce39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.763257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "fde67ee8-98f2-4845-8691-d5fe2990e768",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fde67ee8-98f2-4845-8691-d5fe2990e768",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.762968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "cd531b93-c827-4243-aab1-b2326543f488",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "cd531b93-c827-4243-aab1-b2326543f488",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.762952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "5f6874f1-bfcc-4706-8808-426e80670e4a",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5f6874f1-bfcc-4706-8808-426e80670e4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.762932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "998365d9-beef-47c9-9229-a6f884fe14c3",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Renato\",\n    \"genderScale\" : 0.1029485075193628,\n    \"lastName\" : \"Moen\",\n    \"score\" : 80.66743779628598,\n    \"probabilityCalibrated\" : 0.294423622417473,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"g19w\",\n    \"script\" : \"34o9xje0g4hannxkz7zz2u1768553emtleapdv49hi2rvsfh38srixkvgljf52308m6acaxpdz6zf0e4ikoavt176f9tpf49ccgwzjveb70dwzxedxs8ttlitq0ooxgq20r72mpcby452umbbhrt9tapnyj\"\n  }, {\n    \"firstName\" : \"Floy\",\n    \"genderScale\" : 0.6670956699760708,\n    \"lastName\" : \"Koss\",\n    \"score\" : 71.98327304442704,\n    \"probabilityCalibrated\" : 0.3175707321548318,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"oz8j\",\n    \"script\" : \"kfuylbem7x1fkz3ykhzyf7zi\"\n  }, {\n    \"firstName\" : \"Kum\",\n    \"genderScale\" : 0.09106053961985339,\n    \"lastName\" : \"Wuckert\",\n    \"score\" : 57.582668252599014,\n    \"probabilityCalibrated\" : -0.1586780650108892,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"3801\",\n    \"script\" : \"72iy15t88kfq1aobelcfcfcvplg958kz6lpuznfbe9w5k5kz2l5m313qh10qrhpy0nop2mioh9fueye65hjjahn21bmvaeo2kb6xm82kmce0u41smxnywvibxhf3w2w4b85lj39q5qxrkb9b118v587cwg62iuubkvrtt\"\n  }, {\n    \"firstName\" : \"Shane\",\n    \"genderScale\" : -0.7274951716445139,\n    \"lastName\" : \"Roberts\",\n    \"score\" : 45.414370806593794,\n    \"probabilityCalibrated\" : 0.034336089050923,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"69np\",\n    \"script\" : \"9i8303ot99q2naqvunm4hd9b2z1d11xs7jfi6vz2p8rhskz06fi5poc45r89mwebm21jxx7nz35a9yi6\"\n  }, {\n    \"firstName\" : \"Rosendo\",\n    \"genderScale\" : -0.4424874600345863,\n    \"lastName\" : \"Dibbert\",\n    \"score\" : 16.574671089372515,\n    \"probabilityCalibrated\" : -0.19232498630050765,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"s278\",\n    \"script\" : \"poghoh647ve8cf95l98oewxlhya8anc2whuntxfey0748d5vgnusdz2x3ko8gbwjz9xh68uv576m6qrpczs6627c0lm42ve3mquc0tez\"\n  }, {\n    \"firstName\" : \"Leif\",\n    \"genderScale\" : -0.4841546795177625,\n    \"lastName\" : \"Fritsch\",\n    \"score\" : 92.82801621965947,\n    \"probabilityCalibrated\" : -0.9945355855380231,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"5m38\",\n    \"script\" : \"lnn4q0ugf63gmi2wmw2\"\n  }, {\n    \"firstName\" : \"Kaci\",\n    \"genderScale\" : -0.9351552466472202,\n    \"lastName\" : \"Heaney\",\n    \"score\" : 8.625748396915323,\n    \"probabilityCalibrated\" : -0.6547958510827503,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"8957\",\n    \"script\" : \"troe8lik9kxmut03reruz3yev5rgqyfjtazgkf2owpvjf0tvbaxesu5ryv0wvzedpf6fv02f3ojz537fixnaz5z0h958e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "998365d9-beef-47c9-9229-a6f884fe14c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.762887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "298558de-3e01-48f9-a774-788dd9a0cb64",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Wolf/Floyd",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "298558de-3e01-48f9-a774-788dd9a0cb64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.76181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "eb86e4ac-442f-46d7-8014-b054aa439ce7",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Bailey/Gonzalo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "eb86e4ac-442f-46d7-8014-b054aa439ce7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.761754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "90baf3ef-f9eb-466f-b5ae-1a91dcd6a34b",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Ullrich/Fallon",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Gerardo\",\n  \"genderScale\" : 0.06862214203970063,\n  \"lastName\" : \"Funk\",\n  \"score\" : 82.95918257597143,\n  \"probabilityCalibrated\" : -0.18072700557702226,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"srwb\",\n  \"script\" : \"9mt7h3x2ii0pvykozouseu659ehfjeqwbugsd5ipc1wvmzioowgp2vohf4tu2olrff6d5b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90baf3ef-f9eb-466f-b5ae-1a91dcd6a34b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.761687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "d0396271-c7f0-4e03-88ef-3d0fec82b68d",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d0396271-c7f0-4e03-88ef-3d0fec82b68d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.761424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "859f038f-40cc-4e18-8c98-8a972f02ed49",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "859f038f-40cc-4e18-8c98-8a972f02ed49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.761409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "316594d8-9a52-4e3b-a7b3-4c1126e673dd",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "316594d8-9a52-4e3b-a7b3-4c1126e673dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.761393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "c0129394-9f37-457d-af2e-6c6e45fcb09a",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Yahaira\",\n    \"genderScale\" : 0.2397893060763674,\n    \"lastName\" : \"Koss\",\n    \"score\" : 96.5444391892416,\n    \"probabilityCalibrated\" : 0.5640473598461133,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"xyb8\",\n    \"script\" : \"nu9eir5x9shsnub2isxkyzbycxo07d7h22fxfjf4x3sma95lckam2e6t7n7suhj3dy0uvqt82cgl28cqpngk8yjfywnv0o9q0o7bwh263jrwgobr2c60cct2ydy7hxqpuiizw72tlbprmznq6se5i\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0129394-9f37-457d-af2e-6c6e45fcb09a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.761368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "0106c1ef-48a6-4a81-aebc-7d05a5255e8a",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Tamekia/Greenfelder/0dkhbczmmsqwaju0w86iroir0xg6u9twa82jkvgeg1en74z89dk0wmvpwhp9rxz6kc1tzclgvcesd8vh8ewzbv0rrcuwaeag120z9vcen9sixe3su",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0106c1ef-48a6-4a81-aebc-7d05a5255e8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.761164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "0687e5f7-4d12-4140-bc38-4a36e4e96334",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Sara/Nienow/7uy951dvltnfsmhlkrtvguqpgvoibbz3paxf8m8brnud01jwrt6jwdkoopu3d2dr3v75u36xhc2rahqrw6fsm5be2cpuqsqlcpsi1sws0qa8k6xsze9qvao3qnlkb4tadk0ucfddn2hyfidjjlol5pu1l1",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0687e5f7-4d12-4140-bc38-4a36e4e96334",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.761098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "b65cafe3-8bd1-40f2-b67c-e9aa241c9f92",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Santos/Sipes/xeo64hkbhfcshmprdk3vt46qumy0qy04nol20klqtm6p0x1le1vgoaha0cswwauiq6d0z7v2omq9trbex61hqxiqv01li3kdrhytqwmaksq0ldrcs89z",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Roxie\",\n  \"genderScale\" : -0.5288230578997482,\n  \"lastName\" : \"Beer\",\n  \"score\" : 65.10405719262997,\n  \"probabilityCalibrated\" : -0.35556455634789264,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"gkp4\",\n  \"script\" : \"h0r\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b65cafe3-8bd1-40f2-b67c-e9aa241c9f92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.76102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "9035a231-91f9-4077-92ef-a01d30771972",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9035a231-91f9-4077-92ef-a01d30771972",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.760706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "a1c741ab-12dd-4256-84a0-0a23d684ad93",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a1c741ab-12dd-4256-84a0-0a23d684ad93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.760691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "e4fa09bb-ed75-45ec-b354-80c87ec11663",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e4fa09bb-ed75-45ec-b354-80c87ec11663",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.760673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "4d87aec4-0693-45ac-9649-c18bbf07fd81",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.6076420328940064,\n    \"score\" : 40.351405305508095,\n    \"probabilityCalibrated\" : -0.19151926049194956,\n    \"name\" : \"Rolando Zulauf\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"r0y1\",\n    \"script\" : \"ckhwvexf94vn7a62uyzfhxu3r4ntdiwd9esoqyx2o0bs8lg0xw9\"\n  }, {\n    \"genderScale\" : -0.42638976649756644,\n    \"score\" : 42.98117548324723,\n    \"probabilityCalibrated\" : -0.9562839971661621,\n    \"name\" : \"Cleo Kozey\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"15p3\",\n    \"script\" : \"v5krvi7qwrx3n6\"\n  }, {\n    \"genderScale\" : -0.9700066015436917,\n    \"score\" : 38.427944126324434,\n    \"probabilityCalibrated\" : 0.27699516178121875,\n    \"name\" : \"Shelia Raynor\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"8f90\",\n    \"script\" : \"akcopphnkx7s7h3r8hu0nd3ri31tq7tigf8buyloz9\"\n  }, {\n    \"genderScale\" : -0.5546518828121605,\n    \"score\" : 45.17999953412172,\n    \"probabilityCalibrated\" : -0.016960279137139045,\n    \"name\" : \"Mr. Leopoldo Oberbrunner\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"w97d\",\n    \"script\" : \"sfhi03wvel5iicnvo6pn35lsbptyjy8bqrk919ah22jhb9njxibq13lnur84pcxx1c2z9opuhowsew1c7hpyp1fwdnwq525ieptaa1s4q80xep4bgezsrxkzugwmlfobgje5rerqa\"\n  }, {\n    \"genderScale\" : -0.9762495902073012,\n    \"score\" : 90.10986141693891,\n    \"probabilityCalibrated\" : -0.08961871021658374,\n    \"name\" : \"Dr. Tynisha Hamill\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"r549\",\n    \"script\" : \"hkv9m96sl\"\n  }, {\n    \"genderScale\" : 0.2239373424277613,\n    \"score\" : 19.570480935488664,\n    \"probabilityCalibrated\" : 0.0542580338005334,\n    \"name\" : \"Miss Leif Ondricka\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"623s\",\n    \"script\" : \"kvyublqbtjlda361sbteqv33yric5n1nr8abq0cpnbjl8y64howk2sgtjps3n6uh470i74pr8xthku7d7q35u0vxthb43906y8ykz96m7ffskh9\"\n  }, {\n    \"genderScale\" : 0.8359746923032394,\n    \"score\" : 78.74249361813912,\n    \"probabilityCalibrated\" : -0.15603724441395195,\n    \"name\" : \"Homer Franecki\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"d74w\",\n    \"script\" : \"l504wfajh56i41\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d87aec4-0693-45ac-9649-c18bbf07fd81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.760642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "bc4fec3e-c1c0-4b87-aaf8-8311c6a57cc8",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Mrs.+Retta+Kling/mz8hx",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "bc4fec3e-c1c0-4b87-aaf8-8311c6a57cc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.759617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "0712f645-47ef-481a-b395-0e768b7e1b10",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Nicholas+Gutkowski/wds3s03bni0kl9pawf8xeyyatjb0moqpc4mup0lez1if1qmq9pwfa6xanf",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0712f645-47ef-481a-b395-0e768b7e1b10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.75956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "1d21a4ca-bcbb-49de-9938-5049c34af7bf",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Hosea+Batz+IV/dfp1dgeiyaw8f61tbj601v8doibp8y3x16umvjgpzgbdui2aoc4q1yhrscug8ynxorul2ya3wzmunrsi5m78r2t2d9ebf5emgzlrpp14neciygtq3eefgcom4vj0mityby6fxrhvuoihmefiwiq18re6nrurgxz30ph9p5e2fzbzo0gq2vawy03f09myi72mwq",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.011962492651440337,\n  \"score\" : 68.85147868760862,\n  \"probabilityCalibrated\" : 0.5807501782490521,\n  \"name\" : \"Letitia Tillman\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"zft8\",\n  \"script\" : \"qwz2ae8zpueyo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d21a4ca-bcbb-49de-9938-5049c34af7bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.75949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "686e44f0-f450-4670-9102-d20fbd0df063",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "686e44f0-f450-4670-9102-d20fbd0df063",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.759224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "925ef6a6-247c-4a34-87f1-50d83c1112e6",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "925ef6a6-247c-4a34-87f1-50d83c1112e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.759208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "b2744573-2cf8-4c8d-95f3-222fc8722cd7",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b2744573-2cf8-4c8d-95f3-222fc8722cd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.759192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "57873e81-d6bc-4e23-96ac-31c5e999b726",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.5091834159840773,\n    \"score\" : 98.9845612737324,\n    \"probabilityCalibrated\" : -0.0538575089564568,\n    \"name\" : \"Tawanda Fahey\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"04of\",\n    \"script\" : \"5w7373e12238hmjvo5y6luzy2l6lfuvrru0ozbcan4ur646r9t3cn2iso7j98xa5r19okt9u722ugyq1a668wobcb27kxvfii3bhezafrz0ehcdfzmni06hm4qsmue6\"\n  }, {\n    \"genderScale\" : 0.15849669735895344,\n    \"score\" : 30.85012477513117,\n    \"probabilityCalibrated\" : 0.23361275623880728,\n    \"name\" : \"Ophelia Orn\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"fatv\",\n    \"script\" : \"d87ojwuus83tn4rfohogj6s6giyexwxvfsqqhfyw2di5ez1x5xr85araqbly8hfuvmy9wcu4oase6o7y\"\n  }, {\n    \"genderScale\" : 0.6159155097719633,\n    \"score\" : 5.590416017246214,\n    \"probabilityCalibrated\" : 0.16086989188938738,\n    \"name\" : \"Angeles Mills\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"h01z\",\n    \"script\" : \"aqc5y34txl8k3jvtf90fq1z522eqltk22hxfvf7qlyl6ea3k2o9mwudln3sy25tophzkb8kvo56x7fdjyoweio6o28t0zwjlfgz8ki7w4x482t37nj80zygc8cl8ibddgvzoa4kokyynw9nchgdqsu1tr3nntllk0azrnjj\"\n  }, {\n    \"genderScale\" : 0.5173304782683705,\n    \"score\" : 51.618627950560025,\n    \"probabilityCalibrated\" : 0.28033158117211165,\n    \"name\" : \"Maximo Daniel\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"8vo8\",\n    \"script\" : \"j4hmfbelkesi63tigiszwkj3sweo4ux4lx6kqx90ue5swcre3cr5ebw9xipkyaihqjkclp9\"\n  }, {\n    \"genderScale\" : 0.15173491352360124,\n    \"score\" : 22.43777932069252,\n    \"probabilityCalibrated\" : 0.49767393348332023,\n    \"name\" : \"Awilda Stamm\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"1u95\",\n    \"script\" : \"dj46arub4u5kgrt\"\n  }, {\n    \"genderScale\" : -0.8521497022548434,\n    \"score\" : 35.2690952610647,\n    \"probabilityCalibrated\" : 0.17018997089285626,\n    \"name\" : \"Jan Hackett\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"mos6\",\n    \"script\" : \"hha93yxl74lpj7o9kuhmqw4w1upn3lpvdopukjd\"\n  }, {\n    \"genderScale\" : -0.49248017247413456,\n    \"score\" : 50.76106569179299,\n    \"probabilityCalibrated\" : -0.2839680208798876,\n    \"name\" : \"Ross Ledner\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"78qh\",\n    \"script\" : \"xdde1q9ttwmodm56v3af86tt\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57873e81-d6bc-4e23-96ac-31c5e999b726",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.759163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "934ba360-ebc5-40b1-aa9a-30d4e3fb2df7",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Kenyatta+Ruecker",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "934ba360-ebc5-40b1-aa9a-30d4e3fb2df7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.758146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "0d2846ab-186f-42c1-9184-5add21efd27d",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Gladis+Armstrong",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0d2846ab-186f-42c1-9184-5add21efd27d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.758097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "7cb7d082-77ea-4609-b1f9-01280a502d1d",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Emeline+Lang+MD",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.09181421536870826,\n  \"score\" : 33.010348581436034,\n  \"probabilityCalibrated\" : 0.9652314967870748,\n  \"name\" : \"Mrs. Shon Mayert\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"7r35\",\n  \"script\" : \"hbg48yh6hoverld2hz06a29vclluphrs8qgqhyda9fggxxcjkd5ss91yiv2hzmgtpomuyq5w7um1omt4gg23le4tigldpoa3stf4b5jqltut144t8vghwodybnxeamf7p8vcugmqqcmxwe99coqxmkeylfu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cb7d082-77ea-4609-b1f9-01280a502d1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.758037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "ae588615-a969-4530-93d3-a3e69639cc29",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ae588615-a969-4530-93d3-a3e69639cc29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.757753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "45aad647-1699-401e-8f2e-2fee37277776",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "45aad647-1699-401e-8f2e-2fee37277776",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.757736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "a832dc94-a3dd-4905-ade2-0991b4cc13a4",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a832dc94-a3dd-4905-ade2-0991b4cc13a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.757717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "d85a6382-4d24-428e-ad0b-dd2911b8be7f",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Pandora\",\n    \"genderScale\" : -0.27132830698948585,\n    \"lastName\" : \"Lind\",\n    \"score\" : 27.7105933850884,\n    \"probabilityCalibrated\" : -0.3967217604557247,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"5n88\",\n    \"script\" : \"t0fsqduwpn9oyo5oo5tyx20mxqmkxihwiulf\"\n  }, {\n    \"firstName\" : \"Janett\",\n    \"genderScale\" : 0.4331372344647977,\n    \"lastName\" : \"Bayer\",\n    \"score\" : 73.53025042639878,\n    \"probabilityCalibrated\" : -0.4238408222878298,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"hd6i\",\n    \"script\" : \"q8zmxbwt0pbtdtisfzcr4l5g2baalzh44l0dsgrstajhzlt46b56\"\n  }, {\n    \"firstName\" : \"Charlie\",\n    \"genderScale\" : 0.012832783960388117,\n    \"lastName\" : \"Douglas\",\n    \"score\" : 35.93564770645307,\n    \"probabilityCalibrated\" : 0.7634718803908116,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"4128\",\n    \"script\" : \"5k1zpz0v8l100idegv00pjkxway80v4ldbyw7wc1he6r1ufx88p3sn5tm833ebs5a4cyru05fuk3tv78ndjsx8xu7nu9oqkvjqscr8kzcmb0aps2gec4qcq7bb9q2xfnlrd6pr0kd42ad9y0o3ipxiepfwav0vdwwx600a5w1tquz\"\n  }, {\n    \"firstName\" : \"Sybil\",\n    \"genderScale\" : 0.3289566517799809,\n    \"lastName\" : \"Emard\",\n    \"score\" : 69.87740644286168,\n    \"probabilityCalibrated\" : -0.47000585752378377,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"6y2m\",\n    \"script\" : \"mg42vxnd7fgwc\"\n  }, {\n    \"firstName\" : \"Elliott\",\n    \"genderScale\" : -0.4121162498795936,\n    \"lastName\" : \"Stroman\",\n    \"score\" : 18.544368020106127,\n    \"probabilityCalibrated\" : -0.9034636569215775,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"bg3r\",\n    \"script\" : \"oqehd8f4c1b2ze43jeuay08q40qm3p8qy9oaa1jqhhok702bmpx9x1pslxry1bd2sph\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d85a6382-4d24-428e-ad0b-dd2911b8be7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.757688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "fa8549fe-8bd6-4c6d-b38f-a018d8cccdcb",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/gnbxwidukeae06bkrb9ofscad12ny9vb0vsnuvvd1zfug0dffcjomh9ckj6z9ccjlpsuo24hz7vx4i9gqck7nzjnvaqvalfnbp43mg1v0u9fgnp8/yde7lvrnch7al1rkzoh52a2b",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fa8549fe-8bd6-4c6d-b38f-a018d8cccdcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.756831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "56ca87f9-9203-480e-9366-5c211983b2f1",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/gkos7xe5bajutszkc8a3yequ5ewtwpq3ozsa0g9r8xifrex40e0xbz4ni7plq4039hs1x9g269e2b2wtq177vchlmvw4ovm6pm4yvobt2m5j7xs/1q13i3b942vsixgkr5ofqr2weod7ocnenv9g7kc5ijgpcadq9184xqscjwa5jki0vn7fd",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "56ca87f9-9203-480e-9366-5c211983b2f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.756787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "4b096407-291b-4e31-b1a6-905341709126",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/itqosquv1j/ulcrnh53ps3gdw2t19w0sit9w7ugdza613xvqwmc8jw027m95980q8e5ofne9srv76txsn4c7gemub79tw548k166ym127eriikfoldnlbcuyrq1pusecdup5qwj9kw9oqfj4yb2u4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Sol\",\n  \"genderScale\" : 0.20405697570548953,\n  \"lastName\" : \"Greenholt\",\n  \"score\" : 33.9185993261923,\n  \"probabilityCalibrated\" : 0.899232193717268,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"wd87\",\n  \"script\" : \"9yfx59gj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b096407-291b-4e31-b1a6-905341709126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.756693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "289c59a4-26be-4bef-9769-fb56b1f40387",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "289c59a4-26be-4bef-9769-fb56b1f40387",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.756159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "0c20af37-7440-439e-8d50-7f52ce1c89b1",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0c20af37-7440-439e-8d50-7f52ce1c89b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.756139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "c5939e71-4513-4d5b-9013-cc3978fbcde8",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c5939e71-4513-4d5b-9013-cc3978fbcde8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.756121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "c80f49c0-5f90-4310-970a-5e9188eb2564",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.3559131690006603,\n    \"score\" : 57.711745083760746,\n    \"probabilityCalibrated\" : 0.7347835265388436,\n    \"name\" : \"Demarcus Mertz\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"12ka\",\n    \"script\" : \"gwmehku46dtnwucuozrw1qsa9mkzgvt9xwklh5jf6xbpd986cws7we65q4hmdh621f7a36076m4pw01o1ud1awvi\"\n  }, {\n    \"genderScale\" : -0.13423705791564156,\n    \"score\" : 12.614808638476948,\n    \"probabilityCalibrated\" : 0.2805723578010657,\n    \"name\" : \"Katelyn Bailey V\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"6v1n\",\n    \"script\" : \"9hdocopxrzy082l670e75nbkxziouug4omuf2yy31uud41piw57yey8tb489n76rr53z63nb0evx3hd4afdwr2du879wp217ev4m1j9astpr5oxy25d747uvzrtz5b\"\n  }, {\n    \"genderScale\" : -0.2402090126486649,\n    \"score\" : 16.738719308130644,\n    \"probabilityCalibrated\" : -0.7882683059215831,\n    \"name\" : \"Toshiko Toy\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"bj92\",\n    \"script\" : \"cmeo0jz1oq1f2m89jipoon3w4h4gij3r5egan\"\n  }, {\n    \"genderScale\" : 0.13720629951675822,\n    \"score\" : 40.761127524919516,\n    \"probabilityCalibrated\" : 0.03396020545528433,\n    \"name\" : \"Rayford Stehr PhD\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"qh9p\",\n    \"script\" : \"1ommrz37ngbexkch563me\"\n  }, {\n    \"genderScale\" : -0.8655280522071069,\n    \"score\" : 32.61944641763429,\n    \"probabilityCalibrated\" : 0.4261819750797371,\n    \"name\" : \"Felix Barton\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"u6y0\",\n    \"script\" : \"40wry3xptk75\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c80f49c0-5f90-4310-970a-5e9188eb2564",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.75609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "0b601e15-d635-4964-846b-ad405587efc9",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Blake+Bode",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0b601e15-d635-4964-846b-ad405587efc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.755299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "25c4971e-7598-47ab-8573-98119ca60548",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Cinderella+Corkery",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "25c4971e-7598-47ab-8573-98119ca60548",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.755245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "8ffa2499-630b-4540-9a38-826b0a98e27d",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Santiago+Jaskolski",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.42307712350944593,\n  \"score\" : 62.37486322643395,\n  \"probabilityCalibrated\" : 0.20807380239492024,\n  \"name\" : \"Jeanna Yost\",\n  \"likelyGender\" : \"male\",\n  \"id\" : \"2l0j\",\n  \"script\" : \"ck1fd1e4u2t2m1ss6rifogfk8vw3w89c7wwy79a370h6ob8904wb24b5w93621m1dnlcwv87o272rwr73fx04pgpj6nj6z9exv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ffa2499-630b-4540-9a38-826b0a98e27d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.755173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "11989817-2a02-4d32-a913-a770f7bea5f9",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "11989817-2a02-4d32-a913-a770f7bea5f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "06829a2b-78f6-430c-b277-85f129ebb2bf",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "06829a2b-78f6-430c-b277-85f129ebb2bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "66fe1e36-231e-4c57-93e9-6caade0a0145",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "66fe1e36-231e-4c57-93e9-6caade0a0145",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "e793647a-ea66-4803-ad31-5ffac3f7a508",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Giovanni\",\n    \"genderScale\" : 0.07687395332772118,\n    \"lastName\" : \"Stroman\",\n    \"score\" : 58.504854075008375,\n    \"probabilityCalibrated\" : -0.3538916320808254,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"wee4\",\n    \"script\" : \"2j0f07bdk1qao6ox7z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e793647a-ea66-4803-ad31-5ffac3f7a508",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "e0a46488-d678-447c-9117-863031235683",
    "name" : "Infer the likely gender of a name. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Cameron/Rodriguez",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e0a46488-d678-447c-9117-863031235683",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "4a831c76-3406-448a-b270-3998b64c7456",
    "name" : "Infer the likely gender of a name. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Cristina/Schoen",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4a831c76-3406-448a-b270-3998b64c7456",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "8ccaccd1-2e5e-4109-b621-f51f9c4a8fc4",
    "name" : "Infer the likely gender of a name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Ebonie/Doyle",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Eleni\",\n  \"genderScale\" : -0.36097387200094166,\n  \"lastName\" : \"Runolfsson\",\n  \"score\" : 51.15049160068025,\n  \"probabilityCalibrated\" : -0.018606975607575293,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"4zon\",\n  \"script\" : \"8uovvrxzblct4q7lqrv29g61t7xkv3u2tuonol3ln04pnhdfddlc46bu6xafzvmop49l6g5enhh087f527mirfqse6irjssvoynhhka9yo5a4bzzcfnxgfjmn020s8xw5ljnipj72hzjblrg3m7ruv54e5bqhdh6upo7l8z758vnw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ccaccd1-2e5e-4109-b621-f51f9c4a8fc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "a7ceeb2c-75f8-4921-b471-897916402914",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Terence",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a7ceeb2c-75f8-4921-b471-897916402914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "5eef32ac-cae1-414b-bbb1-43d2b955cf17",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Kimberley",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5eef32ac-cae1-414b-bbb1-43d2b955cf17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "64e50e8f-8df3-4890-8947-c739dd033092",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Kevin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Dinorah\",\n  \"genderScale\" : 0.4042509935293297,\n  \"lastName\" : \"Runolfsdottir\",\n  \"score\" : 92.20493446639425,\n  \"probabilityCalibrated\" : -0.7607788541623886,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"78zv\",\n  \"script\" : \"1pb2v0en4msdhrjupsvyicmh08m80o3svqvx1amm9razfkkttfphvssnxg1agx3x61vau1bfg7eyllda8n6wd145jhkoyz702qyc7kjz2zxhgub6mfujteiuxwjbyb9rzh54nxfzpt2dv239nuewf853\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64e50e8f-8df3-4890-8947-c739dd033092",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.754009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "1ebed299-e4aa-494d-bb6d-3d52ebf8ae4b",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1ebed299-e4aa-494d-bb6d-3d52ebf8ae4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.753103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "5e32d94a-e29c-416b-b439-881e0d876eaf",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5e32d94a-e29c-416b-b439-881e0d876eaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.753088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "9dd017f6-62f8-4aed-adb0-10b7391f047b",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9dd017f6-62f8-4aed-adb0-10b7391f047b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.753071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "ef7fff8a-ccba-4170-87bd-65678ae85194",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Tressa\",\n    \"lastName\" : \"Hagenes\",\n    \"score\" : 79.71943705404453,\n    \"probabilityCalibrated\" : 0.831353695695839,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : -0.13420812678555527,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"a31mqf9csgwas0s9ve99s7kv34vuuo3nznrnyxy3c8oea5aepd9sypmk6x0qvpxun3uzzvr2v2s397y07jpuv1iau5upw6gdg38jwfkl5l2c9bgowvhl99xnu45ihnxfnwny58lcdibzuivdpytyewrqnr1akomczap2qtkksg36oa7sufd9txerpe61\",\n    \"id\" : \"99xx\",\n    \"ethnicitiesTop\" : [ \"tqw7x4dtmhjaf94rwmi93xnpdomo1otiriyaup5ukz4xhfudcbqkhiv26alixcz2ax05raipkk9dxmtxbsjpj4tsugiuqkksqtm9lzam90ofsf1ygoy432pqubrejfxweg4c\", \"a0d1zy3wh9jbh127d46pnik7xhy0rnw9l8y4znsf0g2198bujqq88reu81499wv2b658rh13qr7235lqboonffk0oy9vet9npd7ymb3cqney1bp\", \"7w0c8vup2h2pcjiin4ak72qpng2ezdgxyjf7xaqczjfn3m2gg\", \"x8yk15jlc6ii05agi58czca55gh6kuozstcfxphm6ws9zjmfm6n8y5lajarjxg41b7y1\", \"51ko872h2l0e2gljy6hzq5xfyywhv6s2vo4oxd6a3wz0glvi6pi1803um01we2o5bs38luaejl7wpmex67xxrxz9z29iqhbqxh9u7zeey4rlej99n01ouqpfdjvcwaxhl6\", \"mr56w8bc6rhu6vif0zxxhgc61zn12zvzds0t0bvr5ekrjwg6zijce9vki015q7bcgeq8qzas2ntxb8ju0go5ca3sa62\" ],\n    \"script\" : \"0i606346cjcwbmspmglljjrz52f6x3ccycttm9zown64gqqemex2rrr2tfny99h347i731h9xlyqwsdjanv76gla6n04acev8b0ziv7ol18kiwwzobl4x79xijxuen55f87yeh5qxf0s2rrrytulj66esn22o2aoi5fq\"\n  }, {\n    \"firstName\" : \"Joaquin\",\n    \"lastName\" : \"Stiedemann\",\n    \"score\" : 26.63061265196309,\n    \"probabilityCalibrated\" : -0.28333962590981776,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.055722188173001674,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"yxbab40xplwgxd23svec2thhhpnln593bkyak3u974efux7znxcsklw3m64q1j3siedm8stflbcro7if\",\n    \"id\" : \"dllw\",\n    \"ethnicitiesTop\" : [ \"u9bapvla5f0xhppb9l9vab4d3vnmxtlgmhwo2yww3rrimrr4bal8ddmgwtjgo5nxnaumsizcr9271qm8s2hgg6ak4g25cdpa9yvckp6ko2q1abvlrqwq12t84l0\", \"cc0faw9k84i981xlp65splr9oxemjb9aqgfwmx3xvmm0ut7lfi5jf044tn1r3qsu4lx2cbnvkxa5sfnhr4ymraovypjxx8rbr6qqi6kw6i28e29belwczyza2pac0228qfu3ilia1w9rhjydm\", \"51dypp8o91n4ufir0nr6sigl8\" ],\n    \"script\" : \"iy89sd090pfwj0d0k8nrr2k3wi677xa3humwvyulzo3xlh833dffxyfcg8jn5fsefmdrd6n7fbcfsxx6ofsp4pk035svtio9k0n82j6y2m69mbvfabok8ls0bo4o0d5t76tm3\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef7fff8a-ccba-4170-87bd-65678ae85194",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.753044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified diaspora names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameDiasporaedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "b604b8f6-cd4c-4881-b24c-8eb07614a41d",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diaspora/qnb598d09kvguhqrelhtda6jbxdnejnpw/Rickey/Bode",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b604b8f6-cd4c-4881-b24c-8eb07614a41d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.7526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "f8fe6bb4-386d-4fb9-9488-44dfa712c11a",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diaspora/77ht4dvq333jb3vwxu5bivcmdkn1fewtpph4hj7s6hevqza9pqb2k19t498mq7hzcr3cp2o8mx1axluucb6tf6cb6hyz67vy31g6th3m3q87k1dtozmn3dfar02dhzo6ugwyzu6qq8bef6aj8ifdscohc6kv56qsmumajj7lmg5cp/Logan/Gutkowski",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f8fe6bb4-386d-4fb9-9488-44dfa712c11a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.752534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "e3653f55-2e42-4599-9110-b9e1c6fa0e2b",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diaspora/atymjvcbzdbsqxlrp70dii12c7txwlp9xaew6ovlr2bh2q32rb0bejt15ag0e8bbrhf95o9va11a/Bruno/Dibbert",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Wyatt\",\n  \"lastName\" : \"Hessel\",\n  \"score\" : 30.508843808461638,\n  \"probabilityCalibrated\" : 0.25167563249056624,\n  \"ethnicity\" : \"Chinese\",\n  \"lifted\" : true,\n  \"probabilityAltCalibrated\" : 0.8442718295818057,\n  \"ethnicityAlt\" : \"Japanese\",\n  \"countryIso2\" : \"unsotb4oi6vaiom3o466uxxobwhl8qllwyhqyt1vl5tasg0czantv5e76eqzsc2qqncv4fa7i3ujbpc27qcuift0q45ozuin34o0lv8za535q0tqx9xok9ebfg8ftcpn1dbhv3enpeyj3i3igmfcnq6l1x\",\n  \"id\" : \"ev86\",\n  \"ethnicitiesTop\" : [ \"642wmil6hy3fw6sbf1sg0yne7yo5ao5l45d77d9wyg07sodkgonwf2l15bsyz3qc9wlo0btu29arjljvhwkh0rgu1tjyocpjg55yaksc66no8q5qz0okg1geqp9h1yrk5ohft326tudu676\", \"8t2kdqsu3rly\", \"dn3tgvmclv6x3gf47ykqbsffqw18vjfsyz6rz9txw0h64oxuvkwhll4onz0m025nlz7a938ow5npr4cjovf1vcele033qg7ys3xukw0cw30xptg1y79phlr5k7z3t5nd\", \"rszqu2w4b\" ],\n  \"script\" : \"67loy0349mg7hbhdjzd0qo7704dy5vl3hgobl1hzuv0zix54vqpyuushhx0iy6xeoyqy3pxl80z73avg6xhij47dlu4zgitszu5og3t4fftjzie1undvsrhq0g1n7zd4ecbke819n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3653f55-2e42-4599-9110-b9e1c6fa0e2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.752445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "countryIso2" : {
                "description" : "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicitiesTop" : {
                "description" : "List most likely ethnicities (top 10)",
                "items" : {
                  "description" : "List most likely ethnicities (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ethnicity" : {
                "description" : "The most likely ethnicity",
                "example" : "Chinese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicityAlt" : {
                "description" : "The second best alternative ethnicity",
                "example" : "Japanese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "lifted" : {
                "description" : "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "type" : "boolean",
                "xml" : {
                  "attribute" : true
                }
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameDiasporaedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "6ab28c0c-c6f3-4377-8b67-58aaba7dbd4f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6ab28c0c-c6f3-4377-8b67-58aaba7dbd4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.752021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "07694ae0-eb96-4513-b6ee-81ee4ade7acd",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "07694ae0-eb96-4513-b6ee-81ee4ade7acd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.752006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "d2c7b3af-7617-4a53-a5cb-6fad7f8b9027",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 400",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d2c7b3af-7617-4a53-a5cb-6fad7f8b9027",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.751988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "2bb4f675-16c3-4542-89df-7a4599fdda3a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"country\" : \"Myanmar\",\n    \"score\" : 99.65285946834017,\n    \"topRegion\" : \"1v6768izalkcbiqhmm5ccue9hot3bno35hl5lxpqk0j1sy96kptw4tj74dr5w7jn6n0cco6rn7lame6psa7i22o7izfrjcbuvnlb2zswlpnwgu9i0vdftcomsbdv9kzl5a6ijtj914u8i7n06htt234bq1d3xag0xs254j9nz21pdok84sq64c\",\n    \"probabilityCalibrated\" : 0.04977276277077869,\n    \"subRegion\" : \"wasak2dg1dvhpmtqu8syjweuef0f0k2x028bbg6ieedzfi9ilre11tfupdgl5snqb9i4lo8fx74crrgazqgjfx31ah04z0xm7m4b1af7rn6irjdedjs0ptj5annnlpr5o3\",\n    \"countriesTop\" : [ \"16rqf4sgtgc9aej2j42u6hiv9b3fe6f25d24guy731gc3ppvq9k06wk4r0y5boy7zrzlwdmsd7v6lgq613lzn6bceoug28icca\", \"fkhka5l6exfxxgcpwz0buc7k112wgsz5c4834m70d3g1wt7jte4odsxv2b77x9p42frstqbge5y726dx89etnxn26erbhz5ty09mfp93ve913o7h89fanje5xqunpkqnn48603h8kj5d4h0t6t976adoj9kcazhmze3s7s\", \"zxf2s4pqq292ykjdu5o6e7x0e4b41iwnxrph37h42cv3k8ly\", \"0vspk0xgq4shdxuexepvi3i1ippnwlfuktf63gx5f4lp7ir291w46nzywdz9f52a5bzcw15lusn\", \"k0ry1edghuhwogkxpr5x6va4fjma4t5z7nuxyslxv8lfm2psokv94snys1yxfwaavnt4z9b25om75j1\", \"b3wrxmi8di6wtjh8edj02904abwrp538j1l1896kv2i1rwlh7x94wthyw0b0k827dfyu914gm69utu87gflqpd2pghkbsjhl75ymv5c44gefs\", \"u8b9tmkk03afoho57jlfy7n2n3nhbrpp1n16zps3rrp977nslncs1gk4cq3pvzahqd9rz2fcgr3cg5bj6g7mvd2pe45snj5rhzwf55dzfwt7kpa97vuelz9jklc9zxangclsxyyh5lr4udiqy02sz9xmi\" ],\n    \"name\" : \"Gerald Lind\",\n    \"countryAlt\" : \"0r7je88i9vipobedv7ls07npgzx5gk2flyg98rfscyl59ygitb09ny90dhtfkwoz68ejuyihzd86w5vzqfh19b1g5gkcvk2lfkvx1e9k1askheo7uk0nqa0cssqhnrj811w4py4u4\",\n    \"probabilityAltCalibrated\" : 0.6604227511257137,\n    \"id\" : \"zew1\",\n    \"region\" : \"ae48qtrvhog5hn5l7v5154wvxc2d0gumd8z3rxa2i4d2jqmtacyzp8kcj58c6t0ue96kuyy7iv2j06s6utwhsn346wx4ghya9sgwcskn5as8tca513a748afe37ywymiehgu3iyxnnhc9w56ccm69pc1qg891aoy88gud24g0oujkl8mjeb\",\n    \"script\" : \"zz7phrvjz81kty2ufa2j8sxktagoofshflhpcwhkjrw6q08tlrqm9bvlgvamkia29ignxu4ltplb2742jht8fqg4rxzxtg9iwi8qk6saywrlxuafp8ip8g1kvxgcnjs9d9on5fq76jcabmjcybjuq9x2gsowq2zy3uq80xhrgu2xc1q6igadvu4tpstfqq3fbf0\"\n  }, {\n    \"country\" : \"Portugal\",\n    \"score\" : 1.6679548252250487,\n    \"topRegion\" : \"k1bk6x3451h0fk8pmt274c6wllsmkwsyqgcfs2s0thlulfmqgmwfye8dbksd0o7l6110jkqv73un08fz6z1nai8rqzzxrsjq72m8ms3xgwcsbo8tk72nkfbimjgoo18tydmyxu2mb3up8zfa42mw\",\n    \"probabilityCalibrated\" : 0.4564496275924137,\n    \"subRegion\" : \"ctfk9qb7qz42fdt1y6yshq4p4aokd2nl4agg3cua78aftwhwnzql8ua9zrid162mt5pywmcn2h4w3xtd1t8qnsmzzctj6x03g687va\",\n    \"countriesTop\" : [ \"czbfyzv1q7pyrat7ipfohdq1elyxo13ffqmalshckeavg99phgui21vo5xszv5ajgumzkf5kxdp7xsn40lxg80wet1eq8jx6j1kj2wz4mqnyme94t0jy\", \"pyoi7hboogqarwl6oxzue1x8j0ghr\", \"74tnyjgaph7rs6w1hfd1fk5103g29inif1kto8pptonhmhf325cl60x59znefcanrwtgusffqze8kko\", \"nabdyj87sle0a6ee2qh521d266taadpjpbfmeugme08u3lqk9pyyqc8dfcypdpmuyln5nbvk3yavymte7fug4jnyszqesal83or2j9npqew3lnb0to2a3y64ip0o9fcci0eevua580042u5fms1d15ef5khjhhx67et138b009sk7pq974t0dzp7r3ldc0y91902\", \"9crc4154s8nxlwjw1xzblo32rixv65q33qcbrwaepnp19l1989r1m237gbcxaltlpqk4656g78jvgpe9c64128yw7heoze9n9wb13hm8r7cjcxpu5ee8xllknbhy4hc\", \"l595asou8zxk1n1lrpkgew8w1qx95clmdadn2jdgztyjeypg0b9lvmiw2c46m72uqv0hochsc80z4rdyuvbl789l4kpis8akgz27w7cfz7hsioq7y9ayru0np7b13a028vahlli4s3hifh6kis0tz82hs572aqkf0n9qskn4kw1xa4mo85knauo3i6orma68qme0tez\" ],\n    \"name\" : \"Don Roob\",\n    \"countryAlt\" : \"ya8k2tpe\",\n    \"probabilityAltCalibrated\" : 0.3517102262535279,\n    \"id\" : \"163r\",\n    \"region\" : \"pylh96qjrwkfz6802zutvfvx4kp55e99r88p4pywf8p0zvra0gltqj0ea08tjlr76wbtf7lq1tzm0c1l99hbm8gp06xhnmp0qr12doh3shxptutll66bjaoema986lotzkiaawumltjpu41jch0k6mc6wbemj6kddpuirw9h\",\n    \"script\" : \"hgxsntvfqo378m85xswrsbh1dqpqtexlspi7my5uke1lec6nk4pia1z4pw484hmnz137srsqggyw42zuxczrlxpta0dx2rk9g7f6djx6t6con47nqmlmapi1a95tqjemdlee26vupgat2fx1pg57o47zygy9t1lq0xs5ncnjj2k3xp9xrb\"\n  }, {\n    \"country\" : \"Eritrea\",\n    \"score\" : 61.982407101975376,\n    \"topRegion\" : \"mi862aiob\",\n    \"probabilityCalibrated\" : -0.14103887501112355,\n    \"subRegion\" : \"hltcbuvi9dv\",\n    \"countriesTop\" : [ \"dez313uftmhiaulgdfai0a182pbsrfj3v5ll2kh1yjvn2umd9t51nro52i427rlfkva6455hrdkvsiwi8gok8hmifpilkhw9fwxxuui86idy0fo2j4s48xew6uuxsaqxska652jehk5895qy3\", \"1rj5xq97zf2sinsxm0wzzqc6j0fdzc95evgh4wcdzhefob60srq0dg7wth2tf58p2tk8y061wtaumumzxdythnasbpd3tzo0y1sd\", \"xyh3we47bzq18tnkvdavctw04xuj5yprr7jh67qpxsifuhm3ceb0y1zaew5iq4uh45k2508o4ee0gydoja127u8z2j5orcl6tg0ao7hhv61qfa9jrl8dph\", \"d7n1rwlvv8p5vgl2gxcm5yfd5fepx\", \"38gitcc5zchykx6qp8wfadcatovzp98ub6ag656vszgf2kfy9c4jkn786z0t0gp1kthc59e2ja8883qlo2ewmyg9rh9eskqk2o0jqfmecc2pz2ypmr3ybyl1d693\", \"d6ds7iqkpa4kqnk34p2x35kbnw1m2iujsg8i4e5g04bkmoz8923i3\", \"e748ioxg351s5ufikaeuvea7v0ure17hknjacz0zszypawgjzmkphhx5icx8d1tbg1w\", \"g007qnl1du482s7wazajva783mkg7s4w6h9b2jk2gsgrekoabwfykid86holhnurimenh4ry6tsmjv3qc\" ],\n    \"name\" : \"Preston Shanahan\",\n    \"countryAlt\" : \"6rz3159qd29mcz3mapqvihwclb5s2x1irgm8rrmgtvvuin47ok\",\n    \"probabilityAltCalibrated\" : 0.3480316638611112,\n    \"id\" : \"05h7\",\n    \"region\" : \"a6avbwfg3gdjxuj5r099arkxawtrsjubkeu0dgyskqgi4zhow8ol4q1t3w8b7d2hlclcrzlqpu0dg8nxvkongabtywki0m33723jmxv1jz3wpempcy85d3u5r9f3lp3pfmgyobkm1zys3fgn2ouwxby0ndjyhbq90e7by0h1ctwfu2bw1c8hzr8v\",\n    \"script\" : \"qxu9ne6u2qhxethn9pva00c3ry1sb96mb5e3i60eqh0n1f\"\n  }, {\n    \"country\" : \"C√¥te d'Ivoire\",\n    \"score\" : 16.8080671449952,\n    \"topRegion\" : \"xnu157g3m6jao2o1tf8wywbqizf2pdllf202bxoq617pp2mf4fvstu6513qveiqfjfh1cojnpy2uuimnaj1ruwr5dfh1pml6vzualue633f9hxqaa3vl0j1sp5trv6zixkdn2bhiiye7jorjmz8b87q7l\",\n    \"probabilityCalibrated\" : 0.6810111840597772,\n    \"subRegion\" : \"rtbg5bv20tdbfh3au76gz4z86a80m61tdie3iffomo7r0iu9u7ueyytepw28od5t464y47tfavm03gxyackfjpsk5pfocf75xinqa458mme7r3ze1g5c6gfdxwf3p8zi06jkcdtn9vr14jl1xp7rw40mzzaf0\",\n    \"countriesTop\" : [ \"46xjn4bkivwcybwqwhxh3e49tg7xerehtqvz79keyni37hp68qv59m74eusvjyntpxtblady5wbnmx2b\", \"w6xzb3sm1r5nb6jh5h22p2cv32szx7p4bbnuw6tqh8rriu20ajug6x5k72zv78ucjzbe32asez0holnxu0cb5iw8vgg439bxbcqz9qto8y952pyuv6yc0avg\", \"b2rc01zzsto94svdl5ps0csaad2s6rvich81mnif6bn6b2bmxef60hn75glijjsbl5bedwzumbf9j8iovhk7iied229e8ca6dxbsk7ibegq95tzp3ukbjxpnejw2fi0fipbm7tiszubesynnlmz8l8zn5o7a67y625hk6q7f96lgsf24w0sku7tna3ix1tu7i183\", \"8zyvqfalhgd94cr1uf6lze3809euaxwm0hw50a7a0n5lkfxns55bptkbplh2d1pielws34xgr4djacyi3v1sm9l1btqz8lr7iyk0zrp3lgga3\" ],\n    \"name\" : \"Art Krajcik\",\n    \"countryAlt\" : \"yz2fzuacrfbu109cfb1swz1fdx17w1oh1sk7khxjwjl6m32pt1bqa9cru90j\",\n    \"probabilityAltCalibrated\" : -0.07214728893941302,\n    \"id\" : \"zto8\",\n    \"region\" : \"gu1t5bkfzr7ml99lp3ixt6cpy7ts7t5wfjxoyfsnq5qgtq37g6hek8ixpx5s4g4uslgzx11ctqhzkx4ro895bf8sxefk1x8xbgucopsyzakx5bz10\",\n    \"script\" : \"l3bew12xnyvvafgsdz411patlw8a4qb1r4p08gaohuzf49q4ki7ueyl4pp5m8ged78jtdh9wi9a3jjgl7sdwt15907ackfc8mqapohbranywloufq3yso4mcr7u9wcrj7vpljsx7mhc6t103iyhhd4514zacgq5k65lpr\"\n  }, {\n    \"country\" : \"Lesotho\",\n    \"score\" : 62.074963212066145,\n    \"topRegion\" : \"osc8zfpypvycw8tr6sm44bkqmqjf6zxgsndguw2l8s4n9vmv6ts4fvjdzcz\",\n    \"probabilityCalibrated\" : 0.06334682216008258,\n    \"subRegion\" : \"lqrig4370rmjhxtm2g7kofhmi4n70u27lhjjlqpwvlzbgv5qt1t9bfpjietbv13cfjod2t1vpc6d0x4t0ttkwabxrb5bqs22ct8v8dwwus\",\n    \"countriesTop\" : [ \"ua04djabgwudswheie8lvsvdm9ygsvot50wgg4pcttnpg68dnr219hesu21w31gkqz9ajni22y6105adeh729sp28pm5pspe66871lhdatcs1ukr4ht3mupi4ozrslfpkoxx26egep\" ],\n    \"name\" : \"Leo Bashirian\",\n    \"countryAlt\" : \"jf3gpsla77b6tu1qgy7ekg2n\",\n    \"probabilityAltCalibrated\" : 0.34178093140508414,\n    \"id\" : \"u0l3\",\n    \"region\" : \"weune6oa7w0uuaxx8fcdt061lc2xquddr9d1ucwow7mfdn9y7qau78gyiazoj0jej2z6nfpkqfmo6i7lw6k9kjumfzs0g57cb6lnxm4pad150kl2zj4gf1k1nxpzxv3efp2azr6n2sifkv2yhplgue272sb7qdh576v07m5rxue3bxhtl\",\n    \"script\" : \"toydumammpwq1g1cr1qh15687csf11503t9597pdj10zyquckjz3uxwkx8evrqk5oky5xywrcjcliz1wiopdo8y1udp0uo7pl8tg0zoouc3junxxrhvhuca47jdnjg60ev3da7hhibt95bvf6qcdocscudqx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bb4f675-16c3-4542-89df-7a4599fdda3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.751951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified geo names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGeoOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGeoOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "68a43590-a894-4cd1-b0e0-4d6945439396",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/country/c30qkvfsx7fef9um2xle0uf04ax4be4142art204guycksxw8z5k6ra9ukx72w5yaatkt5irebg1dbleydr19pjbxl05z1hq2ybigf3lzlwrbhu0t1mllgin6mp4hf0k47stp8sj0eg3bdsfs",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "68a43590-a894-4cd1-b0e0-4d6945439396",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.750729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "ebec2a7a-44f1-4d3b-9e96-1221cd89784f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/country/0zvu57mrxn5ynb9u0p9fnv53ua9gz674rjhuspmp4b5jdnnscyi1z2ak2q0as9z4db2zrh17rkgjlamvbd0iyokce5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ebec2a7a-44f1-4d3b-9e96-1221cd89784f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.750697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "0d5e87a5-514a-4ccd-b639-6978980c4b3e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/country/uzrdqlglprvsrwwoj2o7fyta78z6zdd3dux4fzw7n5uz5uqo2rb89ml4wa3dqgzedyx3w71bpxf3kf1fb28qyodcooz",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Saint Lucia\",\n  \"score\" : 22.885747623666617,\n  \"topRegion\" : \"35gqzd4w9hylsqpw2a9sdl85kbrmrtgyfq5d59220p1jz879ll0fdlcu614z4u8xthbpbe9srkdorsibds5pu3a2jz1drhwj01hbtqcmvmf4rx8v2vhw2zc7qxxri881xfn7e3p9yznq0j88p18yvthwsh9jz28mq3r9gcj0bms066tak\",\n  \"probabilityCalibrated\" : 0.9255140695099737,\n  \"subRegion\" : \"p2hogwnv45xu\",\n  \"countriesTop\" : [ \"r5t72e936o0mfkzmzihjlqmej4xs1ns2o1ryo13al4i0k5dhyka8993kwe7uitg5fb7vnyxgk9ia31\", \"wt0ng7yog7lcvf3fi7si899i76wshvwmzw8m7xh6tn1paeygki05umagk1z3lcw6h90x5z562edu6q0o3skcq11zoko8bbmj3qeqg87gp6dgjejqgde5o5wxm7zssgzcwvjb7kh8rcc6ium3v0sbxrl7mhkhlcmehuzre06h\", \"4u1mcm2dxat89zmgbpdqlfio\" ],\n  \"name\" : \"Paul Huel\",\n  \"countryAlt\" : \"dm08mf9aw2jhl8yr3px6yldqbpbhe7ypi3wwueff0130hajuu9xs424uodhgukic0lki6m3w22os\",\n  \"probabilityAltCalibrated\" : -0.8507733891130873,\n  \"id\" : \"u0g9\",\n  \"region\" : \"9dikizfhsf1uexwguotioeqlfjpli8l4zfpbevd3a1i8qmakihupv52oxwfzcnn03zpoe1vaaumcv2tw9xa4s4j0vixehhjkr9umxb4znio6ohhyo22qnwirl9ccwrz15h5tk2qazp4my0tjtmt4fhbzg5bfhgunrbxyalra23z0tbje6bcx1ueej33iy\",\n  \"script\" : \"993nqdopfqyvahhmtb0p8ssi9g7up5idrt65iymxw9qllb15vf4nk4qvadwrgseo1xx06yslq0iat8up7jtx2r6zmofd6g9y40elvfyt5oi2fwf25h87ib3g9ytjc9yney3ksy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d5e87a5-514a-4ccd-b639-6978980c4b3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.750651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country",
          "schema" : {
            "description" : "Classified geo names",
            "properties" : {
              "countriesTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "country" : {
                "description" : "Most likely country ",
                "type" : "string"
              },
              "countryAlt" : {
                "description" : "Second best alternative : country ",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "region" : {
                "description" : "Most likely region (based on country ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegion" : {
                "description" : "Most likely sub region (based on country ISO2 code)",
                "type" : "string"
              },
              "topRegion" : {
                "description" : "Most likely top region (based on country ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGeoOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "311b1fe4-7bc0-414d-b4fd-d670e74f3604",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "311b1fe4-7bc0-414d-b4fd-d670e74f3604",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.750223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "d93a738b-958b-4810-a229-f8157f768cf4",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d93a738b-958b-4810-a229-f8157f768cf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.750206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "d7a08623-eb7a-453f-b2f8-89aadc1937a1",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 400",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d7a08623-eb7a-453f-b2f8-89aadc1937a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.750189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "f17f111b-2a92-4f3e-8c8b-9be9f740e365",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corridorFromTo\" : [ {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Latonya\",\n      \"lastName\" : \"Schinner\",\n      \"score\" : 77.34630042029134,\n      \"probabilityCalibrated\" : 0.915927977388922,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.6666550277500527,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"7xoyppkx11hz7yviycs3xa95ypkgzxfwsndl0wxlk6rsiafc0jp0zzyz7g27hxba8ajevaj5gh2x9bhvjco5fd32u\",\n      \"id\" : \"61ez\",\n      \"ethnicitiesTop\" : [ \"9bpytqogf6wd4rx8gld3kw83v4ge5spyzab1gydrggjj0lre7qknp3ns9rr24dsv1ohcv5nz0tq3smwn53ge7shrbw02uxgjsh1jm4zrdvqopcfsalmyztwx0iztq6gj759m01tzkw5xpzl4ajgdk8qeuzk65mpv8wjp9j0gt8hoz9ydl70\", \"zwq4vu3c7a2kexaubn1ad6vp9262e2300p5wiipftiquanf2r33r47dkxy0ko6js59ztthlb4m7t3yeofkq54yvehchs5sa8v0o27gegqa8gglbvx566d1omx7joopb4ydwj9ywh9u59mdzwinnwwz5x\", \"rpnhk8e0gd3dfocu3wiynoiaekggnfxmlpdlzq7ivm56wwvznunzjmn8x3wqjwn8viirxx9df0ve9idqly9\" ],\n      \"script\" : \"l0s2w4vn734jjjyw3an4v224ivs4107x5kz8idjwmkpd1l2pr0t48dojh4o5wmtbm65ywj0gz7i3pk8ayi1ih78s8zvqrog7ndsdwagyp90fspw2rxuug3ilrutqdd9ox7ic80h7572807k1v7ycrx679uh5w92fgmgbqgyymz66baad11\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Jacqulyn\",\n      \"genderScale\" : 0.4853795721283283,\n      \"lastName\" : \"Wuckert\",\n      \"score\" : 3.523502671976042,\n      \"probabilityCalibrated\" : 0.9367308436484947,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"6pwf\",\n      \"script\" : \"j4uyx7rl0ry8l3ek1r5rm8r0dp0d0ynkcwub9831nyu3eka8ejm1g60s4mknjr49vtd\"\n    },\n    \"id\" : \"10c5\",\n    \"script\" : \"evlzcl1vs3l5q\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Quitzon\",\n      \"probabilityCalibrated\" : -0.4378181267118977,\n      \"script\" : \"hlf8f3tuufz3yg6k2mztuoq5zc1ehvf0nan2873gmyupjtaa96cszchrmghvif3kl5d76108o4srqggyzi00y4gh0dynj29h3zp6g7y1rug5epa\",\n      \"regionOrigin\" : \"x0qgpmm903sqnwvdd8pt4gc2yya4zl18ts2fcki0twftdwlyj28eq\",\n      \"topRegionOrigin\" : \"0ey6pafh8hxcjo8a1dbqtr6dwo4awyzm9w0z305niq9xa6msu\",\n      \"firstName\" : \"Damion\",\n      \"score\" : 28.51436262308479,\n      \"subRegionOrigin\" : \"741iik4ymv4m93m039k6ejt4styatzx8g1ch9b6ah870vr5ts37xuxi2hwzwvetw2e87ccbca6j0dlwcwpp5ry47mm8yy4778857ofr\",\n      \"probabilityAltCalibrated\" : -0.13927405102906953,\n      \"countriesOriginTop\" : [ \"2t9nx5981f7t1go6fb7k48u766pbl9fhv195l8yzmwhbmuly5kfog0u4le4f6m5xbst5p7k4ooxp1110l0pp5mqs6ei87zgh3cubw5ewtjvqgxubd1918b57e885ybas5x3nckehsgi94mm\", \"khhx8vnj6rzvxosq2uo\", \"ardrz6qgk7o1nc8gy4qlr1i1l1m9ql\" ],\n      \"countryOrigin\" : \"yhfuaiikdx3hizjqudk1a3yov3yn7l5yh5\",\n      \"id\" : \"maj9\",\n      \"countryOriginAlt\" : \"vaobzb\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f17f111b-2a92-4f3e-8c8b-9be9f740e365",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.75016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch",
          "schema" : {
            "properties" : {
              "corridorFromTo" : {
                "description" : "Classified corridors",
                "items" : {
                  "$ref" : "#/components/schemas/CorridorOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchCorridorOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "38889ca1-5141-4ca9-89f7-345019626b30",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridor/5bl3jduksrkdj2z64eo2680nhcqppiqu1pp1sumh1gkppl7u3x11mx5bzsiv/p80bw9vec4i36ohcy2zi3kowiq004s1m1qbfrgfr8hd6l2r9tlw52oqqqll6xgwt73lh6ysnvy4wypg3ntzvbqj1cqn5y222c7gdfkeedonxl8asiq9ybtrlrx7drvlgyibf82p7al1adwqhlko5uuq9wykns3/i6gvm4totvykj8kcux7m2jpidw6jln1ih7ptdzqhi7rqa4400msn9julggah3kocbhsr94ob3xn5342anu64rb780i/hietki9vordkzp4fdze2rpjdmqylrcmjdukxmzveg9mn3eovfoej5goz30a4y5c2v01fa3ivn9az26dtj0e6jqin2nkma0als4q5jt/gsbkyln4m4vvvbtfjpjc9xsf8o3qpy67s9drocpw9n42w/f7nn7sjhm92jz8czs3nb8hnl7072yfglam2bg4jglxh5gu8qtbtwr7yxurt7xph2uf",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "38889ca1-5141-4ca9-89f7-345019626b30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.749371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "47da182f-4355-4ec6-b513-a285d385ae8a",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridor/dt9eog872pddwhrclja9898wnu/p5fzshp3uha6lp5vvf068bdbhz5rva02xvqsmfqm7ea8xvccwe8txv7va/xknzcstkta8lk2r0uplfpxeq1vgakkz10dkmhym42ldj012j6edxhcr0spe98fj8dftw9ffl774oddkzri0znpbo4fglzt7myvfvu966pg58f6kktf2579a7gf1uxmsrjk15yjmnu7r3ykynsvqvsmsgt/udpb6bda4j8abngu9ny4xqdt2udr2l3495f7mjibgf3knomz7gnku79bx67ov2lw2bkaknvmnv99rq52c8h5z3kfciriur1fg78m1z459u8ilucjpp4741nzx0puyj8jxdfagwkadg6ebf7admcx5r15ybhz33lan6tvpu7foh5t/wdh2ni9air0nvrwgy8u5a3x4jkw4q5keguyv1p6lutgnfd8sj772ti0071tzu5mxafcc/6sn9r3a7x74k77gvx40ilbhe66dabv22p6avniogngh31dkyp2fy6lmj6xzyaq9kywriukp64z4yzajcxhi6oz0nbn6crn5u26hwt4ohtyzfkyln6idjopxmpopfu8",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "47da182f-4355-4ec6-b513-a285d385ae8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.749299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "07d0dbbb-75fb-48c0-9516-a2c9e1cc1732",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridor/7krk8tdptru6sl9al6hywzjz5dgcs4863r07vzw9g9a0ij9fdi2h0jl5ayibthuy46ta4yffgiwor3tawqtmwn8aazv10ilipfzl9fc5uwr18qtw8hetd2gz58kiszahbsxps/ewf323koukhb78jhhs40k1a4rdgyqeicjd62o9u0zloomsc28s24ev4gjn4jx5b0llig2c9pzu29jygud/40wu4s8ya0cr8yvpka13kngol85ludcvvlqz2gnz1u1centypegr8h98ljy7kgw9z2oo99wor9kgadf2agej2hjoqsm9a2hkui7j0xcwg/htmwdbqso2aougwx3eb7xgs3ulob2luromzsb31cfexpeobarh5o9ff2lpa5e560p93riqdfav0gf1bkexj1wcdm5waw6zvj5r54idl9c8ufvjlx2vuze2lfykngh4k7a1t3333qy53uv8peed9smulh9ml9oooyexkw8pe121nbyjrrf5/g2c4u7ygafurzjjt7b6rw0828kprnzvqy45u2p3nosnyoqmdcqx8ds4ga0ggm7emk5boa8zvicexaopboa0uxbocjm0e0btuz8jczwopb88w6jz726e51tokv1dbbjinqao7l9c00k0y4/rohjc7jvoqy85owsbcia19m7s35ehqbey70pjwfufsq35d55zjo21q8ekjq6zgnyoug449hyl7hpd11pv3vydr3c5uk3qrkpkluahjuj2nrfxhdiw9x3jlqps0zuws3xfjlmphko7fo3pjg4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"FirstLastNameDiasporaedOut\" : {\n    \"firstName\" : \"Shani\",\n    \"lastName\" : \"Dietrich\",\n    \"score\" : 17.969961877588947,\n    \"probabilityCalibrated\" : 0.4056183084229439,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.6607326145097121,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"42vkq3c67wua459j0u6y792334joyj9xpobacqgi7rxmxivrcemmjxcgkroagl6jcsl5ajkar2e75z080jpfxtjwie9uqdt8ynvzt3jbdok\",\n    \"id\" : \"87tl\",\n    \"ethnicitiesTop\" : [ \"ksp9ro6ufaz2eqer3apud8qwvxla9aypeuj9xgblryrxnkiwuckxarfcpcdheoma7ujfu5dorhselrza9ytvcrijs4kydd2n2zu7gfs7wr62g8j2y0o95ypwixrbwxa2uiy108svxoq239tb5hyoz33ovi5ttl3e4n3shx44d3\", \"nnnaknukp2609ftm2wvq4uyg4a7uzm6b61uhyiv7hkhpzvy082h9\", \"3zahs5rxukj2yiubhg6osi4fngb9tqpi8n6gg66ifivy1fpjt6bhk5ca0ly365y2jgh7x82u6iaudmi0cm0cy79pzp6gytim7llianfvovgw2jn73h9k3gi92wbfucqgtjndbr84x5t3wlum5nmyy44kdr1mk3qq9m7sxg1dtu1aran8gz2iqzhpu27fx3\", \"w3mbbsbm52cfeq1784sh0b36o5o1ie0aber\", \"y5x1a63cq41y14yhgar0p8xzlz6he9h\", \"z6cxj147f2hz9u567xpom2yd6bikliblnegk5ms495fudebh6u0w9sxr0hjiyni64o6mxjfzvfwso8y243fozmm77lyhcz6s414y72i7kwiibfqllhs56ekf61o6\" ],\n    \"script\" : \"4yb6wso95b82voq9uosanpxezyyj64i2vqfztd1ozd3ia8x9ftz0gnphn48jucdx3hqmou9cr7lyg54komcq9ci8snc0jwy951ss14k2b54i980p\"\n  },\n  \"FirstLastNameGenderedOut\" : {\n    \"firstName\" : \"Zulma\",\n    \"genderScale\" : 0.9510205685245825,\n    \"lastName\" : \"Howe\",\n    \"score\" : 31.17788359431475,\n    \"probabilityCalibrated\" : -0.25084296763093517,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"f2l4\",\n    \"script\" : \"6kammh7mx6adcwug2pwlvu8doukucjisyaxgibz\"\n  },\n  \"id\" : \"fdb7\",\n  \"script\" : \"6lyisz1hylinh96n80v6554122vgj2m5rx2mq84vywfs63vfhwoavxys62lnkcyphkxvdvr1zfvbdospf0u1ggu21d\",\n  \"FirstLastNameOriginedOut\" : {\n    \"lastName\" : \"Hackett\",\n    \"probabilityCalibrated\" : 0.4983231865393194,\n    \"script\" : \"gb8yo1w9leznpw6vc6z259699n9qyo36abmtlm7m1v71h1pyhjr848c4hfnlgp5e5l5bnglc64pi3n0wloinpeaehwue6i52onxb5wc7hwtoukpvki1iyj4g3cpt0vp7rnrbsot4wf9hjfhy\",\n    \"regionOrigin\" : \"acp40kfgx7sydgw4c2cty18vpan4i4o6d2jdanl3gs6mlwj6llr9ovfxvvf6jelucw11h4exi6bv4o6cc2rrqsj8dvoqk5wi1p4i2ju\",\n    \"topRegionOrigin\" : \"x8syf6gy4652gzez38kx\",\n    \"firstName\" : \"Romaine\",\n    \"score\" : 44.3724938492025,\n    \"subRegionOrigin\" : \"9ifbffx0mtl02uo4g38\",\n    \"probabilityAltCalibrated\" : -0.6038890070612157,\n    \"countriesOriginTop\" : [ \"9b8u2rwnszn\", \"15eiq0xqgt060s9urh06k4fsqyf4ej18pwfnqd0aqp3v6p1emuxxxi4ion6d48bxxtl5gyfcifzoxne9czkag3fe244sy1wwd0uuyb3m314ru7gg44ktvisiczd3v1tsmo\", \"lm9azvd8kppwaowabrw08f7o0yjgbx0denjp0m308j8equ3kwscgdet6hv110ud8ltqjfyeqrk98la28lww9zvvde4yxelibqcft493ykjhjo2707ovk958jdap8q7w\", \"ak6b737oz9q7a6rqx7mqnq4vh8k3w2126xd0d3uisk8zkjtiiu1xg56e1truf6gukz7uxarqk5r8gadw7torov7n67dkaumvl7pgqqd639pse13oxngz3yvs5i4ap4e0kgxw\", \"p3hwuj48l57cx1ssrl0aeerz7p695o6kur6nq6l6ywafhm1u73jijdy9vhvzn760bpvkqqcpr6icz5okpp8xa6h5qyrhxllrjstr9dncc249pkmtgnoonxuof7fxpnp9a0cgsdwjayfowpp68o6vyivt29rx3whv0fmaw\", \"6udoyv65mrn0z5byvs3264eszuv0s84ktn7o7jh8mx37dj5aegre76wl7mt9382skkcx9xjqe0ccxs3v227av8bf1l9bdc6bvxx8w0dpw3t7a1b5lilhpe8jryoe2hyx5wpln6ycq7jdd0f05qowawb\" ],\n    \"countryOrigin\" : \"nmmoaz6f7p6ylf96qh7v4ypvkk\",\n    \"id\" : \"qy86\",\n    \"countryOriginAlt\" : \"rl5jj1i5t6nm8jc0rdreq8l5u0x5s9012cgskdjlk3rmc775r158jnvfmsg4y2g73htkolxude2i7rcxzkdjqpclqc4mh6kaub3kapm2pk37ngt9u2ew4s0o7trvh12b7nuv2l0gsgew9qwom81fbd1vdyr6nj\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07d0dbbb-75fb-48c0-9516-a2c9e1cc1732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.749211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor",
          "schema" : {
            "description" : "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)",
            "properties" : {
              "FirstLastNameDiasporaedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
              },
              "FirstLastNameGenderedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
              },
              "FirstLastNameOriginedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
              },
              "id" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "CorridorOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "f289fd60-e938-4fae-a815-07b0f51ed0ae",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f289fd60-e938-4fae-a815-07b0f51ed0ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.748217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "9b5cb06b-f5df-43d9-8529-6e31389b4614",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9b5cb06b-f5df-43d9-8529-6e31389b4614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.748201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "52d30359-30bf-4300-b7c2-9a97054a2253",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "52d30359-30bf-4300-b7c2-9a97054a2253",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.748184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "9436af19-de31-4987-90a8-333f6b6b8b9e",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.1479914851311636E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"19e6\",\n    \"script\" : \"jka6p2rj\"\n  }, {\n    \"score\" : 1.5413953089393657E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"56y8\",\n    \"script\" : \"zz43yub9isli2g77mg1t26dchj7de10iqyu4h0moonhi00pkg0r010bimlw5sj65somxxqoam50czhnhrcatxd5yyc2hxolx6bof8a4kbv3w2k17gtdh441ab1idgpq4m6h6u2341k9tm4ekda9wr7lcenjdyzhxie8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9436af19-de31-4987-90a8-333f6b6b8b9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.748157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "5168bfe6-87bc-4154-943e-0d33d1505a4c",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/gbjp20pkbpalm2qd4giqyg66wov6qakdlhubsxr/ey773xe8ox377eufrw7sztjqgm1bfdb840y4kp0eflbo6q81l9rnpevtqh2hstqmx6vegbpvi338tvqnyd8lrrcqm2ynencugxk1npjsgyol8fpd3cu2nmfnk0ol6rqs159xkldk2390aoukdt6y36sne996odq9x1x2ol27idzipxjwcd/Colby+Sauer",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5168bfe6-87bc-4154-943e-0d33d1505a4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.747891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "de3e4a1e-fe55-4099-97cb-d76933ad4589",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/5bbw82md5f7ae1y66jr7g2r1mmic9jj5igtohdpt6uttkg0x3mdj4sy0gdcmmkt2gzbp438liz872zyxhsrys72/b4w0lr241d86fxg221rsfijc5cchhxba5rk1l6kk74rfb5c8scf8df7m5fioqje7sjbw3mnm681unnthl9heovqktlitaxa1ou4/Velma+Walter",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "de3e4a1e-fe55-4099-97cb-d76933ad4589",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.747817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "1a061e35-8c6d-4c0b-8394-f556c956a822",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/czjgrokw12di05lapehq4pfllwcmzpkcw05fh3ivslfg4az944lr9dlelda4l31izph4h0gsnqvqzy6ckypccsgd43tzyanedrly/tus7eyirk5frj5hdq6lic4yn6joz8rdfdi2rpjnjgg4qn43bnnztng0xhi60aeg2dp6v12qwmbsn/Sung+Howell",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.0686867146298494E308,\n  \"matchStatus\" : \"Match\",\n  \"id\" : \"3k94\",\n  \"script\" : \"o0raxoj12p27t64up9ldccp6sl7qpzezcyxg4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a061e35-8c6d-4c0b-8394-f556c956a822",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.747725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "001e24eb-a8cd-4b93-a4ce-2c576df3b3ca",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/yxbdon3b15xt62nf7nzz40ndre925a3dwk0dihnfsaa56nc9q7fysm05cm5jsa1913s0y0angouw8fxxj/rkp8t3wkj3h80n8284wyzp/Female",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "001e24eb-a8cd-4b93-a4ce-2c576df3b3ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.747471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "ce1b2448-a922-47cd-83d7-192302351baf",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/kthan9yign0ik47wsua2numns6gpcac7h1nky65ye8c0x4hs7qox47za55c2/swo0fl946yo8hs60qh8p6j4och7qb1nhwsssq3tsd74nv3kw694lkjoj0kcl8txc8ttdblfnvh79/Non-binary",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ce1b2448-a922-47cd-83d7-192302351baf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.747413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "98d7e076-9320-4fb7-90c1-7f368da0e352",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/cyyz4lgbozgubh112klooec9jsu1dx8jh2usgux1t6so5l6izmim/pts8af8mt721eqro00fdkcelp6mxhhsn3d8tpissycgqmsywzz169fw8065618fejh9i1rkm2id7sxhm1pfk8eoulq5ulfg8954jwh1wglx66rmxf2c5t/Non-binary",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Fred\",\n  \"lastName\" : \"Armstrong\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 9.07171453188741E307,\n    \"candidateName\" : \"2022-11-26T15:22:17.746852Z\",\n    \"probability\" : 7.208480559384762E307,\n    \"predScoreFamilyName\" : 7.418558379566354E307\n  }, {\n    \"predScoreGivenName\" : 1.6963400491770695E308,\n    \"candidateName\" : \"2022-04-01T12:01:17.746896Z\",\n    \"probability\" : 1.7424979692319043E308,\n    \"predScoreFamilyName\" : 1.5501843048651943E308\n  }, {\n    \"predScoreGivenName\" : 9.703708566270801E307,\n    \"candidateName\" : \"2022-07-03T14:41:17.746938Z\",\n    \"probability\" : 3.3366777877517514E307,\n    \"predScoreFamilyName\" : 7.593431750303746E307\n  }, {\n    \"predScoreGivenName\" : 5.994982814637983E307,\n    \"candidateName\" : \"2023-03-23T12:10:17.74698Z\",\n    \"probability\" : 9.66842751281708E307,\n    \"predScoreFamilyName\" : 5.283057281469824E306\n  }, {\n    \"predScoreGivenName\" : 1.5633653776802722E307,\n    \"candidateName\" : \"2022-09-26T13:32:17.74702Z\",\n    \"probability\" : 1.7486380099433432E308,\n    \"predScoreFamilyName\" : 1.7818010849933763E308\n  }, {\n    \"predScoreGivenName\" : 4.611335935458245E307,\n    \"candidateName\" : \"2023-01-12T15:27:17.747062Z\",\n    \"probability\" : 3.478399014502724E307,\n    \"predScoreFamilyName\" : 2.505300249217366E306\n  } ],\n  \"orderOption\" : \"szrqoe741x64ivw5vtac8y9t3s4a4ero8zk1abwaffzgaf5qr1ojo13fpxyhye1rhwraycrfz02f30cwys2agplyf6sp5x08ba4gr059gests64m86vck\",\n  \"id\" : \"q22r\",\n  \"script\" : \"pdy56vozyyn3asd51s2toy6pqr8fs6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98d7e076-9320-4fb7-90c1-7f368da0e352",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.747339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "50fc7325-dc6a-4cb0-bb32-ee3740f4c5dc",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "50fc7325-dc6a-4cb0-bb32-ee3740f4c5dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.746761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "b566c1ea-9d1e-43d1-8b50-1f42c540e273",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b566c1ea-9d1e-43d1-8b50-1f42c540e273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.746744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "2621a0ef-4ad8-48e6-ae81-df647c144392",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2621a0ef-4ad8-48e6-ae81-df647c144392",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.746725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "8bcefb0a-eefc-4efd-865a-eb9c25b56ca0",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Harland\",\n    \"lastName\" : \"Corkery\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.4452570673923007E308,\n      \"candidateName\" : \"2023-01-07T13:58:17.746208Z\",\n      \"probability\" : 9.40212007843724E306,\n      \"predScoreFamilyName\" : 6.879582264121244E307\n    }, {\n      \"predScoreGivenName\" : 1.3734862036871144E308,\n      \"candidateName\" : \"2022-07-16T15:42:17.746254Z\",\n      \"probability\" : 4.494331505165991E307,\n      \"predScoreFamilyName\" : 2.8804021374810237E307\n    }, {\n      \"predScoreGivenName\" : 3.3393274320237825E306,\n      \"candidateName\" : \"2022-04-22T15:34:17.746295Z\",\n      \"probability\" : 1.3657151817394655E308,\n      \"predScoreFamilyName\" : 1.6349230406897661E308\n    }, {\n      \"predScoreGivenName\" : 1.2441975643083377E306,\n      \"candidateName\" : \"2022-12-24T11:51:17.746338Z\",\n      \"probability\" : 1.3397574795579299E308,\n      \"predScoreFamilyName\" : 5.649826941127878E307\n    }, {\n      \"predScoreGivenName\" : 1.5946344797863066E308,\n      \"candidateName\" : \"2022-09-19T11:49:17.746379Z\",\n      \"probability\" : 1.0587447919179625E308,\n      \"predScoreFamilyName\" : 1.3260298121662443E308\n    }, {\n      \"predScoreGivenName\" : 1.5479799998552457E308,\n      \"candidateName\" : \"2023-01-28T14:16:17.746421Z\",\n      \"probability\" : 1.7421280709432131E308,\n      \"predScoreFamilyName\" : 8.096470933299856E307\n    }, {\n      \"predScoreGivenName\" : 3.7687915408673364E307,\n      \"candidateName\" : \"2022-08-29T13:24:17.746465Z\",\n      \"probability\" : 4.388767007967909E307,\n      \"predScoreFamilyName\" : 8.058408037668065E307\n    }, {\n      \"predScoreGivenName\" : 1.2248868650515456E308,\n      \"candidateName\" : \"2022-05-16T14:23:17.746512Z\",\n      \"probability\" : 7.361831908218173E307,\n      \"predScoreFamilyName\" : 2.5476924025266416E307\n    } ],\n    \"orderOption\" : \"fy95sfln18qy9tliul7jmtkmkncoop4d49uv2bgif5wk5rue9qil3s4bv7inqrhw62g6v5ruzhw89pc47osvpri8eskd2ilbh18vo2tla8qvafrig9ufej75laz0\",\n    \"id\" : \"v3l7\",\n    \"script\" : \"vtch781u2efgc3e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bcefb0a-eefc-4efd-865a-eb9c25b56ca0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.746695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "d79f9314-e1df-4ada-baa8-4821800e3841",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d79f9314-e1df-4ada-baa8-4821800e3841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.746095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "2991c5be-5385-4fd2-9b3c-018e709ef713",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2991c5be-5385-4fd2-9b3c-018e709ef713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.746076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "4e5f9c2a-aaca-472a-b354-54255c46fd6d",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4e5f9c2a-aaca-472a-b354-54255c46fd6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.746057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "84c66cc8-a1e1-49e0-a755-842bc9738f9b",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Clair\",\n    \"lastName\" : \"Hilll\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0129539016250947E308,\n      \"candidateName\" : \"2022-03-30T15:18:17.74208Z\",\n      \"probability\" : 5.300127033011379E307,\n      \"predScoreFamilyName\" : 1.1954765750055741E308\n    }, {\n      \"predScoreGivenName\" : 1.4637670755490068E308,\n      \"candidateName\" : \"2022-04-05T11:49:17.742124Z\",\n      \"probability\" : 1.4975743593627953E308,\n      \"predScoreFamilyName\" : 5.830925946363258E307\n    }, {\n      \"predScoreGivenName\" : 5.723633479414862E307,\n      \"candidateName\" : \"2023-01-31T13:39:17.742167Z\",\n      \"probability\" : 1.0243148088744784E307,\n      \"predScoreFamilyName\" : 1.5306293135575738E308\n    }, {\n      \"predScoreGivenName\" : 1.5770318907174845E308,\n      \"candidateName\" : \"2022-09-06T13:45:17.742214Z\",\n      \"probability\" : 2.79310564894522E307,\n      \"predScoreFamilyName\" : 1.169777178421711E308\n    }, {\n      \"predScoreGivenName\" : 1.4754069772402989E308,\n      \"candidateName\" : \"2023-03-15T14:01:17.742258Z\",\n      \"probability\" : 5.534778396171505E307,\n      \"predScoreFamilyName\" : 1.7796760640406429E308\n    } ],\n    \"orderOption\" : \"rkt1m9fh76guqbcsptpdwfn7fh2f7xxf2mboiyjrix0sioz2csnug8obcysoxybsf4h8b8ia7s15umamzibamr27m1p55q3phafso9jv4l04cu8tn11dmg8eekumaekj2kiut3j63ejt4iezqypix8j9y9qz5s\",\n    \"id\" : \"y60y\",\n    \"script\" : \"f4whiuawoct4x4l366lhwpq98bbgy0nt0o9qbdnyyx746e95mnqvr3q0b0yeh62xlbpfa6sck4jl308ss02a2pha2m16c497lznqb6e1wvnez8ka3w2\"\n  }, {\n    \"firstName\" : \"Troy\",\n    \"lastName\" : \"Breitenberg\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.4460648566763515E308,\n      \"candidateName\" : \"2022-08-08T13:14:17.742449Z\",\n      \"probability\" : 1.524057206170345E308,\n      \"predScoreFamilyName\" : 1.6446335650120108E308\n    }, {\n      \"predScoreGivenName\" : 1.7104210150566813E307,\n      \"candidateName\" : \"2022-12-12T13:11:17.742492Z\",\n      \"probability\" : 4.082267543239566E307,\n      \"predScoreFamilyName\" : 1.2558639627785262E308\n    }, {\n      \"predScoreGivenName\" : 1.417291434502552E308,\n      \"candidateName\" : \"2022-07-24T13:48:17.742538Z\",\n      \"probability\" : 8.218804130432272E307,\n      \"predScoreFamilyName\" : 2.5303212287955284E307\n    }, {\n      \"predScoreGivenName\" : 1.7596563950667483E308,\n      \"candidateName\" : \"2023-03-15T11:48:17.742581Z\",\n      \"probability\" : 8.145702185361178E307,\n      \"predScoreFamilyName\" : 1.6557078572475008E308\n    }, {\n      \"predScoreGivenName\" : 4.5183437571767557E306,\n      \"candidateName\" : \"2022-06-10T13:03:17.742624Z\",\n      \"probability\" : 8.347211866439796E307,\n      \"predScoreFamilyName\" : 4.594899270929826E307\n    }, {\n      \"predScoreGivenName\" : 2.828506679566856E307,\n      \"candidateName\" : \"2023-02-23T13:03:17.742666Z\",\n      \"probability\" : 2.280429805990286E307,\n      \"predScoreFamilyName\" : 1.5166102850442919E308\n    }, {\n      \"predScoreGivenName\" : 1.274807052252838E308,\n      \"candidateName\" : \"2022-07-12T14:58:17.742708Z\",\n      \"probability\" : 1.5394549027935226E308,\n      \"predScoreFamilyName\" : 1.47519096634709E308\n    }, {\n      \"predScoreGivenName\" : 9.23457957337312E307,\n      \"candidateName\" : \"2022-03-29T14:30:17.742752Z\",\n      \"probability\" : 1.3176002978217001E308,\n      \"predScoreFamilyName\" : 1.2193228019043682E308\n    } ],\n    \"orderOption\" : \"yxgyyqcnmdvwavpwyve4zj4855lvwuaue6jwrmmt3eoxptn9ewntapok6yst6hzzud794ejtq37qjmhf8ijr3ltkoosis0193rodzgdl7f4v2d\",\n    \"id\" : \"2276\",\n    \"script\" : \"h8qjke1puxm2wslvmpd3y5vtkpmskwgkpy7r3yfwvs77n5rmh4cgmr0covexh12l3v6lojw4f6n0y4e6fwkte37y8n4fnu7qm5094c95psogkg119rem667023we6zejwyxwmad3zspg5edtbec7f4o0hlyrmwrwb5y9ug1a7gtf5q\"\n  }, {\n    \"firstName\" : \"Ashley\",\n    \"lastName\" : \"Abernathy\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.8411846394870466E306,\n      \"candidateName\" : \"2022-04-02T13:10:17.742948Z\",\n      \"probability\" : 1.2360465920824572E308,\n      \"predScoreFamilyName\" : 7.550466676652493E307\n    }, {\n      \"predScoreGivenName\" : 1.6996597499348279E308,\n      \"candidateName\" : \"2022-09-24T15:26:17.742991Z\",\n      \"probability\" : 1.1868347687850512E308,\n      \"predScoreFamilyName\" : 7.120140803719785E307\n    }, {\n      \"predScoreGivenName\" : 8.10027086961689E307,\n      \"candidateName\" : \"2022-08-28T13:58:17.743034Z\",\n      \"probability\" : 6.197885297919904E307,\n      \"predScoreFamilyName\" : 1.2404252483258079E308\n    }, {\n      \"predScoreGivenName\" : 1.3492945787204324E308,\n      \"candidateName\" : \"2022-07-17T12:37:17.743078Z\",\n      \"probability\" : 6.286125247598455E307,\n      \"predScoreFamilyName\" : 9.717865754192497E307\n    }, {\n      \"predScoreGivenName\" : 4.955749264710391E307,\n      \"candidateName\" : \"2022-08-26T15:10:17.743119Z\",\n      \"probability\" : 2.6429960422892216E307,\n      \"predScoreFamilyName\" : 5.008753202802291E307\n    } ],\n    \"orderOption\" : \"tm89\",\n    \"id\" : \"t41k\",\n    \"script\" : \"byndj7u9jlupo5r42sb0gl1cifdtehmvt9pl7k5ie70k3g9vmd7kpvqw8clckl9y3iq5k3sz4\"\n  }, {\n    \"firstName\" : \"Major\",\n    \"lastName\" : \"Kutch\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.5635803749713308E308,\n      \"candidateName\" : \"2022-04-02T13:40:17.743467Z\",\n      \"probability\" : 6.117035082231989E306,\n      \"predScoreFamilyName\" : 5.479347784179751E307\n    }, {\n      \"predScoreGivenName\" : 3.521586726587164E307,\n      \"candidateName\" : \"2022-05-28T13:53:17.743549Z\",\n      \"probability\" : 6.505101045074587E307,\n      \"predScoreFamilyName\" : 1.1745601028384269E308\n    }, {\n      \"predScoreGivenName\" : 1.1036326664844443E308,\n      \"candidateName\" : \"2022-12-20T15:31:17.743701Z\",\n      \"probability\" : 3.7186183994788266E307,\n      \"predScoreFamilyName\" : 1.189498540329161E308\n    } ],\n    \"orderOption\" : \"eyff48i0gc0h71hpkzefp1blpjoksc9w7lfk6y6ckf13j3hgxprhn3u9s4581ztchmi4wl16nfzp70cyxdivqldbvlkt6mfr0cqm27pgbqpn8rqp1tz6kn0hrqv85qzv93t3sq8snnw0ulc8o9dibcbh3ss43b7yznzymixss2g8lewviv9ygxjy76jucp16vty4whg7\",\n    \"id\" : \"21i6\",\n    \"script\" : \"i7oq46m2rrghax6cyh9x3aunsz7dii5chi8fv27ph5fmrr87ke70ovjgjjjwcptauux6ys9aa5h92cyqu2s38vaqwob5i0r6fzbiw3uigrs403pkmtcbw5617kr7kwgculq16nigdz6e\"\n  }, {\n    \"firstName\" : \"Forrest\",\n    \"lastName\" : \"Langosh\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.998653250990425E307,\n      \"candidateName\" : \"2022-06-18T13:20:17.743995Z\",\n      \"probability\" : 3.6720317016504394E306,\n      \"predScoreFamilyName\" : 1.5791329348514433E308\n    }, {\n      \"predScoreGivenName\" : 1.0754756502785425E308,\n      \"candidateName\" : \"2022-04-24T13:27:17.744043Z\",\n      \"probability\" : 1.2201061584689607E308,\n      \"predScoreFamilyName\" : 1.7584044997534761E308\n    }, {\n      \"predScoreGivenName\" : 9.738316569620637E306,\n      \"candidateName\" : \"2022-12-10T12:16:17.744091Z\",\n      \"probability\" : 7.988044245041489E307,\n      \"predScoreFamilyName\" : 8.745313322787042E307\n    }, {\n      \"predScoreGivenName\" : 4.81635133889175E307,\n      \"candidateName\" : \"2022-08-08T14:24:17.744134Z\",\n      \"probability\" : 5.380622366506997E307,\n      \"predScoreFamilyName\" : 1.3422295553726429E308\n    }, {\n      \"predScoreGivenName\" : 5.674924135882982E307,\n      \"candidateName\" : \"2023-01-10T12:02:17.74418Z\",\n      \"probability\" : 1.7918520479748027E307,\n      \"predScoreFamilyName\" : 1.4457462294230026E308\n    }, {\n      \"predScoreGivenName\" : 1.7301554273737005E308,\n      \"candidateName\" : \"2022-10-05T13:35:17.744227Z\",\n      \"probability\" : 1.0501269713450099E308,\n      \"predScoreFamilyName\" : 1.2308462969798024E308\n    } ],\n    \"orderOption\" : \"44s5dcs6i5va3bnn48fksygn8sdoj2h7nt6uk4cr6dplyfk629sqegieejzcss8e869alahuo3c1fofef048yg6wgp053krduo0crgi1o6wk7479blj8bsmeaehvl621h\",\n    \"id\" : \"izyy\",\n    \"script\" : \"gku0eo7n7cmypxynxz0vnlc9hs78bs92vvpxw3564jdwmetfbnnr498lujzgq9fk8jhstal78w7vefbl8wecyvg8rsab04u07\"\n  }, {\n    \"firstName\" : \"Kenneth\",\n    \"lastName\" : \"Zulauf\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0907227193087775E307,\n      \"candidateName\" : \"2022-05-05T12:33:17.744467Z\",\n      \"probability\" : 1.3901445388841774E307,\n      \"predScoreFamilyName\" : 9.853557478087832E307\n    }, {\n      \"predScoreGivenName\" : 3.1334250554405816E307,\n      \"candidateName\" : \"2022-09-28T12:43:17.744549Z\",\n      \"probability\" : 1.0804205898309485E308,\n      \"predScoreFamilyName\" : 1.3691053362895812E308\n    }, {\n      \"predScoreGivenName\" : 4.4940203010252607E307,\n      \"candidateName\" : \"2022-08-02T13:52:17.744618Z\",\n      \"probability\" : 1.7332582986407902E308,\n      \"predScoreFamilyName\" : 2.373164459417871E307\n    }, {\n      \"predScoreGivenName\" : 7.809798665023069E307,\n      \"candidateName\" : \"2022-11-19T14:20:17.744661Z\",\n      \"probability\" : 9.21179720026468E307,\n      \"predScoreFamilyName\" : 1.3882478274763868E308\n    }, {\n      \"predScoreGivenName\" : 1.5475778078985558E308,\n      \"candidateName\" : \"2022-12-26T14:59:17.744706Z\",\n      \"probability\" : 1.3781863896861882E308,\n      \"predScoreFamilyName\" : 1.6332067068291484E308\n    }, {\n      \"predScoreGivenName\" : 8.310126043779392E306,\n      \"candidateName\" : \"2022-08-18T13:12:17.744749Z\",\n      \"probability\" : 1.0120532379386158E308,\n      \"predScoreFamilyName\" : 8.552180832985341E307\n    }, {\n      \"predScoreGivenName\" : 1.2008094511459877E308,\n      \"candidateName\" : \"2022-05-08T14:37:17.744792Z\",\n      \"probability\" : 6.283123190046703E307,\n      \"predScoreFamilyName\" : 6.815651641979868E307\n    }, {\n      \"predScoreGivenName\" : 1.7750443071399208E308,\n      \"candidateName\" : \"2022-10-02T14:48:17.744841Z\",\n      \"probability\" : 1.1299338370550736E308,\n      \"predScoreFamilyName\" : 1.0384546221807283E308\n    } ],\n    \"orderOption\" : \"dlooy1ywpb0sjimescn7lgg9897j32yf8p4h3fl0cb5ehrq\",\n    \"id\" : \"s8a5\",\n    \"script\" : \"okjy2ntrr97fdw33ig4goz0pr5wzhqkcyvevlgl0vt7svg83anuu5or9ummpwgmoonw5lokkfsj48o9bf7qbnvntgoa8l7yhpbamsn1y7ftqll922zbk4rr2wkmri97fzl8ox5pqh5z8gx0xy87chkvzjq00x\"\n  }, {\n    \"firstName\" : \"Adolfo\",\n    \"lastName\" : \"Bins\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.720191047335512E308,\n      \"candidateName\" : \"2022-10-11T14:55:17.745085Z\",\n      \"probability\" : 1.1930584056057E308,\n      \"predScoreFamilyName\" : 1.281993742736573E308\n    }, {\n      \"predScoreGivenName\" : 1.4565434610451699E308,\n      \"candidateName\" : \"2022-06-25T14:11:17.74513Z\",\n      \"probability\" : 6.08156204945975E307,\n      \"predScoreFamilyName\" : 5.941233014319707E307\n    } ],\n    \"orderOption\" : \"m07epc89azx21x3ivghrmyat0jxuu45ire23kycf0cfeu44gfhkzu3bauld4s618lkanbqzh0cmtlaxjq6x4pzpkd3z9o5eolkp1qcvh655gs749kew5x7uv8htbn19e3p8qhvmgj51ewnbg9h024rjo7g4ul\",\n    \"id\" : \"b6py\",\n    \"script\" : \"ixzlyaa2pve37vv\"\n  }, {\n    \"firstName\" : \"Orlando\",\n    \"lastName\" : \"Macejkovic\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.218691897180529E308,\n      \"candidateName\" : \"2022-07-24T13:04:17.745337Z\",\n      \"probability\" : 6.517874066649248E307,\n      \"predScoreFamilyName\" : 8.684349402158876E307\n    }, {\n      \"predScoreGivenName\" : 2.9582758258738777E307,\n      \"candidateName\" : \"2022-06-01T12:28:17.745381Z\",\n      \"probability\" : 1.5653669115763294E308,\n      \"predScoreFamilyName\" : 1.6001358194653092E308\n    }, {\n      \"predScoreGivenName\" : 1.2182647804141762E308,\n      \"candidateName\" : \"2022-07-19T12:13:17.745426Z\",\n      \"probability\" : 6.784076012238346E307,\n      \"predScoreFamilyName\" : 7.48629039279071E307\n    }, {\n      \"predScoreGivenName\" : 3.3465990951275664E307,\n      \"candidateName\" : \"2022-05-31T15:14:17.74547Z\",\n      \"probability\" : 1.7027530855526315E307,\n      \"predScoreFamilyName\" : 8.078889909573974E307\n    }, {\n      \"predScoreGivenName\" : 1.4278175218236153E308,\n      \"candidateName\" : \"2022-12-09T12:41:17.745514Z\",\n      \"probability\" : 8.964808690571963E307,\n      \"predScoreFamilyName\" : 1.6744329993440442E308\n    }, {\n      \"predScoreGivenName\" : 2.584036562710235E307,\n      \"candidateName\" : \"2022-09-18T14:39:17.745555Z\",\n      \"probability\" : 2.308615772489076E307,\n      \"predScoreFamilyName\" : 1.0149935043306527E308\n    }, {\n      \"predScoreGivenName\" : 1.4070039476381464E308,\n      \"candidateName\" : \"2022-06-07T13:09:17.745599Z\",\n      \"probability\" : 7.835835205910765E307,\n      \"predScoreFamilyName\" : 6.8984498200560275E307\n    } ],\n    \"orderOption\" : \"h627udktjgampig34mtip91uvfrlae7m0l5g1b821bczxngpougzhfox66qln5hw1g4enqaa2ihuxf1knkmjtt2p9u5daangnlh1aawnp9norldj5yqaplfnxdshheynjh25csprbcf0htzrf1lwttz\",\n    \"id\" : \"7qr0\",\n    \"script\" : \"u22zma7zbplq7nfwsuphgp0igwibpb0mr9fqvl8rf8p8s7p3r8gp8jj0hu258eiblbdofniwxrmw96ck5664uegim6uk5f2q1yoav8s8e06m3pj1rwzi12fvk6nfxhethnxmrj99losb270wfd\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84c66cc8-a1e1-49e0-a755-842bc9738f9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.746003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "1b0a4384-3d56-431c-ba88-c41e02b024f8",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/3b90v6bb1/mcbg8cp29j35odgl6kv89ecp63jpvxcdudx2tfpd6ue3naji434re36igpe4btecfcty2whe2s3kvqip9ngcfluoq0if3u0slt6a2bxg0u2ivmmyeq79n739dlqihl8t5o0d5tphciozolz3xi9pweba3evyuenu5xo4hd9nyh8v5khekenx71ke6c8md890jwxgsklb",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1b0a4384-3d56-431c-ba88-c41e02b024f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.741974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "b90d0d30-a17a-4e25-86fb-2b39bfb339b9",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/29e0ki2mo0cpjzsdwm7hiyjikopys52vklemwxi8kjsn5bsgt8tuc17862l3fu8ltenu1yl5xgh9mek7qoznhbj6y3hdqwg1436gb3ctt2555wiot83wyhuo8zi1pyna7a95zm7n6erpe8rq026suqqzw8q99g5hwder8uloy0vv/a72ewzgx10f0qx4jkhuq93le27lfpf9pksfh92ae1b3jgj5n2e81c3ryzdqqiwfn3e3c3oxn3trm8xhg322",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b90d0d30-a17a-4e25-86fb-2b39bfb339b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.741931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "815e689a-2a66-4aac-a469-41e3a1daa0be",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/vvmriott0h64heapcgm9mx8hyn2hcs0eld2mxgj3sw81lzkld6s35xwkkratz7on61wkgyq0cmm/q8k67xpm45g6d61s44zpff60wqqphgqb31sdtnl3609lbztciuvtsmhoy2ox9b3bbhbpeg3f0y731098580gyd4giby2pzqgvnngh3s933mr9x9bnnv6r27l1evrrazqfwvkfq35nsla9m76mvw5hgypr3fd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Mike\",\n  \"lastName\" : \"Hessel\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.1744727901441714E308,\n    \"candidateName\" : \"2023-02-05T14:31:17.741396Z\",\n    \"probability\" : 1.7787819744487277E308,\n    \"predScoreFamilyName\" : 6.868869198398556E307\n  }, {\n    \"predScoreGivenName\" : 6.30674714003436E307,\n    \"candidateName\" : \"2023-02-08T14:52:17.741444Z\",\n    \"probability\" : 4.828693683755504E307,\n    \"predScoreFamilyName\" : 7.375498228645194E307\n  }, {\n    \"predScoreGivenName\" : 6.75076171205124E307,\n    \"candidateName\" : \"2022-04-15T15:06:17.741486Z\",\n    \"probability\" : 8.460398914704025E307,\n    \"predScoreFamilyName\" : 1.5650753396052147E308\n  }, {\n    \"predScoreGivenName\" : 6.293648823450796E307,\n    \"candidateName\" : \"2023-01-18T13:16:17.741528Z\",\n    \"probability\" : 6.718514364609305E306,\n    \"predScoreFamilyName\" : 1.7093822472311622E308\n  }, {\n    \"predScoreGivenName\" : 1.6051237315309334E308,\n    \"candidateName\" : \"2022-08-04T13:06:17.74157Z\",\n    \"probability\" : 3.419668169479252E306,\n    \"predScoreFamilyName\" : 6.745093283808033E307\n  }, {\n    \"predScoreGivenName\" : 1.2121667078096293E308,\n    \"candidateName\" : \"2023-03-18T15:31:17.741612Z\",\n    \"probability\" : 8.743466017448624E307,\n    \"predScoreFamilyName\" : 5.717065858726913E307\n  } ],\n  \"orderOption\" : \"t1z0fee27mviv2xkimdpwvde99x7biqr5cqwvp4trho5lawok1gk2gwgagwllozuy9x3jpo82f7bsw6vxwtk9kr0whi0pnegxbkxe3b9vv19kx37ye7ku06sxhn5xbvf9m7\",\n  \"id\" : \"h33q\",\n  \"script\" : \"gdry96mp5i94s91vegwd6xr85dvrv85d36scikys59ingtxqvtu1cpkog67a8ve8cvgjiiai0ul3r01l1wtlr2g1sj9diwb1fy3kdz606w8ay0n9z6qnrc9cq4ug7j64ccypqzmtwcnexkphlfcgcvlt1cpbd91ygooznuey1ejtc4t6fqsk1j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "815e689a-2a66-4aac-a469-41e3a1daa0be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.741873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "64beea4e-bb8d-49cf-84e3-5e754caaebf4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "64beea4e-bb8d-49cf-84e3-5e754caaebf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.741287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "42363c82-a3f6-4154-ac9f-74a66a7816f7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "42363c82-a3f6-4154-ac9f-74a66a7816f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.74127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "ef146b88-fca3-41e1-aec7-108149261bce",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 400",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ef146b88-fca3-41e1-aec7-108149261bce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.741252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "44b44130-88fa-4f4a-8deb-3ca6138bd435",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"castegroup\" : \"z60y3uwf3d5xgty4tsaj8nlodc395v5ejd1tj6ykk6k446u77hx0oqqz0hlp1epdch494t70awqmilqjk1xc82o3j60aio2vuyc3zse1n0vyykm8vcks29u9ens7nthg45n67qcax77\",\n    \"castegroupTop\" : [ \"56fps5yyhzg8ueurnvv2xexm2qg8x53x5p0y2z0x3s1f3qimjdhjxrz44fgkfpl3vfg5pwn4922h27nl3ggd8lg0qq6dg8j0zhiap07pakybjg3schvjm9w86398lhd6hdzi1545mm5cxycyd\", \"h75n5cq\", \"kwe1ybnqq3c97if2ov0imvluad8xswy3mcr5ex6ad80p5dtabvqjr7gzxzqqg5ccuo60odc9ooaghen9y968oz6xpwt42zgy1ipxclyzfti68ty0y6qijl9r42jrrdvyj8u8p33fy8sbevau3ypzuwi6gj2e9g8sor047rtd9cgrtcqw5t30hl\", \"eglpyzi5s3osgcxt41hyt2ynfn6hsznlhpzfdjrcvjmwbvqlk5bpxx7nezrtu4sanuynr4at2526ps05x5wvwuqf3goq1y4dlgayp7e1xtx7tf3wgv46nq3j1wlgjkqmdvkq9ehvkfarb5ejvzfp1a6ty4ug6i\", \"1azkyyqedkekvh52zs35mqo495fudpvadzfwwy5fqqwcpbqpwgxbomauotgsntjdyd12f9bb07pbxprshurh9ncdv4ie\", \"4kvetsbuowgzjarxyzo2oakj6980ah0w4geivgzxehhzi07hksa75j8kvzrfcyt553rws2l5fgjvklm7nrrrbghr5rfogwsi2iawkvmmrkxi39l7akggyqyeprr6ms4m8emyf287\", \"xn44mnhrbnumkrgp02vy4o7pjit93wzznfrkb4ntl2adh40u2rj\" ],\n    \"score\" : 86.16678957409559,\n    \"probabilityCalibrated\" : 0.47703370365447206,\n    \"name\" : \"Homer Bins\",\n    \"probabilityAltCalibrated\" : 0.41194144031181,\n    \"id\" : \"t1h6\",\n    \"castegroupAlt\" : \"lta06c8hlrejkwbmccequfrwo2lapv\",\n    \"script\" : \"yncnrrnk5yiweafm393f5nvdqx8ru2o8o0t7c8d2zsjia90a49gdbfevem15o5tchgd84whi9lgghpdx61o75o1684svkefnquxnxcwcw1fsr8m36amh7qoc4kueyxvumvhkpyhgvlmr48phcg6ype0fwy02gq4fra137b4vkh6dg0xtc63f76cfqcw\"\n  }, {\n    \"castegroup\" : \"s3he81q2qu9otvwj04dej2q2q3dz8ol9ymos3rav5ob\",\n    \"castegroupTop\" : [ \"hgyuqov5bpy8oi33741197c2lhd16fuxm4kpxc64gc87kckuv5l7ax97qgmx0m59rfk6g6n9afwierfpq3lxtmzw6krcioei1g9adgq3e1z599ehop040z88lp11k6wgf43mms6zqf9w6hk8vg3tdypwww\", \"cxb7ev510equ6uvlcrqpou8l1147hyiz5m4cw143bafzxcua49cqqogqh2xwmlbft1o50shrq1wamecuhi3i4mb27sztk6q7o50k5uw7wmtqe6or6u782c\", \"8b6redhfwy2te6xek78jop919qvw3931kxww\" ],\n    \"score\" : 11.221330690540066,\n    \"probabilityCalibrated\" : -0.14953249504691501,\n    \"name\" : \"Sonny Luettgen\",\n    \"probabilityAltCalibrated\" : 0.3093222871966419,\n    \"id\" : \"jbp7\",\n    \"castegroupAlt\" : \"jse3d5rgxrl6eveboqotr5wsdi38kmgwevihbyb57d3ryr4vxoqjyo7iwhwugckdkazkusyfoxeu4st67o25plqisqxokaou3pr\",\n    \"script\" : \"ta7ds7vz2ed9is5y3qykznmtxeoryqxrcv3hrc57d3tn55nrd82ow7drnholv9a59ivsr3fcv2u6mufbh8ce0zg8503w15fj38ctp5j6eqk4un6g96skg8dpzadyorrpxj4hkuzyg7j9kohw07aagmx4pb\"\n  }, {\n    \"castegroup\" : \"p72oz3wpw9a3ou123z9aw88j9zbuw6kwougtstx81n71vsd1l11zai02d2vzaiimiwbn8zgjpfbq776fwjz8uqiifsjdticro367chgyu5f90sqp5c4tk84ac4eo44egkbxqsog2vem8i6vh71zdfcpj2o8s2mco5i2qg2qfl6\",\n    \"castegroupTop\" : [ \"u4asykpi4jp5pvz1tq3nv1zfoazfjdig4z3qfhzq0ttbajwjppnrhliysgakco6izkzrn4sk6wj13e8dwcgk905yl\" ],\n    \"score\" : 80.17730120380334,\n    \"probabilityCalibrated\" : 0.2414415248498789,\n    \"name\" : \"Gavin Stanton\",\n    \"probabilityAltCalibrated\" : -0.675345346205851,\n    \"id\" : \"i2c6\",\n    \"castegroupAlt\" : \"pbsnkr0ag4wk7vxb6vo9m3i5uiv96pc1gsigo1hi86kuhxhx8z9kh3i0depkko1d9wiibontuwhqfmg41kka8be9o73jnz6z0rytftu03681gyxfuyr0jqyzbqoe2bcwhtjdqvubyoh6nj8q31jgisw3gkimzsu86q53e7wpspgpiz2rbd7gleu1of31dpg6q67hlk\",\n    \"script\" : \"jp7705mb4y039bcqzg5rrccmu1srgh1rqo7r1fewp\"\n  }, {\n    \"castegroup\" : \"gdu3sirz401vkkvkb95ogvkcbmhy21xkufgwnw43nsl12xr2svwv39xkx0kj7zs70a\",\n    \"castegroupTop\" : [ \"fwvy1dqjgjcsjigjekxaag32b6sw1ifmsk3lbov003rcq2j0t0f4j82fh9la8140u0lngud9xcr1ea4oadlpm8ot9e2b22y4v8vv6qs1vr9johvhkdpk79m\", \"ss1ptps7av2se5nvmh57ytoao9qqr35v5tbqx7zz7lhuyu0xdst23m5n0occo5dwew61n90abaoi5e1zyz5pfpvakzo\", \"4favnuhhhtwjhbgtnoa2qyn8enravycyu11yxdj1693ipi5ofc\", \"rom1euogjlnqmfk319yoetumjps0v0a1amfdw8t9aft66dwhnyka2kjtomp237l9vnuon40y5vpyxrn4ly09xvedavduco20r994yrbu03az58bpfk7pmvmfhu8w9nt3dupmzllf22h07tne6l5v3orr66oilofklxt59eyon4yyr2vt5f5nv5iylsjleajg8v3j\" ],\n    \"score\" : 42.223718921143195,\n    \"probabilityCalibrated\" : -0.5662622480695296,\n    \"name\" : \"Arline Paucek\",\n    \"probabilityAltCalibrated\" : -0.690732569782539,\n    \"id\" : \"5057\",\n    \"castegroupAlt\" : \"j73gv2timy03lk4d70ab6ipvsiyw6w1rznvg2l42hcu32g9xse3zzdkc17yvda6mmi7les4klxyl12kxz3uhbqmpi9pcdovkn6mtn0l54960hp8l54rpupimqgv5g1jerttqd4x87gvn\",\n    \"script\" : \"ngbkhuwyhp841\"\n  }, {\n    \"castegroup\" : \"zvdm2ic6uod181yptahh35gigv5r9eqru6vi043jxf2pcngkw7cbfyndjr4llqeaffg0rudtbd\",\n    \"castegroupTop\" : [ \"zwo68uudy8py560uc67d8zg5wbxlitves2wlq37nw78xvwjfkhzhp9syteylwdud0nuo3qk45n\", \"81h0i50y0cutk1fxgw1m2mmwyfeoupfwdhtblzbwtkw3\", \"qjsr0lq72lmadf47lnnw4rqbwzbcd4cpxuxrgw06puqxqbujshriyrv2kde2\", \"wba4eo6isqgl1tfsgr91nxvor1u27qo8fvwuyxgfvkkrpiwxadj6arsemore7zwwtw7swm0nihbyxcw8k30hx009l7c5k6t0tj8lhv11g4jlobnvar9ahisrqrhmiliymnmmoj15wqm\", \"4hhveujd5s8l3covgmyf6xae59mr8ky6yn60tsme96f4fl1jwod3m5svfjpmh78m6t4t07ggps3dpfqh5bue57b3tj32al8rw2e7relwnj8dt2eehgmouju70qcaqzmh7sgun\", \"me2s1qrrkzahn3yztwb2kn1bo88o835i8w4md8goeclyjfho5r3palwrz6vfo3ciet235yr3u4hlcbinnns6kwz89d1\", \"39r90hg23ubv224a5aovir2uqp2ed8cvaxq7b5m7sljdv7bdd1jkwmr1g70zzdcxh9589p3ocssq852es2si7ox1us260kb1p8ucj9b8t48nhot2yp5gvwp60vt6nzwbu33fjpvbs\", \"xf9v0sqswxqe1krvewzw82rbjin32cu\" ],\n    \"score\" : 53.22680300189434,\n    \"probabilityCalibrated\" : -0.6059528687673721,\n    \"name\" : \"Tish Schmeler\",\n    \"probabilityAltCalibrated\" : -0.5598091440430562,\n    \"id\" : \"4qy6\",\n    \"castegroupAlt\" : \"nf113fzxdatmvc8ghh\",\n    \"script\" : \"6iqehunb3333mykxk6pnvr8qtrprfurl5xeu12svr6kfxztcfnrismd2tk7zeem8mzagq1h4bi3n34uw3v72b22ca7gxc5npugsz\"\n  }, {\n    \"castegroup\" : \"mafonbpmlbjvkcw83mx2hj50uy5o4y1kzln09limk2k46hc2u2ewk99l3g8foled46r3znjg479j5sukvhm9r\",\n    \"castegroupTop\" : [ \"6b845vssh3enh\", \"crylpg919d34emagxi429fz90fi9z5pr23q53cjcdendum6p74ym0ifor1kd5b\", \"gy5vauf7wmwoz71f466diyjohp5e80ngznkarm7mqmfidni41y4da8dxqbrr1qft6grv3s12ro3rtreuk9thaved75lh65rqrxfw3977lmockfvvbj4a9jn5ge3m7jmb5ryneha1in2dhndt9q\", \"5gancvvnv0ptfez04rtqhm06hj4owu5nmkvru3kwbojvxw60y4h4hjqunr6ahu666jf\" ],\n    \"score\" : 19.280918851398397,\n    \"probabilityCalibrated\" : 0.4678591457426311,\n    \"name\" : \"Alyce Hilll\",\n    \"probabilityAltCalibrated\" : 0.7005680772918574,\n    \"id\" : \"200j\",\n    \"castegroupAlt\" : \"gg8y1obz4vy5dkoux4qzweheqz9k3jwlec1d9v276lt3da6dhmklri3rj\",\n    \"script\" : \"zjpbiwf2w51chtz673ukqe9riazpkjxtcj17f7j96b5fl3u56f0oehqdry9i03zm20qcr\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44b44130-88fa-4f4a-8deb-3ca6138bd435",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.741216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Caste group-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameCastegroupOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameCastegroupOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "c8d35267-a92c-4f96-9180-8d3612397cc2",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/z8ze8efpsvx4scytz980r5237zf31ntdhqyngr96jih1lbyccd9bcxy95rr5y38k0lmtanlvos4tva10rklp4y7tu7jb/5vf239qai",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c8d35267-a92c-4f96-9180-8d3612397cc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.740041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "38113370-2552-4706-b3ee-a2d8775720b0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/j2m98qliky41ia0/8j5z83mbdorb5fegy6x90svfiq10re2r94fqmyfwf0b",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "38113370-2552-4706-b3ee-a2d8775720b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.739968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "c6783151-28f8-49ac-ba9f-6876c6158c66",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/jkclh24ifkx7dncdqfkpqn8dvkeyhxl/dog3ue7szndiu03dp8pwgxqfoi9ph52sxqidfqfhv283s5adgd5ojiezbo5gz22z89wtl8v5krxqbvlsz4fhhq7g7hx0y8pcdxco1zv4dyp4d49fsumyn5altfdu",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"castegroup\" : \"js005ejm011h90llgu7d0e46kdtayfmsr2xt2wla9pd96kxifi5rettzws1sxoffj661c8xhs7t1wvcceqxh13mprmo7mad9lvu36y00hfz5\",\n  \"castegroupTop\" : [ \"4o1c7rspfoxuylj5lgjn2mob6n\", \"o04roapjxjmm93u7acyfhicn489q2tevjex7pl1dxqmrmq9bnhlb0nfelnibnzfrwrzpywr5n74n4zxcokizw93gex6tvsyr3pkz7go257qkwao8lx95grfdhikfv560v2e39bs11pu3tpnbvnybl2wiwaqlic8aujkz3w31gcnlnyh8woa\", \"neyim3opvvgpxylw2w41opytekdrjqwb7uzaj7aukyvq5giuicsp1kk6n2r1ozkr8f8ed2i9ib5vno\" ],\n  \"score\" : 94.2703581853284,\n  \"probabilityCalibrated\" : -0.05582595199421325,\n  \"name\" : \"Miss Bins DDS\",\n  \"probabilityAltCalibrated\" : -0.6980719916590701,\n  \"id\" : \"a6oy\",\n  \"castegroupAlt\" : \"cssck6w9jd8it9crdxx2ohjzwofwmvi4o528vm3w87w1urcnhw8quulr45vopvwa17byx5kakbqzolkw03hfp7a7kyierjep8z8bnxnjaykhk16szsft3n0x8v458gm74c0ipbo7yrqe8o4wd6viq35gq99pwq3jtepbvy3\",\n  \"script\" : \"qwkzwaqdenzqc6oixaxz4rt8tt5ifdi4o505wbk8gymsadg6xoyp2cy8e3mqcuuvn98rl1q6nc1bqdkqvylw3oux2a5q4bxc2izafboi156s4y6hxnuqruw6larw8izmqhj0imnd78yl3dug8p1uymwgw246hyszvumzml238zskh6a2bmmcot7qbs0rd85\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6783151-28f8-49ac-ba9f-6876c6158c66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.739896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull",
          "schema" : {
            "description" : "Caste group-coded names",
            "properties" : {
              "castegroup" : {
                "description" : "Most likely caste group",
                "type" : "string"
              },
              "castegroupAlt" : {
                "description" : "Second best alternative : caste group ",
                "type" : "string"
              },
              "castegroupTop" : {
                "description" : "List caste group (top 10)",
                "items" : {
                  "description" : "List caste group (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameCastegroupOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "f703e2ac-5da8-4088-9c2f-486a5a30b0d9",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f703e2ac-5da8-4088-9c2f-486a5a30b0d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.739481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate"
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "cefc2872-8ff6-4215-809c-1d902a2872c0",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rowHeaders\" : [ \"wjfavqtto9nsrn49b6blrg\", \"y6cs5s7arwza97me3wr6p68t1czxaabgal8dwqq24r8cchdtbwk3weipu5tnbb7vcas6ompb5yzyoks6ck5xrv9bwbu3sn2hgmdrpoyztk0hfanvpkspk\", \"8x6gkldbd6d0lihdkytyrmtek1zj03ukybci64nsmbo9o5c5dro9agxjmqm5802hbcpi78j7z1n5torwqp264riwqx43n3geedjn2lhvaspq0h5tretrg9fduwpl6us8ixdw89a5wvzuwbn1gg3b2ptx39trsg1fwqovryi9tfyr\" ],\n  \"data\" : [ [ 1452013680, 1991469083, 81195261, 1548842271 ], [ 1874767658, 1950008658, 1352193218, 913474889 ], [ 1852780828 ], [ 217681510, 1573366428, 765837608, 1107691280, 1543567841, 214188201, 456429899 ], [ 42956898, 1417110187, 1690766809 ], [ 1070997890, 458888031, 486791341 ], [ 4798727, 1458633480, 51370385 ], [ 2057038735, 826763645, 625338296, 1089296872 ] ],\n  \"historyTruncated\" : true,\n  \"colHeaders\" : [ \"7iq7vcq4wlm7nqah079hli29nmqw5w5tdkftnl227n6qrccf7c48m8yqmfv6rwemd2e391r1311f9ykzfj7vusrpr3ljvypzdvuex6z27gvqrhwm0vxzqmr03l4wjnwwxfv6uegnvmfyrx22eojmfqat9179djalb2rqyqgis5ioi2t4en1w\", \"88gysmt6fcs3zf8sm2nb0t3v0lq29q3t1uwqxn9ds4ffmkqzid8enxr7g7j8bd9sr1oern5iviekvflenbc3xb5rjfutcgelafgyiwirrg3ayv19c99vawx453oxaair1zb2m1yp9wgx3pr8jrw07nv5fg54bgy3llfagrrrhnxtm81mg91w2k0w1f9\", \"p1f3zrz64ggpsp2rtdv958qfdf6u5m8uxcew5c0a49d909vtijs3z3v5ovfcfbrj5n6k0hi3wqovydi10r1kx\", \"ce64eogk1kqh1qzq3fxj0pvjkp6hkzy38vvs4ry4fyojx7v7qvra8l3km0sxr9hraltfsiib42f5k613ohjr0snlc\" ],\n  \"totalUsage\" : 2358988855204389968,\n  \"periodStart\" : 4437667229395852719,\n  \"periodEnd\" : 7295250858642751663,\n  \"timeUnit\" : \"2022-08-09T12:48:17.739296Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cefc2872-8ff6-4215-809c-1d902a2872c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.739448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate",
          "schema" : {
            "properties" : {
              "colHeaders" : {
                "description" : "apiServices as column headers ",
                "items" : {
                  "description" : "apiServices as column headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "data" : {
                "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items" : {
                  "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                  "items" : {
                    "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "historyTruncated" : {
                "description" : "If the history was truncaded due to data limit",
                "type" : "boolean"
              },
              "periodEnd" : {
                "description" : "End datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "periodStart" : {
                "description" : "Start datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "rowHeaders" : {
                "description" : "dates as row headers ",
                "items" : {
                  "description" : "dates as row headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timeUnit" : {
                "description" : "Time unit is DAY, WEEK or MONTH depending on prior usage",
                "type" : "string"
              },
              "totalUsage" : {
                "description" : "Total usage in the current period",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageAggregatedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "8876df99-ab9d-4e91-9145-1a25a4fac8a7",
    "name" : "Print historical API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8876df99-ab9d-4e91-9145-1a25a4fac8a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.739015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory"
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "980b490e-bb49-4f57-8b0a-8027a2e371fb",
    "name" : "Print historical API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"detailedUsage\" : [ {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"0ae1zp2q08wjwuaoxto0wwn13bdjktx4s3t608ogayyj0ia7phctcnw8kkzx2ee12a4x1ghh6upakmyflbzrru1kwdoradcc167rl3sdhdwhawoiclehrobdqz4bywwhxjdf279k2upblx5yfvosp7offk6lhogkb9fmycfm9xtlx56hhn30ph6um2u0apa1n\",\n      \"partner\" : true,\n      \"corporate\" : false,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"11jy\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"k0ojpxytcag7jtiq36bmn1fx174jenwoauyna469s\",\n    \"createdDateTime\" : 9105926912782073875,\n    \"lastFlushedDateTime\" : 6269881805908956813,\n    \"totalUsage\" : 8866348878426834020,\n    \"hostAddress\" : \"sk17z022ve5425tijjszrvak2fetawzka2xg7r8x05477tot1k0lvs2d0y8gmocgxi64nbybbqvwhusbacypxcjwpz9jvv8m4kixxc5z33n5115ppsiz3m\",\n    \"lastUsedDateTime\" : 4308263100277787503\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"qwvobv774k83vqmar73hcwcmovc7i28c3ktfeaibp05eut59\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : false,\n      \"userId\" : \"y79m\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"27rmca2sb9rpyd2xpqp3vnmiqz0hulvey9qskmdukt40p83q054wy27kkth8l8onp2ibae9xhugku1pp8pb5wf6h81d2yyoxv7gay21dumnijy4al35wuus6zfbp3fofli8ebx57cog26olqwxc58vs5xcxmtrq0m1qmz4y5ipk3o6qbt5lhedqbpn830esyzzdfcf2\",\n    \"createdDateTime\" : 8537344217102179539,\n    \"lastFlushedDateTime\" : 845116932442421731,\n    \"totalUsage\" : 8354415264872446349,\n    \"hostAddress\" : \"9wcsnncqmw9663jjv4f6zlf54aeri04lj6d8feek9p04nna36mbjhl4kos0l2nt88pl8dbn5uirfjy0f9tra712kc9p2fjlx5frw0jbct02naw22un8cx99cslmekkfvgow4ud227rf4badsvaqzb59g0jyha3rr0lrb5w0qfi9dnavqvq0ko96th9\",\n    \"lastUsedDateTime\" : 5886677435376007973\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"qc4gdt3xpfberl2fh9u5uxd2zf0qb9j2u7ssuyw9fqebsslsnbvwu0l3pifeusogvypmyezt5vksa4hswvqngaium8p4fug9ssoc6ur\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"cz3p\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"7q5mkwqib7949ch22os2ytx5xky8scsfk2art1cysh086xm55elaur5y5jeq42jpjvxfda3ooiexjkteh4qfyoh6evjzmyvk069ijvk8feqr3fvn8lyeby8vwzn3md\",\n    \"createdDateTime\" : 8551536172758607494,\n    \"lastFlushedDateTime\" : 6940209119883392099,\n    \"totalUsage\" : 3148949344647912355,\n    \"hostAddress\" : \"z3wfm3fx7ub0olpboga960v1zh8o20n5nxkfthimeftzxdoigerj82d5p2vsvmhpzxyk4po29w3xjjm5p5w08wciq88s6cwblgniuxcd8k7wau086od4lo38czqz9jt8r0ulf643bcz19gh7twm20fzfhcdm9k\",\n    \"lastUsedDateTime\" : 8625244243202995279\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"urdj0k7xfzahg8pgx623mkjyf7zttj8b9q8x47zwlkrzuhfzma2g8v494imh35f60r3zmqopichqvjb79lwse4qy470wszwbtmph1i15sakimy0mb8gtvcb39\",\n      \"partner\" : true,\n      \"corporate\" : false,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"134u\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"uohphrxew40ogr6x\",\n    \"createdDateTime\" : 7854852356840602615,\n    \"lastFlushedDateTime\" : 2078039549469937183,\n    \"totalUsage\" : 2838833693638117346,\n    \"hostAddress\" : \"wvupee6qdp1h6ninxf0ko9wgzy7gknqaa87d8pyj8m1wodazmdn54nva88ckjhls8qagc7evwitv63s85yf3t9pukabfcw7k9jf2a3j3spk2c8fx26qtek63nub8fg8j\",\n    \"lastUsedDateTime\" : 895223678652375634\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"ix8qp1xv6hzdqz4a3iv2lfg1so46taegrhss6awgfxy32lb6j1s31w9kulha1er4tb4ki83yare9yvifsnbclfvmkv5r1xi0t3ubned1sdmvkcmyouu5xxmrjyi237ngzargfd3dlyeouqmvdhyvli763e96eqnnay0o5soihjpkc2fe50k1qhqxnnyzbwa\",\n      \"partner\" : true,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"wqz5\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"9o4ewze2xjyjpyiv1bw5w3jezcxiuf8bvltctn6rjjb7bb0x21rmv8mx4j17q8d1t5s9rfk6tmju3yh9ifasp95k1g6yr53o37g1mw82xdet5masjqlvq4jq9qjyrjqrxou51fazeczglphwfmb39zmb4mtlz86isoijeuae8f2b\",\n    \"createdDateTime\" : 6304896133580145993,\n    \"lastFlushedDateTime\" : 1207064527190336503,\n    \"totalUsage\" : 6510320392281003497,\n    \"hostAddress\" : \"118f47wdibnp54zh64nl4ae93jjjzcdcl6vj82ln0ord0tm5nk8rf63rtogic2vc8rcm3s0203w30s0vuroua520f6zwn8r4o1wv0yz514f9zamyod6cvsp7kridbaxw045r8fw2zjj622xv3ufckjut0tct6hgvogasbp8v20x7p53ilim7p9rub2ylxh2zg18\",\n    \"lastUsedDateTime\" : 8419874464410530307\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"4zudnzppbdxh8g0yotg4zwmad9s9753p7ueuasn4lbkmseehauhf7cvo4tsttgy4lynwe5sq2326gbgfxmvezo6esms6vfhchbuxr4les1xlqqrmwxjl7vipj2woqrxxsd14ioa0h9brazrfkf20214wk2s2kmpcrnd4q525623nkm3pyzho\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"5123\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"aco8n8c0oa15zhagzmqw7jhgi3c0qny2q3bsw554835xnobmc48uhlmye7e60dtm96zlk9mxwg0rpl2i3g9bf9pqwm88j9wqk0en2a8vt1ye2ii8jh1etri28v29bg6n6li45uaaev266z7ko7p7f3up7ix6wpvbrpjzuyc6vh6w96513bhrxknvgbl2eirf\",\n    \"createdDateTime\" : 9098117183621813490,\n    \"lastFlushedDateTime\" : 559052832186890070,\n    \"totalUsage\" : 8966206842125892975,\n    \"hostAddress\" : \"er44mkhi8vsuay\",\n    \"lastUsedDateTime\" : 4483740688773651126\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"754vuwkz3bv3nfs35tx7qx5z39acck9\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"q557\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"7jde9znoavh0snly7qnz66h43xd0p9d3cryu6pew\",\n    \"createdDateTime\" : 2735537506246306950,\n    \"lastFlushedDateTime\" : 6240976877436084155,\n    \"totalUsage\" : 336852501866392038,\n    \"hostAddress\" : \"r60f0ev9dle8p3o0c7xhg2jgrqzonqt8dqmyfz3h192o21e4wq5lvoiwi1dv9faqra9iojsxfvorxvzs1swmp6cdfujxa6b98qtv0lsglp4e90u30cuipu5232qf6npy2ryf9iou8167m5wbty\",\n    \"lastUsedDateTime\" : 7417817974673491890\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "980b490e-bb49-4f57-8b0a-8027a2e371fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.738977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory",
          "schema" : {
            "properties" : {
              "detailedUsage" : {
                "description" : "Detailed usage as reported by the deduplicating API counter.",
                "items" : {
                  "$ref" : "#/components/schemas/APICounterV2Out"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageHistoryOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "9f45dea1-8b5b-4606-9cdb-ffc1e8a50e7b",
    "name" : "Print current API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9f45dea1-8b5b-4606-9cdb-ffc1e8a50e7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.737745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage"
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "09cbf5b8-8eb0-4325-bb33-4de43cd90c36",
    "name" : "Print current API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"overageInclTax\" : 1.3820098319168864E308,\n  \"overageQuantity\" : 2752896327047477494,\n  \"billingPeriod\" : {\n    \"apiKey\" : \"qui8rr07s6deu1m81kqrcn70igxg7ss9ud7d46y1j2k20z2wtj9vmb3mkk1d170fogmi9igqgbnkjvvxhcc169kkxnf83939rsvuazaovu8efh6ngkvhtuo3c2huj0mdwxdufd1uee8l4auv7\",\n    \"periodStarted\" : 5337809507483374316,\n    \"stripeCurrentPeriodEnd\" : 7879395670343886076,\n    \"usage\" : 2773871534860437903,\n    \"hardLimit\" : 3812615596979639997,\n    \"periodEnded\" : 749421310894108636,\n    \"subscriptionStarted\" : 661220167632267347,\n    \"billingStatus\" : \"tcfzckqldst\",\n    \"softLimit\" : 7628413087892999163,\n    \"stripeCurrentPeriodStart\" : 7837579263341542850\n  },\n  \"overageCurrency\" : \"THB\",\n  \"subscription\" : {\n    \"stripeStatus\" : \"jl12vr9jq8ruc9a8m9d5alx2v75ecc8s9bo\",\n    \"planBaseFeesKey\" : \"zcfdggqya7j5er7gy832vw332obscdy50wejvn7dcagqe7b2ejivphuq3otbw40iz62gy216g7vkuf6b2ckl87h60j79s6o85h\",\n    \"planQuota\" : 7868209495321349849,\n    \"apiKey\" : \"2l3pj1yjgztkql0mgibdoh35npat9ayz7sh8ddqbom4egf8y8w6dfxplvw8j5e8xbcjlq63st3x03rm3l5w0372jlsph4qjqzzxw7m59d7nx7ryd4hg0u768at5xpxxjh6kp8zkv39n4j9ot4pv76t1j56d5qnoffkowdktp86hu\",\n    \"priceOverageUSD\" : 1.1191753482177726E308,\n    \"priceUSD\" : 5.887111146614374E307,\n    \"planStarted\" : 436106455763202713,\n    \"planName\" : \"Miss Milly Purdy\",\n    \"planStatus\" : \"tcd2ufjdisv0he6\",\n    \"priceOverage\" : 5.8890030539038934E305,\n    \"userId\" : \"ohz8\",\n    \"planEnded\" : 6764386690833267541,\n    \"taxRate\" : 3.4892668287718376E307,\n    \"price\" : 8.504684825401378E306,\n    \"currency\" : \"CNY\",\n    \"currencyFactor\" : 3.6071735646368974E307,\n    \"stripeSubscription\" : \"lm82tw9t1b50donhrc2c127t7jg2d4ldvfa2jnbd5u1n68io6e4sf5j2g2grwz3n87hojnnkvxuoiqkr1dlfebrp9q4obudk6at6ho0b4wqfyzgnrl8mhsed2wsqnxsklspaxfml4fn4kbuf9m\",\n    \"stripeCustomerId\" : \"p5nf\",\n    \"priorPlanStarted\" : 8338601870580287882\n  },\n  \"overageExclTax\" : 1.7965189851708976E308\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09cbf5b8-8eb0-4325-bb33-4de43cd90c36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.737714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage",
          "schema" : {
            "properties" : {
              "billingPeriod" : {
                "$ref" : "#/components/schemas/APIBillingPeriodUsageOut"
              },
              "overageCurrency" : {
                "description" : "Currency of the overage amount.",
                "type" : "string"
              },
              "overageExclTax" : {
                "description" : "Overage amount including any tax.",
                "format" : "double",
                "type" : "number"
              },
              "overageInclTax" : {
                "description" : "Overage amount including tax (if applicable).",
                "format" : "double",
                "type" : "number"
              },
              "overageQuantity" : {
                "description" : "Quantity above monthly quota of the current subscritpion, in units.",
                "format" : "int64",
                "type" : "integer"
              },
              "subscription" : {
                "$ref" : "#/components/schemas/APIPlanSubscriptionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APICurrentUsageOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "a50c1891-0b38-4977-b8e9-2c81f893cb62",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a50c1891-0b38-4977-b8e9-2c81f893cb62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.73709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus"
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "a7480aea-946a-44c2-b91f-d87d928dc66f",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classifiers\" : [ {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Marlyn Bauch\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Benny Ankunding\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Dr. Lilliam Hilpert\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Gustavo Goodwin\",\n    \"serving\" : false\n  } ],\n  \"softwareVersion\" : {\n    \"softwareNameAndVersion\" : \"vzvsesgis3urlav4tw51q44f6wxvfrrnfk8odza44jdjhaawjo68vea1q4y2xj3ds5ewzqwo1zd66qq8o26ou70l6ufr9uv1udpxkulkowkyy8e00q5peqh6hb720sprktlioteshugx33qtunj2jnyl4\",\n    \"softwareVersion\" : [ 23752950, 1212409917, 518462531, 1539546336, 2008466911, 988360995 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7480aea-946a-44c2-b91f-d87d928dc66f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.737064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus",
          "schema" : {
            "properties" : {
              "classifiers" : {
                "description" : "The list of classifiers and versions.",
                "items" : {
                  "$ref" : "#/components/schemas/APIClassifierOut"
                },
                "type" : "array"
              },
              "softwareVersion" : {
                "$ref" : "#/components/schemas/SoftwareVersionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifiersStatusOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "ce1dc0f8-f93e-4e7e-bd80-fd838b0008e0",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ce1dc0f8-f93e-4e7e-bd80-fd838b0008e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.736726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices"
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "8ed95515-e5a3-4b1e-8c7e-d17951793216",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiServices\" : [ {\n    \"costInUnits\" : 1379420491,\n    \"serviceGroup\" : \"bkh6q1wgnggbskfuuxsb3tcsuugli5g8o19dnuokigvspnxyqqunjtdn8s9nitvmvpuwmgassgn8dtenpj6fr7h8nbqynp77ccjp8wuzk8tillxw8x6hupwr6gu8aeb6u6lr39q6vvpzz8zqebszaj372vz71ovs9bcqg4c55fnp8pvx\",\n    \"serviceName\" : \"Dr. Rona Hoeger\"\n  }, {\n    \"costInUnits\" : 397646609,\n    \"serviceGroup\" : \"ewrirg10w879793ujceqaz72dsvkvnpnb2is5gt6czgr1ff41wvwhk46jo0kulnwzef2u0o0c5mjy2nxkax9dcijf961vzi7qtm2zledkua4toz3onucbvcllwytnssp8yvebvqa9recknzy111mzh45pweku6v8lmvyb5a950od34r4n37ew6ktbhk37c8\",\n    \"serviceName\" : \"Brady Gutmann\"\n  }, {\n    \"costInUnits\" : 514615858,\n    \"serviceGroup\" : \"rg2vbzxvz7auhdh3off0xdqom1avh3g2q6s4hbaxazhwn0rsop6lerlq65757ypi7rd4u7fk1c5vd5f48dj5dcek9bgqai5ejrnzvap13hbfn517t6adh8d6ckzpo3ts2utmbubgpet6ass9bsgvqlzzia9ysxkbkofwukatjvxbk595drrz41sd5fneznrvgtsehvpo\",\n    \"serviceName\" : \"Mr. Rebecca Cartwright\"\n  }, {\n    \"costInUnits\" : 141150856,\n    \"serviceGroup\" : \"xv85bghe8gnep5zg9tssuzhvbz5co8qld8cawr39awu906850axm1n9tlawkzfengzfzson3h8or0ctu8of3bh601gi08ns0v9wxzlz8zvhe\",\n    \"serviceName\" : \"Freddie Wuckert\"\n  }, {\n    \"costInUnits\" : 329445716,\n    \"serviceGroup\" : \"aaxbvxofvftimb1s7yh24kz64hq39b0i3k1wyq4y8n403cpv2ihgmscx13ou87e6qs2p8txy3tmuh4yg9t9sryqa3ejc177d6rp1ro22dtyts\",\n    \"serviceName\" : \"Dr. Neomi Sauer\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ed95515-e5a3-4b1e-8c7e-d17951793216",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.736698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices",
          "schema" : {
            "properties" : {
              "apiServices" : {
                "description" : "List of API Services",
                "items" : {
                  "$ref" : "#/components/schemas/APIServiceOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIServicesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "bb6e0d98-5ff9-48d3-b2b8-e01b63409d04",
    "name" : "Read API Key info. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bb6e0d98-5ff9-48d3-b2b8-e01b63409d04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.7363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo"
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "e40fa36e-755a-45c9-9bce-479b714779c9",
    "name" : "Read API Key info. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"y7jqs7mh7o4lzlyoax27ag89q5ga1bsopla9oy55mhhnui5qytxdq1pwo5l34mbu70zjyg68pcq4hkp1bs547pxcul760rm755yc7su6t3be0440r8hcomsqmaezewgxz40cyfcc7cyvtj7c17x9ab9edkb29bvzx58cj3q2\",\n  \"partner\" : true,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : true,\n  \"admin\" : false,\n  \"disabled\" : true,\n  \"userId\" : \"c5hx\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e40fa36e-755a-45c9-9bce-479b714779c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.736269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "e7cf5fa7-4e0e-4966-8f97-9bdf75f9a711",
    "name" : "Activate/deactivate anonymization for a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/anonymize/w5ie436mw2menwva8s4ao2h6ek65mtqr82ufguvqaw7y7smj7r57aggbz72tj5idjft91gnsyajwypve7zxv7gsqytr9tcljub5bkawue4ynrfek5kmtplz53plcsynxoqfqhw52yvz346tfp2i2i9jmznrnnupzulihcyfee6zh0td0yue/true/97u1j8yxvob0iyu4aip1e8uqqtpr6uotzm2tk9bl0feddh18d8r019afjyk7803of4z26swkru5rr8d3r8ig02nhs60bnfw8sj8zag3h46k2xd02kihyqgh6ic",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e7cf5fa7-4e0e-4966-8f97-9bdf75f9a711",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.736072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "bd26feca-2b88-4198-ab75-37571af7b2f5",
    "name" : "Activate/deactivate anonymization for a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/anonymize/1u2bo7e32nfbrok1f8toikbryebdo1900s1nyuo6h0tqb50n4rd84em58r6axjujfiak9vtsze37atr1jk1hy7mb2yj3q2504zm0e2l0v8gwfwnmvyph4tzq5gtqdaa2r0owmrsr9vcfbeqm9urrh7h6v1lskjtxi/false/iwykrst0737s",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"0dl7q2pzektublqga476bnv322v210dx3t8ni9g7eli9hch2opg8w8chfrv29fn0qg9delgksqq4h1bbl7x8ocxiux70y6enhxfvv3rafuoirjceody\",\n  \"partner\" : false,\n  \"corporate\" : true,\n  \"anonymized\" : true,\n  \"learnable\" : true,\n  \"admin\" : false,\n  \"disabled\" : false,\n  \"userId\" : \"r1ht\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd26feca-2b88-4198-ab75-37571af7b2f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.735964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 275
  } ]
}