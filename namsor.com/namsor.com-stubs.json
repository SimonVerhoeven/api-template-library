{
  "mappings" : [ {
    "id" : "1552d773-f71c-453b-abb4-6f5ffde7891c",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1552d773-f71c-453b-abb4-6f5ffde7891c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.351944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "c38ed209-d0a9-4876-8971-02cac8e3679b",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c38ed209-d0a9-4876-8971-02cac8e3679b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.351927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "99f6e2de-855a-43e3-abd4-e1c65816cdea",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "99f6e2de-855a-43e3-abd4-e1c65816cdea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.351909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "b0a6836e-c1ea-4406-aea0-93f1c1ed086f",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Anette\",\n    \"lastName\" : \"Becker\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 21.163960467170938,\n    \"probabilityCalibrated\" : 0.5228569521995869,\n    \"raceEthnicitiesTop\" : [ \"qntuuw4g5xtsw6h2pnxh6khyp71usobek05qedy7qhsmw\", \"ualr8s5bxmq5fltsru6rqn4gtwaxw1phrr9ed38yzq5t2badtsf51ckcqutu7es8jhnlsytdhwcmnwe74ddxxbbuasqoc\", \"2r5dtd7aulnon5zy3oextj94ko38a3tggq6qah3uy2794r7ilddl5uqtw3qswcwq9qbml2tpno71jeunl8lese7vupoq2wcf5tou9bigg3jmy485uxb1rhworq0mpr9yg8cg0pgn1norqadjhkm5inhipmvhwan8z4fu48chiki8ualicxaucvxmm9caxohxgviz\", \"w7wrmsfsgkkjk4rmk668q2b3ky4f0l53zowkm0ni4opwbgz0j6sw9xlogksaf7fcm974r4ixw62evgotz6cafqf1mevjxmohgz40vnothtvjkohkxsk8\", \"t8jbo3czk0mfbtz3l2ryugljiuoscccynx77a1786\", \"y479k2ji9fsz8jafqoapo5oeg48vd8gi85wmbwfoyq24riwpgswqnqgqg53fzgdsetkwko33fjn0zg6ccafrpmtsgxowhwyos5roc6fe27xn0s5wll839f8hbwj2nqd1rgiut2y560n0vwhl1dyf4rdrtwdw8068\" ],\n    \"probabilityAltCalibrated\" : -0.9659187605489459,\n    \"id\" : \"0q6n\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"kagk4t6jj5qd994ol2dyp34ot0rzpmhp4sl199u9wmeauv2muqfxdpkxhmx158745ou0ge7iki3ti3mk7058cmbn622nevq6fzs0eodr76yf5qgvc2xusi97vjsh02cvzyvhxrgbsrjzb34i0d444mjhl3xn360js7z0u\"\n  }, {\n    \"firstName\" : \"Trenton\",\n    \"lastName\" : \"Oberbrunner\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 2.097753462439289,\n    \"probabilityCalibrated\" : -0.4859630441545624,\n    \"raceEthnicitiesTop\" : [ \"0czn0vt4yv20fn429fdtwodzmr7\", \"nnhboejc41ollewzh23110jd9942th89i04vbyyinw3ocbphdge7hzpl4mnwwux5hwtuhdjxss7p398\" ],\n    \"probabilityAltCalibrated\" : 0.23115529622199715,\n    \"id\" : \"sw9a\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"7x6anfp9d4jre9chnz685egmpua5qcbeetk2sncnjp06k26yxuvzm1lw75nxcmmdd9uydjjah4603c0w5oxg1ubm7823hs05buutm2pzgwnfnm3ubt4muw2fhja3loc\"\n  }, {\n    \"firstName\" : \"Charles\",\n    \"lastName\" : \"Lynch\",\n    \"raceEthnicityAlt\" : \"PI\",\n    \"score\" : 54.84970084357691,\n    \"probabilityCalibrated\" : 0.09093729748510015,\n    \"raceEthnicitiesTop\" : [ \"wtxuiiirc5coxcewqn73ctvclhk1lskezxk5eezic22zq0cnynl5bfwwm1uxqnbxpvfem629b1hhdgtf7gu6lz5y9xf232az2vn0ab2k7jpvcqwcu02roppnv2spaj2pb0rty3n0owrb0l1nar4g1lo7ngc04g5u7fw7x4t4gozit53knet5vr6lxa4w8o4br8\", \"snty4t5oon5ddg89skkq6k7duts810f6sy91du7xrs0eybyh0bi9zfhdflphoks6g1047saepxwpnlnxvym2q4j89f860yuh62tvbsfc8tgd14a4xyfoidk2mz2mkf0blynuz8umc20ar7h4xn21rsdistt5yenm4h3tfb2hry8\", \"0ic2sz13vqmfjw7d5g257ki64ejtrmoa6l8qyazmvpu396u3h7l4smvwvusi4l0fh4hchb1gpr32pujrhn2eoj8sesanao46e9f4blpyeeluhp7zo7qzgk8tmb3ktv8csuaof5q8do6dguh3jsw8sbzoeh8ds3doottdluotjis\", \"ex52pymcpkpxj88z0wzm1eoi4j6hm5a3zvyujpjy81exbsusjhxumv3xvi18fu0kn1fo6vfnsqkk1rtmt4w6y1hb5zj4fg\", \"o96655nxzgn4w9kopeicdqvtxkfdoazsu08l3txzvlyrcqrj0ck9cfv6abhzj86ecmd2w47040oqk6j6q2ogr5dptkwo4nl365nbgpi16up\", \"u6ngbc6s0evbk6cgr5nw675pl4xaie2mhcg6cquasgqklhscrgt7rqwvqkr5pkly9ergdwt9r78mnfito66l9wpr8n6z76\", \"i3vcu2w20dg9jurefzo1xnval4oc0xu98dpsl4492ecbkv29ypgj2581818kuzuox77kn0rtd1absjyt3pm29fee1qwom677nj64vtppuh1ck1ugmlvoox0re7bjbhyesw1sygy7wstmv6x03061fawyi\", \"11jb64i7jares0wdn376qvlzsbq6m0oiviw36qfjcnilyrgv8t53yxdic33ex286g6ok6h2z431am48mun8gnypbxhl1a75ogc6t9545ovnpubzoliqvmlmcpsdw2h7of4uzodh71e9dug6ih9h5m0zj\" ],\n    \"probabilityAltCalibrated\" : -0.8116047646142264,\n    \"id\" : \"ua50\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"bwfn2dwt6syt04em3whch5tmruzw5zkzv1m5m7h26aq653u25vu\"\n  }, {\n    \"firstName\" : \"Earnest\",\n    \"lastName\" : \"Hintz\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 57.85773965756405,\n    \"probabilityCalibrated\" : 0.7561835136470381,\n    \"raceEthnicitiesTop\" : [ \"vzrssqfylsetezl0uzb1dmb8nepdpvl6an9l3g9yg2mqzyphgbzea8w1cab05spje577vvo2lq892jqez3896k4f9kpzw18ynpxx8y\", \"2tzebahjl92h7t4tdfb5tenx4o0ikds7cazoyrqo6pwrvmr4rr8qiwzhwhdohtf5v7xtwco0t7igyt027qgadmdpndp68gbxu81ewa4d9y3cu6j8ifae4af9t8tg9we9latx3txtrakq5hs53689sg0hreczkfqn1wmyqpzemwdb\", \"f62g44n9o3eb7uydl48elcxoebjqr5ok2tl2truqlc9f5ot3z5wlmg18lt2crpqldkcnkxgq415fuv45dv715ujlcm1byk7t9q4bfc154q47jw3wki5hk3ibqewkfa605ottwfirepk7ddjujnajdxyfccbz7k4\", \"75pplpobk85ilcuz36x2hsd6sm7myrbptu4pku418cnmkrc633utinxnrw7igv299ik78lanss71qe418k\", \"8o0kgt0w52d7p1uyamb7ou3e7bboenhz0h95or5sg602y8tc4kbcqh3tmkss4sq0soxv20prcq0wyc4k72cqxtf9ovgssw82cy1ci4b45lx\", \"nyhkw3ubq98n6moznga44rqydfpzpi07zrb0sicznaj30xqdyc62tl5awm7pmb3fuenglvs3mbsq8wjo4wxaverr4m423kziptnyk9t7gh7jw8unyqzap20511ioelivyi0t65v682o\" ],\n    \"probabilityAltCalibrated\" : -0.28269194818114785,\n    \"id\" : \"3w14\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"f4qsmtlp7djjga8kzm5lysonoqjrlas20r2fbskj88m63\"\n  }, {\n    \"firstName\" : \"Jacinto\",\n    \"lastName\" : \"Runolfsson\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 41.64287354016921,\n    \"probabilityCalibrated\" : 0.26379239531038157,\n    \"raceEthnicitiesTop\" : [ \"5ro3zgvp87qr99qb130o4pku9mu9dxcfb596ajd9o4xy9evjbgh3i9vmnfq\", \"d1323eayjnn9psonf1ee2yu6jy71n68bdtb9t56t2bviul2yyn7n9p5miybzlwrxwhht73ijqtgtzyrtaqumj34bbark7orent7ldwgoa486yeeoxzpw6\", \"nkquqk1zcge0meen960pt0b95wqru7kbyrcdb4shtybstvw2x5psh5xu3z2tu6fawd6abwa6ssx0sd512udbpwbjb8ovsjce650wdue96lsbl32vtaqmi7ttdr1vi7xjzvmdhn02qu402gytesx1yv07\", \"vj3qtv921b7p19ofguij06hjybr57js8q2hv95kxr6vprwm4e2cqnvbqkl8yt9xjdvh5k86vhouv6xsliyfb78atnpy6iqxv6nn7znidzqx29kqriymzlgt102quxg6meqk6yoqtk3ffpt008za1561rgcnh6d5z2yz1shkdqfom5rp62tpzibeqtf5g6\" ],\n    \"probabilityAltCalibrated\" : 0.12230578890341492,\n    \"id\" : \"147h\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"aawnunynepr4ulir9vukfy83ahea6l63nhpjxpwzc\"\n  }, {\n    \"firstName\" : \"Stacie\",\n    \"lastName\" : \"Wuckert\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 47.45325921045334,\n    \"probabilityCalibrated\" : 0.8716048069358338,\n    \"raceEthnicitiesTop\" : [ \"5asj67kt6w29ien6io04x6c5cdtstzwikp2mxzwgpb3n8q9dk4w0jb8mvot16ujxyr1jr9qlsqm8lty5jq3wy4h2ndlvmi7setufda2dzatcznyzq53ozt19156638p69spgpl4rh0anltmnxza8wniac8guquft7ey8gut9v2dmieldaeh8i98i57b8v3vibw4\", \"2rddmrjdetaiz\" ],\n    \"probabilityAltCalibrated\" : 0.31632311292394166,\n    \"id\" : \"7i80\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"ha8qhc85w9skkby80vnjl5nxdq94jmkaeo0la1eudy2rjf76ch2onnt50mn3kec6hli8hqsvo64iq5sijci9d981gne7iavq6f8pzo5ie261wwyrekm2gk0vx54xt65bk4lwfzudi053t1wbd3sgiz6pm9o4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0a6836e-c1ea-4406-aea0-93f1c1ed086f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.351874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "46c4e0fa-0219-4681-9466-64e3068d9650",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Adan/Wilkinson/18739",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "46c4e0fa-0219-4681-9466-64e3068d9650",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.350518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    }
  }, {
    "id" : "022bf7e8-68cf-4c19-9be0-8c089f33bb8c",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Carlyn/Walker/19580",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "022bf7e8-68cf-4c19-9be0-8c089f33bb8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.350432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    }
  }, {
    "id" : "57a31073-2d10-465b-b4a5-f816dcf5664b",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Armanda/Cartwright/74711",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Magaret\",\n  \"lastName\" : \"McGlynn\",\n  \"raceEthnicityAlt\" : \"HL\",\n  \"score\" : 13.054656347007064,\n  \"probabilityCalibrated\" : 0.9259090725894785,\n  \"raceEthnicitiesTop\" : [ \"ubksz1vto673hes4j1ggu0kzsanhfjj77am7036hfwjxjl9kpq1s8dz0g1adc3anrfvkgrospchdqaq1gr2a4ww268uqj2al32290rwmgwcqqh2e45zbd6dtyynxsdkdpwb7k4gj6vxt6y7jhkl30sb19wi5c4ckioy6zvqf92dyu0b8bi3plw27hctc6fah\", \"a9rra3efpyb0zoy7m2o567qyi2ypxwiwcms81bc6cq4x6cl0v1s3yaci1u8mjh2t1zp50mwdsovf3zbammgs1he4vqy78guwu9k67fp2hjpzumzbjd6r39kyopkj84z5ojjg7r\", \"3yjbcpdaaj05zgka55u8gvrsm732fdxq9wd140tyn755peh3\", \"yuzk01micsjww60auya3kyj62l8gxhg97lhomojvcx7\", \"uyug70c3nj4y512rjdbo0304w22txachzl4pdnzijd2kkm9q1u4j7opnvny5d2kl8gdnf8fmb6901ubj4ie1uy51cx81k3ghqe06rno4a\", \"4kw5i8uww5xdhvv3bhd8rrwx2bcumc3tp5jbz7ics7b1x75j3nk7dc8lmhmmgaz4qqv0hsnu1yzmyf32xzqxneseu2lamtjcm\", \"mfg35y2wbp8h3691mfx9duujbvx8fwdjeu508mx9i3p4786v3reyy3m2efbwhbj8lomfdexwhdiun2ec2npw06omnwhhclfmg0zgsg\", \"y1ayk6bydsiqg9nwjcr2ceg5d8wdk95qdjjvhuz5h8fzx37dj\" ],\n  \"probabilityAltCalibrated\" : -0.572738398761443,\n  \"id\" : \"ldi7\",\n  \"raceEthnicity\" : \"A\",\n  \"script\" : \"gfrrhvjdqnxqr1u53z2uboph7nkzxs7ck\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57a31073-2d10-465b-b4a5-f816dcf5664b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.350329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "920e6b38-84c1-433d-a8d3-eb6a7a19f655",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "920e6b38-84c1-433d-a8d3-eb6a7a19f655",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.349883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "ecb78f55-2d85-4cc4-a108-999cac766c14",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ecb78f55-2d85-4cc4-a108-999cac766c14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.349866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "ceadbf66-b36c-4d7c-9559-717453a22207",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ceadbf66-b36c-4d7c-9559-717453a22207",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.349847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "11f3fe62-caf7-4a01-85dd-fa4b02b40ffa",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Hester\",\n    \"lastName\" : \"Gibson\",\n    \"raceEthnicityAlt\" : \"PI\",\n    \"score\" : 43.37536459751822,\n    \"probabilityCalibrated\" : 0.030437923140873346,\n    \"raceEthnicitiesTop\" : [ \"t47ynbd57gpc1u7g0o2tcbaenmnngxnvze6l8d2x4gtv6knh8093lgkp3xo8io5tjobvbaeoossgiifek1xbmlf5k\" ],\n    \"probabilityAltCalibrated\" : 0.8206812051187853,\n    \"id\" : \"7485\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"j4bt321axza1ypu21c4clf9g696uv4tpp4r6btulas2c3wan7i1i6bj3ls26zx9xgbwlq9i0oeoz8o7c4ciksq6a4mjkqxko4amc8w5ecd9651xl7kq48b2feyk8j0p9s4x1mkwflsfcibm3py1wky4ac5g\"\n  }, {\n    \"firstName\" : \"King\",\n    \"lastName\" : \"Stokes\",\n    \"raceEthnicityAlt\" : \"PI\",\n    \"score\" : 77.75882923742428,\n    \"probabilityCalibrated\" : -0.4969649892077861,\n    \"raceEthnicitiesTop\" : [ \"aa9fkvcj4nfvkvuitduymkv6tsy9e35vcq0a5frl1v6x29olyhp9qgzdkd8rlljqy80a4satybw4rsb7xzkfiu121hbd9mkquqaut0ddwsw1ucfu1umfxyayg73m5m02z8ibgkkyyco8ttpz2ng6lbcmqgj7v0vqi40wpgn5\", \"lpfimlf2o69l0sqs6c37xlprmwnjns5ozkj2udmvrp5eqipk8\" ],\n    \"probabilityAltCalibrated\" : -0.9685706161978536,\n    \"id\" : \"995r\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"x3g58l9abzk9xwwekmvejvk7fgphfwlmo8720vxmj13vs6c4am0ti3d2ubnb8j2i95iwua7xhb5gdnfejnfvpj1699pbvao800bfjbukqxk2ivgdsp1k8ug5gkymn61hx2cohxf3pf5ju0wl9o\"\n  }, {\n    \"firstName\" : \"Olen\",\n    \"lastName\" : \"West\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 93.00557142809326,\n    \"probabilityCalibrated\" : -0.06176873464696997,\n    \"raceEthnicitiesTop\" : [ \"5woggn5yj1jj9zmz5knrg6893az9ah8zpor0yk38uvud5byddsdlbusq29urtgl5n2j3p8w1lk2j7ixgih52cab5i1pzv15ugigiqa4z40wezu5srdg0hjq2wfjyhguefc24nj70lwk6c9y1xi570hal31x\", \"9xesc31ap54kssvdk4b1hm75bwyi4j51kztai0v2goskc9tu1p0udh2jccovfd8skggah6n9dq562lq0du7ihvo0qu5nv34my75jvx035dw6orefa9p9hhly52bob2cepyahzyfy7nh0lrz6th7bhqyls8g9td0a6gg88870gq8h1\", \"m83l7dts1fr3sorka1xwe1vhbutx1gmc7g3axpscwmwdw20vnap4191a4qd1p8t0s20563mzpnca253o62h2q2hztz92w5jsjeiwrzs30ch4ouuslq7ggzq3jt606g8t3zy1bm69pgatyc\", \"x5efpe2pscxp2suo9ln2atnee8e1m7dx8uzeh3eohji0qgdta37wz11kok1rem4mkwwfhute91ozfbcbi7pauc6qzs6f1tjkq8obx3m6vg2dtltwmn583vr2d8ycvmspptcxcx1e8mtqsxuht6u3iml3501vrzywq38y0lm1zjtfkxym45djjwz48dv07uxk\", \"oon2h09rkaprc669luufj00gl9lc2vn4bgjembdqndixmdqvkwcor73rajar5fgrnynhq4w48ncq4z9h7qnehyicv9y7886lt5ibuyktbjfjbjrn5880h91yl899x1qh0ierqvr5khyrgr5emk6n68l5r7ah10q\", \"ngy4xjxc22fkhowvhp8e6jbpm23l97udyohb14j3565vnruu5im7qxk1zy5pr3tgku0wl0aa9asehwnevuvcvk1wq2ef3l0e2yoq5ce9ls4v9ymk16zhiqlhw3vhyj4czjszc93p1pe7t0bzpeda3bckcpzsowvxfmd97y1dlcqip0xbv1q3ixa627j810qyu\" ],\n    \"probabilityAltCalibrated\" : -0.25607990603549013,\n    \"id\" : \"6816\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"e9rk8ij8civ9b2cj5ukjmyw5ehbbdi1jvrirg2x8kj1ann5bzqqn3wmu1eyyspnhwcrfua4s707ketqprwz3k367ihup7jdj0k1jue6iw9mc3j14xjnh4wo7q2vz0ful0flooadd\"\n  }, {\n    \"firstName\" : \"TTTTu\",\n    \"lastName\" : \"Sauer\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 77.72731038923503,\n    \"probabilityCalibrated\" : -0.7426385642659481,\n    \"raceEthnicitiesTop\" : [ \"hrqb6isioa018hjocld44vsz6vmkzzqio2b0ajqk97jd9k6mbjvk0gi3otbastbx1849916z9fa1mlx2v1ipzgm6\", \"h0zgkeydqrzg6xot8m71m27z2tbhed97hx8e5f\", \"2flalv3m42btbzpra8x53skmk36518dd89ss6fuh7t2lj8b5k11q3339yn4egu8h5ucwih2g98ozls4j8jla395hcpii4s063yc5b5r756vrvmbe857xvfef39z70jwvyklv3m29350egi5xstwfjk7f2f18eu4i3ebqd0ansz7q4xpdvtcs\", \"8s7d44yrpezd2lhxaw4ufqe69akw338l29v0vshs49ij9i9gdy8t3vb3hhe0r0ysuhgsx214e42667n4vdvj73rbltto7xxav8i90p2vqjwkf9k1o5xxj33ce3fxpbgjeylk62lzttzkbv2yh9ytvpe\", \"iwvmsag9zun57l7kn38c5da3arr01e82s6tu8eq0vdf3z1eahrsmnx6hnwwla71rutdk573qm91k9f2rfe\", \"pdvlcv4y\", \"3ntwl7sev1hoeccdgx19tkrm9t4xpiwlufqjxlkcy8ywm\", \"dmldr2y2mnrnw8gh11qi1ntbab156khatwlsnyjcgldxlomqdphe21wfd73ncdlglcg25a1jovnf1hl27iv49l18j8b8ys1wymsxk3z62k3bnwpv36i08zx9l92o8jzafu\" ],\n    \"probabilityAltCalibrated\" : 0.6429520833977658,\n    \"id\" : \"bnb4\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"71y5h192y4wozzozklec88i6hzwcx24zpz5a09yu0mdddwfbflsnblsclv7fxrnq8l8rzbenoivjgx3lli8000y9yj1e9bgl2q3ifk4e3mu41huaqx7xnh5ek1rdgmjkt8qqby9qlzmynpx5smkpp0\"\n  }, {\n    \"firstName\" : \"Jeffry\",\n    \"lastName\" : \"Schinner\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 51.94594678822344,\n    \"probabilityCalibrated\" : 0.32955017053893454,\n    \"raceEthnicitiesTop\" : [ \"ln2fcivd9zkwdx07z6etdqnmu4wvpgdtxx6oaofh8645ieer9r65stj6xkqjmbmk23eorjhh10lmk1kinkntghsftpbde3txlfyig028w4uevztx0oayjg9d15mdh0pod0930m06myl23splgsagnve02u4uzmm0bj4elrwfeioyovcoca1ehejk3j1ho\", \"cs64qstnnczjt08ohpr9vycc05qv3ns185fgn0f8\", \"lanadd9aju0c4n6za48hb35cd2czerk8jlpqpr18bi9s3unezq2dgcosbojb9cu1tifebgtmcv4dtjsy6q1nh9kucyqqcm7mzjanhtn5izvnfv140eozoth0g4w42p1ul2x3llwptw5i95qggskx\", \"kv0sbv1btsc2qaat3duya264087b4wkj8mybdv5p05osb2tdw5a2s9qgxc1d2lkc3\", \"gwjgza9ndkpj4w8ghzjn1zhsd79ltk7zdykkgymou4fwqvfgpax9lb9o6zwqedhla7w4kva8g703rp9p7q3xe1u11rbru70ul6qhkpdjyuobyc3i11lvlzs3idtkk1ucrz22vz7dvcfsold7wyk12sajysr84qh59zkp\", \"bcjov4pgscdj8p2auwqooub5kos0r9y3vfp7j94fxggabmqd7gnjeo6vs9k4778xygy4hhi9mngsmmu3e0azhnw2sssxtrnwt0oztp3acy8dbfpl2s3in74l5\" ],\n    \"probabilityAltCalibrated\" : -0.008960326399868102,\n    \"id\" : \"32oe\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"wkz7zcumcnrz6blz2p4zenn40guflpa4sc3vk4t0lka0b1fugkykxdljh16l7oes1rfpuiq04enguzu36hqvfijoj5kig3gghe0jkba1u8kpjzn3cz0pbpmpmsus5t7929syqspzb4ncwdtte3cr96yuet\"\n  }, {\n    \"firstName\" : \"Dionne\",\n    \"lastName\" : \"Klein\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 4.705713200250239,\n    \"probabilityCalibrated\" : 0.824842386179649,\n    \"raceEthnicitiesTop\" : [ \"s6vr2efkuin8khat8xf0jeoftkpvt4djyubilmzv0itr64jty9ii2iqazam071wx0f\", \"je3\" ],\n    \"probabilityAltCalibrated\" : 0.059645808439925174,\n    \"id\" : \"0j08\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"o8vqdwkbfemni64xtcvbqne3dsfua5r3rfxtn3bd6laenvxvh8bzxw60jp7iz4c0wqzihniao4os5xbov2tningixn8cair8pgra26ouffg22kxiv5zvz832q9ssr3p5m9rwti5m8z6og8wpvivtejcrfgk5eztt0yt685y9vg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11f3fe62-caf7-4a01-85dd-fa4b02b40ffa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.349811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d15c07b0-61da-4cdc-86f4-7f209f6127d9",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Antony/Tillman",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d15c07b0-61da-4cdc-86f4-7f209f6127d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.348451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    }
  }, {
    "id" : "8da5044a-44ec-4143-84be-b43f0ef26680",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Roosevelt/Wolf",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8da5044a-44ec-4143-84be-b43f0ef26680",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.348385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    }
  }, {
    "id" : "17254546-1e69-4f84-adcb-cccfff9ea881",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Melita/Botsford",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Fonda\",\n  \"lastName\" : \"Lehner\",\n  \"raceEthnicityAlt\" : \"A\",\n  \"score\" : 54.8176210350425,\n  \"probabilityCalibrated\" : -0.7211269248904999,\n  \"raceEthnicitiesTop\" : [ \"l3pmzdehw46tgjbboukk7r682z1uwwm6vv9qe2374grgmkq111z57v4m0cf6td24oj0ufn1i46ojer3gsbcoaerigrw12urllc70ahxkxheqqj8vvy6kpberyy0agzt81c9yyzfl2ww90tk48s5x4vsva8e5fvcv\", \"5zwdve42xcodamvv6pbq\", \"457mnejbqt9u6ul0tjbgg1xj23xeqh3rqkfiemuw64cddgxzgjcs6xi5opnr60df6ze0xkv0w2300g0mmb3mftjtfnsd1oj53s1tojq3xava8oroojbblx11vuscrcz1erbhrwre4ors1iljpxtydxem3d2dkqsjeidryzabmxw\", \"5zp20x3obm2wfzsr045kgq649uvgwf6z39aomo0drnilnuehx4mtawqzrudxwxqvh875\", \"rthtq60kyvwmlbilupxfafab76by9k8cul20e4baudgk6l6ifmwwweikp3rltp129zhwir64g2wx55ivxcp58\", \"off540qpjkh\" ],\n  \"probabilityAltCalibrated\" : 0.37394735183487926,\n  \"id\" : \"j327\",\n  \"raceEthnicity\" : \"AI_AN\",\n  \"script\" : \"zwso17z444jj3uf8n1hibw4sx6zoukizgubhtkt6vcagq5yyegwe8bxeoy48uido9qjlkl80cqrtfverchhuv1zl880q4tert3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17254546-1e69-4f84-adcb-cccfff9ea881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.348298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b9a5c25d-2f04-4a24-ac7c-0eec1efcd92a",
    "name" : "Print the taxonomy classes valid for the given classifier. - 401",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Ms.+Ambrose+Witting",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b9a5c25d-2f04-4a24-ac7c-0eec1efcd92a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.347795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses"
        }
      }
    }
  }, {
    "id" : "8d3ed9c3-3eb4-4a7f-bbb4-de4ccc414937",
    "name" : "Print the taxonomy classes valid for the given classifier. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Myung+Bauch",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"taxonomyClasses\" : [ \"z6fymd6jbifyj5vq2buvpvo6i787fydeq8h65yubw89umhxztrsfwgdwkpuqodqnhtozx0i7c2o4pv9dv3ty78m3vw4glk3fu6vhzr8yqwqxeo8fksso6gyzyuyg0bx19twgggjdfytvjcdu5eydxbt\", \"4ff3690z65dick7anl1ef76ejeoi1l3mlf3v8tw2t6yie2fc2h9d6izdukaxb71vbsk55qjpqfchh4xyw9vr3088en0mbyouqb8xzycmmdmwolio5j27ytdkn2ggzht4br8k07b3oy0y1gb2ytrfnvjak96slt6394fm9q8u1\", \"saica0cb70q494gp1awx1lxilqctj232pyk2sc5gq96fj8qad0bp70qguiwy0ts0l3y6nf3f5inswtoebr5l1476tcj1yvf41fjfcxdkx2tdsld2ii09zx1kjktohvncwmtakaoo1uzwc65tr59whbce392p2dpfgj7faquafefiu6lj\", \"npj4kr0x0ugczd2vjl0fwd5vphklxi5n4q1qchyjvz0tp8nnnv2uff9w0pxey35l4h1cyrq4ens879r70lahjoqj5foby824zj8nof44d73o60nf1vph43wan1cclquy83t\" ],\n  \"classifyingScripts\" : [ \"fcrly1en7ck3sfbz0pzxfcfmyn056qa788j8httx0ioupftg3ju1ef9b5p9yqz0l41v9gk0qlpmnimwhponkt3q2pek8kaxyijazdybzyu7u6yzjs8txtcth7wplgcglftx1p3enqdhnrq8hjm5i2q97mt5j6zrfusn5\", \"i5ka8hwff2ced3qr4qfqncexz414h8j1hlevh7lvf2j5m7flwqffq1bi5ii58fsyrbhh7cz11g7qldlfr352ksmffaqash9dnfb6au9y82kzy5tkgbkz5mcs5nh6j71uz9586xvh566ixtxhwouj9as2a0m0\" ],\n  \"classifierName\" : \"Luther Haag\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d3ed9c3-3eb4-4a7f-bbb4-de4ccc414937",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.347711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses",
          "schema" : {
            "properties" : {
              "classifierName" : {
                "description" : "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
                "type" : "string"
              },
              "classifyingScripts" : {
                "description" : "The scripts / alphabets this classifiers classifies to",
                "items" : {
                  "description" : "The scripts / alphabets this classifiers classifies to",
                  "type" : "string"
                },
                "type" : "array"
              },
              "taxonomyClasses" : {
                "description" : "The taxonomy classes this classifier classifies to",
                "items" : {
                  "description" : "The taxonomy classes this classifier classifies to",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifierTaxonomyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b0237c75-de17-4cd9-81ab-54025d5de5a4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b0237c75-de17-4cd9-81ab-54025d5de5a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.347386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "db8d1404-afaa-4e45-9400-e61be78a1c8b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "db8d1404-afaa-4e45-9400-e61be78a1c8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.347368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "edd422de-e90f-4687-a4e5-fd5b3a0b68aa",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "edd422de-e90f-4687-a4e5-fd5b3a0b68aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.34735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "7bbfaa8f-9bf2-4b39-9576-991a33ad2235",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Amee\",\n    \"lastName\" : \"Heaney\",\n    \"score\" : 87.86200655658295,\n    \"probabilityCalibrated\" : 0.4180828598109918,\n    \"subclassificationTop\" : [ \"axos4mhlkz610rmid4dbsi3sm10pspbvhshpljtmfbv4vralb2z29i0d3glviku732lrzfcpvqcmum9jbk392rteu0selxb4teyjkehqj4nsfy44l7h3cl7wkefiasxrrtr1nospo2vfo129cnxphcpud9hbnh4ehm34che2y07qslgc\" ],\n    \"probabilityAltCalibrated\" : -0.7577965685257773,\n    \"countryIso2\" : \"9ebvocfdd7sfitfbxt1p64h3lxgi41j591kh8m2o9bn31mn3so3bifws6l7ndnqzn1sga\",\n    \"id\" : \"vmd0\",\n    \"script\" : \"ckuot6aaq3ju1llp6\",\n    \"subClassification\" : \"d9z30csxl0zxqulvxozttjq96y93zoxk6u3lxfpf5szvr0hqu53at6ulu2tk6djrrxocrr8t6d50oxw2iwpra0x62vxh1ur8qfxog8g6rtsu78peljb73uzd7v5yicuh3w7tejh39llzmdgbkvrnkvg5x8s7sq6cucyvrvvcvgc5r51\",\n    \"subClassificationAlt\" : \"spt18g377s84u1xdr58xc7bpdspu4ff34a9mfj6e652fb3kxtf94p14dw7n3a9jltm4kbprxuzxzamhniujhb4iobg3z1pn37pytlj2kxcc0s0i6uqqcf9352\"\n  }, {\n    \"firstName\" : \"Nelson\",\n    \"lastName\" : \"Borer\",\n    \"score\" : 33.12853898507918,\n    \"probabilityCalibrated\" : 0.11735575748234517,\n    \"subclassificationTop\" : [ \"v4ptzjus30isk1sgbiwjkkrn2dy8861bcxpxga2oqm3yt47deccrhqse4f0rreitq\", \"2dpyk9yh8gvt68wdkk7z8st5rg7hnbehuy95l3id72x7uf4j8asy4rxw0l92iaf8npgp0dzppa5gdnc5zftgmo92w59vlgqrwd06segxg1pjd7fgoj2awny1bv1dlgnknfjthz2l9t\", \"cap673mu3gk6i2zyse0sprtlamzqo92jh01tv6h13ahwzmaqx4sf0i2skmqlm19n6lm9u4tkgpkobzynfopxr262wcu7954z65e2u3m15fmh2x0ze2ghy4cuvs70x6hv9g7vc1aqme74k0e8\" ],\n    \"probabilityAltCalibrated\" : -0.8788222271199897,\n    \"countryIso2\" : \"9tnn14y82wxx2uom9ioswcn3ze1n78m540tcmu27rgc6dcgw6rn4mvt9k93oqzz4zs1gi6\",\n    \"id\" : \"lghz\",\n    \"script\" : \"86dmn22bxq5\",\n    \"subClassification\" : \"h57mkv7yxzxdpoornes0ji4phcom90wtnuwr6jcgae3t6jzbq7zf692an6xyzwo2bkbj3qukeake72dx0sme96ubr7ns7cpwxkrb5qfvd2eb3nh3rk8849r7n50pwmqnl9g7zlpjf709fswghr6n1xwwg7a9zv0vjsm3bkp6177ra66hsui0p4ki6\",\n    \"subClassificationAlt\" : \"l3lfpsppraadypx9jnb2uzp1g6z00ymmyxfqsfear3z1og5tyr17eoq1p9bjk7ozk87248rve50ugxnv9qnu7kpruvw8nti288sx1l1c3or4somybv9jnj6sgd2b5qr9dcokh7\"\n  }, {\n    \"firstName\" : \"Jarred\",\n    \"lastName\" : \"Gibson\",\n    \"score\" : 27.745248030316215,\n    \"probabilityCalibrated\" : 0.051816004896350965,\n    \"subclassificationTop\" : [ \"wkdihvukmhyob25vifkgg0j0i2k5cn9zxzmb3njgi\", \"67uz4gbrvz9bxw1e7v66mb7p1euzkyybwtl41uwc9b9su04rbaqhfh6h435i8e6ju6vicorm87t6m0hu1dvqiw\", \"750ro1hamb0zlghju3543rxqqoz9m867a414v94godus9r5hzw8ufjy5zcb5og433t2k1m0nunmkpv24y5xkpl2dzo8igoyj8scxkfemsf4vmk9xqm8d91aoxl\", \"5hi3attmfj78jq5bdnx7ahpyw2dot8rx6fm7q3qcreo5jjyatqxnaubmztr3evmhx8j\" ],\n    \"probabilityAltCalibrated\" : -0.06217501317096907,\n    \"countryIso2\" : \"aj0ic3s7sio520w78q3ctqkyg73dag0x9kt09l1vykd7cpwwrxoeesrc2wtahwiyal8z55nzu15oq1vy20hzs\",\n    \"id\" : \"ijfe\",\n    \"script\" : \"mqlf1lrxleg9blrd6bxq5oi5gn3x7qr1rwy3m2gim93dex5o8448j3jx5umfdwvb4t5jdfihvogajik6k3ns84mb8wat\",\n    \"subClassification\" : \"6xzw2y120zb1gujjm41ckshve2zyety0zyerelvlwxq3bk3krtpolj3unjg43xquqkxhloe3na75bj5dwtpxbo50ssu0iwvmjoeznvf35hbsp764il84xiajvm9n6ztzq8bc72q166xwss6rj0qdcrwyjc3gj401a3r2i\",\n    \"subClassificationAlt\" : \"a2gfm8btit7s\"\n  }, {\n    \"firstName\" : \"Ligia\",\n    \"lastName\" : \"Abbott\",\n    \"score\" : 95.15772391854927,\n    \"probabilityCalibrated\" : -0.5935737721458452,\n    \"subclassificationTop\" : [ \"8yh5fptvyl606z112p710wh56\", \"3dgch9fdz7z60bxyfhyrs617blbr28v1tu9awha6s1y0qjnf5427ru1f09wrvkhldr20s989hnrs6wh77412scihp8xbjbv5rgvob6lxsfk\", \"rci5z05mqth3i45293qid8qufg9fnmkky01twlfwdmbxc0knauhsq9nj1ghd5dvrrp1eufhhsn5o32wd87odgop59yl3uj7sb9coem8dinihma7vc8k5gzs079s5xqekng1b36v4l2qc\", \"38jttlslq0giulg9xvlr20c8b\", \"2cub61gc95iiy39ahofdrcerk3vrye3oxlqidf6vxrvxrx1gpv809hct4a89yl84bfbesskdcml9cjnjto16twb1noothrzzbx7zt4une88wo6hq2ktf175bqlqmo6yz6v3t1vklfb7sxgl9\", \"g1h67mtdvkssk61bljf0kfnc3066jnc5ao9xtb4jjtn7u3pko9fsjg71hih8mz98su9vx56exarz7uhwpkihlkyzzmtxpvw5\", \"h2zdqhqbfa3ti81xaeyaooy7247f70c4ken914vlbkb1bddp50brixw5swt7n5ua5qnc01o0k9wpgszjpq7mau5348at2vcxmsc7q39u1vimxaqk26lybz49qtqxj25xtqctnf7\" ],\n    \"probabilityAltCalibrated\" : -0.619506182057501,\n    \"countryIso2\" : \"umgtoy6el2k64cecjkw9arrq7cgoc7kswd35oc4rr0p28i640djola3ccyqqkdwfshskjurrgftrohlz4hixs4bmy9d6xl8jy7icof8tctnkosv6dxd3cvmh9rnl01l1mt2fwpvtz6z2jpob1gqot05z1eu7sv3wky296y3fpwmkhv4say7h2m0i7iq\",\n    \"id\" : \"ku2d\",\n    \"script\" : \"e61cuebba7itmrjd9owwugryweso7vr4rjs2xfnb4og499vgbl23dw7c0exfgbcsby9vtvpdujhjokm3lmz4xfrb46r8i22q1qfox8w9fhsj7wn8bff2hnfu6qs028o14badnllrrgto518dp\",\n    \"subClassification\" : \"uplvnqz2n95dalegxoxqqlcayvso8tqi048n95y5kesnzx62jy3yjtfpx787mzoguiin60idkiizsd4lk1ar9zqat1i0zbfaez3urmc15vx7i94q4xiexq0y58rw7tynrjj6bj8y4bd5su8h61fvv3uxk6d8htbso9ie3k1r\",\n    \"subClassificationAlt\" : \"g9g2k8eyslof0ydq66334f86tb0tvr6aw39xmi2ctyrb13ue6t8uttpz0lmtpgznfc3x7op2f2ds5m4sz58rikcw1d11gcro6l7tt61h5v5nc5epp3kvj91rt8wk4o5g5sc6pr867kco61qbgesi74lpf1cj9pf12bfbbggjmyyabybztacfs5i\"\n  }, {\n    \"firstName\" : \"Jamel\",\n    \"lastName\" : \"Hegmann\",\n    \"score\" : 95.47065981342413,\n    \"probabilityCalibrated\" : 0.11834490233350214,\n    \"subclassificationTop\" : [ \"i7q80vqvy2tcobesi70am14tc6akrsw97b15fy1pphq5wvvpazthygojl504qs9s7n8rxpfdwvparfw273r82zhmk0syqhb8ro7vgvoropcx97czrrsq2sa8mez0bdeurtd9yz6rhjw3j\", \"cun3a\", \"rbeq1odrr4thlpr14jqg2xhohc\", \"3wyjfa9oeuh14hnsvmbvun1ndsmi\", \"ezu28v982h5h5zalo3wo9zj7ifm18948iruk5toeve2979bcwp7lpxifxascznfmuossgcb9ld20rx9bka81c7ikyu3oqqkn1yumwt1oaxhyq38euthq3k4dtpqam1tkicmamb8krg5vr03c0s1adwvjxfls5tgk6wv0tmts1wv3rzntzhw3yrsx0u0\", \"pcw0v82ra3lk3gyj7uj73cvvd4qytvjy30d51\", \"sg94g94348d6h3jr86unjldsuij8f7781z77jndnlttgm5o1l0vv571wz8utnobhvh3y5bhhg3x6emte104mvp219i79\" ],\n    \"probabilityAltCalibrated\" : 0.35577350231658245,\n    \"countryIso2\" : \"6mnrd5pdpdie3ox2h081jixpze5e03op8zhn5\",\n    \"id\" : \"aur1\",\n    \"script\" : \"jp2ftiwgboxmrx\",\n    \"subClassification\" : \"abnm3f4dku1r59ztkof2u9vfz7ux4kn66700sy6mzol15rnyf6mjdy1bczsgs2s84tesybxq4631p3hfehj3wzzsesqbo5910295mpi9k0vj7yul4y82jrbjx4s1m4i\",\n    \"subClassificationAlt\" : \"asu37b51wnxds9f6u8e6898hwobggc87v2belj59x8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bbfaa8f-9bf2-4b39-9576-991a33ad2235",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.347313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "13884cc7-9c33-457b-bee5-45eab852818d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Rodney/Hudson",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "13884cc7-9c33-457b-bee5-45eab852818d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.3461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    }
  }, {
    "id" : "1799c5d7-b638-4989-8290-ecf1546ae149",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Cody/O%27Connell",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1799c5d7-b638-4989-8290-ecf1546ae149",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.34604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    }
  }, {
    "id" : "6d48138e-7806-41c7-a5fc-66fd9bc3d539",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Rory/Nolan",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Wilford\",\n  \"lastName\" : \"Legros\",\n  \"score\" : 43.44073392466904,\n  \"probabilityCalibrated\" : 0.2877587374369224,\n  \"subclassificationTop\" : [ \"f1yhfv4sple9dyf2far13i22x5hl8tivbxkbm3jij3ljk0ftmgr7te29fnvbvibfel0nsy0\", \"9m55p28rbcbv6bxkfz4nu42puvo4x4h42a5q\", \"tvwegt74lt0qu8jb9vmta5o1v1qhbbhgiqw52awgdn5zzexojfhszdw0bf3w84b7ehrtjmhgo2sptlgq1uhjdifxlg3j3mwkn8tvz8fvenf2\", \"anmzi3kex02e9pio7gq39x6sjyozq6xlup2sqtyq777y2txvbhyb3apiuiaxq1u9kdow4w72s2wt6bwto5sslbxaawqbnbtub866grb7w4x0ivwt86ulwailbnl7a9zyd0aqzmbyj5afc8disfem8riro7lx2uz646ap3f7lo5bg66qmbw\", \"syd74o90p27m09zfisq4tkugqg5qfaczpsv5z9iknoegugtschlyefgzcklmzx79rqbxvvt8280oufr2k9jkqb241da3sqgfqidec0zzmi160vscz9ap6m072dc8ki6ge2tgbw7fh2lzx8\", \"ad2697rd2iy8m804pzut9x09ogdkv2hmp1ejzm27pji33v806yz8ev3mubcryulzm02hf3vxjw4oulxh4yvq6sm14f6uy3t4gfftp0oizic6w2l2s7ujrksx4yc6fw9744ctdofbe29rt53og6rwgfp03myt2ye4mwf7z5k7svoqy6fe8goso2lfsk0lp0fhdfiyn7xr\", \"4n7pchl1dgp1rscwkachy68ykanchxy0auc8rtdc6crdbo50035sxauph0bsheond6f3wr6rbn3pnn0ouoeg1f75\", \"wnw7sirk6dlkworvkhukwyreh1bcr5nxpbpyw106nnmtvw7e04d2l0t988p4uhwia\" ],\n  \"probabilityAltCalibrated\" : -0.2946230925876683,\n  \"countryIso2\" : \"3166vu625hbkapebpw1l0fy8g9m7z9qqs0v3amap5ikbycob6045v91mzro22055qhmr6tpwsmrvgve7ffvf1hlev31\",\n  \"id\" : \"k612\",\n  \"script\" : \"cdywo4y25fk85qcn5jhmot2m4mp954vvj58fz984hvb7xbnacp4fvry3gqzj89ntpy4c4sehijxqhrcxye7ibs0i7u6o912mq1z1jh12wpz5cmvk1862jid2h7\",\n  \"subClassification\" : \"s92c4ki1j224mzl12zh0wm9zvqxfojqktzzz0vdqv2k8a57ad73uowxy92d983q3nyaep4k2uze5knun7th24eq6gs66944riccl47xjag3rtc5spdgg7fpvvxg67i\",\n  \"subClassificationAlt\" : \"n26jwaogzs3xb2l2x3nipy18gfl3b0qhhz8fn61z43kz9pey7ait8vicl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d48138e-7806-41c7-a5fc-66fd9bc3d539",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.345964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5baac684-5d10-492b-8526-ca138fb6907b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5baac684-5d10-492b-8526-ca138fb6907b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.34554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "46a71a5f-6685-4e51-8147-fffbc46b8b80",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "46a71a5f-6685-4e51-8147-fffbc46b8b80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.345524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "b919aa16-983f-48bf-9dff-566241939a27",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b919aa16-983f-48bf-9dff-566241939a27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.345506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "f455d6f2-a7ad-44e0-8e57-6553172488c4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Michal\",\n    \"lastName\" : \"Fay\",\n    \"score\" : 24.018120234640595,\n    \"probabilityCalibrated\" : -0.5903991012072636,\n    \"subclassificationTop\" : [ \"ww75ye2dok1yn0hxiw73qj93oqh104hyn0r0di1eg9l0a07bmu4wu12ol8a8thiu0zxkrbe4wa95dr0y63g93nos0tt4fcxdw\", \"4a04s61nd4o\", \"bxnmia64lra3tydh1ea8vafqpexiaqjej3u2j375vtx9f9bhdb8266je24apyhh7kknk6eqqp21c0wvgifivt1ietqh19c4od94alk6dmusxz9ihsnqvipsdmodgpl4q8w75yjo2z0788ejo2eqyb5uc47wr4afsu19co4bfg5ysga3uplj8b1jt\", \"9p5yczaacd2lhy1w4tiqb6h7zgj8ymbuhg33ffwyodn36wqs6jrnrerfcqajvwzemcrylc8wezkcn4d6zegsc51wogi65ua7vtehilc0ae5nwt1je0usae94nxkmqohu950r68iarua85ktvnk435f15q2cikut5f60mpbxa1wu86xarz3v35mgmdp\" ],\n    \"probabilityAltCalibrated\" : 0.23254903141403682,\n    \"countryIso2\" : \"37qj0q8rqwcniy3ev2c7mt3s1km4towyx0a0808kfzqohj51z2zk8diw6nw5cnnydcz7tnr5mc1ytm7yrvftlfqkwm1922cq6souiettoe1ruxdrfmtkc4e3n7lq70jr6v\",\n    \"id\" : \"3g34\",\n    \"script\" : \"la1trz23mel\",\n    \"subClassification\" : \"6s400ep8nixtmkns7jrwc2mcd0bxvnbxzpdwp2wpnve3i34mhjoli0bt1hffmxglzi3mogbh4le3x5p87z0lae1kvu7jybnmhx6zszar4twjysbmf9suqnh3rncf2pwk7gz5xf9kw3g9amtfbq6v6rj6gjw9ecg5zo5p3czr1zqb0z\",\n    \"subClassificationAlt\" : \"lsy1pjln4ovri3m2ou9fxegpgs02k9owvgdfo59tswu6d3t0iprq3040\"\n  }, {\n    \"firstName\" : \"Stephen\",\n    \"lastName\" : \"Jerde\",\n    \"score\" : 15.254496701473307,\n    \"probabilityCalibrated\" : -0.9605097726401344,\n    \"subclassificationTop\" : [ \"olshf132fxx517yj7zwelccimaq6am4ah5ya3r5umdbq6vs6n0bju3qku6z72700hzbohk50c3pxxp008\", \"5m6ftaqpb3p6gp3b11ickrhnylj8qkdcigm0oeqaki1ipnm2hxo072yp42v762sdmpjj0s815nz5xhlxjvcrme7n9lrzfahf2obsv69n3w9f4j47m0umh38epyx0uvuu21j3rf8ziplbuemsrbi1k0y4osuqxj96dpwnaje9xh9jgsv0\" ],\n    \"probabilityAltCalibrated\" : 0.481880269255317,\n    \"countryIso2\" : \"iidhmgust6cyx1uv942v6l7epz28mhywzny42bd76uhglqafcdjfws4vkifd574d1lgy4m5op\",\n    \"id\" : \"j532\",\n    \"script\" : \"va8xkd5t98ulrwtz6xxkn0m27mor505os52gzrudydz7wbylb7qo5ux2093g0qydqgn7xqhjxnypjcg2wzjb3la36mk8popn5q228c486xusal1unhxg5rw0\",\n    \"subClassification\" : \"gt23kcogaells1wy0b8vjuyt6lws8nk78epwb95jcnmulvevv7ze295n3axg63u8rf6aifyt4tf1lquk0q3xiqbp7ybo\",\n    \"subClassificationAlt\" : \"p55s1iw0ch0u4vzque8kcroyp7swbij3gco7phzarn0b49o4aachgdmgql352af7lb3ud1se\"\n  }, {\n    \"firstName\" : \"Latisha\",\n    \"lastName\" : \"Kertzmann\",\n    \"score\" : 84.80838930258726,\n    \"probabilityCalibrated\" : 0.6937126119352475,\n    \"subclassificationTop\" : [ \"sw4gslxfsfzwgdhn5yayz557g54k51qyiknow8k14s9q7uorej7a3mmlhnqd6gmbjbpftjs1bdm0fgqenkpme46ggs3ramyyi8kd76hgui64xi1xd3sigstgri0vr9t2rhy46cj1j76o95u8yjvq0aq1cvjkzox9yhnmxm2m4wqfa4drcfayz8j2il4uy\", \"zhushxpr42u0hnkfo4c89tswjbb0qdouzj9fbwvd1j8p76i87u7s5abix65\" ],\n    \"probabilityAltCalibrated\" : -0.9816215276297782,\n    \"countryIso2\" : \"f18g6ompfo53126x0tvimzlh6z694y2j7ww6judfyy3bkz1jcelnn59ve8yyczp44ssfpixujxffqcejzlpho17rlyettlx\",\n    \"id\" : \"qqgz\",\n    \"script\" : \"i0v90hljtj6sd26587445alabign0vhtm3o25hv8pggach8dvlohnq32al2ri8s6519majpvglv9c74gj5jyzjyqrx3dtn6kff6m6nsgrne7t3m6oabdsf\",\n    \"subClassification\" : \"ola7lhnidx4cdt141ugbhg8mksm0n32rla2lynerrpy9nxpbg589ip42l028mpfo\",\n    \"subClassificationAlt\" : \"qu63p4zl1cxfuzuzorrg3r5n1txlbpvdgh26p4v0061n9q6ovutshac41tojto7gip6khzt06cpcoh5mhqsm1u28pi5k2adbh9hmxh10p6pynhm3incmh08uti5g5hfp94vpk3eha4hpv9qcac5of7qflvvvz39bddlvighbmupp7yorpqws7fnecaft7fglnxd6\"\n  }, {\n    \"firstName\" : \"Yee\",\n    \"lastName\" : \"Berge\",\n    \"score\" : 66.08387374573125,\n    \"probabilityCalibrated\" : -0.25552748533838043,\n    \"subclassificationTop\" : [ \"drmqvm7uexivgx7pnry8hzsgarmy7ntb7zgrtj39n7oxi8yh04ighizuohe5gv2wph\", \"iiwv36rh5d93znfbv\", \"eg2cmr2f8qysbni9o6oj7m20wlo4rbd3u5o1ue66ybf58hv3wzsyqkagg6vny5gqnv8hdk4c8e8qgb6dykppaq1x6km7mz7grnyxab55oh\", \"hxw38ahpyhyqoe556vpdvsvrvc5w2jbnlmmv9roa02z12b809tgy6s90p1avd0p0wavjck33unvtiva89gzezgsqhn9mqjl3md9b0qs7pry7moo0mfm5uac562dg9n68jx7gnlrevqcnegm8wnqiujlxervesjikjlei9lmotli\" ],\n    \"probabilityAltCalibrated\" : 0.7810414764956342,\n    \"countryIso2\" : \"fn1b4km9ggpcbbwdw3ppbnrr47dt2miie7d17azfsbbv5pi7yoq3gtle2320lv8kkzqckwoj8a1fxr2y9vufa0ib92onk4dumh2zj2t7pdpxd2ezm2drv5tbgnn21fqzfbrb8znt64ft7vc3kbpcwsiv85rw6pipzkebbt83n\",\n    \"id\" : \"1y32\",\n    \"script\" : \"5pt8ls6pplnkbq2pl2sf7txknkhig7gf6kvj50z3dqsuzgyb7jsc6zzy2z5jcn0b97hkntmosglkxru9195fofojr18jtakqcyyq22fgg72mysd9xaz8h6m1yyd9jeivu53ins29guwxabydusr\",\n    \"subClassification\" : \"50pcuazrlxl5uv4svw30fkzokka71z7m5ew5h8ow12whzr8w5gbn8ab3m9fzkuzsylmqhhwfq8gqlv1o0vob3vgbimatm0xquhvyg2b0jhr3o3dm25doode1t3uq\",\n    \"subClassificationAlt\" : \"o94mfymanye9rhvzrtbsxhic9s4e5yz66uyq4ggq44xs5h0nkfhld6ukn79xsmhbv2a0ramfp1rpxlzymejskx4nsgo534tgru4x3c1p63v8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f455d6f2-a7ad-44e0-8e57-6553172488c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.345473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "415a031c-2fa6-4b7b-b6f3-5ac5386206bf",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassification/090d3mgxhkye66vbrw6etqtvmnhzk4z6m7jhlbbyoe5xtzy79z0q6qbh33tcp3ozxol7in6plsfoc62b5mb4ku8o87faq0pzbytsawmdi0d72x9on0ly/Lauretta/Hackett",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "415a031c-2fa6-4b7b-b6f3-5ac5386206bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.344533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    }
  }, {
    "id" : "c11b58fe-aef4-4e8f-8be1-f2a22ccb41a0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassification/qc0lffep9t7z9cy94rz8oad1p880al8bz51vk8sfx0idmo9nfbnft3sgncs970ln5gbs61li360ztzgjlz7nkmbm1xkw44jss7m3wov8685hthyq9czg3xi3uphilgyu2v7uocwaaq3uvkr3v2q1wbd3jmr5xz5jtbxcspia479sfla6sg/Johnnie/Schowalter",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c11b58fe-aef4-4e8f-8be1-f2a22ccb41a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.34446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    }
  }, {
    "id" : "39b3b86f-58a0-4621-9843-ed359717e4fd",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassification/jf7iwysuj9iwhcv798kl0xpmplvzpmz8p5ojok2r9ft5a4wfmofvaihnqj57wcne2h23oitkm8y5k14cxtp/Jeromy/Murray",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Fredrick\",\n  \"lastName\" : \"Gorczany\",\n  \"score\" : 34.016354724799,\n  \"probabilityCalibrated\" : 0.10967145684596358,\n  \"subclassificationTop\" : [ \"k22ent54cjctws0xp80695cllef9tkgsu3p2lzptk9tsu\", \"gq9w4g4bnuczdiakjjiyz7q2cl6effs0pgykplcb65whe8smz019vbfdbi2qg7wk9jpj5lroi68b4aiykh2t1ph84kj4gti90uf66hti6mjq7xpd2p3bd4ob7up875u777ssy4q\", \"xe2fiw9dyt44ban5a4u2p8e8h1j4vmzilp6ee0qoqavzvyfvcdv5satr07ydryayjislgg81l6jfrfprqmyhndvrcyehwtxsy7vn5kggvl2k6ly3wa5n7bq7ld9v2fsvs7relcp2wlbhtw9qn94eny4nzs1cygdv0cwwzcx\", \"fn89rplhcqee5vsr1i7tx3zjmwb7pl5l077tnvpljr9eo15n1xeg3c65yrw7cqo4st3i76oqzuhn0aa68jk79bahu34yxbwv5gc3djqswj76rlun0o0bgn7l6asxj56y6wdsu2bayqa5hfr9rcv6sydj\" ],\n  \"probabilityAltCalibrated\" : -0.10358254749545814,\n  \"countryIso2\" : \"0j52cyzzqxsipzgtajlro047vyp0nmsjuy0da0e0ydzdd6z88j6fp9pkouq772ulexr7w8may6ro9149cx41o9lpv4ico7i3pmy1xxqrpq8kx12h0c5zko3uc45z05bq\",\n  \"id\" : \"t50k\",\n  \"script\" : \"j2x7210w5fajsxqvn6ctx7gf39iepfieu2q9nsvatjxacnw4f3o9l6bnpbrzbujy0y3toncdzttuh71l77i14fka09f49w97vig5eilis3ahokin30fvtixlk5q\",\n  \"subClassification\" : \"gehzahnlaupa8e427hk4p9iy38d7q857svoutn5gj43ks5ghg67xxjj6fnefig3w2ywq0zvdn9z0dwkb8kddnm72n3vcd2fp67d7aexo8aafv2x\",\n  \"subClassificationAlt\" : \"piyju1batfvq92qpqh0g3s2p7gzmeu2f7pmiokhg6yahoi6h7be5wtr1i2acukr6pwxyd0hrgmt6ynwrzgkyacelodyuoqnxngz81gm5knoexbg58byqcn5h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39b3b86f-58a0-4621-9843-ed359717e4fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.34437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "60b8c647-d8b1-4d43-ac5b-73b80a2b534b",
    "name" : "Get the current software version - 401",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "60b8c647-d8b1-4d43-ac5b-73b80a2b534b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.34389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion"
        }
      }
    }
  }, {
    "id" : "c3587bc5-1994-499b-bed2-76baab2e6ea1",
    "name" : "Get the current software version (application/json)",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"softwareNameAndVersion\" : \"zg5e0pori611fw7se359kts8cn5w4cftta48gmeejkhwdf2zlv7t6wsqso666e2viefjlh9tc9ud02vn5rq0zcw3666v8mqylno7jq668\",\n  \"softwareVersion\" : [ 1547072981, 1599512651, 192055639 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3587bc5-1994-499b-bed2-76baab2e6ea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.343859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion",
          "schema" : {
            "description" : "The software version.",
            "properties" : {
              "softwareNameAndVersion" : {
                "description" : "The software version",
                "type" : "string"
              },
              "softwareVersion" : {
                "description" : "The software version major minor build",
                "items" : {
                  "description" : "The software version major minor build",
                  "format" : "int32",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "SoftwareVersionOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e7c525f6-0529-46d2-adc2-7f5ed6708ebf",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e7c525f6-0529-46d2-adc2-7f5ed6708ebf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.343735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "3cd27fbf-f8d0-4e76-8ad8-e4a45a6074eb",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3cd27fbf-f8d0-4e76-8ad8-e4a45a6074eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.343717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "c94546bf-1465-43d7-8cb8-f967f2413bb1",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 400",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c94546bf-1465-43d7-8cb8-f967f2413bb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.343699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "225ca0ee-2196-4c56-b58d-f4bd163f65a8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"onfy94j45sw6ble36loqsqwk95fry\",\n    \"score\" : 74.34588110741807,\n    \"probabilityCalibrated\" : -0.8882861459593927,\n    \"name\" : \"Mrs. Branden Ratke\",\n    \"probabilityAltCalibrated\" : 0.5303746917881604,\n    \"id\" : \"x30u\",\n    \"religionsTop\" : [ \"bobqwuix32qrlv44nvqzyokcxkdgxkc78hm1t0hrxwg17tm3zgxh02z07brzw9mu0yu7m3prjdfvtahkziio08ct7\", \"l7oh08ub56hcq0i8fmk215cxkgcshrgoi0oh00z7y9103bvba5knfuwrn822gpssrdy874ccje4bt909unuqqxix47hjf1bprg33f70jx5citk5u\", \"mye4g15ysdhj7g43ney4spydgvxa78rplntv370xq7lzkycyjd6bwni39ggygjwc8lymx2jscvgzh76a64yuttp7hx5fh3k63pqoxw7mb22v9b9726m7q\", \"irl53w7vpzxmu6qx6tvny3w0tq7grxzluh1o5nohhq82oh734dwbs2lyi7sfhr614dnbg4rpupul8fw79i45\", \"rcr74n6u4uzicdkwnf1vz44cmpikhm9f895m849ut\", \"ij6w4kgji5nqt26wp9a7\", \"leb6a8gmj4mc6zgrxx0300b0q668v2gu46a2nv775vcxh1v9vb1ivzx8dv23r403q7b1t8diu394n4r128lpm2xkuwtocqwo3l0et64sw\", \"vkn31vxj38p01ejfbojkuletr4l6y3z398y4q46k1dqpbv0p1wbyd0c0khekgzjxdohzzvlbi7vqzonvv98cjtodfzwzj22wvzds674i30vp1irlifaejsv6ecg0dgt97dskld4frtz0g8ieourgqwhkfj1qi84slu5a0o5jqi6m5n\" ],\n    \"script\" : \"5ittwt9lyks13dic2n61dnw8pexsast57pcawaads8och0twzqtau4pu0js7jpb8jutdpg9mxnklyjiwgl5q95j7kpuzc3tsek14fp14i440h5utxguxva3rzrda2l\",\n    \"religion\" : \"02vfaqfnhdbos1lubzwff23if6zj4hso37j8y8foiiybd9swon0jn0atg7cp6htb4v4sq2n94kjxmm828xi4ozn992ux2pghcryvt7i1s2nvnpb4jwku2c9edgkytn5tiio1cl08y\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "225ca0ee-2196-4c56-b58d-f4bd163f65a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.343668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d02f8eae-160e-4748-a3b0-2a242c25e0e1",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/9mfs2ehimvvexmt66yrz1k4za7ygg935pbzan91vwig2nzugaycrlb9e1ih16prr3y2ivk9u5b6mtuwom5641wspcv2810kqev0wxpwlgwbp6ib229t124wuhxtk9rlkv2hohp2uu8lbbwm2udpuu7ib6kitvtgiqw2nrf13j0vhe4yzlhzw802/aga7z9k1ux5r3e9gmdm5b58ht7rx9yx02zb03",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d02f8eae-160e-4748-a3b0-2a242c25e0e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.343365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    }
  }, {
    "id" : "af534e0c-cbe7-4da8-b903-ef5681a0e329",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/p5a9xfbkanidaktpjtz50pccqrel1bxbmr5oat84ki33odh7wmv5xe493fxt0gi46szdslt0m19jgovpqolcdinx8ufa6v9ojklfufq86pze17xses8bzvnjnbqkjn38goik5zew699sso8htxk9sb5vqfwn/1o4e53wlmrxzfw8q88219nyy1ih3oziq97k5se54cz4q50raw9wh8a",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "af534e0c-cbe7-4da8-b903-ef5681a0e329",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.343309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    }
  }, {
    "id" : "75277c56-8e14-43ea-b5f7-d22cf5ef4ccc",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/4yot16aao1gb7jj7abir1hpuvur9ngboyphea1q4n0ydf26fztvewdfu4w744pt6rfrfhjta9a56ppdoo4rbz250pne983i32z2ocvsc73m58ghiq229g3gb/fy17o908053d0z5bo6jhm52lw6gis57wcf9",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"b6m30vfdpsehu6yyjdr9g6pftmn7v428vutm4jq1n4n0jhvk7hgkuayl\",\n  \"score\" : 37.55678874932632,\n  \"probabilityCalibrated\" : 0.4478867805871265,\n  \"name\" : \"Tyler Baumbach\",\n  \"probabilityAltCalibrated\" : -0.361358398709128,\n  \"id\" : \"2444\",\n  \"religionsTop\" : [ \"3bc79uh78yj1ciz172f8zl7jl8q9bcysijf133ghx4nyixvyvr5uei1i61nhy\", \"hnbx6hcris7pw4w73kq241aerbnfgn6bdfdwqariokdja9wzaqwtto8vfqz6mznh90swoohunpgglh4dbjduejbr2g31dfer5q4chdyv3x5t37wg3bo9kary0a2674ch9ls45aicovz40w0qtmmrzzcjmlwb6eznpxwknm52bbzgx\", \"3xg2w0yc43u\", \"qz8klihp3501fp40qyr30ssz0l5qg7olk2\", \"09kemjsk4e1fr9rxn8x1ji2vzknjh5xyxhryqn5km77x2yx\" ],\n  \"script\" : \"kzru5itme47cp1b4xuosmorsw49dxpay860qcbg033rl0l5v33puk51j57smyp5ukoi1ex3q9z22vq8ej3h6jodg68n54csl9ttyvuhq2zujyobh6n0qb56evfddh6k2vqpn47quwvcfpn6ojtig0b0\",\n  \"religion\" : \"oek1mll0bqbnmoivwd5zfxoaihqz7twmm3ig6mvkx2rcvjlbw6fs0l0ldyk7d2r550vh15gmt54ty8gf3yuufsnkkvp5hgijdf9xoaj40e9ttkh251jx0kb1fhs0kb7iroebgl88xhrwxze6nzdgufzyrzahfvd06hfgn2cksferf46es5pnr2e9n96r4jgryon7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75277c56-8e14-43ea-b5f7-d22cf5ef4ccc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.343223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "66c23ec6-8c0b-46b6-bcb4-4f61cf0a170f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "66c23ec6-8c0b-46b6-bcb4-4f61cf0a170f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.34288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "923997a1-b0ae-47d0-ba59-c21c15541217",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "923997a1-b0ae-47d0-ba59-c21c15541217",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.342863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "6bfe94d6-0f40-49cd-a768-abe61c8d7ee4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 400",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6bfe94d6-0f40-49cd-a768-abe61c8d7ee4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.342845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "b1efe602-78e3-41b7-82f3-8f424c9a5330",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"2s5hknpdv3rfnizc4o3icwn6au0lsnk82q6a23j596kng40n5ybfkdpj\",\n    \"score\" : 30.852025867837618,\n    \"probabilityCalibrated\" : -0.9757533142341588,\n    \"name\" : \"Colin Rutherford\",\n    \"probabilityAltCalibrated\" : -0.8017358800199565,\n    \"id\" : \"06du\",\n    \"religionsTop\" : [ \"cd722juee9pmsmja59xegvzul0jktas8jrmgqokwwdncvtp5aw2abwhv0vytg55mtdygotaph\", \"cerrelv00hm436faks0ih6uqv7nxmmpqk8borf9pdttugywyoflf49oaam0ievbhprhitk1eh0rqgvxza89f26fhwdpnuu76fkh1ol8n7p55y91xotqfjojxuh7g3gkap18act50mshqu0ho0gb6743vv92ygcv9xg0gl1\", \"wxtd8xvqyxs9zonthx6jiamj19txjgugpko4f9o7qnhy3sax4rnbcbajzedgssodmm4dijzrz3dgtoghgvs59bt4nx9\", \"r14x7aijule7nsi5vmorpmxuia66ybyakrtcpg3354u37rvmmgww788ulqy998s927854pth2b1ryb2su40i4ler1ll5kbuiv7qs8pwm6e09qv495xocfn79vxsj6xz9a6uqdpw6ixt7r7v65udm62ncmk\" ],\n    \"script\" : \"7j8tt8zqelvy7fx2uepqq17h6d8dvded0h9bcledn6976sy8tjhvf0spuevol3myjtyo1v12z9uml7q1ljppa1sl6cu6\",\n    \"religion\" : \"6cucb66cpv8kp8kbt2x58rkeznb6bsgj7aftj6e4jub7h3cfqzmaw60jtgco8vgotobmnc3byajck8101e5ya9i\"\n  }, {\n    \"religionAlt\" : \"u449qq30cmuly\",\n    \"score\" : 79.07726579119803,\n    \"probabilityCalibrated\" : 0.8861880565326297,\n    \"name\" : \"Ms. Bernie Waters\",\n    \"probabilityAltCalibrated\" : -0.1202923073787332,\n    \"id\" : \"5kl7\",\n    \"religionsTop\" : [ \"8lyab1famp5s06n5b4p3la1nzyxsj2qoox6ko06kej16iw576czweefqger5bih7zfglqeqxl\", \"rescbykbvcuaa520ltohege0ap0pdzqyu2p0risq2k3mlypy0nijtwfoyi26bebf7guup4kmoafyzkx\", \"nw7hbwk6pjbyulsh436wmjwdm7gnglikpon1m6ds8pg6lx\", \"o9chrd9nnlzcsejffw6z4\", \"fdhqa59c1yuojlz8r5bcld8vk54o6gtvpt70c6u7bncnko214pn0pemxafitcowcoqhrot6mmmsvtxpre4x\" ],\n    \"script\" : \"rkofx\",\n    \"religion\" : \"f78v48f6jk4umcgydo46hrh48kqvd3i7wquiz0h9ivpmpmp6kqms6jn9vnmbxy4krslx5sm8rzgnoy6aux3blg1r686l4v545mp1qnry1b9zbuovbuejh7tad8lhogpytfyxmb3ngg8zigasmx107wvarj9evvjn543gmv74e9tn5ah1ot3xh850s485813hugydk\"\n  }, {\n    \"religionAlt\" : \"oq7ljxhoy464k1j1itg2rj2t091xucktrdqpl9pnr1mx6jvm0ad6kkeepz45c1x25d276\",\n    \"score\" : 96.83092333537931,\n    \"probabilityCalibrated\" : -0.26892416647492445,\n    \"name\" : \"Mrs. Vince McGlynn\",\n    \"probabilityAltCalibrated\" : -0.3342078462020246,\n    \"id\" : \"21u1\",\n    \"religionsTop\" : [ \"xtl46cboru70mhelmu3qz26g9x5b3e0xlb2xnxamm4kvo72r6mjyet3yva8cvshnfzykijbx08mgq1srfmswlc132v5pf3qek38zac2tdfnuxq5t1pu23vh4\", \"evrz9dpzxxed5mol2x4kbheww50kzvgwxtbwfxnnmpy6td9ni1jq1nmvw\", \"mwlw03428pncwu5yjgnkeyozipzww8xq58htd4ef40\", \"gv3klygtsg61yv8q595wj2c157c5qd5yz9rqzna11f7jy0j61ma5tosfn54jcv5uqtmkv79oktwmhxcj860n4e6ong534r8g1r201gwr3ivkrl3ksedyvcgais49ikb9oq93\" ],\n    \"script\" : \"9veeydel6zrmhs9kcl7ihtb87w1h5vqfqlzd0wqpqeqaypy3bi8i4hsdsfvr3a31au8zytmxhkijeufgcfz0b5jh7r8sty6ukcudhdta46lozudq8gd3422nvfgv34nuc91atkzemvtefevp2p5swcjnkqktxjudvg0vauwyjca8kzpxn\",\n    \"religion\" : \"g1y65efx2k98u4bu6buaw2g6mzgj0hueef2jtoxoi7olp6ye0z1j5f5z4odki6zsgvy9orzjfgtrn2648fomimk6deux2nq2asf7e0jwiajmytpjiqkrdy7dqvak8l641yhpaf2x1znrgngoa87z8w\"\n  }, {\n    \"religionAlt\" : \"wjupjrcpgwxnhwkkh4xszot2a0p3dxyf2x3es6e63u8cygwcvz8mt8t2vzxil76omzsaxggq4s5ai55l80ilh2accp4n70oqq8fx4ndpe60zf7u2wye0yaguct8lbklqisrnrtl8yhlcrzcjm2yhocw2hkj6mf4t787ndopmzd4swzutr4smnchg0l6wah6mh8k\",\n    \"score\" : 17.88881714849677,\n    \"probabilityCalibrated\" : 0.096500611205657,\n    \"name\" : \"Mrs. Percy Cremin\",\n    \"probabilityAltCalibrated\" : 0.14357463229454615,\n    \"id\" : \"5uo6\",\n    \"religionsTop\" : [ \"jk3i092bjrqsbsd88oz2q404v7tq22f5sqdnsm8gm4q1n61hph2t7s76dvwu68igdvily213qgntfc0ys7rfspisdxvfvf20mvgc2eshj4hgedfeodq91gyjv4pl9k0pnxa6xkm18rr2t\", \"mm2q7fm7nsbscl5to7ipdnj75hz1xm95suld8fqjtnn351wth7c2mw5c8912030bs8nuy73vu5a4wptmuobse3vywoblcbnzv535x2exeohspdry3qp2k4v9iwzkndydolp3wp9hljrs\", \"cbih179q3vbrhevop8ed5sbv2140vf15bkm3ow4poa5yqid63tewj8g4u1yqzc1scey35gw58acouilrf8obkpwkuyjmw3tn14fvoqx3x7sixhaevukrdaqcahof1otqku8kwsi5smyoytdbtnj8mdg6l80uzq4\", \"qfz4cisyx9z8gej6bl89ku0276bl66zizde27u588h\", \"mm7hojf2hh9lx6exs3ecwocelivq12phv4zd7y6z9ktug2rf2xseekkr9poihnakwjfemcklyhb\" ],\n    \"script\" : \"kb4ph9dja3r78yl2j8p9cg871f3vlvbde1lk4n4j8zwhnjgauxonqvl5p9\",\n    \"religion\" : \"x5uv4zc0nn3djpb7w0ibxzef88hqtpvc4swj53d87kcyaas6cj7og6rldloy5c9kd4fn67zaipbwx079ctyib4sk3m0azuby41wm97b2l7527r1nfmhfvnw37z0g3\"\n  }, {\n    \"religionAlt\" : \"qaxt1l368aifprc8ikhu3xk5qs7zhli8qbv5n3livbeh207k9ct3er223fby9fgz5hkj6vwi3j7llklu4tpujuoqth4p0iamawpd70o0qizoyb5r4gikcgoyaxsvsih1ahg4h06bg3zr1crmlgsh4qkd8\",\n    \"score\" : 33.07559486032995,\n    \"probabilityCalibrated\" : 0.17049447071015034,\n    \"name\" : \"Mertie Greenfelder\",\n    \"probabilityAltCalibrated\" : 0.29085914213993647,\n    \"id\" : \"s6b3\",\n    \"religionsTop\" : [ \"ufqdgukdheq0gkkmo8ahbsr1hx9bq3ztqomo60r2z79b70jowm24tug80hu9aignmo219y088k3l9ob83xoz3n\" ],\n    \"script\" : \"mjcst1jwd34frrqcfqae2csigam8vvww74jpdgiqj5ijrouvc2roift1k7gdp8ddsz2oewq731tak09640llg17x1wgkqf3ckvxxrnhf5ot5227q\",\n    \"religion\" : \"434r18wxk1q7ltdyzltrmzy7qdjacz4tj3rjbqkgu\"\n  }, {\n    \"religionAlt\" : \"4lbfw6bhssvs8kqizcjw4d2wewjb7ps6tvljfnlzgzkowjwxuwimx55acs622wjpyhqbtu7ngfid90ngadfsc8nwrt59wwa4h282yy9577ad5k3tevixtj73wgipc9tpoydgesx0b3qnejh5f636utylj6qk7z3e9mniicwmq77t304xp7ux1fn7wm\",\n    \"score\" : 44.172270757287514,\n    \"probabilityCalibrated\" : -0.9895593964987399,\n    \"name\" : \"Frances Shields\",\n    \"probabilityAltCalibrated\" : 0.36437390194676755,\n    \"id\" : \"uch2\",\n    \"religionsTop\" : [ \"z708chc5b77g3pd32u55obq9jgldl6aseg8whcmdyy11hmgx2vochswrmrww32q5dxqhr3lnxddfbd8pg861im8sb8fy9smprhqb4i4hxkwiv\" ],\n    \"script\" : \"ofchoxewsm07x6adwb3grdy6wd2uop7d8qd\",\n    \"religion\" : \"6ru4587iyc8j1ze9wwi4tpg9r68lnut74wt9emq\"\n  }, {\n    \"religionAlt\" : \"jzd2q1j662f69rwqj1nzjojdnr8enypoemcqqn7mq80avc85p5ej59klk6sq2j9ng5o6ngmvburg8umdd38gfgf84c0myyhyqzx3atu80kin\",\n    \"score\" : 54.379933243355914,\n    \"probabilityCalibrated\" : 0.3197670420257557,\n    \"name\" : \"Emanuel Parker I\",\n    \"probabilityAltCalibrated\" : -0.06707860982776404,\n    \"id\" : \"79fv\",\n    \"religionsTop\" : [ \"92uz3ia0f3e6vk449zzwx8ajuyhpcvpdpps\", \"olzex29db0pdhmo6w2tv13wxh2hiim4pkcyjrrm8519xw8ralgypo2ixcl0sgwdwfde2py2z77sa8jue72zp1s\", \"wbe7so9imi1jqgs1rdc1vma4\", \"7t15971dw6iif6pginkmo94wsdiit4yjc2lpj774latmpz1xqnopkrkquydy53unqr0rb8u928z976zqd5ifhkr7opgtia6978lm2ee5tn66p\", \"h2ehyyati381fs3ujmns6nahah4eitr1x0ivdalmsmujzu7twb5u2nqvj7bctksu6u8lwvnq5l8i43d6bvkh8hcw0tvhs74n5sf3esv4wj8xiltfvpmvxrdinaw0f67r2zpppfatvtfl1d6yq6kyr8cwuc2mspai4bsmpay7v6diassj\", \"li25h6uzplxxz7sprh1fo86op5oq9kzkgztesrzrttnt12owk0d8ramfool1uwge3aaz1i9r1voxfcnma0od3oo8ao7y1a82rqx303kiil4xwu7afio43qkmj8qeal5q2dj1afvs0d71dbx6dx0vo0rmo\", \"tv0oif0\", \"6k6ybe7ugi2to3qb4736mwylfji6uf4oljskmjbqnhelzehz9r9iv5bhw9hz3xwnopqja5v7jti7ff8lj0vazm278y7gsnk4n329yeqzo8uwxj8ssjvuljvfz2vd02uxjgzkzwykq46rpixgvzdhe4ehdb1w826lyk\" ],\n    \"script\" : \"twzl2fkwd5wkuu5m47ci8y8ecnb2hfff4f4dqtckp1genb7e8zqw4rsx69ysxzermkcgjh8j7ul56823caydrccqa8a1tuh72nmf5dnf9544c5xup6yjx7imblpkp255t10lcj1rbo8w71zdfagal6hzmzktdfryysbvg0mfv2q0w5qx134\",\n    \"religion\" : \"0zs0xki9ft9fhg68m583fb0iupbodj4qouy7x6sbaf14g069qxf82u9i2ej7kug22zy1ksi50c61wc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1efe602-78e3-41b7-82f3-8f424c9a5330",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.342807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2de93075-e90a-4a92-9abd-6c0d0e7138cb",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFull/czw8um6ippekb6qqmmb80lmsi96p2cezoay1i4pqr828u19zgayzvejq3j354q3duruilnio8yl682n0byg0ormd3b1lkzbu8fd0gynhi0km8xo1oy70qjtiknt1flgp02xrevi2khmbweezh7bzm9hj7yuh1ufmweci4wkxetr1o8bgo9esruuud980hb0/ahm3j2om56avyls207mm16xa07kh34ve0nvnpy92tahjtyldjp2f20/zrmgfebqu1fcq4iume9n3dn8q5bd1uw0x1zky2dtfbhf6bhh0aitua7a3ldp2m5g40f87iw",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2de93075-e90a-4a92-9abd-6c0d0e7138cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.341333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    }
  }, {
    "id" : "84f1e16b-c4e3-440e-9f98-16c97a601c70",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFull/z8ktbggfcb4hbznjkecvq6tjuu42wgzaie25rvbl5vq2o0n388lsx5xqmvsifkytwrcpzbhgtvhd2qv50990ryemnw891xbbbf7i8i2gshee25ad8rvjbhvch7nprkiy4c28detyen013ytggnoemn6jktd9/oa0lelfqwb2qjsbc03cx9li53e09t9t37z7hp5iozrxxetw181vbhsrkrrzvnq77ujsw8cja0ihah3nhfcgqncgu654rx1xu66lk661lvxw351dpycq4u2hv1awbgaj94fpgzghtjc0yhb6jzw93vhhqwkhhiqv0ygs4kp7x/txcjuu0gcvxd9uo4vaun6f1bllvih55n2ejcvj8apeymrekxduoq394ruf81z2n67fwi6vk6zp98xi1fdw1s9teb9or",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "84f1e16b-c4e3-440e-9f98-16c97a601c70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.341281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    }
  }, {
    "id" : "afb9a860-9b4c-4ad3-aafb-698c2d08d8f4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFull/ne89lf27k391rf9lyq08m4k8/8lvfyspxmbhfpuaph1no427jnt21qzmlmnv6w6xmqf65oqgnmitu1isf0l7k7y0zzzhmhq9u5r9a1x3tmbyw3rwftq18fft1omof6dxf922pqwfpmkv6w99iin3n2xxcea45zu5awnm34zkk0l4mivotnyp3c1swehqprale5cc6a9m9/2xnptcuzwwepstuuc6uxq2feg57mv9e3sw8l6alc808fzk4uhpy27r4a6hiihbcb53g1h4ms49q7eopr8yol8j",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"zafwsl4nrlhmh1y2ceeopnavwzrkb9w7ijqkkufuna2z27akrgf99bx4hmrh5ug9muig6nouquqhmarpv1b0ai1xfyk8hx5l5y736wzg03snq20pu9mw7aoq\",\n  \"score\" : 5.603879667197131,\n  \"probabilityCalibrated\" : -0.6260721514408871,\n  \"name\" : \"Otha Kuvalis\",\n  \"probabilityAltCalibrated\" : 0.3057066658522898,\n  \"id\" : \"144f\",\n  \"religionsTop\" : [ \"yhtz6wnap0u0x9r5iw2pr8l6ojr6og8bid97hl4bt\", \"30xs41uwon9oq0e2bpqo78wviq1uzcdhz7dv36mqvgovfnoc0tgbcl0qgiy3bhfjfse27oivw38rqbr\", \"9wauei8nq5ivhbd95pi93f516lzr0912f3u14am6p6ak680qa3o5vq5ghnpejvfhhpvalipq2agwf9m0d4kcwggqv6b3c02jensa3jluu4bzufesdd0ob0qa3txt4hg1yo67oz6vbmwkxjgpe25c86f0lh68bcraeq1yubdw39ahsjof9vqj6ijhepa\", \"v15pnjpmbjzzh0mgvdnm\", \"wy1tbunth1f7rtwm0m7nmdnmcb5fa9ysn7cmta2antk1wj63l3d\", \"tz2kq3a72figuv92b6hpt3uq3fxs47fcdty8dr64un295ae0ay2bbsgfzuqqb5fzzf8h8chgf7pky03xeievbf08tf9btr6g9akiqbikrm4l6kc2ryv7pxwz5e48qtqzewn8oian71ar4pkk97cssrx\", \"ry13d4m8lbr7rrwvaoqfm1xoaszpw1ugh0\" ],\n  \"script\" : \"0d1m1t600lmhd8vh02hf57qbhk45htx8400d9xfmr54sm8u9slw5cc5z20xrgscb9w520xp7ohqyf22sy6\",\n  \"religion\" : \"vyroxxb4lo4wz793b57wraut97jafbcg4w1g9edi5wg2jocibn4g8uoot\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afb9a860-9b4c-4ad3-aafb-698c2d08d8f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.341213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "de857999-cf42-42d8-b512-932c6a6481ba",
    "name" : "Print basic source statistics. - 401",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "de857999-cf42-42d8-b512-932c6a6481ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.340801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions"
        }
      }
    }
  }, {
    "id" : "b70df11c-8a19-4a56-bc1a-aef313226421",
    "name" : "Print basic source statistics. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"countriesAndRegions\" : [ {\n    \"subregion\" : \"xqdu05letu8h1ylgjfo2vl9l1aaprxvn0r58dt986u8aeommxk6qy3ty948vfjanhcjvomm92v19es6su5w96c4824eokyopoz9r5kkio3gr9fwvuvgn9s6lnq8ju9v9vpw8k74fpflero1v7j\",\n    \"countryFIPS\" : \"oxq7vyzqsqptl3t1g0wm0soes23xq41j87uty5t6ougq5x12xzy7vuxe83659i3r78zuan2enyhjfjp42ana55kfsyiknezbo2s3mwbyu5w97y2u8leqxwbr6qpta3xeg7u08fv6g787pnjuudc451gt2r\",\n    \"countryISO2\" : \"h0cd1s4we3yng6ffnurpofn9sn7384y00fmlqzbj67c2xron2gwi1m26vihv351a40l7roax9he8azdgd1hjgphr6hltkoo6qavc9yu2uedqw1lwb5pc9s49uld59rhk5xlg26kb2pd8kusdo0q\",\n    \"countryName\" : \"Bert Lind\",\n    \"countryNumCode\" : \"dse7mcyifzi16bm6vozf88tsqnr35wp5wdi9u7sel1qu9b8558i9z9rfmp54apicbl5vl5sao7ywhzdp6te1s2lqes04h8sii4r6srdf9t6r431jea37mxq2l26zemn03ppsn8\",\n    \"countryISO3\" : \"57tiheln3hiim0e9dfxt9hehlyj6qc9qlb941xcrdlxpfr89oa8eku7z712zmhcso74553zao8wtgbiv5sco2dozcs7ayga33shlows2jpnxjj4fn5sbd238vftk8ie2aamok1pvnfadfonazx2nn7no1ixrqa428xlyg9yn8\",\n    \"region\" : \"qa6z0phuvdyu6wcydj42rmgn6cjlpy6emtle8rqzu5j2qn77f8i71ciwowfnb10xqxsndnux32gh8xoqmmusua2jp6ext08on3qdmgbetml7frp6ku349c4kp6bnicjeneb18gb0c3bowzinwc1dvicosp6rr1cz\",\n    \"topregion\" : \"0sgncho5sgkaw3mpxt3w1hp0b2qmnaw8ryh8h9ojshz5f7cdhmz0g3lkx007sv3a1e99uied\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b70df11c-8a19-4a56-bc1a-aef313226421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.340774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions",
          "schema" : {
            "properties" : {
              "countriesAndRegions" : {
                "description" : "List of countries and regions",
                "items" : {
                  "$ref" : "#/components/schemas/RegionISO"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "RegionOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9bd62197-9155-4097-b466-980220b0ea06",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9bd62197-9155-4097-b466-980220b0ea06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.340551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "00c908e5-d000-4641-bac4-8e6a10f31102",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "00c908e5-d000-4641-bac4-8e6a10f31102",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.340534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "e2f64c0b-bc24-446b-b4cd-4c8d14c5a4cd",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e2f64c0b-bc24-446b-b4cd-4c8d14c5a4cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.340516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "537c8601-66f8-4996-a4bb-3b7956c57f63",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 79.66933853521164,\n    \"firstLastName\" : {\n      \"firstName\" : \"Marco\",\n      \"lastName\" : \"Lubowitz\",\n      \"id\" : \"8wh8\",\n      \"script\" : \"44i5pt3j1kh7c1faswpohmjnw\"\n    },\n    \"name\" : \"Sam Kulas\",\n    \"id\" : \"ig57\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"10uvj0nfeml7ku53olqonhw294calz8gy5f9lnidx3emhkzho1yxw0q1lz1dp7tio6rc6fo61wnmmkci8v6bk35kwwb7bd0o\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 96.18605551754675,\n    \"firstLastName\" : {\n      \"firstName\" : \"Zenobia\",\n      \"lastName\" : \"Boyer\",\n      \"id\" : \"i7f5\",\n      \"script\" : \"tfx86ba8ln16a3atzqh4df6oxsool4m5ma6hpgu8vizx4bkjobsn5byn5ajhtt6ympgrk2l6dz3ml6i0dmyugfyaicq04awhdpb09947vvibov\"\n    },\n    \"name\" : \"Rickey Marquardt PhD\",\n    \"id\" : \"dw6b\",\n    \"nameParserTypeAlt\" : \"LNxFNx\",\n    \"script\" : \"18v13cqrva4ij5zhizlivzps3al1woq62aodadblj2by4aved08vimhy2l4o6attgx3nz0rx1hppdtuk0z1cyx2ot5gkhrj4dvl4ffj6vg08sejzv1e2eq58mre6awrun3fjcnu7jtnejscd130\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 63.88811319977831,\n    \"firstLastName\" : {\n      \"firstName\" : \"Belia\",\n      \"lastName\" : \"Lemke\",\n      \"id\" : \"h1rp\",\n      \"script\" : \"kkwi0smhg6xmtxl7tv49311s3de0n6b9ppuhkmc69dczhjpkpkfm63mc8j51zain073ezhiuqe6tiyp9lq777w8taejua2zs3d6j2p29jfruo3gufoe9dkvsruh7716zdxrpxy14sko82fks5q23hrfn2wh735ug1zvn7obt\"\n    },\n    \"name\" : \"Shaun Stiedemann Jr.\",\n    \"id\" : \"x9f0\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"av3w1t5na9zkjrgiq66nq3kpo4pzcq5xexb559fgwqt70qab2cw0p52f0ylgi4ifv0wc87qoqv\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 71.58427143594892,\n    \"firstLastName\" : {\n      \"firstName\" : \"Curtis\",\n      \"lastName\" : \"Bahringer\",\n      \"id\" : \"8aos\",\n      \"script\" : \"souu5dnlzxsylqixbm281xouz1ydyzgmtbsbjoy105yc7\"\n    },\n    \"name\" : \"Lesia Dietrich V\",\n    \"id\" : \"92dw\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"5kc2lth2ese0jl99q7oks5m5uwtk1whp1cope4wbg9tud89w9hxsqmbh2r9y7ldv1csy7gv0j3bj80xzjk5cqdx7uxhrr578qf5n67mg4umcethzskse63hzhil95hjcravy570wn1kstwmv3yegoqiv4p9513utp8mwnz5\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 85.25605206205235,\n    \"firstLastName\" : {\n      \"firstName\" : \"Rebecka\",\n      \"lastName\" : \"Bahringer\",\n      \"id\" : \"9wn8\",\n      \"script\" : \"qacca5pqppxtnni884m991qckjc47ef8okoux4bkv8snyg0xr4062aworui8vrqhhkzccfb9p53u572ev9jmc6ck5fq8v9vce6znzwqqjm5z90n4divdgs8ycd7jsuyx5reqc50mprm65idtrvu2d5l4tl1ysfnociviybhwr26b6f6rjpyqgeukl\"\n    },\n    \"name\" : \"Ms. Elke Klein\",\n    \"id\" : \"n9p5\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"nnm3imbug1l9swmu8nq83mjjzeiyly7vgthzmrbbr7z5cca8bghf3q7quo7qj5sz1icxuk3srmvu1syqt3ymv54ucpn074g5wnpe9pvcpx1y1umhtvzixx27a8b4516pzvauz2l4w\",\n    \"nameParserType\" : \"FN1LN2\"\n  }, {\n    \"score\" : 14.909133290977582,\n    \"firstLastName\" : {\n      \"firstName\" : \"Gerald\",\n      \"lastName\" : \"Schuster\",\n      \"id\" : \"6b53\",\n      \"script\" : \"ojspw5x3gf5rb1ifubcf6wb2868zxix22puae11o393yf9kvzugd7tg1psxltklvmgmdrjkmssfdcnyqgg9y9dtvsxehr4y31uc7bngpaw2vgyby6vxosu2rdxkinewzrngmiucgfxj44n439p9us8oz30mk9473np1r8jp4bbcc58ryfwxc5me\"\n    },\n    \"name\" : \"Tonja Stroman\",\n    \"id\" : \"887e\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"lc73fhd8ibdpz81sj1swmssadmqqpicb7wtg6atcv5rtubel9tk2ukgte2gedrb6iugtsiiizlpigsqurhwmzyf35viwb42egwphkz9jqvkrql12xwfo0y7idcsda3e30t2xbnix3o6pbsbmr6hzegmyqeelme2xtyh5h3s683ywgr4g60iw\",\n    \"nameParserType\" : \"LN2FN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "537c8601-66f8-4996-a4bb-3b7956c57f63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.340479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "411cfb08-2bd0-4c0d-80d8-0c349a1d4fe5",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Darwin+Bergstrom",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "411cfb08-2bd0-4c0d-80d8-0c349a1d4fe5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.338575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    }
  }, {
    "id" : "6e948e35-f8f3-4b42-86f0-fcf23b25143d",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Claribel+Beahan",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6e948e35-f8f3-4b42-86f0-fcf23b25143d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.338517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    }
  }, {
    "id" : "b9395ee6-b0e8-4c44-b813-e675c96f0ff8",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Kasi+Mohr",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 47.121608420003234,\n  \"firstLastName\" : {\n    \"firstName\" : \"Jamar\",\n    \"lastName\" : \"Braun\",\n    \"id\" : \"57h0\",\n    \"script\" : \"hmvwuon2\"\n  },\n  \"name\" : \"Arlinda Okuneva\",\n  \"id\" : \"638y\",\n  \"nameParserTypeAlt\" : \"FN1LNx\",\n  \"script\" : \"x2i400lp9gciditf95yk5qljxmw4zi8cleupuz\",\n  \"nameParserType\" : \"FN2LN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9395ee6-b0e8-4c44-b813-e675c96f0ff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.33844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b2c30dea-ca55-464b-9755-b58e43646f9d",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Jill/Stroman/511-185-0787+x50326/81fyahward3emdoqwbeswcxkd411zg2nj6ikpg23972oensx4kw5ofmmins73jakh0cj/gk06k3364jvqii2cpncmpsage1sr974v93xj4zug3g8lmpyy98v7r3v5szf8ipz4a4u6tbmdu7erq216n6oxjhr005qjimzcxvpfpbyj5e6fft9vyykmxkx2f0cadei7crfdyr0q0iwr8k4iqjn3oqnygw2nudxuexbuyj7946nx34lmfrw",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b2c30dea-ca55-464b-9755-b58e43646f9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.337949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "d71f0c77-0887-41ff-a688-95e881066894",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Meagan/Block/312.287.0527+x64255/sponcvy7gdu1ztncz8dhqpgs770u4wpi47cb2v7roonnhf37issd408i2p789kv84ao3pc7t6u9eisv8cndjnikvfs2x8mqhg6oow8i3omga4rij0h5befycjazpwk3j5314t8vm4clrth2ciu09i0l2rl5snu64166tdjsi84gqxtdfy25xvtw8inlrudz5m1fif2c/tb02iw49s105kud4onriu4stygbnkz59p7i1sq28qnor3ydbcyqzuy8ytfoue2r5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d71f0c77-0887-41ff-a688-95e881066894",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.337846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "f3410143-e31d-404b-ba0f-35da9c95391c",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Maire/Huels/377.909.1717/vj71ryjrfzcvbbldh218ticb37d822bzxygsh6gqu6i779lqlsez4t1vonwwqynbn3vpsr6861ncpdrqzybk58yacpbu33dwinrxcgaa3be4971835j1oq75b4fpjvnl9/muzhz6l96jkjeamvcmr4s2q267qluzb6czth9padfvtgktrjypjnz2bp82lgsmk1y1f8l3waq8z6wgyuzzda93vg5qbhnqhwybtp7ljse2ynqjj",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Morar\",\n  \"originCountryIso2Alt\" : \"ijbmv23ju0gyftqnf2osn6usiddzplj88n4j7u3yqzzurd33uh4\",\n  \"phoneCountryIso2Verified\" : \"ty4hgqmm0ezxbz\",\n  \"verified\" : false,\n  \"script\" : \"jxj02cvs57kdp0he2s8216u7fwo6h4330eh4759gxbdztvg7geumsajt7wkm48idkvfq6pbjrxevoqroqklikjbm\",\n  \"firstName\" : \"Luke\",\n  \"score\" : 80.38370342862265,\n  \"phoneNumber\" : \"147-238-5519\",\n  \"phoneCountryCode\" : 1323864487,\n  \"originCountryIso2\" : \"6cqjz47x0fniltb3tw7vgaoretpjlez3v7xm7odcmxpg3v2xocbvhlf8yv4s4h8mhmeylejdu83c80mh2ijwtokeqnlo49c6owiutzvckrc5ggyinyk3pflovvca9nxrgm1l2mruwv1mi0ixkjhspiomo\",\n  \"phoneCountryIso2\" : \"lt3uj1xdxhs7f7qm7zyt0rh0sz4qzyh5wgo1z8tmk2nm6dblh7zf3dy16qma7pqhy7y42j9fs0prod9qoggbayyldspx8e25fwujjmxawa2l9ekqt7krd0zvfk9ve3pt0lgnhhlx5htt13\",\n  \"phoneCountryIso2Alt\" : \"mylykmfh7mi694wput1uwdhaho8hfo6jgge5xcejrcwbm35db8zu0ogoq7ms2mpf8myn2yixiz2lkcnmz2psvyagzvce0szy2pfdj9ewvrvvw4e877uvbolmtuomq95pmcejh2rzjau3o9n0zu7ou4kvgoctinqv3cyomrkz69druwltr\",\n  \"countryIso2\" : \"qq230w32f0l141a24unrw3cvrxh\",\n  \"id\" : \"687r\",\n  \"internationalPhoneNumberVerified\" : \"wc4uv5jhhkeky4c1jp29cevj6lktp96coxnl2hhthn7lalivjus6l6ccqytfk18htatpa7qjzbc4do1sfknpyz6t3mjjoi8zcypc53iwcctfyzfodo22339edkr7s36nw6skh\",\n  \"phoneCountryCodeAlt\" : 2131598770\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3410143-e31d-404b-ba0f-35da9c95391c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.337726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a784aecc-8c3d-4a36-b77b-dcb998dc6155",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a784aecc-8c3d-4a36-b77b-dcb998dc6155",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.33721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "44ca8e17-574c-46e4-9c13-27c62f7da056",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "44ca8e17-574c-46e4-9c13-27c62f7da056",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.337194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "2939f908-03bb-476b-ad92-5358a98d938b",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2939f908-03bb-476b-ad92-5358a98d938b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.337176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "1814f946-345d-48cd-a5cf-69d372e41962",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Ullrich\",\n    \"originCountryIso2Alt\" : \"4bkafhxhph7paa5iiz16zx3ytu4bvo1welvxidbpld6cp4zf2mymdyilgt66lio\",\n    \"phoneCountryIso2Verified\" : \"aii6y98kmkgxkk2qml8gmbvnn8ia63\",\n    \"verified\" : true,\n    \"script\" : \"fhb3zwaewipswcwcd7wjyqunquhrpdfx4t4w8v06ct3h4ckfaqn0rz0\",\n    \"firstName\" : \"Courtney\",\n    \"score\" : 92.84928154227346,\n    \"phoneNumber\" : \"(624) 387-9055\",\n    \"phoneCountryCode\" : 1589035864,\n    \"originCountryIso2\" : \"9pehp6tw66ahxqrnqi1t9mpm5gf61qbtfpyotwfxqi0b3jvnoezf380xolahm0bn21br68inxtd3xy5oq0d7fy3jfayurijsrnz9u4ddqthz1jcjjt7\",\n    \"phoneCountryIso2\" : \"3nl5dh9770nqu3f5dnjnalbm87gnytn3w1r478fawai1f869ut8y3aum9v7v3snip9rmymkvf6t8siww02m9blul98vyfqtxttb48v4itzg07gr9ff8uhq4ogg5nmhaxdixdy442xnnsfv6p4qfot03u1w9zk8t6xoi1ws7chgljwm63bovma7bxcgn4\",\n    \"phoneCountryIso2Alt\" : \"52ayqp7112rs341swirph9ylq9bi253ie1odmlsos1jlle3csvo5fkqz60a9kwls46oywchepe3ck01g9n2jig12b7wowqdjdvl3peizm4gp6et0f2tllxq7x58semtu8cke4rk83glocgil9s6pq4kl0srf\",\n    \"countryIso2\" : \"9c6qeyagr1iruceg05cvap\",\n    \"id\" : \"dp4p\",\n    \"internationalPhoneNumberVerified\" : \"1trcxxmejgisgcbh2uswic3r8mqbfajh80wppetm7tgapcvc415fb7ql4s\",\n    \"phoneCountryCodeAlt\" : 1609154500\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1814f946-345d-48cd-a5cf-69d372e41962",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.337149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "bbb9412d-618f-43c4-bc37-69c7e8b3a82e",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Tony/Torp/116.212.3201+x94317/oqbrt2kfx",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "bbb9412d-618f-43c4-bc37-69c7e8b3a82e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.336818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    }
  }, {
    "id" : "41665df7-96e7-4978-9b39-ac7cf1be129f",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Christian/Ebert/420-624-0489+x8347/vbys7n9ec5mkt8owdnzd6tpt4drraizshsmjan47bs9ys5oz0d7kiq2egsln2vp3xwjjkdoft7d9tu63e46eyiuykcw36gchyz503kp25q",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "41665df7-96e7-4978-9b39-ac7cf1be129f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.336729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    }
  }, {
    "id" : "aa47d011-81b7-4266-ade0-830eba851f6e",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Cortez/Muller/045.792.6496+x37011/rlzgvtr1jhubnufuce2wrxrwhcj29jx9nitwh721jyg5ltytavbpqti38l4zsr4nkdlma202bnm6j2eu81ou5c52cifh5u6sv613x1m3h68asxr8d6nrt1i3d1plgtat7lv6mlnptpui59sd6oahshh0jhcev4waqmp3xq4wl746kftor",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Berge\",\n  \"originCountryIso2Alt\" : \"m2j7ij\",\n  \"phoneCountryIso2Verified\" : \"4mfjzs202bnaryqsyrh89feaxv2x3uk97z77j2f8kkbwhms0coy4nuuu4oug68050hmng4jy52t5dgrtqqd6j0mjgkazwmqy8m\",\n  \"verified\" : true,\n  \"script\" : \"rqq3ii8zio5t6u5h15abafooa16mxrxg53jt0cgkqch26yjchv0gpft79hzpu4wgx8f2k8\",\n  \"firstName\" : \"Russell\",\n  \"score\" : 93.84478603069702,\n  \"phoneNumber\" : \"(839) 426-4702 x806\",\n  \"phoneCountryCode\" : 1478128103,\n  \"originCountryIso2\" : \"olcz4j0n49v9sx6v9dzn8pgg9di6g65vt13amrfo7rfueznqdabjpzj0xapiogr5g4gg453xhcvp1\",\n  \"phoneCountryIso2\" : \"75b7h8gwwsb34hbwnx9jlrq7itw63biipzpavwc5zhyv02wpjzlk4a3vh7dmrv67whej5u62zpqoxu0v2b4ymoopw9xcmkzm11bqm6jxee3nzdv5pbk45i9jkks3jal3nanws3d3cbp\",\n  \"phoneCountryIso2Alt\" : \"il6c2r3m9q295y03m08xm9mpgoe5i6i88ro0tvtieezfeutn0zcg1yvtxn9ph8g3j467l9zj5vx5e94a1h6833vziury0plm7esl7yq1mlku9vwm1smgh92xg1csnfu9klnteadgch8b2yf5sfoleks39jhcbrb4yc2gjl649ui3613xmfhvfr03qg9\",\n  \"countryIso2\" : \"cbnoiid3cxmeqtjo3ymu6ov834xu\",\n  \"id\" : \"jf0v\",\n  \"internationalPhoneNumberVerified\" : \"iofdez6k403t0chhnvym1sogqk7hm3kx4r4n2pt1mqi0gv7s7pf80gpx7jbld91zzgbqksa7imwobu0qc6kwzezy5yzxqffu16b8568821owvvc8grwtv68rztfnhjyu968phk1mt2qk5oic4azkr\",\n  \"phoneCountryCodeAlt\" : 436995605\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa47d011-81b7-4266-ade0-830eba851f6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.336622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "831d65e6-6c42-41e0-a959-0156cfa7843e",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "831d65e6-6c42-41e0-a959-0156cfa7843e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.336101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "e1c95b70-1c2e-4e80-8f40-688f3bc42c29",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e1c95b70-1c2e-4e80-8f40-688f3bc42c29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.336084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "cf3de9b0-b83a-47c6-94d4-807614e6d863",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "cf3de9b0-b83a-47c6-94d4-807614e6d863",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.336067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "c9a2b1db-e50f-4f50-8a96-7fdbdce9636d",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Kihn\",\n    \"originCountryIso2Alt\" : \"9vds58dpw1t6mxpzauxxmzfbgi2rcnhq518\",\n    \"phoneCountryIso2Verified\" : \"cimqfmp1s5lz24kqn68g6qobknik3tprfi36i79c3i8sk2gzotwak9wdqt32o0\",\n    \"verified\" : false,\n    \"script\" : \"fs6lk68c8qmjivq3g6xpa0d4t934t6c634xscmlxfcp2ch34n4ii81d0y2yucd3miwp19su1dkds1est7sykp9jg0ntljdl4ohfgnj6fkm85opqdr3q9msmlgrhhzsxkknlgfgin2q115ahtxtgiy7srmzwa787t82dv8l6ndogw56xdciewl4i9u3owf81gu\",\n    \"firstName\" : \"Loretta\",\n    \"score\" : 81.13877133343537,\n    \"phoneNumber\" : \"680-624-1435\",\n    \"phoneCountryCode\" : 578352273,\n    \"originCountryIso2\" : \"wcf5czxk9y190ompdxvdmq6vyk5w28pdbeparfnvoeoejpnye670lhsjsxcmav6p7qo0aepiiwjpgvjw6igar165qxngx1ktf72c8g1whkdzn6jzwlscdn9xjikbl1ngghelm7j3ez2sspnmpzkdh6g3pfaet909qwjz2pc14v\",\n    \"phoneCountryIso2\" : \"qcp9d8zjq8b86zzt9iwo33mduoac5odeyp5rer9o9huclehbzxls5m2w3xcl5imrbkuf8a99i0xcqa3dc4noh6jtdzkbxa8vt4i04twugpe96v8s7e9fl8c75ds5l0ljo9za93hz55vxfsg4yjf6coqkmbi8pxqh3baafxtcrqibne4pfw94itlu359fu1iy3f0j\",\n    \"phoneCountryIso2Alt\" : \"llhedu2oqd5um984qsxtlrj134xj5mt08mv31ttyny7hpmknb7biozks36v8ebw6domw84eyzyjebc2x5mklod1r012ger4908il130tqcl38fo6uo150quymsxb6e4l5x8al5090hyglnwm0p5n\",\n    \"countryIso2\" : \"rc9e3xdkb0qvusjnajrd3zy78wle767i4rymu31aggwiedm0krwxpwygeg3ob1uhb237rohzoaqbyv6ly2uw0ec\",\n    \"id\" : \"t24n\",\n    \"internationalPhoneNumberVerified\" : \"o548t0hkxq52qk5gschnnx317z8t86n786u2fszcm0d840c35qbh434s426wrb89rxpunoc3ft1c8cf6\",\n    \"phoneCountryCodeAlt\" : 741470398\n  }, {\n    \"lastName\" : \"Schmidt\",\n    \"originCountryIso2Alt\" : \"twuctr3ih8xbs8o8en6k9nxgg4bul6818yrodedp1yf4ib24wk0yfc3eyl7kru3g9j49n6cbf9irvdb6tm5jah1ldrjtxvqh0bmnwv9gjki589aze197lsqyk3yf8b2s4y5yii7yyq1kr87ye84\",\n    \"phoneCountryIso2Verified\" : \"xi15c57kvuguzhkjxogc6lbpocnhqjjrfj1z9pd663ov1i3yxt17a0kttbk1659njxen8cstq5qrhj4sw9ridkrkl9suz12r3vbulqsl0d96z8zvnv4ic55y633hxw0f0ylkzjl682dq4swcsjvuqzhf7khieodvntrkf7a4vkadwhigl604c1dn4hy9dqlve\",\n    \"verified\" : true,\n    \"script\" : \"g7xj7ll2lfezx3m68n0xb4zz6yse3pym5ggzajy1c4efz8il1nijkij7y872zh94n7efzv6zpohg0ndv5gdutw48544d9e7s6jy3xlu7o2sijqdldjgn6nndps97bvih32d3lhw6tk61xodj0707uei692502qzgx97q7g5nljggi9t8ilggjhy4e6yw67egozvmaoyj\",\n    \"firstName\" : \"Dorothea\",\n    \"score\" : 74.14154964145222,\n    \"phoneNumber\" : \"311.793.2478 x3103\",\n    \"phoneCountryCode\" : 392342793,\n    \"originCountryIso2\" : \"z6umk7qjjh5s41tx4eia4mpmvtxps4k16mi9ommjhy2ond17whounvd9cso5ec5kthb9zvnq6zontrzpkh56acgxtwzep0dyen9i4k5t9spr23wss\",\n    \"phoneCountryIso2\" : \"cfvzuibmn5229f74j3eyvty6ci86m4d7j23o2hytfxnh9bviwbd8gp114gssjtxkw7jswc25eoc8towquf52x4hrgsa02\",\n    \"phoneCountryIso2Alt\" : \"dyfgqq971ye1so9u9c19fr4jt7v83ne8dk3go47642azkb\",\n    \"countryIso2\" : \"w092ep0ooqvznsxm3kkjc47jtswhofhw52knm4uvkhozoqhbdtpzl7movivptydog41bqtgmax1o2f72i5rl9uova8aodq4vwb04u72mv\",\n    \"id\" : \"k45j\",\n    \"internationalPhoneNumberVerified\" : \"pqddeiaaz6gmp7hwd62bd1ka6b22k7f3ppj4h14vy5nxdpeu1ehys81pmllt4snxy3jkh9zc4nz7faud96epbzktipzzumb22j\",\n    \"phoneCountryCodeAlt\" : 1068689583\n  }, {\n    \"lastName\" : \"McKenzie\",\n    \"originCountryIso2Alt\" : \"htdxk1hcr4h1c9r92y2e3r6tglg2jc3aa32pzzbc4vl9lrvrsvk50sgfr2twug8boie\",\n    \"phoneCountryIso2Verified\" : \"gpf8spy5mwq351uded17hz3x5dt63b6s3zc0rwgz0pqa3ug3wov0v20p5sa45xy1hpxtv0qmenok6tzs3ftinkbiq7y7wissm1sc1x7lc0s1tajlzc9gnx4rxerof8qoi9gtc8wqmeqytxnlk85xj66xv0s56aup561c90h9r9ad8f452b4rde3b2qg7mt8w\",\n    \"verified\" : true,\n    \"script\" : \"yx902l0aue89bjkvaeon5vbptmo9h5\",\n    \"firstName\" : \"Ellis\",\n    \"score\" : 21.043846945307866,\n    \"phoneNumber\" : \"561.327.7181 x259\",\n    \"phoneCountryCode\" : 399510130,\n    \"originCountryIso2\" : \"st9shm8vubkgt8jkw5xu\",\n    \"phoneCountryIso2\" : \"ghk8ymyvg4gdr7y3zaru93xn380mlr0kivn9u2z0h7sqodbdprkpxomq1799dv3hb4g2zdwefbns8gqeyip6hf5z8o2cimdmslmxec646f5k3cpsz1d6hr2g6g9mbf3kb01zc3zst75lp0qhm6x8li903uo3q885vormrudh848gim4bvl5xoiiv\",\n    \"phoneCountryIso2Alt\" : \"q2s9szxqp554lpu1nt535ghds4\",\n    \"countryIso2\" : \"h3tx5yz3s88vfc1lbjeizzjvt855qeq3md4ryd5q2ssfjixg9uqqbcmiwjnhy5osy5ixydnzfw5cc4ti49sr8pouwxsjw5dnx59my\",\n    \"id\" : \"vcqr\",\n    \"internationalPhoneNumberVerified\" : \"lo68ukomkenzv5uexjjp3h2x7osdk2ildewsbqhtyuljom3sjpksl28\",\n    \"phoneCountryCodeAlt\" : 1215396004\n  }, {\n    \"lastName\" : \"Murphy\",\n    \"originCountryIso2Alt\" : \"jgnlw29n6liw0qa3l7v2bc0iy4ho9wubyka8szmor2ffn5t9pdqbiagcaouwi5ibf6r74buwui1hrgjkbngcgfcre0mqiirhdc1fwgkfgn4nfxcyq3ipz10vug85x9254866r77xs3n8h195nwv38688zpti3wp3pyn8zglequfxck53hf\",\n    \"phoneCountryIso2Verified\" : \"86mdd66a13v7tfef8mmqd59u7vnadnnw6jn5kyeclux3s42eh15e39qd22k684o\",\n    \"verified\" : true,\n    \"script\" : \"3ee00a588tv5wnqy8mjk004ar892x3ue9gsr2px00uq0pjshx165zevzr2zke7hw1t13u3v41uxxfjkqxduhfhlb3\",\n    \"firstName\" : \"Dusty\",\n    \"score\" : 74.12649874175263,\n    \"phoneNumber\" : \"749.670.2154 x5127\",\n    \"phoneCountryCode\" : 569845736,\n    \"originCountryIso2\" : \"ifo1zmpjzgvzt8pgyjgjgpvjx79jsg6564zywpa7d2eqvjs35qkmkk3i\",\n    \"phoneCountryIso2\" : \"74mdcr0pvjt4pj9puy3t81twrie6b0glh9vjb3zy0u6885qq6tetg\",\n    \"phoneCountryIso2Alt\" : \"yuj399we0wdpfq6dmhsyy4kvke17ffsf5x7idtyqgwigb3r8ttqgmvw7jgbu1k7p2kn57bm24b5docpgdu6spmupxqokzqszh01ndlirbl290gmptbp60jkxzylhtqr87yrd4dwnef8z5ho7a43hxoo2zz54f8k08rxms0ir40kd599xnd\",\n    \"countryIso2\" : \"i49erv969iuos91hp17qtc\",\n    \"id\" : \"lp67\",\n    \"internationalPhoneNumberVerified\" : \"urzs3dmcur7658it3g1mnpng0cnv2pwjy8fy2w5a4mk2pn5darws7mbp1pkcmar7a\",\n    \"phoneCountryCodeAlt\" : 521413895\n  }, {\n    \"lastName\" : \"Schneider\",\n    \"originCountryIso2Alt\" : \"k9pdzxd3lidpxk8h347woq5ea0bbp06zwpecy6\",\n    \"phoneCountryIso2Verified\" : \"8p07rf4eabfplj5z5omifrqwep6077zd7lpprg0bvofebdj9o6bvcj2s6kkyo7iqzfaw9wgqa7khl9xudglzpje2hb1jco0ve2n2et71mjutj4ec0dyxa6wonyi0lifo6yx1tvh2bi6r8qrku9t6xpnwcyyzjcr0aq7kbjl2tyw2l6p61b758vy\",\n    \"verified\" : true,\n    \"script\" : \"0ebzb5rnc7dykyn9hzko8iik96stk5kr0lx8lmdfqgmt2mnkahmhgzke6vpxp5axevt70v4mkefrlz0jq04mz5t6huinfrwxqlvkgoovwcj92o31vdfkg5hq5vud08t30xwcg0t7sxmh02xcc\",\n    \"firstName\" : \"Valda\",\n    \"score\" : 43.45674509614958,\n    \"phoneNumber\" : \"(124) 522-6740\",\n    \"phoneCountryCode\" : 1915484040,\n    \"originCountryIso2\" : \"xvkr93rwkvmz8zvc5wo55ixjk4kalaytynaz8dfy2zn6khyitnykq8cnmy1b2zhg6ak2u5vh0nxa8eebin297m7rpp9eltjbh8f9cy4ee\",\n    \"phoneCountryIso2\" : \"pixt1gp3haoqz07f19bb5p656en407b9r6fpfqkdw9v41fv3320di325vj3oxjqg6u1q5sqpy8egd4aexdkmyzepuueglm3vb9vk3vu27deufumnfiq\",\n    \"phoneCountryIso2Alt\" : \"jd6o9qzvmox6jnisrfwun1swzfw6g\",\n    \"countryIso2\" : \"7xid3ql\",\n    \"id\" : \"792r\",\n    \"internationalPhoneNumberVerified\" : \"dffyr1uus7miuyypj2g4mtrjq6z011mcd13oek2adqmejsj0bw5stsyei88ohezdh0prmn1p2kaczp9gr7afp1aag0nozzxgji27sgzb625z5n6k5l39vqbjtp7zw7mmondwvac8r3377bzwbxxtzylpjv1mgggl1mzdgwnxs4pitpooe8bww43\",\n    \"phoneCountryCodeAlt\" : 1883057101\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9a2b1db-e50f-4f50-8a96-7fdbdce9636d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.336033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2512aa21-5e2a-41a0-b197-d12a0321fce4",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Ruthe/Wehner/331.482.3300+x899",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2512aa21-5e2a-41a0-b197-d12a0321fce4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.334524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    }
  }, {
    "id" : "3c0b6acd-66b8-4dba-8de9-2c77f74b7f38",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Allen/Okuneva/1-105-723-9818",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3c0b6acd-66b8-4dba-8de9-2c77f74b7f38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.334442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    }
  }, {
    "id" : "9a25e0e4-88e2-44e8-b553-925d311706cc",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Gennie/Herzog/%28961%29+604-4615+x4680",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Ortiz\",\n  \"originCountryIso2Alt\" : \"qyiv2fhfj4yntahk86yyft2\",\n  \"phoneCountryIso2Verified\" : \"fcck9fbrbesus0tv6h59mrcya6sscdhc53b5e9qvivi8mwp12s6e63nr9abmmqai86zrsghh79d718gl2c1tr9yjaqs0b2d\",\n  \"verified\" : false,\n  \"script\" : \"kevifyonn87sts6tsfcvp0zfrmstqkih4k26k5hdcf8hhlox2ny91mu7ve4az\",\n  \"firstName\" : \"Weldon\",\n  \"score\" : 51.482765077075875,\n  \"phoneNumber\" : \"(828) 201-5353 x1984\",\n  \"phoneCountryCode\" : 1863098557,\n  \"originCountryIso2\" : \"8t99356iwrrkpsn35d7u78ol92yo4wd3694rpadknbnl0qdyfh452b0l5fp3lesiilp2aojmuqrb8hm5bpmey1tlk9xt4swviawiq34mt81ng6ftk185oej3oxfwmibeh72yin4exqj9kmgst2qzrpq9jeyefozrax67mg2wgn8kmr9kcr\",\n  \"phoneCountryIso2\" : \"4h7b\",\n  \"phoneCountryIso2Alt\" : \"tne1r4c5k1xd5ebqiswkm\",\n  \"countryIso2\" : \"l9e5fw612sg3yxuvvfyc03hkxwzf1folfn1dtwbjw31cn3h9ijgacgf6kqbpd8hdxpbmoir132usfctsgc8gmpvmrzd8pmplnjhx7377edf3fcq\",\n  \"id\" : \"9167\",\n  \"internationalPhoneNumberVerified\" : \"4d3fma23qkd13q564w1n6h62ai0lhpjy86n2iuebdhwgc25bkrx3ji\",\n  \"phoneCountryCodeAlt\" : 513417648\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a25e0e4-88e2-44e8-b553-925d311706cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.334344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "4c81870a-f6f7-4468-80c3-95ce48ab19f7",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4c81870a-f6f7-4468-80c3-95ce48ab19f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.33371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "b331339c-4620-4a7a-acc3-d1ad17e5cf75",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b331339c-4620-4a7a-acc3-d1ad17e5cf75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.333694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "6d6b7935-3a9e-47d3-ac63-8f9958530ad7",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6d6b7935-3a9e-47d3-ac63-8f9958530ad7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.333677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "52ba2e2c-8a02-48e1-9331-8c6726f5e3bb",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 26.43964124828555,\n    \"firstLastName\" : {\n      \"firstName\" : \"Hassie\",\n      \"lastName\" : \"Gibson\",\n      \"id\" : \"rqti\",\n      \"script\" : \"k2vb1r57v110us6m04l4ztkwc1if8nje91h8h9587y5nytzfkmqbgwwm1tpkotj5973hl2khaa7jsprw59jf5omj837vo9py\"\n    },\n    \"name\" : \"Hershel Hilpert Sr.\",\n    \"id\" : \"3lpl\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"2yqhu4of11lsh0h3ct83j3lobxq94zkpvyc9ac3dutbvc50s88zi42p2ixvvzkeebsemly11vkt4yfe3enwcxx1hndcu6fx9z8n2drprt3phs58p2ivxbu2sb3j9q5qdzwtrwgf8wqessfxjra3fkn7ryb6pc84qntemhz83wffu49dstqqwums3r4javp\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 21.90599890585746,\n    \"firstLastName\" : {\n      \"firstName\" : \"Alden\",\n      \"lastName\" : \"Douglas\",\n      \"id\" : \"524n\",\n      \"script\" : \"0xemg5uwvxk93omuyztuoxphcei9zopwfg5w76t6f3jk0ke26ndfmj1pn62g9ftn\"\n    },\n    \"name\" : \"Amalia Schumm\",\n    \"id\" : \"ub6q\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"ce7i1r7xwntearosqbjvbu7ug6jzkd9bf62dtepkiyog\",\n    \"nameParserType\" : \"LNxFNx\"\n  }, {\n    \"score\" : 27.932635003896433,\n    \"firstLastName\" : {\n      \"firstName\" : \"Brant\",\n      \"lastName\" : \"Roberts\",\n      \"id\" : \"94mp\",\n      \"script\" : \"t8yko7syyv0yjp4x4b3q94qmlzvmp1a2ild1qoa4ril48j5dxl5wufc2vnk9vuhgvsygn7uawoge98c5guein3mbtwf6rcs4ccxnyoug\"\n    },\n    \"name\" : \"Lue Gusikowski\",\n    \"id\" : \"2r6t\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"xs4ka8b6l6st70jj2c7r51dpbom029al94a7q07h20hwaluubs506onz64lcbv8p4hl9prtr3mpeu1w6g5i2o8mw2mwdnqo68528rcejnls7ety0\",\n    \"nameParserType\" : \"LN1FN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52ba2e2c-8a02-48e1-9331-8c6726f5e3bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.333645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "7c7fa8c8-694b-47ea-93f2-33490bdcbaaf",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7c7fa8c8-694b-47ea-93f2-33490bdcbaaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.332685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "22025986-8dc7-405d-8394-6221a53d8756",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "22025986-8dc7-405d-8394-6221a53d8756",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.332669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "f66630e9-cbc6-4e23-abe6-f4066652d0ac",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f66630e9-cbc6-4e23-abe6-f4066652d0ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.332652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "9c477ca4-35c5-48e9-8d8e-46f14c46026c",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 84.0820092766599,\n    \"firstLastName\" : {\n      \"firstName\" : \"Steven\",\n      \"lastName\" : \"Lockman\",\n      \"id\" : \"4o30\",\n      \"script\" : \"nwk7y0aqjwn9l05bvo4aypqdrn4dsvuz7e4vp8kq877qhavy9n3uqb3o7d86g40g9zv1e05usdkjr8yngywzijyas06gmdpp9ydxuaaf7b8\"\n    },\n    \"name\" : \"Ms. Hailey Skiles\",\n    \"id\" : \"75g5\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"k01gbgwgh37do6qba9ea0rjoyo0gnaag1xgn78qk7uovz3zdrlzcuuc0fmztfanzkci8k7uycf23sr65qfuc3h4oxco9zv5iqwuxyo\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 41.465638525453095,\n    \"firstLastName\" : {\n      \"firstName\" : \"Thuy\",\n      \"lastName\" : \"Howe\",\n      \"id\" : \"536f\",\n      \"script\" : \"u3f3em59bqd3aopdde635fiqm6fxqruisaxwh17l7cyhqwb0gdal99l8yrmsjx9ehzhdbfkfl1pge4tyrwu6hpsag96dft6z30xizia2z1vch2l0qmhwizm5azjoj9nmjs36mcmwj238gwswdzzwjzpg2pzvx71iy8fermkdn211f4qw0o8h513q6s4s5o7je2rafof\"\n    },\n    \"name\" : \"Martin Little\",\n    \"id\" : \"2cpg\",\n    \"nameParserTypeAlt\" : \"LNxFNx\",\n    \"script\" : \"f0cu603f09rzkwbyltb54fdlcfxxt0tr9he78hglm94h3z8xu63fbjor4nrgvozuy2i3ouun8tlisgly1h1j1a4ie6rh1bzp3jvv9cfp33ag83ozwqdbfgvjin258yj67gy19\",\n    \"nameParserType\" : \"FNxLN2\"\n  }, {\n    \"score\" : 62.41460758782963,\n    \"firstLastName\" : {\n      \"firstName\" : \"Korey\",\n      \"lastName\" : \"McGlynn\",\n      \"id\" : \"8v1i\",\n      \"script\" : \"5niq04ysso22rvt1ws6yjs5h11ih5olgx4xf86ouye9ejo5dc0icbnak2mse76esrn0ip78rq60m4v0g02hqx2707v1dgsxf2fa0ydzvd5zwe9ejj4kk6dwtkg\"\n    },\n    \"name\" : \"Jasper Beer\",\n    \"id\" : \"74xy\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"a9mk4f172ffgb8mp5fbul8a5m9qq6e6xpwkhcqcht1qyuxpo45cmbwbg7y14izi69mkp5ukf37\",\n    \"nameParserType\" : \"FN1LN2\"\n  }, {\n    \"score\" : 89.83772283989049,\n    \"firstLastName\" : {\n      \"firstName\" : \"Dodie\",\n      \"lastName\" : \"Sporer\",\n      \"id\" : \"6j6k\",\n      \"script\" : \"6wwj87l9urmndja28u1lhr8rnbrq95ptxfm91qclevt0r95k7bpcq38fylucxqrr4ytu4oildxxocswaoxgvxhtc16h3ctsjco59z7o05qj85x8x7oe04t86veop93rhsem7cy5nr1477e0kmd7110wuqw2wt596p\"\n    },\n    \"name\" : \"Kecia Walsh\",\n    \"id\" : \"4859\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"sb3n567i9j30izcx4b56z1poqul4mmqax0lecx3p5gtpz492kl4gdh3hg\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 55.975050571629424,\n    \"firstLastName\" : {\n      \"firstName\" : \"Melissa\",\n      \"lastName\" : \"Satterfield\",\n      \"id\" : \"sq4o\",\n      \"script\" : \"kg3oi6g1hqa6pnagk296k9fzkwdyawo8aif7iif0b5el35p9abb848z3899zf66jjjn1cxdmqe3qxovqx1eeo437i9ohii2bgiew7r\"\n    },\n    \"name\" : \"Raphael Ernser\",\n    \"id\" : \"355a\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"7eyaj1vb3fst4kxsv7twu0zt2aaf7r48ljhbhjysxi4yine43e0d6k4y7unrp1knlmcsute364bkoq6vflmf0x84ln4ww3xqea55xz8wmgkvd2p1jrnjml9mgoe5\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 61.9222100024706,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ronnie\",\n      \"lastName\" : \"Tromp\",\n      \"id\" : \"5wng\",\n      \"script\" : \"ji9yzfderd4ylio1rfrguztqi29jbiw5apk9y5cr2rw0sltp77ns2\"\n    },\n    \"name\" : \"Jeremy West\",\n    \"id\" : \"6750\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"i43fm0te5ia9xcrmsszgkwav2tpp8hb5cw3hhqlsgk32e44cybspu5v8uw077vigve662swsfckehdm5oxq2o55vrsp3wxsv0689ej70owua8x8wpgdo2cmx584ryvcizw9e8z1xo3bti6b0bm56oqnew2lqx8y1clpuc3jfv98s7w6ucxa1zyu6\",\n    \"nameParserType\" : \"FN2LN1\"\n  }, {\n    \"score\" : 61.37737383499263,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jeneva\",\n      \"lastName\" : \"Champlin\",\n      \"id\" : \"i93l\",\n      \"script\" : \"hx13u3xf02embdnndwtbc7twhnuz2d1wno0u2z96z40yko0vz6a0lj72tsqg616cxfylxsrw1quq8dbsdyiataqurtvci8h72tjjc227suwz2zyat1mlpnsknkrr3ysd1w8hi8gl6erg3qj9yxom57a753und4klknkdlyg7pkqlr0zookwcktksmp7\"\n    },\n    \"name\" : \"Corine Sauer\",\n    \"id\" : \"bvs5\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"dziths4h83jriuv6d3m6b9jnlhlb7exmxzdxy0dlobgnp1ggum71dz4xgi25lnsakhhaatr288j085vg41gdrbba24kn08juznrzo20\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 27.86083625353013,\n    \"firstLastName\" : {\n      \"firstName\" : \"Elizabet\",\n      \"lastName\" : \"Lebsack\",\n      \"id\" : \"awyn\",\n      \"script\" : \"azylq0nlscl9vhrjuufnlxrf31ojpxh9k0ux679s2lu318jsdibbth1bkby8jtq52ccwb4852yaltwbzv7j\"\n    },\n    \"name\" : \"Christian Bins\",\n    \"id\" : \"wp57\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"zmaglwp9cfokw0zfzdwjk0j4h3e9y3rk32jn0k927e81j7i7gjykotc0tx1l03mf6wzhlihr8cfmpwqjrt0ncydmnktsnk9dms\",\n    \"nameParserType\" : \"LNxFN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c477ca4-35c5-48e9-8d8e-46f14c46026c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.332609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "982b15cd-d486-4501-b2a2-94835b921d4f",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/1l6j4cgfq00nw7v1pd3i35ed2hdzjfqzsylaudshdn22wreg7u95xr57wz2ltk45qcfn6mfvnp3sbw4xtn4ec9m4q36kvkc6x513wtynvil55w0grw5y3lo7qnv1nbjkf41plzkfmjze3psohu2vavgeqdycs7ltd1piwvu9wr5jww0nuoplyw1bbbcr2ilu6g/fxm7ruw3yurgb9237woh1kt2ho7alnlwdynudehejfysruuprhnwak10cbxx9zc7vjdeglw41h428ic2sjm12ugquhf7dhm05ox2rudxoxvyv6w8cwr1ds76ia9lnk6bjmp2qevgbdobuij59zw06fd6an3yhdmgp7vj9lvnbjktzltj",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "982b15cd-d486-4501-b2a2-94835b921d4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.33015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    }
  }, {
    "id" : "8e08a6c2-4ff4-4ff4-869f-092c6caf478c",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/wotakrmhl7rbm3aekmtue125ytdnuta8xnh3jns3ew0qwcgdyt4arpmtiizmg6o9wf78e4quzn49jzkm3e3dxo47b8yshb2e06gh5y19dg7an81vztlhye44cxuw2hnqmvylkl8dfapfsfs2fs83tbf/0c8auav4r4dmeel49wdbhu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8e08a6c2-4ff4-4ff4-869f-092c6caf478c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.330107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    }
  }, {
    "id" : "574c7731-aa8b-4c84-b385-c796688fd38d",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/u7pd43h4dyrbzli1gyaufd7ph5a59kau98uhb8aq5w5nm9bui438oo8k60sul3ulok698ufji1mvd4mj6aje2rror4se8nlm32c0wnpg4lhz3ye1sswewjlavk54bof25t1mu6gkvjcjdnw4cxtj3jddddzbwr24kq3u680jac2ky0wb6nmtmbxevnmp/8yzbsvq6axo78",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 15.589891736319306,\n  \"firstLastName\" : {\n    \"firstName\" : \"Elida\",\n    \"lastName\" : \"Brown\",\n    \"id\" : \"20nw\",\n    \"script\" : \"1wlzqokt0\"\n  },\n  \"name\" : \"Halley Kuhic Sr.\",\n  \"id\" : \"y05y\",\n  \"nameParserTypeAlt\" : \"FN2LN2\",\n  \"script\" : \"vtmdai97\",\n  \"nameParserType\" : \"LN2FN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "574c7731-aa8b-4c84-b385-c796688fd38d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.330055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6f85d2da-a2da-40f6-9594-8274e92aa87d",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/mz18r8vzr7lb9k349hxo6kxe6mmzbat05cmwfh19wo74s4zadel",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6f85d2da-a2da-40f6-9594-8274e92aa87d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.329652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    }
  }, {
    "id" : "dd27d12e-b0af-4938-8ad3-0159fb28c9be",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/frarisy0tuz8que28ozrtj8sckodkghnmsvbicun38meqtmcgzuwtduput8kmrmoxfat99ibvowjnkn8031kaota5a1ouftlm4ldliqehzcz0j1gm334dnzfj0qk6964o77dkx2u1e3wixcac7w6pf6r2kj4sdzf",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dd27d12e-b0af-4938-8ad3-0159fb28c9be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.329622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    }
  }, {
    "id" : "b3ea8a03-8b77-49c4-8f39-3b3e9fd3c034",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/cv5ps0t2zxjsahjdmzh",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 26.01566089575057,\n  \"firstLastName\" : {\n    \"firstName\" : \"Jude\",\n    \"lastName\" : \"Krajcik\",\n    \"id\" : \"48kv\",\n    \"script\" : \"tck0cqpoflczd6spbxvob2shgwozb0v5sta869z731duvidjo2uv11565k1q\"\n  },\n  \"name\" : \"Barton Kertzmann\",\n  \"id\" : \"b79t\",\n  \"nameParserTypeAlt\" : \"LN1FN2\",\n  \"script\" : \"pjqtl98czge081ft6itwczyhlwhejx5wvb7wrd3l136cwvrohywuz94e0t2gw4tlhjvxsz9yy4xc3on9t7ijzkixxafjvta340o48fp4b92b7d2gu3zlsj13bxdfg3wvf47ibqvnokude6gk31tryiss771knj3880chpjvbkrteehia10aytqj\",\n  \"nameParserType\" : \"FNxLN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3ea8a03-8b77-49c4-8f39-3b3e9fd3c034",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.329577Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "14352418-7527-4c2b-8dbc-990e1743107b",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "14352418-7527-4c2b-8dbc-990e1743107b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.329175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "5c317c87-f112-4ffa-b29a-7b2caf6113ac",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5c317c87-f112-4ffa-b29a-7b2caf6113ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.329158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "1fb21222-db74-484f-9894-2e7697e0b924",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1fb21222-db74-484f-9894-2e7697e0b924",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.32914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "39a56cb5-3d39-4981-81ae-378b3193fe9e",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 44.29792693512028,\n    \"firstLastName\" : {\n      \"firstName\" : \"Armand\",\n      \"lastName\" : \"Schumm\",\n      \"id\" : \"8qlp\",\n      \"script\" : \"zvon08yebtystez7x6lesxq9gqoscnys3prrupgtwpsj5xoryu9a94me583hmdqjbhac00q9ig2dekxp7yxa4143e4j9qhu702zrla50jmpajyzbaagw5tngwtrqt3wjji62yrzsafj09oujd77mr3lsxv007uh07kyria1ujrgxb5327jpbf\"\n    },\n    \"name\" : \"Camille Runolfsdottir DDS\",\n    \"id\" : \"85py\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"qjnm8zplp5e97n1g81bvqhrnb27loed4wqgpudnchrgmi4baociy3f9epnzk1mzxnalkm35trdj8qeijyv3qzbx2rp6yuk4w2p6znpsxusz3pyykj2p4ih73dwzkoq1gmxzuh4vg3njjib0tj1ld8d4xtwr8hz9e7rslk7r1l5c4du319jjodcrnqxuz3g4tc7ckl3ax\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 84.9870119140491,\n    \"firstLastName\" : {\n      \"firstName\" : \"Dustin\",\n      \"lastName\" : \"Fritsch\",\n      \"id\" : \"42j4\",\n      \"script\" : \"bp9qloqllp2j5w1m8b1nrw99uekd825tpabme54pq97t3vqj3te07rqo3bn0wyc1u1sl1itns08ytmzwsyp\"\n    },\n    \"name\" : \"Samella Kohler\",\n    \"id\" : \"nf82\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"5tegpt0ufu7954qnzwrjj39c0cessprbxejmyc1br2qr67qkyzswuf9u44u00gt6rpxj93srahblubhrt30b21gsce5mm9l3cmhoyhwg9ya1uvi9wh0beh2iyzxfxap8yo5hq3i4ydg0atzfvfrpnj5lkp\",\n    \"nameParserType\" : \"LNxFN1\"\n  }, {\n    \"score\" : 96.78138240904835,\n    \"firstLastName\" : {\n      \"firstName\" : \"Cortez\",\n      \"lastName\" : \"Bosco\",\n      \"id\" : \"4ti6\",\n      \"script\" : \"w1475xcp6ze4aa27qqn34m3el754bjyovc3o3ux64or7eklhpp5usps5t9nktwg46xscnxbvjozeapqxpsj9d5o5j7azoy2fssw8hqanava0llx83\"\n    },\n    \"name\" : \"Hosea Sauer Jr.\",\n    \"id\" : \"y625\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"n9t9sq30d6vp9sx6ziu2hpqx9m6gk5xbdweyrc1qnan1ptws2e1i06aae0ewqx1hio0jjohzled9vanzi1upef0957r69r02h328ozlxt91av27sx\",\n    \"nameParserType\" : \"LNxFN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39a56cb5-3d39-4981-81ae-378b3193fe9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.329109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d0fc7cb0-a083-45bc-b095-5a545f5e7e6b",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Porter+Balistreri",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d0fc7cb0-a083-45bc-b095-5a545f5e7e6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.328155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    }
  }, {
    "id" : "1ce7f53c-cd4e-4fd3-9dc0-f0678fa2c536",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Miss+Sheryll+Wolff",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1ce7f53c-cd4e-4fd3-9dc0-f0678fa2c536",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.328096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    }
  }, {
    "id" : "bf3b1dc5-1a48-45f1-b300-c7641c14039d",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Rosario+Goodwin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 25.505957132122802,\n  \"firstLastName\" : {\n    \"firstName\" : \"Joselyn\",\n    \"lastName\" : \"Satterfield\",\n    \"id\" : \"94r7\",\n    \"script\" : \"gmtc0sv9s919ncxf5wbfnfk69r8uhcobt16ur5h08uf3u9jpww4gcyxqplbekep07xjjcjluc2gdxsfy3g42rbhqiv2g8eif8yqoss7pn33kj7y6a\"\n  },\n  \"name\" : \"Terese Ritchie Sr.\",\n  \"id\" : \"0kt2\",\n  \"nameParserTypeAlt\" : \"LN2FNx\",\n  \"script\" : \"reer1gb8hgq\",\n  \"nameParserType\" : \"FN1LN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf3b1dc5-1a48-45f1-b300-c7641c14039d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.328023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "21d26c21-3988-40d9-a7c3-90c2bae5e7f9",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "21d26c21-3988-40d9-a7c3-90c2bae5e7f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.327612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "adc2034e-c61a-40ac-b661-1d8e600c1253",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "adc2034e-c61a-40ac-b661-1d8e600c1253",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.327595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "4dbdb9ad-4b1f-487e-8550-2825ff180aa0",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4dbdb9ad-4b1f-487e-8550-2825ff180aa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.327577Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "564ab98b-5853-4a80-a158-51148ea54018",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 66.15957248202635,\n    \"firstLastName\" : {\n      \"firstName\" : \"Amee\",\n      \"lastName\" : \"Swift\",\n      \"id\" : \"4ypz\",\n      \"script\" : \"dqfe62zv49xt6yznyjy72zenoy1kgif9kkxkb0qdfxr4wxwi562cd7gwgdqc12kl4wp5h2jxb9cz0i48ehml315gi3f21h9loyy40eibdlb995rj2gioz7rwoatehx71oo9zzv7xs81vprx2jol7fcke920st\"\n    },\n    \"name\" : \"Lisbeth Swaniawski\",\n    \"id\" : \"vv20\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"98zd106nae0583cbd4okshlr0inwkwtx793lo4xdskdwxba8niw02ojhr8ryspfgmubu3bk213qh2ep61zovq00z7ymwm181lbmgk1vzlw04megvw2zc6d7fwn01ui3klmkaouun1qi97e5df8z9rv70f43u0a\",\n    \"nameParserType\" : \"FN1LN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "564ab98b-5853-4a80-a158-51148ea54018",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.327549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8b2905d1-0914-4924-b387-ffdfe9f2ddf7",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Ignacio+Klein",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8b2905d1-0914-4924-b387-ffdfe9f2ddf7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.327199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    }
  }, {
    "id" : "42d2b73e-4bb6-4f61-9353-d84ac6ae38a9",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Jeannine+Harris",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "42d2b73e-4bb6-4f61-9353-d84ac6ae38a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.327141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    }
  }, {
    "id" : "7cf258e6-71c2-46d8-b97f-94a9f5e76f11",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Millicent+Brown",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 19.531740098498695,\n  \"firstLastName\" : {\n    \"firstName\" : \"Rebecca\",\n    \"lastName\" : \"Kling\",\n    \"id\" : \"4cie\",\n    \"script\" : \"brau65ihte8ra1abo3r1eluu001vyatfo0uker4quxhnzowbgv\"\n  },\n  \"name\" : \"Rudolf Satterfield MD\",\n  \"id\" : \"n6af\",\n  \"nameParserTypeAlt\" : \"FNxLN2\",\n  \"script\" : \"27bj57qo2x38f3bf0v8xodu2q728aceo3wp125kddja2t57pt6zle3azoc4io8uirvi65\",\n  \"nameParserType\" : \"FN1LN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cf258e6-71c2-46d8-b97f-94a9f5e76f11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.327066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "95a404bd-9111-450f-84b9-eeda6de320d8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "95a404bd-9111-450f-84b9-eeda6de320d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.326579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "9217c6d8-54d2-48bb-badb-7cff51e663b0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9217c6d8-54d2-48bb-badb-7cff51e663b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.326561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "50eaf956-79a6-4463-a6bd-4850b66e63f9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "50eaf956-79a6-4463-a6bd-4850b66e63f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.326545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "5ea0be1a-8a4b-405b-8bf0-f1f6cbb9738e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"lastName\" : \"Baumbach\",\n    \"probabilityCalibrated\" : -0.9758408101224212,\n    \"script\" : \"bw8oepm8w000neuql1qixsn2snfyndml0wzfbcmjkh7pm91wm80quyag50t9hdik5gp6x7960ybjwez8w5fjzu1lh0wb0c3t1guz5ai5k5fd\",\n    \"regionOrigin\" : \"ghcqilqaza490a39qovd6gqtqzusaq8z1gmjpb5ueceqzw43ihd4et2msll1k55km894n8m0l8bo0ur05s6dwq9r5bcmsmivjcd12v0ml5icxj420te0pxgu980acw903wtzt10u2nqhsssfa10usoupo13\",\n    \"topRegionOrigin\" : \"shhnyhho674ha4m6trve9xvk7mfseyu1yr74t4oec74e0rrhhaq7fjanc0hnaj07pbw1u68a39hgcs1zjsfd8znaf4ul60kjk5i2o5odszr7da9dsjqy467erg6falckg57nnplzznunxui3ol6gm35vdqwf\",\n    \"firstName\" : \"Nathanael\",\n    \"score\" : 33.13033301592186,\n    \"subRegionOrigin\" : \"wmi88n2r7lf5kyqmtockdhj04769uek2nzxu2zdrmuhwhmtkto059tfl1pl561xgkz6324rzkiiv58gst4832odemk23vjjurg6m92l4hl0lh0ghs4xgrlx1g4hyq1580kx050jaxklm0yg9rgb2ol1n6yqam756iqbv0jglohn2\",\n    \"probabilityAltCalibrated\" : -0.8929238741761489,\n    \"countriesOriginTop\" : [ \"w1gl0img7uzgaylykql6jb7j3dmwng\", \"ybqqnzu61so3qg2y1ozwosn4vez21xw9fm94xetiamjo84e74v9b0v3a6ypyn7xbtubdlw039xa4h0jbugl6x6u7m2200jalcd\", \"29m34nplrxjw7lmmco5ukkaokcnv5aayptnqbxy6kbje4ajul88zbrcodnjmgp3upmtl61nue4cdtq1chripitsulmal0fmmyc4cuz2otj3121y3axujuj84dxhwivbi6fvsyyczivnuuujg2mweu09gztb1l2liyya0suuyvmx1y1cvk95vj54s5o\", \"y5ie07prf7vkyire69zgi5voe0d0fw8a1om8vl27c3crfhcgm9dsp12d1foqw0vezq7emgf1pbhm96ykvihxl87d6t9vfxh833cbpdtt2zsp3ylg4ogrevbmoht28urjf4106r0vb3vg9tf6fg0fxm5uwu5b88cqh36ovrq3s0rcnrp\", \"x4nw9xqcpjgkyrxugj3aqxj4sdb9vwetlh33oqg7oobtl0bc5uq94gypv5b20wsfhz67elifl8h0hd2xip97w48eypv4kudka8919vbyry5qx9q1x8m1q97nmz866mpbl2ys7z9vtkjyuhrn4ngq1egwuut13ejq\", \"r39gaftyn8txbu4pych47199ka5tmhsz6rphfnhdst4ilrmgurx28j2x9rq7v4y3cnvhlsgbe89l2uma81l39kxu4d01wocwa0uqp63zfhkk53yf\", \"vin0d56n5dxekjqwzli91hqth3tnxxx2futjyu5apjaww70a86gjy7i0kshowmfcy3ttlys91lpdk6j0uwjuoil4eq\", \"4w52wyw1kfzgxqjr3c1tw9eaeyhrpzu4i5ksfan0mgui6z78xi568i5lpfiebcnvpeytoxqc3ji3xhdjyz7gzk6vo8jrw7f3o0ptm26himg1mmttduwammy8j0jyykcn12k7ezzvqcfuq8b\" ],\n    \"countryOrigin\" : \"z7se802p26s92s4muonsyq7q8efcn01xoda2w9dovl719l46qyecwvm1xn3uw9vwtk63hk2bl9y2yvb8hvk3dim\",\n    \"id\" : \"z958\",\n    \"countryOriginAlt\" : \"62xx8ze1z4odvc1g02c4n2hbx8kwvpyx7cr69lxb6g9d134x7l4f1m596sh90vbn92gkt2n9dtj0ck0q4de5ixa9ti4mz1rsej8sf9lrye429wtk3ci4xky6kf5lrghh7fwuoaqh0vi6c7ywf3iqibnvu6h4mcypcrz97ccszx0\"\n  }, {\n    \"lastName\" : \"Harber\",\n    \"probabilityCalibrated\" : -0.3246858687467258,\n    \"script\" : \"h9t65qeg90i5c86y5mj177ok8w0ey5lydfmfykupwja6550x0k35ebo83cjuvo2lfa663nwt9hjnjk2ophg23vpx7k3k0kppqthc07t08h1jrqzgmlzade677174b5loan95h6zemjrramzbvg4kplj2v15plnatkd705nf3m0a3na\",\n    \"regionOrigin\" : \"dmx7h6xt4scnkttblbk5z7yqlf74mbepxsi3o\",\n    \"topRegionOrigin\" : \"634zyb8vhnl8yeuj4r5zukigid4xwlp2bkgqhqggw3kxa81wxltekhaxxw8837hglniey4yac9i4xio54uqthmvkc6ijm47azvmosezrrxjh5tucviyqd\",\n    \"firstName\" : \"Garth\",\n    \"score\" : 95.09131562379443,\n    \"subRegionOrigin\" : \"eztmcu5oy0xjielu42jrkb7i7gh2po5nhlv0zyrzc\",\n    \"probabilityAltCalibrated\" : 0.3034958598432511,\n    \"countriesOriginTop\" : [ \"te7fppcrimiq3cvqfzy3q67ose5ylgr87excz2fiv2yw9oqbxdy1ipf77ol2tcnxzssb9wgr4ae0s1h5twi9j7fsbzyifsy4r5yav61wdhlpv00ye7qsakd6er\", \"uaozu2d7oxq7hz\", \"0ukriafbuc1wcaq7k15x5qt4p7lbeihjxv4443mafemtv5qnmd3ouwgpe5yikwbimg5ezoiq5dlf5i3eircuf0a9pa593woe2rvk3symf43n16hasidip2lbzd8\", \"ge3yzd9loqctvygvny6dunr2zf1x1vwhbclwgkry5amgfld2di3ld6no4ra5t8tyeb8z6y1nx66es4jm0bkurrftwci35egu2pvsoahtgdj9n3xzvrn5kol7wyh08eq5196h06tqmrm5whyg744ivaow26p0kc1yeg3uso8vtdrt70wbfxwret035e4ujwnja10eisz\", \"j0vbzgndmztb6f3ehn84w2hz8gwfgdien93w2ypu0xlvyt111tom1nnlkum5dazscpf00ufpnhps9lpmja7un8norhxtr3rsp6s0\", \"kbp5g\", \"cxi6y1s03cyc1alv80fh1nupk41nygc8zrcn7hw685ozwmjzssfas275n2vc3lwqmnjssj2wp1q83xhqtd4pkft979ilumabrqxa0t4c1w727lftf3cy1vzjpae9va1e3fe1gsg4mj81b089v1hvwqjupogtjbqgzvswrvjznyw7002tjziix3na\" ],\n    \"countryOrigin\" : \"801hu8t7e1oeb5qijqazag5b485dwqeq114q51kbekxb4mb8arvlx3nbbbq96rvqg89yjeiwlu2bl0lzq9mnt\",\n    \"id\" : \"d0a4\",\n    \"countryOriginAlt\" : \"y5vgo000p7wz4gsmr8bbv54jvagiumfa1lsd40vucwon8uupa75hqn7rf0tdu1y17cosrqqwk5v91outunl642jt5pos2ezfynkws6ln2ff6gheew91iwkhlr8q05zbdh9eil7ch49smxcfpt0rvv2d3nm6gsemx829qm7uwcj4wvalhz5zfg5r\"\n  }, {\n    \"lastName\" : \"Kerluke\",\n    \"probabilityCalibrated\" : -0.26146662532505305,\n    \"script\" : \"4mdjgvtab8\",\n    \"regionOrigin\" : \"u0o2jixcnyuemi4xr8xapf6qj1tk2a16ekqwle6lgz6gg0jhubtio5q523kvd9f13aqnlka3r7mto6m9m0a1hpyi5q4e7zsgxk8v9b4k7e08bchb2disejrxgx95jbelngctvthiuup9sjftk9z6ijhqfwntqal6mpu0iv43ecpxvbgpyo7rh0z0qju5qci9f0\",\n    \"topRegionOrigin\" : \"5vc\",\n    \"firstName\" : \"Ricky\",\n    \"score\" : 91.86890954610783,\n    \"subRegionOrigin\" : \"lnowou2lwi9ms919bqmc1r4e48bluuw3b6vh7lprlllxfqavl2k7eickvjzwzusfg8tw7e3cy9ii8h0ay4wzquafgwmdk2u6tfjdv9umt5f6p0n2t7sqw1u9\",\n    \"probabilityAltCalibrated\" : -0.17063827002823628,\n    \"countriesOriginTop\" : [ \"cs0d8ksaaynqpentk8sepv700abxtqb1vznzc8qe7qpjgl6uchgt5rzwk48sy58zdnmwdua8787kdmlnjdmkjwk2pbcge9l3fskrxuki5cakylbsuol0ycgkqubeqi4mfbhd9z061uu4oww5pvi98wt4rtddoksate3xdaz\", \"jp58wie4u1ygs3dd01lap6wcsxx8bnzur2h\" ],\n    \"countryOrigin\" : \"229y9kq0vo6w919hpbdd7r\",\n    \"id\" : \"bl3s\",\n    \"countryOriginAlt\" : \"q9qpbot19vsed\"\n  }, {\n    \"lastName\" : \"Cartwright\",\n    \"probabilityCalibrated\" : -0.28868972273554894,\n    \"script\" : \"iqwg1y7j73y04kzdinf6hxbctqkch2lb2vrn5fy1yyv3muiy4bf4ki9j81zit821yokt4skjibq94tuz8hlrs498nr35m9qqropq62ect3j7asvsz83nll9imouvq5oh5001sz685p6pkhkuoh\",\n    \"regionOrigin\" : \"d5ax0vqbaj41dwwx3zk78gep8h93o2icipgvs4juey21oy0ti4x3nrfkpz8cjgb9ffyqzm242vegnuv2lkdng8c79p621i0db7wfe3mfynkmkvktqok2e7sn7skx5b5c204yd5iujm2m5dqe9w9yi86eb8p05n368r3v\",\n    \"topRegionOrigin\" : \"33cqf3sl6jexh4v9jof0yqx2dl0gjwknwvs33r098k3jg4kwl8fqgrwxjfnebly2xh8u8jz3rgmz\",\n    \"firstName\" : \"Dewitt\",\n    \"score\" : 53.29157278487162,\n    \"subRegionOrigin\" : \"aee0iryp64dy8dcq07qldg1a9t2o4ul363rqnf5btlrveyuef9020j\",\n    \"probabilityAltCalibrated\" : -0.08886635606126325,\n    \"countriesOriginTop\" : [ \"2794ll4ozg6hlv7bqr2gh9h0c7011swete1flbyu50la17k6bj1wbu8naf6m6t68fl9p6ca0rt9stmco3l4u3g6jqe9u7w9rpk7hjv74jzgznmm68umzuqzoagcyfto1mnhs1iyzvi8ki1v8vg\" ],\n    \"countryOrigin\" : \"nykl1bt8x3vp23cnezjonubik05j4b1y08xnwbqfgjya9ur68jhds6tjbs1diodmi8l88cbfuug3o92bcsk75gx64mvd6wgtzitv7prvywrymndi55gtzdioltrq7w1kx7f94ba8x11afut6me1741x2blm5y75b9lkd0d237t8p4jqtq3reertiij6pqn\",\n    \"id\" : \"ojy5\",\n    \"countryOriginAlt\" : \"5s5t8xnlc5gvovs90zndjnzg4idqglr91e30relcwaga4reqw3r1scf2n8rg9r0opue1yo1bpuln0w7d1bds6vvv17dnuwtccjps5euadh4s6hmajricf5ymt3uuxbeaqm5p8bgm2j004gmcj\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ea0be1a-8a4b-405b-8bf0-f1f6cbb9738e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.326514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY origin from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified origined names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameOriginedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ea88f404-41eb-4dbe-8467-bc1861d9520b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 403",
    "request" : {
      "urlPath" : "/api2/json/origin/Johnathan/Senger",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ea88f404-41eb-4dbe-8467-bc1861d9520b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.325393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    }
  }, {
    "id" : "b300b94c-07d4-4645-8724-fc69bfa9a181",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 401",
    "request" : {
      "urlPath" : "/api2/json/origin/Don/Donnelly",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b300b94c-07d4-4645-8724-fc69bfa9a181",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.325331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    }
  }, {
    "id" : "4725ba6f-70b2-4f09-99a3-9b249d9e9a41",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/origin/Lurlene/Ledner",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Graham\",\n  \"probabilityCalibrated\" : -0.21482788459164048,\n  \"script\" : \"6fxwa13jqz20rzs5clug5rqzkt9n9ralb4vuyzirdxtmrnut25p1qcvy0td2uwnngkj7p07\",\n  \"regionOrigin\" : \"yapjvjf00c1nfy7i03g6gxxc3nog6acg75ny26cb8uc5vvfoussitug54mlygjorquhwtpzbcijwp5b59p807nlawsb6p3tz2rhik7uex4dejnfduk9ivrbmvvn82clbxegbe8otzjo93t03gz7i\",\n  \"topRegionOrigin\" : \"d7e1f1ya5e0msu3twwx56274pnikhnw3s61jx0jsr8wh0lkyrx5\",\n  \"firstName\" : \"Ralph\",\n  \"score\" : 59.93101929566706,\n  \"subRegionOrigin\" : \"3jibrlirpiqec4g6x6nnp49a4r7926o7qtsitnfh4vo869wexzmx4bkr3j76zwx7dllctgppor89btyzbc18jj95p40p6jlpfvklornehybro85s34cln6txy2vydgtye7dhusa2m8i80rypdg06fmcalhjl3tghwt8oiw2q51om04dbpwwws6m1gl4\",\n  \"probabilityAltCalibrated\" : 0.4753234355865641,\n  \"countriesOriginTop\" : [ \"6j585muxdxchiiibw06cng870j6emls6481jz6wyg1i0mp5oax5ag2b1n23m2csqqa090ka1783rvzb9p5lhfagu89ptlz77b1dq1mqtzwsipqe3ekhl8bpac\", \"k26y23axpejh8pyywz3enx1g0x2wq1ly2rnndzmbjuo53sknx16er1i2nz9csyn5n25vxieq4yhhpovg28ab0cfh7jg99uum5xe1apzt5qxlgw5drzq79o\", \"fzw4g\", \"zt8zjarblcyk8z8ln6bvlw51byenrm09ho76wrbcqw9zgjzdtzfcuwqk4cmpqa6c5czy1jqa3powuhp8bmc0hms65pdun6q0qzgnr8v5mv0j5z7pl3s8unibjgvcdlcgya82tmjqgyesh3ptfi2q669xa3lu\", \"5jmjkovurx4nqnwploag1tyk6kmso37q84pdxcymezmo6dhb0nym5m8ptpzyyy52fyv8miw69v44nm5t6pvg4yb4wifpnewvhegjemctel3f52lnnjaz8i54k396f7tnry6vjoiyxqiqspzhc4zrm64sz4rgepi1r0f7ofyfapqtr3tv4wxrii2u\" ],\n  \"countryOrigin\" : \"qzg2yv3se6uku6\",\n  \"id\" : \"64l8\",\n  \"countryOriginAlt\" : \"721bl9eoktx5c8tgl2zi80wuqwka78evujrpznlv4ih984tz3novvd78n3bhv2lpr6ppx86tqa24py4u1g8oc5buwlvi9hsuu3rkumxpzkg7uoetxhhln2v2ikrlr6d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4725ba6f-70b2-4f09-99a3-9b249d9e9a41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.325252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country of Origin from a personal name.",
            "properties" : {
              "countriesOriginTop" : {
                "description" : "List countries of Origin (top 10)",
                "items" : {
                  "description" : "List countries of Origin (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "countryOrigin" : {
                "description" : "Most likely country of Origin",
                "type" : "string"
              },
              "countryOriginAlt" : {
                "description" : "Second best alternative : country of Origin",
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "regionOrigin" : {
                "description" : "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegionOrigin" : {
                "description" : "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "topRegionOrigin" : {
                "description" : "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameOriginedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b70a0b12-9588-48bb-810a-2bc66860d38c",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b70a0b12-9588-48bb-810a-2bc66860d38c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.324733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "39d89b81-6272-48d6-bbd7-866601f71159",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "39d89b81-6272-48d6-bbd7-866601f71159",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.324716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "99f13b29-02c6-4c8d-9a16-7d0c1ea6bb79",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "99f13b29-02c6-4c8d-9a16-7d0c1ea6bb79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.324699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "5adbb9b5-8b1f-41e9-95fd-44fb60188094",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 9.02762541281622,\n    \"commonTypeAlt\" : \"7ldpz1v8erdd0cl134w3hnm0hcwlf439tkyp9p4\",\n    \"name\" : \"Ms. Thuy Hoppe\",\n    \"id\" : \"flgi\",\n    \"script\" : \"wymse5rfjjakhgft27j1t6lujnmhzze2bu8n0xc2ht38dof9ns2i6kadqjzraetu72g6a7i3iow0nydq3okwq2p3qfdfbhfxlz2ophgrigfteb8ssnnw4erje5fusocbxo6b7davwu2f9h5ncc12sunl7820k3h87yj1eplgt2jea\",\n    \"commonType\" : \"frrj9ceg93yoc7x3z8otqltyzgcnjto9w4g9xp73im1xfsckkss9ot3\"\n  }, {\n    \"score\" : 67.48518202771078,\n    \"commonTypeAlt\" : \"cfpxg3ipthrj3pu8cq7fm2y851trrny6ula8yw7up5o0n0fxmkclfhivz9ibpxs65vp1im2dxlxwcmr1youqs247cwtchb2zkmb4q8mqsgiesp4ol6tfqz3ewa5p3schjkw3srwp3rbn\",\n    \"name\" : \"Clarence Beatty\",\n    \"id\" : \"s826\",\n    \"script\" : \"rspbr8a2d832v9hllf3nwkjonzwa0k1ncjxek0mv1msa3h1kmjb9xuuhx6vtbpqru9qbg4umnb4tn45i3iy5h8wusy851gak6kcpgmim7\",\n    \"commonType\" : \"3hvb32kbg3423sm7b3ejdtrjrn56i6q4hdk5fc1np7yr1lkubfwpjprcgbjbt2e4pt5b474tobsx14mw7ggx4nykal84j4nc6darde1kahppz4v0b0b97grndrwp0i9t65fc32xdj32sm90fj9zoofgi1r4uhsmjf4w1xtoffe00mn1k7cm\"\n  }, {\n    \"score\" : 34.259616510494915,\n    \"commonTypeAlt\" : \"w57aag05xunj5vuprlf19cx3majj7avfnqfkuq7gjyzf00aw3xk47x85zl3cr76hhja4bknylyqfhxsabjdn30yb6brz6uwcxnfr55ca96h94y9s4evm647vp39vhzbyvhzo3axid6fvsgn69a\",\n    \"name\" : \"Ronna Jaskolski\",\n    \"id\" : \"1w66\",\n    \"script\" : \"7uu2yttfomykv6o6grxci5qlmqftkshco66r2yz0rbt8os9k24ey1c1u76oxkr153\",\n    \"commonType\" : \"9pzovyu4oe9al3zf4x5vw8khh8ea1itax7gpgq3x9jehb354t8fwspd8mkfppgqkphhnr2xb7yfxw46w0evmriqhyeaq1dk1c75zvvy8dl1503rashku6offvwf2ae4s2h8z5p5t36vh7jm5t767\"\n  }, {\n    \"score\" : 91.86403760347545,\n    \"commonTypeAlt\" : \"rtceuq0xqs99rpxljnmi4d7f6oaxiim2yd2q0or98re01spv0n3z4y0yo2zkz394u6bhjxbft8cj5oius1y5gls7dnc0k9enmbpe4\",\n    \"name\" : \"Mrs. Sydney Bashirian\",\n    \"id\" : \"whr2\",\n    \"script\" : \"bj0lzd16kg4omrh9chz6qibbqg9ukond97epsm7hsejp7d0q9e7b6beo926ew5zqp3l0klw642gt076smuas2tp9ur1rjs4f0jyd22zr3mo1h8bhf3a50bx74j45fg3odz938a8tpi7va40jtqda79ld46r9iqq497mspkgbr4x9j04qc4ogygpdpo\",\n    \"commonType\" : \"q0d0k123kv22vjbeeqkkxl8w1mgva3fk4xt0kxpgfutousr5wcg7lmdyl0vn6guc41aopr989txfnp95ijvt5ya5qky3n9g5xskdpmbsdwad801m4ndahylej38ns7fe8efguzpfwrutwtg01webd4c9orm4nob5gn7nmh56deo\"\n  }, {\n    \"score\" : 23.239206602803907,\n    \"commonTypeAlt\" : \"ndbwn64kdcsibsavdc5c5xsw5lg7r1vvg10v2rpi3ao361z7906navup8itaxp9ydycwes0cve7ikpq1sn4i2f\",\n    \"name\" : \"Mr. Dyan Kshlerin\",\n    \"id\" : \"8325\",\n    \"script\" : \"hjf3o1uxj7meetem80wlmmecg2yo18peqjrli\",\n    \"commonType\" : \"1zzfjupmd4ga6tcuqf4v9j8rd94rmfx36tm0oifh\"\n  }, {\n    \"score\" : 80.2234802728337,\n    \"commonTypeAlt\" : \"8zhy0iu307cwy65ksmfslykw7bv5f4184pigpeg3j0fv9yaw81hq9awwdmx5jkn0qc7874v513u9shy3bka1w2ke32iymam3cgsasj\",\n    \"name\" : \"Miss Franklyn Quigley\",\n    \"id\" : \"kfyd\",\n    \"script\" : \"ia6iiy8l056pzh7dnwcxqwr9d8ngearqim\",\n    \"commonType\" : \"fm5t842woz8dzlfcmcrxwox2icyp50l59rlihw99y8lu9j2h6np8z6a768w1b1hjulfrmh9bfo5ut8ksualhtgufdk4d2r9oi5h255n\"\n  }, {\n    \"score\" : 81.85909041978474,\n    \"commonTypeAlt\" : \"4yww1wrxnhmrsqwf7xla80jgtterwzwz6jtyl659mati51lkqtflua8f3qcvpifgij9ndwrws0czrgz6t66wa5w7ux4r6fm6hav56x5xhlmg44nms4tjxaabm\",\n    \"name\" : \"Francis Nolan\",\n    \"id\" : \"877j\",\n    \"script\" : \"1ibp0i9a8vwqgb8s05mxtdn6v6v0vum3cy3ostm6l0c7\",\n    \"commonType\" : \"xsxmnd8m7aqgh9emg6gicpn918rchebu62o01bg80afj96gxwpwwtv7d0cnk4nrcui2mgbxrs43grasj5v482te9ottw3q\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5adbb9b5-8b1f-41e9-95fd-44fb60188094",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.324668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6b68cc9c-d9e1-43ba-9cd4-a5044a3d62ad",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/gca6trjlixdykxe49s5csnimemsd0gyigcfkvw3c98iodzn68fri9j560mbmoevtf3f7tvunw7rcublembqo5621el77ol3rn56znfejle1c1rg25861rhhjayjdvye33v/v89e0t34wopzfd5zt703sst0tck5a8p54blk9ikxteidka5mg9tej57rjqzceuger9eywacy24c7lb5tn7ovi8rjnghyn",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6b68cc9c-d9e1-43ba-9cd4-a5044a3d62ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.323514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    }
  }, {
    "id" : "6350d563-663f-42a6-9c37-2d69cfbf27c8",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/2gjs43wuq3glx0g/7s0c1qk24jibdjf1c9ca8on5uq1g8ccnxx77dtu4c688c2yhftv6mybflwxwg64vvo6u22gf7w2sm0h2r0aabbhwt33wgpl7bwrqkd8vq58lt9tz4mzob5kk3myrcdzgiavfnyy8wv3cflopy8g9aq243q0n8yc571mp85l769dcfluukqm99kbjde3e",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6350d563-663f-42a6-9c37-2d69cfbf27c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.323473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    }
  }, {
    "id" : "e1209930-6943-493e-a658-40882511550d",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/xxztu38e7ujd9gramt2pb4t3iva69unssa3312zx3bnzsiqw9focoe4jg1bly4cgbh9sjgjvojyw71rzhw3fahxl1glt4k6aahdkydvpuusx2y2estq45ohkxv0ck0q/rzs2mciuugf3f099ytglxdust21cb9ishiy3kcttsng2si68clas9slcmev8ekxzn41dvjlrqkvr64izarjhvn7hmdkjgtr",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 69.86329378359673,\n  \"commonTypeAlt\" : \"mnlijnej6unyc3t20u6b5iiv3ta71y4t2iyvx5i94hrd6ug4p0tq4uar48bkmfdpppxpa770u1rebhjfjwgjyrohzdl1vi9ljjtj05owk48j6egh2ibndagn5s4luk8tg9ft834gik9zt7ypv0xib37s21jlup6h2tfl2khm98\",\n  \"name\" : \"Mao Jacobi\",\n  \"id\" : \"380o\",\n  \"script\" : \"1yklpyoch4tzfa13rp34jrizr9u3a7a657h48fvv6a1y8p9nzcyh9ofrv22vdunji1z22dcp56fg26hv6v2x9ts4rbd9722fklw3cpnm7xgayywvpc5rqqqmw0j8onet42sqy3k6kqzv29qonpl5pakply74w\",\n  \"commonType\" : \"iw7m6v4g9v2wf710nzsg0rjii0buwn5m2yjfsesn3rj4ajwj7hbed2242k9fijlop1yziuaq9vkf5k2af2ceq4c90uy6pzharch3buy9n96ba0ebg0h6ncjnbc6od2fapfrmp7gny7ko5suk78p0bvlz9wncdlph5uwcl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1209930-6943-493e-a658-40882511550d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.323421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a984edc7-aa1a-4698-9237-b6b748b456c1",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a984edc7-aa1a-4698-9237-b6b748b456c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.323171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "5f91b10b-1bcf-4cb7-8689-6c5eceb8fabc",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5f91b10b-1bcf-4cb7-8689-6c5eceb8fabc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.323154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "77fb8b1c-587f-416c-ae7a-a068f33bf8e4",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "77fb8b1c-587f-416c-ae7a-a068f33bf8e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.323137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "03b5012b-e46a-4baa-b0af-f7e95d2fbed1",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 13.213032799327983,\n    \"commonTypeAlt\" : \"f5yh9moghflfpsh0irhnq8sz512za4soqfrg3govrb5m7q13b063sxkz56r5l4qa9oyuqi1cp20hzltkdlfgpis5kopl\",\n    \"name\" : \"Isabelle Cummings IV\",\n    \"id\" : \"4i4h\",\n    \"script\" : \"zobu71g5t5au32\",\n    \"commonType\" : \"kb2z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03b5012b-e46a-4baa-b0af-f7e95d2fbed1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.32311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "434c59e0-4622-4c70-9c34-9e715f9827a4",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameType/040kdkwipa03vyvro185kx3j2gyrxm9uoucpgz6kvhxr5ckwc3e9werocyaw5p9sg3x0kr102w969pkr2j7moyz4d9fjd42m9enzh8iu7u8iyroha78779rwm34op4xxas7pu7xtcjt5h4mx1k564sjniuerov44z519ciz5rh1oaz8s",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "434c59e0-4622-4c70-9c34-9e715f9827a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.322885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    }
  }, {
    "id" : "82978c1d-11a5-4b07-b1b6-bdacaeacde52",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameType/lp219hokr15iiw987ze13bbvz52w2xaps4gl2hcvmx5lh2l1gsq2ctj8e1vxnmgsehb5s0dfxxfmalv05napdkxcb2gqapyoka5hdkd8lxw4ax514bu7qphryylb5jnr16f6zjqq5mzf9y1zwotwr7b1cobupcfy19or4y7hanps3c7wuu8b888igpi2a",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "82978c1d-11a5-4b07-b1b6-bdacaeacde52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.322853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    }
  }, {
    "id" : "08fbf279-0f8c-4e33-b420-f7aa7baf10fa",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameType/ls2io237j8tz6fnu26ilgyfagfpu72d93j54my70rdojp1f9o2s",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 86.85224051057195,\n  \"commonTypeAlt\" : \"9xz615lkuz4i473w7d9brefevj942s1vpxv7bl4uaow0orq0s02ecnbjl\",\n  \"name\" : \"Juanita Bechtelar\",\n  \"id\" : \"5h62\",\n  \"script\" : \"fmj4e7d116mu\",\n  \"commonType\" : \"lvtp2dcajrdecktf25p9mt8cu388h12ka0wczpicsyl6f6znn9gng960i3diyi9p3r0i3yxn9g33faoq8axz7lvk85oq9g4fme00m9w0xv18rauw2f4owwerc1ih3eyxsk7yd58cqi01bk9lt257innje7oiv5ktx1b6zj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08fbf279-0f8c-4e33-b420-f7aa7baf10fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.322809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "4a9a5d77-2aa7-4282-b9b1-f2bb2e31c770",
    "name" : "Activate/deactivate learning from a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/learnable/iwrhbj0smf4rwu6bsrza3ebcvd7vgyzsrmr5l4sfcoglhs2bix11az5cou5gdxb5fx18i3/true/gadtb77euav5yi63rlg0vrnq5ojeff9pjop49if44cqpsjaej2j3gpfjfiypwpaxcsp3e43h849z9c0tnxswu0xhbovvnqi0ows8ee7uwlpnaljxovyx",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4a9a5d77-2aa7-4282-b9b1-f2bb2e31c770",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.322538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    }
  }, {
    "id" : "48386262-4ee8-42de-9b86-0133bb6f04b3",
    "name" : "Activate/deactivate learning from a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/learnable/ksr4j2fcq5be22zv8tl1n3n4u41l8enr1578bs40t12tpo8n90s1lvbmrwatbaxym735vcv9p8ujh5pefmmzf3ey3zro4o1drajh9h97qpwdvs13zju4ubbyuunv2ycs0e8qm4xdlo35umq9uj9maq9ccuet600y53e4dg908xre4uvt3yqb6gg5ipl23jel2hjpf6/true/v7uri0d0m135u246ihfozaagyzpgl5g5za8vb0d0tou35dphsw3n5v8c968j0ti0l9ub00z1i4e45wyjn89uq6nc6f2ub9nppohhqcoc7sv2nlzv96pz5c7nrrk1lcxynj7rj8ftmh",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"62xlluyg43hdzq7gtzce04de0b1zftpdvjgfrj02vvml2ir9awzzzd68htikwvosqs8j0\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : false,\n  \"admin\" : false,\n  \"disabled\" : false,\n  \"userId\" : \"8kwm\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48386262-4ee8-42de-9b86-0133bb6f04b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.322484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "40d5a234-37a6-43a8-b27c-7906ee40fe33",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/xti6wlsn7giq7yrsseiu4orssexdcx45qs037n5ymptqykodfyf08q9cs/zi930qpbosghtapny5uif5tronhcljs5/Mr.+June+Klein",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "40d5a234-37a6-43a8-b27c-7906ee40fe33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.322194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "f8db537b-a9fb-4525-9c60-34d5c46f2ba8",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/y4jcj21c9269t2gply5c9mvdh53eczvpn8i2foyhh7ig0b6498bxi0sop8in0vpx3msn2ksfd1izi3ea9szogzjfyth3n8j2x87kgia7lvnj9dnfmpx43/57j18qx1momdz2u23910vfu191kp77r8p10t057h7gifqpi7bynpchx92umyrchk0t4bf02/Katharina+Blick",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f8db537b-a9fb-4525-9c60-34d5c46f2ba8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.322118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "0adec16b-2bba-48ac-8531-0664ad8e3757",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/ajxfm3ubgef036md7fagogvbvgk/rpeq5k50qxrnggxkn87fskyurka9aec6medffkmuuh8bv1exd3bnsy6t2hs8fzrq4t1fkx9e8bkh0v9tvmlw22p4am6dyqj8sp37flyxyku7i5ikh/Robbie+Stehr",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedbackCredits\" : 1212330137303919940\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0adec16b-2bba-48ac-8531-0664ad8e3757",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.322029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop",
          "schema" : {
            "properties" : {
              "feedbackCredits" : {
                "description" : "Number of units recredited as per feedback loop successful classification",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FeedbackLoopOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "f51d2c2f-2afd-4c7a-8740-4ec87fe55619",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f51d2c2f-2afd-4c7a-8740-4ec87fe55619",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.3219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "7bd5f628-6760-49e4-9880-a7bde7227c33",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7bd5f628-6760-49e4-9880-a7bde7227c33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.321883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "079670f0-c83c-42f0-a196-b92192353444",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "079670f0-c83c-42f0-a196-b92192353444",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.321865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "044e76a2-336d-4dea-9b30-79d7d57a7723",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.7635917059429998E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"f5t8\",\n    \"script\" : \"7997impdr8ydw4j0occmv1xmaac13arglfxb6rg1i0cdo7xacsnkjq37kjtysbkx4f7w4o2crq6nfvekbcdpjwd2pnrzxju6k7riehac62i0zzacgfg92cgf2wup2imhcpxua9df2sdbu4zcx9y98xsunpaioj04e0df7dqiotrtzi6m\"\n  }, {\n    \"score\" : 1.015888946006333E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"2rkr\",\n    \"script\" : \"dlr300v4tp8uruwul9bfxe4mo17srcb7kdtz2mdq6ii4b0upfez9hn1tef4w3d6w40bkgfhbiijrol613cohztligfv2msh5dewo\"\n  }, {\n    \"score\" : 2.803903157577975E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"981s\",\n    \"script\" : \"qn3vrtmqjjjkom75q72vjdv13u9hf76g21eubvfybu09m3hy5tynf74jg61js47jx8pipit3ywy4fiexgj05v1dszfw467griymvobldxofg7llqcg2d2zd4fgx1cay3i46ponq5078bsbfq55hd8locy9b2i7wz0d2j14li\"\n  }, {\n    \"score\" : 5.312883712499728E307,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"7vkx\",\n    \"script\" : \"8yqpp0kgkn9virnxobmf2d9o\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "044e76a2-336d-4dea-9b30-79d7d57a7723",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.321837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0d089b5d-f303-4303-93fc-a1bd41ae6ce8",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/jumg361ij5o62613m5rp6130p95xj95xj678lr3z6l9t0e18wiq4crb7yi3vcrat0t168khrco57lnem2oubwjx6n1miwgidgw66wo4a9w516pyr8cxaokuitqb/edrqsyy2e2pq66p1uxpxrkuk3yc8388mkicwot9b3tk0fgx56m8dngxoh0vokbughm3b53kqq8tkfmtfqkn7zuynlt3o5h6i6mji9usew391mdnboq/Rodolfo+Schroeder",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0d089b5d-f303-4303-93fc-a1bd41ae6ce8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.32136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    }
  }, {
    "id" : "3536f6e9-7952-4f65-a21e-e8b226a65bc7",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/bw55wvq40kz8kq4my84taztsz631rs51hj3j5o38b8wkaux7gun6uuuims90/1fxr52ilp1r6c0qlb81yyxie4zeuus5irwchbnr9mwa80kriorbrmufy695fr4wysds1uqgwjaz5n/Aubrey+Borer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3536f6e9-7952-4f65-a21e-e8b226a65bc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.32128Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    }
  }, {
    "id" : "cf8fd780-9792-4307-9ac8-dd4499fc7dd7",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/ombckzp29b4s51slog565qj6hfhcif3r1cotg76fe8/lcs1tzlhthimj8qzoc4mne117o38zksqkevyd/Miss+Dorsey+Hahn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 4.675343675071657E307,\n  \"matchStatus\" : \"Mismatch\",\n  \"id\" : \"wtgb\",\n  \"script\" : \"6kt9yjrxpe05\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf8fd780-9792-4307-9ac8-dd4499fc7dd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.321185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c206dda1-e468-43fd-9e24-1b25641c706e",
    "name" : "Romanize japanese names, based on the name in KANJI - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c206dda1-e468-43fd-9e24-1b25641c706e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.320915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "ed0ab51a-bc77-4517-afc3-6cea04f521dd",
    "name" : "Romanize japanese names, based on the name in KANJI - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ed0ab51a-bc77-4517-afc3-6cea04f521dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.320898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "ab7bd6ea-4f28-4d73-838e-c05bebccb61a",
    "name" : "Romanize japanese names, based on the name in KANJI - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ab7bd6ea-4f28-4d73-838e-c05bebccb61a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.32088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "0108eb9e-e7bd-47cb-870c-2730e8e165ab",
    "name" : "Romanize japanese names, based on the name in KANJI (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Nathanial\",\n    \"lastName\" : \"Walsh\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.9051244789611334E307,\n      \"candidateName\" : \"2022-12-15T16:06:44.318067Z\",\n      \"probability\" : 1.4676345389203386E308,\n      \"predScoreFamilyName\" : 1.2516721277491563E308\n    }, {\n      \"predScoreGivenName\" : 3.495084518263956E307,\n      \"candidateName\" : \"2023-02-23T16:48:44.318114Z\",\n      \"probability\" : 1.347334827954977E308,\n      \"predScoreFamilyName\" : 1.5489531850649519E307\n    }, {\n      \"predScoreGivenName\" : 5.0156780640341783E306,\n      \"candidateName\" : \"2022-05-27T15:05:44.318164Z\",\n      \"probability\" : 2.4159347035377095E307,\n      \"predScoreFamilyName\" : 7.872538805723567E306\n    }, {\n      \"predScoreGivenName\" : 1.5092446870559487E308,\n      \"candidateName\" : \"2022-05-26T15:10:44.318208Z\",\n      \"probability\" : 4.987773730500683E307,\n      \"predScoreFamilyName\" : 1.355830208319588E308\n    }, {\n      \"predScoreGivenName\" : 1.3964655114833022E308,\n      \"candidateName\" : \"2022-06-24T17:26:44.318254Z\",\n      \"probability\" : 6.493884340397801E307,\n      \"predScoreFamilyName\" : 2.4760776040095265E306\n    } ],\n    \"orderOption\" : \"e1tzn79877sz1p1\",\n    \"id\" : \"t97a\",\n    \"script\" : \"z65b6kjpt00vnzf3bycppfdhejlcwiv9lpchz040x7fvuidn5edkgocfd5o6y0ct4ucu5wpij8swtn2jdz94084qj589vwzvn0cm58pc74bgc4pkdp8wlllv53bb5nx7ft6c4wlk0qwzkrrtq6huo4wk\"\n  }, {\n    \"firstName\" : \"Mitch\",\n    \"lastName\" : \"Bartell\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.441719302830117E307,\n      \"candidateName\" : \"2022-11-14T17:31:44.318451Z\",\n      \"probability\" : 2.398655181866248E307,\n      \"predScoreFamilyName\" : 2.6941392991120294E306\n    } ],\n    \"orderOption\" : \"8fdn4jg0432cf06ma7xzwdg1qu14cd982wbjxbizmgd3564gcu\",\n    \"id\" : \"39kh\",\n    \"script\" : \"pgoar8eycoi9hk68ehs34tqi7ujx55bpf8qvmix0qq4lp0kqkjl406wq3igtcgb5h1w2s23k6a8tonmxookk0ajt2vsnx8cdbrqgkrgsu8ab44nq9ciqexzc9f82n4bsl2pzjlnd4ctni8hhpgv2wofwywrvn80v8qox9uuzm61vdiu1cmu9evh4j4ag5hryzf\"\n  }, {\n    \"firstName\" : \"Melody\",\n    \"lastName\" : \"Cummerata\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.863009789918189E307,\n      \"candidateName\" : \"2022-07-13T15:05:44.318645Z\",\n      \"probability\" : 1.0824870920755078E308,\n      \"predScoreFamilyName\" : 7.832131366770685E306\n    }, {\n      \"predScoreGivenName\" : 8.640625087342283E307,\n      \"candidateName\" : \"2023-02-15T17:13:44.318691Z\",\n      \"probability\" : 1.087555631565919E308,\n      \"predScoreFamilyName\" : 8.312871651832304E307\n    }, {\n      \"predScoreGivenName\" : 1.5841241077903123E307,\n      \"candidateName\" : \"2022-10-13T16:53:44.318739Z\",\n      \"probability\" : 3.912138615975115E307,\n      \"predScoreFamilyName\" : 8.735206459821347E307\n    }, {\n      \"predScoreGivenName\" : 5.700772597389757E307,\n      \"candidateName\" : \"2022-06-02T16:49:44.318784Z\",\n      \"probability\" : 3.5515703576496555E307,\n      \"predScoreFamilyName\" : 9.667062632713303E307\n    }, {\n      \"predScoreGivenName\" : 1.3406396990515487E308,\n      \"candidateName\" : \"2022-09-01T16:28:44.318833Z\",\n      \"probability\" : 2.5357784050669925E307,\n      \"predScoreFamilyName\" : 1.3489460730376679E308\n    }, {\n      \"predScoreGivenName\" : 4.1103430682706885E307,\n      \"candidateName\" : \"2022-08-05T16:09:44.318883Z\",\n      \"probability\" : 1.0981875871418965E308,\n      \"predScoreFamilyName\" : 6.256004146768386E307\n    }, {\n      \"predScoreGivenName\" : 9.614553534297298E307,\n      \"candidateName\" : \"2022-08-25T17:05:44.318932Z\",\n      \"probability\" : 1.6810117570154537E308,\n      \"predScoreFamilyName\" : 7.005265413165838E306\n    }, {\n      \"predScoreGivenName\" : 2.082077046444059E307,\n      \"candidateName\" : \"2022-12-26T16:12:44.318978Z\",\n      \"probability\" : 8.62168007565009E306,\n      \"predScoreFamilyName\" : 2.2148560691689545E307\n    } ],\n    \"orderOption\" : \"sw5cb83qvi6zocvp8pmr6r49v\",\n    \"id\" : \"2k01\",\n    \"script\" : \"poaxtxc0i3pev9gjc7x28vhbeypyu3e895z1t7clthut4vfps1cjp62jnlmaabl2qw9w0t61pnhvtdfrew113fc80\"\n  }, {\n    \"firstName\" : \"Sherman\",\n    \"lastName\" : \"Jerde\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.789759546283845E307,\n      \"candidateName\" : \"2022-10-22T17:55:44.319178Z\",\n      \"probability\" : 1.1754615777917424E308,\n      \"predScoreFamilyName\" : 8.702815896612826E307\n    }, {\n      \"predScoreGivenName\" : 1.7261957728256868E308,\n      \"candidateName\" : \"2022-03-30T16:13:44.319223Z\",\n      \"probability\" : 1.0080481165904698E308,\n      \"predScoreFamilyName\" : 5.752511602302835E307\n    }, {\n      \"predScoreGivenName\" : 1.257100749712575E308,\n      \"candidateName\" : \"2022-06-24T17:38:44.319274Z\",\n      \"probability\" : 9.716697966429237E307,\n      \"predScoreFamilyName\" : 7.193316360657981E307\n    }, {\n      \"predScoreGivenName\" : 9.9587568893714E307,\n      \"candidateName\" : \"2022-12-21T15:32:44.319321Z\",\n      \"probability\" : 2.507809274591618E307,\n      \"predScoreFamilyName\" : 8.163496788810372E307\n    }, {\n      \"predScoreGivenName\" : 1.3384220771176071E308,\n      \"candidateName\" : \"2022-07-27T17:32:44.319368Z\",\n      \"probability\" : 1.290856985652557E308,\n      \"predScoreFamilyName\" : 1.1736791542096889E308\n    }, {\n      \"predScoreGivenName\" : 1.4931746431549809E308,\n      \"candidateName\" : \"2022-05-21T16:00:44.319417Z\",\n      \"probability\" : 5.281995562801281E307,\n      \"predScoreFamilyName\" : 3.1787265047491085E307\n    }, {\n      \"predScoreGivenName\" : 7.103138477871992E307,\n      \"candidateName\" : \"2022-10-12T15:23:44.31947Z\",\n      \"probability\" : 4.673610375404631E307,\n      \"predScoreFamilyName\" : 5.721486866568949E307\n    }, {\n      \"predScoreGivenName\" : 1.3155661112753125E308,\n      \"candidateName\" : \"2022-09-13T17:31:44.319528Z\",\n      \"probability\" : 1.5019720091684355E308,\n      \"predScoreFamilyName\" : 1.6912992769978745E307\n    } ],\n    \"orderOption\" : \"otsn4wnhgff0vfwy3rkgdh2kh38g26dt7fyq82pj88omjtkpxga6ijnlei880z5l2oswrubgtrulgjajpalu8prysoofcx1if4iqx75q210c5itc9tvjgn1nvo7restsvoo8r2c66bcv6hmoauueksa71ek2vjsz262l0nw5iihjfisj7owee9a0tq9smwbrzso5gtc\",\n    \"id\" : \"e06e\",\n    \"script\" : \"14yl4zkztn5aoldgvwoi9sxdizgdyl3enmihp2btpwljmglfp4w00qkkukhuat4txsrqfjoli2gh9m1qctzhmo4fs5y6pei52j9n\"\n  }, {\n    \"firstName\" : \"Walton\",\n    \"lastName\" : \"Larkin\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.907098521673855E306,\n      \"candidateName\" : \"2023-02-09T15:10:44.319741Z\",\n      \"probability\" : 1.3745994602395074E308,\n      \"predScoreFamilyName\" : 1.2619261285640523E308\n    }, {\n      \"predScoreGivenName\" : 1.264199923642408E308,\n      \"candidateName\" : \"2022-07-06T15:33:44.319788Z\",\n      \"probability\" : 7.466247105423569E307,\n      \"predScoreFamilyName\" : 9.330556909382102E306\n    }, {\n      \"predScoreGivenName\" : 1.1566526500942598E308,\n      \"candidateName\" : \"2022-09-24T15:19:44.319835Z\",\n      \"probability\" : 1.6281222187920254E307,\n      \"predScoreFamilyName\" : 9.839519542941213E307\n    }, {\n      \"predScoreGivenName\" : 1.7583781128897205E308,\n      \"candidateName\" : \"2022-05-24T16:24:44.319881Z\",\n      \"probability\" : 8.053976563850632E307,\n      \"predScoreFamilyName\" : 6.612747284170142E307\n    } ],\n    \"orderOption\" : \"9fwm8h3h1dm6gwxq5x0aq4ftbta80uqn5wjsk96edo8lyg6kz2pskexjiv25wwupef\",\n    \"id\" : \"4aj9\",\n    \"script\" : \"gva5dc8i7qbtigcrcvvfm4jn7iospzzrphpyvkvsmpqcq2o977t3r1ptdpqdtyyog4cj8d03la2kutzinzyhh1m7xdtgm3umdt9r3p39itd469lnnazcv2v6hxlqlrniggvr1hrpmnuh16piqlsl2a4kaygfeiwb17mqektjdsdqs8kh2rfs9b\"\n  }, {\n    \"firstName\" : \"Sparkle\",\n    \"lastName\" : \"Nienow\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.3800556163067355E307,\n      \"candidateName\" : \"2022-06-12T14:24:44.320072Z\",\n      \"probability\" : 1.6176180001060554E307,\n      \"predScoreFamilyName\" : 2.0236335885999407E307\n    } ],\n    \"orderOption\" : \"gjg8mxudddyc7eptkbxmeatf5s2ldhip11jcmqu4lycimaus2tgjcq1xc584c4i3hvgz6v2us0agb20mg0kg48woovzhvi13ysw7j3g7ah491z1cik99j8lwagkz63co24e6hb6b8atp5o8a11uj05hk0ryjkmb8orfw7q9987xpuelo\",\n    \"id\" : \"4kkm\",\n    \"script\" : \"hreinoixuntu6lrql8rjufydbkb1dx1xya7olutg5499grpsa7dxmvprq8kfumokc6uezt32eo0mllrut2q65tqq54a90atzbkff7arccquy80spsjor3w6wgx\"\n  }, {\n    \"firstName\" : \"Georgette\",\n    \"lastName\" : \"Robel\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.685963636847257E307,\n      \"candidateName\" : \"2022-10-01T15:34:44.32027Z\",\n      \"probability\" : 1.7760819062879364E308,\n      \"predScoreFamilyName\" : 1.0917343888550234E308\n    }, {\n      \"predScoreGivenName\" : 1.4361944805932356E307,\n      \"candidateName\" : \"2022-04-24T14:23:44.32032Z\",\n      \"probability\" : 1.2384817416920557E307,\n      \"predScoreFamilyName\" : 1.7636123625263618E308\n    }, {\n      \"predScoreGivenName\" : 1.6244267906705596E308,\n      \"candidateName\" : \"2023-01-12T16:02:44.320365Z\",\n      \"probability\" : 1.2405966656518813E308,\n      \"predScoreFamilyName\" : 1.5259340059328675E308\n    }, {\n      \"predScoreGivenName\" : 1.224715300650568E308,\n      \"candidateName\" : \"2022-05-06T16:21:44.320414Z\",\n      \"probability\" : 1.532399598043244E308,\n      \"predScoreFamilyName\" : 9.156257117622649E307\n    }, {\n      \"predScoreGivenName\" : 1.293126943776415E308,\n      \"candidateName\" : \"2022-10-22T17:31:44.32046Z\",\n      \"probability\" : 9.345750078543215E307,\n      \"predScoreFamilyName\" : 9.014442711353503E307\n    }, {\n      \"predScoreGivenName\" : 6.745262637980479E307,\n      \"candidateName\" : \"2022-08-22T16:27:44.320507Z\",\n      \"probability\" : 1.3222689880880277E308,\n      \"predScoreFamilyName\" : 4.4349459933130394E307\n    }, {\n      \"predScoreGivenName\" : 1.3263628580359736E308,\n      \"candidateName\" : \"2023-01-02T16:39:44.320553Z\",\n      \"probability\" : 8.869006089515533E307,\n      \"predScoreFamilyName\" : 9.5055115810842E307\n    } ],\n    \"orderOption\" : \"b66jb2d6e12qjeaj4vthwfko8dvqrhv025sivt9sx11i56u2tpt1j0g06aovgpgdvybl9ui0r5lse1cum80995cel91fi3lkdz\",\n    \"id\" : \"epz3\",\n    \"script\" : \"rdmho22cbmg11mzrp2qmqxe9vt66rskuud18wp0zld7v1g7ajb8sthisn66zpssqbgupwvm0q5e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0108eb9e-e7bd-47cb-870c-2730e8e165ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.320844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "37f5d2fe-66a7-46c7-9881-e23e62c10cfb",
    "name" : "Romanize japanese name, based on the name in Kanji. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/9t2juhhky5rscw6ohz24hcfz5pj050qytk/790gnd77xr4zbl4k97y0l4zrlfp851hji76rspgoyytxi4z8rlzqokye8l3mjco9ptzqxitt265kt9k9mhk2ljfnxcqndkju7w5gicz7g4wgqwm3wv0ww9qq96dvizdvyw5u4bxp0nh9bl1vd15r9jg433yutr7zfoywu3j7w4mn6w20illl8nsstdnn4qcyyki24tue",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "37f5d2fe-66a7-46c7-9881-e23e62c10cfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.317966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    }
  }, {
    "id" : "298f354f-c7a1-42a3-ba31-d69c0c79ae9d",
    "name" : "Romanize japanese name, based on the name in Kanji. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/t18b2l2v221x31wim5p9y374yvflqetqclg21wusqs96cq8z8wmasjinc5ulwia2gdemqzoqn61mhlu75anrybjmylwtx9abrxzca3bz6ylciaaed28bdt467e76ntzhn1a4pkvi/0jybhlmkpp3yfxakt3bu4e6byzz3nmt47z6rvgurgp8tzv2acqs6sxs9l4el0a0kmh5c5saikjnvei8xgk7mtrxyq954rpmghdeck4k9sp34j6sahahd5y5panskmc1",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "298f354f-c7a1-42a3-ba31-d69c0c79ae9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.317923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    }
  }, {
    "id" : "1cd63946-c4d9-4d95-bdb6-786fcb01653a",
    "name" : "Romanize japanese name, based on the name in Kanji. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/p717lwoo9vreqjguglks61iu1kdstm7846a90u790uxrrmko8ks9y12bcwlfqs5lsatynasllscbo4uppnpfsphgdzoh9bdsls9998fwdnvaflon0p0p8txqlwxzgiipw60jfn5izp05icxwfiw3aldpi0ls9v0gofzjek43cl90vy9ilyr6/4vo9poya4o9l12x7e8co506zxc3zn4r08x8358bscwdaftk2qufqxg2140fb8fbmfgm9f7by32yvzpr2bosxpk3lwefu47ykvycqph6ca4ldd0ijp6g97wpm6d3wlyad722r1q0vjm2jp",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Shery\",\n  \"lastName\" : \"Howell\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 4.1207456068091727E307,\n    \"candidateName\" : \"2022-12-06T16:00:44.317298Z\",\n    \"probability\" : 2.169246221532015E306,\n    \"predScoreFamilyName\" : 1.3889269326343127E307\n  }, {\n    \"predScoreGivenName\" : 1.1207307205723237E308,\n    \"candidateName\" : \"2022-09-10T15:57:44.317345Z\",\n    \"probability\" : 3.385137925128133E307,\n    \"predScoreFamilyName\" : 1.0213905522607436E308\n  }, {\n    \"predScoreGivenName\" : 9.509436328964402E307,\n    \"candidateName\" : \"2022-03-16T16:42:44.317391Z\",\n    \"probability\" : 8.544889367931845E307,\n    \"predScoreFamilyName\" : 4.518582868687855E307\n  }, {\n    \"predScoreGivenName\" : 1.4260143730039767E308,\n    \"candidateName\" : \"2022-09-30T17:49:44.317437Z\",\n    \"probability\" : 1.5489813338682879E308,\n    \"predScoreFamilyName\" : 8.81344794125497E307\n  }, {\n    \"predScoreGivenName\" : 1.289063605112779E308,\n    \"candidateName\" : \"2022-12-03T17:18:44.317486Z\",\n    \"probability\" : 8.680240509771249E307,\n    \"predScoreFamilyName\" : 1.3152591622320439E308\n  }, {\n    \"predScoreGivenName\" : 1.3797259164121493E308,\n    \"candidateName\" : \"2022-07-13T17:50:44.31753Z\",\n    \"probability\" : 1.3848075753804115E308,\n    \"predScoreFamilyName\" : 1.4405418730378168E308\n  }, {\n    \"predScoreGivenName\" : 1.9577300216897872E307,\n    \"candidateName\" : \"2022-08-30T15:02:44.317577Z\",\n    \"probability\" : 4.273596969855463E307,\n    \"predScoreFamilyName\" : 5.265499262977436E307\n  }, {\n    \"predScoreGivenName\" : 1.0100545041358273E308,\n    \"candidateName\" : \"2022-12-02T16:06:44.317625Z\",\n    \"probability\" : 1.9140798617858037E307,\n    \"predScoreFamilyName\" : 8.280140942410244E307\n  } ],\n  \"orderOption\" : \"ccp8d5e4bfg2eg8znhkk1c6wb4day898cft2c457pa8ztzgy6b7wss2qmcqwv0ith8wtobspehuq74wg1oc66fxw9qu9ryvbynfn1z327ude3lamdi2zjoi8jsspwof6owm2wjy9rzwfeha8t76pv8l3kkh49x6beagljfuy0uwpe\",\n  \"id\" : \"p6x9\",\n  \"script\" : \"vg7o73f0i8fevqcnyex3evf6bkl0k2ekte0ikxi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cd63946-c4d9-4d95-bdb6-786fcb01653a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.317869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9b8996a1-5aec-47fe-a60b-afae07abce8e",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9b8996a1-5aec-47fe-a60b-afae07abce8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.317206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "4352a93a-8c35-44a9-9b99-0a64feed076f",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4352a93a-8c35-44a9-9b99-0a64feed076f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.317171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "75bb90be-f4be-4500-8c95-3da15143f5d5",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "75bb90be-f4be-4500-8c95-3da15143f5d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.317153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "9f8acfd5-f7b4-44e3-a073-e90f6acce0d5",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Vergie\",\n    \"lastName\" : \"Stroman\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.947258861298451E307,\n      \"candidateName\" : \"2022-05-18T15:43:44.316337Z\",\n      \"probability\" : 4.4507406960046907E307,\n      \"predScoreFamilyName\" : 1.2265585030073819E308\n    }, {\n      \"predScoreGivenName\" : 4.4305199539716535E305,\n      \"candidateName\" : \"2022-04-01T14:30:44.316384Z\",\n      \"probability\" : 1.1732922667027422E308,\n      \"predScoreFamilyName\" : 1.4766274237098774E308\n    }, {\n      \"predScoreGivenName\" : 7.970778823291647E307,\n      \"candidateName\" : \"2022-11-22T15:40:44.316431Z\",\n      \"probability\" : 6.705414233556123E307,\n      \"predScoreFamilyName\" : 1.0593724583915154E308\n    }, {\n      \"predScoreGivenName\" : 4.4854309932370533E307,\n      \"candidateName\" : \"2022-12-25T17:06:44.316476Z\",\n      \"probability\" : 1.7420059133003625E308,\n      \"predScoreFamilyName\" : 7.500774785516013E307\n    }, {\n      \"predScoreGivenName\" : 2.772127843634357E307,\n      \"candidateName\" : \"2023-01-28T16:00:44.316523Z\",\n      \"probability\" : 5.699561815534817E307,\n      \"predScoreFamilyName\" : 1.5839457635207788E306\n    }, {\n      \"predScoreGivenName\" : 1.3055548529103098E308,\n      \"candidateName\" : \"2022-04-07T14:33:44.316568Z\",\n      \"probability\" : 1.048268995795949E308,\n      \"predScoreFamilyName\" : 1.5428199156459455E308\n    } ],\n    \"orderOption\" : \"gpwoploe8u86o36hqmsmy1jzlxm05s5azedpwxjqjykcos7lhkjmqql17cujz6dmyefkzl0ziyftdfgouz5u6r7adtis9nnfxxbvfn8t7\",\n    \"id\" : \"xli8\",\n    \"script\" : \"ys5cxuqrxlduovr767tv4he77wo1enpetxic27vvas6wge755kp1wo7tauywi2ig3b3eed9szuhlhhx9ygcn6l3a74nw5v620v9t7ngh1jy9r6dqg1epqkapqscp7g2sc4sqncsvzqkky4ntk9qfr\"\n  }, {\n    \"firstName\" : \"Sommer\",\n    \"lastName\" : \"Tromp\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.240102334809047E307,\n      \"candidateName\" : \"2022-09-07T15:41:44.316782Z\",\n      \"probability\" : 1.3945933340603937E308,\n      \"predScoreFamilyName\" : 1.940756117305906E306\n    }, {\n      \"predScoreGivenName\" : 7.598420677981578E307,\n      \"candidateName\" : \"2022-05-16T16:40:44.316829Z\",\n      \"probability\" : 1.1689001537991385E307,\n      \"predScoreFamilyName\" : 1.4539597869334058E306\n    }, {\n      \"predScoreGivenName\" : 4.235552774550696E307,\n      \"candidateName\" : \"2023-01-10T14:13:44.316877Z\",\n      \"probability\" : 7.886245301221977E306,\n      \"predScoreFamilyName\" : 9.507054472970434E307\n    }, {\n      \"predScoreGivenName\" : 1.1987620747952375E308,\n      \"candidateName\" : \"2022-11-13T16:04:44.316924Z\",\n      \"probability\" : 8.218038671530134E307,\n      \"predScoreFamilyName\" : 1.170831100965496E308\n    } ],\n    \"orderOption\" : \"s9fvrrw5ttjpt79v9rv\",\n    \"id\" : \"vq86\",\n    \"script\" : \"h48sw33c6t2zn10rmlsebcdswcrg3ud08ze7pg0jeqrbvk7ztq9blqbacqwkwyqu03srrhc4bua165v4u20ah4fwsxxsxh7q02uya79xulhkiflc6npzsf67bpg3p3ecl2f\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f8acfd5-f7b4-44e3-a073-e90f6acce0d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.317123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "57ef9d1e-b155-4cbe-9ff2-5e297f56d295",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/ij221r59eyza9l6zkcfqkglbhvmd9sif586z0amf8gy8sa40wcufpwgv0m/jrhbh5bw453hkj23pdhjwwflaqxppwh0aqk/Agender",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "57ef9d1e-b155-4cbe-9ff2-5e297f56d295",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.316226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    }
  }, {
    "id" : "9a42ba9d-a64e-457f-86fa-f24ece70613b",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/nyoi/7cz9yghlu6pbf3m6tbiyp8j5645z81ncs2u84k8on27ws7td6j0zvhy734i9usv6r4um8n0zxwnwojxqvljulfo9k8iwdh63fv3q9odwiz4k6ug57dptzeo2hvxmok9tv63h4t2uc3asjisi14ph/Non-binary",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9a42ba9d-a64e-457f-86fa-f24ece70613b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.316166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    }
  }, {
    "id" : "524ff761-0077-41e1-85de-9e56fb242f59",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/845phxb927jn9nphn0dlr2bp4xdy2lkhxr3izg453qpy5rgaf3ko76gyziic665f6w3ku2282hlchz8mfyumpagb7cq2s6cmxi0nky8w77kvmflkihf3kr98a209dvjttryrl9dfizhmgied0003t9cpm/sx0lv0fv5yvgzzf732advx131p64x3tz1u3xqx4uh0rf1bmbln4m7yaguuxb9ylp/Genderfluid",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Joanie\",\n  \"lastName\" : \"Hane\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 6.805699017338044E307,\n    \"candidateName\" : \"2022-03-30T15:28:44.315754Z\",\n    \"probability\" : 5.559894251900529E305,\n    \"predScoreFamilyName\" : 3.3736594030653113E307\n  }, {\n    \"predScoreGivenName\" : 1.6471425916327451E308,\n    \"candidateName\" : \"2022-06-14T15:04:44.315799Z\",\n    \"probability\" : 9.91068062671154E307,\n    \"predScoreFamilyName\" : 3.456887733848117E307\n  }, {\n    \"predScoreGivenName\" : 9.105264547032139E307,\n    \"candidateName\" : \"2022-09-20T16:43:44.315848Z\",\n    \"probability\" : 1.3877687035548665E308,\n    \"predScoreFamilyName\" : 1.386260782174824E308\n  } ],\n  \"orderOption\" : \"wfodlrfi2sh50twlltljnvebbk2kjm3xddr05lih7z7althikwmnruty0dep0vesms4twd561jtdrvo7pr4qpnj1x57evvakj6v3hhvs5wyu8zufw3ftcb8s11xps\",\n  \"id\" : \"52v8\",\n  \"script\" : \"ju3ykojuq6gtl87b92366vsdggzxba7ene2xe58o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "524ff761-0077-41e1-85de-9e56fb242f59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.316092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1aa66e6e-8f06-457d-92dd-983e4929ad6b",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/m5nvw7p80whnj2kiijeqbeu689mxbf0oj48m2t7y8u633opku947k2soyk/uc111q39yid5t2047msj3nak5914c71n2mdw7yeie91z822cn24moflsqpepamj",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1aa66e6e-8f06-457d-92dd-983e4929ad6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.31566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    }
  }, {
    "id" : "e5b0f390-5f92-4248-a326-25de86c4f986",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/xgy8nmjq8awqoe062qoeqyr6y6l2wowaf0apycy62jtcftx0bc6dfw59ru6r87i3s9bz2oocx64ytlihht7fvatjp9wl0yfm0bx78s2o0n5alcsuc1fe/4ffsjtzr3sp2r4n76iamd5q9t5kufvvpvbk6e15hgkqqa20wqu9exrkca1dw96ixl7vava4vxcl8o4eb3e0l0b82o60brc04i54xqzruiork1fo8pgf7cxbs1e6prd14bn668vyn0kc1l79gln2r0szgd4e28thgb91j3bd8alv07j2hjgg1",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e5b0f390-5f92-4248-a326-25de86c4f986",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.315617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    }
  }, {
    "id" : "eea70f1e-8b15-4ca0-9760-d34d3e2685eb",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/w261wl4y32terfb9gktqtadiv2neje91bnmdx3vgkxcb1ouyzw5p19hofrzqk3dlu0wqc45vyeiva544k8etzu6bownv4unn/dc5snv3xt30aasvr0ohwxt383q6d0qibhdbkhca2pzphue35j0rf58nk1jge9k9cjym7vvc2c6uj7zbi933n20v5ac2egp6fi10493o2u6hg5np4u2cr6ns8h1mvasv425yw32e4hhra41fdutv4fmgbjjk",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Jean\",\n  \"lastName\" : \"Kris\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 5.703407103925544E307,\n    \"candidateName\" : \"2022-09-16T17:26:44.315318Z\",\n    \"probability\" : 3.7819077853643357E307,\n    \"predScoreFamilyName\" : 8.687268533170072E307\n  } ],\n  \"orderOption\" : \"pggw4swafyfz84qrirwifvdiygrnujawtlk4rcuyn9dlo5kpmoi7wr6rbekctbwlyq1gkivsd\",\n  \"id\" : \"4293\",\n  \"script\" : \"3ecoy9ryq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eea70f1e-8b15-4ca0-9760-d34d3e2685eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.31556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6da1cd12-b0f5-4f54-9576-7ebc6aa8c11f",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6da1cd12-b0f5-4f54-9576-7ebc6aa8c11f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.315219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "bd9e4de8-a967-4f0d-aa3d-68a7fc7760f8",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bd9e4de8-a967-4f0d-aa3d-68a7fc7760f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.315201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "5de5aede-941b-4fc0-af87-564f603896cf",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5de5aede-941b-4fc0-af87-564f603896cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.315183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "a6e2d2c5-3ac6-4f2f-b1ef-06740ae234a5",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Alanna\",\n    \"lastName\" : \"Beahan\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0347055203285713E308,\n      \"candidateName\" : \"2022-06-14T17:42:44.311858Z\",\n      \"probability\" : 5.928417086849654E307,\n      \"predScoreFamilyName\" : 3.758986387685828E306\n    }, {\n      \"predScoreGivenName\" : 8.597485882126563E307,\n      \"candidateName\" : \"2022-09-26T14:17:44.311913Z\",\n      \"probability\" : 2.3907390019251693E307,\n      \"predScoreFamilyName\" : 4.2562438879323134E306\n    }, {\n      \"predScoreGivenName\" : 5.816196741757331E307,\n      \"candidateName\" : \"2023-02-27T15:52:44.311961Z\",\n      \"probability\" : 1.1200063411106526E308,\n      \"predScoreFamilyName\" : 1.0918014744272778E307\n    }, {\n      \"predScoreGivenName\" : 6.8689125645015E305,\n      \"candidateName\" : \"2022-10-03T16:13:44.312009Z\",\n      \"probability\" : 8.617747784163692E307,\n      \"predScoreFamilyName\" : 5.866069299283615E307\n    }, {\n      \"predScoreGivenName\" : 2.1591885706239937E307,\n      \"candidateName\" : \"2023-02-04T14:53:44.312056Z\",\n      \"probability\" : 1.4272284160723732E308,\n      \"predScoreFamilyName\" : 1.0713262705984471E308\n    }, {\n      \"predScoreGivenName\" : 4.578260274054193E307,\n      \"candidateName\" : \"2022-07-31T15:00:44.312104Z\",\n      \"probability\" : 1.0940179860227847E307,\n      \"predScoreFamilyName\" : 1.5177020649786965E308\n    } ],\n    \"orderOption\" : \"e01xuy9xo1474n1w0nrdj01rs7puswqil7nwwwtdlvchysnhmsu6d5uum3gqczmrmmncibi8d3bv5imnrb\",\n    \"id\" : \"6332\",\n    \"script\" : \"ig5c3u5o0sk0yf5azwjx4k9j7qk0fwkew27\"\n  }, {\n    \"firstName\" : \"Selina\",\n    \"lastName\" : \"Abshire\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.1032488372454046E307,\n      \"candidateName\" : \"2022-12-08T14:56:44.312322Z\",\n      \"probability\" : 8.89923700153529E307,\n      \"predScoreFamilyName\" : 1.3802618460925233E308\n    }, {\n      \"predScoreGivenName\" : 9.256629369705666E307,\n      \"candidateName\" : \"2022-07-12T14:18:44.31237Z\",\n      \"probability\" : 1.244851808080432E308,\n      \"predScoreFamilyName\" : 1.1773470412491647E308\n    }, {\n      \"predScoreGivenName\" : 2.1201478102772243E306,\n      \"candidateName\" : \"2023-02-25T17:41:44.31242Z\",\n      \"probability\" : 7.822414888433573E307,\n      \"predScoreFamilyName\" : 4.591943338045191E306\n    }, {\n      \"predScoreGivenName\" : 1.0333581984289675E308,\n      \"candidateName\" : \"2022-11-28T17:09:44.312468Z\",\n      \"probability\" : 1.0563400104183046E308,\n      \"predScoreFamilyName\" : 6.463477174555273E307\n    }, {\n      \"predScoreGivenName\" : 1.9806314097455883E307,\n      \"candidateName\" : \"2022-04-19T14:42:44.312517Z\",\n      \"probability\" : 8.436893291387326E307,\n      \"predScoreFamilyName\" : 1.2526312078939438E308\n    }, {\n      \"predScoreGivenName\" : 4.799471974037449E307,\n      \"candidateName\" : \"2022-07-26T18:09:44.312566Z\",\n      \"probability\" : 1.560557259762929E308,\n      \"predScoreFamilyName\" : 1.5688551871345472E308\n    }, {\n      \"predScoreGivenName\" : 7.890240608168747E306,\n      \"candidateName\" : \"2022-07-19T14:19:44.312613Z\",\n      \"probability\" : 1.076769153504144E308,\n      \"predScoreFamilyName\" : 4.3755922250176157E307\n    } ],\n    \"orderOption\" : \"hj8b514qdx10ztg3zrxd3htdfotipq8xn5s9ts98i5egjlzfvheh36ixhnvvpygtop54x7imm5sewmltfns4gs9ze8rwrljtwm38pn4pnr04918zl1dvj5s7scs7l4jw814j4ikgp760jcl086trscpq9qk2thvmf2z\",\n    \"id\" : \"2v24\",\n    \"script\" : \"wt7yxpoo9suh9ogluisuat2z6vl50xkphph5omeifv0s6218mx56m4uuuptaqodnd738onvg5ybbtki1a89ouz2oip1175gn7wez0u8aa34re1waj7wcwzwzx2kaw4lrwblly04wy9vbhut51fdx246hwg\"\n  }, {\n    \"firstName\" : \"Ella\",\n    \"lastName\" : \"Little\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.6613042662168116E308,\n      \"candidateName\" : \"2022-05-22T16:47:44.312823Z\",\n      \"probability\" : 8.421312963731168E306,\n      \"predScoreFamilyName\" : 7.649743318493122E307\n    }, {\n      \"predScoreGivenName\" : 6.637738210022802E307,\n      \"candidateName\" : \"2022-09-09T16:03:44.312872Z\",\n      \"probability\" : 9.829077138042464E307,\n      \"predScoreFamilyName\" : 8.152612238989779E307\n    }, {\n      \"predScoreGivenName\" : 1.778435794198286E308,\n      \"candidateName\" : \"2022-05-29T16:22:44.312919Z\",\n      \"probability\" : 7.646392630851582E307,\n      \"predScoreFamilyName\" : 5.975790066548802E307\n    } ],\n    \"orderOption\" : \"1zumupcbavr2p8bnzjdobi3k250rvzokam1pe8udcedyadb1s9zv2iqlnz3nu9obcg7odqq0c8arbrv6sgvvj38x3zc6ja0mu5p4cnbri7ndp8t7e83y9x6w457xia9s69pvyf6qu99cj6evox5b4l71s4oa8nmpesdzgbnikfbl59dngik29ulx02fm4r9y4t8i\",\n    \"id\" : \"7034\",\n    \"script\" : \"h0a7pjyhrpby4tnlmh3x15zjcb3b57w46eyw1nqn399hlyewnudl2ps6aqllxvi7wiebsfxsbtgi1f7eebos7h1qyf27mik1xl24sx3rh40yw4o3q8mg1rrdpli21qlztyijfri8qrlt7lp4cz9riiq5rt5ispe3eim8gokslpbfwmg8ot\"\n  }, {\n    \"firstName\" : \"Kenya\",\n    \"lastName\" : \"Labadie\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.6097450270163583E308,\n      \"candidateName\" : \"2022-06-14T17:10:44.313123Z\",\n      \"probability\" : 7.59128635727424E307,\n      \"predScoreFamilyName\" : 8.14913495580442E307\n    }, {\n      \"predScoreGivenName\" : 1.304806653109361E308,\n      \"candidateName\" : \"2022-05-22T18:07:44.313171Z\",\n      \"probability\" : 1.57642096386302E308,\n      \"predScoreFamilyName\" : 1.0656834643960698E307\n    }, {\n      \"predScoreGivenName\" : 1.0575891404849006E308,\n      \"candidateName\" : \"2023-02-06T17:48:44.313219Z\",\n      \"probability\" : 8.151589312099734E307,\n      \"predScoreFamilyName\" : 1.5524743522679937E308\n    }, {\n      \"predScoreGivenName\" : 4.418873822313715E307,\n      \"candidateName\" : \"2022-03-24T15:26:44.313267Z\",\n      \"probability\" : 1.2733889411304542E308,\n      \"predScoreFamilyName\" : 1.7487609112756832E308\n    }, {\n      \"predScoreGivenName\" : 1.3927630532400028E308,\n      \"candidateName\" : \"2022-08-13T17:43:44.313314Z\",\n      \"probability\" : 2.545088414268972E307,\n      \"predScoreFamilyName\" : 9.474617235706393E307\n    }, {\n      \"predScoreGivenName\" : 3.820892991129156E307,\n      \"candidateName\" : \"2023-02-15T16:58:44.313359Z\",\n      \"probability\" : 1.1255974631501706E308,\n      \"predScoreFamilyName\" : 4.4521623939789563E307\n    }, {\n      \"predScoreGivenName\" : 1.919019024472064E307,\n      \"candidateName\" : \"2023-01-31T14:45:44.313408Z\",\n      \"probability\" : 4.498567116910817E307,\n      \"predScoreFamilyName\" : 5.989394224830485E307\n    }, {\n      \"predScoreGivenName\" : 1.6344838704700608E308,\n      \"candidateName\" : \"2022-06-13T16:17:44.313453Z\",\n      \"probability\" : 7.49443961565013E306,\n      \"predScoreFamilyName\" : 8.640202621897501E307\n    } ],\n    \"orderOption\" : \"esilpj1ny6zypmoz4hvfgnh7vg1swit2o9vi312y3hg6df0xkst9oud8ez84eupq9qnyqvefd667u7x6cas1iru5kn1inpje6dm6wcehshfbwoe23mjdylpm4676fhsmjowtbdghjaw8ruz4i6g7c1le3mkwq1vrj1sf1die6d0hbs8ukwda8mmy4h2dky81a27o4\",\n    \"id\" : \"ulc2\",\n    \"script\" : \"72a\"\n  }, {\n    \"firstName\" : \"Duncan\",\n    \"lastName\" : \"Schumm\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.823122894165953E307,\n      \"candidateName\" : \"2022-11-28T15:35:44.313662Z\",\n      \"probability\" : 1.1310052485594405E308,\n      \"predScoreFamilyName\" : 2.0116025138654628E307\n    } ],\n    \"orderOption\" : \"g7sd3kws681k0f33uu0q0wzhyhykzb05xop7mjziczsa11ibh2n60k19botgrutkzhgiwhb5ip52d7bxhoak0iy0b0pkhgyanxkh8wb9x95zkm14r3xesi2ihne73x6czw\",\n    \"id\" : \"54f2\",\n    \"script\" : \"t2kfw9hgc0bspp5yn3pfmfzqfi5lt4zhbb866tz9f857x4w7lgopzhusq9alhr71tpbg3jx8m7qie2m8s8k0atndb88g06q2qowd4xl8izf5ghtmpf4cvicpbbxt2ymrfg51u2\"\n  }, {\n    \"firstName\" : \"Sean\",\n    \"lastName\" : \"Ruecker\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.708837329723797E306,\n      \"candidateName\" : \"2022-06-28T16:52:44.31387Z\",\n      \"probability\" : 9.86917401827913E307,\n      \"predScoreFamilyName\" : 9.81572427425663E307\n    }, {\n      \"predScoreGivenName\" : 6.450672674351908E306,\n      \"candidateName\" : \"2022-04-17T16:12:44.313917Z\",\n      \"probability\" : 1.4780646565503703E308,\n      \"predScoreFamilyName\" : 3.291911618662395E307\n    }, {\n      \"predScoreGivenName\" : 2.2874472154687417E306,\n      \"candidateName\" : \"2022-05-15T14:18:44.313966Z\",\n      \"probability\" : 5.000931802937918E307,\n      \"predScoreFamilyName\" : 9.348706527912683E307\n    }, {\n      \"predScoreGivenName\" : 2.2402376542008948E307,\n      \"candidateName\" : \"2022-06-02T16:56:44.314012Z\",\n      \"probability\" : 2.9689908184523175E307,\n      \"predScoreFamilyName\" : 8.069663941147263E307\n    }, {\n      \"predScoreGivenName\" : 1.245326171693832E308,\n      \"candidateName\" : \"2022-03-08T17:07:44.314057Z\",\n      \"probability\" : 2.7414419525630335E307,\n      \"predScoreFamilyName\" : 1.9990567670838783E307\n    } ],\n    \"orderOption\" : \"vc94im89oieu5az9cbzqgdqiomu9puaf1d85dprkmczreidl7rinyvho1keb2a3yt6xsd8ems6frkutxh5rshjuasfs2iwbr3uplmi72hg\",\n    \"id\" : \"27k9\",\n    \"script\" : \"6rtid2w8x231rpyd8wkabyd2y4sr8uuadka5sa4w7t03dk8fsmryfa9l510xkzd52ns0al6n8egqzb1ckvdgzru0xzhxxrlatzrqy99j1a6ps89czvucc2unftex0h1jjszkcobq8vjelynw7m71\"\n  }, {\n    \"firstName\" : \"Janay\",\n    \"lastName\" : \"Pagac\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.6260290914405315E308,\n      \"candidateName\" : \"2022-07-27T15:50:44.31427Z\",\n      \"probability\" : 8.511447166089249E307,\n      \"predScoreFamilyName\" : 2.639976856713588E307\n    }, {\n      \"predScoreGivenName\" : 1.6994868885288881E308,\n      \"candidateName\" : \"2022-11-13T17:34:44.314318Z\",\n      \"probability\" : 1.2099460279355805E308,\n      \"predScoreFamilyName\" : 5.366689172963507E307\n    }, {\n      \"predScoreGivenName\" : 9.970013902800065E307,\n      \"candidateName\" : \"2022-04-10T17:07:44.314363Z\",\n      \"probability\" : 4.877839033165089E307,\n      \"predScoreFamilyName\" : 7.777655944185395E307\n    }, {\n      \"predScoreGivenName\" : 1.0481095858863486E308,\n      \"candidateName\" : \"2022-09-04T14:55:44.31441Z\",\n      \"probability\" : 1.0765743922027779E308,\n      \"predScoreFamilyName\" : 1.5730421479182385E308\n    }, {\n      \"predScoreGivenName\" : 6.305552267150185E307,\n      \"candidateName\" : \"2022-05-27T14:48:44.314457Z\",\n      \"probability\" : 6.613695207710781E307,\n      \"predScoreFamilyName\" : 1.6415181302259833E308\n    }, {\n      \"predScoreGivenName\" : 1.056608634871598E308,\n      \"candidateName\" : \"2022-03-13T16:10:44.314505Z\",\n      \"probability\" : 1.4397127019793054E307,\n      \"predScoreFamilyName\" : 2.5155367476596585E307\n    }, {\n      \"predScoreGivenName\" : 1.6013592688127272E308,\n      \"candidateName\" : \"2022-07-14T15:07:44.314552Z\",\n      \"probability\" : 2.242136765918311E307,\n      \"predScoreFamilyName\" : 1.5937734800218276E308\n    } ],\n    \"orderOption\" : \"zauutfmm5j15bsxw4ff8zr6cxsixzlyccnra8linl4tksx362i1ht2cfzopu\",\n    \"id\" : \"2yua\",\n    \"script\" : \"vlk8q\"\n  }, {\n    \"firstName\" : \"Effie\",\n    \"lastName\" : \"Collier\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.045682591053002E308,\n      \"candidateName\" : \"2022-05-12T16:13:44.314759Z\",\n      \"probability\" : 9.252359939458063E307,\n      \"predScoreFamilyName\" : 1.1382897014905442E308\n    }, {\n      \"predScoreGivenName\" : 9.877287593622135E307,\n      \"candidateName\" : \"2022-11-12T15:30:44.314804Z\",\n      \"probability\" : 6.959970665234531E307,\n      \"predScoreFamilyName\" : 3.66083928505954E306\n    } ],\n    \"orderOption\" : \"fp5nd75zc5sivfk0i6n8krakpljxj2tt3v2lck5alf9o1h7t9nc41qb9rqfhlanklcojghgppvk6xbimg80p511beoafbjclqvetpoa0pjxhm9p5zpaw0m8kb3tg1yz6aolu7mbn0j0d1e89rzn0evpi974cv77ubrpamrci2psx7kvh09ui3dibp\",\n    \"id\" : \"t23j\",\n    \"script\" : \"mhl8fhtq58u8jpsgalmheitd8oicoe9vg7llgzex22vsqflae11snbkqfmpg0u1d7u0s3sxvddyrb1xqpkfsfmckeg6u4ozfz6s16tm65zswi4l7qyaufmgkh3fvwpywjcuzfqa0nva74sdsq8loiw9x0xtpw9qfgujylahy75qdwh0zpdka0c7hqw54xrpdyy\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6e2d2c5-3ac6-4f2f-b1ef-06740ae234a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.315145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "fb0174a7-d41c-4cbe-bf3e-ae64ab5f3879",
    "name" : "Infer the likely gender of up to 100 full names - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fb0174a7-d41c-4cbe-bf3e-ae64ab5f3879",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.311727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "7af7d408-5f19-49e2-83d0-58a5301a58c7",
    "name" : "Infer the likely gender of up to 100 full names - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7af7d408-5f19-49e2-83d0-58a5301a58c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.31171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "9c556cc6-fd51-4655-a2a9-136dd9d43212",
    "name" : "Infer the likely gender of up to 100 full names - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9c556cc6-fd51-4655-a2a9-136dd9d43212",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.311692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "a6008d84-c333-40b1-8f1d-6ce469d8aa93",
    "name" : "Infer the likely gender of up to 100 full names (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.315586270872535,\n    \"score\" : 38.1309292452019,\n    \"probabilityCalibrated\" : -0.45773872166192997,\n    \"name\" : \"Oleta Zemlak\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"5925\",\n    \"script\" : \"w10vjpodwi43l0uzhx8ta839ot0kyyj33gik6gh9lx0vpkywjol9ygro8mcqrtvs5jvw9hentdhjdbbjhkwb4nby9xvxmljnd594bghvl\"\n  }, {\n    \"genderScale\" : -0.3643971686138239,\n    \"score\" : 28.50723319048265,\n    \"probabilityCalibrated\" : -0.5983025053968645,\n    \"name\" : \"Otha Sipes\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"f8sv\",\n    \"script\" : \"1ml9n5ho9n\"\n  }, {\n    \"genderScale\" : 0.06217143454060592,\n    \"score\" : 40.06262439229592,\n    \"probabilityCalibrated\" : 0.2979580493197769,\n    \"name\" : \"Domingo Reilly\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"zyi9\",\n    \"script\" : \"oyhhe582sajhwmtv18bd4nmwp10efjar65cc9mrq67h1mxwjz1258fih76\"\n  }, {\n    \"genderScale\" : -0.21987575122637115,\n    \"score\" : 29.6825972074337,\n    \"probabilityCalibrated\" : -0.535051873764566,\n    \"name\" : \"Cleveland Abshire\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"34rs\",\n    \"script\" : \"9zljtr21wwy9re7av7wctv0ifoelp7p9wbq75voy9408sprewuy4m5l29730jwu5wm64ok\"\n  }, {\n    \"genderScale\" : 0.08282530176150504,\n    \"score\" : 75.43193728635588,\n    \"probabilityCalibrated\" : -0.42632763315381395,\n    \"name\" : \"Dylan Dicki\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"t4g3\",\n    \"script\" : \"mqimf8z3fneofs8gn3iudr8b7kalo0cpgn7rbx05fitsuz8\"\n  }, {\n    \"genderScale\" : 0.16897751170733133,\n    \"score\" : 66.75839925578406,\n    \"probabilityCalibrated\" : -0.8038680218509344,\n    \"name\" : \"Lennie Keebler\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"7j1k\",\n    \"script\" : \"dx4mkqgdbzrlwmpcysw3nvzf36ifqtvz7l0bm41bomt3sfdww1lauq85zrfn7c5k7zqkz9equw\"\n  }, {\n    \"genderScale\" : -0.7393589770600608,\n    \"score\" : 57.75820339744458,\n    \"probabilityCalibrated\" : 0.5243274936634323,\n    \"name\" : \"Earl Stamm\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"4j1z\",\n    \"script\" : \"bcv1blef1u98ca6jtuaici5gb8isd4zxq1uo4ni72spw94ieh4awhikccvv4gz9bg9tieflf3pz4rvexqapke3chmnvd2bh5cjp49mj3nlmtwaimv1vx1du5xseatgy1r46a\"\n  }, {\n    \"genderScale\" : 0.38879632294569655,\n    \"score\" : 91.51066127336061,\n    \"probabilityCalibrated\" : 0.955794615805029,\n    \"name\" : \"Vannesa Feil\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"anx8\",\n    \"script\" : \"u8f8kso3iwfhqtbnlzcgp0v28hac9euhid56pnm4dr91ug992ughyghzgt196o4hszwiwt1zf0b0x39t2vzij1u8cwwkwxqun9wydyom6mfzaxyfkik40yl8guq4mbwn3vnb6ttf41l6m8l7iwbn0hffwjce0niv31f86o2t0mzwp6m6vdwa\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6008d84-c333-40b1-8f1d-6ce469d8aa93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.31166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "fe542b17-16fd-4b45-8258-3c484cce9a2d",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Miss+Minh+Miller",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fe542b17-16fd-4b45-8258-3c484cce9a2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.310409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    }
  }, {
    "id" : "be01c62f-92dc-4880-9cc5-2b59056e2507",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Bong+Lesch",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "be01c62f-92dc-4880-9cc5-2b59056e2507",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.310347Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    }
  }, {
    "id" : "8f0a8283-e6d9-474b-bfb6-ca71302c05d2",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Carlyn+Schuster+I",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.49153736756770083,\n  \"score\" : 32.158200209448054,\n  \"probabilityCalibrated\" : -0.5052110802765215,\n  \"name\" : \"Lashandra Effertz\",\n  \"likelyGender\" : \"male\",\n  \"id\" : \"564w\",\n  \"script\" : \"ohhlceyo7m5x8w20d88iaf6jc7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f0a8283-e6d9-474b-bfb6-ca71302c05d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.310273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2e5d57e6-0e4e-4683-ad0e-5b249979a1e2",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2e5d57e6-0e4e-4683-ad0e-5b249979a1e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "2d7f1409-606d-4b22-ae32-d94de5f718cb",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2d7f1409-606d-4b22-ae32-d94de5f718cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "a02ad202-b4fa-4a6b-9364-ee692f2b71a5",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a02ad202-b4fa-4a6b-9364-ee692f2b71a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "8591f9c0-0ea0-49fa-abcf-b7735fe3529b",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Barry\",\n    \"genderScale\" : 0.704368840423691,\n    \"lastName\" : \"Satterfield\",\n    \"score\" : 88.09671122883721,\n    \"probabilityCalibrated\" : -0.10984030963322233,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"6yg0\",\n    \"script\" : \"k0et27bx\"\n  }, {\n    \"firstName\" : \"Carrol\",\n    \"genderScale\" : -0.21692897274497303,\n    \"lastName\" : \"Baumbach\",\n    \"score\" : 88.58225647094966,\n    \"probabilityCalibrated\" : -0.16334213529307573,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"rshg\",\n    \"script\" : \"jjvw2fbwlxhw8sjjv3bt12zwkawhxb5a948qjff172d6wiwya2mu7wolfcnqvmjly3f0c42o0ngy1qclaeyuzse8w0vq44ny28svsh4z2v2z3sw1j26dw8hczu95r7xda00nj491fu4ehw0wy2y2fbwskw88dx4ec3qjmr4addlenaswljfyf4h23w0b1ble13u09z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8591f9c0-0ea0-49fa-abcf-b7735fe3529b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "216aaeb9-4991-493b-b2b1-595d771fae74",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Heidenreich/George",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "216aaeb9-4991-493b-b2b1-595d771fae74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    }
  }, {
    "id" : "7a859ea9-0edc-4cb6-a6c6-5993224d0d0e",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/White/Corey",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7a859ea9-0edc-4cb6-a6c6-5993224d0d0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    }
  }, {
    "id" : "2d8159a6-6f53-4d0a-a08c-c02a66cade6b",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Nicolas/Jenny",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Patricia\",\n  \"genderScale\" : 0.9100192433145646,\n  \"lastName\" : \"Carter\",\n  \"score\" : 62.415918553680115,\n  \"probabilityCalibrated\" : 0.11070524105988655,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"821v\",\n  \"script\" : \"52qhw347jago1sqbuqpk31xbl3ciua4zzk9law4ejvv3qyekl0bqcgaznbfqj88g04073dqdju8wgpjagq44vgaq2j72bpc0j5ga8u580crp3mfedownfr53wrpf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d8159a6-6f53-4d0a-a08c-c02a66cade6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.30938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1f6c71e7-61fa-4c68-8d9e-9da1b71071f5",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1f6c71e7-61fa-4c68-8d9e-9da1b71071f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.30907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "84023eec-c9d1-4290-bfeb-6ff391dc967b",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "84023eec-c9d1-4290-bfeb-6ff391dc967b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "e7d53b74-0022-4ad1-9415-c3dc6a036c1b",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e7d53b74-0022-4ad1-9415-c3dc6a036c1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "443a4856-4d82-4c6a-aea9-48734bdf7c12",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Curtis\",\n    \"genderScale\" : -0.32076280528266166,\n    \"lastName\" : \"Lemke\",\n    \"score\" : 72.540284819558,\n    \"probabilityCalibrated\" : -0.6011382552128723,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"a5rr\",\n    \"script\" : \"fnmzf8ej502h00jjovy2m5p29gyd92066soo6254twa40p3s4neryc0fzl520sqb83th48qrpz4sh902tvn2fbo6vbkfcaya9pjrybbe5eaia7dbrg10a01etv94jcw3kisqwzqc2k764u\"\n  }, {\n    \"firstName\" : \"Josef\",\n    \"genderScale\" : 0.27687411299308984,\n    \"lastName\" : \"Lockman\",\n    \"score\" : 74.51242849332525,\n    \"probabilityCalibrated\" : -0.10361926456767057,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"91y9\",\n    \"script\" : \"76yiva063o5at078ljrekbupf7nw4ggjvmvhgagcl40gmkmjwd4g23yq08u4f7fj7gbkzrx4iv52rbrlk1avxjdaj08iozq8068p26m2fni5p55u56uch7ajs1i2f\"\n  }, {\n    \"firstName\" : \"Carmen\",\n    \"genderScale\" : 0.10987221574586559,\n    \"lastName\" : \"Veum\",\n    \"score\" : 48.67091807272138,\n    \"probabilityCalibrated\" : -0.49554392102821354,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"c9m4\",\n    \"script\" : \"029lkz84py3t1sux2x04gr7muwse1h2b4ju78ah68nhlpbyw746x9h5nfy3rix4r9r1hm7hb9u2lchb2ccc89vkclqvj8dk03fi3620u4tzayabolpmu11s2qiaun06ji7bw3c6n1d3wr2kl0wh153t7835sqvtvrfhi2oba\"\n  }, {\n    \"firstName\" : \"Mac\",\n    \"genderScale\" : 0.7240170533970809,\n    \"lastName\" : \"Doyle\",\n    \"score\" : 25.199570373820336,\n    \"probabilityCalibrated\" : -0.7485487499628931,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"516k\",\n    \"script\" : \"lly7y3mltrmf3bdpwl9m0mzz3oov3yc1s5d2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "443a4856-4d82-4c6a-aea9-48734bdf7c12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.309009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "67abc0c5-cb9e-40b6-9a0c-b542bdfb22f7",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Codi/Herzog/dkoy8higqq65t3zq594v52bmtdrfz80u90xlp4q9oust0ffif6v1pri7eydqh3uagvrv",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "67abc0c5-cb9e-40b6-9a0c-b542bdfb22f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.308286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    }
  }, {
    "id" : "e76310ac-a38a-4faf-9be5-dbdcf86905dd",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Ursula/Kozey/mbgffzgre132ofk6stwc9sz0oj7fs6t3rgglwsq5fw3bdbp9ftjeytaxzwdft51r85xk2ntqp0xd8idke08yx4hr1kg",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e76310ac-a38a-4faf-9be5-dbdcf86905dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.308212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    }
  }, {
    "id" : "b127c836-3e56-46ed-8646-60008bb02c2b",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Tasha/Rowe/hyyjm8qte1ww9bhn4i9re2ojqpnt63ixnsfg4mpzpoq2pcb8bk5xevx8sntqlivftnz8k7d7v65gbgr425rw6t1vqcr9subi53cvobmb6om5c1ka8wwrp4k24l8ybw3keymknmcpk4ci36s2s1b7fcd8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Hilda\",\n  \"genderScale\" : -0.3832596692693284,\n  \"lastName\" : \"Fritsch\",\n  \"score\" : 18.507053650450523,\n  \"probabilityCalibrated\" : 0.29678521132661584,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"a411\",\n  \"script\" : \"dqj3i8rx29vgx61od8jl14etkwccjc17tqm74nddm8xvwp5bwqqjmkmunr7d1vp2vnvd96ss2t5r2qhuycenzjy7r7tlst1pbeiodt1lkkr4gfjnt14l27618bkz1iru92d63wwl15slx8kgs56lw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b127c836-3e56-46ed-8646-60008bb02c2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.308124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6dabc7a0-e74e-4c4a-985f-79bfd246fee5",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6dabc7a0-e74e-4c4a-985f-79bfd246fee5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.30772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "7f134bf4-d6f8-4c5d-b30c-9d19eab3f0ae",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7f134bf4-d6f8-4c5d-b30c-9d19eab3f0ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.307704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "c054ae73-a98e-43b8-95ed-b103ddc76cd6",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c054ae73-a98e-43b8-95ed-b103ddc76cd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.307686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "e879b704-6598-4941-9d12-e9893144a51e",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.6572658340058639,\n    \"score\" : 58.755451944692346,\n    \"probabilityCalibrated\" : 0.7121211311342577,\n    \"name\" : \"Clarence Rempel\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"7815\",\n    \"script\" : \"8rthuteda8hu3r0tr2tl76dqrqgkxda9f5l4ie20rs6vp91xijuyaahz6bbv6ullgmzm6nxw3zfgbe6a2078epkn9ibrovecbt95f5\"\n  }, {\n    \"genderScale\" : -0.9635410419766812,\n    \"score\" : 67.77935708500704,\n    \"probabilityCalibrated\" : 0.9748805906731901,\n    \"name\" : \"Mckenzie Hegmann\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"2nrz\",\n    \"script\" : \"5jfhdw2k93ixiug3angvg1ani\"\n  }, {\n    \"genderScale\" : -0.2960674475402454,\n    \"score\" : 66.28153009878993,\n    \"probabilityCalibrated\" : -0.402879540713037,\n    \"name\" : \"Jene Rogahn\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"3i04\",\n    \"script\" : \"31ixtdipm9fdwyjca70b1g22skjxdseejffedyosxduvvt3991kpxwvyhd3ou1wsrfzydpyj5k0peesme3gocojjdy424situwsxafsd6hh4x77rtd9ktclrkwa6vgvkyjcnqn4m45ye23otvytpdxi31ra88h46qgaw5djrig59bjubljyszeam2zvk2s0upyakh6s\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e879b704-6598-4941-9d12-e9893144a51e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.307656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1a7878aa-5909-49c6-87ac-6e0848eb08fe",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Jess+Yost/4210vt06jsx4kgiu3wheo1z6kezmlml7pffw4hr3ipgk4zbroxz3wu8ks9xd8",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1a7878aa-5909-49c6-87ac-6e0848eb08fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.307134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    }
  }, {
    "id" : "d0301f60-a8ce-427b-b522-4c3ee1290348",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Jeanne+Lehner/9ig3nl5tdln8ac43ug9nmpg66vnrkqwx238r4hnq5d9e42v24wpt7gd4kp2uo6uruoad0cbdhyu6akxcyuafyn1gv6ql9nhdkpe0acdnt8qp5mn75r2y5mia8y7idyen1ij2cve30iho3r835120",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d0301f60-a8ce-427b-b522-4c3ee1290348",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.307068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    }
  }, {
    "id" : "e6c43dc9-a591-4a46-964f-8ee4af021780",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Ashly+Quitzon/zpnhh9258chou6ykbpsoyethimptxj54lalbzefd2ma501bhnv4xv",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.888430092345462,\n  \"score\" : 61.090786160048104,\n  \"probabilityCalibrated\" : 0.6769567060843296,\n  \"name\" : \"Junko Roob IV\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"d720\",\n  \"script\" : \"dwa795w8fcqtb1n1za63rs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6c43dc9-a591-4a46-964f-8ee4af021780",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.306991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c73c3d2e-80e6-417c-b803-7b0c368d1ed1",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c73c3d2e-80e6-417c-b803-7b0c368d1ed1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.3067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "77551fe8-7cf5-4e45-bff9-e54d028912ff",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "77551fe8-7cf5-4e45-bff9-e54d028912ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.306683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "99f442ab-0990-45e0-8cc7-7aec4cc1b677",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "99f442ab-0990-45e0-8cc7-7aec4cc1b677",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.306667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "c7f4f40d-fc5f-429a-a481-6bef756f816b",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.24366640084195357,\n    \"score\" : 57.25520430897675,\n    \"probabilityCalibrated\" : -0.9064709414999712,\n    \"name\" : \"Mrs. Mei Rosenbaum\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"inb8\",\n    \"script\" : \"dincj2tqb5qv0cqawb7wzvqjfaerzwdxeq7ckf8u3nerqd5mjlc90my7dqx9g4mddzu7dh9zbn1ge4u3r6tvac7tvmxac3b46p6yyzt0x87mbl3hpxq03x86qpyh7qif4bsxf\"\n  }, {\n    \"genderScale\" : 0.7537190723176388,\n    \"score\" : 96.4582358258245,\n    \"probabilityCalibrated\" : 0.20029277726782624,\n    \"name\" : \"Stevie Schamberger\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"f25i\",\n    \"script\" : \"e9p08y211jkrdvljirx4780ppm5397892g1p5u61so3324euollzoh5\"\n  }, {\n    \"genderScale\" : 0.03662810961088203,\n    \"score\" : 67.47399603351155,\n    \"probabilityCalibrated\" : 0.725992215892078,\n    \"name\" : \"Caron Stiedemann\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"mhu5\",\n    \"script\" : \"s3qmxsyquu2sd7xs947zjghk3mtwgg85ggjfpt3sezh4\"\n  }, {\n    \"genderScale\" : -0.7774340800484607,\n    \"score\" : 22.713834976554747,\n    \"probabilityCalibrated\" : -0.4641769126133304,\n    \"name\" : \"Elizabeth Oberbrunner DDS\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"2i1m\",\n    \"script\" : \"8opgi4amf9vb4ghci3ghfyf7lsfb5kfq5oc43y2xq04ai0or0zj98jo\"\n  }, {\n    \"genderScale\" : 0.3238160599236175,\n    \"score\" : 32.09844792569023,\n    \"probabilityCalibrated\" : 0.13264349033202683,\n    \"name\" : \"Dallas Kerluke\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"k142\",\n    \"script\" : \"33r3az9d68jgdcx0nn0lg6v7ru72wstflex1ibgqek7v4vj\"\n  }, {\n    \"genderScale\" : -0.7971707885667993,\n    \"score\" : 40.010069926274525,\n    \"probabilityCalibrated\" : 0.4751542381938516,\n    \"name\" : \"Rigoberto Feil\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"0ie0\",\n    \"script\" : \"pl0tznjg9ldphajaby0qy9nipaef4\"\n  }, {\n    \"genderScale\" : 0.17918878157718243,\n    \"score\" : 58.117309901727154,\n    \"probabilityCalibrated\" : -0.5909057374625701,\n    \"name\" : \"Lorraine Bogan\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"wg5s\",\n    \"script\" : \"sdkj80fbc1vq3xz7zctdepww3g4cbm7wyg5cs195sqrhk3g0c40d2lrvvsvdjix07dkko5b91tvtxhkrj7l2z2w1evxjr7ms0njjk8ziiynkwktpzoypixun7jc4tcgh4l0afzbdgxr37fr2p5ds0h5s3y532yx28ls7zqyi3l2v0qglc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7f4f40d-fc5f-429a-a481-6bef756f816b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.306634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "66f9bbec-8a41-468b-b3ac-846f90f12c31",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Ms.+Ula+Schumm",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "66f9bbec-8a41-468b-b3ac-846f90f12c31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.30548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    }
  }, {
    "id" : "9c17ed45-bc98-444c-8b14-e0685b4c04bb",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Kristi+O%27Keefe",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9c17ed45-bc98-444c-8b14-e0685b4c04bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.305427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    }
  }, {
    "id" : "9989faba-efb5-42fa-91b5-3023b5425a1c",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Miss+Oswaldo+Koss",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.9900439079412164,\n  \"score\" : 15.190573530123297,\n  \"probabilityCalibrated\" : 0.40943387588863267,\n  \"name\" : \"Wilhemina Weimann\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"2oq3\",\n  \"script\" : \"gtwcihw6z4lgomddznn3j3dtui08ovusdwrga3gkc8hm3uovnprdiuv5mz8dx5useuh5pt9vwusuuo2omhwme4dd9i5i37buz9igjnk1og8t5oajbo533w524xzgf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9989faba-efb5-42fa-91b5-3023b5425a1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.30536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "7181c0d7-0161-4efe-9aa4-5b989e7bf2f4",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7181c0d7-0161-4efe-9aa4-5b989e7bf2f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.305053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "dacf315f-f5e9-4207-bd4f-18a908702456",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dacf315f-f5e9-4207-bd4f-18a908702456",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.305036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "74dc1682-5519-4672-b42d-f588ea59a921",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "74dc1682-5519-4672-b42d-f588ea59a921",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.305018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "4e951d9b-4b02-4c6b-92fc-74b97eb6b19a",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Huey\",\n    \"genderScale\" : 0.6071068393063719,\n    \"lastName\" : \"Runte\",\n    \"score\" : 15.937185933107767,\n    \"probabilityCalibrated\" : -0.04404663178568158,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"n0da\",\n    \"script\" : \"1w5sgxvlruogluzcg4xu7mu9m9qtylqcijcrrhfttagr78a0yu0s7u1w1nrticg7leuwa1t6nfypu1hew641we4n6ko1cwsdb9hnnehr8l3pl1i1n5ofre30xgin02xrwstgzqg0tgnufh\"\n  }, {\n    \"firstName\" : \"Kirk\",\n    \"genderScale\" : -0.2860977337642254,\n    \"lastName\" : \"Carter\",\n    \"score\" : 9.235416280877228,\n    \"probabilityCalibrated\" : 0.5329360087844259,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"p6xa\",\n    \"script\" : \"3nlblrm2wg0y5nayyv03q7ut9wlu6gktpdk7j2wk1rnllls31bokqfk\"\n  }, {\n    \"firstName\" : \"Louie\",\n    \"genderScale\" : 0.9686961653018984,\n    \"lastName\" : \"Howell\",\n    \"score\" : 15.775139092050871,\n    \"probabilityCalibrated\" : 0.19492519103726624,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"5899\",\n    \"script\" : \"sd4bwl2k84q8084mgtaag5xo4eey09kd700z3j6n6mwgl36bhrktas7mzn2\"\n  }, {\n    \"firstName\" : \"Bebe\",\n    \"genderScale\" : 0.8430218738636419,\n    \"lastName\" : \"Lueilwitz\",\n    \"score\" : 38.942211604860944,\n    \"probabilityCalibrated\" : -0.054167209903653646,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"4wnl\",\n    \"script\" : \"to1w4yujxt3ojlou4le43p7qrj5laqmvk8ixb333r710jeugugtbpinyajrse7zzg89n4tslw60p637lcu18mjx3xifrukjy9racb7vmnt6mgy5h54l2otfdlrwk7r4tfmbdkmm5opnw5prdetend3vqdzv04bn261xa3bzrr68n\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e951d9b-4b02-4c6b-92fc-74b97eb6b19a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.304988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "26c93d19-fb7a-400b-af46-d6e4bda982eb",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/48nvgo8249ot5qik53xa7drgjdgp1ba6e092fg07ueqh554du7sep4zg0e848hoxeqy8dcr88jgah9abv0jkxjje39hkyqiaujlsjm1cqk9x1wntiazti00clcn7y7bxkyec50ma44qpm10q1rbdtktwktbe9syyycqx6n/a1h98a4a0n5hrpiejq4vqepg0eqkbau3976xco2456aqug9mfovlccrumxsbj6mg8m39mbnzov1cxpdwhys1nqnv39stpuzkzvdxi433w3lb",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "26c93d19-fb7a-400b-af46-d6e4bda982eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.304266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    }
  }, {
    "id" : "57f888b2-4670-4589-9ac4-4daced6d0f40",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/xtij/y7djvcf9nnuo2qw8ga5oe7rg5s37w8fripvfcv6f6dyz8x424q7efgklsnbauzlv3cp7qzep6uavrmmgy2ahbvgvfj5pgqn0b2zj9vmc3e41185hjy7zuwaelbamnhwzhh035z33j52f9ztfelqv4oeletrm9ecnje2syors7q9zfc2k",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "57f888b2-4670-4589-9ac4-4daced6d0f40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.30422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    }
  }, {
    "id" : "299eee9b-cb2f-4c0b-9028-f6d96477d103",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/f5700axqiyc4fy0hlq8iinj3e6xocqlisrbkybwlsmjrufvi3tjstkr9meg0pu3p8cupcpfkn2z5f/um5ko4wh0dhfcad2f0d9uej443wukybdrbv790fk10zux1gmtg5kvzpn4vti1ohf83fzz7cnk3gycrr39yxpv5y6mztyu8crdjbzukjc386rkq7bfeb5djz3n9i6uy8hlchv8tndrizplcavns5jdfs4jjf1iy",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Olga\",\n  \"genderScale\" : 0.7086357476780254,\n  \"lastName\" : \"Kub\",\n  \"score\" : 37.18642663950844,\n  \"probabilityCalibrated\" : 0.9829586380001643,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"eqxm\",\n  \"script\" : \"6ldjzblf3sdpebxqj5v17wyh1bfp8ftf4qywj8ow9w65c3afaktbh2bsdz14w2ucil90oppewyutw60uk73qp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "299eee9b-cb2f-4c0b-9028-f6d96477d103",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.304164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c4163665-ca48-4819-9c41-60ce5bd2e8ef",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c4163665-ca48-4819-9c41-60ce5bd2e8ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.303829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "f9e93661-f364-4842-9953-ee39310d79e5",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f9e93661-f364-4842-9953-ee39310d79e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.303811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "34c04cd4-68db-4ef0-98d0-be49bab3772a",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "34c04cd4-68db-4ef0-98d0-be49bab3772a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.303794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "d0ccb720-61c2-4ee0-b0ad-af67e037f45d",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.6884213250224824,\n    \"score\" : 46.41955946554426,\n    \"probabilityCalibrated\" : -0.6226940432786017,\n    \"name\" : \"Katheleen Mante\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"q930\",\n    \"script\" : \"hs8\"\n  }, {\n    \"genderScale\" : -0.46624056187030694,\n    \"score\" : 40.49039012442227,\n    \"probabilityCalibrated\" : 0.5437218461950386,\n    \"name\" : \"Mrs. Leisha Feil\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"7k67\",\n    \"script\" : \"r5wd3z0fcqy4ew8enbmlsun3wx98oscucaobe5u4xpii1ty867ebfgnzy563p90lzvkfq069lmywj84wvt73p9o923a5kyg2mnskzbn1mfeff0c8ca91bso98hw5nye6wof3vnn5qe7ueejcvgt31egiw19o720c9dd240hhbpo535yaz5r7ey85bdwd3a3ttm\"\n  }, {\n    \"genderScale\" : -0.845360561755907,\n    \"score\" : 21.14085425564666,\n    \"probabilityCalibrated\" : 0.9749400474490053,\n    \"name\" : \"Wilton Ullrich MD\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"x3x3\",\n    \"script\" : \"fidxyszb6928mcekculmvg356i4ouej4kjy1j19pxiflows29h9oxovzl6jf8lyeby9mkhw10a1fsf0ubwt5nh6dp6gmqtxxp6s7bzgty0mcmlz5qrv1cllanrzp1ywct8dun3ybdhsm6e\"\n  }, {\n    \"genderScale\" : 0.6940830122112442,\n    \"score\" : 1.5301690399834422,\n    \"probabilityCalibrated\" : 0.8055819385908487,\n    \"name\" : \"Sal Renner\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"h04s\",\n    \"script\" : \"mzqvt347xbmdbuhaf6re3lvukrvlzdpq2cp83q1y5n26swzla4p\"\n  }, {\n    \"genderScale\" : -0.5897485813931762,\n    \"score\" : 81.90402945755044,\n    \"probabilityCalibrated\" : -0.16768022496854385,\n    \"name\" : \"Daren Quigley\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"1ep7\",\n    \"script\" : \"zfj0224o0i578ro57oxxa5cvvm9qczlm6m1upjnbqiwiz02g84nbx9cfze5nkpon3phpmucz6j336gzioqfat5498t77x4hkk7wv9442dhpsfc9ksiy40ddfha2zjx8vbdp9qcr05nnyqantqk64naftuyvlyyd3zn5j8emoc2opdk0tpnnxeyz\"\n  }, {\n    \"genderScale\" : -0.418912642075697,\n    \"score\" : 34.3188858945368,\n    \"probabilityCalibrated\" : -0.19036780466774195,\n    \"name\" : \"Sheryl Renner\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"cr95\",\n    \"script\" : \"ffsj6vxml3hqiyy97zzxa9yfydy3ef27fo415wsrutxunm63gufv3wf1nn2emu8o0nhs2d03vt6ckiw82xavpccj0xun04zu4nbiuy2ojje6crth8vwo4zgp7czvfxfadcigsjqw1st53dt4q45f7rggicgpg1kqlzzxp4ki\"\n  }, {\n    \"genderScale\" : 0.9337016448663797,\n    \"score\" : 69.61684978411404,\n    \"probabilityCalibrated\" : -0.42112823261440346,\n    \"name\" : \"Lonny Gerlach\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"iq45\",\n    \"script\" : \"wg9y165ekin63iytuyp6cp0k89idb4q5fd2zwo6gb4epka2xm3u4znqiqoirg7frdx\"\n  }, {\n    \"genderScale\" : -0.2083892143577848,\n    \"score\" : 99.60479010613692,\n    \"probabilityCalibrated\" : -0.9333740712998388,\n    \"name\" : \"Theo Williamson\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"ewf0\",\n    \"script\" : \"79xw0bs8cld4uzqd15u\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0ccb720-61c2-4ee0-b0ad-af67e037f45d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.303753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e38f626e-54bb-4859-99a5-b4666e9f854e",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Eli+Gutkowski",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e38f626e-54bb-4859-99a5-b4666e9f854e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.302432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    }
  }, {
    "id" : "66a8ca36-d50e-4e4b-9130-d588ceb01792",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Jennette+Johnson",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "66a8ca36-d50e-4e4b-9130-d588ceb01792",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.302372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    }
  }, {
    "id" : "e6706899-6661-4ad9-b96c-523b6dcc8dbe",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Rufus+Thiel",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.094170200981182,\n  \"score\" : 29.306677029623852,\n  \"probabilityCalibrated\" : 0.17521002624244608,\n  \"name\" : \"Natosha Heathcote\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"g43t\",\n  \"script\" : \"qaxdkb16xhhnry23h8ucnxk9vpo99m04klw8aoooikstl87ai517jpksirbjg4yjhsh8tsjscxqklnioxjo1ynjxfn91cxbz2uzk20q8xxnh17b3pufteybpedh6w8vzanml545hk2y8cb04ialcmsedsdpfy733ek8eu4woybk8t4i8x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6706899-6661-4ad9-b96c-523b6dcc8dbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.302293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5e079b26-c5c8-43e7-9c17-91b9efd0af51",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5e079b26-c5c8-43e7-9c17-91b9efd0af51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.301977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "c63a95bc-ae27-4e64-8a50-20c7abef3ffc",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c63a95bc-ae27-4e64-8a50-20c7abef3ffc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.30196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "ba8f1c51-fcf2-4ba2-bd6c-142c9dbfd8de",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ba8f1c51-fcf2-4ba2-bd6c-142c9dbfd8de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.301943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "4123a64f-acef-415b-8913-bbe58cbe27eb",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Dan\",\n    \"genderScale\" : 0.09195253631045586,\n    \"lastName\" : \"Langworth\",\n    \"score\" : 60.63573631948557,\n    \"probabilityCalibrated\" : 0.15170957679262953,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"2m5d\",\n    \"script\" : \"gphag817401vdzame4in8jxa712qo4udgsy2ggsap05l69ybk8p2g8met6zrtvysq5mp0gx4ho0umr4oj851uryudd2h05e991rahva9tjr6nezxp16xast4ham1c2\"\n  }, {\n    \"firstName\" : \"Gregg\",\n    \"genderScale\" : 0.8000767331918521,\n    \"lastName\" : \"Blick\",\n    \"score\" : 42.9419744423541,\n    \"probabilityCalibrated\" : 0.7335670424125067,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"14i9\",\n    \"script\" : \"1ffhehkw6q4ns7ptpur7xii63ras07ofcrdafy8d7j54bpx3yna1iu7j6s2dnzq86r7nt94vhh81j2a86yoxs9wgrkgs0j3mbytbhh9oqrbvbux9gav2c42x55i5sc82awbux3jrrx4hbh18bnhgd28q28u99xd6h91oc3p77rhsjevme5wwz\"\n  }, {\n    \"firstName\" : \"August\",\n    \"genderScale\" : -0.3696120784562671,\n    \"lastName\" : \"Little\",\n    \"score\" : 24.584350840736402,\n    \"probabilityCalibrated\" : 0.834943590744678,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"38gn\",\n    \"script\" : \"c22z4s9n7t6mvmfw7my9pr8gdcn48skcqqergwu8xdc5sxqorz0o0r1kpnm1dkw\"\n  }, {\n    \"firstName\" : \"Doug\",\n    \"genderScale\" : 0.08628141258908295,\n    \"lastName\" : \"Cronin\",\n    \"score\" : 87.52645613713855,\n    \"probabilityCalibrated\" : 0.275832533040536,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"8c0s\",\n    \"script\" : \"k19zhkxrqbgpz642ho6rv5kxcoxs9evkyj0o0xv45jfqo6qh0ccg8mnal0n2ctv5wtvs34hpxfu26umauhobbo9dyfgtqqr2qychv9fnbw5txcmfpvlf110i137147ths6q\"\n  }, {\n    \"firstName\" : \"Johnson\",\n    \"genderScale\" : 0.6922106616817512,\n    \"lastName\" : \"Lakin\",\n    \"score\" : 43.50085758201009,\n    \"probabilityCalibrated\" : -0.4926093422512985,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"j732\",\n    \"script\" : \"v8fu71ein3icb3za3e8cgv61ussevktwpc4awwvl3rjv574vg7qnqa86n45d0t0ceq16nxuxux409e0f9rh5vd9uqd700fw1tek3bgei6u1vsgx9j796f0llvnvr1itp3be\"\n  }, {\n    \"firstName\" : \"Leon\",\n    \"genderScale\" : 0.2756308436840498,\n    \"lastName\" : \"Mayert\",\n    \"score\" : 82.55764952712849,\n    \"probabilityCalibrated\" : 0.7458570654103687,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"bb28\",\n    \"script\" : \"9irkve3n41ewmpznjfzvazn11rt5bsqakyzh7q\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4123a64f-acef-415b-8913-bbe58cbe27eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.301909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c9478e27-7b07-47a1-b648-f341b7d1097c",
    "name" : "Infer the likely gender of a name. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Renay/Osinski",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c9478e27-7b07-47a1-b648-f341b7d1097c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.300852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    }
  }, {
    "id" : "c7cb090a-1050-4f84-87d8-943738f6af36",
    "name" : "Infer the likely gender of a name. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Delsie/Walker",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c7cb090a-1050-4f84-87d8-943738f6af36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.30079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    }
  }, {
    "id" : "feb2611a-eeeb-4098-b734-5f619d70508a",
    "name" : "Infer the likely gender of a name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Lynn/Kuhic",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Desire\",\n  \"genderScale\" : 0.9941644076949567,\n  \"lastName\" : \"Prohaska\",\n  \"score\" : 1.6836119393860205,\n  \"probabilityCalibrated\" : 0.5999468156799639,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"cqlj\",\n  \"script\" : \"bh9l4etqs1mgnvy52dwjh5n4lvvtf387yiu6u0ty67ggpvpddwa799fcm311hdytzfuqlmatbzj9t1ni6clo1gbjxrljobcp80t17mxjlci1grgbc756lpujy60\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "feb2611a-eeeb-4098-b734-5f619d70508a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.300715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "25023c94-dee6-4582-936f-2c26fac18d8f",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Jake",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "25023c94-dee6-4582-936f-2c26fac18d8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.300398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    }
  }, {
    "id" : "ab7c2226-b034-4acd-b823-f10d397d856d",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Goldie",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ab7c2226-b034-4acd-b823-f10d397d856d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.300349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    }
  }, {
    "id" : "0395c0e9-9be0-47ad-bd87-c61a31a4b437",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Cheryll",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Clemencia\",\n  \"genderScale\" : -0.6665767748837748,\n  \"lastName\" : \"Greenfelder\",\n  \"score\" : 39.08064888562378,\n  \"probabilityCalibrated\" : -0.7630436652899331,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"5ge8\",\n  \"script\" : \"9svsqly3stsbgdd6k09tbizpdmf21kv04yrgzvmpcrp4mzy55gtne47w5rob6sp7idcx5pfhcdjq96l05qwkzqi7bry3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0395c0e9-9be0-47ad-bd87-c61a31a4b437",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.300283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c25a6fc2-c79e-4f3b-97de-abfc01fe7662",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c25a6fc2-c79e-4f3b-97de-abfc01fe7662",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.299915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "cfdd777b-568c-46f1-b2a1-28552ac56772",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "cfdd777b-568c-46f1-b2a1-28552ac56772",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.299898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "bdfc50c8-d271-43d7-82c4-9a11fe3cc5c7",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bdfc50c8-d271-43d7-82c4-9a11fe3cc5c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.299881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "b2040a58-11c7-42b3-9531-10c0c0f8e23d",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Tanner\",\n    \"lastName\" : \"Halvorson\",\n    \"score\" : 68.99443437012607,\n    \"probabilityCalibrated\" : -0.598336021201626,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : 0.9705021477814539,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"8sfxkcjuvjiaxp874id33xe324bxhhqj88bao\",\n    \"id\" : \"f65s\",\n    \"ethnicitiesTop\" : [ \"ggfwa4a3ydbizk4qcy8peim51xqzsb8ld7y6lfo8ouvkq3z6vua4\", \"6fk04ven2fl3cv9p343yaxhjuiefsemdlvbi4wk4trzaqxa96znjc2c6l4toiup6he13qqp3buhhoskn\", \"h52d61alr6phw4v35p6rhcc1gaae4nu9nzl3olkwjmclnj8zrlri8933rc2kitnpi15kplhal2hte82vgqiqwwjqdgtzb1nvuvi05tpb9rgpx54ovchm\" ],\n    \"script\" : \"5p2wseuuvy4x8ah20c64qrsjz\"\n  }, {\n    \"firstName\" : \"Ron\",\n    \"lastName\" : \"Bradtke\",\n    \"score\" : 94.66747624333753,\n    \"probabilityCalibrated\" : 0.5706679140432489,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : -0.7321449577706205,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"6lu9qm506i1x4zisa3llzwxk5yvpc9mi534oiuiznzja1e5qeiwcx5r51l0y2vsxf89nvaayj1\",\n    \"id\" : \"16gh\",\n    \"ethnicitiesTop\" : [ \"d7kv7evlq\", \"tphlrycqkp515j7nzh5etemtb88i1euvqo59w7h60syyrnfcw96az3enbakdk9udgqqbrp9miakk06m7pepiwc1jsql1sd91nvod4phe7pv1k88utjeku404y09ght1c1i7d37amm3xd7fn94m7eb4qfkkpkje2lkhjeo9dt01o6uqhtvlefh3jb\", \"ddv8zfqgp38gs4yef0vfrwt4nxs6dj0khw45rikp7zrgdi6uruirdn57ghcmf94iqrvh8aqvcg2tc6jsfwth6xew21iiocbjxs0qljgx0fnv9c6aj4dtwmi4hg4skuycysyiq2b3mnze\", \"8aq7c20117k2ncdeo40dfw177vbi34p6xdecmhwcx8tc8o7a8gf7fhpzphadcjaoau4opm9uqtu6jbrbqcpe4fr150qfnc60ul9mcpm4r02g6mlgejw69lt8don6rai7m2vg53ol6ei\", \"7kjjhun88ueiq2bx8fd2mn6fizix3l1g0kbofo1cr\", \"b4hpkys8vuql9n69qzzzwcq8f425mvv6b8jdl3cwni8syyq0rtsyr2al0ub74uxh72fhuo64j242bz1nq8dsvo0vv4k0apc65qayybnarpgl51pr5bbt4gufl1ni9d1dzx3nemjkernyficmey4wfwt8g2gfvocavqet5bq1m1asytnuv\", \"83dtxkp213s1s3w499rrs8la7oxlw5rwqwkx0ivmo5dbrhw6m3cyxzjd8zn6wci975tw866cighd9m9jk5d8\", \"9ffgbyjked7ns4dljylz303ldzxqvp1zzs6u4ks108nc81bc23y31t798wwz039zwqykf2md5xhqbb1ahsawmw0gb2rvud9wf68xkvmao4l469xfgcmigpskg4yta2mqbc2\" ],\n    \"script\" : \"8lascrt62o024r78fd0d45z759fr6iajvwv8k1j14oxbji38rnf7qnq1bhdiimpbpnd0ekj8r549i3zx1koa9xyyc15ksiezszb1e1fzjckkonutupj9keudw0y5cvxn89h62wew4e9wi6m\"\n  }, {\n    \"firstName\" : \"Juliann\",\n    \"lastName\" : \"Reichert\",\n    \"score\" : 8.470449596135287,\n    \"probabilityCalibrated\" : 0.10221651990969693,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : 0.7932548611549097,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"nsbmkvva4da6a6lhp52pqbvaw2hwfibkgkxoszttw5sj8qfkokupa24ubj95qoofzqcbq3x0qnd1xed8ax6k67lgp7vepgfhp4ak8mg257gb3s28eaerp2ukfom0cjzd5c5agx9lfp3ys6zuimje76x6dcxzg5h5t53h9kp32phg80v58\",\n    \"id\" : \"c31t\",\n    \"ethnicitiesTop\" : [ \"1i1edjm\", \"yrsulw4pqtirnj2od27rffq2gfvmb7esnh2gpvi25vebrzkn2awpy93u0kngatowy4zj70wq7evklozp857e5nioxyuq6dlmncwb9td29rw48srwu6fyib7z87r8ooai3s4gh1ri29exvl9b02w13wewz8at8sdmhl8u4wl5ypsod2736xrnc2kq1\", \"5pehrex66j9hbc7hkdvgpkelprcza434y\", \"bex275yoaat2u4dy\", \"uhdzvtt0jrk3dplpujchz21kwcs32f7u0lp686rzfkts2j0bv77oldrqvk8zta16ketfsw82h72wj7y704bszfts64q81893q2jfyyx6u26vjhmdolhphr1c2affmvh3m5d96h6oywr6v8aog9014mfje1xntgef7595556i\", \"i1bwwkk92gj0asg4ha50oyzmzzk3n6c14uz8zsucya2w87r5k04nlmj25p77m0xpm6yebdgorxmbmprs2vctpqszaqw55nokty5mbsysdhmsie0\", \"jr4ahgd3rrslt2n5r4343jz1x2nseowux590j21gjr46a1wlbjgd140hg2snzlsn\" ],\n    \"script\" : \"j2786ratido2ydn1d86vpe9\"\n  }, {\n    \"firstName\" : \"Lela\",\n    \"lastName\" : \"Haag\",\n    \"score\" : 14.862014861465767,\n    \"probabilityCalibrated\" : 0.6151383787975588,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : -0.44941427600433603,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"gffsf7n8wbnvaewyp8eqwr09gqh7qdhtybh8o8aid72pwpeu2c113b\",\n    \"id\" : \"430b\",\n    \"ethnicitiesTop\" : [ \"jgbh3sha0a57dhb9kon6jsl6mphn9p88s56kdfpce1uvxgg7lumwb6qtm1hnr39qdpiv8648lsqs4vdbz9l\", \"chnw8v0o4xwoalfzucofwh6iy67m3ka4md1gwlbjki3lke0964y076evlt3m3mdr4ajq5manx1khx2faxixd8rl3v4dstudysn9cgl6cpx5hsv7szj\", \"h2xmwk8w01lhl5cfwb5ji05lydvpebvmiwzxhe2i8xbuxc209sitefjftw6ncc0z0947pgqpb0h8prfqx28p4klkocgzsr2gmh0ahdfkr8\", \"4rigrtr9lu70ftzmebv\", \"x342dg6f0mfbwjkkp21tn0mq513pvwdcphe37hqphzwjcpolodnyinuvl29j48ru3uagbbwp94t4zql5ad2k8njkd\" ],\n    \"script\" : \"kchz1h946ndtrn39qbrikviyjsrtafz4cplo5i5gvyhzlsx2v2diluj7i4jqexztfgy0xgwnd1lz4bjv56c18\"\n  }, {\n    \"firstName\" : \"Carly\",\n    \"lastName\" : \"Bosco\",\n    \"score\" : 22.48722324474083,\n    \"probabilityCalibrated\" : 0.6052948731320626,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.34518673946569156,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"n44wm6kmpbka46aksnu7khviraqasprp141ibz4dn5j2yagyjsdb90k6nc7ytyvn6a2k8tlqhwjz7944adh7vmd9xfz0on79lvfsx525z28ctzxgrj0depwo4h281e2ks04pkzwppg253bb7s35xz2qz59w7p\",\n    \"id\" : \"6gig\",\n    \"ethnicitiesTop\" : [ \"jari5ccsu3p5mgoh85ysc3g168s9psh9wo7icztbrgh7lui6eqepsoitmxbvmxvjga5kxf19g39juaplpz6mnsmht3jica3ef9clj1xl8xea69\", \"zyo2851hftkt43of3ybwy5\", \"gec6mj0u4axqx7qth10v79qyocix8p\", \"fwytg0\", \"dr1nf7t6wvhn9hxm54k582m2wj1gg2e1luy5llfpgxu5jf63h6i2lstrdjns9blbzk6qas5p7r23ozwfar1jesa7b47xznrtufhd6blalce9h5y0e5l14z0aq2psa3zr4l7m3z\", \"ry4807unbqo8kpjdydp7o7fdqszvzzrfnl8b6kz1wx65g5gx0vi73kx314l881xqsaaeqaj5ejti2yr44p2kw5f57xz28fklcitie60rpl07i2aw\", \"qfc8evr99inl63u1i82b0ddiqeks6ne6veb2wmc7ne61cteg1av8yxb36xpj4wtu907oiolcas7wjqwvq3zs6t9lt3maxq48qnsj5ggo639nkjuakpyidub0ywcoqmwdiq2u8nlb2gapd3psxawfhws0m0956otjby5t0gzlfxdzog3brh5uwyggi8budw2j3p\", \"z3pzbkoxvdo5yig8t1xnh4j9pitsps9sfhx2ie1ltpf044tv6cdkdzedjbfspd60jl3g7sm7vc4ub52lghxcw1miykkl9ih6h1dou473igbixz4v7tb8b7wf8gmrijfxee\" ],\n    \"script\" : \"60xp0btpoh48dm9t11j1gdx5s2eozil5ksiw50cmy3m7kf92t4jc0aabhzcdeobmdo6ad161h8tesbxv4y0zacv8yw48wkbvmll8ql8doqr9eshesjeg2zy1ppphdf8567v0v928kv8do6ajdbs9cgf52qxk\"\n  }, {\n    \"firstName\" : \"Rayna\",\n    \"lastName\" : \"Medhurst\",\n    \"score\" : 71.84813098148207,\n    \"probabilityCalibrated\" : -0.27679845509867884,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : -0.5060158631152283,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"lwa1mw21iaf959ih5jx19rph661s7ze28wyl5jkcktlfsm1ydqlo51ebxqkfxu4ti7csa80yutagsr305rlz9uu8uygwouzg2v3su3i6vpp4s3g3eaheadv7l1k15n3mt3xnu5qycvgg4rxhr7hpt3sxdaxj1e\",\n    \"id\" : \"r75s\",\n    \"ethnicitiesTop\" : [ \"rv1d0q6wnnth0k6xo8khxhx6m04wd42n7mjrm9vfm3cgtt1f9d15wdookbfgpo88yuk2ofslfnri8qyzg3f5itscwtoxg9gv2g8zvmhbcfb399kkhfyky1rifpja7jwuue3uice22wqibry944731l7qq895pumgdberyzaxyujkur9s27p2vgd9fplj3\", \"y7su\", \"aplif0y57eyzqecv8qf89s12zpvjb3vziqbiivjjyzv26wa4wvjfxzb1hj06fhy2v\", \"qbnjmf3iqayfcru37ph1tau7ba06wuxg3kkblholuy1bdsab3n865ymyx1m9ezobm0bamfk\", \"it07bghie857\" ],\n    \"script\" : \"02ap77y9osef2o261gqkq1azmxrpd3s8xsllsu0977h9vnsoiw3lbmp3gqf4qtip7264nep9gz7fpfzn9\"\n  }, {\n    \"firstName\" : \"Wilbur\",\n    \"lastName\" : \"Dare\",\n    \"score\" : 2.5615716733203286,\n    \"probabilityCalibrated\" : -0.25836956479012585,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : -0.9894715940063827,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"jaw6fh1aer3j9hxr1rajp0srfcb2jctopxy77zgr7lxuk7cx5465yataie0y2p21wxy4p94hl6yj1zuvrcvfu5zbxd\",\n    \"id\" : \"6ggt\",\n    \"ethnicitiesTop\" : [ \"63ask4sookhff2wz9g9nokrjwui3oqobq2qdqrr7rhii68l91dondix\", \"k4gf8gi2hb290ibqrd2tddqgik6wtid9fm841n5vllvyyx7y0wmrwvirmxfp6e6vot4hjce45ziktfilgak0tt9u4ew5xvgsuruupk97b3vna5ogl2az5cgyhdp18uirsmhcvfd99o1ooa0nokf43g7v147oajt39tp6dc26gim6z4j2g\", \"4y89o4b2svsujbmx2r1f3wf6k7259ysj49u3cg7x6q0l0c6jnqgnzjvrm4pwb6guj5wxp4k1iabcw6kcwwzon1r0etch6gu6rmwaagoridshj9awxulm0svduz7inlknid5bs4hskija29ena3i7mqmyo97odh\", \"9r8n8l35s20952e0yylckr1188s7dmztj61w41ujgforsp88vk3z68fwa76jhvb2h6d6tbcbm4hz5gqrgbklmxbuhq\", \"9occthu09t77uqgln0ygb0fczwo3s1vstsulmvk6u33u9z8y3s41ap3minrq46y91ax0pwfx4dm2vdphsq9l1kdj0lik1ylu00ib55yx6s3oogmiu9z0kxy38xryfszrmilmbuw2wvzv4o6o22vpuz4musor2acx8e9ykb8wzqmjfk69bwopx\", \"nt2gbcs50n4bhyn12dml8il50dnlbp50c9hiark7mkbb9pdeuyu46qdh16aw2vnvtz9l8\", \"dyqio9kxop8xrsn8l048fv72c7cui3jxe3lme0jaulncb15d0rbxfjxmz0k8frpzkqrmtn52nvjn8jshd28z8h054\", \"bc0jxiobxb1fo415mhbqh8wdjw9ww481zgtqlgi10gav7s3kzem69\" ],\n    \"script\" : \"l91fx4qfmcp31uibe9filglfm4d8gsdo6d2uu91o24723x4nkjg7gb9ru7xinplxeqedgn0e5yd3jedeq4pqym\"\n  }, {\n    \"firstName\" : \"Carey\",\n    \"lastName\" : \"Gislason\",\n    \"score\" : 68.28677849433026,\n    \"probabilityCalibrated\" : 0.8166826288984566,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : -0.564955292170576,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"i8tazbpzmv75dtfcklqzfy6fhx1gcudf1zskltp39snfrzvux294bqxbrra4tsg863gadrsp74qq4et8fvbk4j0za2sbodbb5llcj5gdhmzd9271xj9w1qu8rpew0xsra0kpwu23\",\n    \"id\" : \"4lpp\",\n    \"ethnicitiesTop\" : [ \"jebtwnfdzicuet9kc3ji6x4vyy3tony2qb0v8fqq0mc7s1xf5mu60u1fd97yxucr2906pu9z9qp2ngef4ukhlv4unvdx4\", \"8vkin75srm5m8y1wx3rt73zgs8fcyohcakwor35ac987zkz5zjnkli7krvuaymh1qxtts67nr5rjkaitl54w2uia8geilm5vcsq59kleixlrnibykvx4t444i3zmc10\" ],\n    \"script\" : \"q3vq7id0bzsfgea1dmjrj20ehrsxr3earydc3czd7n5aobvs4z00w6esfostcgu1r4pq7jv9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2040a58-11c7-42b3-9531-10c0c0f8e23d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.299842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified diaspora names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameDiasporaedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1ea8f015-696d-4375-aef8-ad7bade146de",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diaspora/lw04kx80nw16au1mjag6kled76i1waampxkxlh3ws2v3ckqwhi6otdgz2l3q2m3oqf2ygs8xvfnqojroh0subqyfx8xk1g1xvrlthvodzarkae30h22nfwhc4zkbstpaanjmaird9vq4zynd7m0ond4wan49r5u1htnkd5ctp6seyqyn863gqycdl38w7c8/Newton/Denesik",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1ea8f015-696d-4375-aef8-ad7bade146de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.297968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    }
  }, {
    "id" : "8ef1307f-63ec-4a06-b1eb-dabd24c91418",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diaspora/nbz4ggtkaie6fqmdknr4bigo63hzfw01xwfeatuo3k2fpec2kdgshvetaj28n/Ned/Simonis",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8ef1307f-63ec-4a06-b1eb-dabd24c91418",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.297893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    }
  }, {
    "id" : "26346f03-0035-4321-a468-6d2e1c5690eb",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diaspora/pbexisigw6rmk9qupgh/Rosalva/Ondricka",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Shaunta\",\n  \"lastName\" : \"Olson\",\n  \"score\" : 25.370597097767845,\n  \"probabilityCalibrated\" : -0.04293538249258777,\n  \"ethnicity\" : \"Chinese\",\n  \"lifted\" : true,\n  \"probabilityAltCalibrated\" : 0.6601236439706955,\n  \"ethnicityAlt\" : \"Japanese\",\n  \"countryIso2\" : \"lz9bf2nu30557az2twvgp9w05vck9g7cpa4g869jqy82bxluvhscu5f3ypzw7i89nvbkv5e72kwu1fel7j6g4lq9qx9wbqj7m6e1k\",\n  \"id\" : \"46u5\",\n  \"ethnicitiesTop\" : [ \"8wihz4l37lar2ogvlrddym87fvcuybw0rbrajdaoruhgxdzajvypcnzstyik97rpuwtjo10akn74qifgv4zhi040afhlpeptoxtxgtuldpz4m8cscu3q48cfoecaywahear45pklue6mt\", \"n7cf85yrjw3tapmou309mwpk3ilxssywidkrsbg12lmdfcxclk1icr2ccrbw6dmw5r7wqd0qt8o3rczsiobogh9to\", \"s25z8yqm5w2xzp48up2szpr03mc6mnypux3da3k7aur6275srd1mi7pc4d5kbbegsa049nceazpan99yh89fn0zi8gwp0b6r8wfrq8tuxuq3xl8zg6pira4k\", \"a4untt7t70tdq5mhqhnd2zp9tkbspirmm44ht3hst0lbprn4w0ygs0hm1qkqilyd\", \"p3c03x36tzbxszc87dp\", \"7zvankplluh4tttxwu5cpadzj6zi0v09a5atovehcevdc4buvpp16xtrt81v1dk67ep77qye22qbdjeov9otj4i1szvamp7ufh1o6jli768dvp1jcoayi\" ],\n  \"script\" : \"q2f0ofi85fezewssc6psjzp3teyft9l9hqsmniiuoyad4qv8ujufzn8lqcm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26346f03-0035-4321-a468-6d2e1c5690eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.297799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "countryIso2" : {
                "description" : "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicitiesTop" : {
                "description" : "List most likely ethnicities (top 10)",
                "items" : {
                  "description" : "List most likely ethnicities (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ethnicity" : {
                "description" : "The most likely ethnicity",
                "example" : "Chinese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicityAlt" : {
                "description" : "The second best alternative ethnicity",
                "example" : "Japanese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "lifted" : {
                "description" : "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "type" : "boolean",
                "xml" : {
                  "attribute" : true
                }
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameDiasporaedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ef80a51b-a1b3-4210-91ed-b44a34901d37",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ef80a51b-a1b3-4210-91ed-b44a34901d37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.297313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "5025206f-4bff-4308-b1b9-4a4e458171b2",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5025206f-4bff-4308-b1b9-4a4e458171b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.297296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "9a08f0bd-f83d-4024-8161-0921518b77d5",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 400",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9a08f0bd-f83d-4024-8161-0921518b77d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.297278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "64b7ad5b-087d-4c2b-b294-abdc85ffaf53",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"country\" : \"Brunei Darussalam\",\n    \"score\" : 47.05118700187884,\n    \"topRegion\" : \"qm6nq3wp4fpf2jjiw3czg4y\",\n    \"probabilityCalibrated\" : 0.6142461563984476,\n    \"subRegion\" : \"l7re9p5wi2herdxaxdslhwwa2iu11yuiadznwkpcqyav9no46bpgw2t5vwdx8651dp7wtnwb50oou9yyv9yg8m68tzww0sil2y9tlicf3cdhrt62taq2w8zj8qz17enfxx4xrwy24z0bwmd567xtt\",\n    \"countriesTop\" : [ \"7io39x0i1nj01lmg526s5c8ojbeakfwli7gssrt0dacm7pq0o9zahfb1jz2c76mv9et9wt3te8193y30x85nz10\", \"0fi8j81wx3lb5gy9teabfnohs65qdasyu7elyk5qs8a\", \"emqbuej2sjva9jhhmh2f03dhynpcgyuovkh1sdhzihr6fqlw3xzo5bqhape7gqwjg3dpkv3v1uy1k4urg37o1q9hw6k7wb07za7qx5cxj0jn0dfmr9bc84ye0epc8k0s1ayy49t158qwevp325qgry0blbzipp9n6s1ksd6ofy38iknhusfldfsphjx9m6ag\", \"t2b7kj6oy24yeheeppn82f66mrjbg5l5rt4kpsgt00n3r9c6au6icpe\" ],\n    \"name\" : \"Dr. Erline McClure\",\n    \"countryAlt\" : \"9ieaueksor70g07syezdr9tc5wo7m190daus\",\n    \"probabilityAltCalibrated\" : 0.24448509143378216,\n    \"id\" : \"64ty\",\n    \"region\" : \"u4pn16chnow5ezv289rk7mgv43lnc4fc10a0sbt237tor4hhbxh8xtadzsaxuodifrn8d14737niebf5gst9iqzhp4ll82za0ifwg3xjvs5u1rwizd7gjesyc7fkroj049rb0io\",\n    \"script\" : \"qnx1wsifkt0xk6ffkvx2s7qtu700l1x06d8y6gejl49kjiqgj59n7q5e20kulhcxqzv85rxmzc3qfs2upwbg35tt2w5woeptegpsdk8ex0tvep2t8w58fgc71hxkuw109x62xq\"\n  }, {\n    \"country\" : \"United Kingdom of Great Britain and Northern Ireland\",\n    \"score\" : 18.224607548177573,\n    \"topRegion\" : \"oudw9ky4m4t4ub9mbt2ljzbk4uj9a3tc9jztmks5ud12hjpp69ui4wsjeom1d30guk6732g4urju\",\n    \"probabilityCalibrated\" : -0.22247977957780019,\n    \"subRegion\" : \"wcdqjjq5e7ykshwv50y2kgf8o69vypt6kc6khz0r0nxqbbm7t9gyq2z6bmbt5g59qbmyvxbj18ul7vpamf03cd1tc1k22vps316f3cu57944n76jwy5t0fuful3pin09fqabjmu9kqnbgcx8fqlk5kq9rwaaco7u1m6fm12r1gjfc19ru4f6k68khxspw\",\n    \"countriesTop\" : [ \"u6ck15mbp0dxb9im8nhtwkj2pbj9vumohvg4ro2ldbrmnzn9a9a5qr2i62wi6dqh0izc3wzss7ldekuexe8znyh5k6j49cur12l1rz\", \"6d0lrkh7qc35fbhhrdufa7ldlkcmh9x9nnwr7h6qdazkvc0ntfhaap5acep0w9h2whzp9y2h5wuduznrxao8b1r5y9vlbfh7cenop3am5u4cbu4i6ey1jz3cxz5y0o3ovup0bznz9tswr2y2h7gknfdh7wwrt8pt2dc4an06a43qrecgd\", \"uzuf9fw3jjrqghy47yffzl1r2qzke801uff6ac4rjvityuu6r4dje592d6xwdlbyke7jwcq7z3pj7o84ow728fhma00uo95pofhqjt5hu7as5zwqppm6w24483xsu3sivox7qwkaco79kyy7q7de\", \"rjdd18lgwtc1rcb69yrp8nz1i9kbdrjv77wt6bierk6l0ou6gdvar92yg1luv\", \"dvxfwc83cwzu8uwg8diz36lb9ai4rq8uk4qa8ysnhj5oxfu03dckd839zdekvlcmkra43ud7go39e6tqpcz70x6ddqskpkfuio18r21gap9mtawh8watkxw04w\", \"ne8hy8l2lvqwc2ql7nusstld8b82er7gh5v9jvnez7614j35e8vymxd187jgl7qabw8ek0laaiyxd78q0ay8rcayzod2vg7ryflxxjnf6nezdyassp6h2s5mdkhusqz84gteftwnrrbkljtoqq3qw0646v\", \"2x9r7ngi9tzd79ude1ycbx113o38geh5kp4rfwea2uqqvzuztxaaqifi86ijhpsodevkifjo0c28f4ecygh2invhgrxyg11vnbb587ruzho42w9m65z82\", \"1v2x7lz7jjrjf33aqge5omlr3aqqj2hkz8c2wn1bow27gvtnvm5qbf9vtd0it27lsckzvdgk1yrcwfva1m79\" ],\n    \"name\" : \"Ka Emard DVM\",\n    \"countryAlt\" : \"5gj5eh84p0rk\",\n    \"probabilityAltCalibrated\" : 0.5677238009189955,\n    \"id\" : \"96v9\",\n    \"region\" : \"b0sr2011pnyc9\",\n    \"script\" : \"t687j26na92vgzk0xaqmfu6sghbun00jxgx1shddf5x4143sdrssfgw1t24mdaefeupo2ms8y1szdlqtgr42zlk39undaubun\"\n  }, {\n    \"country\" : \"Cabo Verde\",\n    \"score\" : 46.18764922871094,\n    \"topRegion\" : \"xjvsy5srnip0r2u54tyjepkcepz9v2eoijzzjw5pk7r2lug\",\n    \"probabilityCalibrated\" : -0.6982177986670763,\n    \"subRegion\" : \"rydz1s4cy4uce4xh0pprmcfzf7q5pmzavwp6jnk365l49rcho02ga8yg0ckuay0zo510iyyo46fvp590r8fz1wk\",\n    \"countriesTop\" : [ \"rbbjuxqou4t615hefbxp1a\", \"5ntwqf1wymoh2qk6unv3pz675e5nvavj4qwsnou5er5nkfo0eg92rmh9bh03z4c1uz6k7u3my8oubekmrmzkj0c1a5tue5fxz\", \"1y83wal4gqrfxsiv9j4nh6p0yx9lazhqweq0x1nw8n6kt4e1h5wgibxmfl434z92wj9vu2t6q3u0p1r5xz45lhmt0zbxw1wn1eabr162i3526otsc9yl975rh5fbu05h3rk407w8593i780tzahgmamxu4rekoi\", \"8vumzpg7f036354ianw4189tfv7rixl7b3bzioskds9i79tfplsez1vmexqg21w6whco245x1shvx2fcb3ffl87nsr3bz5jqcwl6n86ofaxqlo35o9ziyiid2y3iz3xdymxnkdvy63qimc06nbp3ur7gv6q8jte8c9yxr65q\", \"3058se51txb7moka6b5c6nv84a3f8wmk2b1jbkhvrxoqw7si8351plnpdsi663ihoi78289gcwh6i5karkix1rjb0tyh6t3txyz8xwroeayhalnmbq34jnkml2ordfunm51m75of38t8pm26xvs5meyu9xfi652u\" ],\n    \"name\" : \"Lee Beatty III\",\n    \"countryAlt\" : \"lggbxqjj8r6fl4ud52yoykkrjg0emwwgqh4my6u5532ncqlbiz86lwhyf04a6mwtkvdcmz\",\n    \"probabilityAltCalibrated\" : -0.6306890326655452,\n    \"id\" : \"2qf7\",\n    \"region\" : \"ohboiq8zv\",\n    \"script\" : \"ks5cvz7utolqbjmkcvdck1h3by792zqx3104chlmx2lybh7slbtibvo5afomfdal056kky76se60uc2lfu2iibuobf5qaxlz\"\n  }, {\n    \"country\" : \"Lao People's Democratic Republic\",\n    \"score\" : 91.87087631091826,\n    \"topRegion\" : \"250by15xlgcy34mfzdk47auh147quwcqmlc02t1ndo2jiwp9zhgrfe32syw1ns7jxwtqid9rgp6qr291go2ptkhikmshkvw8tve5uebkqnf\",\n    \"probabilityCalibrated\" : 0.11291368366234167,\n    \"subRegion\" : \"9uhcd3i9txtd7totawtewd4okje1vxbomfj2a2nlcn84ta9hpim49h1drdo3x59l97ei74e17v\",\n    \"countriesTop\" : [ \"phtus9u8tkdvsu6wkg7ofx3hhgagmj5lft1yepbx38u2njv2xrzvlsvf0wyv69tm2bwos\", \"o4kw\" ],\n    \"name\" : \"Lila Baumbach IV\",\n    \"countryAlt\" : \"ufjjtt3en1sxw6okxa9847rmxqez0ed17muceiu6ic1o4bffdl6kr38xvhicfznpkvabwhzchsgomaddgivxt65rhm6jlxu9lv8q7q9nan6bqs2os33qa4fc6wao7cqtueszn7ecwhbvb0qmrw78et0dyo8ataym8sxgnhtebci6i55jl\",\n    \"probabilityAltCalibrated\" : 0.06638988324785755,\n    \"id\" : \"v4v8\",\n    \"region\" : \"gt5fnhb6nd7zxjj0ldewvj603znuko8766pw9dpqvo2avkv00i6t8hxpzrcfm00c38q6o2e5rxvlx70jouam13xqsr10ojb63wcbs4ma6c1egty5dhkz6bf9c6i7erg6uz4tlsbuidqz38l0bbucannb1h4n9o1b4swy9xfkibhrjekd5jeipio\",\n    \"script\" : \"r1nf4fpvpp26n5g59b3l7385yvjsafxup9g5dqtttx0x6hfu3j\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64b7ad5b-087d-4c2b-b294-abdc85ffaf53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.297246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified geo names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGeoOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGeoOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "3764bc53-3cb1-4faf-989b-9e64a48f8c19",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/country/y2hhfbrl0a8m2idxflk2f1y2p9xay85zpgvzxhm50p8ygzqa2ww3wq047i5mhancw6u4d7lfh9a6mz0sd38fcj833a9epodjh9zaibv41zukx9u5e4eorj2ipby05j1b9dxr9hirx3cac1p57f0din964nzm2lgl9q4t1fzxdocukc",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3764bc53-3cb1-4faf-989b-9e64a48f8c19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.296128Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    }
  }, {
    "id" : "c7b810b5-47f5-4b0d-9da8-f12b2471ddbc",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/country/07az23s0s7v0iifzv9c63u04gkpytzyuorkr59l88ah2ul9gdkn6xj3aylvr37hz2frpeqysbu1kos0buu7zatkbp9t32hlp8z3u5yker",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c7b810b5-47f5-4b0d-9da8-f12b2471ddbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.296094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    }
  }, {
    "id" : "8412104c-7400-4eb4-b956-2181f4b678c2",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/country/ypmwvs5a1mwu6q3l01o68hgzt6kko6hy9354rctiobtudramh71wuittgt30x6aixqhtnw8efhjcscujqwgx8k04rbptrpi5oqofpi0yx9ll6u74f349bshh8h9ybqtm1iummvjke3c31jq219ucf4k33fk",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Viet Nam\",\n  \"score\" : 57.30283258917921,\n  \"topRegion\" : \"11260myra7ys3hhvnmig5pn29umxrjo6kjqgpybd16s64dzcyjlsir6uvpbzlv8c87ybb6dxx3y9sy61ov6j52srxy8svzskx1mee7nn64tpu56tcw9nwhfsjcrwp6eeqh15ls5oxnpm1909z8iaua1yw2pnbxwhsb0kalrchyacb7f498syfd1ddhpphbmim3bfcjuf\",\n  \"probabilityCalibrated\" : 0.11193765949141787,\n  \"subRegion\" : \"bmadvznbeuieconkyothc\",\n  \"countriesTop\" : [ \"oilmsrrhnsljktb567ks0hz3hdgtnieu3jm4apizqnfp7uh89g2e0m1kw2qwvz64boh4pxpr4phjg18no60lf8\" ],\n  \"name\" : \"Tanner Little\",\n  \"countryAlt\" : \"kb2pbbt2oh8hgn1ntmm1t6l2azyo4k2v022pgwe4820in8q04t7rop2blxst6ys96xehnth63iad1bh96tz3sjr6l5qnd4m61byvshc7ob\",\n  \"probabilityAltCalibrated\" : -0.9175633736050266,\n  \"id\" : \"ic06\",\n  \"region\" : \"sghkxgry458jne55syc0poaelgend87fligg4a4800ts3kack2wg1clekjoq6fxnkc2oye9gbs0euhziqnw51doo7\",\n  \"script\" : \"kykvl4ks9rf2hds7zz2jh1d6zzq7en93h2c5o7o1ho17qnnv44w05azy6r299u4jzotizfigd8l7tjae8pax4ahdx5fhphkwty0tb8hc3sw866\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8412104c-7400-4eb4-b956-2181f4b678c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.296045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country",
          "schema" : {
            "description" : "Classified geo names",
            "properties" : {
              "countriesTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "country" : {
                "description" : "Most likely country ",
                "type" : "string"
              },
              "countryAlt" : {
                "description" : "Second best alternative : country ",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "region" : {
                "description" : "Most likely region (based on country ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegion" : {
                "description" : "Most likely sub region (based on country ISO2 code)",
                "type" : "string"
              },
              "topRegion" : {
                "description" : "Most likely top region (based on country ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGeoOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6d9698c2-1936-45b0-b4a8-5daca7bad7fd",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6d9698c2-1936-45b0-b4a8-5daca7bad7fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.29557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "3a819c6d-c699-4618-94c9-e1fd22505d20",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3a819c6d-c699-4618-94c9-e1fd22505d20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.295553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "19ca1a2b-1aa3-4339-ae19-fb1aa8a5201d",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 400",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "19ca1a2b-1aa3-4339-ae19-fb1aa8a5201d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.295534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "232d50a7-9144-4d77-b5b4-e794a71634f5",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corridorFromTo\" : [ {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Dorian\",\n      \"lastName\" : \"Emmerich\",\n      \"score\" : 84.82696698935682,\n      \"probabilityCalibrated\" : 0.5023001947700276,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.13899369279546203,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"wi2ecicr90bgyij2xphukji5z3umtb8ojnysq2jl8r9v9af5c549l3snvcf1i3ryrfdphwl1h7znq22genjiwrvuy36otfsacna27wyggnxl3s57bjjts0b961b\",\n      \"id\" : \"cb4e\",\n      \"ethnicitiesTop\" : [ \"u9l5izz0u0dythitwfepnoudz9144etfjm2ra3kcin0gbjsuq1su1f2zpvfs1d7cnuacrvhfky1ajl8rv\", \"jl1ptfj4zykgu7yuksby8iki08ja7yt639\", \"3p9riq8iferf5uqtnhq2d3j0qxbs076h1a6nirg2fictaszfpfjg0zpm8im9zyriwvo8qcn31i30t80njjulaqvcvm\" ],\n      \"script\" : \"2w8j0swuzw7jj9b9va1enpm6qmac4qbkadfd0fzk15eeh4ypaky1vyfulxg5hgvjbxiun9gvu3tyjqf67jo1aydx46ls1obl1sc3muvnso4bytrynjvktiaizcnjrak2o1ttkvrjglnlx0aep7zhv46yut0u8r5bwy2\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Federico\",\n      \"genderScale\" : -0.2543343511706868,\n      \"lastName\" : \"Bruen\",\n      \"score\" : 20.224060469448403,\n      \"probabilityCalibrated\" : -0.415492545138912,\n      \"likelyGender\" : \"unknown\",\n      \"id\" : \"hcaq\",\n      \"script\" : \"phutbavl74zxb7hesck7vbfbcq5zz5wm72f32j5jynmduh67yppnh5tqms3kejtb709adknqasyku9s42hlzi6tk\"\n    },\n    \"id\" : \"8x60\",\n    \"script\" : \"fb2rrn4zopcsy0ulxzmreafau\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Klein\",\n      \"probabilityCalibrated\" : -0.9832087986373004,\n      \"script\" : \"76784lynibiwvueqblesc0ae9y8gjs598is68vgz9ilvyjbbkhb06e3ab216a2gwmwfa8nq4706su05s\",\n      \"regionOrigin\" : \"9n85446x1hdzfy0syabdoqvv48mnnc8qsunp37ktn7x06svsu83h1p1nl5k6mu72x0qr82ghgoo9q2t8mfsixtnfvs5i\",\n      \"topRegionOrigin\" : \"k13y0m8c675tq9bo9nm7j6sc6j3z6zygohmxc4cerfzpf8w7th6ztu7gwzmjklb0q2sz9ez1k5wtciu4jyutp773loykeqql9fxsavtyehl5iao1n1k3nt5ixkl0\",\n      \"firstName\" : \"Federico\",\n      \"score\" : 95.07109357848041,\n      \"subRegionOrigin\" : \"911bahup1u3hasbnb8nx3q4d17t5hpiuuwlv8n04d80hf11o0asf\",\n      \"probabilityAltCalibrated\" : 0.45836660504301574,\n      \"countriesOriginTop\" : [ \"t93yauu9zvc1z2tgsueq1y5hjt0photsdwc290938a4iuenet37d7rzst0vlycdop9i5v57cz263pn15aarcyebtepa4cffeibxjoq91zdzoktwg0\", \"ri1oomg1r95jbbek06r3w537d4uidi7i8d9zxj1gg93kut2tdhtvbs980uhwajqtadfpf5o2h97wg94acko4bndlxktwwh45r4ralurlozf9udwvhf7bnfwpij2i\", \"gyso5dea3he8wdbubg5d1gfixg7knepl8kcxa7108ehiet3ivplg2d1g7wg7z6mlodj6886r8bxcqyq\" ],\n      \"countryOrigin\" : \"xyddsm442oyw4ogzlahbcm1d8pkbmbffxzk5fml18wyzs8gi7vzjc0gognk70441pbhp5326joy71mrot7g6idn0tacs8gzq025vzg12p740iezj983vhwbhtquozhskmqnpgbum3te8okavy6dvtzsrfcpr95edvtnv1efox739iftak4sx781jab\",\n      \"id\" : \"15h3\",\n      \"countryOriginAlt\" : \"cpoqd4r38a6gdhn8qvzosjye3d60ksma8skg9agii0110hh78pl0pzvhjkz222y7tpp62hb1yxlob4fzm7xvbzw60hozmkpjf1fmeaiw5u09oi\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Lula\",\n      \"lastName\" : \"Strosin\",\n      \"score\" : 82.38818020372359,\n      \"probabilityCalibrated\" : -0.8284953202303564,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.753978183416411,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"wbnvuljuo3od2r1yudkjufw9cmqx8zkbx5s8u2vywhvzu4wr2ov4bb1fr8ty5ldcsaols2607ohjt1rmt89rrzfqapvd3lg3k6n7cso848j33kf9zihffvm4esu3xhwj6bwk1gdy7888j7un5ugmbwlce2v90n\",\n      \"id\" : \"14t5\",\n      \"ethnicitiesTop\" : [ \"prf8o2ok3k0i9ovcv0l5cpnm5mfs5wlpo2h91ph2y5xsw8efn01zvv32npe4iffg0vkzvlm4j5j\", \"89ey0wx4taqpw2ut961z6vknx4s27c3y8un5htfhsha6u110tyljtl29yl7nfmhgtufzj1x8almky24egoedj4oryhfaslunnzumj3tmahcyh3fj6kbheu8dejt12wogm3bgpbpa46n93vmgry9e4p8074pult46m7jqg67d5op5sups4\", \"0obc99ij07yorf67xovnuiy0n5fzywgb7za4t45hevgq12r9mllbhqqk519gcib4nvzlspro4gengxosjcuw1uaucvza4pnl67ati5nrliuoeusox9sw2jb01dmi2udygiz3nweb2c8zlowqgw9xwkcvveif\" ],\n      \"script\" : \"bt9wtdjb1uit50ueufkoeb1h004s6dst4tq55kdtcs50qfq1m23cel3wh20qecy907npzu5m066yta4no94s67qkwd29u022l9cu76ca8vnaoabp4lnwr31gmlbco3wlxol5lqlblkhxh9cq1un\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Chang\",\n      \"genderScale\" : -0.7714583219642879,\n      \"lastName\" : \"Cummerata\",\n      \"score\" : 20.6023301800508,\n      \"probabilityCalibrated\" : 0.9635169292921086,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"epe1\",\n      \"script\" : \"0ezv4dw9qb5jc45fl93jdboy6hf1dsz66qidqcxmf\"\n    },\n    \"id\" : \"fvtt\",\n    \"script\" : \"w05sq10yavz10os8uziubdtmwu\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Rodriguez\",\n      \"probabilityCalibrated\" : -0.39903147965056607,\n      \"script\" : \"aorzyhd0fxhxjc1if22ghlbkqxq43myu3zxfm6mnys0onbp0m5hwrlzrnietl86qh8mffemwf2mzxca1kxae485fwt59g95l\",\n      \"regionOrigin\" : \"8i74ictiz7vw2ek8jgih1h6ilrdg1ipimcqh4rond1b5cvb9hviadvmf4fg8sy3sgqvg7q7tb4qnu82p44\",\n      \"topRegionOrigin\" : \"cgqumbhuoko9sgwu0av7p0erxn3aq0baqxhgff2f8ehpjzq3z97gxk91qbdwj57n23btj93grsxehbx1p9tld75i0b9keya47w4w5m3a5cetyp197kj361qe6dvk3vrhrn1ppd7pt0n8mp\",\n      \"firstName\" : \"Bradly\",\n      \"score\" : 69.97389532952269,\n      \"subRegionOrigin\" : \"92opk33tvuhpy2gtuyhlps3j5zlcbbhx94ysiu2710pgmblzgn3d\",\n      \"probabilityAltCalibrated\" : -0.25694749887951107,\n      \"countriesOriginTop\" : [ \"t19lwnivu0xloy7j28cyilbs7cs51xozoz5apz7l8d2hbax3790i6snjm0sl2u81\", \"f8yj0\", \"2f48rthgtvlmi54d5w4p725v38lox03bls9llvny37oes95dumlxgib\", \"q1ybp793clmz3p4ufnulrj4ol466mbpgzv1ifyqnettej7c7eo01g13f0nmlowkg9rde0cvl3xzswwgfcslzr4c9kr31oz6hphzwlt45uf87txl6epl1z7y7bk82nuj6\" ],\n      \"countryOrigin\" : \"1bbn7s0wqjxq1eyna2b1jbuikmtl78btjwb86gyyehm0q97oq6u7oyme3ym6ewif79yg6vpp8gwl905nld3p4q8hmlf46edpzqyy0x0xko32amehsajc8uq0lvyp6m8rcb\",\n      \"id\" : \"hz8j\",\n      \"countryOriginAlt\" : \"wjtjhi27l3b78d78uu5hp44uu6mm5rbf4a5b3li0e365kaosxy4sqhj48wyzby8rfosp240rv8lyyfzrswcjba4yw88p2qxurhlm1eyibgfatlzdjqz72as\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Karena\",\n      \"lastName\" : \"Lemke\",\n      \"score\" : 20.429721487701148,\n      \"probabilityCalibrated\" : -0.18078127183760917,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.9604025177340345,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"3dwwc0rfcp7syt8eliv5k7n7q00a25dvayvck1h1jsjsupz0i4vmjwkglilmynzabpxzc6lj12m6\",\n      \"id\" : \"5i4d\",\n      \"ethnicitiesTop\" : [ \"a7rdofqpu4edc533h3vn4gcfw\", \"p0fwyh0cd1gesrgoukzkfwcr25aghvrfdvy7l18oe8m3twt0x729r2dh8h9oeyz3brxsb22zexo07btg3d271kt5mgzq6v81nowsq9ehgk6wd9449fcytuqe94g1k0mgceayguglgdmfda2xiro1v\", \"gibap7nwnvncozgoeorwsyjtxgheqsj1eii052ewaouz3g6eu36zcav9mt5slg7xth5gub4iq4gyvs8e4bse7or17p5dk47evfffk4fpsz1wpmphkkmd9pn5uy\", \"a2qp72c2nttb8mttz64jb407ktdsclxus4w0iqn4usoa77ljo8vhczm\", \"kosl3d3ou8nnz0pmitc1apjnsnq0f597veb3xwip00hrbhn02vivmc96a12c8rpppy9y5ugg3cwp29ti42m039squolt2fqv4843szplykn2opuefhsa87vae\", \"drduqysecynoy0hjinxlivoplfxzfnmuhldlx3r4i54vttpf418w4abh7r4b6tfmu4gx20trxfmsyepvsc1zdii1rh98fiir2nwkx4at0xp\" ],\n      \"script\" : \"xiqw8slnt4hem9eh442t66r1r8nmcxmp8bwwdvzxk1xroxwhzzphuu0wgnucnmtrc9itd9rygvc3yk9ud2354ikflafnlb1kxxvehwe1bodit5pfnsxy3hag3xz0bafuk6goxp6sgb6l95sscxq0c5fh9x6u2\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Carlota\",\n      \"genderScale\" : -0.01723718317558398,\n      \"lastName\" : \"Gutmann\",\n      \"score\" : 99.2802281639891,\n      \"probabilityCalibrated\" : -0.5942835458045914,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"y1k5\",\n      \"script\" : \"q42rbpybc7vpj3z9i5u91pgtiqomsll5m48ch7sy4lggo3n19m2mgfxqn44gbnns1y2y5y7v39ck\"\n    },\n    \"id\" : \"olo0\",\n    \"script\" : \"jox6u2dxwcsagqdsf6karf3v6ytfbee0s44vabijvrwxftandjiuo8lzb2ahi6slkt54tq720oy8ftlfzh7pn5ih4186sd8ld7gx5ix5v6cwk0dhkvdllta9zsem9sglb1ptp3nkdmshypibln6ms8ks22idpv08o8cl54uv6c4\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Kshlerin\",\n      \"probabilityCalibrated\" : -0.6440372503231022,\n      \"script\" : \"br8ydcz17f52aihr3aw7rrhny3xezo7rox4fxqa2szdbxcfwv\",\n      \"regionOrigin\" : \"tlzx8vjyfyo6c9n0f3pc1iy91z8haq3i9xo0ul14py06o98zo4lv6paaz8a7vqwoc419fux9kl1ebo0aien\",\n      \"topRegionOrigin\" : \"yj9csax9i7jox4cflv1itztxx4zijcj7p6z5szn8rgtf63fccjuhg7pypkrj6eqbqg9r3cl87u4nkuaj4d9vl1x7muqk0kff9jnhflh2dt8qnrptj5j\",\n      \"firstName\" : \"Gary\",\n      \"score\" : 3.2768596925731197,\n      \"subRegionOrigin\" : \"80ouziyhd0uof73i8xy5ql0rrdkdv1b59le461krunpyafmd6uitlobdrj3m0p2lyz1q5acyrjda5lhvzud30vq\",\n      \"probabilityAltCalibrated\" : 0.7035270393646265,\n      \"countriesOriginTop\" : [ \"e8ang3800xi2hidnajtrq092kv194rl1v59v5thvlnksbn2657fnn0usezrvso6be824yt95kngwdtb3ge82mwiu4xiau2xxmt8ufjd86ajesxa0uqcwu1cvu7ag3qvkbwndwc5hlgwa4xtzs9sq3\", \"4p8zcp6ezlgzxxrdiwn4bz7p6hcjvbhacrteroycnxl5n3m43h9f13xmtj70atbmzdqayvf1g27ericry075h8aw2ktgjs69nuku1gd9egjfgjxi3ib1kqjfmwcgc5tlygsbwfhotjtmel045hbrp\", \"amxsa2ekou1ktdtkap8dh2hwdb1ty479cpap57qs592r6zdz6mgf87c5lbh0ffqtnyaq\", \"swcot9dv6p67dgsse4z9tmf4v6kurbctx3w8h0z1qfa6q0ovxca98vm3lqelm8ot4x6vu0hequzd7wpt9th83ekb4suxcsgnqubkvv8e1sisfo87tv848u1o8vi22egq962kppks7e1p\", \"dagzq0laqbt02kfnmi5ujp4sfutap8m0tm3wq5l6i1l8rpemnvwnqdwvgbdo\" ],\n      \"countryOrigin\" : \"lmqjdk2j41xo02t701s6h9kjhlq3s2qh7v1z0cfgi341aozfbuhls\",\n      \"id\" : \"19fe\",\n      \"countryOriginAlt\" : \"uqawqjq5woirhly1ln1zq7gqff94i1om4lp8xnpjpm4nj4s1ta3oah38qrajh8u0zqn2nfkjo712s8ye5maxuprint57xf2ecy0uf0f3yr3ska1ut6e2vwdu0lqcqph0fvp1eydg\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Prince\",\n      \"lastName\" : \"Tillman\",\n      \"score\" : 79.75093770888407,\n      \"probabilityCalibrated\" : 0.47081015918663915,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.6282752458892695,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"g6x1i8g7ecb7cv3ftf3a5opvrqyhl064asmcj7y77cn6vpet43bwwksfx2yc6ta8cuv45ovk45c3wfxh64dg23l5u4pkv0lwnzuvo79oma1vm8whei39unn9q91x0snflgpur8tdpkuhizhrkazh56gbewk6so7pw7\",\n      \"id\" : \"12o4\",\n      \"ethnicitiesTop\" : [ \"m9vi1yrrphbcs090gvyb8fpp0lqhoien7ugshcbju50\", \"anlytil7ukpotjwhyu4i3aab5nni6eqblw40xmbdzlvqoi\", \"mm4fmjcfklunahaal7kv57nwkvensrrs\", \"2e8vkbaujrh9zsklyekjqmhom4c3r16nljt3yjmls2e37ge9ppnj19wans3ohre9caahvr3buc0or1yyp9ksxn53is\", \"p8yth1burb9qscbuizp6iym49swvrmgeldd0ir83c7i\", \"1y8alhfq5a2wen2t29x7pn6ojz3vi3bcfalizui19qrjf4fwxo9potl9um1sj2yp7x5fgqlpc1f\" ],\n      \"script\" : \"8zsz5h01gwo8miup5k88oxbvg6sw9tv9ucjzag0rqgjev0vbiu53h0eslchbe\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Selene\",\n      \"genderScale\" : -0.8486653658723724,\n      \"lastName\" : \"Daugherty\",\n      \"score\" : 54.27139881143731,\n      \"probabilityCalibrated\" : -0.16317125331682836,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"ol89\",\n      \"script\" : \"60ajkj7ewdcvbf4qvanf9t1ww56ggdabsctpp08fnoy4a53tzzi57k0sdnpn4wnov7h78e9a4n3u4zus7x64k4okf8xd581yntlllr5wzv7tpvx7xxe1i3gt1cf2by2ux4a77yf413c11n0l7rnx3uqxzqm5h15r0anlgjdndsfuwa\"\n    },\n    \"id\" : \"njcq\",\n    \"script\" : \"suaw7g402sli26bq25kupah497c6ro29bd2q582iy306l7xxlciibe41uwptbj9cw2jkxpej18hu7i7u9n7cacyvsi375ylxrgausas6fn0nt2yn01cjekogfo54cs\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Walter\",\n      \"probabilityCalibrated\" : -0.7352169001492408,\n      \"script\" : \"8uzli0wezz9wghwld0qr5dp5vx76w2nbizas6hqt31mveznjxynkcra4gd58xynt2jmoilanaw7ymawou1p53fpdifxo9hye8u6nota\",\n      \"regionOrigin\" : \"91nrlc\",\n      \"topRegionOrigin\" : \"tb04qdc2vrw223ij6ra6ez19408w6slrdl2al1ny6ssh\",\n      \"firstName\" : \"Dominga\",\n      \"score\" : 66.52169025653116,\n      \"subRegionOrigin\" : \"fzigme633q6d6z9nql6e542xbs5ljf3y8mnptu45vx4qxk3swegm4yffl17bcjzy00kymkhbdccg9p5a3y6kmh52d7l69dcemg2yzmihfbtbbxnwibtr7xlwmjfdmdo57epddtdzpw52kxis18cw7atf53ou77u2i39wnswtix9hyiwx5t5j1sf\",\n      \"probabilityAltCalibrated\" : 0.9554692132279039,\n      \"countriesOriginTop\" : [ \"5aatwnreeh32k2m97oenkq7vlkiwz6v0havammmo0kuf1p2gva6nr0sniyb4084t2z7erf0v8yfk6jl9trtlndj61xw3i2beq11frhkzkminfrgr9fi97tfrgrxii5kzz0iwq5g82g9i3egn7vx45h3gi6d8opvc4oca3imx90ugbvr6k9a\", \"qd083omhvqn4yvuhvcypg3cooqkroqx0d0nkxvz6x92eyp\", \"mwiu4v20o4kumr3ft2ypq7gjqchdt1hiadf9fy0ihvojpzmzukzcaqcakfxwhgyisydggajzxm0i667h5gn1ihf7n4k\", \"umldmydpuz83l8d6lngrfhep7jwg3temrtlavcoiw1g4gvrtdchlmky4fw7ia1nz3die4pzbq22g1ddlyl703vowziefe3f7h4092skkfeqqr7smbb9p4027haw21y9ul6mhivxy\", \"twx9c6k3jrcic4hsst143jp9t71gbh0lxndrkyn59v4sqpp6x2exf0iquygikb5j84zcftjyjicynob0sg27ghhobdlmitmnsijgnd36jwfdcrv7ptz2ia0siyvwe5e\" ],\n      \"countryOrigin\" : \"tf0oxicj9d0boqq3q6ipep6jcrfc3rl5vnz85bu3grkas4hbm3iict69fveqbptfy35gdrio4ygrlbrw1tvijya1qd0n6mepaofw9fjpzw8tz60rr82c09x4po0y3s76r9b8g2d6vqx7\",\n      \"id\" : \"8t62\",\n      \"countryOriginAlt\" : \"qqckmud21y5q3e8uf9tgut54bhvg20ds2wxfd5ltjhg561xec5r4kl4izwwjgbphu7t99zgtdh4pvcvej1qsbycbhjv5wgtjl0glxlescsvdk8kkgvau4e27qe\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Columbus\",\n      \"lastName\" : \"Legros\",\n      \"score\" : 92.36366529691809,\n      \"probabilityCalibrated\" : 0.30786067153965146,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.05844464022815665,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"ge8vutv3h4xriav7gttmehqj5qi1ve7eatpmgdtp8dduzim1p1nc7tym6550h6zk36whwu7t8uovba3wc6w1vr47h904cg5q4jdoim6ugr1eq8p6ojl00egg2wse0ar88bn87xt3wx52we85dzmqdvm8yhx44akuc\",\n      \"id\" : \"h21h\",\n      \"ethnicitiesTop\" : [ \"4eg64fwox7skqj10wrvqpmqfylofnzd7vkujwcc7gcwpfk0ml0l3cd4mn\", \"arifneg\", \"77e9y9hj0fp8q3y3z2ltqmqm3sg7g8gd42cjvp2lpbhz5lyxyppv92f4ebandlc3ael21rc97mfmah2n8curfdin17r3fgeaol784sagr4dn9qgswf55o7cjrknasrxvrts7jipp5x4hxk06aepdki5v5qi0piai2852k5odwlzkk802f\", \"xdv4r95f59qt6z8876qs0q7lkfq0jd63uzd44dmejkfe6odtjlzzt32xwodgh4fthw6uyorjtbkuyug57pldx5k51ns9ia99f0a2gyuzr78qpoxun9blnxka7r6gna2nuerxbxxqv2kxhjfyjzlw4yckra40z0zjk0ja\", \"tky11tj56av9eg4b6ul982giact18k86e717dxj5cvipzwgem6g9k2qhfkq89urnaonm1b4gpr1ukq56ze4kx6hs217ggltuxoeddqlpvua1yylpxuxdko1pn4mbmr\" ],\n      \"script\" : \"bpugd94e7fds7sduq9oyokpjt4cnk1jsdgw4nplzwk9eydvza7dn0szunfiaflonh1aj2nap9vmrf3pxg9leoaj7r043v2gxk95mzo2acamutl08tvoi2ogy8qe7m1jean9s044nb\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Clement\",\n      \"genderScale\" : -0.5754325677458729,\n      \"lastName\" : \"Koss\",\n      \"score\" : 81.30994031767231,\n      \"probabilityCalibrated\" : -0.3286094631596057,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"9jfc\",\n      \"script\" : \"mofma1bkwg98bju4hkl2qoqn2n0hvkuei9brln2yakd134a8kahp\"\n    },\n    \"id\" : \"1j87\",\n    \"script\" : \"t5c5v5uyvv473qwm3rednrefkmx8l3puac78s0iydkabbgi4kp9h483qiwrky5dmkpijewlhwdtwhv5mbqlvk8eabs5r6mwjmvxa5kpf9our98ezhjjkz\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Farrell\",\n      \"probabilityCalibrated\" : 0.4531372730949268,\n      \"script\" : \"la6itvb7e9hdnd8wq91nknfzqdlwyz7x2b8tue\",\n      \"regionOrigin\" : \"hkwlnx4fdgkwkuc28\",\n      \"topRegionOrigin\" : \"wz8tzvkhsnk0lln18i554y5aoqs548fm24j109wjurr4milrkwa8cdz0n880nvdx64wsym9vurqqdbexhzwj358ga8u0y0o3068hojer6rsox\",\n      \"firstName\" : \"Alexander\",\n      \"score\" : 17.853703847798585,\n      \"subRegionOrigin\" : \"ws994mj6qyp02z7bwcyey4wx3b88v79hsht7pkx5d5kenilny8f4owp8s933sc8ipuopynu2sosfeqnq3i305yu7tuda1ghcwmkd4mhxmo511gkrp64kcitigaqlh80m13kee5fduxbuzitruckvmxg4vdysx74o7v8kkwseufylpzmi78t9mqzi0vi8w1ugkr9fb\",\n      \"probabilityAltCalibrated\" : 0.9614537072863296,\n      \"countriesOriginTop\" : [ \"qdp3ujv7hn2jw5mdw2n4knrwkw56tjbbtuhyzbhjceoldhzg9p7yn93dhofn1nvsd1ukm455p88odqvi6gnpf5bxwxalnmz7k9htkwqtmlf45l13zml64i7602t7i85z4ylv88iw1grtpcfn04b55uj3gglj71j1qpa0forc41mm0wrqttlpqjixauxaltezfx89k7m\", \"b5cbjk4or7ii0fy03le26nf4qgfrfjoa7k7vpvyluyga8drur5k5lif2mu6p70np0i2zy0a2k0lo6u2lrdez09v3y2xzde3qkq7kc16j8rnj0egt232p7fmtjsvqfgo142svsdc3jdbp\", \"qq0ofv25q5bynst7pyymp2c8ni9qfu3iv59yivyx24mizpq1nx9sbzafkbzgkebq7s7pd66\", \"cubfb7ibqgefjkhdr3u219q5cmigk6hk3c8ttmeflcfb4id13wxzu5kzhjiruocu1lyaqkw55w2l6k4mpv0yxi6bo05h2b8enzhg05z7uan9eip6sodozsojr4dmmwswl4aris83s9e5nj1uav5w7\", \"911c2h7nezvpq86j6nkp0ea8q4pguf35pu\", \"f9n46sre7d3zkxc9xhfopv3a0z\", \"p6h6q2kcqd7fx4o\" ],\n      \"countryOrigin\" : \"yuzixys0sd53u37ig197ai3plio8aio1sbakmuf24pc4c4iugyhd8mu0qnme78xsg6wv50jwzgzswzr1i4uawel7997wv6n4nf17lnmkaah9quj64kb1kubp5zdmwadfxt07h5xu1601e8dpu0msrfpm\",\n      \"id\" : \"6dq2\",\n      \"countryOriginAlt\" : \"xynjq1u84xjccy1ioxz4yahjhha1iyyap0jm2da2bpqb87k26lpvxflrwno07lcvh3bl8878r1lj\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Neta\",\n      \"lastName\" : \"Sipes\",\n      \"score\" : 59.96357321407576,\n      \"probabilityCalibrated\" : -0.6472932184289355,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.5649472591707083,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"tquchrj32gma1rpbnzpb4bc4z8imse7w0wwwu91\",\n      \"id\" : \"x9hv\",\n      \"ethnicitiesTop\" : [ \"cmgnfo6sigkc0g3ucj3a3j2kbz5exs2fauid2e3e0u6gydaax11nnbotxqn20p75kj8krh8zr7lovrnepn85metj7j89jp0om3q38wp35bwzdz0\", \"86u4x0t3g09qduoqzlxidyt9fdvbt99hirna8zvogvw8j45eqfmcn44v0f60xtca8l9m91pp9rwa22nkcu9rsbnl6fwf2e7mfom0\", \"mnm5la1z0d40ka983i1d6931mtaqy9w92pdz1\", \"qtmj5rnbianip5eg8aqb71ocbptzupkoic0470q9bk2zjzbdstygd7ba9c2ahv9jnars2c2ke4aow65bb8g9rqknyu76t7q6ptijnraxv10l016sl05i0pps4vbcymqe4ohkpcsuunfhi4wfe3084q4zh\", \"rb6mme13w24aeobszexyh2k7k8fomzi5gsw4vrkcvi1kdmifkgz4fhqid2fdi73y11najapan4jqx9t3uen721ss5xx6u8diy3twayp1l4v2kopknqhltrfh97ralhu6zqx2fcwp3up7rlb4italx13wjut5ljsylz81qwahfjz91s2h37hvpjkrhhqczd49z\", \"5jawozpeja0c6jarhgb3nwuanj35q1d83kjkjc3j279mfmamdr5y6zlh80dh\", \"g0ki5zhcsj5dzinh6h97q9o1b9ndp0lxwohlvx73p4u\", \"4i2quv75kvvuf34l6iwgox\" ],\n      \"script\" : \"lrc63ii2seb6mla7l2vrzm2kgnpneg7tklyeezdtr0fgfcmk4g8zvp7ufgxq3ut2y3p2lc1o8egkldegm8y1hphovpgtrycdqd8sshllcy2v03lygpij6go9s42k7uhwjr77zuf47mxj\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Marcelene\",\n      \"genderScale\" : 0.7805857237640523,\n      \"lastName\" : \"Kulas\",\n      \"score\" : 46.531616107442865,\n      \"probabilityCalibrated\" : 0.21333897223409104,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"ry30\",\n      \"script\" : \"q0z5lby9sqevg0ar9kvufihy2j7hzxg6ih7re4qlc13n0p8dkl1pzhsbb6pzo64l2wlk1i294ffazajvqabln0q67r9mvkg3mk41rn30hj7ut20qxv6vgc73e5pnur\"\n    },\n    \"id\" : \"603d\",\n    \"script\" : \"z3c1azlve14t83iszs2p999g5h6lyi845xsiroqdxmtl17j1iuoetmevulhb6gpbzshcax0tpuby5s9p7wz2gtdeb6f03m55t9xm63a08l6kjr5tsqd7myuqvsfkrzxws1cwndc6jvhnnn59aosjnt2vnbjbbz4p\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Mante\",\n      \"probabilityCalibrated\" : -0.2823427510944423,\n      \"script\" : \"8ad2pp4u0b51sxk878oegrfqvdpvpzxygm4\",\n      \"regionOrigin\" : \"794mmcplhoh53xcjx5xriaei3vr9evwwsazqns\",\n      \"topRegionOrigin\" : \"5id91hmf732b8twp4191u0gyrh2siz90t5xmv3kk6q3aj926hzz4mk5kqjchm3lqwmzg340rd0j65x86m07bi51pqyo2jzlla9lgfqd3zdjgxzfsll3k5yw9ge52n1l3mdljh2kwpk\",\n      \"firstName\" : \"Alissa\",\n      \"score\" : 37.93062088861423,\n      \"subRegionOrigin\" : \"fqiqrddyeqw4wm0xwib4x3j1o7oqjguycqplsfqo3jzq2fq39qexrbgnrm6n1em8u8m60tjjezca9upzp315vrmk3tostl90koob910c7ro8cedqoo8p4camrteh0tf0wmwe4vgn7\",\n      \"probabilityAltCalibrated\" : 0.42916795121950124,\n      \"countriesOriginTop\" : [ \"uykgqwphnkwop34hnlmxugwjeg1c39ksx\", \"z8qmmzas5etnzhwip826tff4pkp84faxiaxh1gfr1duh43u5mucoxv5xtjf9lsr7ehzzwresahz624fovw07riy42i8vhe5zre9gz8s9a4lrssr3qhxeg5gbqygnrd066h6fxzbop1zb47uhmx\", \"cjqsbnciglvs3rtdbngu8e0kcaxiqe0tcz6lnuyb5soix9ovyo0xmcep9tmrm64mnobbk75avwb1vn557g4u3inb47sx5s0yacut2fmc2m01z59vemyu\", \"c767228hmczxyw3wxeiwd2eoz0jq6xt704jhioy4233ycchdi6ezhg0mmez2umqyvp3ff991m61pk11ws19511si4zgtrztexpou76fejyaub6d9wcxp17qxcjxwx6wurxbtgee4c6hohsj8\", \"hsvnxzjdvdyb5vbk223c5mcgrgllzg9sxsakg96txsce40dkamviipwop6c355sq5mvw7m3q951wmxmckia8lus6fz85b052r1uhkrvq2k98hzcaqhihhts2dhps66f5tt73jwx29u4fkm0kib1dfxt3nrv74jz80qaaulmz6hbswmcbhw19sb3fc5v33i\", \"hiblixd5xxmkgk3us45vpq6n6x9tf\", \"1fzcff69ha7xgyy932nwxsjoj6q6pvyb9dnjdivt3wcd2klmvsq72lgcnzpu9u89f7yz2i6lr2yyd3bgeye40ot23yfhodn51j0uak22s0gso1gsh1rrb3ubwjm89tbd0ap26t0octq\" ],\n      \"countryOrigin\" : \"7t6wte68or6d\",\n      \"id\" : \"sm71\",\n      \"countryOriginAlt\" : \"k4410jghz4mdfmdbn91id6xebrvaldg4h7a57wm80qyxru0cv45rdae9llt471wldv2l0pis9hb2p3ilk5zewyz5ie50aot5c2mb2b9m2xb\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Louis\",\n      \"lastName\" : \"Lemke\",\n      \"score\" : 11.949996663869323,\n      \"probabilityCalibrated\" : -0.8966897223490533,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.9395618649844999,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"vyj7g\",\n      \"id\" : \"5btl\",\n      \"ethnicitiesTop\" : [ \"fqy33c2dexhyui0rydb9dtwfsq85wgym7flsd4p1m3p8zegjfyx8p6mecpmg2tn1etbo5oucow6xkaax\", \"qv2olluzn4q6mphpuga39d6ajddn3v888x1m29i35jj1pdthgbkslit8anry5yhkdqsunemrfxx6098ek5c0bmgbk637edyfh37cr60v6l5ycrw9m7k0jdu64pcke3fykr3vrva8tsnuca3lgtt8c9mu7c8m00kkrgv5rsqd0lm4qyzmoqag43mx893xm8165u0or1qz\", \"hi8mvy2nfl5yclk2o5c8j6szw2znqlq3hbjcbmk3m9hy8n0dezscnda68t48irnegbrnzr6c54zqkyvpkd5cs1mirgcuo84o34j9vcul09i0minismu047mdsh7\", \"7jcf2sgom98n128xnigxka9hyufzvti8088kxqtwkr9ga37flnke1jkru\", \"x71hcnd2ft\", \"dm3knpr7ffp3\", \"pb5ng4yqpqia7alzx877rdbpz1kjyysz5gx8lxaqnt2gxqcfb137qxs1jtq4vquee7hsy4o287fg39luxugny8seuijyb65jhrxublw98qc96za1y2bgpr5kue2imata2c4y8s2f5h396wu12iftlq\", \"naw0omr0yfrhrnfxhwo6bt1ciofw08cgjc4eydb6lca7q3p2199ew2wu856dl764klbln91reyl7akc6v0vqrqtj5q6qro9cxjsq4pr6cpbedoq8w11diwys\" ],\n      \"script\" : \"4snq09233ewkclugq1x3gzoxdykec50q8hicm3aksln6xo47up66xpbc53i8zezjo9514axlf2qfje629ssa5qijp9f5lf3pjlwseze81dlzqjmdszkeuni0dv3jq0duiruy8ttrdzqj6nuox96q9ot6i5hqqvvo3ysjlii\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Tifany\",\n      \"genderScale\" : 0.40105613867607826,\n      \"lastName\" : \"Hammes\",\n      \"score\" : 8.146100119057365,\n      \"probabilityCalibrated\" : 0.5409470552368598,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"tkx7\",\n      \"script\" : \"zf9ufd3cgpicpufo2r2tgwnfhupaoxvjq32auhzu2apzj46664kwtq7ujlcdr5hzomi02ucoocolgkhx\"\n    },\n    \"id\" : \"gzw4\",\n    \"script\" : \"c18vkd02vhhzmzsltmp77tonal\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Gleason\",\n      \"probabilityCalibrated\" : -0.5623245238985113,\n      \"script\" : \"2jpicl2wftr80fawc0h6obdv7f2cs98qj8ynj9pvyug52jrcxbqr050lsf95y0e85m\",\n      \"regionOrigin\" : \"2g4h1v23d4xyac3ys7e8650994x7yrin5sdfztm4qcl45tp9fn9qh7ikh9a9d48t5ow5lsexra3z1kxmudhifcylih3qv5hq\",\n      \"topRegionOrigin\" : \"24exbr1dbxj97wfifq82zm7z1innc3r58yyeebj2hzffzgf56soru6n5333ztdirc2ncvk1v5o4aeyi4co7\",\n      \"firstName\" : \"Shirley\",\n      \"score\" : 90.81188882092918,\n      \"subRegionOrigin\" : \"2kgrtnk2w77w2sfuoqf09z4480pzwsb0nt7omjecd38qc9w7lkkaps42fim6oe5qi6yfiu2c00ts3s5vuyu43lxqqcdn709rthh1qq4kl8jlef4caze3f156quau4nqpvdci78gqtmlens7tpzsyl6ms75qmk\",\n      \"probabilityAltCalibrated\" : 0.787074717784144,\n      \"countriesOriginTop\" : [ \"6vzsiqgk9atlohdy41pd9rwuvxe1eheqi6xd9orzzwxo0a2rc8opxwidz93pkjaqj1d5qhhvhzcf4aavwoalll57k8pnbawt00n33nm47r64gdqga3td7yscrekh5rixjbnj\", \"azwuf6kiq7w13aoyi1yc416w13mrq\", \"n5emwk20ml55q37agdvnbkm6g0gcwb0fx30sdr5a7iopsc3h1xn3bgaygd26tngraawh9kyxfoqztg127bguooa9tchmwc22pcm04o\", \"jcs7ybb4zxkmmc06j3zghp5z074n8vwinajsfbzyiqpna3theuch649lvu5tkyba0wgj2e0qmcha3jfey06f9y9kukhm6q6jazg8hfu3gjgvrqgnawpfwnnq31u59lxtkdqmepqfnbw7vmffrr048ilsdu4nfntj\", \"xuozxm3zg2s7gmhfb29yzl17a7gw56hrfhgemmcbewcxppw3sifz9jfkdj1hhv0xwv13w19yjnvjldocpkt9oac\", \"i4x3xmj3lq1zb0i4lv9aaso7yoop4rcb7yasooe7edgpxcgf5v98bdjkqsks84bvch3og9euva9ltrlvzl48iuii9b4ezjqw0wp\", \"y15gdz1tu1ck9czjhx6nvtkvcornftt9usmpv9rdrpps\" ],\n      \"countryOrigin\" : \"ct0zzaqe13nr4rh4c3q6ugrglsz6gi7z4syeeegi2o3x69vf3fxglpn86oa0exolpzt1axey04yzgaq6z0j4cqx020zvomqmyh7vutytnm951bu9p01x0fyrdmk904n5bogzv0abesbb5jd2p88no963ygjd63jvrumfr5\",\n      \"id\" : \"921s\",\n      \"countryOriginAlt\" : \"yx6n79q3tuh667e1lk9vy6c024qfbtfzsm5op9gwe7616fzciwzxg9cg4pw7i2om638jcdk83urshdidpjjzaf1t4igumqzlf86a9p5gwu8770kbxvlbjb1orevnyd6q3p8wsmpzhqp6z\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "232d50a7-9144-4d77-b5b4-e794a71634f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.295494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch",
          "schema" : {
            "properties" : {
              "corridorFromTo" : {
                "description" : "Classified corridors",
                "items" : {
                  "$ref" : "#/components/schemas/CorridorOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchCorridorOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "78a2aa41-a17b-4bb0-8b32-038a00374ba2",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridor/a8ajrrsi1kryzk8fx2s1yiyqxohfoz4gp6rememf1zksd1i6w8z7ybtwviegl39kxff3fvyqpxeoam70txzwiawen6qlf2bpwvw9jslnbrwcy3gdsgxoedso6rosaqv8zdcxpbjbkdc6qsoi8b0xz242ot1zr8gwdtgbluapztg7htj2timljr41oua71pnx79/nprotmdd9q380f5ojov86plg5pgcdt8jwddim/bz52gnbfr7vftkfqcn9c12tohc9ov6nr0x71w9cs59y82a2eu3lm7pe2y7ogd68spndv9fmwzo14upua2gflxgveia0mwpegslrt8vidy/he6fsq4uh1djywz1r5t9bpq9ai6dezcyksjjn0iqw4k2lz4bspbkthmdojj6tagfdmyidqdbbzm2ka7sa80gb3d503jqpjw503v919aywfejzv6kj2k2fahl81c53fpwt/7xtfkb17fca8285knb1d22oahk5i2gegh4bxjnqgv5441799diw11oj6zqfsy53lsojxewwgozervsnehbbh1haasq6kg3ge3k2ini7i2/jid5vgnbndfu3r3fwbr715dq9kxew37vd4eqnztag81acumqabnlpu",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "78a2aa41-a17b-4bb0-8b32-038a00374ba2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.289491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    }
  }, {
    "id" : "d3001c72-4f19-49ec-9e51-3f8307de733f",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridor/3gi2fkqb1w98rvi9wiaxrril9ey69t5iwuozi5gg7lt/elm8e58po9xsb9zay2j7d4ok776ggungd9ocpm5wwnu8wb5onrhfkruepx0/zg9u973n19fnxibxipqaoaeg6zhwwj7oe2azuqsazimm46h04e1ogw7p8dx9nwxbtg3z3f061bkadc0bp9a2j9184/vd0g2xbomfee5sf2o5fpyb16mefpowtsalu4oyhkrrc9njwa40i317iig9ytu7mncku55a2pfx1zkcxth0gxpb0xou9q/o01d1fnw9wjxwoc2cc1nthbgvzy68wx8tpb2znl2jgqto7qeti2zjtt0wsasauby32xx6kthc012x68hm9mhsk0r28x6j3i/91swpzq8s4phi7wfb9028pyymqco0uiax8vz1a651uh353gg294a59kcr2er4m3rfkdugteplxp0rk5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d3001c72-4f19-49ec-9e51-3f8307de733f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.289409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    }
  }, {
    "id" : "ca2adef8-d2b6-4a28-b412-d5f5a59f1192",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridor/3q3ojgn5m4wo2imwjd3zzzyqsksba08l4rv1dozz89l7lffyfizsaxywm4k12ix501zwucqai9acfa8xjfv21tam/90ba0lah76u0eh3elukebyccph1i8a5ho27muciokkdg83dswvfa61hot3qmuprocv6m7whucz3ok73e6jaz378m9hqgw80q5pymluxty4k59qk1odxyi1uju6ghxmccd8wpr4lcnib3/xnb58hno2qvjwddf3j9lieth2fu49oqowktqizfbiurg4yyhxmeu6s3g4l5dqlknix0o1l7ny6pcfgp19ijxx76i4h87v14x4twyeirgr7zg5v4f27kvx/p8th85wtw7zdx58r2os5ekodn5tngid75gcwxh9cl47h/2qcnvmk3ftfijgeytjsbq0ntmofp7xemnk4t8em599mw/kwtpyl4herz4q5gmukqbl0dsgo2r2hksc6b1g6rc5f5se2ysobdomqs2siri4c5fegr4a73fg06p3o7kj1gblsmy9zxrhmpwxfmcf9ju1uyvlsoh4e7crka1nw8zdhhp2q6rlxgh8y164ufballa2wkaahf1oskixmoan19pi0yusz8ybe4vsq9q18kziv31hiwhij7l",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"FirstLastNameDiasporaedOut\" : {\n    \"firstName\" : \"Newton\",\n    \"lastName\" : \"Kovacek\",\n    \"score\" : 42.28574035298686,\n    \"probabilityCalibrated\" : -0.5748313361986934,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : -0.27345654725465507,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"5lvajzlpfm3kyxoep4jxd1y89o1r7mk5v5qm0qr4wzpufd40vb9gr6xft0yxqgm7ur75y58rnz8mgqic0ag19cs595gzv3dty8857ve0cbbeqey1j\",\n    \"id\" : \"14n0\",\n    \"ethnicitiesTop\" : [ \"sddlfvrzuiaz04b5ouzekt9wky4nh4wgnbjjgtmwc1\", \"8ep64t0a520fsveet81hf3serwhdzld9ownrtukoj61zhr6fh6s7eu5ol2rz3dm0hy3v7a7z3c24lj5uo3e0kxjboxj54jgzjua7qq4\", \"hcbqlftrmqj6xy07sbyt713at1ygikj4nu89u9bz15hfa4gi5742erkcp21kwjxe89yxt40qs2tvi4corpmv0hyk47s5ep150g5sottr3o46o79p63g56ha08wv3dtodf1hdhzt39o8c13ruajwywhc4u1qit89cp2v8o6ip8qbl0ydnby80kggl2\", \"7vn894olv5ytitzbl6uakut5ft559qlxm7ua09yt7hc1l47p9l5j7otcisywuzvj1e3q9g00zs59br6g4cxg3mvl0wgqlsbccviq8e7ngh98ocer171ffk771oz9mv8fjhc06ayy6i0klt3nn2hncfqn1e3rv7gdql7uyomspx6cdan40stzddggs846vxz5h7xf5ozh\", \"kcphb1l66w8c6sw7sd27l99p9aw1e9sqp25kktxxj3ygl9dmvnjek5lt5p4n74atz6d4m5pq66m5qcgd5pnsf7r5kwosd3j2u05cym6uibirp0ow6coj8s3aeh2syywcd4gcivn54zb6yuy3ou3d8vhvgizz0rfwl9rkn9o2ontj5h\" ],\n    \"script\" : \"ng7pemejefpxus3bxb02fo2m3kq4ka7i5j6ttaphv5mt3nprdni3j1c43gjjvdtlg8tnbywdeigkokz94al\"\n  },\n  \"FirstLastNameGenderedOut\" : {\n    \"firstName\" : \"Asha\",\n    \"genderScale\" : 0.717862919857184,\n    \"lastName\" : \"Morissette\",\n    \"score\" : 81.9311426694938,\n    \"probabilityCalibrated\" : -0.11737045398055956,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"inj6\",\n    \"script\" : \"fny6e3iu95aq0pzg7c5kcnhr5m5392p26kx2d0ayhvu03h83sumjh4tr3u4kfpphtkpu5p3xvvjnsnpxy8xpdvk5xwdrsackhysue3k\"\n  },\n  \"id\" : \"dx60\",\n  \"script\" : \"3x4z9k54yxlaxy3wl3oc6k7qynypqnyf0frw1jruontz9dmchruvju9hk1yr4cqegyy9p1irjy6qrnfsner8z5vxhyaoiyur5\",\n  \"FirstLastNameOriginedOut\" : {\n    \"lastName\" : \"Rutherford\",\n    \"probabilityCalibrated\" : -0.7591679981239432,\n    \"script\" : \"5qj6obk83q23s66ke60r4tx91zfwyxepv4cpkamt02vh13v4gx02k8t6y5rzbj1r9f4cwl8z67zenv0xzy12y7af9vp8y3htqb7ylrdjv3w8ys5\",\n    \"regionOrigin\" : \"qoxiy68nzwvy2y45neizv5atuvtk671jscdy2frp17hu9b5ic8ebi9zzfcftmbx\",\n    \"topRegionOrigin\" : \"c2302e2b3xi7svncbd8rn1qnjx1y32cfsw2ymzsr5t7npbyzoq5f17886injnw4f281pwqcze44qxcllw22rorx160o6si8rqmubsht8u1\",\n    \"firstName\" : \"Morris\",\n    \"score\" : 71.73139014040248,\n    \"subRegionOrigin\" : \"5xufub71obtfumnx1hh0m6l8h06p8ggmdk8jggni5ysxfsr7ykyv7ien5yhjuaka0l0bf23o1u9bm8limuy1ha2gtwanngcukpe2mwcmw7evih8a3rzwl1447uo2v73spqulxgpch2dbzl84ve7kgbp2h7m8qdxqho4t4lvml3kv6ry363n79n0ubs\",\n    \"probabilityAltCalibrated\" : 0.6833475833657674,\n    \"countriesOriginTop\" : [ \"xb4fudofsw4s6ft2nmwzbu95ufoa3x9myyl9332qru8341jno5ldratzav9v8a4hcvwkidc8zq01dj154wf\", \"vh59mhnd\", \"i97v9hbfs4uioyuqo4\", \"bh612bwkr18d6a9b22loaoywxrot4wylsfv8o7x5uvsg\", \"x9xzz\", \"di9simj1d6yo1uun1tezel241kfwcl28177vi6q0dcp3ww2fuvdb4j5fypbm1676zmnlnec7rlv59m28\", \"o86xqet8lgxevw8yel4abp021frmwcckgtu9er4k93acpxc2te7icd548n0kud1b\", \"xsdbq5hd2swdp1vgvnmpqlilydlol745wk0vhbwg1bfyq7j\" ],\n    \"countryOrigin\" : \"gtf11vungq4s3tpaihgocvm9vqoegu5uwda3gdjry7fnmqxdxprphzncih9kflvseupof0u7b3r1etno60fz3i1w5v4fhq74hokolmj52lzn3vt67yhhgm7u1qrkajka93yawdyewudklsmpggkwa2c0y9wz6labegz2zh47wpm10oqgn\",\n    \"id\" : \"kw9u\",\n    \"countryOriginAlt\" : \"3tu2mowqmh7lz3k3uq2efxtr6tz33xomyiltfp9dwsddxi2ysmirei7z1vsl2pmrouq42oucdupb409p7vwll47562sqsrqu4c7y5tanmo\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca2adef8-d2b6-4a28-b412-d5f5a59f1192",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.289313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor",
          "schema" : {
            "description" : "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)",
            "properties" : {
              "FirstLastNameDiasporaedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
              },
              "FirstLastNameGenderedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
              },
              "FirstLastNameOriginedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
              },
              "id" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "CorridorOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1ea9ef4a-0e1a-4f96-8f8f-8a3bce347f42",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1ea9ef4a-0e1a-4f96-8f8f-8a3bce347f42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.288266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "1b7db02a-b115-4a3f-acbd-d71355fd737d",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1b7db02a-b115-4a3f-acbd-d71355fd737d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.28825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "69d280c7-d7b5-4c77-88c7-c0d66d68ed3f",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "69d280c7-d7b5-4c77-88c7-c0d66d68ed3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.288233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "9fe81945-6adb-481d-b8f3-6d4e80705a87",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 5.552827249148672E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"1tn1\",\n    \"script\" : \"yg25fxu7qkprvaqgn7rhmdextovbjj2p7015bbtmg7er7l4pc3w8ya0k7dkfexiiqtdhpz6oi2wwhv7cm7fwy3ro6f0akpwj8hh47a7fcsse9elvd06vo9i7vy0bum8uwnbmycre1i5zqwkw317mdrn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fe81945-6adb-481d-b8f3-6d4e80705a87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.288205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5e1490de-d621-49d9-b5bf-6659f512db0f",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/kq2twhiy04qpgr8fes/okok2of1ts0lqgrh5dadrms3nyn4pjyepcikfkeutshcsnwr94qjblz4xbqkx7rhoc982ymzjj7mgc3dwlhffu2mgu1sbi9316160tno06ox84pn3mqvn4rmby4wp3ncfnyxb9ukvx2u3itba0vvvosonx/Raeann+Ortiz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5e1490de-d621-49d9-b5bf-6659f512db0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.288033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    }
  }, {
    "id" : "d870e8ae-d76d-49f7-936f-a14e5bd49906",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/qtfypr5ctsuoqoubptbuzoj30v15b5pla7shkhjrss5ka75fgwrmdrqc5yvsqoddt0orupw7pcz7967pjdf2ciibs5d4roiau55/acp7p38lruqr8kuabzmk7hwu2vf2ebd0ejn5nuxkql08foukmnmt1phneqt77xwomkxum4nb4uv7ro5riuixapy7re58l4s1bu/Erich+Hane",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d870e8ae-d76d-49f7-936f-a14e5bd49906",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.287954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    }
  }, {
    "id" : "d824df54-7fd1-45e9-ac70-9dda588b485d",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/4q7r49zrv3mnp6kejz0gbcnjliwv1vfoutfvbbmllerju07zttdo6qhhdzo132nbue1pbfs5t6w3zxyoim7l7cbtik70de1864g5q4ftj9dfmp7dny72eyiu62d15ajmog2w5z1sz7fq5jcjw950ykgo801gwo7j0kc/c8kryip1a8km7bvfk60g3k7933q1aytlwsc65o6xh2n0ywz2qimh4ck4uh7f9lvbphmzoct5qm3zy7pxgeyzicucmw7freb3o8pun96rlsc8f673l081vnreazhkkv49o3v45slcnxdaxrwq1isw5vx8yu2u4di2y8td8h3tbk3akbsp171nh2/Stephanie+Cremin+V",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.652860102529698E307,\n  \"matchStatus\" : \"Mismatch\",\n  \"id\" : \"z11v\",\n  \"script\" : \"eeikjqgzmecgjwfka22neb5qpmrr25rngxplmb75t5gaqrupbhg0ebrgjsj8eca2sh874tdnjfwvhjyp3zot25y96r420f7q2f9c8o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d824df54-7fd1-45e9-ac70-9dda588b485d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.287833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "21c43edd-13c0-4b17-b4b8-f8ccae324df0",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/b0zbgvgn1zh4s3ryp2b5q7wdji80riuctt67uhwdjx6lbl4x4vdwfc49b26ii8b7i71l381g69d1bomc9kjj9qvv2r81nhp1339unjz7pkekj1raisqdq7982tx17dmi/npoaxkckmn78x1no6r192gpzrl5g4i864f54t50ax1zog3ty4ls5y3lke3iijxsrg/Female",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "21c43edd-13c0-4b17-b4b8-f8ccae324df0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.287566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    }
  }, {
    "id" : "c8aba592-87ac-4d0b-99fb-86c618d1a8c5",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/hjx1k9emawuy3h9dxk46nw8b55i69w208vqsfmn6uu8m2q4t4k23x6gmd1wu8r063t6wmc3peup4acqh3stapy92q3tqeakdpd00wzj362xznppl4dks213zyya6/t2le3iuo97dv2rz3jbpnqd1hahkpsl5gppv6u9klks6lyc7613xpb4prs0gn5mc3464blu/Genderqueer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c8aba592-87ac-4d0b-99fb-86c618d1a8c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.287506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    }
  }, {
    "id" : "e82b541f-04e8-45e9-91c4-1d82740381bf",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/j15arpe058su71lus7o744gi6w5ukcgvmr62c9kbmfimufls4twojmnrh1rqxc6hlaqg6r9askhjrtjg8d69yignkywzr684mxb92kg/lj861iiu/Male",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Royal\",\n  \"lastName\" : \"Beatty\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 7.510635967059481E307,\n    \"candidateName\" : \"2022-07-04T16:26:44.28717Z\",\n    \"probability\" : 8.347675347975327E307,\n    \"predScoreFamilyName\" : 1.1895424061420266E308\n  } ],\n  \"orderOption\" : \"akyzquctkx077k74qkxxvidgdqzfj2auy7mz2huvo7ae2x8p8emcrut2ls45a53raon2bz9xdor0kyjnfzm4cuo5wyedlxpq9bb0vns3yxcuqqb98pmtk31yihyay69k5kp969co1fn\",\n  \"id\" : \"n31i\",\n  \"script\" : \"njepo5jleytk8tgj62rhczcpaooz1btsz37omg20fhiw1uaje5r123tnnbofe4h6zdvbprm9deruwgpck8t8n2ch8gjm4dwu824ndvtdcnx49oarlatlz0h0sm5hhlj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e82b541f-04e8-45e9-91c4-1d82740381bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.287433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "def53ea1-9185-4d62-821e-9f281561939c",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "def53ea1-9185-4d62-821e-9f281561939c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.287078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "21c810d2-31c6-4d74-b5d2-0f9547770a3b",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "21c810d2-31c6-4d74-b5d2-0f9547770a3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.28706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "a44fbbc9-94e5-45a8-ae69-c078c6a3e0aa",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a44fbbc9-94e5-45a8-ae69-c078c6a3e0aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.287041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "0f1e0efd-faf2-44c8-a67d-f5826a685509",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Neal\",\n    \"lastName\" : \"Quigley\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.2653046463252574E308,\n      \"candidateName\" : \"2023-02-10T16:06:44.283656Z\",\n      \"probability\" : 2.3550065200273973E307,\n      \"predScoreFamilyName\" : 5.686400691580453E307\n    }, {\n      \"predScoreGivenName\" : 1.715738535880289E308,\n      \"candidateName\" : \"2022-05-02T14:21:44.283703Z\",\n      \"probability\" : 3.041822260951419E307,\n      \"predScoreFamilyName\" : 7.280646998925936E307\n    }, {\n      \"predScoreGivenName\" : 6.155161033787348E307,\n      \"candidateName\" : \"2022-04-15T15:32:44.283752Z\",\n      \"probability\" : 9.56126019938398E307,\n      \"predScoreFamilyName\" : 1.278649895017145E308\n    }, {\n      \"predScoreGivenName\" : 1.4555347247135063E308,\n      \"candidateName\" : \"2022-05-11T18:10:44.2838Z\",\n      \"probability\" : 1.1535156837006399E308,\n      \"predScoreFamilyName\" : 3.7475522549314475E307\n    }, {\n      \"predScoreGivenName\" : 1.540387410668662E308,\n      \"candidateName\" : \"2022-07-04T15:20:44.283844Z\",\n      \"probability\" : 1.795823591742024E307,\n      \"predScoreFamilyName\" : 1.6593130735446005E308\n    }, {\n      \"predScoreGivenName\" : 1.2383857458273583E308,\n      \"candidateName\" : \"2022-06-01T17:31:44.283891Z\",\n      \"probability\" : 1.389640023918316E308,\n      \"predScoreFamilyName\" : 3.1157296150642625E307\n    }, {\n      \"predScoreGivenName\" : 1.6142506913885006E308,\n      \"candidateName\" : \"2022-09-23T17:16:44.283937Z\",\n      \"probability\" : 1.1306159240089355E308,\n      \"predScoreFamilyName\" : 7.255725868225287E307\n    }, {\n      \"predScoreGivenName\" : 1.1926358015313114E308,\n      \"candidateName\" : \"2022-10-12T16:22:44.283983Z\",\n      \"probability\" : 1.629408112199519E308,\n      \"predScoreFamilyName\" : 1.4777307387789484E308\n    } ],\n    \"orderOption\" : \"jo9tnvzd6i2qlnf6eeqz4iq7x2dz5h0k7ny2q56isoz4qlry14shnb8a0pd07h84et69t9gsnq1d2v0kmzgmgbfvpzexcl7smzq6lfm6kwkcazp7hs500j5a13akxf8bdop9ifo7p3y6l3oriebknswkoe0iux4hpgrhnch1fn53dpvwyhfprkdrq\",\n    \"id\" : \"f687\",\n    \"script\" : \"1cp7rqcwdw20e42tl5gltqezk9rotvimupo1xv6a7xhlo0lna6hufy\"\n  }, {\n    \"firstName\" : \"Shad\",\n    \"lastName\" : \"Macejkovic\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1913040639518528E308,\n      \"candidateName\" : \"2022-05-02T14:33:44.284184Z\",\n      \"probability\" : 9.354232054304092E307,\n      \"predScoreFamilyName\" : 1.8838316571104058E307\n    }, {\n      \"predScoreGivenName\" : 1.0946661507068413E308,\n      \"candidateName\" : \"2022-06-24T14:44:44.28423Z\",\n      \"probability\" : 1.6147469330945682E308,\n      \"predScoreFamilyName\" : 6.454816917626294E307\n    }, {\n      \"predScoreGivenName\" : 1.3260253296511219E308,\n      \"candidateName\" : \"2022-04-02T14:44:44.28428Z\",\n      \"probability\" : 2.9182746970134615E307,\n      \"predScoreFamilyName\" : 1.2505469828212366E308\n    }, {\n      \"predScoreGivenName\" : 8.92072249854597E307,\n      \"candidateName\" : \"2022-08-11T16:57:44.284327Z\",\n      \"probability\" : 2.821385257398814E307,\n      \"predScoreFamilyName\" : 4.999721209014339E307\n    }, {\n      \"predScoreGivenName\" : 4.768326870778773E307,\n      \"candidateName\" : \"2022-04-27T17:28:44.284373Z\",\n      \"probability\" : 3.2172994641925945E307,\n      \"predScoreFamilyName\" : 1.7775416735785397E308\n    } ],\n    \"orderOption\" : \"ecos2trem003nswr7jlj6ngvlto5z04cj6j9759y71jd9uksom3vt9gd6dets9nxsq8hludv5p5jolff\",\n    \"id\" : \"tj3r\",\n    \"script\" : \"9zquhf2b978ibq1sdzrgygzfv386m8i7b04bc8bt3z9ci1n4io3m5ge133ihkkwntd1z8havtg29bmfl5u29nvx8x2yuuvrxt793x73oky3njhqydbxa11w19wxqhijbto9yph1mrtpiuxlkta\"\n  }, {\n    \"firstName\" : \"Yun\",\n    \"lastName\" : \"Abshire\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 6.010353511460383E307,\n      \"candidateName\" : \"2022-07-25T14:25:44.284579Z\",\n      \"probability\" : 1.0515791786073123E306,\n      \"predScoreFamilyName\" : 1.2271838156564772E307\n    }, {\n      \"predScoreGivenName\" : 1.2857608710560416E308,\n      \"candidateName\" : \"2023-02-01T15:28:44.284626Z\",\n      \"probability\" : 6.410219895905775E307,\n      \"predScoreFamilyName\" : 1.7349034732157386E308\n    } ],\n    \"orderOption\" : \"tzknnhttu6z571jwbqatc1ufhg0rxc3fo1vbumfb1bnvm1yf7b6e4w15wuiqnvporj06zg1ncttoffa9gj1ozm2087xep1f1spm7ibi1nud8rryr\",\n    \"id\" : \"9d8s\",\n    \"script\" : \"ijuadtbq9epy4ud7ara6q4ysiy9x8k38dz1o8ck\"\n  }, {\n    \"firstName\" : \"Mai\",\n    \"lastName\" : \"Ankunding\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.4765301884669557E308,\n      \"candidateName\" : \"2022-05-02T17:50:44.28483Z\",\n      \"probability\" : 2.1745946177860284E307,\n      \"predScoreFamilyName\" : 1.0744311808479568E308\n    }, {\n      \"predScoreGivenName\" : 9.2772831508673E307,\n      \"candidateName\" : \"2023-02-20T15:39:44.284878Z\",\n      \"probability\" : 1.2795597012350226E308,\n      \"predScoreFamilyName\" : 1.2927076697310318E308\n    }, {\n      \"predScoreGivenName\" : 5.056331702162324E307,\n      \"candidateName\" : \"2022-04-24T17:44:44.284926Z\",\n      \"probability\" : 1.6567232256286083E308,\n      \"predScoreFamilyName\" : 1.65341184397806E308\n    }, {\n      \"predScoreGivenName\" : 7.001115287264674E307,\n      \"candidateName\" : \"2022-11-14T14:32:44.284975Z\",\n      \"probability\" : 1.6098725684150626E308,\n      \"predScoreFamilyName\" : 1.4097694151527574E308\n    }, {\n      \"predScoreGivenName\" : 1.0751079143618969E308,\n      \"candidateName\" : \"2022-06-07T17:16:44.285031Z\",\n      \"probability\" : 1.6679999786224384E308,\n      \"predScoreFamilyName\" : 5.709741412272295E307\n    }, {\n      \"predScoreGivenName\" : 1.1299814113387207E308,\n      \"candidateName\" : \"2022-07-24T16:51:44.285081Z\",\n      \"probability\" : 1.7259414556615518E307,\n      \"predScoreFamilyName\" : 1.7864718853985854E308\n    }, {\n      \"predScoreGivenName\" : 6.283552555801963E307,\n      \"candidateName\" : \"2022-12-12T15:49:44.285128Z\",\n      \"probability\" : 6.565065056217891E307,\n      \"predScoreFamilyName\" : 1.5457067835818058E308\n    }, {\n      \"predScoreGivenName\" : 7.572144677759383E307,\n      \"candidateName\" : \"2022-11-27T15:57:44.285178Z\",\n      \"probability\" : 1.6297991658096657E308,\n      \"predScoreFamilyName\" : 1.3906512452736523E307\n    } ],\n    \"orderOption\" : \"hctkm8c6ckufornsucysraafqtjpr21vqpexfx79upz4q3wufus4oxhfkirc6d6woe7plizy2jew22ran39tlsvt7mawd5jhbswf1xrs8j2wpt3d2iwulcnvpmk10cgekyp4icgrs4v4qxx1wgxgom7t0ylg4pwvtgn891mjeq\",\n    \"id\" : \"7059\",\n    \"script\" : \"dhrkr2kbsq4e0cnkl02t7kfx8jd65zxd9ilb85ztvs9avn9t2f8hbyi23v136pt39noms22vsglmqgwb40y4ii2i74q3amxkgplo1bllsmwvfopr0fozqh10k7zqtcnswj8eqddz\"\n  }, {\n    \"firstName\" : \"Isidro\",\n    \"lastName\" : \"O'Connell\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.963376859483078E307,\n      \"candidateName\" : \"2022-12-01T14:24:44.285456Z\",\n      \"probability\" : 6.39468427063038E307,\n      \"predScoreFamilyName\" : 9.532004725318216E307\n    }, {\n      \"predScoreGivenName\" : 4.0941786487241276E307,\n      \"candidateName\" : \"2022-07-06T17:45:44.285511Z\",\n      \"probability\" : 4.2763644496197516E307,\n      \"predScoreFamilyName\" : 1.3853183777012268E308\n    }, {\n      \"predScoreGivenName\" : 8.351486314004126E307,\n      \"candidateName\" : \"2022-04-10T17:57:44.285562Z\",\n      \"probability\" : 1.3156807789302653E308,\n      \"predScoreFamilyName\" : 7.717610667928773E307\n    }, {\n      \"predScoreGivenName\" : 1.4220190738950294E306,\n      \"candidateName\" : \"2022-05-17T17:29:44.285611Z\",\n      \"probability\" : 6.820927441910008E307,\n      \"predScoreFamilyName\" : 1.6976938720708131E308\n    } ],\n    \"orderOption\" : \"2qumxgrr8jlca7hkv1yrss5011t7cojm2k1rdre1dk54vanq4a4590i7kr5637aokpze8259q0xehmxhyn2x8rfrwypwhirg20y5r2qlvcfhvpiw1dowwptrrnjh9xqqjlkg53ycln9aydbaljz1x\",\n    \"id\" : \"w6or\",\n    \"script\" : \"ryeg5zdthr66ysvz6i4qllb46sruwyv2s7cft7\"\n  }, {\n    \"firstName\" : \"Eddie\",\n    \"lastName\" : \"Haley\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.456895125065591E307,\n      \"candidateName\" : \"2022-03-28T14:25:44.286136Z\",\n      \"probability\" : 1.4827121391200278E308,\n      \"predScoreFamilyName\" : 7.340157026690011E307\n    } ],\n    \"orderOption\" : \"gc73z8grudf95dejbubyqsz4jt2pd97v7kd092fffqp29qkybqokebil5csq1pt6vhlcwma1jfvnk2qph8pod2eqvp3l0vgn5dgx0pcatpwea1047rv61da3x1bwd1ao0st5vm9thch5z0y\",\n    \"id\" : \"5u2z\",\n    \"script\" : \"d1ille3aseabbn740p3o3cok5jo60x2qu9oahtjxr3hqhxl0hni4yb1th19f1t1u4zdi8h31lfh9tsr9r6ykydsx5p9x75v2prpohaue6fdg6dy1bowk5ex0fdudm4flzl5wkot0pisydcpu8fytdtredb56zs21jdjru2nzb8\"\n  }, {\n    \"firstName\" : \"Marine\",\n    \"lastName\" : \"Langosh\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.017107867117462E306,\n      \"candidateName\" : \"2022-06-17T16:55:44.286351Z\",\n      \"probability\" : 2.7397366489652795E307,\n      \"predScoreFamilyName\" : 1.0694859720451149E308\n    }, {\n      \"predScoreGivenName\" : 3.276635447085756E307,\n      \"candidateName\" : \"2023-01-08T16:37:44.286398Z\",\n      \"probability\" : 1.5875524636750294E308,\n      \"predScoreFamilyName\" : 8.057320477935777E307\n    } ],\n    \"orderOption\" : \"hmwylvcdlyqoxaqlpo6hf7vsscinm6h75z0fwzj23ntfka7a7o0cboqv28a8goonxs68pjnty4jbxoi5dmap2nruij7g6iuyw4das6mcdd712ilny5shtcevxkok6a8mer5xpxet0fnwdt2mv1hf0nvs2fa0ac9mo1gvnxxusdl9rlonaf9v83\",\n    \"id\" : \"s0iv\",\n    \"script\" : \"c68y7p75hij749pnz6rbp3hddlan12tdcvbk0vg644n5zaab4univut40rfay1sfmz3mnxdsg2ec1opwasckskkv631adf6ttm51w3i00tb46awbluklajs4q1rwlbsr6wkknt8gtsjepqkcay48vkz5ca5\"\n  }, {\n    \"firstName\" : \"Kurtis\",\n    \"lastName\" : \"Shanahan\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.3739489995312497E308,\n      \"candidateName\" : \"2022-04-10T17:56:44.286606Z\",\n      \"probability\" : 4.510673425833084E307,\n      \"predScoreFamilyName\" : 5.854617034291148E307\n    }, {\n      \"predScoreGivenName\" : 9.728121936376594E307,\n      \"candidateName\" : \"2022-09-03T17:37:44.286653Z\",\n      \"probability\" : 7.618680390418392E307,\n      \"predScoreFamilyName\" : 1.2578605305815447E308\n    }, {\n      \"predScoreGivenName\" : 6.562558585904614E307,\n      \"candidateName\" : \"2022-05-29T16:20:44.286699Z\",\n      \"probability\" : 1.4796847440570964E307,\n      \"predScoreFamilyName\" : 1.3484261912291078E308\n    } ],\n    \"orderOption\" : \"2te868qwhqt5r617zigdcrk7mnxwmkn0fuebzb3tmj0nhiztk6bq6mhomdr9n2fig0fcv5wp5vl\",\n    \"id\" : \"22j2\",\n    \"script\" : \"yx1425lbnkogjbabjpx0aiweqxbh67j69egwln04elaw9vciy5r15qhyemu5gjuydqqz9avwjkeudhntrxnov4o35o71zf944zcflpfm2y1hf0vr6942s1pw4360tzswpfbfjofsqfypf1ktow85ggl2nfpzk2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f1e0efd-faf2-44c8-a67d-f5826a685509",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.287004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b54a779f-f90d-4f6d-8ac3-0a7c3aac8d05",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b54a779f-f90d-4f6d-8ac3-0a7c3aac8d05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.283554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "8715d6a8-fdb7-4ce2-8f91-a294771e9137",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8715d6a8-fdb7-4ce2-8f91-a294771e9137",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.283512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "a9a33b2a-26df-4eb3-a88c-725eedb1f697",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a9a33b2a-26df-4eb3-a88c-725eedb1f697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.283494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "123293c7-4db3-4b91-80d2-9a4c93922580",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Elwanda\",\n    \"lastName\" : \"Marvin\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.598174173085587E307,\n      \"candidateName\" : \"2022-09-29T17:58:44.283087Z\",\n      \"probability\" : 8.15889115583365E306,\n      \"predScoreFamilyName\" : 6.232952792132585E307\n    }, {\n      \"predScoreGivenName\" : 1.022764004129651E308,\n      \"candidateName\" : \"2022-04-23T16:25:44.283136Z\",\n      \"probability\" : 1.63661270242969E308,\n      \"predScoreFamilyName\" : 1.473516290585249E307\n    }, {\n      \"predScoreGivenName\" : 5.24139091029376E307,\n      \"candidateName\" : \"2022-06-12T14:44:44.283185Z\",\n      \"probability\" : 4.4422841937555243E307,\n      \"predScoreFamilyName\" : 1.1028491436661878E308\n    }, {\n      \"predScoreGivenName\" : 1.2227628191628496E308,\n      \"candidateName\" : \"2022-10-20T17:11:44.283231Z\",\n      \"probability\" : 1.2282354590842233E308,\n      \"predScoreFamilyName\" : 4.1712352291669446E307\n    }, {\n      \"predScoreGivenName\" : 1.2094860621850954E308,\n      \"candidateName\" : \"2023-01-22T14:26:44.28328Z\",\n      \"probability\" : 2.4026883087585517E307,\n      \"predScoreFamilyName\" : 2.5106869901092996E307\n    } ],\n    \"orderOption\" : \"ja6krb3ihp157kiqkgakx8zvloezrk8akv2j6ujsazrjzell0gb4k12jqcdozfvyg8dc5be2o99gsf5eyt1r5nz56qfh7exstjbz9im1jk0nrrebug0ixoq196gv6r6alnxnefdvbfnwzhsmk1hkvq3bbtyeog62uttx7a8q57e15bfysyvzo3t\",\n    \"id\" : \"8e2v\",\n    \"script\" : \"awrw7f0isxz77m0l6ve8hqkv98d3gahoyndrvcfdfr3p\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "123293c7-4db3-4b91-80d2-9a4c93922580",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.283467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a0da01e2-d1da-44e1-95d8-0495d81f535e",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/k2bkv621b4am7aetdiqvbdyxrdtgv44bvzlsf98rhopudiwe0el7ievjog8helnybibh/lrvcj68ke001ri8z123l9jq7uggmf013cdy5nejjq59u711n1h3mzk48k6ent4lkyjvsjhpgrhykkyi3fgnxvv0thke66es2oejn7sve12e",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a0da01e2-d1da-44e1-95d8-0495d81f535e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.282979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    }
  }, {
    "id" : "58e87793-08b6-49af-8f25-f77af9945a4f",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/nciy5eaeyo6cpoccae1n7zviaau1zl0bxdufgfcgbfhbcjrdpm5k8c5vzssuicy029b78kblzu71cg4ucimq49lkc18j42465fso987l7lpzloz/anbem9mh7nog66iqjg55wh0x85g95970eksve3t229tti",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "58e87793-08b6-49af-8f25-f77af9945a4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.282936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    }
  }, {
    "id" : "8dbf1650-63a7-440d-87b5-d85e031f80d1",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/cpidkcnaswb3rhxk5mlfnegi879oksvn16n92zw0k4qmdpftzr1w9thg1gifayi72qtz5vvjd3kthm4l0065uvqyiaugc068o1sxdsr4vt9dyes/xu48bpifrlxthc6p32hhqum4rbo4taw2hflook2uvmbmvjydrbue5krxj4amsti96nsipa7z6k95rzjsw0g7unyrjn9ximomqulzno5m45iw03zvoye4asstd8l9se2ksw5y2dg9uznmnc4ecp9at21137zy9dk9c2rbu5wanx7w450t52o87a95nc",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Adriane\",\n  \"lastName\" : \"Blick\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 3.420426737842717E306,\n    \"candidateName\" : \"2022-07-31T14:26:44.282611Z\",\n    \"probability\" : 1.6050156701914425E308,\n    \"predScoreFamilyName\" : 1.140697054259668E308\n  } ],\n  \"orderOption\" : \"kbods8q1tkz64v39yk5qxeb6zvuanwvm6gggd46cdsbqb318nrxay8n3rlzgzuddr4yqvqqge0fodn0g2tnidvliepecqwmfdo8p9iezspregdrcj0uxf5w7wfs01g10aztdvrizzijqgrgqi4ucnb5vt3sposz4cp\",\n  \"id\" : \"8733\",\n  \"script\" : \"du29cshknk4p36pka9ss6xfrk60sb78kf7tx576c31bpyxslsmrotoat92zfzgqqme1f1nfsi10k8xy7t5t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dbf1650-63a7-440d-87b5-d85e031f80d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.282881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "be6cf9fa-2eec-4401-82e7-8025d77f6672",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "be6cf9fa-2eec-4401-82e7-8025d77f6672",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.282495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "9cbbbef8-8db3-406c-81f3-cafe63beda0a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9cbbbef8-8db3-406c-81f3-cafe63beda0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.282477Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "2fcb9151-9768-4454-9842-795c0ca2a341",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 400",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2fcb9151-9768-4454-9842-795c0ca2a341",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.282459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "b7579fc4-1075-4707-8705-50bde959ae38",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"castegroup\" : \"hd1uyf8pogy5fpubr771ld3nfi9gwur3iavuw2stxfup\",\n    \"castegroupTop\" : [ \"n0e5wiw\", \"ao6qnuksbsq8bqdk14lu9ev6cgkl17e8gs2sfisfbmqtf40ez89nckjn6lh385qa51it2vhrb\", \"5wl9cbbmvlrj5d6p9lvo8i5k4bbnjcp702xoa4lz4454kpuuoloid3dw60y26u39wd\", \"9zwpuqqmdx3iyx6ulr6w1z06p9g6lim67ipdrgtoi5nvanp87jhfiaazv96ly34re8zcqhcu5z8l5dd08d63buoc4d42jrfv6vldel962q3m2fznpdy3jrk4uxhch\", \"tiyb0c3xloxrpmytwd9ochnahbbs94p4b3x0p1tz\", \"iynf4jvdpibct69fecevat3nqcyum7jcnresjxgxxplbkwjpiu6mmxhlaw2tb4nybuoytflllov0vxbou2nbmeewbs51xnre8htdtwqk4pybqz0nrxuwocd89g6ll82tlwjgxovzb\", \"8mcrjabqf9qt2zuuuyo\" ],\n    \"score\" : 88.9705341210686,\n    \"probabilityCalibrated\" : 0.682868911842371,\n    \"name\" : \"Everett Jones\",\n    \"probabilityAltCalibrated\" : 0.5743133951510695,\n    \"id\" : \"5pfz\",\n    \"castegroupAlt\" : \"joo6hgys9j4kvg65zaqmjubn8e6t2c0ir4s7dvtod59qxuu77paqstidfind9g4xmgw8sk5pt03k3m7zj2kfqpzekgzrba7ht69r2e9ckifned2rgzk6tv3w38y300eltk920np9nlv65rum2maqe\",\n    \"script\" : \"m2psi3lh3eb4v1ghxffocu3oxuplystttsi7v\"\n  }, {\n    \"castegroup\" : \"593ajzqyldm34le9y6ensuwvkf57hd3p27smiye9srf0gj1tq573nlabw1e6qtl4ccesmt8figqjb\",\n    \"castegroupTop\" : [ \"gye5nq93etldrkr5a18zwmkg1stwmggvytspaltg8eobxtowg1imv1iqct9057kjpg79vhbc1v9ber3pdb65ab4d0n1x5rg15dmbxu1wh8g5y096axuapl030o0duukerxmqalp4fpp9hcdj68s7da16xy8y8uslbwred1jn4a4vjtfq6w0ng2sijnb7zv97kqsva\", \"6jal3q9h69df1idf3d7pb67jp0cfcbjrdx54sp3b6sp6issc0\", \"1xtfmu6tdr2yzqgp8q6pi38l8n6raktn6g5hpiavbn5lelvsf5tqonfszzv627938r62an1c0bi9s9er1hg0nhnt55heg5cqe6f1nnspm0x4nupymjuubphiriqlwe5n2wawj4qtdyie6llpp6i6kjgex5fxb6dmpup5ac7xew\", \"jpw7f9lrpyoxjp8lc6uokm8j3pu6a0wxvtb4nrr3ti9cd8nhi6tvqar2kd5ckqio41m73rrh03ruo6xhngxbl3m9qhn3dltdj7tgux5mlbykfzqdwmofuztdryg1t9pobqjwu9ebkp69s7m4083o5f4j2i7rs9\", \"d3v2ud716vu0ibkohar8rjj4uk1qne1bnixnoj6vsc9o2ob8dsnnp750r01ppt9akkl0supvi84yo6zzhsns7hmczyi4pvxhxpqiaobzxd5ah48fzcb4low\", \"nn8mis6sv077srkz45rtwkew0618pfpegs5460zb0c1far66brzls\", \"8tuvh4r00xmsshl938b5haamhytxuc6s7x5ejwtlxubgjrm3yz23efhv8xo0igyuzd4gxvtfjh5ov2licwuzhtoinvpjmar4s76rymrp3pypbpc795ix1p6ce64cve0lyo266jm8excwbwd2tr8x3a05965gnlpm1kn8ikovawi3o7s6wakkasp4j51cyy\", \"240sqeagep7ovsnib45x51fic77i4syii1eo5if6d8e4tms2eovk2t8jb3qhz97wd58r00wylj99j7faeiek7p37oy8hdv9afwqlm71oku2\" ],\n    \"score\" : 77.46705415605065,\n    \"probabilityCalibrated\" : 0.47452444120812864,\n    \"name\" : \"Jerrod Veum\",\n    \"probabilityAltCalibrated\" : 0.40564217714247564,\n    \"id\" : \"3cge\",\n    \"castegroupAlt\" : \"55gy8\",\n    \"script\" : \"lx701d38eoj98qbdkvb1q3ek8anm4k834df219o6j8sus0vb8wx7fanr79ugqttg83vlt8pcp7m3ugxcwlg30ve3ms4uw5dmczrf7t6r1k8ql68c6ptlkb34shcnipgu15biex8ejtzan1d1m\"\n  }, {\n    \"castegroup\" : \"82ejffu62y8tt1uorxexaszukwopqyzt0ykx4xrgo5h78if6h6mh\",\n    \"castegroupTop\" : [ \"je8oz8bitbkto0o5np83t306nhiletsa8mc9z4cb94iygcytpk81dmi4gk9pqkod14gtowket6j6xq8sybbw8d8t1pgj2iw16e34ly2aj3mrpe5e93p4tfm1tntcul6hod3ukxdon3kkao5iucjcxjw5kv\", \"euctve3zmg4opxno8eeyx3rcu6mh05en5gnqxk57srgavd0u6\", \"9oyddxvaihzzbd2vx7jplagw26xny9ysrss7a8vcc1fhe19zzu2g0kjp3e8a1srvnfk0orwh6i\", \"8s8wcj76qi5j2xvzoie9y4ualghohr8iw89mdes6j10qpthys79czoktfl14gdihx3fv\", \"rqgsns38f5og40n7y9dkz2wrfde8rbbr9ogh85e6lk84i4v5774a753qscfyve1q6\", \"dvhastyhllcwonxcee5zrg22ngofa20a6hnh2z2y8z493v0acp1fj31270yauig7eusb6odihc1qq2787dkm8nwm50zlstyqm\", \"7wr6wm8cy5wy8m9l2fay7jvmbnr4j6rg39k5adkr1slta2blfkxy4aghivch6nwhy8p3f6ump87hrpsnfhm862tmgehu\", \"5w5effr5p0pdc44vdg13t0zpmgkh6mxmyue16xneoidn26whe8ldp4xk79jcn6bqbyz4kglns2b33eocw0ce1r4hgesiqbyx0fcfo1qy59ugoxwl13it6q4dfnxfq18t147zvv29vx2z1ack8wpmc\" ],\n    \"score\" : 6.325009007468774,\n    \"probabilityCalibrated\" : 0.2513799122043978,\n    \"name\" : \"Phillip Larson V\",\n    \"probabilityAltCalibrated\" : 0.25746128558634673,\n    \"id\" : \"k4g1\",\n    \"castegroupAlt\" : \"mwmgs8mu0v4vb501tzna3a58f1kaotazh7gk3rl27siiz3rzpefeiy6v4o17zq42327pbdu2n2ezf4d4ba7sn3fk8rlcex2uq1r1zh4o01g\",\n    \"script\" : \"n83n2ves8xch40nitkc3jiq3uewx1w\"\n  }, {\n    \"castegroup\" : \"2m7c34qnm3yvnzui7omu1u3rwz6zy33j6gk13kxn8dbn1fqqc92xq955dq6jt1q7e8v3dszf15j5ekdfxcxwuq4g2orfxemecc1vxvsrffn5e1stozdyyl72qj201dsku2ck9m377r94r7esy5df85jhjypepfrxdpp\",\n    \"castegroupTop\" : [ \"9zroeyycbp1bgrznpzv8qsfe65hon6n1q702z0w8792su9moh3a\" ],\n    \"score\" : 65.64968035191873,\n    \"probabilityCalibrated\" : -0.5858713427573345,\n    \"name\" : \"Miss Omar Hegmann\",\n    \"probabilityAltCalibrated\" : -0.9815974544676214,\n    \"id\" : \"xgzl\",\n    \"castegroupAlt\" : \"p5mznylh4wxzynsskd53n4k1kmjskr52z0giwf84uyyg9p2vg4n3similx7ecygxdem202ho0ckov6r6h8buc4k\",\n    \"script\" : \"i260jhfkkz8ju4jhn4se56xohtkje02h8y18gkgdk0bchyqm5mvqsqc1mh3mudoey2p94xdt74k2j3koas1y68htc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7579fc4-1075-4707-8705-50bde959ae38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.282428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Caste group-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameCastegroupOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameCastegroupOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "cb65efba-5588-43d6-86cc-c9fc071ae11a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/81bisbsu1y0idy2qn8bfndw94xa9og1ygt66vcgv621t20bshd5uig01la9rglpg6rwd1bx8h5jr3l6q3sdtgkx3rzm68zlrd2uj3vx7ed95/ghsxxk5wu1k",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "cb65efba-5588-43d6-86cc-c9fc071ae11a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.28139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    }
  }, {
    "id" : "14046016-5e38-4baf-999a-e41f9be272a0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/do44ruow5ve5x69vnz0od5rath9boghvsyali4pvwwdwxmd7zziysnhtz49p13mev2t913kq5d2e45g9q4btygy7bkd16ucwqglgywdzvd65oqu636c96wso/3kufh3c66ytp7rggn011h3i8bsgr1y33py6bt1220l3p2swaqezzyotyx21bq94eu1w8gje8wrvp9v3exzynj8zllcdxsjmacy0s9eocozlmji5yw4n5pud31nemsdxno0c0wk3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "14046016-5e38-4baf-999a-e41f9be272a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.281337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    }
  }, {
    "id" : "d2c16048-d558-4141-85c6-19084a468f18",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/2ilzj8s684pjftrkq6xth688wx8uijkmkemxvfv18mcqftljk0gx6iqg1nq2iyncnyfdhqelrtdh58pxdvom687yagr9f6x3eqgwpr1f8ubclbv0gmz4i6y709v14xv9332pi36lfobqsummjyl2h91w55yeemp3tpcl0bndv0r46tfa5dch0eyzel/a3vhu3fy4z65lcltp3hzeu6ov6vmblh1uhjfnj39sun7r8k7i4oid9ei46rj8jg1gl2n6aoc8szcg84lzng3l59pbexcnyaflghwo4dlvzhe5gq440ywyuh",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"castegroup\" : \"swo5nnveqhhtola8r3wpepbfk6tugv21kje69j29t7dhc8n0t3h25vg6ufx5hzmkut6cejjdj9tks5ov7suvgrfwxaiyku936tih49g649p7r4pzlw953\",\n  \"castegroupTop\" : [ \"vh3y2q85ikijiedtj6yovvjnrxm10kys8ihlyn2iyb8q0r4wuw7lxx7jo3vlp8056qjmsqx7q61nwrcvfvlyya5y4cbtp945c5jcxcjvn1c7hm58f0tjyc1e87dq13fw5s884z\", \"mlru\", \"spsgsl865eiil1wykn6r5orsf0r8flbq7t2bhldaqux0n0u9etbjip6mw16ia4jaa2omkoyshh1bwdporfb2jw3h9vgwlnr59659zsspl7azqvpnedffyyqtm2tk0ethhbat4xucfokp7vbd0z26l2stu1xw3cb6ymzoulwjys74hgezgsqrndou5uvrm1gajb0\", \"1q2bkkdgfzflftdfeqggs4zpiwpd0quu7zamii3yekvoe1to5lufuf\", \"kovwof4d7tf91y10fmse83bsza3xsd4fykqoruizlf1ohwr1mzuwsaeyk3hlr2c57r4hpqvutx4y7tm7aehd3xjisnh9dwy7kxqz11wxmbu6il9ut9ee88517pgm6j89mvqrhdxow665q0yaeeoy86x1da407b\", \"l4q96ctgxp4gbfvvacf2ufz59s8w2hkqti7jyhehg8t4edsvi5739a4e7qqsv40ymm\", \"1p9rdoh1j40nnqdgkf0588xnnrvwc8ojsrlni20j466jxwomhql4ls5sf1mvmnk7o09e9mqv86\" ],\n  \"score\" : 87.2365847244861,\n  \"probabilityCalibrated\" : 0.6149584272373667,\n  \"name\" : \"Yadira Doyle\",\n  \"probabilityAltCalibrated\" : 0.3006204991982704,\n  \"id\" : \"3i4l\",\n  \"castegroupAlt\" : \"1rzqto8z0rxqnpch4snc1qa8p57c5b55x9acweftem24y1mbhzwei2l\",\n  \"script\" : \"x009o4vps5k2ux2vtplkq8dtruqcu0zyllkyabmrtotj3tp4kyhids2c7bt54jcfjfvocp1fedrycp4efqsw5pt85hjnw80bkd5ygy1j5ctfwld4ek8oybxtc1no1oms6sciqeojw0oec9z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2c16048-d558-4141-85c6-19084a468f18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.281251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull",
          "schema" : {
            "description" : "Caste group-coded names",
            "properties" : {
              "castegroup" : {
                "description" : "Most likely caste group",
                "type" : "string"
              },
              "castegroupAlt" : {
                "description" : "Second best alternative : caste group ",
                "type" : "string"
              },
              "castegroupTop" : {
                "description" : "List caste group (top 10)",
                "items" : {
                  "description" : "List caste group (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameCastegroupOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0ae9a14f-fc54-4767-8f58-e5ad5a445227",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0ae9a14f-fc54-4767-8f58-e5ad5a445227",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.280686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate"
        }
      }
    }
  }, {
    "id" : "514e47b9-7726-4395-9fc1-f3aad6f9da2c",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rowHeaders\" : [ \"snve2r7yuzrigj585hjmzgw37gx2gv8fxs9nnsur7mdadxrw3hc2f2bzmhla6yy38s3848hoi4r3ta59rdr5921adlz9qbweb6751cra\", \"ve75a94cvn0cmte0w9d6cw2wu9e1dqlmdyjhrq2s22kbqnhjse6r2wyxhayrt0p4g91tnqlkqw48nmrxn4rr15yqwbcj8gd243e57yil8z8l95jk5v9wishsirk3d7v3h07txchb4\", \"fiwajwo44kwcunpb94myxemonf02rbt9vg9qs16ary6983rdzsew0e\", \"6cfr5jkukbk1ncldkl62gs2dm6n\", \"0n73p4sb1llb017h1zn4ae8cz1sj8i16yxgydmuzdv8bbpdw8yyud7pgyk7up1xd2uqhir80k5cb0ksgz9sb4l0iqtqdbuf0psds36p03puwj7ip6sos5\", \"u2jzebdrs42d2ihxy2n4pa1v6dp6fx8efazu7s0dwtkcztb0ln8a41sfe5y19ipr4mxl6xs3h4pkmxc8gfm6ji7powdijzbmoug7mgm52c03wj80lw1kqqt48x3pt3x172hlkimqax2zh72djsqmghk5refux3pixmi1g1kkfylzkgsvimo6upi7vqi\", \"2yh1avln4bzdwx98n0vo1urb1xcrtusf5w2mdzv\", \"qvsc2isgrlothve8enyswlmj5m6oz2fs6bp5rtwuqdr44n9k74mhsqk9sebgv4iz5dmwesqz\" ],\n  \"data\" : [ [ 1048030466, 1642382463, 2141546653, 811478694 ], [ 41704163, 1367340767, 1563159698 ], [ 614980094, 1967509520, 1299580182, 405413650, 216089209 ] ],\n  \"historyTruncated\" : true,\n  \"colHeaders\" : [ \"k3mo1bndr560k0t4llw9l749jc8o6u2wvs9dviz4upxnoc218nywnxtjuluqozygjpsvq1ah95xgherhnv3unmbju5\", \"vd8mdwd9u1zumjuxlrfm7fp4nvp6td\", \"m8ez0xt1x63vudfo04sds07ihv2nkriuim5g1ty7clmab8xpgtep5ol0q5uum1vnyyn52r16xn9m4oqz6x9jzmqgrgh8esgjbgw5uhplvlpgl9lj3z27mx63k265tmygh25u6uv9ob8uuhyhj9057t3thltymz4ngexbhnrtiwcp0\", \"jh7vrhv70crut1w0qe0bj9qm2rz1aw3w34ruzvgd3wmdz8yvkxuesm\", \"c60sasxnkblmit46jmdjf4xsf00zvkvlkfpxeysb3n3dmllygg1bln1s9w2rdz2g87dten6wssa3zk7wknjrpif\", \"69v5ca9dkejej6aq01dhgxjv2k4svsjoaf0f2uacfycp8nq3wydvs93y85oqev8zjjvyhn5wl14m2efdpynxh09k0y347ty929ejj8o0s24351qgke3ytc64ucmwcf0r8t5m\", \"k240uui4vigl52zyppmal1wfx92hgx\", \"riuyuy5h56spd63z9rg9nl4g6j8tinqay5ct30o4defwna7dgown50mgff9lpvze3t7jeqz9g0fm83xpzcyimkri0yx6w5rj06dvqyjjoe00vbhvseul6a3kx596wwb073wqne7e6inyhnikdiwpi8d1i7b7t2f\" ],\n  \"totalUsage\" : 3321927640759258108,\n  \"periodStart\" : 4988614876324641917,\n  \"periodEnd\" : 3503906428947231110,\n  \"timeUnit\" : \"2022-10-24T18:01:44.280458Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "514e47b9-7726-4395-9fc1-f3aad6f9da2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.280641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate",
          "schema" : {
            "properties" : {
              "colHeaders" : {
                "description" : "apiServices as column headers ",
                "items" : {
                  "description" : "apiServices as column headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "data" : {
                "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items" : {
                  "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                  "items" : {
                    "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "historyTruncated" : {
                "description" : "If the history was truncaded due to data limit",
                "type" : "boolean"
              },
              "periodEnd" : {
                "description" : "End datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "periodStart" : {
                "description" : "Start datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "rowHeaders" : {
                "description" : "dates as row headers ",
                "items" : {
                  "description" : "dates as row headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timeUnit" : {
                "description" : "Time unit is DAY, WEEK or MONTH depending on prior usage",
                "type" : "string"
              },
              "totalUsage" : {
                "description" : "Total usage in the current period",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageAggregatedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d0794279-ba99-4516-9d63-3fd10fefff5a",
    "name" : "Print historical API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d0794279-ba99-4516-9d63-3fd10fefff5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.280021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory"
        }
      }
    }
  }, {
    "id" : "823d274e-2841-4dea-959d-679b51f1f147",
    "name" : "Print historical API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"detailedUsage\" : [ {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"td6x3heyanbf6qxhipzwx490jylrojve3p26z140s0i0kshrad10bwrjg7yiwfnfvjnep6bo04iap669pdsm1ygup0m7hlurr6b7nvir2on9zqobzlyvtamyhqh020l8nkfk7s1dlmc5ncswzh9xhhrys1mdv1jjsfa185wly3ju6\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"r46x\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"b89wkhzdey04kgs17f90092wuu4k2u2d7wwdhi8ok8oq550t059wu4sdj0dol4oe399a05st8u4p65t4klxb4kcj0o4jcq4o45pata7lyx359nau87a31wkpd3l1se6kf94zsaa7ntyl32io7639e\",\n    \"createdDateTime\" : 8468580665820929507,\n    \"lastFlushedDateTime\" : 5102269028850012954,\n    \"totalUsage\" : 7165593853451978735,\n    \"hostAddress\" : \"90e93xn4uomybvkdx2roixpqstz0egtmsdds214oe0stwj81b9146m3eh4ocryhs2s8y1c5fpbdfjf8b69u6qgftk8xzg2nqq9joae0q0d7v3ncudketsavyc5pcen3f940pfe7dimimuv1icwcldi1d6stvbi1nuq9yt1gx4n8b62pr0l945ewxt\",\n    \"lastUsedDateTime\" : 5610936963040122336\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"bnfdzs5mfd0wkx3b6tn8t138oyof7m5xcf3kyf8pvayfpabm\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"4k0t\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"weaq4iiljex0o7a36ily48aqg6befapma9wlbpzi9uon9sad9e9vrm7x32w4u19x36v8jmaoaa1ie20ispllupt4aquxm3m2xcb\",\n    \"createdDateTime\" : 1566154248970400694,\n    \"lastFlushedDateTime\" : 3362119331249030324,\n    \"totalUsage\" : 7274277129565113598,\n    \"hostAddress\" : \"b7wlw2bxw4r4v28zl6cfuwmfrsb2ryuxtwzyztnso7iuv61gk1fqpib0qap3pjithxm0mw69n4a7ggdov9n01n5tdi1gab0hv1pf9wjjkpga6feqqn2tsebqadcazywekahjpnb21j63mc1b0vv5ibye8bnbz5hkauowpza\",\n    \"lastUsedDateTime\" : 7824155605926755400\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "823d274e-2841-4dea-959d-679b51f1f147",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.279978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory",
          "schema" : {
            "properties" : {
              "detailedUsage" : {
                "description" : "Detailed usage as reported by the deduplicating API counter.",
                "items" : {
                  "$ref" : "#/components/schemas/APICounterV2Out"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageHistoryOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9221c771-7728-49d0-81e1-b1889402a101",
    "name" : "Print current API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9221c771-7728-49d0-81e1-b1889402a101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.278973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage"
        }
      }
    }
  }, {
    "id" : "f6d4c49d-e505-4201-a578-d37b09be80ac",
    "name" : "Print current API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"overageInclTax\" : 2.5453803159455745E307,\n  \"overageQuantity\" : 4817597489484127173,\n  \"billingPeriod\" : {\n    \"apiKey\" : \"xqyrc3bc7rslsqf4t7jqlvgov2am8rsv58g6nbierdutu1zv3qmut4s2n1brdl831033w4oq0xflbqfl2fb\",\n    \"periodStarted\" : 3185172810302304794,\n    \"stripeCurrentPeriodEnd\" : 4889868014403724397,\n    \"usage\" : 2186213416986323089,\n    \"hardLimit\" : 3458758219510802038,\n    \"periodEnded\" : 9218970537403554451,\n    \"subscriptionStarted\" : 2353207902164192675,\n    \"billingStatus\" : \"ed7zoku08spibbtm9918c9ax6hz88x8vbxudx0gxtppyxwy2eeb2miuntx9ktpe99t4rcxgagwuruo2nhu3qkng5cw63zyee3e76e7bssysl73yun1m0voqp2oaxfr3c1oesn3u3h9zgnw3z3nn0espkccyzp1j1rjmwn0fr8ik1f\",\n    \"softLimit\" : 5253088497342872770,\n    \"stripeCurrentPeriodStart\" : 4120451646110546871\n  },\n  \"overageCurrency\" : \"YER\",\n  \"subscription\" : {\n    \"stripeStatus\" : \"hhf09al9sxnpm0vfja0fz10rxxs1vh5lylipib97tp0bgvm671nw3jstxonz7bjfucp3zonho42dibvt21mmxr5d1hwrhmxpsamk7knghb\",\n    \"planBaseFeesKey\" : \"3uwij5agwkz0ph5dlwjrtvhxdnfpj8of3irk\",\n    \"planQuota\" : 5204026721140018450,\n    \"apiKey\" : \"6effl9wwk242u3qn21hq8p10ohqxqopul6x0g47q4pqzvmlbigta9na8xl2bvlpqn0zv8o6hmsckkullqqxyiks7qncslqxvak8gfgdpkmmsgdlhudzi4k8x0mr5wnjfwvk490fh0rc8odqb98iein6p\",\n    \"priceOverageUSD\" : 8.4373583400148E307,\n    \"priceUSD\" : 3.9934153315897667E307,\n    \"planStarted\" : 8598738395992524604,\n    \"planName\" : \"Agustin Sanford\",\n    \"planStatus\" : \"nb643yxz5jr3rqq2y2e9nb8plqewe8t4h3eacbbubdxjderdjmqzkqxhf5xidwicq34p3logq2vt101umjshsd8zcuze3amjberem25ji82j3tc875werctfk682tktl9tw\",\n    \"priceOverage\" : 5.742122292082084E307,\n    \"userId\" : \"1iq7\",\n    \"planEnded\" : 5037083286464429402,\n    \"taxRate\" : 2.3711538027003615E307,\n    \"price\" : 2.008706774228678E307,\n    \"currency\" : \"XPT\",\n    \"currencyFactor\" : 6.681424315347145E307,\n    \"stripeSubscription\" : \"cc39v2v8jfgqv6qr3ngizqbqs6k2gyfw977c8u98ge8fahs1q2w6vey7zz52bmecmd8y6j2af5kkn9xtm47b7pab29782geh367fc51h675t949g5k25p3di8dykg1vvg13v79mt3\",\n    \"stripeCustomerId\" : \"b368\",\n    \"priorPlanStarted\" : 2774123717353992553\n  },\n  \"overageExclTax\" : 6.804980707484205E306\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6d4c49d-e505-4201-a578-d37b09be80ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.278919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage",
          "schema" : {
            "properties" : {
              "billingPeriod" : {
                "$ref" : "#/components/schemas/APIBillingPeriodUsageOut"
              },
              "overageCurrency" : {
                "description" : "Currency of the overage amount.",
                "type" : "string"
              },
              "overageExclTax" : {
                "description" : "Overage amount including any tax.",
                "format" : "double",
                "type" : "number"
              },
              "overageInclTax" : {
                "description" : "Overage amount including tax (if applicable).",
                "format" : "double",
                "type" : "number"
              },
              "overageQuantity" : {
                "description" : "Quantity above monthly quota of the current subscritpion, in units.",
                "format" : "int64",
                "type" : "integer"
              },
              "subscription" : {
                "$ref" : "#/components/schemas/APIPlanSubscriptionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APICurrentUsageOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "26f56e12-e97d-40d6-9b95-b89e2b888a45",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "26f56e12-e97d-40d6-9b95-b89e2b888a45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.277947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus"
        }
      }
    }
  }, {
    "id" : "95964e36-2570-4094-8535-fac23089a6c1",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classifiers\" : [ {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Qiana Morar\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Mr. Frederick Littel\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Liz Pollich DVM\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Kisha Frami\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Nigel Cronin\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Jesusa Abshire Sr.\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Brenton Beahan\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Shakira Lynch\",\n    \"serving\" : true\n  } ],\n  \"softwareVersion\" : {\n    \"softwareNameAndVersion\" : \"pov9tf2e9tvhhuc8vxbkbpi1n3kotla9p6fy3ajt7qi6x9h5ohqbnhkbm7bmrvp708r5m8vz5quxvn73nqrrq9gf0mgomekx4iquiv0ewcyjzb6mw5gtk1u2mnkzj2oi42kgno\",\n    \"softwareVersion\" : [ 313022502, 2052224428, 1161838400, 69053435, 321159582 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95964e36-2570-4094-8535-fac23089a6c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.277914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus",
          "schema" : {
            "properties" : {
              "classifiers" : {
                "description" : "The list of classifiers and versions.",
                "items" : {
                  "$ref" : "#/components/schemas/APIClassifierOut"
                },
                "type" : "array"
              },
              "softwareVersion" : {
                "$ref" : "#/components/schemas/SoftwareVersionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifiersStatusOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e3cbb2a6-a2d8-4a60-a1a3-fab81f57c142",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e3cbb2a6-a2d8-4a60-a1a3-fab81f57c142",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.277189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices"
        }
      }
    }
  }, {
    "id" : "e9dad6bc-8c88-4523-953e-2e196d36ec39",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiServices\" : [ {\n    \"costInUnits\" : 1413716596,\n    \"serviceGroup\" : \"6nwqcqjpghujxj7tj8zcguceoc0r9qzj03jxhj6ztd2djesoggyj82og21idkshj5pvpwzlyy1ocghj56qtkkbje4dh7wx23uj9h93crk1gd7kwkmpv4bbze77ccsgeza9tuobng6uswqp5mca9zz42txzcpen6mad2n13ijp7ysfyblf8r\",\n    \"serviceName\" : \"Everett Rowe V\"\n  }, {\n    \"costInUnits\" : 1209557466,\n    \"serviceGroup\" : \"jxzzk0kusssdupm8225ix3bc57tk3h6zaxstglh7vyvbauoc1ned8hjfo39vknhmk5hpa9kyzkyopaufv29rn9jzavcfvv5rdfaf\",\n    \"serviceName\" : \"Justina Hand\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9dad6bc-8c88-4523-953e-2e196d36ec39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.277155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices",
          "schema" : {
            "properties" : {
              "apiServices" : {
                "description" : "List of API Services",
                "items" : {
                  "$ref" : "#/components/schemas/APIServiceOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIServicesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "73ae8fba-8751-43ea-a497-c380799852df",
    "name" : "Read API Key info. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "73ae8fba-8751-43ea-a497-c380799852df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.276849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo"
        }
      }
    }
  }, {
    "id" : "4c6bc4ce-17cd-44ef-bcfd-a68d882b7f6b",
    "name" : "Read API Key info. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"6na94zjz1w9p8cqnpgblwzj0xtspmp83snu5wtppmkecls39bscpetr5kn3dkyaq2qwqykcj0xucgt6tmm9sxdlmhfkwu1yoo\",\n  \"partner\" : false,\n  \"corporate\" : true,\n  \"anonymized\" : true,\n  \"learnable\" : false,\n  \"admin\" : true,\n  \"disabled\" : true,\n  \"userId\" : \"n477\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c6bc4ce-17cd-44ef-bcfd-a68d882b7f6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.276793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "677b1380-cdc3-4438-b1a8-1538ecdec704",
    "name" : "Activate/deactivate anonymization for a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/anonymize/nxkicf0onq6r9j85hc3oyqvxwley7wabnhcp3h1wtdn3jcbfkhfdmtrts66g9rj2zzpppmh21czdetkwvqm9b9dyljzm5bsqtgkmf5xlrtttxy5ctvx9bdhetmjdwtz3sys9xbdz3it8lx732sj7s1emq9t4tw1k0nh1mjh6ixc4tly0aw59jmq17q2ceh2vxl8mna/false/bo5wm1ze4dyhp4izzo1d9owd3tmypsqpo7ni5zh5q0wzyjahtcunor4ffmvxuplwv6vemhfop3ahrku4hatn9hd77xgbpqgcp9bhz7smmvbfp5no7ygbiwrsqu6lelsbhrtvy54jtra8mcl3xnhk19uzdibup4fs98bk5bk7x8fdwb",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "677b1380-cdc3-4438-b1a8-1538ecdec704",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.276365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    }
  }, {
    "id" : "0dcee6df-d31c-47c3-b5f1-c5345b93edfb",
    "name" : "Activate/deactivate anonymization for a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/anonymize/y2nnchw2qqi3qmzwhmezsvtqtpcdkqmjy7qa9kb2y5xs090oyzna9tspw1zqdkwz5ddlb3pxhzofk4th79rilx76g6tj9w9226q45onp88iee6bvl/false/yebbesahz65jbqfybd8katu0dwumr41wcbjcakhm01o2cc2q494r0e92a677kz8m9fg9njqa0r5pqu6g9anntj",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"qyx0\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : true,\n  \"admin\" : false,\n  \"disabled\" : false,\n  \"userId\" : \"54f2\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dcee6df-d31c-47c3-b5f1-c5345b93edfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:44.275638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  } ]
}