{
  "mappings" : [ {
    "id" : "3fff7feb-5a02-49a4-b822-9705661a5c3d",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3fff7feb-5a02-49a4-b822-9705661a5c3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.501114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "f38a888f-f773-42ef-a575-f1ef27ffe2e7",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f38a888f-f773-42ef-a575-f1ef27ffe2e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.501098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "78f94584-94e6-424a-90d3-e941a3775f23",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "78f94584-94e6-424a-90d3-e941a3775f23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.501082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "db46f781-3dd0-4228-a982-8b96dff7752b",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Rana\",\n    \"lastName\" : \"Metz\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 39.34397671753824,\n    \"probabilityCalibrated\" : 0.4201334467811346,\n    \"raceEthnicitiesTop\" : [ \"gya\", \"ll7aoikaownq8m0oxqqbjiwadztdeexv4lkge84nt56s3fqf1eaxzg2g23xwx8zthx3zgn88539frllwocplkppdnn7g3dgabuzpiv5x4aybgmii6\" ],\n    \"probabilityAltCalibrated\" : -0.8925393340671075,\n    \"id\" : \"367f\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"13978xe3fx5yjsdn6qunbtni1l7tf4ucy6zgc5yygsvk4yk2ieq3kmnmapkc9x4d7th0iwbfslnkr0nett04336xcnk0b42iptnz5q56lfpxlh1lcjwmj\"\n  }, {\n    \"firstName\" : \"Roland\",\n    \"lastName\" : \"Rohan\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 99.0102014438779,\n    \"probabilityCalibrated\" : -0.41285626097624295,\n    \"raceEthnicitiesTop\" : [ \"dahshh4e7ekui3j65qzqmj4nrcoxk6zz3xc994xq9mf4m9leetjspdwapjt\", \"d6ykvn3zisei0huq05ftgy21cwqy2fl6mkz9y5hks1vys2s6sfnc923jcn3cbzx47ruhftnzfa2jzzbuuh2rbvgmzqy4dh50wozpr4fjbtpc1i5j3iij94zelq6elwputnbjdxal0vrhnhg8dnutwukseznzmoszdc\", \"nmfbixxlng4pzq50hn0tsdolxmb0sfracn2re1bjiytoc1tya61c7x4151afwo\", \"d0lo2obtw6v158pygvd0x8oumv3v8mougxld5o3xcakvwtha\", \"7e5aupm56vl9yefwuq0qlz8jejcib6o7xk2n4r9fybj3andiysgspkt3glijy19h0rubr45un0mh4bdaw9iz9uljmmkehldvzbntosenn63ahcica83ik5slonsfpnh2gy1n2bj5cytr0ta4bh2ev5hjjvpl1jx86r6natib00wse93iypvj15lg1zoluxgv\", \"o6ff0dthbdjt12sen9sbi5tjuw7ku4swmk5idxjqxmq0j34tw7d561utchxnzh5k6erdpux64rnq6x\", \"tbp84y83sndisuvxx1jh1jqd1hwwzsjb59zy9bl7wdc3j8r\" ],\n    \"probabilityAltCalibrated\" : -0.897366126969938,\n    \"id\" : \"85y8\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"sy5xnq6fwj02wxy3twkk3ld\"\n  }, {\n    \"firstName\" : \"Rosio\",\n    \"lastName\" : \"Funk\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 2.5201764670245486,\n    \"probabilityCalibrated\" : 0.3698882285652878,\n    \"raceEthnicitiesTop\" : [ \"avtftalqp0h1ivmhimfwjzrwcu4i9ujxcvo8omt0qwquv19mdmdcfj50onr7e9q0onltvuh\", \"527jeekkzrby5aaauzk1buxdipmtw5dnig63fw4q7ff9vzg8owsnmk3lmmowyg1h1w3d2v9ttqfywhngythyukq\", \"ahktyorr8teiz3xpnpfxov59u8r5ndm044oxkqlstji3l0g32vq6abhqz3q7bst7wfxz3yzzybhngr4pxgyykm2gi1d2zoj4jjjrra4trtpimslydgo7ohhn2ccjk033x02dtgm6ct0s7g2r2bpbpr1m1m00pcja32bt976h1qpau6o7cpq8wwjqx07qn90kf0l\" ],\n    \"probabilityAltCalibrated\" : 0.252780341653569,\n    \"id\" : \"z5lp\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"ywwa4y72w1dfbw9vrtjzni2wpt50wyxyo1p7625rdad4fb2imbn42epn029ot0clse1pzj4w9sf0mpwlknhwxl0ni11hj3z9m17oa68lsp6ds1i5qvv4ggv5aildqyzdpvelm695123l1vl9ns\"\n  }, {\n    \"firstName\" : \"Sydney\",\n    \"lastName\" : \"Abernathy\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 61.823720549065754,\n    \"probabilityCalibrated\" : -0.8768118304952734,\n    \"raceEthnicitiesTop\" : [ \"ty9jp4d5tt82hi7nrwps7frwzs39gee2l1sfbo0nu4myo6ujwa9p7zy5z3zijrb9jbu1580oyw2hp4qa99i6pw82owdc2qkpgwqywo94hvmon6ok2lmrtnxx6m40d4dw2cx10f7q\", \"7fk1u0ny8yma0s6brvvknkk1np8qdd37r936iheu91k1voyy03nkanbywtyncnqgachytuiqi8zj46uy7tp9domu7hnfkl2g1nzht0du8gnlfuoarljfozlvkn2qsb3mvpc77q9idxrgm347jfrfix\", \"6o62nqx1r5k8ayfnnectoydglmk34db1wbl8rhueut3lu66\", \"77jk1gwvqfjn2hlxnipu24krvssk7l91rl4dig8szbvglp9gn51ic5xrqcwybgntyycsnjn0lnsv4c2wue61d2rase2ojgchdf348jytgb8x92wlfbscwrg29i3nntj5lea3e95m\", \"bc54wznx6swxwotolys0ucvee4jx7o6wpkv5zjgtq1uyyk9sctrvin6urny2fmtjqgzwx5n19fjx0hcm4qhj\" ],\n    \"probabilityAltCalibrated\" : -0.4079694761707424,\n    \"id\" : \"c843\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"oi81so7smbzdnci1yo1ioswhzgstfcmoxfoaol872gx9zf7wisz7lsj87aso51pptatsvyq7bctssnmsfbzo3rpqdgwsq15pcj21aqt0r\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db46f781-3dd0-4228-a982-8b96dff7752b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.501052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "6c00ebc7-ed6c-4e08-8184-bf120967fe51",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Noe/Conn/16947",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6c00ebc7-ed6c-4e08-8184-bf120967fe51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.500166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "071b84bf-b041-4f6c-a1aa-3adfcefddcb5",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Dick/Koepp/49467-8057",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "071b84bf-b041-4f6c-a1aa-3adfcefddcb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.500084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "460cffdd-9b27-4853-a2cc-03e334712d1b",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Ernest/Reynolds/13042-7735",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Boyd\",\n  \"lastName\" : \"Volkman\",\n  \"raceEthnicityAlt\" : \"W_NL\",\n  \"score\" : 87.81188082229792,\n  \"probabilityCalibrated\" : -0.9328214971739053,\n  \"raceEthnicitiesTop\" : [ \"c2g7ro1ksddd4tltmto1a5jevkv6xryvbgkpz5ifgusqb4ler8paf8a3thkw07m5v1f6h1ncygsv8agr8tbhb464ot3esc9p9zkodazfju2y03vvfsx2kgnjj332tqaucc0pf2yhq141rfqai8c1g4w1ywwqjlodg0bifbf9nd6e1bd1hyjlg1v8enrohqd\", \"bdit9g5jcwasl7enxu3111is11ykxnlqkxfha9k3ty2c045jdwgm1k1sj59m22m6nut0vr8o\", \"dzobiormgioip37v7vhbl0zgrillqttvsgqu3cvg43qrwrdrb9cedq8fmc0mu4i5yho962m9c49tu1e7s9la5f8b8is1mfga3et4z3ae8acjm5iter8\", \"7gzuv0uvcsf6jwpif\", \"qmd6qmpzb8o3b29dz74pc026qbgk89fnm3z6z2tf9fz8cidvwgqnflqe70tjg2w1\" ],\n  \"probabilityAltCalibrated\" : 0.18359286871719327,\n  \"id\" : \"27e4\",\n  \"raceEthnicity\" : \"HL\",\n  \"script\" : \"urnaldaa65svet3abnpv069o0de4gmh2rjmm9s66f6dnz1zf0ypnmsdysgylmxnnx6ncivg5kypy21sw9q4se80y92rbv3hlukz0rpuabys47a0hjnxpeenuwe2fgc71d5d3t7te6y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "460cffdd-9b27-4853-a2cc-03e334712d1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.49999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "f4a848bf-227c-4c2c-81e7-b3b5cfc5f932",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f4a848bf-227c-4c2c-81e7-b3b5cfc5f932",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.499612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "1756e991-0ac1-4a31-ae01-3ccd2cbfa1f3",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1756e991-0ac1-4a31-ae01-3ccd2cbfa1f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.499597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "1b0f1c4f-a36c-49cf-b1ef-b0c91543e603",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1b0f1c4f-a36c-49cf-b1ef-b0c91543e603",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.499581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "ad6ba821-7ed1-4fa9-9634-f55bd604260f",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Alexis\",\n    \"lastName\" : \"Labadie\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 8.7561447079908,\n    \"probabilityCalibrated\" : 0.4199893943357871,\n    \"raceEthnicitiesTop\" : [ \"ln5frjzwo7conrdn77vd427qjtb0t5ed9mygrh6jecurjl7oc28g79bfilyo5btj8y0i36i79sux3l7naknu8md6dpf53dzwbsmfb0ozbi3yd2pfqi55zlm35a53waescbttm2eb7n1uz4mx78esw3fw80puwi9ox44p2c5su3xttboodllurq2mxnqtr9sj\", \"1ppqffvluuqedvdbsqgjyn5c39gic4f6easv1i55qfxgz8xn1wijl0qqg9ue8myvbz1bq3125jj63f4qswvwmxmzl7ong8ewhuzexln10z7sclq3isvif6mok6vagabuj0vc0duph2\", \"kxx\", \"hcez81k2sec5kdhbp770\" ],\n    \"probabilityAltCalibrated\" : -0.0910956484815959,\n    \"id\" : \"q341\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"pumizuienyxu68elvugj61e0oie06zc38j6khj6l4ck5xuyy1sn88vw8iiuudml1uzs0zrnikyinjx977bu9g2xk1brxat1kult6xih24kgpughv5qtuafl52b2ek6ya0jkr55kwamcq2zn3gj17320qooqctp3p4w6qt\"\n  }, {\n    \"firstName\" : \"Cyril\",\n    \"lastName\" : \"Buckridge\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 92.44873000925455,\n    \"probabilityCalibrated\" : 0.8989643343944331,\n    \"raceEthnicitiesTop\" : [ \"cfek77zat1o138962ddxk1qsv0pxwwta2g08t86gmubxnfwkh0qv0p3a7nt\", \"pk1nde7a5jjvdyez\", \"m30cnbs3w33ncsqxarn48967f9vgojhdiutc1g1irykkt3whbm0sx802asmm01v5s6rpkl5q2fsrt9zosbws3xoiqf2tsznkp6mdg0yppllqzwy2ekvkve6ml92c4l33xoyqag2z0xhw7vqg5nxw\", \"inz5p00yid5s999mqmn16k1ttncq2slrw7gcg4hlo4bjnkaxoa73p3j431xjopjma4v2n45yru5elgkj69fqx4q\", \"ab3e4r78kc\", \"o55kinjhwoxjfgq644y7e1wy0o5k6j2au2kkmwffuccu8d0ghav6q8ahfexaty16ahd30q40qo3tfrxeh45mp9r5v90as4f7gshgyip3u8hvn1z46cfpzbiprrjorcq7g6bvgeoitxv41cfpz529c21e\", \"uez75grrye97n5vktxcc3zbkeofdqek2v0\", \"mcmbq5obyxnc\" ],\n    \"probabilityAltCalibrated\" : 0.9830329210093158,\n    \"id\" : \"x6i2\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"fxw5ri6ils2ezanb15dbquunjtqckrurbhj76kyqnpil2byqg1jdza33zzj9je5dlqp0psx9gh5rm2pw10kahqgbe1zt5v0db80kvxysj4yc3p2r2al8e9qwe0122k1rg8qiq4alp8f61m7u6o1js1cv20y\"\n  }, {\n    \"firstName\" : \"Alida\",\n    \"lastName\" : \"Lehner\",\n    \"raceEthnicityAlt\" : \"A\",\n    \"score\" : 21.894629826722976,\n    \"probabilityCalibrated\" : 0.3982794128265865,\n    \"raceEthnicitiesTop\" : [ \"5cg8jq0w9jyd56x3rjkgphbqpx9nggpvkqedy4drs8l09i17jnmi0355rwhx172azqlh5n4ahhme81g96w7hi067zwlhues8qo18acpnj5mhgaia3a8pu000fm5k26nwpyw2v58ae5\", \"99ehsfbuljbs4j29s57ipnwmm3lkxs7en454j80\", \"quirwrxn7ugh9xcdr92m927i3v6mkmlusc1p1p87ffq8uhkbmd03h39a9lw3s7duwuzrdirfrm0dah1tpr0wapynjy0hybofvtanoq6b6unwn9zzc41zvo5qoe2ut8us41\", \"nvswa9tzffe4ptg5lprgcexhp\", \"pzbuzsd5czqrrviilfbdpxfey5w6dyzgtxue8dgkjwztp4tk8ckqe6xtg8405rvs20015fxuw7fm4ob68rar47niux3x82k5k1veeg\", \"k42ay9sak7r9aice8ltkyqg9p8n162gynn5rmlocqjtahdlnxn29rthg1p45vieyhhiddv46pbu1hqt02todee3k37rxnp2hnplrdlemgi7q68xt8w6biyu17b2cigs2zrnn3kapq4ugfxpubzlos16s1dzvrnbx6s\", \"7fxvuxv3e573jabxzvg96z674fqjlx67sk5\", \"azfqmu6fc74d5zefjqgi5qocul1dlnlebbvsha8592oisuioqbxlda94n9d9s56y52imwe0bswlx4otfc5bm33dmdv8zytcpckwrqqiy1qfcwnagczuabmh6n2wdh3u8fcahkkpugs8dtqaq0f6\" ],\n    \"probabilityAltCalibrated\" : 0.17811571333751175,\n    \"id\" : \"7e85\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"c7inwvfggs9wmlqe7yk77txbkxy1gh9qyz7b4j2zrygr44t136v8aahu\"\n  }, {\n    \"firstName\" : \"Darrel\",\n    \"lastName\" : \"Gibson\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 99.51447203227029,\n    \"probabilityCalibrated\" : 0.4026957227586776,\n    \"raceEthnicitiesTop\" : [ \"jw1mzhgso2853\", \"5g94p0j5mxjniabfhi7wnd02tm4onyyitcg8d3jkpi8v4e9rsvisc49dd12mvtdtdhty1xh0r8zlpa65zqewkui6p5k9wrxee099f2ejyxypvrqb8pavcx4x1wwkukmfpvatqoue3wzk40yj8amlnm6agc8jz7h2j8uqq54iptcdvilbrbiju4p0r3y7hlqofu7d0\", \"jvhk98plgo7f9frtouzi88f6dghdmz9i4p54k3ma3965czjx04itfbujw68o1uq44pc7evm5jz17thznim2dj8d4t9kyf7dvkuhd1depvz4i663g1fa79iu957iah673gnpnovp70oro88vw12vti9oh8hakho70rakszh7busdbsv0ak49x8pjydbscd415xpq\", \"x33dvrmahvxws8j5bjkivkt\", \"whx9vyeio2li5cc2uhi3dk0453arc03ff6r0wo9eysq16ety54kwra4uaz1hs\", \"tafz8m83n6itdj4641i02fm0srq9sj35le35xtrh74q3rh2sjhs53f8fpj0qknawcc1qzjnmafbr2ctuqnsmzckqbycg3hs2geyplwox4umbmnfg5pvvt37nnylfqq9xfmdqwlub9lhexmyxchbx2bdcnlzbxx360irxsq5oekc15ibao6c751utshv1rf\", \"qhwigpbnebb36qezm3wjrn9ysxpq11fx74j3p395u3ucafenorld0kw75sn22ow23hbc509uym08il9mdh\", \"fj74hze9stlywtlt7uyd4pftm3lunbntxvrbsg0qxybdkizd9n22y7mx5fv7wj6cvshj5h61oghazlon6p6qdxt50f6tbqljem90ivq3gz3piub9saoqspfl7iqf4x5gqntspqmy2zczmd15ttmqkzj09xx6i\" ],\n    \"probabilityAltCalibrated\" : -0.540614245754389,\n    \"id\" : \"l92q\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"xaak965nmp6w5ea86e1xcmlcgkfomz6npwzkajz6nzfczvtk2mlv7q3019x9y1urpbtcsjfki2jle8r1\"\n  }, {\n    \"firstName\" : \"Tina\",\n    \"lastName\" : \"Nicolas\",\n    \"raceEthnicityAlt\" : \"PI\",\n    \"score\" : 62.96440678834263,\n    \"probabilityCalibrated\" : -0.23327594693466747,\n    \"raceEthnicitiesTop\" : [ \"hdwak50y\", \"znkharf4svp6hcpirbmt21yepm3gh20j9sufgnm78uaa0v1gtj87mavteru6zs88ot6f4uhiamu8yqbwuvne6xcl2dt6d9mfv\", \"vzu5mwlhzstfuupgcovtoona89qpr0iefblgjpfq9kunxzdz179g5yziw7enn51r226jh8yxkkd81sv6ko5x9oua7g9ht78pd2f32mjfbubz7hoic3hge2djhkpi7f3uwmunlfd9sdmwil3padn6uy\", \"0z88aqg8j1sz6dmiyhddx76kam4o577wur7sef3kq7wyg5gf8xlkfabng4o29y5n94qr01yz7y43yecacfz2mwf2hm5nmggszdju9bf7tnsrgmzxm4gk38y95a4m\" ],\n    \"probabilityAltCalibrated\" : -0.08370976067167413,\n    \"id\" : \"oai6\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"9tprbjrzvus51oy9fm7zmgtjqmsr1imsuwymazettmu1dg49r0l036ggr3s0doleiqfi2spipu5w1v9drsf84k2rcbw5qt0yu3xghjij866ok4k2ewrrd1r75gjbvvwllb\"\n  }, {\n    \"firstName\" : \"Eddy\",\n    \"lastName\" : \"Armstrong\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 96.25767310433568,\n    \"probabilityCalibrated\" : -0.29332838811935047,\n    \"raceEthnicitiesTop\" : [ \"jjy8zs2m8rxqcf4slq27fkliwx172erhhcgtzworsu6z2lmy9dunw4yiaju09giy5ef4blt7go5r6l4v7jx6xn8u2xw5wvkkh4zldbil5vu65bbnpjrmmlsvsqa3fu5cbro192ia1cis6vqnsa4mqbqlzooq7x1yg3ua2jy1lbc1p\", \"bdt4e6pmrkww4pod24iwbziq3pl60pn2km78ikehwk9bn98t875e8p0no8xnnebzkdofor3yd3l1ib6bk3gmd7eij8ibznr6xtahtx1bsp5j1xlo9ebr2dhzhsgx1qzvt47iwpg4by31vb63lhqpkgspfi01g7unp029x3r\", \"y9u7k8ujkc35i2zqq6rw8r0wc29dtuhg97gd7cacon4xifzlbdz1ewy2df6o0la51cc9ifu37i3fk12go\", \"g8biwvy4q2xzepzimti894p87ffzife5fbg9aqcbw12si0ll3mqljuhlguvh3j3tbkr1l8wnj9nksr6qf\", \"tjhv83fjvd4925ivnqtpm15quex3m166o66s1olj3bmsp0zhzwy37ucyrtj1qr5qnbtsfm9p40uyeugpq1nhrm76ganih0kbe2x6yp00mydt0tvbfkbxdx1l9t60sbhcehyk5pk0prfw5jxgbfbubso0wyz7flmmempk2be2a03erjfvk3qr7d3qr4cphroka\", \"wqrsvfrrfd7k4pdiaseecmpdm3tm2we3k7z1d4baav6fv34ja00n6ev4gvvzton3ggtqcpvqp\", \"nzkazm96bq1xwlutzqkgr5syy7gktfs5lf8rf72ahlfif85afbrq0r81jtigtjfoepsmawu61r69p641kobom8lj40u9afsbk6y4rmpjcckle5sp1pwy7got6cp8pq0a40r47kte2wrorqdc12619ysh9y9klizpd5bm0zvpbwqm30\" ],\n    \"probabilityAltCalibrated\" : -0.6764767579182274,\n    \"id\" : \"kjla\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"6rdllll9m2xykwhdxp2p3xpy4w7j8dqf1e63jblnenlbdr4lhqmczqk17kwe6amg7yi\"\n  }, {\n    \"firstName\" : \"Lance\",\n    \"lastName\" : \"Hauck\",\n    \"raceEthnicityAlt\" : \"A\",\n    \"score\" : 19.438580796148987,\n    \"probabilityCalibrated\" : -0.5826050693620903,\n    \"raceEthnicitiesTop\" : [ \"sqihuemiwykdok42qp37zzm26ydbhc7thujo7k87btrwbz99\", \"dcb80a50a6wij3lzx1etbo9r5rzdd6f8h5smx8pbwjcj3j4n2cp8wyofyvvrbryyfzt66gghxjivwehcqe5zikrpbfynwczmiui57hxi3t48unulqrvqnyzvog4pgzg4r\", \"xtvxpmxfqnr5jric1yu1l00shyxbr10a15njer8w7zrkfchzypzlgh9verany94qrbenxtjm6d72va8cqvpmggrpwp9gb4nunvpumv518vzzmv4sj\", \"qfs37pzvhzl3a3gn\" ],\n    \"probabilityAltCalibrated\" : -0.5864346154856326,\n    \"id\" : \"c576\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"33ljszhrm4ysg1esi0jg3hkfb7qd1rgsm24jarrqk5r4qev0ng7jgrbvsmfdofx1xcvm7zvxaep47u0c0rt81j9lcvjr4aut2r9lhcxch97kaantrvcuty3dyw0ix5xo\"\n  }, {\n    \"firstName\" : \"Moon\",\n    \"lastName\" : \"Hilll\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 97.33277507621655,\n    \"probabilityCalibrated\" : -0.32914440878494844,\n    \"raceEthnicitiesTop\" : [ \"ygcrr4ohw16muj2ictu9etk1b5trsfk0wuvwzo129oeyvhg5fyvg660k8gyu\" ],\n    \"probabilityAltCalibrated\" : 0.30410060008041584,\n    \"id\" : \"v1q5\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"1fzhtyc1dshdayimcbruujywa554e1pudqvidj4jylk9ulfxf9dfhsoru4lhbdboaf3ux1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad6ba821-7ed1-4fa9-9634-f55bd604260f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.499548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e677411c-9257-433f-93f3-32712faec6b8",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Romeo/Goyette",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e677411c-9257-433f-93f3-32712faec6b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.49778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "a0a90fc2-e60c-42d3-a0ba-03cc7669cd56",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Laurence/Emmerich",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a0a90fc2-e60c-42d3-a0ba-03cc7669cd56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.497722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "4f0bfb72-7fd6-43c3-b6cf-08cb190d0bd0",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Jessica/Nitzsche",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Shane\",\n  \"lastName\" : \"Schaden\",\n  \"raceEthnicityAlt\" : \"A\",\n  \"score\" : 97.70227926082015,\n  \"probabilityCalibrated\" : -0.45172512301646006,\n  \"raceEthnicitiesTop\" : [ \"3oln4mcd7nnqyokd149i26kvpc9h8ank4ajbcie3vhasqj5tbnrwczl2fizqg76lfjidp1grlx4ke6s03q0zo058qmda65ozr\", \"c3wpin4cez0orfponoy7brklrr7ie9n99xkf92k27i0hvnqeoierrzbvn3epae6kvca1cb8y2sa8zv9rg06ixqtejwhp9tc4emh6qaoobprxhp7bn3iddfkc3m0ti51\" ],\n  \"probabilityAltCalibrated\" : -0.4753557569777218,\n  \"id\" : \"k35v\",\n  \"raceEthnicity\" : \"W_NL\",\n  \"script\" : \"cy92s4m7qvzxze8y44niiufyhga9ha5wmoqn53znkjalffphm3brj52r4rovq9qzttn47jtzdq2mu1ad3ra3wk5yfoj175uhd4h3c9tuwmg93zopozo6puefs7l7ylo57b48flqlutc343h241l4yz7pon4xa69468wxbhg47\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f0bfb72-7fd6-43c3-b6cf-08cb190d0bd0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.497647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "1ae9b60f-abbb-4aa7-ba7a-99d1d708f82a",
    "name" : "Print the taxonomy classes valid for the given classifier. - 401",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Kaci+Denesik",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1ae9b60f-abbb-4aa7-ba7a-99d1d708f82a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.497257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "f7d3da70-f661-474c-8d4b-d580ffe5c743",
    "name" : "Print the taxonomy classes valid for the given classifier. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Hilton+Kshlerin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"taxonomyClasses\" : [ \"w6tta31a7em5y1rx5ymxaf3siizozobn2wwksrvbfdhs5bt6mtb8bs1e1aleq1qle14t2l7wy28f4lu6fyggudwf69h62gev1zq072l1hgt9wdfbl5ccq3bixq9zdokwmci5z2ickaxqn5ip36ls2dmsp7\" ],\n  \"classifyingScripts\" : [ \"odtcf4tf4saywot1c3egfi9fhefa6z0082xsxc6jnh2hnp0ampe9g1l5b5b4jq52gtpe9rdclwzzsekmrlk2tt3qts60h2pcuv2rrxwusnx98vuv2roktmczb2s5cp6aoiu7v60y6xgfqfazl0e3h00ypbywnd2186vy7yp2l3pc7gz\", \"1u21pxswm0ri0oq9ebuwz58vvfs5fmqmocnp8nmfkgc27jhxamh1dwnh13un0lxuvoddmbzez1jgd95m8ju9kp7amqq16y7u20nuj8f5ng3zohpipgxb33cdqmbjuyyqxeta6yt2tl4sins7orbk7cxgli6bvgre40f30j3v\" ],\n  \"classifierName\" : \"Janine Kling\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7d3da70-f661-474c-8d4b-d580ffe5c743",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.497193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses",
          "schema" : {
            "properties" : {
              "classifierName" : {
                "description" : "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
                "type" : "string"
              },
              "classifyingScripts" : {
                "description" : "The scripts / alphabets this classifiers classifies to",
                "items" : {
                  "description" : "The scripts / alphabets this classifiers classifies to",
                  "type" : "string"
                },
                "type" : "array"
              },
              "taxonomyClasses" : {
                "description" : "The taxonomy classes this classifier classifies to",
                "items" : {
                  "description" : "The taxonomy classes this classifier classifies to",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifierTaxonomyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "9868d284-a6ce-4d7f-9ba9-c1e7e1c7a01b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9868d284-a6ce-4d7f-9ba9-c1e7e1c7a01b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.496984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "a059a091-73f4-49d2-802a-01ea67c2abca",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a059a091-73f4-49d2-802a-01ea67c2abca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.496968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "7ecacc5e-4427-41fb-8e82-68fc189fd841",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7ecacc5e-4427-41fb-8e82-68fc189fd841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.49695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "df06daad-c3e1-4674-a9c1-7f85468f1e1b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Lindy\",\n    \"lastName\" : \"Goyette\",\n    \"score\" : 46.041676264500474,\n    \"probabilityCalibrated\" : -0.8923941058841427,\n    \"subclassificationTop\" : [ \"eqv8j44cips4uv40ib45h8xjsuxyxyz1r9gnazr06pbs12q\" ],\n    \"probabilityAltCalibrated\" : -0.4082856194891189,\n    \"countryIso2\" : \"scio46ctm81rgbol9k4yqngsbusum46nzd7xq6hlrn64pqrar3ej3yifds2089dvkw1kctlqu1636siqsv8witmlmb86xlekxd47pimej\",\n    \"id\" : \"84hm\",\n    \"script\" : \"1dq14hiv3h2zum6dhz19ftaxkc7fxxstlaayqrmvgv4vyqw1m24hhmmaca633jboqmqgvszdxmwkraesouq27gyjjvg2pi0ojrbyhk62bquvxuur81s\",\n    \"subClassification\" : \"vrbvh2w5irug3nguu9nvyzvlr16z7uhob5h1cabcq7pevqbwlgyi\",\n    \"subClassificationAlt\" : \"j4mtby7g8dkjgr\"\n  }, {\n    \"firstName\" : \"Hazel\",\n    \"lastName\" : \"Heaney\",\n    \"score\" : 83.8003556695678,\n    \"probabilityCalibrated\" : 0.48784323725945145,\n    \"subclassificationTop\" : [ \"i68czhjl1ptmh9qw2m10scxbfre1o3vzrn0lfryd7ai7n8nag0ngla8m54y7uatcxcp0mwd6npxcfkdewlwlmye58k0bhf244tvzlvywt1xgyn6l3kva\", \"l40rd7pzu9iohlui2yuixtxexn1k3h9d4qgiwt3zy9w92qju\", \"sig2n8zz5wm679fdjz108fpwmiwpupclcrxn8sg5ynyv5y86z58uf9cbqguyznv46cerjx6uk1wsfqzd595lw7ymv481f2mcfvb\" ],\n    \"probabilityAltCalibrated\" : 0.37642197300633673,\n    \"countryIso2\" : \"9fu9ybk2ki86p384f58f7gfv0ug6qvk7tieog7o42dpjd1471hct001lw7ov7532ws0zljgbhpoy334gar9yp55mbqc98hmdmi0bgq5\",\n    \"id\" : \"1bd6\",\n    \"script\" : \"xv5dljxxead4f3iiggq55n0cwdl7syxuhm94h1yftuc3tyg9y7wo6s4yu1y443vslzdrliyku2k0gmj0u3rkibue7lhkg34ri6tmqlbbdhwt1jrytbd3ipmy8r0gw7lpf7phpzwlpidzt65numoospl30556\",\n    \"subClassification\" : \"hub28ot5tyqw8amq22s81oj7gs2m0ssba0bdg98zewwtqwp410rdnvecpz6ja1fovnryws485wryy83nzpc4ju91nx1h3fegara6\",\n    \"subClassificationAlt\" : \"ld067b0qcp9l2fiwx2phl5m3f5sxam574bcacjti2eg7pgm1twtmilqtlbqwacyrmnxk4xh88f08wc5\"\n  }, {\n    \"firstName\" : \"Sidney\",\n    \"lastName\" : \"Gleason\",\n    \"score\" : 90.81906593608568,\n    \"probabilityCalibrated\" : 0.2282344763841404,\n    \"subclassificationTop\" : [ \"8zcxxmmto7czfe04dk2zyy1wzxdfhn0aqmcv7cp5e08qrrrj6aio5on2gwurn7v2rk84ckg3bp213a08w9768m0ob8yamr3e7lcwzlg6gylckwb1363e1kk7njxrk3xriih0j44cpn1gwcb8rrt3o5ypqoqvh1\", \"w42hb4batwky9v7m2xoxpan7ou62h1dclkcm7j1xwl8d4f8i1mfah1xhae3ftp3in3tk4\", \"qfy4ypde2vtk1w8tpxj21020wkzy79vc3n59qu4vcn8shukb297e2907ohhdv8579cuo9oyvwz5v3bh0v9d41rcl5su4ekmrd0oksalg6aoktf27jtc7d137h414o293mlnh760safu3oot\", \"7lnqkf2sx98pxn67zi8uqt3i\", \"sgx76zso65sc12aict30vpel24knolhggow4pk1dnl8e4hfrq551yoaqtwvdok6ntq3bmqi2y14xyhe1buxodisxqdps1qmm4vd15dyhcs1igv0pxnie5mg8zj41vxoolp6mmceduax74arnq8stpu8tpyagjjpyo6homgx\", \"q7srbt6sgvv1f9qra7jgd53k3vx29ir6nqbdost49b8v5yqp4hskilhizzujq5svf8v0q69pyfrbmo69nc9jnyuva5gb0vlb35u\", \"u606iq8fvv0xdepg1lte8pi1gbpu0tuuvkwp9kfoa86a0w5q850p8e63sqkpbzs99nr9n6cznqgmz6nv53vvtmhgrc1nnkn43x8zk4a3d1d5q3n\", \"tme9f53t3ky9pp5z6hbzttmgngcmd4aawcahahtzacb\" ],\n    \"probabilityAltCalibrated\" : 0.32169894451486036,\n    \"countryIso2\" : \"2xxzt3gtiqhakn9pcxll5y68a0rx3ybtiifyzfwzyrpdd2gkmgvv35jh10tj6t5a1fpf9zug56mffzilbkq3bzsh12a9h49g13bk3j8hj9wazt8hru0vlvmpmje7rbj\",\n    \"id\" : \"e539\",\n    \"script\" : \"1k1esa4c4w5gmm4cds6670ktey5kfpxtgdx71ffl5m30alkfoe8layygw4m54981t9rziodfcnfbfzj165mmrf92perdamkdhzempyxbg4n7u7xluwsovkn0hr9az6d2ipnncy74plgvrxm\",\n    \"subClassification\" : \"vjfjzadds3lgvt503e7tmi46qxa6syaygu4zniudlxxxv588tmzum4bjcbj8k6r9g0imvsv86ztw30wv0rk5fzogh2gsiw31i94xmk5sapbqgx\",\n    \"subClassificationAlt\" : \"yawbrxzo2yi4tzxhdl5o113c1im5hvseeoyinr346pw52b5j1zh8u37agviqriuzpf1tuzec95r\"\n  }, {\n    \"firstName\" : \"Isaac\",\n    \"lastName\" : \"McGlynn\",\n    \"score\" : 10.08738758836265,\n    \"probabilityCalibrated\" : 0.9675963684493485,\n    \"subclassificationTop\" : [ \"lxqj6ch3wuptq2g2g8o3toufcyng1328c2wsfloymryztav7henx7g4kytrw8nykted44demu83h96dmm0od7xm8wxurttzmu1qogkouotgx07uy1s9u0fn6n0nt1d4h06psv3xr3u\", \"h9zaht491gzarxq0dkoj9jwgn7s2v60zzhjpih043gdebykjxavjvfa67vl69f08lxf9ef\", \"k6fb2yvzeat7y8mxvyudep6hbkefqta0s1s9zbgrfysywmuzjh8s9mr4vr4fdb1drg46xrp36j6o58x548ykf0ed8t04wno0b2apcrsl5nglirtfp5xvr35\" ],\n    \"probabilityAltCalibrated\" : -0.8487806155291278,\n    \"countryIso2\" : \"3ng8vj8fgozlceo1el2p46v1hiclld2269bkz4r9sa3rg5vvjbgmky5m0c33dotemlyfwmpkasv0advqvacv40h733xljzm1fk7cg57vfhy9s7zj7xgd8g2j2jspaxnlncrsahpce1ehujgav8prp88\",\n    \"id\" : \"ttre\",\n    \"script\" : \"hlpzvr0yo9lwybv9ln0vgoo9hydp8sjxgc5hv\",\n    \"subClassification\" : \"b1hcgbs9ckw9pc8ylxk11izlp8cwq7tmpbx94xxoupqgqwhgo6jlu6ge7q8v3uto3hpp7lfxu14rcet37fcu9q1cqc2rjcb0bdkcybcxcb4urm9mhn23peykda3puo1j46b4tin81rrsz6vkrejdkq88ld7w5wxfv\",\n    \"subClassificationAlt\" : \"4djvxgh3cfaf4tqs1tairhauhmpfvamp26xs7skr3uchmi9\"\n  }, {\n    \"firstName\" : \"Shanice\",\n    \"lastName\" : \"Borer\",\n    \"score\" : 2.4646602420574593,\n    \"probabilityCalibrated\" : 0.6046787237062599,\n    \"subclassificationTop\" : [ \"telhmcqrpzsevo83ppnimcaxcd8fgyo5w6usft1zwh5nj0yseil\", \"fv149koi11grnqfykhzndz2lghd6e12q4rxnzn3saujiy1v8a9v02kdcrccmd0\", \"7ce3melasd88kg4fw55hc5aiujqehieymnf3lo7otvqyug69vb49ydoicl1mfr12u3mxb89cskyi53aw3m581zwo786yj6bwhoej\", \"jcj3yqzdqysq\", \"ou37c1iv82lyrumddw125vlz2u2zj1z9pqoh2vplzfex5v471c9bez3axle2nlo27388agbh8kzppg14xyhdb2m98f9swe7hen\", \"79okukq47kje81ycr2erugs9e5cyukoeob90idvyz605l8xg2zghvl38x1290vdpzx1w5otuitlplzl76j8t9ggsthfroo1u8s5ibvibgemfp72siuxxkg7lj4bi9bcy8sh8k9samxge1r48m7onr5\" ],\n    \"probabilityAltCalibrated\" : 0.3934346692925317,\n    \"countryIso2\" : \"w81zk2qi44umerey5bqolcfwevh8uzko0rq7v4tkh27z5zwofdrvnp5nruj9frcws14il1fxbip5z\",\n    \"id\" : \"g168\",\n    \"script\" : \"3otbh7rq1m5w45bh6xhezb6t195pdoufppq5jim438hl7czcc7tb3jb65b83rms4m\",\n    \"subClassification\" : \"i5kh1vlwq97u9sp7fh1btij2fexbk2tkn3f081l9szyjjmj7htx5glgkluznyqq9rld2isom2ml0jxojc6q0\",\n    \"subClassificationAlt\" : \"puvn69z04jq7k6rrn757r5ulta8pb501kqnxcn7x680501uxd711rlr1o5u\"\n  }, {\n    \"firstName\" : \"Archie\",\n    \"lastName\" : \"Bosco\",\n    \"score\" : 50.438047368813784,\n    \"probabilityCalibrated\" : -0.8228123591453191,\n    \"subclassificationTop\" : [ \"fwr93zkssblmwuurpu0jx9vrq6n8oi52pz6bqqcxq7wdvaryl9o72ksosr\", \"u58shnhvi3etvc5wqik8gudnbl0mzt9effwtwzricpn89o4r7h7lsypn7\", \"xi95l5nae2k62nxxbwx0o6bhd8814h06w5eicp30iioqei3k9jf1fp218rtz8tr9fl2hwvayqk\", \"dnffppga9fv5ztv4rd9q47tsdz8wo15nm4x8lgi1sml33ykqwuz6t603t82czuzvsy5\", \"9t5cpkd23siaupppt0jwhc9armey37adw3kbtsiu16epzg5e0ny49s026smpyy9ayvlofywt7rnb7\", \"obewaux53olnh\", \"j95t5updzs360eyihb0wx3atczu246x2w1bucxboisu6zy491n2nlkzoyy0loq83ca1rhxdcoklp1gcup49pwj23kf1pmb9gxmml8de2keonq87oxgxhwhzow8suoro144eiaavg340pn5k9spy89ml0wf5xseqml5xayccbx1vmf\" ],\n    \"probabilityAltCalibrated\" : 0.7280888814560198,\n    \"countryIso2\" : \"4bqjh5i\",\n    \"id\" : \"r2v2\",\n    \"script\" : \"bx8neofgxgc5qy1keoiepj6mldmgispgncwnnw5omx0p262rj3e13djhs8\",\n    \"subClassification\" : \"g1iw48hwbtcfbra6zaj1d7712k1wta9jh0jknlcbgfc8raqmztva0z4812fn7qdctv0fk6cela0h98rcgdh13y40pb7rm5qr8fgyq4ahmq1iiq8eqksge8t2836ymgcaamj06338j3ffte4uuh\",\n    \"subClassificationAlt\" : \"hzeilodsu6j9nztdsdz75yc2ktpk2koahzljgfcvzgf1xlw0opinsr1g0jsuy4vcqnaujyt8mfu6w0pm637evqmlngwd0c73bsumwfbvu3dfqp83ynfc04q3t5mwwof7k4to5gmw7djy0ou41l5319ilfoykh77laiio8e78\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df06daad-c3e1-4674-a9c1-7f85468f1e1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.49688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "6d63f90d-3050-4aaa-a392-1651616d231e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Ilda/Frami",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6d63f90d-3050-4aaa-a392-1651616d231e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.495488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "b4755482-7e56-4258-87e2-a38421748f74",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Rebecca/Torp",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b4755482-7e56-4258-87e2-a38421748f74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.495425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d65152c6-e24c-43a9-8fc6-5e319864a98a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Meaghan/Lakin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Patsy\",\n  \"lastName\" : \"Weber\",\n  \"score\" : 74.6563679394751,\n  \"probabilityCalibrated\" : 0.01685505640736107,\n  \"subclassificationTop\" : [ \"7kyx24qrzbxhjh0zv7zf0l9drkwscr1vhus6lgxja5zew6ut4c8qhnsrr49vm56n9vqcxb60c27swmg41lxvlg5r4nh941lygqqpa8b4dfpmpymgajwdc\", \"s5nqsl28kf3hwy6fzvdqzs02krrn6x3ae6k1m32qdk8gxoukh6n4bmxqrtt0u1k71hh2mmqt9gtfmwymzi6e4ecpqbi201soy20e9dhpt2xi5lfmgt7c9tx36zwt79nwxyq82doq28a34k00h1szbj7sz0carpopur0k1dq33mn1flewa2y6krankvu5c0bdwv\", \"7ws025joubcjfqc\", \"v8uw3gznjy94m69iv8xrhtab8u3hb24mnw2thwd9jn91bknl12fn4b85hvyv\", \"smq8lijts6dnq9xa3iy7dwylp7tw36w1uetyh1d2clisebsr37s1ymh22wnu75x0o6auj10oeoa054dclz644wmfmbrtokfgf6e\", \"cvk7vrvk90plyq4ikzm5huj6o15j78z25z89dibc7c89bdyxvstfzu8r19vu02bhcqmcn02k38a45f01rz3dqu10rcumupncaipe8rbp0irb24hkgwhzaa7yahigjyezid3pcxubr470n1lg1vv2jz4o31aua\", \"9tbvtp00mw4xxlyxuo6ejmrsunpmszckd6zdptfnyr91pob9rqwl8x65fxg2p4mt8dk6olkwtccm8s3p4vplt3ymcbs9bkdz8lam5p3e6sps2t2\" ],\n  \"probabilityAltCalibrated\" : -0.5992145299238045,\n  \"countryIso2\" : \"agea6u5zn7wlz5msk7ozelgrv7z1ds4jm6qt3gk7b1lzkgb90t1qdo0ev4iio3i7q4c9922b8xy4uc7zme\",\n  \"id\" : \"h660\",\n  \"script\" : \"9udeanlr1rv12jqprhr2r0gx4hx10q3p8hq58k8a8l8b9xaldno5b0mlidm69pa69ck600lutkvoan4rh0vas0ulbwbk3al3mjayizezx1rxdl8f8z1m7upcprzol1jw0zpx9lzd2vsp3m\",\n  \"subClassification\" : \"q0dj5sy0hyfeayr2t4ocd6txlgmzmylmzvhs9x49mw3qm8v8wi1yf2hcg9n6luatgyrgal0b88dxo6s153fgwwgybwfvkjssfacm5ggil1sk54b7aupo9m\",\n  \"subClassificationAlt\" : \"74o7lziullb7tcpn8nxf8sh1nyo3i2pzrhwog6f9d23cmynn7cwnyf84b5w2z6wl6zmlihoi21f2hhd9o5u4urfc5ke23luctay8tb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d65152c6-e24c-43a9-8fc6-5e319864a98a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.495355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "7219711b-2ca7-472d-869b-b33c82df9503",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7219711b-2ca7-472d-869b-b33c82df9503",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "d62db26c-cd39-4817-abc8-f42e14e934c6",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d62db26c-cd39-4817-abc8-f42e14e934c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "0750aeae-481f-4223-a4fb-32b1d36ead4d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0750aeae-481f-4223-a4fb-32b1d36ead4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "b980833a-2042-4e4e-8996-c30f02b391a0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Jacinto\",\n    \"lastName\" : \"Harvey\",\n    \"score\" : 76.15085011596325,\n    \"probabilityCalibrated\" : 0.4325192560684694,\n    \"subclassificationTop\" : [ \"nz98flbg23r6j9wq5ppqxum7pto5f3durjisi8zkwgpshxqqc5pzsx8y9\" ],\n    \"probabilityAltCalibrated\" : 0.30207530076513467,\n    \"countryIso2\" : \"gwxshzxbb5s3z394cpe1h6wb8ss1cefrcm41jahw52nt09c1t6cohy0l\",\n    \"id\" : \"k765\",\n    \"script\" : \"40p8kffkkqmxysrtrk0cbubrzhep92il5jprungchwv9njlbb2j3eyox7\",\n    \"subClassification\" : \"o0uov8pepgtojf3vv5r1wf2rc9sqkjqpid6sqcmnjeqy0j9hny8d6vbi3j5s7nb96rkdhqw846nh3l5p8ndwc4zz07vy2os95jdud67j95g3oikbavzxs9v1uq8si7pybwt9rc849mhebqhj9rypo5\",\n    \"subClassificationAlt\" : \"0h7irydda8ro4ctqe67zhv9rummc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b980833a-2042-4e4e-8996-c30f02b391a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "2eefcf81-aedf-44cd-8918-1bc1ffc9d26e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassification/nsnr8fvhketj2eyqcfexgdl208kv8jq9alxjojpay5j0nzicaw15m0qy6vgqn9dw0gffdtl5hc2aej9wuiw9ndqhcnh7fgl3fhcm33fhm6p36m3341rb6mbw11yiej/Phil/Hayes",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2eefcf81-aedf-44cd-8918-1bc1ffc9d26e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "6475021d-aba0-45cf-97b7-db46ec85f094",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassification/ql1fe6qrt6mncpm5ijdxag9cdyqm3m1uwryyikf96uj41zr4wesxcbk98of18125otroaer2xr5qr5p76j1izkn4rwo/Neville/Herzog",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6475021d-aba0-45cf-97b7-db46ec85f094",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "2ac19144-4909-44d1-b998-680ae9baef42",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassification/7bud8tlg6w523z5tzq4krs9l72kols6s0hqvgxid1v9uclym3qj3cidns5zrylvrre4jfmzsqe9pcko/Iraida/Marks",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Isreal\",\n  \"lastName\" : \"Schowalter\",\n  \"score\" : 71.43140136300059,\n  \"probabilityCalibrated\" : -0.2455039482555621,\n  \"subclassificationTop\" : [ \"rguoqp8pekiez23a45x8v\", \"udu0ktazjlz3vtoksau29lv5l3hf30rnaw9tb\", \"jod5i3t8ezzmbyhjiv59tk5d7szgnt3a93db3tr8c0893it98pxafnco0i0swcn6q1xkkc72hda4zyyvmtm4zlhq3vovo4aqi\", \"dnsxwni5mk7lcubl\" ],\n  \"probabilityAltCalibrated\" : -0.03207607988406691,\n  \"countryIso2\" : \"uaa7k8abexb1j5h5ozkc36ehkbpqpg7b1hyhvee4d5zzxehl9prmb3rzot7r5hlz8jhoxmhol02bcptm3jibdysaj3r7snk8eb68riyw4jgt7x5iayaiskfjcb58h4m87udk8rne7ealb41iqpqp8xyort0so9pqfz7xpxm42fje8xdb3165uyifvsnjm6p\",\n  \"id\" : \"j714\",\n  \"script\" : \"rd9l0bcub3p27tkgriauxb6y5waz\",\n  \"subClassification\" : \"ki5u3r5nj1ljab\",\n  \"subClassificationAlt\" : \"v9mv11ozkzn282d4tbydllke1eaytujqtxaa3z4gkrccja63it6yfx0b6c3ia4ntl6g62hd26txb7r14etv5bwf2je8xyjms3r89l1i4g84fdb1xic36amzw1rnj599my9akce7azonovdrl66b1fz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ac19144-4909-44d1-b998-680ae9baef42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "724733bf-1901-47d1-96a7-7b93c871986c",
    "name" : "Get the current software version - 401",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "724733bf-1901-47d1-96a7-7b93c871986c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "99c09cbd-9a75-4b2f-9fb7-90f23ee05c16",
    "name" : "Get the current software version (application/json)",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"softwareNameAndVersion\" : \"szaqm8ia6bwciue0ege4cdn8i9b755n5jjkedmuwjjapg3idotu7lmj6q8vexkg5rixeg4rkm29wclotk17g8yaxlk2lqbrmgqzpk6czjw1k3dzhee2868vt84sn7xqi684ly1yllk6dnun0fzudsoq2aul1c6x2v459w0nh5kkg\",\n  \"softwareVersion\" : [ 439721811, 55852289, 966924119, 1920212215, 1529631259, 743478385, 16961848, 223439233 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99c09cbd-9a75-4b2f-9fb7-90f23ee05c16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.494107Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion",
          "schema" : {
            "description" : "The software version.",
            "properties" : {
              "softwareNameAndVersion" : {
                "description" : "The software version",
                "type" : "string"
              },
              "softwareVersion" : {
                "description" : "The software version major minor build",
                "items" : {
                  "description" : "The software version major minor build",
                  "format" : "int32",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "SoftwareVersionOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "bd9c6dce-8e13-4602-9603-0278de21c56c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "bd9c6dce-8e13-4602-9603-0278de21c56c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.493996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "5cd41992-00a1-4a13-bb9a-b67fc0fe0cfe",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5cd41992-00a1-4a13-bb9a-b67fc0fe0cfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.49398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "6a88becd-78db-4b2c-b811-d5c3d8431200",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 400",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6a88becd-78db-4b2c-b811-d5c3d8431200",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.493956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "c70983b1-ef22-43f2-a5ca-d7af59f61982",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"ejouoxtbkav8t64ggljspj77vij8lqpdi\",\n    \"score\" : 2.1474606541802665,\n    \"probabilityCalibrated\" : -0.4258279265769531,\n    \"name\" : \"Lara Sawayn\",\n    \"probabilityAltCalibrated\" : -0.9636843700064752,\n    \"id\" : \"h1g3\",\n    \"religionsTop\" : [ \"94pjgsdkk02gd3401qg5qhujfixlibo9gzlg69xbrsz7bbynqthwsha591z5glha9883cahqa0zsysrqx57fawa022u4pns0enpa9oj3lz2m2otu5xwfzen8scnmc99xhp1apjo3clxmihidl9y7xbpu5sclqb0ko5629unjfv2w6g7t72p1w38hf5zf70\", \"6rjazh4kotx2dibtomx83c0plzjvm1g8dl2o8j2m3rhai6wclxvpmek\", \"zjeu1xr1qaxo8lknzmo46mjr9alopp\" ],\n    \"script\" : \"312il7433hkg1fq3arcx6wb53\",\n    \"religion\" : \"8ptlp7u77aiyn50olmio6ffezzn5po8dro68vckuedmg9zbtg50d3ay7ommehc41fo7vgaeze52d47wd6if5t4dxkkfsj0nq3g9hzxqifzho68b4u6fgz57iwqy2f4jk0kzzeo3zqehyxgdvofb7ys4sznvwhgng5d3wr0laum3mv58kl8sa7e4xtbhrdbbs6d9\"\n  }, {\n    \"religionAlt\" : \"74c5adsetceb6xmlx1h6aq7u28j5nlkioi1gydh\",\n    \"score\" : 74.95089429042824,\n    \"probabilityCalibrated\" : 0.4628122905396519,\n    \"name\" : \"Jefferson Trantow\",\n    \"probabilityAltCalibrated\" : -0.7547219051848906,\n    \"id\" : \"09k7\",\n    \"religionsTop\" : [ \"yf8gjd4m6embykkqpt6o87ek08bcqp3itljhiniclyoh3rpwzl933ws2bu\", \"wkfrem616ewoux4mxkb6jgjga36qjn0i90q3axt0bsnobhxt\", \"jna72wqmw1bpakl718hjqxlu3\" ],\n    \"script\" : \"lyjivev07zyfaqp\",\n    \"religion\" : \"wxx1tda8u1becy9c8mipk8clegr8sy7u3sklvnb2jbumyuhwtmif3kaugq4gyy2ab1c8gavba37u52sd9pmbk444qs99feuc17b92np7o142o079p7p3bjzfdzwkbjgcoi6dj6p6p1q1x0o9kddvkal3cea4hlzqwnd35arccfpvak5m7lz8zp4031q2bvzuu9bg2\"\n  }, {\n    \"religionAlt\" : \"hbs98ohdkup8ajgkaypm5mr6uny3dq6ver968ewti7qh8rtmztvyylu20wy989fjcwiq7af5ax1ykyju7p8i34ctz5ohvawovu34m2kb8pdi7u0cmdnfjhobp5q661odn8waw\",\n    \"score\" : 86.71507719983309,\n    \"probabilityCalibrated\" : 0.2988860986374784,\n    \"name\" : \"Willette Hintz MD\",\n    \"probabilityAltCalibrated\" : -0.39046972738547825,\n    \"id\" : \"3201\",\n    \"religionsTop\" : [ \"6e0gsqje0pvlr39a3jn2fu41jd376bn9\", \"ixvucdndiocgkx94vs37kbcpeq8uuoxd8dxkpg2r0mmvuuorzwzxeh6b9w6arvldfy0jmxwmopp4kkrcuqmr3511d9na0tztoi7o8dp3shloofh4ayaffnxm5l4qgajqfm6lqy427\", \"7ch50sgps9ug0lqdkg4uotcu1gvretm71y1dnjgk5n9n2cflasc1sjfrs00in3lt8exh947kf3m0f2czzra\", \"gahq4b5diki25k1fz6145ftg0pxh\", \"xp24x2fvdbvbey1hbwmip4z9z1khngidck76vk5xlfcizwplto9dpiomzlj4ytoq2f\", \"hok2053rk7af5puswr19cpxpkyi166ne0delvvfwldq3c8sv6ulekqn4bp6e977lcz66b1wmmi9dy9dnegi3apqkhtq6tsa457dopu9v6sg9x2yh4ibz8alfjsfjijqxnf1bcrgg819wj\", \"qk6zcuysx8v25w4k0sujd6zovho89bjqo0zs8ycavsk7a18u2yh7ch78en8z8xihn3tr5o0tjyc11pgvu8svwe0bnvg438uopl6qvuax71m\", \"0s07h86uzthv1pic377gz6l1593i\" ],\n    \"script\" : \"8nad7y0zfruenhprcllm\",\n    \"religion\" : \"jxesdzbffszx10wnkcztt5f7jp082zaja5hrtjxud2v6ufr50vpvek7itud6pf4b3kx0cadaa2embi9c38g9wkk06x7t1p3uqgjwyjg6yjodg4zwnfyvukhcokqp0w01srjtej8vjs1bp5wrocd5y8izfl62t9i04ikp6hftyqx13y8r9m\"\n  }, {\n    \"religionAlt\" : \"f5yj6nod183iouh9omud6m5yk1qozu42su6wiktdpv04f5pvpn0bdqa3qkgfrwu6tw7zwgbtew1ydvuq34iyg3mnfwwp434wmk7yd76dg8gcncp1wgt57sx0ylg1bklxndd48rxsbrzan1yt60fuzdeetqean2yw35lsim\",\n    \"score\" : 14.02549492709454,\n    \"probabilityCalibrated\" : 0.8379215280920622,\n    \"name\" : \"Brandon Langworth\",\n    \"probabilityAltCalibrated\" : -0.551518950604931,\n    \"id\" : \"z2i5\",\n    \"religionsTop\" : [ \"5hf90td1nirdyzgz32sj3d5jxlxg88lpgo8l2miff14e72vnrxxzxgrqbw4i423yrv6qd7fgq5fdng5a4rd7utzlczo88wg4woth9m7rhrhk9v5wvrg\", \"a12bdmm8k9gln8tbymni2gouq9nr77f48kce2sr7oveqbjpy5wny88pgyjaufso6yf3yxlh4d2y87a5kiov5pdcc80w4jjt4r5096rydmu48d67bo1abm8tc9joyotx2\", \"b3kopu1dsrrwragy8wuhoekml56nemvz7yzbj0renkzpspeh03poddimn17gp6ou89ujcd6jwtachfjayat03tfl43f1qc2q1y8i1ynp3dqgaqvdsiqr3r12ivo9tp\", \"4bkltblpy6trhhs7a1yx207pqobbhg693isxc3h61ul4ds683qzi06eml7imsmrqw56da8o4etwqbmy2wts64yfd5lizmwfmia\", \"iszbjxawsd2r11e6ufr6l2jz2kjpm9bod6dg9cj95oaxs4o4jk5jdma7sr9tugpjg11vsmyve0mivn3lhvxmr7bd92goy5ljqmhq2gibzzinb7x18t5t726o191t807cknb3txkdqj6tcjojp6rm1ilqngsd1hwttcckglyloddrfbn\", \"2c78ru8bi33ci1519zqipmc\" ],\n    \"script\" : \"x7vtxl7chxgu5wode1nshhumrbqn83ip8ndnm3cpgrozs9pwalwo3hb1a4y36a5nfn9ilh1ns6z22nfe4e0qw\",\n    \"religion\" : \"5jb9u1dtiva8yru1pprgv9vdmvxvxcex4awro7ln5z9mw8ydqryevyo0ewkg9m747cyu7r0712wevvi1g2xngpm7drws0b7i5w768zqu0xuka0\"\n  }, {\n    \"religionAlt\" : \"9ehcx7xzcoch9y22t8arkmpqzzwv7twkgh66jliva31y15462puc24hbryspj69gftpmiom71rymns57h5p0rwiezde70dzicqn0mepqam9kj0u1sp9wspkf7o4mdvzcpk6zosq6ej4gepvjdf9z0cdyf08l\",\n    \"score\" : 87.21329339120892,\n    \"probabilityCalibrated\" : -0.2718072604049149,\n    \"name\" : \"Dr. Maynard Koepp\",\n    \"probabilityAltCalibrated\" : 0.1875434281397783,\n    \"id\" : \"i7mp\",\n    \"religionsTop\" : [ \"dwiwvw25h1jtvnvh2u1xq18xb5zmc156dwy8au461wwppoeraawgpifrfvkzuv9r14gblzl2i2l4cdsgfxzcx0jhig2u7sfswqm5soir05ms\", \"6qku7hxv9wwevj3oe818h6qx661awnw4gty0zx2qm7xi9gp7uuhtp3hsljw463lbrri6o3wlwif60wfdn\", \"3kd0x2xemi8cq1ffp4k5xn993rx51ggztk2x\", \"h0dnj79j5j5jwer287dsz5680j2tchgdgm69s7bi9dkounoq688qx98ykap0zk1y27ij1953djwi3q69su6cxdski03hokykqje8hcsv1px0moerc6uoxsfqxsgcs0enlqzwz584xzne0knc0ek6z8wn6tcq6ehbcxbcun4z8py1nr\", \"k6aahsx700m3gq9p8fvbao336tjgxomn9dmq4fucyps35e8eky82wvwlydnqpye4oe5912wv5srn0rofuxzfgok71py7c4cyfowpqq19e2qleyekb9niwvd10\", \"qbk2mekycxhjxjs5qjkp707j221tnwb5oj3825i31kat91v3twmg8iawvynvu3g4nv4gp96ym3fwxqk3b44elgop2mf50iybiftq392mt4ifd873webo05syu945fx7kxkz00jg922ac0h9izefhwgc704rg\", \"3x9hkbpsrdzvu8f64jrynte1a1k0g8b0zugk16b3x89ebpn5yqkfrecbqy53oec042wxc2ih1cc2s1dw3zsjiepbvhpyyc9grwgqizijnvixf6m5s5qj69q0kqwpcry\", \"r392fsf55ce5b1cy2yuhvxv6qkchnd7ianf\" ],\n    \"script\" : \"0ycx8wss5g66tvul2r5w5noeufwgvvl58n0sk6gmsps3wr2tg24v8bccio772tq281cgjy8oqjrmv7cgds4yfxlvsxvuecpetsv6p\",\n    \"religion\" : \"48i4m6xgs621et2g34s9nwilifvquyv89o5sme7auo00k72telz4k35audvblhkezyn380kr23m8tgeewn8lw2lc6ycj51b66pn30ltbcqrw1sdyl3d005vq3prauflsj3p29owpoqgqvr5ua4ulg4950jr7n\"\n  }, {\n    \"religionAlt\" : \"sgr40qyr88es8uo93y5hwvy9qzpy4bwqedx8mdr5o1lcxeh6unh0plub8edycrjjqlzfkvcoayigb7fkgujdxo7soac8nhbzoev6fgvrtq8q87c4404m4b262raxq1qiteyw73u9eppnqrxs3uoey4dy4l1d0a3dwh7t8irk7j25rirp\",\n    \"score\" : 85.55153239760263,\n    \"probabilityCalibrated\" : -0.39540924298846414,\n    \"name\" : \"Casey Pagac\",\n    \"probabilityAltCalibrated\" : 0.2920449177923614,\n    \"id\" : \"x1o4\",\n    \"religionsTop\" : [ \"gs6lctk97bjcnpdd5lrmc11xuyx4mi8jvckycldqpy3ync9o02ei21em6yfhduxvvfzps3ets8xne7qmubvh938ne0imy4q4svot3cyqtaly3pkmfkp3ask4yexczsaxulv7mor\", \"023y2po5molkofmg8u7hkb7umevv0bad4vowfn7muhusrpx7aya5jzyzh1b32puy9earmxjj03aahti30qwtbp85oi3nd8dd\", \"9zue37k71gm3v9zmhwepy39btdl5fy5zrt3ayceg01jm1z615bobxr8qe6v9pyzf2e39v3k2d72d55qog0n41axiw125cre\", \"xd4i98x5wp1kfh8iae0bzaebclosv3w3117s6lfopt64o45mf5e4znn3d2835ezs9ga2yydaoia81pb1c6n2ctawy80we5obm7q66z2n4g7vqzl9ftrpeaemjyzvkacg02vx4k6fei6zjhntcgy9ekwu7u37dfi\", \"aoa452eddytvv1q7j0ucmzf5ooz9c6gn72usag2xp7br9kixlpajmxa1cwnkhdjj4cgbiel3v4iqgw0zeoqrj5yrs3b1vjnt6pep99whaac6wddtq80whv8eo5ks4j7112q2cn9mv4ww3jvodaya5ybf35kkzzc3cmy9llf\", \"w59qvo3hesgjk543t9u9h6eee1kbgvtweeje8t183m93s8edwxnqzwtuxc9imb5h2a4b8meborad0x9zg1csjax8edrgv2axugn18l2stoztycr6pequ4mpqwbu3u92rxhwr3k88v0a7oog4fz0qy9rqtefp7sjzz\", \"wcumlhmpy2pb1raad0to4i3dez49olomvo6bk97rhgcb2q4exgcrvwo6h9zsgekhpg148dsismddhq6gypv4i7bxmxrmw2607zt6vly2kt0s7mak58prpcsr57rgpks6k6f4jhg4ckn580fbdzcd4bnp2kld61dxwg23h0564r88zmprf492ikl\", \"xmfpb2ogo22dctpyjxgi3z19t3dp2p36edhhinouzs97wqr1und18ya4hqn1ozjg3v95hi3ieubyeeyjpypvu00fnv352a14un7e311axbwswg4ae024ymngglrld0wfpd8kd55hwn5\" ],\n    \"script\" : \"p50umh4rucyvcbaitil8rgczm5onakg0jfujpen42suwvq50gulcog0e6fg7ly5xre8fls8efx3osbrnfwy51hr300illbkb3g1a3zb3bv8hfpjf00\",\n    \"religion\" : \"zkeit6tx6utl6po293efggio8ueo\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c70983b1-ef22-43f2-a5ca-d7af59f61982",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.493924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "0547da04-5987-4cb1-8f9e-e60b62a82b0e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/fib405be3qg35st137ees0xrnwi13211dnw71z12iu1228um1vva679mph7p5lk0r9ahwwzlasjf454899iouhblc238mcy12ar4wuuq35ixpnntwkm068/w00qlttv2yx5jt886blfedvlylni3uwqaurtdwgvktkok5l0gep",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0547da04-5987-4cb1-8f9e-e60b62a82b0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.492656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "801157aa-3fd5-40af-ad41-d1454d54108e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/nwbiwkr4heom18a7uyt0xo9g6c9a7t1orchuwd01m66l00gn5ju4wt7v1nag5lh4ez6xrkfyyyyny06txyadgb0sva/2rbxgwd9d1tzjm4zwgdwd",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "801157aa-3fd5-40af-ad41-d1454d54108e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.492617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "01049dfa-905a-4468-8224-f5cc44f7266a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/qvddk3ypbju06e4ucz92lxaoqw8clrs0ipukym1tnvu78irrvdnh42gtsogt0pof8b6zdmfrfjbt33if1g7zaq21reip5qupk0rkz2c7u01oc6cykpl0unixazl1qrac2m8ayarcnm8uqquyuc2bpj68jn2pbn3oe39d/fysxekcur8ztl0qsmyrbdwo8prvkh1cc07cq3psfm5y20bw076d4wpy775q4wqfti0lulzp80h7fcp4do6zxdljoa66ziid22i56z2e6g5rh1txfovp9lcln9jnpzibvsde6d2jjjzev3fkyw7vz2izktz91rbs2nc1ibf",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"d7ffpqblwpmso1qbc8plazq6lmty3fgw5x0ood7r9wel0x7h0ay1nmmw1yr1j8bv79ynbubbga80o0hyc5y002bzxm2tqipnynpcpmns6fl9uv0yjn2mgiz5xoy9n6qj27atvwy8t70w4pc0tywolzwndzudbcmhj00khlu93q56mrdd7sf5sxr45gep9n\",\n  \"score\" : 83.99502191417896,\n  \"probabilityCalibrated\" : -0.23080878638906466,\n  \"name\" : \"Vanessa Jast I\",\n  \"probabilityAltCalibrated\" : -0.10265757393970976,\n  \"id\" : \"p00y\",\n  \"religionsTop\" : [ \"yf454oknvt40kcvq9dj89hvnuxyi7284xo\", \"nt4dmij1hwiqrei8bj3x5fcpd43qh3xp9625qpuoo5t6x5d883debz4xdj\", \"jxgzpgnm5v9jcy59byzvxffpoa7wtr44u1r6bdu7wl1w7pamp4tewh5ppjth7cjv4qz53qb6khnmht74yer2zkfvp3vdfpna3gjx26nx9napj5xcg66qrte44kto0wicy3vx4yjdbraukb2mt9orbavw6ht332z7ljo5otxmv5\", \"dhqhzf8lovdt3zdj6s7dsqpm170kzwftefkqgqz4kdwbasgmokzk3w1t404cmg212n847fzsoqq7bohfb85e2de3h\", \"oluq0i8z0s6tcfxseb4hggsqerctycljac2j65y\", \"qze5kzsdb27c2mkiezssmkzv9i9av8ke9phczbyazdtvk8kctz1h0h4aw8b6brum1\", \"pabqlhl7y4wteff2w0qjyyqqogecyg8okht455\" ],\n  \"script\" : \"dachv4n6u0vjgngcdk\",\n  \"religion\" : \"y9tb1h0o7ke8gf0pr50qbaar8qsjim22yd8ifg42l0rws20klxza14d73jhl1s347rxwkv289wpq0hqtqao494rdm2l6n90dl4urs1avkj7w88rgqs65npltdn2rz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01049dfa-905a-4468-8224-f5cc44f7266a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.492567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "848bcb80-aecd-436a-b6b5-32434d165cae",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "848bcb80-aecd-436a-b6b5-32434d165cae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.492247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "72ec37f2-87b3-46cd-9c43-4299ce7a36d7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "72ec37f2-87b3-46cd-9c43-4299ce7a36d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.492231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "1032be78-fefb-4732-a3b1-1901fdc15fdb",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 400",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1032be78-fefb-4732-a3b1-1901fdc15fdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.492216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "182b1cc9-0d76-47a1-bbab-091f89489921",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"pdt4ksqyml17j4tuwb6ke2ek423zn3obg0dj1w6tp7jflvi2xyaltkhvwumkfjk6j764tqronaky09q9y6aasjbweuefh19hgyy7hjno9i0hjv5lcxysgn132cunxvfkrprwfaqgvz6bd43zedydpvwyz\",\n    \"score\" : 69.6805994071335,\n    \"probabilityCalibrated\" : 0.3346153492587327,\n    \"name\" : \"Hyman Koelpin IV\",\n    \"probabilityAltCalibrated\" : 0.7257727392783953,\n    \"id\" : \"ngk3\",\n    \"religionsTop\" : [ \"v557kcj0njufu2bv6f13jy9kq8aekeyon4\", \"12otansm069dvcmij3ij6bf3x4ur9q7m65ni84y9qc6vsfmsw83y5r79dkrzqgz9kkyzxa80ik5slgq78mbxm0ndl7lopoepz6fquo523s2abtvv7e1lv3mix1q3egm0q4o8hu9jl\", \"l1y56nbtclbbywflocxgh2o7z64k3ldldo06w1d9im0an8u05ifl572esb40dlz4nik9v2hrg8w4787vhd52wyb1fiqaezp8v8yuqnc41icy3mfq62g8pyvhrztgksza9g32mjt\", \"me8zlac5ownuh8iv1nc5v8co1fu2ricrc6aw7ilpivlhmsi689jxkkuv8rcpcdi6k3f40zpnrpuizv\", \"mpxyucjchpfar10v6bk0b40sv50sx80sb6i83yr1ls6kvg0dstrua8cvelbm7i7nzv3eeppmh3daumjr3iy19utfct8pwvadz8372zt2uz14co4moostfmhl0fs33gjyy4b7n77nqdybs08maluud19ga1es25sirxxa33afbrfqfmsz93\", \"365vjxxbepwp1u2frgutwcxreug9ikb61wes3kn59rqanzvphm69vuj95fa0tr2fvkx52avgxvs4ed16s0fbkqjvivh5ap8d9ccpezfdddy5n4fxdwd67uwsqfbw69wjy2a41syv998j0nu7vgviksatg8mxpsimqcea1pof2nlxqu9oreqjocxdxo717tm5q3x\", \"fj0q2p8at921pxbdxgbarp1sor7io2gu4y95gl1ap45bg7upp\" ],\n    \"script\" : \"v14sfa8vgfpq5odrbqdzlr7a4eifhwr4jwyiwovtjkr3kl4c72we8auyhcpnfgamhrusetux6vll9t305qnymzlqktf2be6dc4y4oqgi2sziqii3tor0ll265uevjjl0yl80yzd02n4sd79cuesf3h1hm0\",\n    \"religion\" : \"qq6lhn4drs5mmmm4kb7dfxhr637rmn68904kl04jpbl1ljtyjjkub6egng140cooq6mg26r2z3qpmhz3rkoetxrr68jppwwulo41fbtbb7pkw8xeufm1aua712nitcmz9u3n81h2m1gdn9zvhhu3hexy\"\n  }, {\n    \"religionAlt\" : \"tf3hm\",\n    \"score\" : 67.91573853863338,\n    \"probabilityCalibrated\" : 0.944540134431465,\n    \"name\" : \"Jeannine Skiles DDS\",\n    \"probabilityAltCalibrated\" : -0.7631100784263865,\n    \"id\" : \"kqli\",\n    \"religionsTop\" : [ \"qteu9bqjm5lfqedv970iv9y06pbne8pymybc3z8p0inmwelux52maj168p6eedys3bdzxp513rjqo5nlvyatkvkp1140enntvpsqb6f0y11vxww0qd91gq29crrxlo87bu15quaqfp2ecu87ky3d6jcmfp2m4djryciphw7f8m8a70qevdtq3458km8jed16q98m\", \"ep1schm3xf9aijqvg593bfs3dzcm0xzd9hmeoklqxtgemczxfdy04maflc3gcdu69kk9a0ucnqxcoilrqnyx44q16j6jto5fnl7ty2k6g4z01s2nod\", \"4m97g0iw4o2unh1cw2nw4os0os1io7lnmwrkdla5uyhd4mim8wpdowen14rtcqsqifi38gzmmtwg88h6rtljzw75t78t1z44a2p8kvpto1xqaddkt0\", \"0a88hyl6m88rm28pevsu2ltlr52fe2noyj8qpt251b0oa2rfsr4q\", \"fsi7b3v53qvwjnhpddafyvjgy4vk341b8x4ffes8rhtt8kcxpb7e8katub8yztvjktnqoqmo0c6avq6qvdmahglpec97uuy4pn0o5rnyzfxvzanj3o67h3t9cun90vit2kfxot2prm7\", \"ieokpl4gef1w794qwaina30ony6ds8g4dybhpjjkn\" ],\n    \"script\" : \"b7h9jonsxl2io110qkoilasojoqcom43s87a6rd3nyjl0a34uo738v2lg78icoaf\",\n    \"religion\" : \"ksp6iljpmv7rjffzly4uorpxcpxreub9yik0qzgpr8llml98vmagezh37lxx4qic916rd1ruw4bcxwyfnhf9bmmfxe0f8jrrnl1yfmikbughsnsndn57qk7vpaq7u8yeu619fnjazmajyv5exc\"\n  }, {\n    \"religionAlt\" : \"cfpyjqosotiev4lt\",\n    \"score\" : 91.32380241443107,\n    \"probabilityCalibrated\" : -0.9098031730877751,\n    \"name\" : \"Ivan Abshire Sr.\",\n    \"probabilityAltCalibrated\" : 0.428450524593738,\n    \"id\" : \"w383\",\n    \"religionsTop\" : [ \"jlyc2y4xjd7ty0zpqszht2aebzx4bi4142vc7vz8jm9z2cvceg9g4hw788bfngqxvn80tcs6lzkvrpz99blzuahq1ng1n\", \"ye5ombwpj5agdmb6006065iud2zho8vmwmm77pu4y940sqwj2bbs97ocrac2r3bqtswkd0hqn9xbghvr9uc8j3cjebav2xr431hw0tprslalrq0786u98oc3i\", \"itdzn85tla2hne8e8qhofjkeiez6qgaslc97vsldj2aaq01hioc3ti1loowwf508jt5uvhr8umgrhtcfxeykry8c4c4tle5tg2hhmfccgn79o8o0g652rt5qd6et6kdmjad30se69vrfs2qjdbf90z9xkic7efmxtd59521y\", \"82xs3jsx5hqxc8d88p4z5t5fi84hs3v2p6coyl0lta069c2hccru7hg80izs4bmtxkov789n8m90eyl9kuhuhnh9o8nairvyzw5xfewz9447ehf4g8ucnnnpxjzfa2g0ytkgyl\", \"bbl7torc257gfpf9zapzdxcrpeamlit0oazdy992rlbfar2kapkp8229s5o7v2kymvpwgavqil8m3q7u04p9qph\", \"1ydpgtpn7lqx1erzo7tn9oq8ox62brzfq9dptng5pz3l4wlago9p0bem02twualc6ea1i4q6v0pal23qd2ocpyrbcossdwxgwpghofzjrwxjvsp2m75hqjqa\", \"fvnsd9i26ks404vlj3dta7b72ni9okc4awpigo681339175eji7zwpeozah10xvvwr0due6as8n1a99784b8n00fp9n4iz4gf5x0v3lzaeg26old85w0n4fzw07oucw765rhfbtrzt4\", \"5fyrtj8qty08vyx8qqtj1tj9je8tggdrhbzrs2fj1\" ],\n    \"script\" : \"ga4bs7aojmf38qtddx3my92kw6vcbdw0c6b5norai8d2axarcusso6u0l2yiy0jtzysmtdvpo5uw39c8c685xq8t3jq1twgf17hhf80rvfphmsew0ys7ad4mfbdhtbszdlcqn5rode\",\n    \"religion\" : \"9ex49n9rn\"\n  }, {\n    \"religionAlt\" : \"sg636wu4h0sk0q9av6f0sjiu32qzbva47qzjlvfluxec00ztilw28p7o0zljcm0ur42rskihgzaa9dn7jjduzmk68rsvh38ralhcfby33il13jae9mg8slw6y2a62ybhpwuprmjdye5l68gpqk29s08bopxll\",\n    \"score\" : 23.894593393915088,\n    \"probabilityCalibrated\" : -0.1607420402729547,\n    \"name\" : \"Mr. Kira Hyatt\",\n    \"probabilityAltCalibrated\" : 0.6367059711081731,\n    \"id\" : \"jnv2\",\n    \"religionsTop\" : [ \"kdtjugc16idob05vt7ipomlhe7yeeti7cb0k1cghneu7lx2mtbd3wam3oy8s5t5694cz21hpe2l975tutje7rp7vqc9q29548kx69nz98ixtvv2zg4fbvoz89vu9bd8dhj6v63mhsybv23hdbau5z\", \"kb22pby2wnryu10846ooijrwqjp72al188exasmsm8jh86ufb8wf0g5jtwp126y4ocn2eiaxv1wbqx7m7ufe6xm8gadne6vpbu0fnjgemtow7eyex2s041\", \"w3wa4crjam8z1ac8jdn0jxk1oz1gq6lg76mlnoar16u1huyeyyc\", \"exxvh1fn8yo\", \"z27ak3x17ihyjaz8rffwwe7icq2fb5rwdktim48diu2jemu8ps5g4gfe09zfoszmbno3ps26swervbkh55fgrwfkv4inyv8rfbmye5nuv\", \"l24st3ki23osqz6k1hdynnidbg21mxnr7jtor2ew6cxtqg8kcolf5mx5t3tdcr9y71e9mqaz4pjdrej6alskhkktp839\", \"7ujhcu2m8h0pdviitqx48x33bz7fow3k62nbj3w757fou6l1urch30kddlvtctztrt6zfkwat4uvl6as0ogahk4zke1ln1yjj28hztd80x41uidmi34jh2ymspsmijlmg7n6s1et2ihl0fu8cj8\" ],\n    \"script\" : \"jaerq5gzovfo5tsklz941t1iu4w1is5lw45m1ko7lwmsz99dz562eon3nuc5wwi43q9\",\n    \"religion\" : \"2p6u69ffx0j22llbtm5tv3w3sxwuzyhotdvjk28pardgbylznaafi21uzhg2gtzp4z54t7p99tl0cjmed7mhutnkarle3h4jtzg7mu6mqa89e7okpkyr59cpqt33gaot2p5gy3fyxn5y8z7wx8ojc5q35cdzll7kxqb9yr4vayt4wqbfolbniyu5tpv5wa10t\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "182b1cc9-0d76-47a1-bbab-091f89489921",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.492184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "e6657570-10f5-4f44-a64c-90707a8afe02",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFull/7yens5pkb59i8ygryepj0ytbkxz38h1b1h3dptxj8uxxod7henvbxntxy8ykajuhcxaefpy208x0ou4li28/glbtjepn2t4v/zkaa506mm97q2xav5lco373cxgdh4qmyd7wiguq1zkt1z6m6divmy8a15oq",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e6657570-10f5-4f44-a64c-90707a8afe02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.491282Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "489626f5-1c5b-4bf2-a3e9-d9ade2474eb9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFull/3ktn24udl06n5ldxwjw89c764cuaqzvl37h9k1nwhzr07gjjo5paglzx4sly6scinxoslmi3ypddyo27lv0logeym/dckp2cjwy4p5d3x9tw3rb/kiiq96tm2pklq4m30s9ydw02iipdirki60g1elswv23kgp5qh0d524nmirjsfexinf4uq39bvf1jx54jmypd7g71v6a4qkady1ahp313fi2hv99a4q9tplnnq9etv399cz9y3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "489626f5-1c5b-4bf2-a3e9-d9ade2474eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.491236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "cedbb728-ca4c-484f-b896-59a732454360",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFull/3hznmul2nh84oxah4b9psgt1i73okdux1c5zn2cni353xlbg3lyb7ipyhoq6pvcgzmfkabr5drrgcj69bypk685a9ha37vpcfgblmu0dsykv1ho1ofs4cuwqrq5ohr0klwugfgbmef1r9ikfp8gadojhv054rlmlq2gvhzmosz2hm5/ci8ak5evzrro5tsz9muu2f62xkvlw1mtkog0v6rbw9qng816nj6zwrbiz2ofosof1584hf017gjh38uy01gvbxpccatafmgmux52mvkzjfl3763r7pppo543chusobzk8q7onk4o17exakg74vtviflnlf7bzcsle/2sbatzq30q86me2cbqgwykn3tjllic7qcf6qwx0uotn7boe6fcgrroew853mwfi2uzxxdgpa367pujyxkfmfo61nddc12nbkjfannr0tbbvbogwhdxt1trwjkpo2gyomzzo5bqks3izl1mx5lclkpibmqbquc4eqejkipizyvp3j06d6hl3wx",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"7l01rd2cp2o4wmjjuxklfnfacdv7a7dcgi5nwov1m5p9isrb87bm714r3knasyxmj8stwp8i\",\n  \"score\" : 3.567709292697785,\n  \"probabilityCalibrated\" : -0.39307726069508964,\n  \"name\" : \"Thersa Torphy\",\n  \"probabilityAltCalibrated\" : 0.3223357216449314,\n  \"id\" : \"o3hc\",\n  \"religionsTop\" : [ \"n9vy2q2l8idyond236d9puqapnj0x06v1yjobllmh5btoj694wsws7k50rusmflgbtqp3yo7jcp4frksn1fz8hlamo2r4v4nti3c8x70yklnt1cphzz0l7x736wnct2xaxe3c7scu8tyzjitksiy2dr7z0yyt08hohb1fz9snbb58o1ahl20n4wk\", \"fjyazsv8zit0y4q4810ss3t1vcct1359u9wg5qtg51lkt9dfiluvtaweme731p7qjl3ipviolnskbx0w4pj0hao9mhlr9dfnybr3umzwitzliln5u22jzbxbfm42si26c3rsn1ejhx1urpj3sjc7xg0qyj9fv531he8cu29roxgc5gmnv0\", \"qprclx9xckxx7cz1u6zftj8td1j\" ],\n  \"script\" : \"bfvxwv9exha0kko9c1aryejh6o3z8b5vbv1ia87deckt02i67z8lmcresucpxyayq9sqwlmxazc6x70dq2olc7tlza4mt7ukfanbvwv86oqb5hywal0j1n3m43gahanpm1027pj0h969yew8egm2lwih3hkzlevpkmgl8q70gpz0mjvx74aawxjri0so1sdd9\",\n  \"religion\" : \"6vcej6bjawymtx1bvxvg7cxj3opj0fx95yuks1e4cwszu0qhrs3np7d76fj36zr0ny9e05fj2rx41bazaeuzss02vj03hee5is9fy8pku0p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cedbb728-ca4c-484f-b896-59a732454360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.491176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "5cc29de3-f9d7-4735-90db-d070f5949750",
    "name" : "Print basic source statistics. - 401",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5cc29de3-f9d7-4735-90db-d070f5949750",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.490823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "8d25f3c5-3ef8-46ce-adcd-b56b27e51fea",
    "name" : "Print basic source statistics. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"countriesAndRegions\" : [ {\n    \"subregion\" : \"lk6im8ez\",\n    \"countryFIPS\" : \"q4pjtqzmyy8ejcpxy34i281o4kv2nf3kee4npq5bb7rysfwp55qzdm3633z361we2t22sskbqv1p8xwufiktkhomy2oid547eu5hphff9uzt8fqoj7uxw8rjb\",\n    \"countryISO2\" : \"9vvhoxpr4tc9b7ttm6w0wruczixz8xu9d57mkb0je05mxij94m0j56fr5f145lvux0upz85ulx5z7ohif52kfdn87672cq0g1dag4f6lxtw8o16001bt9pm2y1x7g1lyd8ldcgrouo7982wqwk804pcut\",\n    \"countryName\" : \"Ivy Cronin\",\n    \"countryNumCode\" : \"6kyocydky6aqk0t95j8kbsd2106fznvzogz9jlcqkbhm5rhw9oe1uc0ekapbezugsikj6u01hjg\",\n    \"countryISO3\" : \"5pggadro69vqvk8d0f0f1ew5xvi3z978aagdlvwu0u9t9rxkkwc3mud\",\n    \"region\" : \"w7bketetddimskqj6pr1t93x\",\n    \"topregion\" : \"togbhgdharmhpnkowgq5ftf7gkjnwf8iyjfs9qwtlhnwbb973qb5c0lrsrknl96d8mvpogu9r9l6u92nrnql4t8ehd4ir3qpx1fodqus8m0xmoafilwbupng3dn23\"\n  }, {\n    \"subregion\" : \"r04utg3dexz0x4w0lkzmwv589v52t1ux0dx0wgxv28kl16d1nicp4wyoumcikb3er6slu0ymighael70iry56m1rih3pdbatygix52\",\n    \"countryFIPS\" : \"75unv6z0o62cbw85peawjy5huk3e9bf6v9zhvtuxyo0gisx7dmu\",\n    \"countryISO2\" : \"14t2i5ny8l4in45ozwjag03\",\n    \"countryName\" : \"Deidra Lang\",\n    \"countryNumCode\" : \"62ya64h7luc2yty61fqhlh9s538vy13ce44smv3r1k02cm3iqcpg58jjcjkmk5hzyh45mbvf222q7ir6p2rwjmim1g5si6kzmpal4wtydjja8rqbr5xdc7goizbrzec0e8p0em\",\n    \"countryISO3\" : \"isk3o7gsah75q06mkcgipn3p1hxsj1pdvbdos4evxs6heizmonc6t8d7zugaouahn9atin4fnjvair1g1muo76xs79ev4v3z23mhs7fu9i0rzaltmamr62k1gqohi13tjnj1t5zqz6q0nn2llwpwyz1tfxkzqjj0wrswqtv19hd68494orxywvhucyvaxaaw3\",\n    \"region\" : \"3otk20nsjbnhp58b0qiqfx1rdch7kno0v0hkrp5gdp572qg3kxj5t1cj993k9on\",\n    \"topregion\" : \"1j09e4ieemtz5dvwy1p6eo03d959ejiwtqf0n8w2hw4rlq7opjhlomylg0inytiz5tdkp2a3gbzxvyjtjie8s1huam9ejzgyx23yoqn8p5b1a00jvbw6in2snai16b9w57727c5dv4fcn6ae8lsw3up1\"\n  }, {\n    \"subregion\" : \"nbtr81c7ceydcvxkusbaep1p5mh2fcx6y3b205ei99iih28dpf6gq020g7i0qwody6zvuoqtnppee9zkpc068s3d9ycfr2bliaxn4ewy75wtg315xnbojck5fpr3thkk4x14xdhbrrozp4efi7t2n5hciufgqqemgkisx4swz9khelyjjyv8ot727y0f58hlrv2\",\n    \"countryFIPS\" : \"hsuwr87ofj27ul5813w7zg1n6n1j8ks26o6h4g4ck9ua28xld5keoebxnyl603i8j9r7axtx72cdocl6gzufkuo7lyszllfk11rdxqma02pu8x8mideufpzbu3hs5momb2rv5nkxyp4ou8\",\n    \"countryISO2\" : \"zzj8qvjr7loy2q5i6pwu9aauonvzxumi9sp9l5zypk6yqep518ys5u\",\n    \"countryName\" : \"Blake Howe V\",\n    \"countryNumCode\" : \"7vpbzy0sdz6q16sx54u313ti4n47eosg2afqz74ewqywkz33co3gwkiymnugbhu5eglusw7p9anllthjn5fsvr3ygnwtw1q2xavf8e5ylvy8rgke651jb4uyfd8ed4k8qz68a0hpdk99vx54uip5acdwk64o4vfqwh07z\",\n    \"countryISO3\" : \"tf92orie3glheq9sqlcafq8gtv\",\n    \"region\" : \"kx6d33dsuvuktl2zgvodhxj51nk7iye8ppoeh4jiwg2jhb0hojezf6ospgqk5wgfxy2a02s97aueg2otd51jl5u4octbliz0sug5q8zcqemqqnsdzthr273mw7vg138w2z8s47vepan6yxu274n53n8d7ecorr5fbwkytqigtz8yhtjvvwn4\",\n    \"topregion\" : \"8wk7i3g3xz3xm5vxa09q1febovfhyq\"\n  }, {\n    \"subregion\" : \"avfkk8xubjrvsnwvzn6kinsfctxo5ikf3830jl2e6ic4s6dsqhpusxmtuwlhwgy95kxvxdpzg6khfgmgddvbn342huanpniirhk4i3bgtublr5q85jhp7ampueruk4qsi92cvvzviws46ax7qj3rt9lfw5mutmxl1x1tqd563e\",\n    \"countryFIPS\" : \"ft65vctx5t6kic48g9v51yd4vbidxvrj70zahz5m2l820mocvt98utz0zn933r7d76rcii7hn6xubah5jhodx6ew5oxmss5t9xdq7nsgzd54q0955tue1e62yjyobcd7731mrkgukkcg6j1msexp7m3x4btu54jcrc71b\",\n    \"countryISO2\" : \"gbyi7culmpnvcmjmypxb2y0b02yagk0i1v970gzm03182knqfx40dnqj7v0itmh03kmciiubdg6dfzmbmgn3wtgxig53yn45tjpbu5jsr2ifyjphh6zzadq9ddy0rm4xd2u0jrwo7vdg3jobuk2x7qhb7ug29o6nojdaitull6zgqoiz\",\n    \"countryName\" : \"Miss Jackeline Ankunding\",\n    \"countryNumCode\" : \"k81637l0fjaz8g98sdoc98kbsclgb6ilqsd2qhwonp9o8mqrr1hwmsfj89igd3\",\n    \"countryISO3\" : \"ubjr77x9rz98hpsmh3bolmjwf10bsq7mwguk29lpz437nru2pfwrxxbiztoguqfk6wbavuei4w405qu0hg158mhnhjgd0pnqjv9lqvy05lsyaiyc0n1t8s9jawsykfulra5svs33i2uuhv8ecaa0rwryxu9q0zskzgi7at4oo8nrkczaxc1yargs3gzl2i5e35mv\",\n    \"region\" : \"5dl7qkuxa0ejzxbt50whwbnguz47z85e6m4u9fad2t05kuol5f74l75wxx37jt0aqs41mhrrthx71wn9h15og1r11zbwpldzbn18a0a86zcyp25slr22ethaqav9lzelv0wy5iruvnu51eq6d0rylr\",\n    \"topregion\" : \"v42rn74p2\"\n  }, {\n    \"subregion\" : \"t9hrfab3q9wzp395a39j5eytg936gck0tfog56nnchwojn6j6aouwljqimzkx1uqtdw2y2m2zouj63f8fcmrhd7sr245gox5t3ljwj5s67x77rhe28v6pu3myhcxz9\",\n    \"countryFIPS\" : \"2guno\",\n    \"countryISO2\" : \"izhigstk9rulvc\",\n    \"countryName\" : \"Sarita Wisozk\",\n    \"countryNumCode\" : \"6c1mghk50vgd9op6dzicyh2ebsqla9sboeu3xddpe5m757cz4iwej7574vuwcmrdhmlm6fb34pa1j44wofwwjdu4fdj9rgs112tzqtocp74hcwss9n0pa5c210cmznsb4jqu2hh03vcc7608jurzp5cggyp4213\",\n    \"countryISO3\" : \"ie1384i6ejnnzipadqqac4tdjp1t4qizohbk9bvm26rdhftrncw3swf597fvgh18nk1uuhijjx3gklo1ow\",\n    \"region\" : \"zbrrcfz6ilcdsix1mg0976aabmu98mzc06kldx1shaocrc7ibb6j3yuz2yz25f3vuansg7zq26jqzuh0zifce82v965cajn1c8okg9\",\n    \"topregion\" : \"vgfmns3ouxwpmi8k76ygfk99tzvbplno8v8yz7g8q922opcx2akx6mpp6pbdlqxw2i05vc55l7yjny5yxpq4oa5cfv5y88v4alm9vx7m7mtcw1olvr8d81u8dtn2jhsury\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d25f3c5-3ef8-46ce-adcd-b56b27e51fea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.490796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions",
          "schema" : {
            "properties" : {
              "countriesAndRegions" : {
                "description" : "List of countries and regions",
                "items" : {
                  "$ref" : "#/components/schemas/RegionISO"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "RegionOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "1d4dfa89-3865-4e36-be8f-8f9fa6f59d23",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1d4dfa89-3865-4e36-be8f-8f9fa6f59d23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.490111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "24272e0a-7495-4e44-a703-58c827e24d7c",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "24272e0a-7495-4e44-a703-58c827e24d7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.490095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "8a1e3aea-5b0d-41be-a7cb-fc5b26a5378c",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8a1e3aea-5b0d-41be-a7cb-fc5b26a5378c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.490078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "b5ec63b8-5c28-4dc8-9489-198a0dbc0c7a",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 83.65532384960605,\n    \"firstLastName\" : {\n      \"firstName\" : \"Arlen\",\n      \"lastName\" : \"Beier\",\n      \"id\" : \"0td1\",\n      \"script\" : \"ddhfrkoiaovj4gxzqw1eiqihbi48kt8b85ledqysmmix8c6tpw51hqxtzdezuu5a1hvbg2wmjyju1x4eiq5966qddq7vchcnm7eudnlizn276t6n30k0vpkxss9hz3zxthmb7h68n24ukv98m0qsvr4yaebfbarxwcjarde1nj\"\n    },\n    \"name\" : \"Kiera Rogahn\",\n    \"id\" : \"rj18\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"hsgp3xy3r455sqnkv7v74h6as66zuz5fz5fb9y143yq8cw097gcx27gj2i5gyotgdnfajqmlxsd10lkdg8olyxd0sdphxu543t4hig0cv4evnyyxzxsks8x7070yvqiylra8o8c6\",\n    \"nameParserType\" : \"FN1LN2\"\n  }, {\n    \"score\" : 16.669456433972883,\n    \"firstLastName\" : {\n      \"firstName\" : \"Tory\",\n      \"lastName\" : \"Wilderman\",\n      \"id\" : \"1gho\",\n      \"script\" : \"lsmh5j9r3alplp46qyccut533iq7jorckc99ar56bxonangiig7860wxda8rown6hp1abj0ks6yim2p3l97fg51l8ds36e6egejsuy8efxhnnpb0x855uv4qtsjna3\"\n    },\n    \"name\" : \"Renaldo Hyatt Jr.\",\n    \"id\" : \"8f44\",\n    \"nameParserTypeAlt\" : \"FN2LN2\",\n    \"script\" : \"maqij7njr5ei5olp2ginrp47sp76m0o9tizrdb65bhz\",\n    \"nameParserType\" : \"LN1FN1\"\n  }, {\n    \"score\" : 56.69753177487685,\n    \"firstLastName\" : {\n      \"firstName\" : \"Dung\",\n      \"lastName\" : \"Kuhn\",\n      \"id\" : \"16rj\",\n      \"script\" : \"tgyprqy857a58kv7sgdg86v3fxuo6b6uicvd2yilyr9n2tfretduxq1jaxoej0zlj4f3dwrh7f3nrmi57oe8waxyvv8drhuz0vyelw72uc6uo9j454lihai6ckml7bhkwth7\"\n    },\n    \"name\" : \"Louis O'Conner\",\n    \"id\" : \"6r11\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"tl9jth760hoiyeiof80mr5jtf50jcoy481\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 46.29887585283499,\n    \"firstLastName\" : {\n      \"firstName\" : \"Gema\",\n      \"lastName\" : \"Mante\",\n      \"id\" : \"2410\",\n      \"script\" : \"kfm8h5l4n3x3vyrgcvrnubij7r0aiexaquq0r753smpkgylxz6kpe649o4o5ty\"\n    },\n    \"name\" : \"Josh Howe I\",\n    \"id\" : \"892u\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"yoz2a6lvcxjlozv9xvko07yjs8kn8169w4xl66pvlaar\",\n    \"nameParserType\" : \"FNxLN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5ec63b8-5c28-4dc8-9489-198a0dbc0c7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.490044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "7dfa18a3-c6d8-4860-bdac-05abe2773f1b",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Shasta+Bauch",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7dfa18a3-c6d8-4860-bdac-05abe2773f1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.488843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "60f23745-31e8-4c54-9437-632c7d3d061f",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Louella+Carroll",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "60f23745-31e8-4c54-9437-632c7d3d061f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.488786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "fedac60b-8321-4224-8962-58e95a657ec6",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Verla+Beahan",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 45.61292612062808,\n  \"firstLastName\" : {\n    \"firstName\" : \"Whitney\",\n    \"lastName\" : \"Keebler\",\n    \"id\" : \"n6o5\",\n    \"script\" : \"346t11fyoirqr8a2uga4xhrpn8tqzcx78nneq5dfkvp0f74at2794u9p1zb9kmks6e4nqvzy788jzssp5uaibn8t2szjkwypsw1ye3dwqavu3xertqmpw6rp8zzciv4g1cmuxcl3hfoxcnscf0timess5tyzmvhos8n0k3w04hudk91j1zh42pr0rc0wov5g63g2\"\n  },\n  \"name\" : \"Isidro Torp\",\n  \"id\" : \"c22j\",\n  \"nameParserTypeAlt\" : \"LNxFNx\",\n  \"script\" : \"l4nu2jmcjpu4niodarvsbkwkqr3i1t30m4e5w03snip6hrdnks79ef20dq29zv4mhvp48hbgtgtcsd2103myqrpk78x635nx8291k67mcmcx7cw3b34sua2mosc15q4rb0a1f4qwdxwqh42i4cpz0rl15qf6ie8v0mwjx9oqg8\",\n  \"nameParserType\" : \"LN2FN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fedac60b-8321-4224-8962-58e95a657ec6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.488712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "f35a549b-32a6-4dc5-adf2-2f112de0c353",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Cyrus/Schaden/202.563.6973/3hpl33/1ign6mo101yyr774iffvms2t4kq1g8gjx5knwiaghu1odllqmfknh95t215arctpyrqs5kcrw7dti929xkbqt1k43nwvjh6ih04fs3k6dobbiwwc4e6k8cifebn4gqsexwsmtbxwesrk9d5dzsvywr3tthp6ug5ojew389nyk9hbvoh",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f35a549b-32a6-4dc5-adf2-2f112de0c353",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.48828Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "2eb50756-c693-46ad-86c3-97324b1389da",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Monica/Moen/047-478-1010+x568/3837pb6rop42kt0yatv86apkfh676f1hp1un36irsdbyf74c0ii0km8uod5qa04yssecjvwjb205g8h2xpkb3kahivspvd22orbys8j71ubpl/7oxkaqku6ks69xh4ghdqvus0k9avgrn8ao1x7vb7nkuykbv8dbtxzjt1d4uv3o0977bj3dg4v0bocztff8u7oj8v3dm8w578vwjlr0",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2eb50756-c693-46ad-86c3-97324b1389da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.488185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "82b39e1e-a516-4ede-a9df-4f5ebaaa1fae",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Jackqueline/Toy/%28253%29+138-6943+x804/0xx8zykygyjrdx2sohe4w1dkx3xd08oefnwoj19bj1f1otdemvqzitwhggmeuwgy6vpk0j2s3uuix5w1z1la02b7a15cvqqp2jk6utcgo9kygaqc3t1ow12j97g61fxu3xp9ia6kc6t4yj/aqtma3yzzx45qkcqmh0fx1lim6wx83zzsvfmsmffg08b7fpqgwcig1epjyfhuicabt1pw4pcrtmx8as9pthqmyi4oxtdh2mpvrgz2toq8b2eq99dd5megwta6vic4xrsk9r7d1ol7nyjb0ffkb8b93ywv1zkk53r68uteko1w4oj3m",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Schimmel\",\n  \"originCountryIso2Alt\" : \"cuvanuknvj7v6qneecee0bdh5kc32pwyfr0i3sfj1vbyhk2wj3zewhgmnadkg02t7gwk27s2gfukp0wpnosvmuaslrjwtekskirnnbdnghglkpc4hrxmwmr5inze08e95rh0forirpj8bxxvekwefg8qq\",\n  \"phoneCountryIso2Verified\" : \"bucl37ggjssy5hri0668xm9gf09hcs5d0e1uq7iety8oi796333o049qa3ijsrk2ct52l3syfnbixl\",\n  \"verified\" : false,\n  \"script\" : \"0yrkuq48lj7l5titpkdxywt3wjsmeoaldlk5gaw5zz90nbimuu3ocaf6x3dnxlp474k7qm10f5ylkrj1ti932qsh5jzpq1ttxnyvnbrc9fbxp9n8n9c5y50dcy30dpa3v\",\n  \"firstName\" : \"Tyrell\",\n  \"score\" : 78.89897979764677,\n  \"phoneNumber\" : \"974.874.5702\",\n  \"phoneCountryCode\" : 2068030769,\n  \"originCountryIso2\" : \"1ha6tse838dwryyrqhkh978j6txyvcv41mbiccz60xni858vw3ukf1nnfb3aj33qa7yuycxvhgvppsdhztn5h1eycs6ttgx2m7\",\n  \"phoneCountryIso2\" : \"n8gnsxm7i4081xsos2etqarfpqdet4wyil3gh5f2w6o2up03doyqgtmlxon2syez26sp8xrfs8ztnt96y86cqd9fygixbladkik6hm3fnzbpy4yp5ejgnhppn7m7n1tkrayast99kbp206ru154y1hr\",\n  \"phoneCountryIso2Alt\" : \"jxdtnvcjgvgbilgjm7w2lqkkklp71mkz3nxog2xfw2vzymtfbj2\",\n  \"countryIso2\" : \"cbnajt9oa7qmn27xyuex8rrujt3v91k7xn7d52lzmjtnaes70dbsfrqukmzhq69gsbmzadgoen38mhpb6vcenb6snqrd5knfmf73unlglsc7xb98lels8whgs1hqr4ub2jpxebgqoa7yx59fk7izj1xoxfrrut\",\n  \"id\" : \"6uq7\",\n  \"internationalPhoneNumberVerified\" : \"qkhy4u5xi7to86481cblvlurcagjzl9yggvg9pqz4\",\n  \"phoneCountryCodeAlt\" : 431228135\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82b39e1e-a516-4ede-a9df-4f5ebaaa1fae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.488076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "5da1b4db-5406-4603-ba15-52bb87579bce",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5da1b4db-5406-4603-ba15-52bb87579bce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.487611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "e57cfb7e-9554-47a7-8641-1feab2fefc36",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e57cfb7e-9554-47a7-8641-1feab2fefc36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.487597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "1df390d7-4a0d-44e4-8299-4c855bbdfefe",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1df390d7-4a0d-44e4-8299-4c855bbdfefe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.487582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "c42d285f-f9df-4d02-83e0-60bb72c18b08",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Bahringer\",\n    \"originCountryIso2Alt\" : \"jhs9vo27zqhdxv7m6cvfkbciaylxiv4r4a64\",\n    \"phoneCountryIso2Verified\" : \"ddpy1b6plh2tzkeokyd7bjd4t9vn0ea5c36soz8vu\",\n    \"verified\" : false,\n    \"script\" : \"wpf93tjbx0tmv28t17z9h673aloy0s0cdyor339w4groryqsle6nk1lqdg\",\n    \"firstName\" : \"Bryan\",\n    \"score\" : 61.726012792329364,\n    \"phoneNumber\" : \"1-718-209-4232\",\n    \"phoneCountryCode\" : 204266145,\n    \"originCountryIso2\" : \"fsp4duq9mvjxqypg20yqed3jrvllgjmys4zhe49u97om134eavzzsk5mg1kivjfrl5lzm76w15vl9b4at8fenvn814jrws53ir4x8ran6qnskufbh8esmy2hsbdf3ly7svjwtp9f5ooxjbabgv7g6kykv17qzb8nxfja1ojrsk\",\n    \"phoneCountryIso2\" : \"vlkpr2w5ej4dbz0gq23chkfdtubzpcy9bu0dnuxdygm1ba43q95hmoekx43azx5i7h1smf3l2wykcmr30cxddaky3mv6sdgm72ektwq2buf6ib816r1ilbpe\",\n    \"phoneCountryIso2Alt\" : \"yt8unraoudwuik7uvfacw1yp3boa2w6wyhkw0967fegneff6nvelf2gkoadpgg5yv665dehvz1q0jxmfjsqymz81jwmhd9170qhvk9e32o0\",\n    \"countryIso2\" : \"jvjfdbban94bzuyqlzayl9y2d4834b2o3yc1\",\n    \"id\" : \"13g1\",\n    \"internationalPhoneNumberVerified\" : \"7sr1u5wbcy4gd8hoyc0vmx\",\n    \"phoneCountryCodeAlt\" : 805026368\n  }, {\n    \"lastName\" : \"Witting\",\n    \"originCountryIso2Alt\" : \"imb6ymdrfdi6jfxvjwfq2rsfifrzqjf3t4j85j82gc41hrvxgp71g7942rlau57aaijxm3sqvwrrljjt1ol1h041ucb5jgnhrks4h1lr9tse02wg82tla1jkhnzjc5jlpmtep3uq0\",\n    \"phoneCountryIso2Verified\" : \"rutbbgxmcc3ptf96yh2cp2r46t9hkv7itbi0461eq6e8g0eern0imxsi9crdexkd65py\",\n    \"verified\" : false,\n    \"script\" : \"abn3tcvn69111fpkxtjwgn3a5ws3o9sk937bbggckbwz57umkfgi2ft\",\n    \"firstName\" : \"Ayanna\",\n    \"score\" : 28.516184299996105,\n    \"phoneNumber\" : \"094.498.2273 x95387\",\n    \"phoneCountryCode\" : 752556152,\n    \"originCountryIso2\" : \"3mk1rtqm6ir60hm5lmxguthqlje0n36jdod9s0v06dlfzfq36s51x8gvc51wgaxq9z\",\n    \"phoneCountryIso2\" : \"rysxpp7y6ydvwygrshmgjldxcp7rf9odadm9x4j63kybdr\",\n    \"phoneCountryIso2Alt\" : \"rzw5ozwldvcfktiiqfivxg09o0ebyo1dvhztfvce59msyoz7fyx9c6scqug0njfrfxjezzx4mb9n3keqi0arklflfk6ynac4i2r2i3j24j296u3nieqpjnmxu7nxt72l\",\n    \"countryIso2\" : \"9af8uwcszanllqs5a70mtvtu3tpkxtp036fpobs0fr0nmi3v1gievsv92bnx5h6bvx\",\n    \"id\" : \"7g7p\",\n    \"internationalPhoneNumberVerified\" : \"cbgr6eyreo63zwykphxa1xkzyqip5xk3fpo0xynotwfn0si8c55nvjp7babghuo8oc0pb0do7xwpcjfoo8ue5v4o4hq6uhv0o4w0zqiv9cihwjpcw55pp8dr3og82vaiu47n77o2mdh7crdt11pepmw7nrl7najbilpohbplr7orjn56q\",\n    \"phoneCountryCodeAlt\" : 89342397\n  }, {\n    \"lastName\" : \"Hartmann\",\n    \"originCountryIso2Alt\" : \"k7nai7nfvcni88wwlw8ocpvbn6zfs7j76davuwe2otc2w9fotoy9azm6k5l4os5gxg49xi20m7x1owpb4eha878ik35t1ij6065lw1bvpmpu15tl\",\n    \"phoneCountryIso2Verified\" : \"xo3jze6wtb8srynfjglsix4b7siuk5lb0arn04biqvlq4s02248wgti0y60tp45d701xs9nv5nkbyaa23x59ea1rhaddkvgvjeb1nzbkeotovyohzvdr6yaiclec9ky6ori1s9qngdz91mqmps8dbblzzibk5dm4ynin6bliz7sar44qzxici31pxa8ebosg4r3km\",\n    \"verified\" : false,\n    \"script\" : \"hbdc1jrrk0erkf53kpx9ie15wjw3804p8bxdpv1nfs7iicu91nvs04fha1jexifpo12syhs2pc67vja4urv73e4igxqy2ot3aunfmcce5xyqjtlzib3sx8d03ext1ectmya0kki5rdcvydhvikx93w0duirx114czetywixvw1k2wf0kdq25mggrevao2crjds9\",\n    \"firstName\" : \"Carson\",\n    \"score\" : 49.24364501938274,\n    \"phoneNumber\" : \"943-809-1287 x3544\",\n    \"phoneCountryCode\" : 490487845,\n    \"originCountryIso2\" : \"sqxedhlrlr0tj5dw71ig72ftx9q58ycut10j5fxopsne236s\",\n    \"phoneCountryIso2\" : \"k5ivvzf2wkl7tna5dvry9irkmno6brzqm1kjvazgsvqz7i\",\n    \"phoneCountryIso2Alt\" : \"cdhx677kz3dv1q623a723cqwm6\",\n    \"countryIso2\" : \"are6d04kbaemwfu5hvzpen9ruwe26o8xwnfemmugkl6w3ag2skcapqq57dlt2c7i2i556frb68k9x6k69hj716sojk2pv7v37fat7rvvkvjpypc600c31me7hg36d08qgf86fx8mb5qkisw98in7\",\n    \"id\" : \"yvpt\",\n    \"internationalPhoneNumberVerified\" : \"0ntgfmv67dfh78jvfjs0imih169an8iiiokj9yqzg6hjdrkq34wuwvj7qpp57qx1vyqvtd9v19cinm5p1w9yopxqrxj746a2iwnsxbwnxe78shsx6i414c6rjkgwv\",\n    \"phoneCountryCodeAlt\" : 1021045056\n  }, {\n    \"lastName\" : \"Mraz\",\n    \"originCountryIso2Alt\" : \"86sdzlaun1ifbgu6eho883zqjb2g8bhakdd0zkuckrr0mwj5alri5916rl8drju765fffzrvzf3talg1aq6e1zxcv7f0izmo123ln4gx98uzsxk3i79wjz0wzpvyv7\",\n    \"phoneCountryIso2Verified\" : \"uncbxy2c87jn8p3kfggm8aempdy7qw62of0ct1jn8wj2pkfkt9mslvbk8kz0uhunbjlf15m2r2pd6kkiuo3u726o3qkyh\",\n    \"verified\" : false,\n    \"script\" : \"p27e1wywt246qcjsmdwznfmpnxv8ll0\",\n    \"firstName\" : \"Long\",\n    \"score\" : 4.047267571300173,\n    \"phoneNumber\" : \"031.579.7391\",\n    \"phoneCountryCode\" : 1630869474,\n    \"originCountryIso2\" : \"dnnmcspjvgncaxlckrqbd4kzt1giku4hvbj1welcu44bzvb77ui3u5zjrh4z2gprc69vgf1so15aaic9\",\n    \"phoneCountryIso2\" : \"acwdxn61nbowta75cjq4pcvmlu0nkoz42\",\n    \"phoneCountryIso2Alt\" : \"qx8z3a4j0iyxdg4b2beuvidg8crgrf8j201qplnf48cqe8z0qtu5fh5ani\",\n    \"countryIso2\" : \"9qefhneyumzl6ni6syx8xx75noqxykrwgpq5x1xky3e43dlaprddvv87lxdseklavoeq55sukxetzxqz7s9mv622zlvwpe1cuupguzq9a3303536b4jeq0yofyzs4gs4xjjgrrxw\",\n    \"id\" : \"3tcn\",\n    \"internationalPhoneNumberVerified\" : \"t4x39mpzbgg05fxkk3lyxh75n3jof3e8zbqu1l0g7sm19h0u3z6pde7oxn6izvqqdpulae2j9gc9rffrt00hl898g9778w5vc3sopt4da1dzoghjj03vce3gvupmey1o1l0myfo5pvqmws0nsdrfvobprua595znb2v1o\",\n    \"phoneCountryCodeAlt\" : 401526584\n  }, {\n    \"lastName\" : \"Rolfson\",\n    \"originCountryIso2Alt\" : \"6plcua4y1jq70l1siweq25q7lzemt4htb236is7e13re3fwrrzdyewl2d7l3w9wn1pt2v8r2nx5xwo91v977a0zoajz5swg98bwpm8ok68soo2slu6w11osq6685glbk8z732ve60cx367xv8tiwz6bnigdz5oa\",\n    \"phoneCountryIso2Verified\" : \"sxxohm7yy84lzmbfr7s1jmhne3qk053up84vmlwjvqp2r8jmhxz2gysb3dnogs4ly65o0vmblc2inttie3zpayiob0k20dd6z5ocigwrg0lf2ax68djs8vqjunre7qdi8ydkpabeor0c8unj8u6w2l94kzngqdtd4952n7nd99ed2xa4njmmhib2lcgdvtsqthe\",\n    \"verified\" : true,\n    \"script\" : \"zlp6bo7saydn2yeuu3ljrqhbfmnz23s7aji4ns8m9vspnuph0ut038r1bxy4txcz4ka5op1yzctu9nu3ey\",\n    \"firstName\" : \"Marilynn\",\n    \"score\" : 57.004542950150054,\n    \"phoneNumber\" : \"139-926-8273 x946\",\n    \"phoneCountryCode\" : 1931465650,\n    \"originCountryIso2\" : \"kut9whaccnbqeu\",\n    \"phoneCountryIso2\" : \"tepjbb7abaprzqlviabh9pshbwszgtn5n5wbsg2dptdg3a5bhxritwlwhbex6sz6jlt1te162q3ltsn71nd61yrk07pwpiqlj6yt8mkmchzct8wutsn3kc7dhuros1c1i457sqn095dysjv0rrjzjt\",\n    \"phoneCountryIso2Alt\" : \"i7fum7ip08zisgt1cnmdqg7uktfngutqxc3olm9k5l344ytvetts4uieu3n9p473g7toqwluypmhbgemnm3wad4s7h1673w9bvuku49o40k616ktljetcskz7p41nw1uqq8fcnydql1gf6oxdch773rg\",\n    \"countryIso2\" : \"f59faw20m8see81xx6gc9lpnl3pzsy1o0xybv0kz2cvikxwuarhjh89p4vvu8ed0qi4tgtb8wtihisi7dha9q99b5nz9lptubb\",\n    \"id\" : \"io78\",\n    \"internationalPhoneNumberVerified\" : \"clcl9nhwqsdb3\",\n    \"phoneCountryCodeAlt\" : 1292313337\n  }, {\n    \"lastName\" : \"Herzog\",\n    \"originCountryIso2Alt\" : \"0wd34n4wld0di5d74k13vsrz0erkf2hyi614p94markxlfuy00wz85zjv0f17q2pxhf7jqjtcy\",\n    \"phoneCountryIso2Verified\" : \"xwbhd1d1zn\",\n    \"verified\" : true,\n    \"script\" : \"270ufjzb3hd3wpfuoqt485qqn72x76j5v6kngruy5ue1404mbfouxcn0ybcj830wdybr6i5vudq9c6\",\n    \"firstName\" : \"Audra\",\n    \"score\" : 77.62520356472186,\n    \"phoneNumber\" : \"(418) 796-2285\",\n    \"phoneCountryCode\" : 88894429,\n    \"originCountryIso2\" : \"fh3jwmk3wtxl2xf6jkz1aobvxc2pgq1cyq7kos65m302palvbodeexma8zw6lzd5j22iak7mkozywwygn90i44hv5ck5soi48cehdkyjq1lrod8apuctsbxdpmpl9695v1ppb2gnv2uqc0xjbffu542v6yz8abisqom90wx5huqq1pqdfxz\",\n    \"phoneCountryIso2\" : \"gwo8l3dw5dwtn8ucs25uddmo0xabh3rii4m3c9am7rda6y86zsdsg3vyijtto4dnmclcde99eunu\",\n    \"phoneCountryIso2Alt\" : \"9uhaps35pauuhzjo1u6ughau70o3r8wkjw0wqdb94qlvr2oyle380grlj30mgim1y3t3ecebaw3bf5eqw6g1ik10vzx0f2yybp\",\n    \"countryIso2\" : \"47okvjk8tyevb4l9kpf48v8ruerkytu9zf42vu21pvae0rsqi6s0oet3xj4on2k750mcra7xo49vibnvc2didcbk6\",\n    \"id\" : \"w34h\",\n    \"internationalPhoneNumberVerified\" : \"ui34hnngh9q1ous4t4paduwt33esr7q\",\n    \"phoneCountryCodeAlt\" : 1518532886\n  }, {\n    \"lastName\" : \"Tillman\",\n    \"originCountryIso2Alt\" : \"g4is36qanudqhiqpaacvfut6txnyf9kniom6ox649llguz9kdzlwm34vv29nmf1n9uv3tycptbzftruqdg7aj0f3tec9qlw\",\n    \"phoneCountryIso2Verified\" : \"6jvbffx2sqj13bu3fukje2e2heo9szmc5fxhpvwk\",\n    \"verified\" : false,\n    \"script\" : \"wf0e9i2l181ry2gcw34fhy2alx8dyed1jajusiszrypy3uwxrcgep0v9sbkr3ju750qimnh314yuhqbxdgihn0trcf76fshmcetcaw8kh4cd0wrrjdr3c3fgtrtt7oylujgu5i7ncwfxdnq0h45r4we5jdiciz0k193e9303yls47gsvupyv10im26z3g\",\n    \"firstName\" : \"Thanh\",\n    \"score\" : 24.042762198641544,\n    \"phoneNumber\" : \"(106) 514-1534 x0402\",\n    \"phoneCountryCode\" : 596773490,\n    \"originCountryIso2\" : \"u3zogsvpy29162b5xr6tuetht6rxxrx97wr64esshs9x19fbxl\",\n    \"phoneCountryIso2\" : \"0t4zc5f2ro0k5t3jd9rmvvhs69f3h66wn62ucqr04p23teidtllgs5v64hpbe8gtiu1gnoljlva98y9x6je2idqroz4kxcw13amjxluuxf53kemf864olt1690sn61x5iqtdb9xipv27793n2s1iy9tscch6pvvx0m9lzfy7kobzr4r0hbedv1wx9vqjmryd\",\n    \"phoneCountryIso2Alt\" : \"9g1k5a2nn0kzbfkmu8jx4zcic7lxg2thr8xmcyzyeiwx2u1iev9bjz7ctj41nfpi\",\n    \"countryIso2\" : \"sppax94sj9hcfrzcd0bgkbiikqdnuxj5a87ci7mgj2nhn0ruahj6pcm44aoxch7pu5eqv0ku5fotn4bmaj2ik6rjtgr7wj2mzcjm046myqb24chpph56k8e9quv6ues8petzxmj8s95a1vg6\",\n    \"id\" : \"7zg9\",\n    \"internationalPhoneNumberVerified\" : \"zi6y8kjmohcrnon6jr87yhshd7lo2eqzw1n54fzjkpqz6udka71m2a0hgysmvqey2g3slchuep8kdoo9dhcmlk5l7txvg3kqyexfkva0mrxqepr5io20heoxa68ji\",\n    \"phoneCountryCodeAlt\" : 1241894376\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c42d285f-f9df-4d02-83e0-60bb72c18b08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.487553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "a6512ae8-bdb0-46a8-95ac-30339c3de24e",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Lilliana/Morar/%28853%29+939-5423+x601/5i52jb49hcwnu7qbhcim8sfzjobfcbh8w7eoqiryzkt0yq3ky1tfn1g5q656us7is74zu5kak1",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a6512ae8-bdb0-46a8-95ac-30339c3de24e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.485704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "3c6de838-0afb-456e-bf51-0298be2dbc4c",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Germaine/Larkin/811-584-9252/jyniyu01sfy6ig9zm856b9jqwss2utzycom0q4doyin9kadeg59dmegj1yxq1v6xvqo8fpnpb87q75s2pbl070wtjaun60t2x6kvxuqhrv7b844d7barusnkugx1kz3cwqyw0b1fiei8zs6k97jb0qc8yh2w14ilis38by2p4ldn",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3c6de838-0afb-456e-bf51-0298be2dbc4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.485618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "a791c97b-7fec-4a69-bade-0ecc4d24bad2",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Elden/Fadel/1-189-153-8700+x32346/96m8x4zzou23q7o8iayccrkguhlsx8tawcvfrh2q9tau009763g8ahowti2qctfond2p28c7gpl0sow8hchxn10y0t7bup112s",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Larson\",\n  \"originCountryIso2Alt\" : \"omlbuyh44vyss4m30pidlj0kqbd4xrmpxl6qkm9dhq53fzmmgjh887mseu2x1o8bthcn1ieh5bet1qg7l8rox5zjsuvk00rokob6vz0j6j495vc9\",\n  \"phoneCountryIso2Verified\" : \"fmg8e52wrpjud0qlmj2angsbeca0wjhc43zoyc2jqhqalt2vqozezkk8tx10rxzl766p49kjocinwc8kulcxfs0hvimsyvempeoq6hah111idygurhj29sn0isljmj93ys0keybwj5dnoob3odmirslovnef53kgxz\",\n  \"verified\" : true,\n  \"script\" : \"cuzfw98refxb8nl3unatfutqqz58csse5d81jb5avuw7brp6smz6tpvgdx4tm797bbtxvsd9p9fasi1zx40a8vs1n60vnjdjwo5bw665403fycyk02jnu6i4stz9br9fqtsztamwkouzu4kzhiwijc51oid8r1ui31rcuovst4mavwv\",\n  \"firstName\" : \"Abdul\",\n  \"score\" : 48.42681934526827,\n  \"phoneNumber\" : \"1-843-467-5023\",\n  \"phoneCountryCode\" : 1292208953,\n  \"originCountryIso2\" : \"596c\",\n  \"phoneCountryIso2\" : \"tcfahyd676x8hp3tsepgv96wu28nqv7w66kngnzq62rc1ixqhhx23g5jwby0xrs00bmf7hkxg2rzh1frtin85tt7d3\",\n  \"phoneCountryIso2Alt\" : \"1nohxtjafs9vpzoda6k6doua0yjgw0055sb\",\n  \"countryIso2\" : \"z8smx273w7cie4jkeq0f4h23u72lgyzhcdmqxix3jd7aouvk9dpk3zd4pkpeggw5izqs00fovn0dy0ogvwwgzqne4jh4ui75x4zvzh5fywraphmmcbrf6i683ih937pymylvicj82f1t9d5v9q61eevhirpry1egz7g5cm9zpuljdpx6whob36am2h\",\n  \"id\" : \"u01y\",\n  \"internationalPhoneNumberVerified\" : \"ub2oouub62r7ao7a5muzry2y9\",\n  \"phoneCountryCodeAlt\" : 917091441\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a791c97b-7fec-4a69-bade-0ecc4d24bad2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.485523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "04b2caef-7800-4460-92ca-cc889e0fd72d",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "04b2caef-7800-4460-92ca-cc889e0fd72d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.485076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "6d9641d0-54cb-4cde-be68-a9ab76e3368c",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6d9641d0-54cb-4cde-be68-a9ab76e3368c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.485061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "0d781c14-9193-4234-8c80-7c4ca2404cca",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0d781c14-9193-4234-8c80-7c4ca2404cca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.485046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "4236e98a-26cb-4807-9325-e98381c09b8a",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Pfeffer\",\n    \"originCountryIso2Alt\" : \"w93xykv\",\n    \"phoneCountryIso2Verified\" : \"tkdl665hvqqh\",\n    \"verified\" : false,\n    \"script\" : \"etmltk\",\n    \"firstName\" : \"Emanuel\",\n    \"score\" : 81.39508005236252,\n    \"phoneNumber\" : \"1-035-393-6933\",\n    \"phoneCountryCode\" : 2011290665,\n    \"originCountryIso2\" : \"67edb4dwk4el2e\",\n    \"phoneCountryIso2\" : \"8unfje7htki6qxy5yop2dsogetsa7mt45e0bpmrtkun24cxidlx5grlj2zrqwgklfng9nzifiys1ytjg34votheqqa4u17b4maklgjecmkqs2md6da3z8u0vb1ossafuvms5ykd1o1pb3lhsyc0ncol8g8ns3ahlhrsyfbyw9kd\",\n    \"phoneCountryIso2Alt\" : \"c1l9jv2pucib2cqhr6s1nkq1fwo28h\",\n    \"countryIso2\" : \"mdu4b1qftt48m13r\",\n    \"id\" : \"o6m0\",\n    \"internationalPhoneNumberVerified\" : \"x3lqeodefc36qknil1uhhtgcjpde24d4nr6tvnbnnpqk6521og8xu10fmpxh5qpl0gue493ku1rh7ewgi1z9w0djx5r2y5r493mdxg5sv\",\n    \"phoneCountryCodeAlt\" : 1566611129\n  }, {\n    \"lastName\" : \"O'Hara\",\n    \"originCountryIso2Alt\" : \"w7s2gip1apl9jzaungfemn1xulr1bh6lcol8ixwuw5n0pmadv7sqpic74pq4verf4t7bskc2zikcpdls5sw5nhn6801ab0405\",\n    \"phoneCountryIso2Verified\" : \"qjoj8dvyrex65zydc9omu8xt0irgx8hbf6bl5nvcfroj4w4zh8lrsxsqwdmg75xmykri40qdbndwcle7f4lmgrgqto1qcjebjjonvvkfi\",\n    \"verified\" : true,\n    \"script\" : \"okf3kfj3dutzu1qzhrgmub714zyca2vk2zh3xycx2z082e78\",\n    \"firstName\" : \"Ben\",\n    \"score\" : 86.37124289462463,\n    \"phoneNumber\" : \"924-247-1720\",\n    \"phoneCountryCode\" : 1688717242,\n    \"originCountryIso2\" : \"59pko2xintg6h6rpkz8967rppxns3uc796xa\",\n    \"phoneCountryIso2\" : \"us9o0vcf5hh42ziiccfamieamp5o7twl2zv2ia97a6ev3mw9ozt8mlp2okgjgv61xtjwe4mov3evetghok04796ll10prwkswudfs7rextkth9c063q38qh0dcdffworurkjwthanf8sfqqtxizkce2pjerp77cnvmprub7qydoxzbpsi3og4v9ljt9\",\n    \"phoneCountryIso2Alt\" : \"kurqi8hck67ls4w00g8mdkzh8yd2z65il2tcvcglik69ix122rxrrznnk6ng6jbn8hhyn5te46wucvtcxelfib779cq6p87zft39yjp56k2x0rqjw5y6z7rzl\",\n    \"countryIso2\" : \"m1qflgi0cnwxyazu2he2qnsumui3rr0080kwi3mb8bhntbt2ujo6h7r2his4xww8f4jctmttahprbhd5afpghipuguy7p0h0oyzcjldc0dzftk572710easuxr19u37hslc8jkv6l0ko7ka9q3tt7xyy7p4m9dyc6yrfizy2klmp0t75uqgj\",\n    \"id\" : \"jkk9\",\n    \"internationalPhoneNumberVerified\" : \"m67\",\n    \"phoneCountryCodeAlt\" : 1867425879\n  }, {\n    \"lastName\" : \"Blick\",\n    \"originCountryIso2Alt\" : \"qz6zl37430d34ebd4dle7gyaqs078uu6x068vdatubicmp7ipr2x2tv9q1pih1n11cal42uig3b98hysxqgduzvyew7fd6x7yrk64qs8jyc0rt04wec4cvoi6t80j6otsp2r8ac3o5uo15g9umddb8481nfswsz3v238bxhin0s0lu3saoi30\",\n    \"phoneCountryIso2Verified\" : \"fa8p38nc2pyn3qvlshm6q\",\n    \"verified\" : true,\n    \"script\" : \"l6dxv2wi64btqovjakgdpeyhxgo6z2ofhqq2iefewjinwgsyupdqz6np54y1mmpa1q5wb63r2qlnw96rvc6ycs7gujp7xld1px5flz4o8il9cyxdy8b0lbwqq0916\",\n    \"firstName\" : \"Percy\",\n    \"score\" : 29.911982349223088,\n    \"phoneNumber\" : \"(106) 662-5275 x55842\",\n    \"phoneCountryCode\" : 1366320987,\n    \"originCountryIso2\" : \"2fl6m5zxcapw1400z2if31jiirh4qiw7a9838uk1nczj194ql5yleyyo6rn1y3drkm2h1ryigmtq1bfmzhjmjo5014nwgi7neqz66\",\n    \"phoneCountryIso2\" : \"d6iiflc0dcqpmg0i507v0lr34u4gabhrui096tanubc0i1dqid7xxrs4dh144ltjkhsa9yvs8u13cd1o1njrwh1d5duj2b206i9rilmuf0knvzclyxanb52t12c8w2j1r67ifwb982160z5cm41nop41s1\",\n    \"phoneCountryIso2Alt\" : \"x0xfyq7yf31vu2nsu681c08pmlr4coiz74mo57x\",\n    \"countryIso2\" : \"dw0qta4hzdn25ftmiwu1b0vqbb2u33r1kfl8t5dxyexycbgokguoeak3j9q0cq50ogcy8yat1m79y6hy1n5txvvi3c7z5jyqrfd2xlcwa1g9g9ztgq1ilp9vtz9d88\",\n    \"id\" : \"4ze9\",\n    \"internationalPhoneNumberVerified\" : \"fhvg2krl0nmai9au1m0cem11bosj6n6ke99hv53ucjnd93ejsujq83y9b635isvm72sivzdebctg7j5cnqifi66tdsq2nftqdcori40048ez1jubqtxdeje9gfi6q6zeuhxrjhu4hnqgms39xr2wil56sausf3a8pi\",\n    \"phoneCountryCodeAlt\" : 1268903289\n  }, {\n    \"lastName\" : \"Welch\",\n    \"originCountryIso2Alt\" : \"z4uiuoomaqmjg64ge3fyjzd6znmzhdn565ocwwxfv7ow75vcjnepuppg1v11ta423a9kq3xl7lwoscm3sa7essidojafkpanp7v4soziqzx9z5lgp67n0e4lopkdv49tqk9q2oprsmohffncm4pm62m9t2sr9fnwocnlhl13dyf2sbgmzkgpvcgh3qfd6syvgc6s5qvo\",\n    \"phoneCountryIso2Verified\" : \"mwnpc1dzi4fhq7siljcwxf75lp7zrxvy45kps\",\n    \"verified\" : false,\n    \"script\" : \"ro2s3u22hq7n33tm62cpdx9sf5y15\",\n    \"firstName\" : \"Melany\",\n    \"score\" : 99.01444782429186,\n    \"phoneNumber\" : \"(794) 972-8063\",\n    \"phoneCountryCode\" : 1691409378,\n    \"originCountryIso2\" : \"1xgyfnb2ue3u32\",\n    \"phoneCountryIso2\" : \"j800at9jbfwfi295y9ubay0kcyovleak4f3ng4rqwahoi88tsos9vemd31xc1ww7kwe55f5yywwfqfc93b9nm5mwko2mzyze7yxo7a92fpwp7zr4wysprqqywvr54ezp6aplouii\",\n    \"phoneCountryIso2Alt\" : \"szlsgxf8p89rkc3jxoozci480yzdnoib9rsc2iye7pox1mk6x96ojr1mub45ys2wpr4q4gmd1g11qtnndzpkxf666yxjnvtdwiduqaggcu3oh1whss000450sdedn9taauy3bca72jnnwmfx3od11gjp4wqg\",\n    \"countryIso2\" : \"nxuf1urd65bry6n0pdzbw7pg7g03x1rk\",\n    \"id\" : \"0698\",\n    \"internationalPhoneNumberVerified\" : \"iuw9u3qqvmkzuqwhea0ctqdrqz3pxtaja80y2ku5y3poys6bvdtyuejrqxvccn53apr35wb4wj5tun6skh7v1zpb2l9pe30grpszgcjsw7mwrh15riut52jcfjqe7qg423pgmzwghjzv4x60xf6q6yglnmktejs3ltl5sx\",\n    \"phoneCountryCodeAlt\" : 1954852533\n  }, {\n    \"lastName\" : \"Luettgen\",\n    \"originCountryIso2Alt\" : \"q33lrdbkp1toksxqfaj4cat5423zvxmv1aepmdtvf6ezaaatv2z4xjnum5gqusyxfw5ty9\",\n    \"phoneCountryIso2Verified\" : \"86u1cng91h0hi4zdaxki6c308chc3xhrr4qufh5ekrrjoaot36r7btyfr9837rm26k84p6r8w0s8n4inru9bjqbquvkjvjj9fyjj3i4wu1ofvuacujyqkots96djgnexuq0gl3xqr02\",\n    \"verified\" : true,\n    \"script\" : \"0xxa9r5gvpahbcdh99mgasso85bxlq10nfq9p37ffor65v966t4i8q00rttsmp3cfnxr3br\",\n    \"firstName\" : \"Tesha\",\n    \"score\" : 74.03499444827226,\n    \"phoneNumber\" : \"121.257.1613\",\n    \"phoneCountryCode\" : 175997175,\n    \"originCountryIso2\" : \"dyr9lzgoq7v6frqovo6p2rolno66fotz4knvl3caq1busfnsfszigt3hi8ll96hpyzpd281g64vq4hjact5teqryc7enj0eqwdkq9m8165b66wpof1shjlv1cp\",\n    \"phoneCountryIso2\" : \"b2q9rtmmp9qwpkmhx3l78rmy1ubwh0alb0tpt18wl97wzxuiz3xzs19xnr17m9yd0z9aeabcofjy5jxy2mvkl10wjozwl8iag7vm1ajf6858yhvpsgp0bnwfkydsm\",\n    \"phoneCountryIso2Alt\" : \"a8ukmcq3k2pzzv5tfjk55prpxm0991nw265hotvpsm37pclq1z3l5rfo8uaguq6ok9ulh9ie6861rhwmnu6m2bijcrkthp2tf1jlb67sk5srwoy9t042kg9qclmdmbvz9vr996ehdcchp36sruhuio0qej1f85kqxejsxiacdme5xvet\",\n    \"countryIso2\" : \"9d4kpgw4x5e6fzjujbh6bfyuuf9nvnblclojb1hke3p0bs8gb9k7z9gltlou5nqtktej28poc9xhl32r2b4fdqcbrdxirbocvgh9phhl3g88s9orrwdrazhrwg0q04cbiiyxpvll3rs6cfo5xhs36gwtoh6blzf\",\n    \"id\" : \"1ryx\",\n    \"internationalPhoneNumberVerified\" : \"1k8gbnws89rjx8jxui8voh0lxcrrkgovytcj54p9z5e0niqnw620vglh0wjyws\",\n    \"phoneCountryCodeAlt\" : 1638163395\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4236e98a-26cb-4807-9325-e98381c09b8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.485018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "4b01abb3-8aa6-4a8a-b663-96f1a0db1ac6",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Julio/King/704-829-5145+x26248",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4b01abb3-8aa6-4a8a-b663-96f1a0db1ac6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.483671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "6719958a-9d8f-43a4-a915-b085431b8ba5",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Jared/Kub/714.157.0777+x2277",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6719958a-9d8f-43a4-a915-b085431b8ba5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.483593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "095b873e-b99c-4dce-aadb-6b9c486803d6",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Candance/Sanford/%28257%29+347-7692",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Bergstrom\",\n  \"originCountryIso2Alt\" : \"x5tcvscfyyeov\",\n  \"phoneCountryIso2Verified\" : \"pj9j57fjt7nzkj3buvdpx7ghferp3bfcypgy2hspfisluuo7fsd870tyggzh5ti75fuyrueiwcgzqk6a1utbszhwag1hf5pgy7e9d71e83kw7w\",\n  \"verified\" : true,\n  \"script\" : \"ib56jqtrknm7r5wxdc2yc\",\n  \"firstName\" : \"Vicente\",\n  \"score\" : 12.651450406382592,\n  \"phoneNumber\" : \"449.422.9136 x01674\",\n  \"phoneCountryCode\" : 1211444848,\n  \"originCountryIso2\" : \"9eix48tnlw3twgko2424tj391wz02c7c8tdz5dsbr50fk9kfm7w71oyldmll60cafr5nav1kha88a1b1pijqk89ks3o36gy1ew67zfzflbfdtfl5ih8j18sr2d3s68goawxxmbgfrzwuenhnp6ewie0xkw7jet47\",\n  \"phoneCountryIso2\" : \"7ksmzxjh12il96rsxxfu8jsa3ec9kmsbvjtj2tp2o1y4qos1qhgnew1x6ya1y5nsm8m2zlupf3cuqq4vhlzc7vv9r74m4zue51c7ybhavsmzcowb9y869mct3i88oaz6kzd1nlvi49tauejfoc2y337p5mzypraeqo62f9vrt6h9oseivebb10ptvsp2wzu180z48h\",\n  \"phoneCountryIso2Alt\" : \"cbq53q6ymrqhb7e5r59706r5mytyef54zkg0eb9rmks3ceuset49nq3fb63jy5b9uo1tfzjz54r4pl4rqtmmna8svokdoazuoprsypbkqwrwh8ucc25r20tj5r486s096i1szbukrwkejfrmj720ij61io6nu5q28x2v\",\n  \"countryIso2\" : \"xgbwrnvtb3zl6h57sqr13m65fdshbg6jl7x4a77y9717mchm7yn2bvcyz7r9qqqdx98kgnbysciy69ul532w0rbb73tvkm9tty422ff1pxwsbj0w5uzvrk86umsusa2snrxi6fa0kzoiztabcuojzgmapfj429pdp8b6ibc2gl64cd0am0o7rae3wrd77fvk4kqw\",\n  \"id\" : \"a960\",\n  \"internationalPhoneNumberVerified\" : \"3pckz9tgbp838pggf328ed7dyxusrz5u7pqu3prlxnfrq20a46e9rje3adc2rsbvf8e\",\n  \"phoneCountryCodeAlt\" : 254657511\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "095b873e-b99c-4dce-aadb-6b9c486803d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.483501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "a885580c-6a1a-49dc-8285-359d1b5733cb",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a885580c-6a1a-49dc-8285-359d1b5733cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.48297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "fa89beae-5358-4337-8676-c9a92ee7796a",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fa89beae-5358-4337-8676-c9a92ee7796a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.482955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "4733efa6-893e-4a5d-a4d4-694b73a1f873",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4733efa6-893e-4a5d-a4d4-694b73a1f873",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.482938Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "35af5a08-6ff2-4404-81ed-83a2ec6a278a",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 9.46556925798493,\n    \"firstLastName\" : {\n      \"firstName\" : \"Gavin\",\n      \"lastName\" : \"Price\",\n      \"id\" : \"r760\",\n      \"script\" : \"2grc9kq5yy6w7t1sj2yqgm0pioohzp0buta38xlyqaao12ip40ow03ro9ynrcel6tdooc3y8p8wdxsboo74ot23v9wtl8mjqd4\"\n    },\n    \"name\" : \"Tegan Kassulke I\",\n    \"id\" : \"6n80\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"db58m9izrcr40jry4skmarzym85ju9nu06gg1g9iix8cz6m2qrohnvxh2xz39i7f9my4k3eu97juvfw4jjqnuygjck7sk7tgk9l97yvgyxnedgnppqucjffl2j38hr0lhnsrv9ykfts44\",\n    \"nameParserType\" : \"FNxLN1\"\n  }, {\n    \"score\" : 15.689355262501204,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ricky\",\n      \"lastName\" : \"Gibson\",\n      \"id\" : \"4hkv\",\n      \"script\" : \"oabvt796q9prba8pavur3anbm6f5gm805pvcglsgp9i6xir2sm20ro0exelyr8utxy459sf92iqre7cbt3pnmur35ozsrqw0tv108xkyqyz\"\n    },\n    \"name\" : \"Kieth Abernathy III\",\n    \"id\" : \"o33v\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"p7gnrz2uaa7eriq6\",\n    \"nameParserType\" : \"LN1FN2\"\n  }, {\n    \"score\" : 22.718174260408063,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jerold\",\n      \"lastName\" : \"Schamberger\",\n      \"id\" : \"c6db\",\n      \"script\" : \"sf4afet59hthwxpnihvta0dt4pzywnvrwj48tzrqfhlz4plkagm9a2u7e3n00ijf5yz2cbg22h1ir55dpx2qq5gpkjwc8bdsfycrp1gw8vwyu7a8ffutxbo4fafgxctjq8g5olf815rq2xm35siaoiknm8frfvbrzvm60z5vn3isiiz\"\n    },\n    \"name\" : \"Renna Wiegand\",\n    \"id\" : \"w3mf\",\n    \"nameParserTypeAlt\" : \"FN2LN1\",\n    \"script\" : \"latyx9g8y38lolb27ex5m0zk0g5iu2jvdzprmqagsb0gc7fd058g7u0m6nav955psij84zsou3bsblcvzyu1gunb2dn8h0ybrt3yp0iy47gmxhyqr4c1ts9u09tcapahhw4pvo\",\n    \"nameParserType\" : \"FNxLN1\"\n  }, {\n    \"score\" : 55.956467160191,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ryan\",\n      \"lastName\" : \"Haley\",\n      \"id\" : \"04m9\",\n      \"script\" : \"818oyzhwxggro3tfb3ny7tcmquedia6j0vrpzsr0npzhd45kbmv3qw1n6aknelruj1ggk2kg68bcm7wys59rh2voleoovp95w5g2jy5qu6d465fqsexxd46fgykorqqfcu11h\"\n    },\n    \"name\" : \"Dr. Barrie Hammes\",\n    \"id\" : \"ioz0\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"k2waqghzqcm\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 87.86444308510217,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ollie\",\n      \"lastName\" : \"Swift\",\n      \"id\" : \"5l37\",\n      \"script\" : \"w6d0w09fdblounxyr3cb2o27w20wclsb9i7sqgom4zyq3cj19q9dx6dw3hu9147ti5fdv1sqsyehkipi97kazyy8dadtvuumq80blxjzk6hjggxpnws91flj4ecgx2somdz98d3lwiuyusm2x3njcb61fo5r1ap1ler\"\n    },\n    \"name\" : \"Damien Berge\",\n    \"id\" : \"cj81\",\n    \"nameParserTypeAlt\" : \"LNxFN1\",\n    \"script\" : \"coto32h4dgm578aawo3upmiva9q7hkj7499zqs3ewa4ct9\",\n    \"nameParserType\" : \"LN2FN1\"\n  }, {\n    \"score\" : 50.80181810908726,\n    \"firstLastName\" : {\n      \"firstName\" : \"Hector\",\n      \"lastName\" : \"Feil\",\n      \"id\" : \"e3hw\",\n      \"script\" : \"dj9z3a0dk9fuir0ofkqt2qlru7pw81a81a9jbogybsvyp8zqgvh3syg104poq2gkb1nb9tn2vsfwv11ao3s7jqs0o02z90fyug17d9dcyhmaktn2zpko1957vqtp97hu2esjby6dfu1lcke6lwlrbtvaffxmu7xawgmrqyeo\"\n    },\n    \"name\" : \"Mrs. Ellis Nikolaus\",\n    \"id\" : \"79so\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"mujn4hh3bb19iq5duvuo1kakkktq2fvj223oke61tmuumkzggdl5e94z2to41x37ay1gfcdxhirhdfa2khwzv5slsd4uimr43z3gt7w76rgf1rojqzs4i8w0dpms1vsagkentv9f4idf4ipnzww8pd7exgmn2whah9l210b9kmdmoiv2e\",\n    \"nameParserType\" : \"LNxFNx\"\n  }, {\n    \"score\" : 92.22512646015502,\n    \"firstLastName\" : {\n      \"firstName\" : \"Berry\",\n      \"lastName\" : \"Considine\",\n      \"id\" : \"m5x3\",\n      \"script\" : \"twb2wzvqnd21kgbjvcar8hflmhlweo866y6cxkd9xlmspc5qxf5u8mj3ku3s0d37by195o8z803ddcantai5g1zxp\"\n    },\n    \"name\" : \"Leah Medhurst\",\n    \"id\" : \"fiyb\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"hqzezdm28upo0dexwvv8de53lq6r77spvrhm33bm16hq02hbr0yj1uhbrozelh92k8x9pzrr5rc7dq\",\n    \"nameParserType\" : \"FN1LNx\"\n  }, {\n    \"score\" : 55.095761550778434,\n    \"firstLastName\" : {\n      \"firstName\" : \"Stevie\",\n      \"lastName\" : \"DuBuque\",\n      \"id\" : \"63c9\",\n      \"script\" : \"75x209ofc6rflfdn6nu2g54rfhvlgl3esveiewpluf3dewdjj4mndlfnyasicmtz63vasfndqalr8uf67s5z6oxc4lvuh2zxcd8y8vxknhv2gielx5\"\n    },\n    \"name\" : \"Robert Stracke\",\n    \"id\" : \"c6e6\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"1pa52spis558vhq4ny23xu3ngj9p0nwuwa70fmbrejsp99vjog56dqov3j2nbuv7zod4roc60eg79oebmrj3bis7\",\n    \"nameParserType\" : \"FNxLN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35af5a08-6ff2-4404-81ed-83a2ec6a278a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.482895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "a025bbd6-650c-46d8-9ec9-9b9796a1f337",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a025bbd6-650c-46d8-9ec9-9b9796a1f337",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.48045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "d8029508-92ec-41a5-ba6b-059f16253bd8",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d8029508-92ec-41a5-ba6b-059f16253bd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.480432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "caf4988c-f368-47a1-91cf-ac72c26b0935",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "caf4988c-f368-47a1-91cf-ac72c26b0935",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.480413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "a25b0576-0a1e-4671-a729-9ca22fff9c94",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 70.16117781996073,\n    \"firstLastName\" : {\n      \"firstName\" : \"Warren\",\n      \"lastName\" : \"Waelchi\",\n      \"id\" : \"4y64\",\n      \"script\" : \"fegy2l0t1swz73lgzh8opeflnax19pk7ffntwy2cw2qkc123bc0h1muxy8gvhta5flbdbe6utmqn3odis5i0rbnidu2kbbs6i\"\n    },\n    \"name\" : \"Mao Kuhn\",\n    \"id\" : \"9c84\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"7ut71hiqu5j5n9wuo3wf9492v3hl4gypty28h5o0ma3grr92xrrf84skze92x3hwyu5kcq5sftzw5xyesuccedoyueus8xt9bkcrc16546nvnrvs07dr9sacfd2d758toi924gaw6pfure8\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 8.802161135153863,\n    \"firstLastName\" : {\n      \"firstName\" : \"Helena\",\n      \"lastName\" : \"Wolff\",\n      \"id\" : \"bmbv\",\n      \"script\" : \"2octdl9ywvxot0qgmpbc52st6g4dleux0meak0a5clxx8uhgt1elo1rhha0rhgle15bmcxlyv2b5b2i4jgj8ttvtsrvu93i2210cbcm3o1tsko7gdjm7gczn8dpvjrobhzd9msquznkjdi70ida\"\n    },\n    \"name\" : \"Clyde Kuhlman Sr.\",\n    \"id\" : \"e12q\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"v73eku44u391wt98079u2yoeay0f7\",\n    \"nameParserType\" : \"LNxFNx\"\n  }, {\n    \"score\" : 70.50245273610084,\n    \"firstLastName\" : {\n      \"firstName\" : \"Claribel\",\n      \"lastName\" : \"Jacobson\",\n      \"id\" : \"75rx\",\n      \"script\" : \"x9uw6vcqz33y5znyaxfet23ygdb7g0qgsth93ip507d8rarvjxfgq063u6ljaq74ob71z881j6bbyg3eaed8dz9vzxxmial3ko9a2ucq0uu7pzo69w36ywjt49bldd7tm36ekra7f\"\n    },\n    \"name\" : \"Elsie Trantow\",\n    \"id\" : \"o6r7\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"4q7ognwobr41x69rawv4fndpwxo03nzwrge8ixo111szdgd8fs1u5twf9kyjf3atz34hd66mpdnkbakqj8fv3g3bxmeqshvc00\",\n    \"nameParserType\" : \"LNxFNx\"\n  }, {\n    \"score\" : 7.612028627538658,\n    \"firstLastName\" : {\n      \"firstName\" : \"Whitney\",\n      \"lastName\" : \"Wolf\",\n      \"id\" : \"72af\",\n      \"script\" : \"s861dm92mswqfz8be97q7lm\"\n    },\n    \"name\" : \"Karyl Bauch\",\n    \"id\" : \"xsmx\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"71ghr6ekcwq6dcs46a5fcea89u1km557x9nijfr2bpss92dv32psisufkbaa6pzz1dar79nuk4nfb1adv7b8umj9lf7kq\",\n    \"nameParserType\" : \"LN2FN1\"\n  }, {\n    \"score\" : 78.99203174460871,\n    \"firstLastName\" : {\n      \"firstName\" : \"Shalonda\",\n      \"lastName\" : \"Auer\",\n      \"id\" : \"jw45\",\n      \"script\" : \"9kxnxusxowi0svdjsvv2aueit5pjj041ba9tuzj1rl8jxuis9kig6l5ayyw1yq83t70juv7akjayf22bdaenjw4h7c2fzt5c4q691j9wqrvv9uwbwo71t1yqwd1vbny8\"\n    },\n    \"name\" : \"Miss Pedro Bartell\",\n    \"id\" : \"6dtj\",\n    \"nameParserTypeAlt\" : \"FN2LN1\",\n    \"script\" : \"es4083pdx6v9fsimhmtcne5\",\n    \"nameParserType\" : \"LN1FN2\"\n  }, {\n    \"score\" : 68.81795196953162,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ariane\",\n      \"lastName\" : \"Dicki\",\n      \"id\" : \"yajp\",\n      \"script\" : \"jwuxzgysju3g84p65iebne3p9vs21vdeum3etbxuvi7rln15rn9l3g8vh0ux838r8mou8h8sgwt5nr3ue3qfk93j3lpsivr09nuw28lfct9fp88kna2a4vmeobrwyqy4mml7gbqqm9un52ajke8gx3bzvdo5mox\"\n    },\n    \"name\" : \"Sterling Streich\",\n    \"id\" : \"t7me\",\n    \"nameParserTypeAlt\" : \"FNxLN2\",\n    \"script\" : \"finky8d0gqdn7chgqgds3izjheg52886d6qwk78opbrib26xw0xclbhaaxes5cyqu7lg4s25e82hxnvjr8kdf5gg99sh3r7u4nx7s7s5bcnchh49jgi\",\n    \"nameParserType\" : \"LN1FN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a25b0576-0a1e-4671-a729-9ca22fff9c94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.480365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "06ef20a5-58fc-4823-a339-a8c24781c2a8",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/fv06uv6jj5ov8gindpvtg/5rgdr8h9kkoevc6zss6e6glzmsctio758aqse2b7esbei142twxkywsozs8bvam5g1uaz9goa5uqoxasiigs2o0x87evgpnrqvtwuvkj474v9xfa12ntx8hvxsdeuqy6093yfvz0916dxzt7o4o1w5glyoa4kjr",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "06ef20a5-58fc-4823-a339-a8c24781c2a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.47618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "12d70764-b5b4-4d99-b11a-a0a5d152b09a",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/8p5aygguwisrm88h7eo2w5zrbz8fpwnoqhigfve52xhd6kpqydeefo/71v2vdqdnnubfs6sonsmhezdn4b00qcpujqddfponjowdmni8ja3i2gomn20",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "12d70764-b5b4-4d99-b11a-a0a5d152b09a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.476142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "c3234514-14ea-4a6c-9fee-884d74e774ce",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/dzz2y2l5mmfyhgvkwx7ncefrsiwm1ltnxinmklqspxbb5ovz5djrfxk7cc5g9avzc1vn1p0xa6ci5jtgl4zzgj833x1ajziv40xqhlkwho34hwwcu5kut0wee9ypu0cc5cxfg30d98rxtirbvg9tffvykcxg3xnuqsxxu9/n9l991okb7w6c4tqjr5a48eohsw354t3e5a3ta7lhl2m452fy232g",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 52.61172737360569,\n  \"firstLastName\" : {\n    \"firstName\" : \"Joselyn\",\n    \"lastName\" : \"Walsh\",\n    \"id\" : \"j1ii\",\n    \"script\" : \"5mu33m0qqvei3n6cjj5z9565olzkcq3854l7k948ypptsn6bl9ckgnrty9qy0g23evhl3jr3s4dv4frsyq5pb6qg0h0q9\"\n  },\n  \"name\" : \"Ernie Howe\",\n  \"id\" : \"384d\",\n  \"nameParserTypeAlt\" : \"FN1LN1\",\n  \"script\" : \"8zhyoth5obw0u5i9vgk26kcmjk1y6ikyolv06h4oayvxcmc081fb57up5xhty41sf7nkzzygeesalqpx1wlz9e\",\n  \"nameParserType\" : \"LN2FN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3234514-14ea-4a6c-9fee-884d74e774ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.476092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "65ce3239-a195-44a8-8e09-e41b739e9943",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/mx9ulyec3v6hc10se6t08qzqjratwlc3ydb3l4htopvfs5uat95aue83943jtbnh8gxt20l00j1jl6w6bmyqa1m8747assw51vrdmft4yl4d08ahqx2e9ilw7zblspf5z25xonf5c91q93bj9x3gyu408c5",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "65ce3239-a195-44a8-8e09-e41b739e9943",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.475701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "fa3572e6-b94b-4fea-9320-0632e24b6f4f",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/belcgewqwn",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fa3572e6-b94b-4fea-9320-0632e24b6f4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.475671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "816958dc-5203-434a-9dc0-f4d4f040a458",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/f5d1cn9vnkyig805zjl81pghv67p90shgua2qzmp74cct3sbxf5yt1kt38kqkh7ef1q3191uktpmspb9mw9bde1wzh22s4k1318k2t4x0n1deeeqejq5k3zwg561hof5c80dwouvu59936669ofevryxknrf35kjaf0q5gnjv44u",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 66.08966506061196,\n  \"firstLastName\" : {\n    \"firstName\" : \"Leif\",\n    \"lastName\" : \"Daugherty\",\n    \"id\" : \"28sh\",\n    \"script\" : \"lu6xz3gpadrbuif2avr27f0l4a9z1db9cg76u1r3\"\n  },\n  \"name\" : \"Dillon Sauer II\",\n  \"id\" : \"06vv\",\n  \"nameParserTypeAlt\" : \"FN2LNx\",\n  \"script\" : \"rla05my1l8a8hlhz6aahkc0ufa1zr9941cjb5v7vwompnnri3v\",\n  \"nameParserType\" : \"FN2LNx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "816958dc-5203-434a-9dc0-f4d4f040a458",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.47563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "a4bdf9e9-7d51-4a0d-88f5-a1e3a41e1c6b",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a4bdf9e9-7d51-4a0d-88f5-a1e3a41e1c6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.475254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "07ad2c55-a860-4f4d-9acd-3a27400d13ca",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "07ad2c55-a860-4f4d-9acd-3a27400d13ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.475238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "a3868f0c-48fc-41cd-bba1-064d2e5fe93b",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a3868f0c-48fc-41cd-bba1-064d2e5fe93b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.475222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "92f55ab9-64ef-479d-a00d-5c0f3452457f",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 20.44074410942196,\n    \"firstLastName\" : {\n      \"firstName\" : \"Reva\",\n      \"lastName\" : \"Orn\",\n      \"id\" : \"6og2\",\n      \"script\" : \"yhdr1wbz97zfmzyl2wkdp5gmlyeznwsigcmjnaoro1jwmslwmdlwea7yt5w4g9vedzoozougjr9uybhd1j6fq6pa\"\n    },\n    \"name\" : \"Virgina Weber\",\n    \"id\" : \"w1f4\",\n    \"nameParserTypeAlt\" : \"FNxLN2\",\n    \"script\" : \"7eth9x0ycvu9ge5alal90prrpguhxqsaxzimyfpdkvjext9s5z738t94t89btfwe7mpibj\",\n    \"nameParserType\" : \"LN1FN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92f55ab9-64ef-479d-a00d-5c0f3452457f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.475197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "db986afc-c565-49ec-a513-29c8d46c1081",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Shan+Johns",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "db986afc-c565-49ec-a513-29c8d46c1081",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.474854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "61c99087-cd7d-4254-8a0e-e509d4240f5c",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Lana+Schultz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "61c99087-cd7d-4254-8a0e-e509d4240f5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.474799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "cf4dbf1a-721b-4717-a396-c03bf981fec9",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Pearline+Streich+V",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 18.089863222267645,\n  \"firstLastName\" : {\n    \"firstName\" : \"Broderick\",\n    \"lastName\" : \"Stehr\",\n    \"id\" : \"3s97\",\n    \"script\" : \"xogm3rmjy98isycz2cpopg30jtj164up32fvdgetv8dusjhmu7dh73nht5n50q3qn2\"\n  },\n  \"name\" : \"Abdul Mayert\",\n  \"id\" : \"3pu3\",\n  \"nameParserTypeAlt\" : \"FN1LNx\",\n  \"script\" : \"8zoj8mxnbjdipe6sjnibuhl6kgcgcsxdklrfkssgpk60oxfb6qj4t28t9eaicmp6c6oy30o1h7y5r8a3fhh51redd0xz2qwuv44nda8ea5tixe7vqjnclsizvjxmt3vkqf584f5qrafbamxobhdop1x78vqy\",\n  \"nameParserType\" : \"FNxLNx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf4dbf1a-721b-4717-a396-c03bf981fec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.474728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "1b7f8ea5-a526-4b4d-828f-a66f3c98ac5a",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1b7f8ea5-a526-4b4d-828f-a66f3c98ac5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.474296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "577e09cb-203a-4656-a5f7-e36d4fc6b4b4",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "577e09cb-203a-4656-a5f7-e36d4fc6b4b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.474279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "20df3047-ee71-4f93-bfe3-bd52bc549be3",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "20df3047-ee71-4f93-bfe3-bd52bc549be3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.474262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "b5005369-3305-4e9d-b1d7-55d0f541223c",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 70.33634928094075,\n    \"firstLastName\" : {\n      \"firstName\" : \"Gabriel\",\n      \"lastName\" : \"Hirthe\",\n      \"id\" : \"y42n\",\n      \"script\" : \"yvpq4vgoz221yjsp9fz1fvmeebogr7r4c8p8rctoyouynvdrrnge6zkyzgngjuzzfckrbttupxzy4exprgnqh5abqnmccnoc9jklqsimhakkjucxc9wpozwc8jbqrjzdb8fsbzfxa6jp5qrpvj314fjtpp00q4v4wom1qw5mfyylfua00ywk8nn\"\n    },\n    \"name\" : \"Tomi Carroll\",\n    \"id\" : \"lz4s\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"pnd90in9ua8tw8l5btxdupzxdzxpaj0uo7iy8u\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 4.901427520853819,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ferdinand\",\n      \"lastName\" : \"Marvin\",\n      \"id\" : \"bg30\",\n      \"script\" : \"jx9zwyh4kb3roo58vixs9psgwrvqftsqaovv36sgfoumgg7abzefb43ag85sjv2qbgxzlygi5adrgg6xeahp51fapoyh4e79msqkx\"\n    },\n    \"name\" : \"Boris Frami\",\n    \"id\" : \"co6u\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"b9lbf09byyvrxk99r7tro1m7gwkwea5ho1suovwrzay9mhg48bgfwyhkbp5fcvaexvmzzj3i29t3rylwejmw7zaeinuh81rptuykoaft2qr9fez8ebhxkt6qgtdo600fyz1s0ronj3gvfmft8jwg878jhsl21s0wii5f2314oy4pmsly4mzkdp\",\n    \"nameParserType\" : \"LNxFN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5005369-3305-4e9d-b1d7-55d0f541223c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.474228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "5bb0bfee-dd94-4da5-a634-eb579d03d473",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Clayton+Jacobs+Jr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5bb0bfee-dd94-4da5-a634-eb579d03d473",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.473586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "526b1dc4-923f-400a-8990-c8d92b5c97aa",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Korey+Dicki",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "526b1dc4-923f-400a-8990-c8d92b5c97aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.473525Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "e4447c3b-7b5d-4b73-b0e3-eb10f44b1d14",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Emmitt+Kling+Jr.",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 21.70069848686702,\n  \"firstLastName\" : {\n    \"firstName\" : \"Michale\",\n    \"lastName\" : \"Bogisich\",\n    \"id\" : \"a43c\",\n    \"script\" : \"ql410i8d0xhjkh5al1vm4wwcd9or1dtdulzguu9s\"\n  },\n  \"name\" : \"Carmen Huels\",\n  \"id\" : \"gg7u\",\n  \"nameParserTypeAlt\" : \"LN2FN1\",\n  \"script\" : \"73laf4a0xg4gyfcc3sgtv51xxiv1ynxpn0gub7yrzyw7oa1in4lvciaf41nwgzvd34eetzmg3bozsrqct\",\n  \"nameParserType\" : \"LNxFN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4447c3b-7b5d-4b73-b0e3-eb10f44b1d14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.473449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "630fc509-b663-41b5-9560-cfc34b84efe2",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "630fc509-b663-41b5-9560-cfc34b84efe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.473003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "7ffd2bd2-9e30-4f5a-a34b-40caeafa4160",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7ffd2bd2-9e30-4f5a-a34b-40caeafa4160",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.472987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "6457ac4a-fdf0-4c71-8bbe-b6b6883fdde3",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6457ac4a-fdf0-4c71-8bbe-b6b6883fdde3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.472971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "6f722ecf-4ce0-45e9-8933-a83738e29e06",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"lastName\" : \"O'Kon\",\n    \"probabilityCalibrated\" : -0.58297766353211,\n    \"script\" : \"3pszc5rjki7e46bhuji2y1d9get\",\n    \"regionOrigin\" : \"vrz05f94cybqf0kpvlvw3hrkt3dqtr3oud\",\n    \"topRegionOrigin\" : \"e24pns2l8mca5sztn8vxf1zo3e8\",\n    \"firstName\" : \"Brett\",\n    \"score\" : 45.983476544126255,\n    \"subRegionOrigin\" : \"kkmgakmkcnoqw5gzmzmbcgll8vyvmypnzs7xadpwfy8sewen\",\n    \"probabilityAltCalibrated\" : 0.08606064343081776,\n    \"countriesOriginTop\" : [ \"aywegsi0at54tci702ws82v4sjxeolwvowj14r1jvxkfkuw7fspp5prtupj94encwwqceyr8z3ii7qxq\" ],\n    \"countryOrigin\" : \"44s2bwtdxltgml82bws6bdfg0ex4essymsd094s9k3krc4t9n6v7p1kiasfr5x44ytk445x19auc8od0e3jarvmtrr6fgoh9xrxlxdspcgkvfodcssau0ikjkt7jbac2ezkn3pydwsg1kdsh832sobzitj073nlxowlbyce93e3d\",\n    \"id\" : \"85h9\",\n    \"countryOriginAlt\" : \"x4k2fharxcvw3d2kv1nqmheyj64dhj5d74dpx6dkz39odoz1ii3jl266\"\n  }, {\n    \"lastName\" : \"Anderson\",\n    \"probabilityCalibrated\" : 0.9522652249384536,\n    \"script\" : \"eeiaq8e0okapfsqplg4qlj60d33uiadbte0ienwec4tbvx4mmo13h4bh0a5fvnfnyf9ok3xdnkjs6rylvhnoyk5us3dpiv3uo0ul9cxk1b2p5vtmwmqqz6dmthn1in6h5etkvhptxp45vo949ja05nrkqonajzfl7if\",\n    \"regionOrigin\" : \"3mmt6a1tiog80qh7tuel6p\",\n    \"topRegionOrigin\" : \"166dscccexvtukf5x4esop9azeeb05h002x6pldyquggv76u019pl5lypewy5jmsw6ogwds56qh9gl1tqyyc44x1tuegvig70c0uihud834yxugd9hpuq3iqlmv6baxi4us0fzj9vvtph9nw6cf1a28qpa4zdybsoy1m2jzm0c\",\n    \"firstName\" : \"Moses\",\n    \"score\" : 40.550524726165946,\n    \"subRegionOrigin\" : \"b7bwqqzzrhf9nlu8zaif85lyq10elomb6o4x3prunf6l90q8bqwgq7azxqejsn0iodrn8vo3nd3l13r77wltky5pmyhuut6n4w9c2piil\",\n    \"probabilityAltCalibrated\" : 0.667322574246292,\n    \"countriesOriginTop\" : [ \"6y5xb96kqn6rvahjk48nqv1ze2jbpo9ake4o61l5gid9u81140vj422ijzuwvbfxjrgqr59fknyrw9rm36wjpfygwoxf6n5hr7smp36ry9kssaj91aw0ds56ogv05i8otx4l18wz68r\", \"c6fmi1s2cvtswnv33vnv1eno8xwnqw4zk6h8jt4akhllt9gij55l36pl5ztiz00qt6gouvmto03koh8lffa3oanwkzp2mlwf\", \"100n74oautakf9f4k47ezzn9y5xmut5rlze74khk3prz57zqzfyag9nsnnvw0gpyqmk2tpa5haptcokq9rrbj7l2njgrpw88akt9j5mj43218h2vp4ibgd9tu2veu1eh2957mm2psgs4a7dd331fk\", \"9zhrjo1we7nt5stlzeygmup4e6pqpti29c1wse0rl1xwesho6ytng0xdv86fm6izob1uxafmf31g9fikhunwhvvgkiqb4tw3h1yb3pgm53i857e1duoq97a8jq19l6seghg3u\" ],\n    \"countryOrigin\" : \"ho6fqcnz8pca857sks0bsxd4djjvw0wds5cg3ljyodcgkigmyflsbmb32cih1tekumvai7jqhx7fjhzm5ryz7xz56ghfn92mgzf43c8ntykc8g68i1vhai1m1vdslsek52piuucx6v3qljfwkv0hqcly1b94dqpb6hltnn\",\n    \"id\" : \"b732\",\n    \"countryOriginAlt\" : \"zz0xyshnhywai45midzj64ueiwgug993cq9rgkclp97nbnyze8ms9pjpnvyzxuf2npbxnkel0xetk2qf6cfhv9qzssgxgh6gpk01ac2uadvijfilufup8jxkf1t64t83cbiip9hpz31gsy6e5r3kzvld7w9narrnleorcueiip4\"\n  }, {\n    \"lastName\" : \"Langworth\",\n    \"probabilityCalibrated\" : -0.11166809514513765,\n    \"script\" : \"rssr9tswxoxlw65ab4uqjpmvnladtzl4lu9e538ii24k0apj9thpc0mqidk6mj2ldzfyh5e3jt3ph0ho9y03seguyzocrby31yki4c8roi58izt5hofr0sivde5tdr387v3o4w0vxb6gnkcirqrqz811dewhb3225v8hqpfdikr6xc7zewrouuh90svufyirqhgcgv0\",\n    \"regionOrigin\" : \"1fjywexoqb9jvc7orik3o4mq6ba68c2pc6h3xz7klq1ntw0l54jkcjsgtkc12lzrq9a6mbt4df1ecb605brmnz30ncss3j3bxu2m8w6pazebt01jvwoyhv364fyow6qrvfuwjf7dg57inl5kbfb7diqqpgjh99fmiw4kazkqn6gdvg5q\",\n    \"topRegionOrigin\" : \"tpakqab74712f4q92iovu2orix0n7vi1pklff5d7ju36yc3mjujp2ply59owj4gluug3vjdtj8eypcvu73nw7qmkrinydcnzlarllf410x2b6sito85yrzfn8xx5jlf2x1xghbpc5izonwhsaqyo\",\n    \"firstName\" : \"Marcie\",\n    \"score\" : 56.48655959579517,\n    \"subRegionOrigin\" : \"51mnpsilfnvv9smjzpmzdoy95b5dr1dv934t9ww94ie8xe\",\n    \"probabilityAltCalibrated\" : -0.3597212869153086,\n    \"countriesOriginTop\" : [ \"86vy7wsh15iw5tl4e0riiovmiitzvelacg6fkj6nr3csd6d3fzzszvwtebn81cqnuqxm5v3ojgjjepsnbqet9utpv4ofuely1akn2tl8ya2mokayyo5o59ieo2wjumovlrecq56v73jty5wel9z37f402vy\", \"0eznm9arwjk2ljv4vkmb40exhohy0b15f9b253mii2qqu2ddvi4au2d7dl2d0gqkifse4roj0iq4ss6r1u2jjpn179eb4wk0tu2dsirrrzsbrq542xyjidxxhsr8g5i3ol56v84jcp8gvwfdgtttw6y5t6wh6ctsysdfb1yh40yal5bm3orx7v2uzzops\", \"2rkq5qylz7dqayhmtjnsdwnfb1ua2g6jnmog1iktezn2da386f1h3egpysrwbsz1lri11ggaeus3d71dhs0aw3xi8d1gc4xdzwesvumgc1cjgzxne91xnzibtnrmd0tcdyj3t1rg6o6cch9x2vno2bmbijuedc1\", \"4kh02mfavrk51frxzvzve9b2qphbqd20xi\" ],\n    \"countryOrigin\" : \"i4y9nnw5mzsv4yqmldn3avtrfbv1vt7eu63dhwkpikyjqa0ngkv6nevg1qeos\",\n    \"id\" : \"p691\",\n    \"countryOriginAlt\" : \"ahue8lfqr5g0dxhzb6t9pv5qmm4bruil3etx00mu14pnntrejn5m67h2k8ebu2iwzsc5v28lzuq5px2uzrbmrcn4u1brgztm1r6d87q3gdn8zi22baq1di7\"\n  }, {\n    \"lastName\" : \"Armstrong\",\n    \"probabilityCalibrated\" : 0.34707658742381975,\n    \"script\" : \"ht84upyrl2izypdmfpmnc83pvvql1ccqls96imnf1nmb9wleel27qsgi7nqlvn5ppra4ftil50712q7l80qli81rhripfpq\",\n    \"regionOrigin\" : \"4lblcip4jgs6k2o23rxtvf8jfa08kees57l040lt5mjuas6t9i5j52t5c2m8aejy2pzjx3rpjse7dfrtxsa3zt2p8lfilxt1dbhgxacdq8two072xndf86zbme6v1knsct691hiqo9x9dr1g3t95t5fe6bwipjviebe5zlytni53pev2uoy\",\n    \"topRegionOrigin\" : \"3setqqn7z1573tzdfk4ptr3hz3lv66vaedz8jz8pss3yivpslunkmodlbemtnn66spm8g6cnt3z8opytvpqro\",\n    \"firstName\" : \"Angel\",\n    \"score\" : 89.81922158639959,\n    \"subRegionOrigin\" : \"q8heye448ehwhkp\",\n    \"probabilityAltCalibrated\" : -0.8672924580237003,\n    \"countriesOriginTop\" : [ \"ed3rz0jk185b4nzhddgpz9vxosmdd6vivxjk1iwz3vukkfu9ggyf8um2kyfvkivh2osfzi2ndxokpr7jzrb4o3zrw401wfmw2hj4994yctxjfqdwhywg992og8m84pvw3rylqvp2h14zdlvoaxgwvfrso1s7al091ws0f\", \"v3pmjeuk8t0tjxaqqo4kwqpm4eddmnhxo5fk84bz0yklm20ji5w6r6s0lv\", \"ihhf83u340zkrwwx9lud0h1wrcc5ppsemjsmxam2sscuhc3n2ltk38yusooiyyf5dqb2khjck1k6qjcifg9ajc8y7g6q5uhfl2eburka3tqscjtlcivzs5wfc3fn2fn4oaxwixdn5tsopv7\", \"zra4ijko40xhsz6bq8mdnrbumpumi9g70jk6coi6rtp22e6cwcza7zvat677p0tev7krydl81flo7j5acmfd422szelnzkd9roa1\", \"wx5810fc06yvqfns8ahvn3lf12ebw2bevpucu5m82cx5e9cliyx1jbkwgwp2x0qxdqh7ug5vog6qy7jjamsf8rpzjgabcrdjwiqt42ibckrw183u\", \"hpetl6z5fkzhv6osazd5shlvrj4fg7a5z4bym5cwnpvf8r9l8rle8riqoxjfj1njnjgv2r9z7lv3oj85fm\" ],\n    \"countryOrigin\" : \"nrzbbn0x1egflodb99d6uh4p\",\n    \"id\" : \"k907\",\n    \"countryOriginAlt\" : \"i9zt4gkaen2janjilvfympgftv4aag12lmr0i5mnfmo9lnfj0s0svynmjvzhlqioae69rb0tmghm84zf3kyqcegg110dxg6ikgkpiyl4xarfurkcmc9di9ulxvjfmd54t46n3utgyj5ngc5sdpu4gbqt97ke1ym2bimcb\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f722ecf-4ce0-45e9-8933-a83738e29e06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.472916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY origin from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified origined names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameOriginedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "55ae5f3b-be24-4239-b5a6-b36336bbf357",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 403",
    "request" : {
      "urlPath" : "/api2/json/origin/Antony/Willms",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "55ae5f3b-be24-4239-b5a6-b36336bbf357",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.471842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "739f010d-9f1e-4151-9dc4-f9695d3661f0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 401",
    "request" : {
      "urlPath" : "/api2/json/origin/Josefine/Effertz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "739f010d-9f1e-4151-9dc4-f9695d3661f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.471782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "2196e978-3029-465c-a141-1fddfe5a2269",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/origin/Sang/Lebsack",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Mertz\",\n  \"probabilityCalibrated\" : -0.8891023951382324,\n  \"script\" : \"vcy29o1rvchh4clce8nv5wv959uj2kroowgcl6of7z48h74ew3hpv1laajj85vo5ynvmvgyv55diu64d6klo6colm394648zouqfw631cd4vzi1k6i5bn6tt2ui19hygegr2do4rl5x5lg2rsqrr\",\n  \"regionOrigin\" : \"e7ra066yvx8bjzua7gg0b5hy6nxny6wgqndp09basko80kryowsc\",\n  \"topRegionOrigin\" : \"qa82v6kn6jupwtnoo8r5p2ypqohjnszyjmrybc6gn4takkyq3orr\",\n  \"firstName\" : \"Wayne\",\n  \"score\" : 96.48154615608871,\n  \"subRegionOrigin\" : \"wu9vuz025irwx6qs6g6f9vnai3398njv889unuwe37fiemxyi\",\n  \"probabilityAltCalibrated\" : 0.23243056002411877,\n  \"countriesOriginTop\" : [ \"zsco5s1a1a7n2xxx2wc112q8y76yksllhai26etbo0x\" ],\n  \"countryOrigin\" : \"y66br1u8lequfbl7xj22jzqajyjt4elkaq4uhflu1kyrhe4cdkhdakrh878070f9uloy6lh8cmgb27vh4imjhx7ii\",\n  \"id\" : \"fyiz\",\n  \"countryOriginAlt\" : \"z9qqyghbakrvr7mj3w631omx08j3gnyemlte1galtasmugow2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2196e978-3029-465c-a141-1fddfe5a2269",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.471706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country of Origin from a personal name.",
            "properties" : {
              "countriesOriginTop" : {
                "description" : "List countries of Origin (top 10)",
                "items" : {
                  "description" : "List countries of Origin (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "countryOrigin" : {
                "description" : "Most likely country of Origin",
                "type" : "string"
              },
              "countryOriginAlt" : {
                "description" : "Second best alternative : country of Origin",
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "regionOrigin" : {
                "description" : "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegionOrigin" : {
                "description" : "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "topRegionOrigin" : {
                "description" : "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameOriginedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "6a00bdde-3ece-479f-b830-2f6671204d0a",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6a00bdde-3ece-479f-b830-2f6671204d0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.471283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "f64ae630-6420-4dcf-9d4b-a13a81d785b3",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f64ae630-6420-4dcf-9d4b-a13a81d785b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.471267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "299e94a5-51b7-49a2-bdcf-c06cf9fe1ec0",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "299e94a5-51b7-49a2-bdcf-c06cf9fe1ec0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.471251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "ad4ddc25-3e96-419b-a4d3-d487a798eec9",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 16.710645057159134,\n    \"commonTypeAlt\" : \"jb3g5jirs25vddibboc6fik\",\n    \"name\" : \"Missy Hermiston\",\n    \"id\" : \"0wvg\",\n    \"script\" : \"lxzfz8o1ph3eqekwijashu44cktdv6dmwb319nwpgufaorzdg81sgzeqo2lgtnrp34c\",\n    \"commonType\" : \"4l2np667sthwa3tfpipb809y33r0dns77o64uit2ijh5d0hwncmgkub6se500skxii1ybk0w48pweneb73wcjxfopotkfrnp0vfa0vifc72zwe8j2oz8kv1k4sr66il57csbixstceisk3ncumk80p4qze\"\n  }, {\n    \"score\" : 61.51199690988163,\n    \"commonTypeAlt\" : \"t8p4kgvmn6zy6o0i9skks9cr1v\",\n    \"name\" : \"Ronny Anderson\",\n    \"id\" : \"048w\",\n    \"script\" : \"ecl9hdmwc0dy5f4bs6wepwep4h5axetmtfzed9j1qw3opa99nigc2pw9wbc2t4eghxihfdz5t47v9bukpnr2rdfyzj3830wg2ee38xyh65qhdpznm6xom2s932ervwy77n7jtdpf93u7qv529bu8l62xm8otxb5ch\",\n    \"commonType\" : \"vpbhbikyzswi1ui7sscuebhhyt63gg3cuulf3j1yiqa0lvcrfq95py95pgrupv6vnpez6ftqe46pccl2hor3g9613ximnjfwdzb92vjvyh216g6ln3wej1yp374nq5xhekkxtdj7n1vc7lybg2yojanhurl935wozqhbqiml5a9q8tl\"\n  }, {\n    \"score\" : 80.67818625729217,\n    \"commonTypeAlt\" : \"kp6qnkf72mpu993lbceldx670gtx84jl1hd1unx61eynijx60sqrmxf4b3kg068i7ug396kaaeo9tz294t6dh4vcaozpj0ipa714\",\n    \"name\" : \"Carmine Kuphal Sr.\",\n    \"id\" : \"axil\",\n    \"script\" : \"mn4a39ky9squk0lkt05eeaxkwr7wylo6rh7fpt4qhr3y7cu4xtg8g4n2kbgc2hcbkp3oc6tcy5sbgedjdmk9xond34oz152pisx1kmyttufyjlldyaibhj69edetlskdhooqxs7k59u1rliv23q4psnp9cf7gbtrkiugzdxmi8um\",\n    \"commonType\" : \"f0kaneawsgmai1i9nxjeart27ulrcve37pw158ea0kmq8y7tp56p07zk7rn0ovvni6cyx46mgf4d8alba5hdqftwocqilva5sdqaygddb7kofz3ip3jhwpuzbgtar38llw5fdir37gm1gzuf9oo\"\n  }, {\n    \"score\" : 31.3718538504272,\n    \"commonTypeAlt\" : \"xvw7bpoz5ffnf36axb86046libfg5nhu3sjyi1kzyewyis9vwlo96tqeq4kmh3ft04hdb9t7n9dhc4r1gatokqydcvrfduimcleramluoy79sgcn50g6p46axaoqqyj6f670mkmq1g9ojz868pwgdyehk8088onxmgc94elpfav4omfe7r20qi2at8yn\",\n    \"name\" : \"Dr. Rutha Kulas\",\n    \"id\" : \"f61q\",\n    \"script\" : \"y3nb1wb4zbaaeg6a4fqsbcvffpzpq79bf\",\n    \"commonType\" : \"asl18kplhih22ugdp9vcmk1b8ennolyi5zwyj2drab60ezzy30fd33yc1qikbej80\"\n  }, {\n    \"score\" : 2.3892283494962196,\n    \"commonTypeAlt\" : \"p57nolsg4bsoavcuzozyof2sdqinav6f616owkz372luxprb8puu2eh3bjewxeihcsijkh7bstgexqyqgul8t5mit5dxfa\",\n    \"name\" : \"Ms. Lenora Jacobs\",\n    \"id\" : \"193p\",\n    \"script\" : \"m6vkep9a6krs82e863s5a\",\n    \"commonType\" : \"awdtecp6fgvryei\"\n  }, {\n    \"score\" : 30.132441143043863,\n    \"commonTypeAlt\" : \"5teeprgbqfstpwjkbgc7klyr0q5z60t2105ek006hvyb16t8wlf41ss5i66ajc5i4bo00s688964txkwvib8vngn7w116uj7fwjzn03ogvqrv7hnjcuw4fjib8jy5e9tl72d0ya2chjtd6mixyafu43911wrac29j1p\",\n    \"name\" : \"Theresa Will\",\n    \"id\" : \"235v\",\n    \"script\" : \"17hfewngkgx25v3d4xshesrs96ghe3f9nl0huh92x7p9yuijruru83sz63muc5qo3d68rgliuglueor8rie91bc0fpac2c6bneksdl2aublk0maajiyaqqntznjddl6athohpcotxxl9ky8fglzvxuxx4yze\",\n    \"commonType\" : \"rpdi041t9og185mvugksyqssivgyzqzv9bz1zge954s5nv3cbzpnkb73x3qdp7u5pps61yu2g9qw6do8w8ln\"\n  }, {\n    \"score\" : 5.735045421949348,\n    \"commonTypeAlt\" : \"9fv4n1dds3h54eex4f4a4dt5vx7yxgbcdwfoyn\",\n    \"name\" : \"Roberto Grimes\",\n    \"id\" : \"6o1y\",\n    \"script\" : \"pwy7j4u9dfqr1aoakjys2vjpn6w\",\n    \"commonType\" : \"utp3h1twzx45\"\n  }, {\n    \"score\" : 78.06983635097296,\n    \"commonTypeAlt\" : \"sbqenlenxahy5yjc4skfn3jyfm7l7k3v6fpico8c7cyg39lzq3al2a4flybokmhxh63iqopzfvrffffl048p5p6h0x9llmtoqujmfj9s5i3kzpim\",\n    \"name\" : \"Leonard Buckridge IV\",\n    \"id\" : \"ks62\",\n    \"script\" : \"tjovq1l0ppux688zs5vw9pc6f7q98xphq0uyle7jnncu77g2x3qt93lt7qrtwq7h8fvicnto\",\n    \"commonType\" : \"jo1ygwkv650zentcgz8dgtnjiyi86fmuezlmx35na3pnthqhrtvz8g97izfdh7phyjsxd2cdjwfzubv4n3vjefwrtg9p8dyllga3uzf0kec77aht1cod2w8yysiql9haf2zw71elmy9b2tylp0i79r9lh1g6usindwm\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad4ddc25-3e96-419b-a4d3-d487a798eec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.471216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "2ec871be-5cb2-4002-8d54-cbd306c7644d",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/wcks4ktolvn08lgrrk6za3f05qftb9s80qok/eg9djy989gsjdmt923vy6rqoigy6b7sth1rrd84405v1cje58xnr0ijtx2einamrid7ok18zyhhighihus5w8njrqaj1jw4qtkyznq197harlbzmg4eib9ix4wmsrkawnuf1jfftn6za0679i1k89oo1goeh7mknrbft8v65qefp190lcjaz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2ec871be-5cb2-4002-8d54-cbd306c7644d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.469914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "bc3e7fa8-5827-4b15-b0cd-f1fc83a698b3",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/gbf4v9riup3munif4fe4dgz6xunysqsm6oq/x63h1qb6472svxg6updmfbycs9hmp69tngw0l37o2ecb7x7v7q9nxr06m800p1w5kqw1pa2ap71aokyo0v7i4yt9hgmkgdfw9eh5d3jnfrccuur1vrr4xty40t25x1c0k797slmekdz5xfgunugf400d7ppkyfef9poowh35fhie0e4v9gzr9z6nz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bc3e7fa8-5827-4b15-b0cd-f1fc83a698b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.469875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "f5995945-f73b-4d8d-9275-349cafb57877",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/dzaltnguk1b2sga1kjhxefrx20r2dehsx1ee0agzph46ud7xwb4eij4b0r8ssqwvuqhwaftjgpbkzst5on621qpaelpy0q7thyicd2jbetnfoym2bcm6tc17lsqpiv3aapowexme7h/bv6i443zt7pgg2fcek6wd42tpun6lnrm98tovshorvfvcsi08had3qux5vog2m61o5rw4yfoap1kn3risfzmdz0dw6zd5q2wzu8mtwrle0mom4ysvot2hn6xyi8ki9lh6wfxofbsr8betjrwwsz1lq78gger",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 84.8695256529035,\n  \"commonTypeAlt\" : \"9uz25y1cikpl5m3w302jh34ihzkip0397j8wghv97sgu7zx2xxgz8mee261cfjw5lu8rvdg4s8jdtentk7uy84k3objdz67vmz2viq8vu3t2c64w49wz9prd9tqv61jo23uf30v1v1a580\",\n  \"name\" : \"Valencia Goyette\",\n  \"id\" : \"027c\",\n  \"script\" : \"fvfyiose0cejn3oofrv46kzo8kz8tg4mqdotbpvy6zrk4uad5yletxrsc43mb6e31rvc9eub52s7cmho1zu4s7p3mvs8yg3\",\n  \"commonType\" : \"s4k5p2szcinjfuifd6p4mtjmyt7x8vlyk6hfog8u9wodokpbnzdcf8c68lzw26fgqa7hxlnh51bbgu8hv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5995945-f73b-4d8d-9275-349cafb57877",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.469826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "7cfc881d-3e91-4a3c-bab0-3285fe353259",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7cfc881d-3e91-4a3c-bab0-3285fe353259",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.469576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "dc55d1a3-ca9d-422b-9f16-8721d1754a39",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dc55d1a3-ca9d-422b-9f16-8721d1754a39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.469561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "8046dfa8-9761-4516-a304-14b8367d0404",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8046dfa8-9761-4516-a304-14b8367d0404",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.469544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "70578f9a-aa98-41bd-8694-be1bd906e944",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 19.400976618938703,\n    \"commonTypeAlt\" : \"7llh7pjomzhpg85xfggndjqc1cctbwrpl0al99cntkfnblhv95tjgtu1mox3tgd94lgqlegvprfzdydbii5pffjp24h49l8xvqa6do6k299v3wgg85ruwfgr1vt0mrs1ngtzzwglxcz511z\",\n    \"name\" : \"Neil Purdy\",\n    \"id\" : \"7zgc\",\n    \"script\" : \"i0hh6acgilpw0t6xgj7awjbxcgvvipd9vppzsc5rge0f7uedxze3x7lbtoe93ngwpx0xpig6l6ujj3t190nzrfygahsjq4r43objqzd9vaczjkegb1sokdnjmlx8njzabp5pi3v2fazhzd2w94zw5to5\",\n    \"commonType\" : \"tagnyzbiaotwfgd1m8ihnabyya3etwou4kpyh63q2989af7gj7lhtwdb3qwacwcxndiccfnf6q4mp9mi5jl759xzy5wlxo7w8p7iiucjpn87olbjr13pmqkeopq7wd64pssjzya0hcalkgd3uz0qd3e228wa93x5vzxsnc0v059w8phiu3vvw81e3l4o1l7expmrv0y1\"\n  }, {\n    \"score\" : 36.104019297956945,\n    \"commonTypeAlt\" : \"cu6ouf5v2ltdor9y16njuc6yyey7aquxhmyqgqjnwok4bnytm1qy0bwd9vcl2g4a8rg4ctlx1imcikq8\",\n    \"name\" : \"Jamar Torphy\",\n    \"id\" : \"641b\",\n    \"script\" : \"h2j2n51o6w5is7bbirc1u298f5nppak5jlv6rje6z3xnj1sfcc5bxk87dlg7rn2dufiohark8t\",\n    \"commonType\" : \"8c3u0mdpdr0pn2rom3yt8q1wvfjc6zinlaiix55kqm9mjvahczs30d03evzp3akvqtjgeo0ydwtxuscetu514gkpej03cfzzo9qvdux4mb5eqypct1va72k9xfb5xfkdy3fvl3pecxvu1lnfsaxrt196c0iojqmi2yndq\"\n  }, {\n    \"score\" : 66.34039820435225,\n    \"commonTypeAlt\" : \"ucckmw3znst39tmaxa54bskh1pc67f2lvl9k36xvt6dizhytqv5vt6cajfg1xoaexfg7stzznawtv804u7xseneih9yv7dii0emmaci73b6mvwzhep1axyy4oj1rg21la1t9411g6uvbxnjoy2wqnxpssstbbno\",\n    \"name\" : \"Ross Dare\",\n    \"id\" : \"x9ut\",\n    \"script\" : \"mnhjbgdul47qq8y4a1ssidd7eyd452tqvxmyr48j8az5z4f1eaxvnlv28x9pf9758mbiyhvyb084nremczcgt54m1vocrd4orhgk4gnv61u4ctmuiywa94v1n6yhmtpl5xx2ewv24zswphc817nttf1weom9jmhqyba0zfs3e6o034c21s0afe6covaz2\",\n    \"commonType\" : \"aqxkrfdnfnpxsmk5k8vehet00002rbmr9o2rz6bikyybl4t3ffr4a14dc010gtjjlwyybmexcjtqnofi9w7ca3b4tcvhg7rmn0bkaz91qu7ud5macjrqv0wp63ml7qmh64vuadttnmce61jnyyexvk7oglur\"\n  }, {\n    \"score\" : 8.109208912541321,\n    \"commonTypeAlt\" : \"0wiqjm4stuqf0grmtf3bmj7t7ddfjoh6cvetm4e74c4aumcvizy33f91kunhmddlh9hvgjw81p3kvslz0sqjbhg8rozt2ahd49rzwiqq1m5ajlncpofsczdly8hujfeh17sliaftohw7b7a7zwqloeb2h\",\n    \"name\" : \"Miss Domingo Zieme\",\n    \"id\" : \"24l1\",\n    \"script\" : \"ned7vb3ql5vp9s3u8t7tl9nocttbcymqussuo3kqgapasbub0cb7f0fglzbgh8zvzl7c3tk72ud4t6ghogeunnw2k217m0t7nk72m\",\n    \"commonType\" : \"21xy0iwxcc5lg00\"\n  }, {\n    \"score\" : 61.52770862101986,\n    \"commonTypeAlt\" : \"d74ea2p2knqsii1uljxzh696g8k4z1b0wzvglr4av0jlstk2f0vfpasz2pfh7t77uuz3czxh62fur09ezsh2o64l7x1963zltyc\",\n    \"name\" : \"Donald Runolfsdottir\",\n    \"id\" : \"021o\",\n    \"script\" : \"6fqzb8777h5k3y1mv14bxe77w5yxuip99ndb15ey8dr1wxaqfgnrhq2uy1jpfy9iuo0gq86phqqg9fv7ec7efmv6xpop5o4b12naxb6n04l2milcaw1kl0erusrxhwbhfk\",\n    \"commonType\" : \"0k0y4kpspd8n4fd9xq2wv3p146xvzuycveq715bh59faiqroclojwkkp70p0nuwxn81tyrnowbqvp\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70578f9a-aa98-41bd-8694-be1bd906e944",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.46951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "acaeed7f-e4ca-4949-89aa-779129720a4d",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameType/gtpd",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "acaeed7f-e4ca-4949-89aa-779129720a4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.468648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "7c542d20-20d5-4fa6-aa1b-dca19c8f4be3",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameType/0d2n71nfd6xwuhq0282elez687xypnuxf0n5rb",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7c542d20-20d5-4fa6-aa1b-dca19c8f4be3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.46862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "1430080f-6ce1-434c-b131-768621a21f1f",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameType/meohq73ep3b0qmqrg2qdolrpwixavnmmt4029imjt6aj2qoe2m5kqdysir04c3xsn229eatahuqxxba0p8j0cfvcdrivprrn0lhelcoros83y3oy8hwo55xsen",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 51.39705698195671,\n  \"commonTypeAlt\" : \"n6tmjwnpvqh\",\n  \"name\" : \"Ms. Tiffaney Brakus\",\n  \"id\" : \"j45d\",\n  \"script\" : \"3ttorxs2ucxrnenjaweoyvr59k9l1yd0uofe2eo2km4jq11fq0j4rcg9924pb8p7i60eqlgn8a45zythd9usv1vj972y7q8o\",\n  \"commonType\" : \"xv78nvuc39d7m81adzrwhp23iabi23ovxe30qy5o6j7mlddb2jmgrnhyih5ikxsl426e9l543f5a0uuo0j683ymjfz93sage1ughmewqt4wk68cq5d8j7rs9xx8jaxeih32hunjht7og098obyj8vxhslat0um3rywsxw3bqhkkyqn8jp18ttndlyox0z6nwmzluea7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1430080f-6ce1-434c-b131-768621a21f1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.468581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "9156521b-78de-4eca-8bc0-fbbcb1d15a16",
    "name" : "Activate/deactivate learning from a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/learnable/ydm3qt53am8mqqkijtjkxfctby54z7pdv5gngdse5phsckilpkfmglzi6prp72w2s43okeru9l10w2wyx0nbu98vfjqthgfc0fo/true/i17l4mqs4qrx4hu2b7zxcvwfzkcryfjmjc3uk7",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9156521b-78de-4eca-8bc0-fbbcb1d15a16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.468327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "dba40c68-6995-4c36-b87d-730da802608d",
    "name" : "Activate/deactivate learning from a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/learnable/jnzhw3fx53g6aavfo5n2a9vi23kjbyyo6xa2ih3dx930uvly5wlcm7ynaocabivtu30dccvo/false/al3vb53uljuy1h0u735mfsuf3mqdkkiz8x584dgticum6r0qh08qb23ss5ptuk5x90morm2gzaqyt7v6xacw678rm7jrokh6tvvvr4n301envg5s2zei5exbfk3wv3qpwfnqa1pitdf",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"hwkew3p7m8agxhqp5axzjy2s6lwfyzbb6zem5youabk0xd1yejbqxg8yg2cjyu4ewyhqu4dvanf9p7dcxevco2v6wzvqndfp1z4yovy4c6zrh0t421eskj6uocmgu4gjz1cjuramfzh3wbgiizwbgk38fp8yjdve9owoi1sxnpsfz1ny78jclgcwy7pn99swjok\",\n  \"partner\" : false,\n  \"corporate\" : true,\n  \"anonymized\" : false,\n  \"learnable\" : true,\n  \"admin\" : false,\n  \"disabled\" : false,\n  \"userId\" : \"f3xk\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dba40c68-6995-4c36-b87d-730da802608d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.468276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "5dd9e0de-b964-4ecb-bfa0-e32e1b9d88fa",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/n43bmo14w12u1hidjd3hx2m3kwsy247b7bw2cvahsb8i6bpmk4pl9ythah8urrkvadoo13c1sljsb3e6yhxy0u7bhczxae14kmsxasaa9jbx1qc98r3hrqn5n/dporu2dpvb1eoteymj64r8o0v8tbkuxuyu4jkgl/Miss+Cletus+Langosh",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5dd9e0de-b964-4ecb-bfa0-e32e1b9d88fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.46804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "413b0056-c3a5-4255-83da-09ac853219d1",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/7xjwzld3da8hc657ob8n8wn8hklrs8lffsrk6uhcaig2jeihem0hq56pl0mkjf2euld0pfcciajh4o726ip1m8h2qhoept8zkwdunxpoy1ydgkgnbeqww6x1a38vevsa5y0v95pv2kbsi9hh9vrmrvm5g35zp1avljhmuhg5nikwwk1j4clinb0hgcjje7m6ge/2sbneyi9tgxncwqqf9cwfq26t5e41ie5oax9wfwgpm75hgqlu/Florrie+Wunsch",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "413b0056-c3a5-4255-83da-09ac853219d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.46796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "ddfd3e0b-e64d-4298-b69e-d1a2fb327a82",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/bctr4sgeli9402ot5kcp3kqh2iydgw98sqogqeqsqgd0p6nx2y9e7wlzbn48cvm6ihemys3/zusl4nu9yx9xgznzfez89103tto7bgbuv8f9aaknp8dv2ltmj1thyujv354n8hzead8oap1azlg7canzr6663quyf/Werner+Dare",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedbackCredits\" : 8261671813300744830\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddfd3e0b-e64d-4298-b69e-d1a2fb327a82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.467874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop",
          "schema" : {
            "properties" : {
              "feedbackCredits" : {
                "description" : "Number of units recredited as per feedback loop successful classification",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FeedbackLoopOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "b7a60c78-d7e2-4266-abbf-b53a73215ca3",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b7a60c78-d7e2-4266-abbf-b53a73215ca3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.467748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "52df8d4a-0e77-45aa-893f-4053e5500f0f",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "52df8d4a-0e77-45aa-893f-4053e5500f0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.467733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "32fd22b7-e478-48bc-9c07-db9f64c190f9",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "32fd22b7-e478-48bc-9c07-db9f64c190f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.467717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "ab67fe1d-5da2-44ba-89b6-2078c312170c",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.6259884933866512E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"5w7n\",\n    \"script\" : \"r82f1dtugx30k8rphcmb8vi3s7mdg56uir7rhxdewqd6kk6hhz4y06tdv\"\n  }, {\n    \"score\" : 1.4992143280015337E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"lb6t\",\n    \"script\" : \"guj101cog0mavw3zx4bhux0lo6k6879802zr4jdr777228w47s7f4j4efq5cdqsbaawxkrys6qqamfslyphublkvvhl7sytqghtf4w5adh16xh9o3zum3qew15s16n2ik05fy7vr3wxfmtz2v6ow1ze1wk7et8fv2p2r47udpn2o64bbtjwgs4526pokn6bl8miv9h\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab67fe1d-5da2-44ba-89b6-2078c312170c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.46769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "4695853d-ccb7-4ffd-b753-111715945674",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/6x7mg6rm3938kdi1hqicgfkotpru8evlyuw0xb0wiw5g4u4b3iei6ddhbxk05h9v4e8adntl9vzwnxf3qnwhdzorgvgnwpjuypdcccjc0ia4fm/6e5cmc5/Esteban+Metz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4695853d-ccb7-4ffd-b753-111715945674",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.46742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "0741600c-f774-420b-9449-d418fda76c53",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/ts0s1b7duex09rsls7ml3l7fo78g542ww2q7i8e7lo6awokq9yul3y5iaksab8z5t3q12feic/lynnm2wk8wykn5fyho4apbwkgfxwvp4cv75jdvw66f6uw7vzgcis2pvrzgdyii3s3cmv2vqnnzyezceut6n3w7ev23v3ew4pzcdvg57f5zyuo5qtydttxqmvlxivegzrxcfvd5f/Logan+Feil",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0741600c-f774-420b-9449-d418fda76c53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.467344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "d163912e-4998-4f60-8e23-d367467058e2",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/aqo7p5cwjuprf57eyod7oc7s65lvneb7jx6569mjy6au02ihahcivwb8rkkrlh6cuil2wzbap1wabcdkefli9dnrxgi3j6r7kx92f4c5/z3ntfruwyy5y810kknsk7kawcx5jv7fwe6v0s45vw3jfjzftm5ag2/Ethan+Dicki",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.2692017539993032E308,\n  \"matchStatus\" : \"Match\",\n  \"id\" : \"q2xr\",\n  \"script\" : \"73vbeha7v6kvr55d5ick3oumr9f4vwscqacwwjq80txudsr3m5vnao1mkg52ol1k5pnmw9yz2h0jpnjfs9ydtx0cg5z6i4k8vfbkirzb4keph0wor65c7wwu2ghidurkl1l725k7fs38gtq0cwrjahyr6xhec\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d163912e-4998-4f60-8e23-d367467058e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.467246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "c7137cbe-c02b-4c53-ab82-8013e5b766e4",
    "name" : "Romanize japanese names, based on the name in KANJI - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c7137cbe-c02b-4c53-ab82-8013e5b766e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.466989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "36322e92-9737-411c-b49f-e4906a89045a",
    "name" : "Romanize japanese names, based on the name in KANJI - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "36322e92-9737-411c-b49f-e4906a89045a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.466973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "f66dbd45-873e-4c46-8dcd-d5570a852507",
    "name" : "Romanize japanese names, based on the name in KANJI - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f66dbd45-873e-4c46-8dcd-d5570a852507",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.466956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "f9af60c2-7320-4255-ad10-f3d510bb1fdd",
    "name" : "Romanize japanese names, based on the name in KANJI (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Corie\",\n    \"lastName\" : \"McKenzie\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.173683881712643E307,\n      \"candidateName\" : \"2022-11-27T09:28:08.466378Z\",\n      \"probability\" : 1.522391477641153E308,\n      \"predScoreFamilyName\" : 4.792593052460696E307\n    }, {\n      \"predScoreGivenName\" : 3.087814445219784E307,\n      \"candidateName\" : \"2022-06-07T10:58:08.466428Z\",\n      \"probability\" : 1.206540958116086E308,\n      \"predScoreFamilyName\" : 6.107065773492357E307\n    }, {\n      \"predScoreGivenName\" : 1.4869539758987134E308,\n      \"candidateName\" : \"2022-07-15T09:41:08.466478Z\",\n      \"probability\" : 6.498727497064058E307,\n      \"predScoreFamilyName\" : 1.5350712532034669E308\n    } ],\n    \"orderOption\" : \"vkrw5wonowj7079mxgxhy7502z8lntxj1krui42x4djxd5kd72zcnnxa5bv0xc5rt5ksbtitrhfmu9j9mgvkubymwf142jnmncwfso4lom4rosoc3pc9mu2bkzie6nuzmgz1x98wbman32xf99nl5ir1o0au5c2qq1eyu42y98w7r3l31oszxt00dp8zjxvjw\",\n    \"id\" : \"64dm\",\n    \"script\" : \"2n8inacrv9rey24sokithfss3g36tjxjd03x6lqp4tsac6j97esz4gutf2o9irp8ibvg2ek44eimg2xvsnw7yr4t9hpvygrzqsgiia5igdmf2p4qolasaqoj065c7bz29bx3sth07cgsqh79hznzee2is7p3zw205l3l670u9yjlwsuajln4ke40\"\n  }, {\n    \"firstName\" : \"Erasmo\",\n    \"lastName\" : \"Wyman\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.196012098148356E307,\n      \"candidateName\" : \"2022-07-08T11:19:08.466696Z\",\n      \"probability\" : 1.224543564409864E308,\n      \"predScoreFamilyName\" : 1.478946202544291E308\n    }, {\n      \"predScoreGivenName\" : 1.1064184570112064E307,\n      \"candidateName\" : \"2022-07-30T11:08:08.466743Z\",\n      \"probability\" : 5.299315178984225E307,\n      \"predScoreFamilyName\" : 5.499330887732964E307\n    } ],\n    \"orderOption\" : \"wxi\",\n    \"id\" : \"352u\",\n    \"script\" : \"8z94wext69l8rv5ba12g428l9xy4y4270zcb98iicbar8jglsskhd7k3hf3ocuo12havvltezvfwb3rxq9md\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9af60c2-7320-4255-ad10-f3d510bb1fdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.466925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "67dbb1f2-628b-45e7-954a-62ef94aa074b",
    "name" : "Romanize japanese name, based on the name in Kanji. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/niam073e64ixlf8mgzqcef6434f1jvzsieplox6px96y55jye922nk6u5t/ledlc531dv3vaam1l6ux0i646fidn5h64k",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "67dbb1f2-628b-45e7-954a-62ef94aa074b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.46627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "6db1804c-b623-4bf2-9186-919a7574cdac",
    "name" : "Romanize japanese name, based on the name in Kanji. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/scndct7dkvxm8c1e6peq6exqlvmwmxziu0tuwlppch0r97obaj6f6jog897o6znfe8ssk42t3wtg2wi67ilwfgb0xemh16w0t8lp7e1228hvfxnq5od1c33fz2xf1inleg4kodacp9wlw2cwbrczr5bw3pozcz2d6ot/2dkphhir4263onc4imtcd1dbb436wo0j02m4i297h31l3cvsimitvtmcz5sg7zyzcwr0smyqo9q4d6l1hgryvvh8q67mbsei70dx07i61ibj458rr2saz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6db1804c-b623-4bf2-9186-919a7574cdac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.46623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "1efed3fd-3aa1-4204-8b87-53912299a638",
    "name" : "Romanize japanese name, based on the name in Kanji. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/tyvq6egnmtg3j0f1rwzogkrajwjr93rl5elyaghgfu9iygmv/lzkqz0lewt3fugd2fdx9d875rak4tmzys91jvoc25gou1oqyjzdgelhjv46t0rfsm3hppn4rjqcu05s012s66ze4assyncd6woarke315hyw5mo7ofnaaw1foyc2n3bgqhcumpm47wr8p8w5sseoqum6kuwi1e3bmtcxp3icinz5cna1ub9h6atget0xruf",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Olympia\",\n  \"lastName\" : \"Bernier\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 7.242074885773287E307,\n    \"candidateName\" : \"2022-05-24T10:16:08.465958Z\",\n    \"probability\" : 1.2712291324932189E308,\n    \"predScoreFamilyName\" : 1.4469247790687265E308\n  } ],\n  \"orderOption\" : \"8tl4nmfc3tl2r501qy9012mw20jmczw1g91c1j08o06oz49ska66mfsro8pb94toxa856p\",\n  \"id\" : \"9d8l\",\n  \"script\" : \"wqak03qu9ceeze5nlw6dlz2ru\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1efed3fd-3aa1-4204-8b87-53912299a638",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.466176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "4e75f6b4-3e4a-4340-819f-c3d74714872a",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4e75f6b4-3e4a-4340-819f-c3d74714872a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.465843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "bfb5f12e-d7b8-43e9-b5aa-5892413f559a",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bfb5f12e-d7b8-43e9-b5aa-5892413f559a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.465827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "59735329-befc-4d32-b969-3aeaee55a7e7",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "59735329-befc-4d32-b969-3aeaee55a7e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.465809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "30167523-777f-42f7-9098-e5235db5babb",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Cora\",\n    \"lastName\" : \"Klein\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.09258636231661E307,\n      \"candidateName\" : \"2022-11-16T08:31:08.464323Z\",\n      \"probability\" : 1.3965128792674918E308,\n      \"predScoreFamilyName\" : 9.21922956739339E307\n    }, {\n      \"predScoreGivenName\" : 1.3816340368755254E308,\n      \"candidateName\" : \"2022-03-26T10:32:08.464374Z\",\n      \"probability\" : 1.0439575253690018E308,\n      \"predScoreFamilyName\" : 3.5909316781260305E307\n    }, {\n      \"predScoreGivenName\" : 1.282460265139402E308,\n      \"candidateName\" : \"2022-07-04T09:12:08.464421Z\",\n      \"probability\" : 1.3994924328164909E308,\n      \"predScoreFamilyName\" : 5.754547075306334E307\n    }, {\n      \"predScoreGivenName\" : 8.768632793977082E307,\n      \"candidateName\" : \"2022-03-31T09:36:08.46447Z\",\n      \"probability\" : 7.911716548517317E307,\n      \"predScoreFamilyName\" : 1.5212768956457574E308\n    }, {\n      \"predScoreGivenName\" : 1.0868756329171913E308,\n      \"candidateName\" : \"2022-11-07T11:20:08.464517Z\",\n      \"probability\" : 1.6851370760159686E307,\n      \"predScoreFamilyName\" : 1.307916994285943E307\n    }, {\n      \"predScoreGivenName\" : 1.3349640676087235E308,\n      \"candidateName\" : \"2023-02-19T11:02:08.464565Z\",\n      \"probability\" : 1.2364330765886949E308,\n      \"predScoreFamilyName\" : 6.162703188202463E307\n    }, {\n      \"predScoreGivenName\" : 1.7212908317270938E308,\n      \"candidateName\" : \"2022-03-22T09:46:08.464614Z\",\n      \"probability\" : 1.0016395176090524E308,\n      \"predScoreFamilyName\" : 5.381777760807796E307\n    } ],\n    \"orderOption\" : \"kqgfx5nl6aycqqvaopz9i4kybvv5hjk5b4b0rif40vwh8ut350hd6rhsxgrejx9igg\",\n    \"id\" : \"f3r8\",\n    \"script\" : \"21jdfut060to2gmwxsb58p1yrqjjydos8kkmlgo5z6493p3n6o72r8vcjrmbob92sy8tlirk3n0564q4u83k2jv0s66k7jlfy96jst1vyb7w54sq7ghnlfxwl1tz30g0xrs3t9zc7einfqcbz4cu5jceodu3kc5dvj1hth8lk95p5e\"\n  }, {\n    \"firstName\" : \"Domonique\",\n    \"lastName\" : \"Medhurst\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.112883267892922E307,\n      \"candidateName\" : \"2022-04-09T08:30:08.464856Z\",\n      \"probability\" : 1.2403654475733678E308,\n      \"predScoreFamilyName\" : 2.1557289529325454E307\n    }, {\n      \"predScoreGivenName\" : 1.4793567618169528E308,\n      \"candidateName\" : \"2022-11-06T11:32:08.464905Z\",\n      \"probability\" : 4.4544877442742135E307,\n      \"predScoreFamilyName\" : 2.7673745887450014E307\n    }, {\n      \"predScoreGivenName\" : 1.509183457425481E308,\n      \"candidateName\" : \"2023-01-24T11:04:08.464953Z\",\n      \"probability\" : 4.457994266011755E307,\n      \"predScoreFamilyName\" : 1.5051215267085774E308\n    }, {\n      \"predScoreGivenName\" : 1.6505844740655303E308,\n      \"candidateName\" : \"2022-09-07T12:09:08.465001Z\",\n      \"probability\" : 2.6436365112165997E307,\n      \"predScoreFamilyName\" : 9.719658954910449E307\n    }, {\n      \"predScoreGivenName\" : 4.4552635118847675E307,\n      \"candidateName\" : \"2022-08-21T08:38:08.465051Z\",\n      \"probability\" : 9.244279240556363E306,\n      \"predScoreFamilyName\" : 5.454123612498241E307\n    }, {\n      \"predScoreGivenName\" : 1.0195385485034255E308,\n      \"candidateName\" : \"2022-09-11T10:48:08.4651Z\",\n      \"probability\" : 1.6649192097904598E308,\n      \"predScoreFamilyName\" : 1.0191228784149386E308\n    }, {\n      \"predScoreGivenName\" : 8.389152390292382E307,\n      \"candidateName\" : \"2022-06-19T08:30:08.465148Z\",\n      \"probability\" : 1.5063851515139736E308,\n      \"predScoreFamilyName\" : 3.1353133047609546E307\n    } ],\n    \"orderOption\" : \"3ymvxurxq5ixpcfrj3lah5j7llgdohshutz9as8zl44n2kyzdbcbtbkeoo4wao3ox4odzkqjfwzduvrurqowtmcg0yj0sw78iz2tyg9z2hfy4u2knvg24nj0w4xjzvy0jzbzj6t9z5dydxnzfmlxf0sswhnnfox0636jljdg3dsj40x0d\",\n    \"id\" : \"0ap7\",\n    \"script\" : \"g2w4s87n7nnfi0w5u6fn9zlixq8n7d04vseyo6j8ao33c1zu6sm6n2xnlbwp6gmt97zsye1ujvsde9m9slj8f8v7sg74vnn64f9\"\n  }, {\n    \"firstName\" : \"Ginger\",\n    \"lastName\" : \"Pagac\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0160549764137963E308,\n      \"candidateName\" : \"2022-08-04T11:06:08.465372Z\",\n      \"probability\" : 8.628330744525019E307,\n      \"predScoreFamilyName\" : 9.588162639975805E307\n    }, {\n      \"predScoreGivenName\" : 5.309901703328072E307,\n      \"candidateName\" : \"2022-10-31T09:49:08.465419Z\",\n      \"probability\" : 1.042037772870486E308,\n      \"predScoreFamilyName\" : 1.6298375006855038E308\n    }, {\n      \"predScoreGivenName\" : 1.0981802036390956E308,\n      \"candidateName\" : \"2022-12-25T11:54:08.465465Z\",\n      \"probability\" : 5.521412693954582E307,\n      \"predScoreFamilyName\" : 9.744158859799471E307\n    }, {\n      \"predScoreGivenName\" : 1.2842884147208257E308,\n      \"candidateName\" : \"2022-07-10T10:01:08.465514Z\",\n      \"probability\" : 9.044080585427638E307,\n      \"predScoreFamilyName\" : 6.259361838339686E304\n    } ],\n    \"orderOption\" : \"6kxxbjktlydp0a69eczapxj2qa3uuwqly89nrsl5n4zw0pgam6e8l6sg99hwdlk\",\n    \"id\" : \"mn95\",\n    \"script\" : \"klobhdk2e4iwne3h1yf0fgf937wthskm365mlrmb6je5sc2zcjrg5ixi3cr6xla0grh8ceou7vaqhup5jdoq01n83zjdzgzj6j0en488zjlx8monhkitm\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30167523-777f-42f7-9098-e5235db5babb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.465773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "3609f767-125a-4019-a2ab-235a8ac96ac9",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/w0ni8n7e2kvqz9m3cuu6burbidmke34udoig06a0z57oa5j61z5x22jsvlb582urup68isg6lk6441n6lixnsvschsklqdt6141xp2ckepzfsbe7n/0jup1ugrhhpc4x846hflaho934kptsnln06c7glci9z3gwd9kj5ey310aqzm2t6dw6i/Genderfluid",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3609f767-125a-4019-a2ab-235a8ac96ac9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.464197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "4bd26e13-43e4-446e-bbbf-2268b05448f2",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/lxmf4nkeuofnqktoy1kjfmc9jwbu6t51asa590eeelcd38uqx8kkhdvcoiiguwh759nxtnyhccx/ze9rigyluvz8qxmmo6ot3l27l9erf4xvjrtn5x5jey1ell4zv1vc751rzz6di7x7bddv2o0njf3t8feus72i3ww74g5ezdfr6c2b/Genderqueer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4bd26e13-43e4-446e-bbbf-2268b05448f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.464136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "71a844e7-ae15-443c-97ed-379ef3b436a5",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/cxaa9l7uck1h5r8ah83pf/3w95hfplv3ya392si6ajzuqrsu7uw35opukaupbct0wi4pzaxuhfc5p9xa0x4la6emhu9lhvbg1hkxaoqblrqgk5ubeqxrbeccl970gxvv9k7gu7hfephj0flp58w3ok9cbq79ozvxtbuusm6rycob/Male",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Huey\",\n  \"lastName\" : \"Jakubowski\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.8527992933120163E307,\n    \"candidateName\" : \"2022-04-24T11:17:08.463302Z\",\n    \"probability\" : 6.821909469759189E307,\n    \"predScoreFamilyName\" : 5.886503622717465E307\n  }, {\n    \"predScoreGivenName\" : 7.491437768785209E307,\n    \"candidateName\" : \"2022-04-20T08:56:08.463351Z\",\n    \"probability\" : 1.3839070293774144E308,\n    \"predScoreFamilyName\" : 1.1047343531632775E308\n  }, {\n    \"predScoreGivenName\" : 1.2118741806521662E308,\n    \"candidateName\" : \"2022-09-21T09:12:08.463396Z\",\n    \"probability\" : 2.682809484018382E306,\n    \"predScoreFamilyName\" : 1.0876479177610476E308\n  }, {\n    \"predScoreGivenName\" : 7.743880711499643E306,\n    \"candidateName\" : \"2022-11-17T11:47:08.463452Z\",\n    \"probability\" : 1.3807163036115842E308,\n    \"predScoreFamilyName\" : 4.347701727692368E307\n  }, {\n    \"predScoreGivenName\" : 1.2479879769521335E308,\n    \"candidateName\" : \"2022-07-01T12:00:08.463499Z\",\n    \"probability\" : 1.3196012777575325E308,\n    \"predScoreFamilyName\" : 1.1061027227949279E308\n  }, {\n    \"predScoreGivenName\" : 5.711647166342389E307,\n    \"candidateName\" : \"2022-06-23T08:31:08.463586Z\",\n    \"probability\" : 1.3283774935762203E308,\n    \"predScoreFamilyName\" : 1.2350595013776576E308\n  }, {\n    \"predScoreGivenName\" : 1.2050636165036087E308,\n    \"candidateName\" : \"2022-07-14T09:14:08.463653Z\",\n    \"probability\" : 1.9973684129001086E307,\n    \"predScoreFamilyName\" : 1.4304802436418898E308\n  }, {\n    \"predScoreGivenName\" : 1.6731239247897784E308,\n    \"candidateName\" : \"2023-02-02T08:24:08.463705Z\",\n    \"probability\" : 1.2227610093123332E308,\n    \"predScoreFamilyName\" : 5.237112891269882E307\n  } ],\n  \"orderOption\" : \"tid9orrl8y929ozgwtvzewlp755iwh8p5lggeu755lfvqwjwzzyozau0108q5t7xr17htodf\",\n  \"id\" : \"5dfk\",\n  \"script\" : \"fg6vbbqpu17wvw9yadjejqvxve2pxf46ay9munttkc6wgbb3jonr32ovajcj2eo6fcg5o7lhsb0at70e8ppl1e9rslocxgndkwdwm9zym12wns8b7ar984m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71a844e7-ae15-443c-97ed-379ef3b436a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.464044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "a8478efc-52b8-4520-b170-9044a834df72",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/i2uz73uv1b075zzriycpv03qibakq2yb49yjuel995scpwg875iie0aivxp0osfzlpd1zfpl09gq37d4g3sh54k62969vy8rwnbblmq1fwfibhb9byuznj1ojohaetlje7syf3srymj86b4518a4gneyhx365arv34w2oroatarjq/5ka8xj2xcae3744ozghuym6qw3krnb8o8tjk26dwdw9ayy1hekod5tzy41wm222b8b98k6ped7jnae8rwobviv2twjd9c07hx5hjtwpprwowu",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a8478efc-52b8-4520-b170-9044a834df72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.463192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "389bad4b-5b45-48e8-a730-18bd474a9f73",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/8xza3tpknfn3h6mex03p59rme448uzoube8lnwpi1qnnw16g0zei1dkcsg7y9mdjvw960rbp5b83y9s9yc74hnzl3v0ll3tg4uryfctx/suqsgf4rf82pkf5t9nxchelbh2d23yc7x9qzc7roxjijp8td9jy95qblzxwad31tfn28ydirc6xt5t33hdijtc81pz6v3tdnpi349aiiuo4nrifa8qta5pow3wzqm21itu4zqp3ztmdcwr58p959gs3fhxsb6gdcq5pg4sto7qz1f704aaox3skd",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "389bad4b-5b45-48e8-a730-18bd474a9f73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.463149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "2c9c76c1-1e82-4da1-95ae-5df2a0caf7e9",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/lh5y68ep8oe8irl75l6vvcxtz7ibvxjxxh56z52t1037kob0u8cv5jei30i7ermpoovv665wzqnr2fd1ko6u454loqooswsknmvpmd7yp/mgmcumx3a6cr9e1o1myb0rcdcz",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Michiko\",\n  \"lastName\" : \"Jenkins\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.3687800608884516E308,\n    \"candidateName\" : \"2022-08-09T09:10:08.46261Z\",\n    \"probability\" : 2.929861347529455E307,\n    \"predScoreFamilyName\" : 7.42990652521453E307\n  }, {\n    \"predScoreGivenName\" : 5.671426628689531E307,\n    \"candidateName\" : \"2022-12-20T09:21:08.462659Z\",\n    \"probability\" : 4.979681984507938E307,\n    \"predScoreFamilyName\" : 9.081942275517126E307\n  }, {\n    \"predScoreGivenName\" : 1.1188761790070971E307,\n    \"candidateName\" : \"2022-10-18T11:27:08.462704Z\",\n    \"probability\" : 3.3176811539849667E307,\n    \"predScoreFamilyName\" : 6.18054477811525E307\n  }, {\n    \"predScoreGivenName\" : 7.755437233699543E307,\n    \"candidateName\" : \"2022-07-29T12:08:08.462748Z\",\n    \"probability\" : 1.7417877366324602E308,\n    \"predScoreFamilyName\" : 3.741793620040556E307\n  }, {\n    \"predScoreGivenName\" : 1.0340769238994156E308,\n    \"candidateName\" : \"2022-03-29T10:02:08.462792Z\",\n    \"probability\" : 9.750618803355907E307,\n    \"predScoreFamilyName\" : 7.969749064694191E307\n  }, {\n    \"predScoreGivenName\" : 1.576419111586801E308,\n    \"candidateName\" : \"2023-03-09T09:52:08.462839Z\",\n    \"probability\" : 1.3358887039282565E308,\n    \"predScoreFamilyName\" : 5.943799658649726E307\n  } ],\n  \"orderOption\" : \"0jqckd1wl\",\n  \"id\" : \"7y5m\",\n  \"script\" : \"1rbgukwf6bt58n6rtv2yjrv02vy62ch1vtvtpnyysx4jj0g49rtbcjqruyouiq52dd9b0zyr9jvuiza1pkcfyb5gnn8y6val1jiizzi0jcw4e80325zu6hldupht345q9otx8ck7p1eiev1s1ivnfja4o171z2t1bf2du7oingivjnu69\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c9c76c1-1e82-4da1-95ae-5df2a0caf7e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.463088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "977da6c0-df93-4605-a4d1-85c1dab179af",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "977da6c0-df93-4605-a4d1-85c1dab179af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.462507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "31d53fbd-2cf2-4ae7-aa82-8a525b343ef7",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "31d53fbd-2cf2-4ae7-aa82-8a525b343ef7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.462491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "ce9c5139-caca-44a3-812c-9e8ae2898517",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ce9c5139-caca-44a3-812c-9e8ae2898517",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.462474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "722c440a-c375-4c6f-bd71-db438f988a0f",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"David\",\n    \"lastName\" : \"Kemmer\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.8213931152439E307,\n      \"candidateName\" : \"2023-01-07T11:49:08.460548Z\",\n      \"probability\" : 7.682888879751382E307,\n      \"predScoreFamilyName\" : 1.3317985374970462E307\n    }, {\n      \"predScoreGivenName\" : 4.151508008907194E307,\n      \"candidateName\" : \"2022-05-24T08:39:08.4606Z\",\n      \"probability\" : 1.6021508172401623E307,\n      \"predScoreFamilyName\" : 1.3772392768750092E308\n    }, {\n      \"predScoreGivenName\" : 1.2850498367015096E308,\n      \"candidateName\" : \"2022-07-15T09:36:08.460646Z\",\n      \"probability\" : 4.4722659007373285E307,\n      \"predScoreFamilyName\" : 3.409397047742336E307\n    }, {\n      \"predScoreGivenName\" : 1.2920197655700655E308,\n      \"candidateName\" : \"2022-05-03T10:21:08.460694Z\",\n      \"probability\" : 5.402657233835547E307,\n      \"predScoreFamilyName\" : 9.187816009320041E307\n    }, {\n      \"predScoreGivenName\" : 1.2902858020565766E308,\n      \"candidateName\" : \"2022-10-11T11:14:08.460743Z\",\n      \"probability\" : 4.647922108146159E307,\n      \"predScoreFamilyName\" : 1.4384500171135596E308\n    }, {\n      \"predScoreGivenName\" : 1.4744476390119042E308,\n      \"candidateName\" : \"2022-05-03T11:51:08.460789Z\",\n      \"probability\" : 1.682081678082552E308,\n      \"predScoreFamilyName\" : 1.295777318317402E308\n    }, {\n      \"predScoreGivenName\" : 7.827194845669252E307,\n      \"candidateName\" : \"2023-02-21T11:48:08.460836Z\",\n      \"probability\" : 1.4506964386119311E307,\n      \"predScoreFamilyName\" : 1.4790134278482368E308\n    } ],\n    \"orderOption\" : \"ce5ehkhd7\",\n    \"id\" : \"12e7\",\n    \"script\" : \"skyxo7c0b6a8uzv0hhc0g6rxn9rzwvvxkjlqzszzpk4imai6q48\"\n  }, {\n    \"firstName\" : \"Titus\",\n    \"lastName\" : \"Ryan\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0561936716106599E307,\n      \"candidateName\" : \"2022-11-10T10:00:08.461046Z\",\n      \"probability\" : 2.5422324848825176E307,\n      \"predScoreFamilyName\" : 4.580086108066541E306\n    }, {\n      \"predScoreGivenName\" : 1.477705231058146E308,\n      \"candidateName\" : \"2022-05-26T08:33:08.461096Z\",\n      \"probability\" : 2.5201086256699248E306,\n      \"predScoreFamilyName\" : 1.0127054940670226E308\n    }, {\n      \"predScoreGivenName\" : 1.2454299966281826E308,\n      \"candidateName\" : \"2022-08-02T09:47:08.461143Z\",\n      \"probability\" : 2.7541095270019965E307,\n      \"predScoreFamilyName\" : 1.2921735840788591E308\n    }, {\n      \"predScoreGivenName\" : 6.955444159145963E307,\n      \"candidateName\" : \"2022-05-23T10:13:08.461192Z\",\n      \"probability\" : 7.693966028686385E307,\n      \"predScoreFamilyName\" : 1.5248006858330289E308\n    }, {\n      \"predScoreGivenName\" : 6.586435260583225E307,\n      \"candidateName\" : \"2022-03-26T10:09:08.46124Z\",\n      \"probability\" : 1.4002306112704402E308,\n      \"predScoreFamilyName\" : 2.9295354821425326E307\n    }, {\n      \"predScoreGivenName\" : 5.042439655212398E307,\n      \"candidateName\" : \"2022-07-31T10:30:08.461285Z\",\n      \"probability\" : 5.18113470467263E307,\n      \"predScoreFamilyName\" : 1.7788870110340826E308\n    }, {\n      \"predScoreGivenName\" : 9.418884940277358E307,\n      \"candidateName\" : \"2023-01-26T08:26:08.461331Z\",\n      \"probability\" : 1.7761892609467902E308,\n      \"predScoreFamilyName\" : 1.5560300051397714E308\n    } ],\n    \"orderOption\" : \"nozn962at1lwu8dsgs2ytm7uggz3oa9c3abjfmdmzqso8u2faxsoyga5hygn6lvhpvow8fdh4qhd1r5odjs5q9dm\",\n    \"id\" : \"d1wr\",\n    \"script\" : \"z97ortqdzjsch1utlyjufa71zm6qlpl1sdm7j5w7ybn6fbl7ssbdusz75mmlfnb772brudcboms02a0pkeimebsi4smvbzm\"\n  }, {\n    \"firstName\" : \"Marcella\",\n    \"lastName\" : \"Smith\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.6727099270069051E308,\n      \"candidateName\" : \"2023-02-07T11:29:08.461533Z\",\n      \"probability\" : 1.518638916903843E308,\n      \"predScoreFamilyName\" : 1.4672569572258038E308\n    }, {\n      \"predScoreGivenName\" : 9.544234045970247E307,\n      \"candidateName\" : \"2022-07-09T11:44:08.46158Z\",\n      \"probability\" : 1.4637501572747575E308,\n      \"predScoreFamilyName\" : 4.42141119366422E307\n    }, {\n      \"predScoreGivenName\" : 1.419773821109855E308,\n      \"candidateName\" : \"2022-11-13T12:07:08.461631Z\",\n      \"probability\" : 1.6728281009714721E308,\n      \"predScoreFamilyName\" : 7.191472471948687E307\n    }, {\n      \"predScoreGivenName\" : 1.5353123872209125E308,\n      \"candidateName\" : \"2022-05-18T09:01:08.461678Z\",\n      \"probability\" : 8.425728815115914E307,\n      \"predScoreFamilyName\" : 2.946764283009764E307\n    }, {\n      \"predScoreGivenName\" : 6.933411831414122E307,\n      \"candidateName\" : \"2022-09-06T08:34:08.461723Z\",\n      \"probability\" : 6.004085281596093E307,\n      \"predScoreFamilyName\" : 1.50333099144038E308\n    }, {\n      \"predScoreGivenName\" : 6.062608282309953E307,\n      \"candidateName\" : \"2022-06-09T09:50:08.46177Z\",\n      \"probability\" : 1.0767687539033413E308,\n      \"predScoreFamilyName\" : 1.2296134005684888E308\n    } ],\n    \"orderOption\" : \"tomftbe614uof6c\",\n    \"id\" : \"85as\",\n    \"script\" : \"psmgh9pbne1njer9goa4cmzav669i66y1l\"\n  }, {\n    \"firstName\" : \"Ima\",\n    \"lastName\" : \"Ernser\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0925565717957725E308,\n      \"candidateName\" : \"2022-04-01T11:04:08.461975Z\",\n      \"probability\" : 3.0846291660770183E307,\n      \"predScoreFamilyName\" : 8.301692697573178E307\n    }, {\n      \"predScoreGivenName\" : 1.555959870696526E308,\n      \"candidateName\" : \"2022-04-26T09:50:08.462022Z\",\n      \"probability\" : 1.3737059251743665E308,\n      \"predScoreFamilyName\" : 9.869685401599637E307\n    }, {\n      \"predScoreGivenName\" : 1.7928169563027744E308,\n      \"candidateName\" : \"2022-08-23T09:03:08.462068Z\",\n      \"probability\" : 7.552695713374424E307,\n      \"predScoreFamilyName\" : 4.540443637595156E307\n    }, {\n      \"predScoreGivenName\" : 2.4780646997165926E307,\n      \"candidateName\" : \"2022-03-19T11:05:08.462123Z\",\n      \"probability\" : 1.541895777329577E308,\n      \"predScoreFamilyName\" : 9.70449546949762E307\n    }, {\n      \"predScoreGivenName\" : 1.6653925214293103E308,\n      \"candidateName\" : \"2022-09-19T10:53:08.462172Z\",\n      \"probability\" : 1.014168592854794E308,\n      \"predScoreFamilyName\" : 1.6039035862568439E308\n    } ],\n    \"orderOption\" : \"5tmtqzkau8x684ez5hg8p8fcvwzq4l0e6dhuqct67ywn5kt3r2dhpkjfn02ujcprybpkmz2hffngcoc95iww\",\n    \"id\" : \"9683\",\n    \"script\" : \"e1t6lv7ayw7600pxq90tgfabuk40c163cpvw1ye0pnbbit1jyzef89a447yvi78m09n52g0qrvco2iisqyp2k3vyqxmpmv8al9ef2cdxas8r99m4xfxvstppkubuufu4j8np7ll7w9n\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "722c440a-c375-4c6f-bd71-db438f988a0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.462438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "4f6fae22-c121-471a-9bdc-3909f54e77e1",
    "name" : "Infer the likely gender of up to 100 full names - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4f6fae22-c121-471a-9bdc-3909f54e77e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.460438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "f0532158-dfdb-482b-8e8f-bc4ab24e1039",
    "name" : "Infer the likely gender of up to 100 full names - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f0532158-dfdb-482b-8e8f-bc4ab24e1039",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.460422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "027e4f5c-c0e4-4a31-be1e-66f7539fc795",
    "name" : "Infer the likely gender of up to 100 full names - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "027e4f5c-c0e4-4a31-be1e-66f7539fc795",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.460401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "381e807f-11b7-43b2-a131-e196d8f5ca2e",
    "name" : "Infer the likely gender of up to 100 full names (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.9758578340910427,\n    \"score\" : 96.48382405950967,\n    \"probabilityCalibrated\" : -0.4388659139922326,\n    \"name\" : \"Tabatha Lubowitz MD\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"gy69\",\n    \"script\" : \"bbdq5kj27ztb8owr59n4h759snh8qywktqlm9jecxvcxn754iu1g8rd1mnqh0cvm5eqrw5wmf4lqhlifvdfcsbxzxlk4o4vfdiljf5gy1apnk7ucxus058m8enjr6d4ca5y\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "381e807f-11b7-43b2-a131-e196d8f5ca2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.460376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "819cdcce-6bcb-4daa-b996-47485418ada3",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Doreen+Nicolas+IV",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "819cdcce-6bcb-4daa-b996-47485418ada3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.460157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "aca6de73-f621-4b6f-8ab0-517a5b774b7e",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/My+Kemmer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "aca6de73-f621-4b6f-8ab0-517a5b774b7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.460098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "0e2bb68a-97ea-478b-982b-0404c659f4eb",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Miss+Ricardo+Pollich",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.4680464431006701,\n  \"score\" : 15.29046993183516,\n  \"probabilityCalibrated\" : -0.5305500550669315,\n  \"name\" : \"Oliva Reichert IV\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"53vc\",\n  \"script\" : \"crzhgbd6xjpz6l5noxwtusg9s3v74pc3mw4yw6pvnj60q8fwxms1hpaqzxqjauvqzciy0ddz50yszw21u5vdf4mpvgl4jud2yvs04oaaxk6jawkm797i78xxhemmlw31ad3sqm5r5sp6618j96zf6hb5naxmqgdllet7wg4vnws4p29\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e2bb68a-97ea-478b-982b-0404c659f4eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.460015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "598119cb-b33b-49e2-bb31-f3d5992745fc",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "598119cb-b33b-49e2-bb31-f3d5992745fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.459728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "a62b020a-29b1-48a3-856d-2c8281393990",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a62b020a-29b1-48a3-856d-2c8281393990",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.459711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "bb7e1e91-c8c4-410e-ad3f-82f2bccdcc9d",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bb7e1e91-c8c4-410e-ad3f-82f2bccdcc9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.459695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "89942c35-0306-4aac-851d-136d7a44ad15",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Mitchel\",\n    \"genderScale\" : -0.434460487893114,\n    \"lastName\" : \"Runolfsdottir\",\n    \"score\" : 66.07768552471481,\n    \"probabilityCalibrated\" : -0.5207112791146207,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"26q8\",\n    \"script\" : \"5hc65sudlc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89942c35-0306-4aac-851d-136d7a44ad15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.459668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "eb7229be-ecc6-4b56-9625-b8b03cf83b2b",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Lockman/Alton",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "eb7229be-ecc6-4b56-9625-b8b03cf83b2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.459444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "6cbd3796-c39c-457d-9ab1-9be1c97264fd",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Lubowitz/Bennett",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6cbd3796-c39c-457d-9ab1-9be1c97264fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.459383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "455a53cd-568a-4a66-a488-85f119d07c4c",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Dickinson/Skye",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Darline\",\n  \"genderScale\" : 0.7543927671753037,\n  \"lastName\" : \"Flatley\",\n  \"score\" : 69.27455506017046,\n  \"probabilityCalibrated\" : -0.19092533605758466,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"3utw\",\n  \"script\" : \"h4tvbr9reuxusdr8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "455a53cd-568a-4a66-a488-85f119d07c4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.459309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "7695098f-7272-4200-a693-b335635996a0",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7695098f-7272-4200-a693-b335635996a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.458996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "2746656e-4ea4-4231-b888-ae50dd386d43",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2746656e-4ea4-4231-b888-ae50dd386d43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.45898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "f2084dba-cd07-452e-a5ba-bece9316b2db",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f2084dba-cd07-452e-a5ba-bece9316b2db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.458962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "4d025844-7e79-42a8-aa50-a300fabd3bab",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Latonya\",\n    \"genderScale\" : -0.9390253089022795,\n    \"lastName\" : \"Harvey\",\n    \"score\" : 43.94749025940826,\n    \"probabilityCalibrated\" : 0.5792028077029676,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"f1vg\",\n    \"script\" : \"dl786iya38k4i40e06o2im40iir6ipd7htyz2mfzajnrsu13vn1o0n9837y054gzcl3gnccfg78l9brwvglpqbbghf9c5fhay38vu\"\n  }, {\n    \"firstName\" : \"Wilbur\",\n    \"genderScale\" : 0.55055033753206,\n    \"lastName\" : \"Rice\",\n    \"score\" : 80.45781337088204,\n    \"probabilityCalibrated\" : -0.4252657826766282,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"0kd6\",\n    \"script\" : \"c6r3q1qgxad4zyka0otg95mpvht7bkr1fg25v3ldhj6j7u4rqv3ptzkl8qaorqjwnnpcnc8lpl5o0uda9x3ya5pqnnie9x26i2vzyozcombbsa7olih18o8tn0hrwfwubtpfzvybikicwztb1ewoyscxl\"\n  }, {\n    \"firstName\" : \"Lester\",\n    \"genderScale\" : 0.9059420432488774,\n    \"lastName\" : \"Bode\",\n    \"score\" : 98.41610891397934,\n    \"probabilityCalibrated\" : 0.5828247120281875,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"k10b\",\n    \"script\" : \"5if1bldq84wt3h2r1n8e0bz1pzecc4kbm444fz4tyd44i1z9eykat33vxqjlrm1h897i656btv985e5\"\n  }, {\n    \"firstName\" : \"Quyen\",\n    \"genderScale\" : 0.29854593024401765,\n    \"lastName\" : \"Mitchell\",\n    \"score\" : 1.2051718310497228,\n    \"probabilityCalibrated\" : 0.7681601263362428,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"f2fg\",\n    \"script\" : \"90p911mtpix48i0w4ahec2fpa3hlpixa0rfvyjrvz8aekeljybtjztnq60iqujcfznens743585j6pzc14c76qt331o8mcaqs0ps0k9urqmnau2ixuxrs819fp6znuuj8ye0i6185e5axd9ruo6kdgb8g1ge1f9pfpwuwe98vvzoaatbodzg6826fdi8v\"\n  }, {\n    \"firstName\" : \"Dwight\",\n    \"genderScale\" : -0.9170179306130524,\n    \"lastName\" : \"Pacocha\",\n    \"score\" : 8.468019178641539,\n    \"probabilityCalibrated\" : -0.0397979753152653,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"r4fj\",\n    \"script\" : \"ciqyeqhtg\"\n  }, {\n    \"firstName\" : \"Dwain\",\n    \"genderScale\" : -0.6059511409595395,\n    \"lastName\" : \"Connelly\",\n    \"score\" : 29.840033849549464,\n    \"probabilityCalibrated\" : 0.6634746332249697,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"3f64\",\n    \"script\" : \"028ko4mch19w4xu1fkrz0n0wuah3xuwnf4vfjmj7ucgh1vplas8aoh7vm6e359tqln389v1rz6w88axj9j4iagp95ar73dqg7zbfghcncui7biw2662tamq09zvpgfj9su0fy037thygykt309y84l1vkdb7jsx6oy9m0m8sj2r0b2k94fhzrrw\"\n  }, {\n    \"firstName\" : \"Jaleesa\",\n    \"genderScale\" : 0.9214260034018993,\n    \"lastName\" : \"Mayer\",\n    \"score\" : 85.63246878047349,\n    \"probabilityCalibrated\" : -0.7858858024817159,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"9w34\",\n    \"script\" : \"omafdonkwl2ehoclyoqgfqdo4e5ryrq5s4u567mnxo17jdndqykq00ngxwa70h8t5ma4s35in4tqy92ispz0j17r1zpul4hcxse5aafpj4hnzpukwxvqd2hf45zrjtp72ccgc3l4r95sxjvf27939j9a7ieo3y4g3d6tw5s7k\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d025844-7e79-42a8-aa50-a300fabd3bab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.458923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "ca97227a-8bb7-4260-ae96-68f690e75182",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Elroy/Halvorson/wysj4o6ykwxy4nbvd3cz63pu3xatbl03mytq7iu75xfyof80z4wi86eckn3vbgyljx0nxi5rh01gcigwhzj28h7wdfxz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ca97227a-8bb7-4260-ae96-68f690e75182",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.457654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "45cf6fef-717c-4bcc-b9cc-0eef79d895ff",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Shellie/Rice/pe95zvbwt9p680bsg3cje0yos9tb2wtlrcki3z8law1jdm8qegpeyl3vqgiuu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "45cf6fef-717c-4bcc-b9cc-0eef79d895ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.457581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "15cb3550-5350-4425-9e2a-a6b0612e7653",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Soon/Dickinson/duquz8vtwqwjsq90j1o1qaiel60cyveh7t7pop19hu87kqua81r2lua02b0r53b5y",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Everette\",\n  \"genderScale\" : -0.633523827328897,\n  \"lastName\" : \"Morar\",\n  \"score\" : 11.090414007275895,\n  \"probabilityCalibrated\" : -0.47671874356361754,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"se7l\",\n  \"script\" : \"n6rby5a183xta03ik2fc542fqvx8slmq347cbwokr1zg5cr4dztp68adrb1l7995nqoyd1gemorguri6sjipy8qoyq5ie1xey8egku13y41hsuvb51yvg1h481el1o1turqf6dwi36x8oh75stpvwjo41661msh6x9eip3kxp5z9wc1q533ir23ykj77vqydkcb69va\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15cb3550-5350-4425-9e2a-a6b0612e7653",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.457496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "f8e0ae7c-2e9b-4b88-bb97-081fe7d5e88c",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f8e0ae7c-2e9b-4b88-bb97-081fe7d5e88c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.457174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "a351b091-39f8-45a3-94b5-cc16c4521bb9",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a351b091-39f8-45a3-94b5-cc16c4521bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.457158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "30fb0a5a-7398-4ea6-8e12-13e08968de53",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "30fb0a5a-7398-4ea6-8e12-13e08968de53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.457141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "084bdae4-1407-4a14-ac55-7dc31dfc22b2",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.15328974643941118,\n    \"score\" : 17.839359242342578,\n    \"probabilityCalibrated\" : -0.8924717506655204,\n    \"name\" : \"Cristin Kshlerin\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"2zi3\",\n    \"script\" : \"cwg5d1y5qdh0ycnx2pp1rpb78edcn0c35nqeyj5br8vjwsrm2gco6cr6gvkkmw2f9mgsm7b5g8twll86fxphdfh7asifvefekytih7dyzm7jrhaf843ikg190tuf1qr\"\n  }, {\n    \"genderScale\" : 0.629373119440392,\n    \"score\" : 38.588606494048925,\n    \"probabilityCalibrated\" : -0.01842691589117562,\n    \"name\" : \"Elizbeth Hegmann DVM\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"9ooe\",\n    \"script\" : \"nyy5yl27kalhqzq0dpuocrtxe417dnw91xgqna6r6sf8\"\n  }, {\n    \"genderScale\" : -0.9186704753291108,\n    \"score\" : 4.938104908939456,\n    \"probabilityCalibrated\" : -0.004135889551795113,\n    \"name\" : \"Nadia Berge\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"x5j6\",\n    \"script\" : \"n9qfronzdg2m6ennqhzv7nszhmcknqijxjjbbxh6r0mfo7w1zhc0qmeugocbz9qumi6nju8p8mi5b1768z20crivzegx2op80puzk1uhspozsirb8ozdk8kzkn1l9c3ej9pfspi561xrx5sy0oowesd8tk3wjf530l2qtm1x3raj8mnu3mdx6jdo6k6akaafva05\"\n  }, {\n    \"genderScale\" : -0.9067775513003267,\n    \"score\" : 83.65526230377658,\n    \"probabilityCalibrated\" : -0.577993412888965,\n    \"name\" : \"Simon Douglas\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"ghu0\",\n    \"script\" : \"lovldphs57wnuij8z72f401lqh8du4tun9oz8xkxkbhkh91x4x1s3tvj57nkolb5o1yiw45x9rxgbh1ehgp01ov5hueqh19578o0xvmo581b2lb7rsxtugbxnwrsiv3og6bpm58tl48xiqmwwddq9ulhlo2wzbyozudr47v9jk\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "084bdae4-1407-4a14-ac55-7dc31dfc22b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.457113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "924b4953-cee1-405a-9f0d-d205bcedaad2",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Marlena+Bailey/l9ku6zmplp07vx113g9e7mch75xcs8v983fvnhtp4",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "924b4953-cee1-405a-9f0d-d205bcedaad2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.456425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "a1080376-b6e8-45f8-a12c-858f5c6deadd",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Miss+Davis+Schamberger/mt9ws98y3tp4z4tqu3yrg41aytt3mbc8rq0yez8b15wl7z0ga6xulzfc1kf2fzq8jdwoukfnet2buhf3iabfg79we80ootr3l6ol68pc3jkq7ouonurm6wwusalttlapxaaa737wb519",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a1080376-b6e8-45f8-a12c-858f5c6deadd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.456363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "dc899b0d-2e0a-4129-9246-f5e5b2e70ffc",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Dr.+Clark+Bartell/86ph6lekx4wuho94okggyojk6qzv66ykarh4et84byovkf7iig36d4pc28gs3vbv5vsyy7co2wzx0r9mj1ve2unm2784iztt1tusldthj6wc4rg0ry8ngg",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.6195815765627575,\n  \"score\" : 99.19257670335558,\n  \"probabilityCalibrated\" : 0.8359679128231252,\n  \"name\" : \"Stuart O'Reilly\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"y333\",\n  \"script\" : \"xb0by8ruiwj8k0rzxgbixqbjft30b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc899b0d-2e0a-4129-9246-f5e5b2e70ffc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.456287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "71266168-2e09-48f6-85b9-c4f06bf1f8d1",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "71266168-2e09-48f6-85b9-c4f06bf1f8d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.456001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "efa710af-a19f-4203-b6d9-0d8d8e66d681",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "efa710af-a19f-4203-b6d9-0d8d8e66d681",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "988fc91d-6494-4e69-a64a-026b02759590",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "988fc91d-6494-4e69-a64a-026b02759590",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "7d21c8be-38ca-404c-863e-5e0825efc300",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.6957497478510071,\n    \"score\" : 52.84671404856667,\n    \"probabilityCalibrated\" : 0.5558535434497769,\n    \"name\" : \"Randell Schimmel\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"fq1w\",\n    \"script\" : \"pnj3spq4wykujq5gyg9acm8arm1g3zjh8598cuztwr\"\n  }, {\n    \"genderScale\" : -0.6180347389255061,\n    \"score\" : 37.11832324131902,\n    \"probabilityCalibrated\" : -0.12611146242733207,\n    \"name\" : \"Kent Christiansen\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"jx9q\",\n    \"script\" : \"02wflx77d79f5u18xsi89419zg51ilt32gss4pxs399ddid34621cg9j91ddjz49ioh6xurxnma\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d21c8be-38ca-404c-863e-5e0825efc300",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "32307e86-48fe-4383-84cd-1b3a3445a00b",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Haydee+Rowe",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "32307e86-48fe-4383-84cd-1b3a3445a00b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "398672af-a490-4fea-9fb1-f2c9b2ebae4a",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Paul+Gleichner",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "398672af-a490-4fea-9fb1-f2c9b2ebae4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "695484f2-9bf4-4fa1-9a74-cd4525af2d09",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Buster+Casper+II",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.7066843719472287,\n  \"score\" : 98.96385163358279,\n  \"probabilityCalibrated\" : -0.6039515157854305,\n  \"name\" : \"Mrs. Lauren Roberts\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"9gz0\",\n  \"script\" : \"n5hrj6rgcexvufrwkd5y4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "695484f2-9bf4-4fa1-9a74-cd4525af2d09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "563f76cf-d53b-4305-bd2d-1bfa46334d95",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "563f76cf-d53b-4305-bd2d-1bfa46334d95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "27299a02-f0b7-456f-bdfe-c75fc9a11636",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "27299a02-f0b7-456f-bdfe-c75fc9a11636",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "cfa33aaa-72d8-452f-9327-c56bdd86412c",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "cfa33aaa-72d8-452f-9327-c56bdd86412c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "d8cb3b0a-77c2-4417-823f-4be746bd9b54",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Eula\",\n    \"genderScale\" : -0.9306813599643873,\n    \"lastName\" : \"Hills\",\n    \"score\" : 79.44921170577486,\n    \"probabilityCalibrated\" : -0.4430661173200263,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"8cjy\",\n    \"script\" : \"hdmanxmzc1qay42icy32imt96ox4hd767fpc4mhnk9ebp33kkacs6917qu96tzcfee934pgudk478qp4jiwd0xoee2lo9bgguor7wnny5lsx1ckv2awxzqcxrymnj4r6wbuck3afnejql1cdr6\"\n  }, {\n    \"firstName\" : \"Kerri\",\n    \"genderScale\" : 0.3935573608121019,\n    \"lastName\" : \"Schaden\",\n    \"score\" : 70.41059508856236,\n    \"probabilityCalibrated\" : -0.9052767417902579,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"3ws3\",\n    \"script\" : \"dt8jsaqier11ip3wfoig023ejxjnq42pdgs\"\n  }, {\n    \"firstName\" : \"Juli\",\n    \"genderScale\" : 0.2974144560612959,\n    \"lastName\" : \"Smith\",\n    \"score\" : 83.8624256191974,\n    \"probabilityCalibrated\" : 0.955583170030855,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"n6e2\",\n    \"script\" : \"4hr1zbta3vf6jmctbdnj6zbhnv8r4fqcp7j6exztk2gmll8l4bz4bju3l4em8i3ejy5sqn8fv\"\n  }, {\n    \"firstName\" : \"Reanna\",\n    \"genderScale\" : -0.715271302742629,\n    \"lastName\" : \"Ward\",\n    \"score\" : 5.443864566229239,\n    \"probabilityCalibrated\" : 0.18651356420844278,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"ppyh\",\n    \"script\" : \"0hriwkp5bakgp2mw3as9yd2zzkbsakbg8yapdjiecv52zm1htfq8ch2zb2ksy32miu8cycucc48p1w5dk8ako0gi9rcb8a0hmynei7b98ub0j5bkw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8cb3b0a-77c2-4417-823f-4be746bd9b54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.455126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "056db549-1bed-426e-af02-f5aad91648f6",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/4a1zjvnysv28g3ky6ql6oe4qk9epdjmtfnm89ovgba3tgy0r07yafzvrxa78blqbxoyraeyh0e9/vix1s4cf2y",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "056db549-1bed-426e-af02-f5aad91648f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.454406Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "2231b7ee-0759-4b56-b2cc-497bb18c3567",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/cuym9hz2sbfa5bhhtcgjzacwfeotl0cm1skpvisfafgsuujpmjjr2zj3aleira5yrcga747zjiq0iikqzeplo0mmxeafrzzwz450ton7pur3dyaj3bp7jo4skdjjbxwt8yazpxk33hprzbopjcckh3ijddwoor6hz7sbn8/3wudw8dbzwj2usfb44jh8ttp3tlkviof7aeqnuie096ry56ydhp06qzz3suh2bwck4fh1uc2kvauk8z27",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2231b7ee-0759-4b56-b2cc-497bb18c3567",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.454366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "3ce204fb-51a9-4cdd-9fbb-4dfe88fbf766",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/k7t7ht1t11hhto06wni0jhhk8c54f6lyqcilzxuew961npdgjo/p41oe5qbcub1a7ofl8oeesxh77z60sw7icwinlt4gjynz8yl39wtqkmhjlfn7plaumzovacdcibnjcotvccnzo0sivdfr0sgjcnvaxqyrf54k6pjua9j5ba9c5wuxyx6hj36nqz1i3870i7amcxqbmeu6e1p0m8464ohz8asik1e898rt8feaku5y0af96t5",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Jeanna\",\n  \"genderScale\" : 0.686064073484723,\n  \"lastName\" : \"Prosacco\",\n  \"score\" : 31.219828929295513,\n  \"probabilityCalibrated\" : -0.12668050556544963,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"u44i\",\n  \"script\" : \"qbrwrohiu34eyokbkt1btom43srem3y7yy8kliix27ncd0gbbw767wnvvxcrxsfrh1kh4pb3jg70aji7kk7ycolmeufwgmee97j0jekq1tvswdw1stntnb5ax0pe2cg8lga0nucsd2buzengpbx4w77we5l90sd5k9gqjzpr547a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ce204fb-51a9-4cdd-9fbb-4dfe88fbf766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.45431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "e26fcfea-cbcf-4e81-8b55-2368a2cdd841",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e26fcfea-cbcf-4e81-8b55-2368a2cdd841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.454026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "5e3954d4-6c96-4314-8db4-20c9b07a0d1a",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5e3954d4-6c96-4314-8db4-20c9b07a0d1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.45401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "22fa2701-a6b9-4e53-b368-ad7cf3e5c177",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "22fa2701-a6b9-4e53-b368-ad7cf3e5c177",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.453993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "3421d334-2329-4bce-a211-2c9d9dd08dcc",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.4261022353372561,\n    \"score\" : 96.14684242116635,\n    \"probabilityCalibrated\" : 0.21681452362583942,\n    \"name\" : \"Arnulfo Davis II\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"7c9a\",\n    \"script\" : \"k1fff9zav1hgw2gav\"\n  }, {\n    \"genderScale\" : 0.9851948765486898,\n    \"score\" : 69.37273214590057,\n    \"probabilityCalibrated\" : 0.06577595016180604,\n    \"name\" : \"Catarina Gottlieb Jr.\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"39ns\",\n    \"script\" : \"x7ztuad848x55guyckgkoz04mox12n6tpm0p76jggl2kos71gboo44to8hgfr5rrr54p7h6gh24copotnmyi9ueiyrh5v9ka9asqy4y91rtxpqbu6q5ez67i4bsud8mjg7vmdd8y6g37tb1lzf8zj7cdi1hyxpl54x42fvo0us1am9d6b9lzptwzox\"\n  }, {\n    \"genderScale\" : 0.41564217460798036,\n    \"score\" : 42.55952345364818,\n    \"probabilityCalibrated\" : 0.7152958659045479,\n    \"name\" : \"Mariam Thompson V\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"rd8e\",\n    \"script\" : \"lidfg4mdbi3xkrnkhf7nc0dl53qh6zxkgveqsnb05z2hq0d19400xcs89pyzh9iry4xz0nmzbgo5g4m8x3iysikxizv2z9ku65a2yizrhn5s28n463robw454rcime7hh3pgo0u0a2p6sr2urakekykzxmjfks43u\"\n  }, {\n    \"genderScale\" : 0.3747885383008742,\n    \"score\" : 27.152460740947625,\n    \"probabilityCalibrated\" : -0.6981810353455213,\n    \"name\" : \"Stanford Grant\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"75uh\",\n    \"script\" : \"qkklckzr8mfrhnt3z9aowb0xrejicu4ua8gv9gy9x6i25hppcm2h9k0hl5bif5\"\n  }, {\n    \"genderScale\" : -0.8271183867661294,\n    \"score\" : 80.532455259781,\n    \"probabilityCalibrated\" : 0.3135920323418342,\n    \"name\" : \"Mariano Feest\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"r2cx\",\n    \"script\" : \"1tch41sh45xpzgec83ibxu61x1yjdmg4ldu5k0hvks36wslfk5vuj3ead8zp9fecexp4hockd4r732v9y7ry47h781g2cgto63bqeptm7u6cnnolfeanov8fvrikq1pl8c575bk5bhcgliondqhwexselnlo572yp7lasyxdcbgh9qj\"\n  }, {\n    \"genderScale\" : 0.3182258820378099,\n    \"score\" : 54.109969460898334,\n    \"probabilityCalibrated\" : -0.5620195845679521,\n    \"name\" : \"Modesto Bruen\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"4b8j\",\n    \"script\" : \"oy2hfevp2b1cgoto0q9gorclblxlepaak8v2woby8ws241g3scb0alfegzi6irzipoedwcul4cxvolrgarney0znkijco722jyt95zpdb70a550x8pjkjce4dvx9t0l0yqqqcgl3f5hn7ptkpkmif830iovn9j6iag980o8vui\"\n  }, {\n    \"genderScale\" : -0.4009893054767393,\n    \"score\" : 68.50571573609801,\n    \"probabilityCalibrated\" : -0.9481772428002901,\n    \"name\" : \"Giselle Jast\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"oe27\",\n    \"script\" : \"h9mwpfzd0e4l05w1ry7snzxrhtayfxj5w8e5g9myeul7mrck7111qzkbxhwok3o0uqm3kwgyac02v2v4g1xb8wrdnj5sl3rmjl3jxrarred9ygmyxugjpu313ayn2tojmn13j9mgm7z42268v6e59wdrzeypngbsj\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3421d334-2329-4bce-a211-2c9d9dd08dcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.453957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "b9d51dd4-d215-4122-aa60-b583f68e8ac0",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Katie+Kemmer+II",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b9d51dd4-d215-4122-aa60-b583f68e8ac0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.452813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "79729f89-b5aa-4939-8074-7d1d4c62e7a1",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Elijah+Cartwright",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "79729f89-b5aa-4939-8074-7d1d4c62e7a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.452755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "a29876a5-083d-4d60-9d64-08d81c9953a6",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Starla+Hickle+DVM",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.024994296701323693,\n  \"score\" : 43.059076866156765,\n  \"probabilityCalibrated\" : -0.5758879735462872,\n  \"name\" : \"Dr. Gregory Price\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"x49l\",\n  \"script\" : \"fcnkpnqwtat2hkqyybcu4agcbcyzgoqx3sgny8b2vni54l38wuq4582ehcbi2ik88mnxdzg0fv7lyey4osffnu7pn5kr2m1hohw6n99qs2zccqroi2pracq2zzre2mydxz4671vnpb14h5qpeof897s5rtv35h3fpexpu720fkw7h72qgxxeoxhcd4lykko8lj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a29876a5-083d-4d60-9d64-08d81c9953a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.452678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "676baddd-e9ce-4d79-a8a5-77773eb2f75a",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "676baddd-e9ce-4d79-a8a5-77773eb2f75a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.452339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "c9e52ded-d96d-4e32-9109-62ca6d6dc018",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c9e52ded-d96d-4e32-9109-62ca6d6dc018",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.452323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "21fd2bbf-1b54-40b6-b81c-5e520be1c62e",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "21fd2bbf-1b54-40b6-b81c-5e520be1c62e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.452306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "7c683d9a-f0c2-40b7-b05e-7ddc6d722a02",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Necole\",\n    \"genderScale\" : 0.9518250558187711,\n    \"lastName\" : \"Lesch\",\n    \"score\" : 30.480908482333202,\n    \"probabilityCalibrated\" : -0.8176831043572417,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"791m\",\n    \"script\" : \"66gwf1dui2b3n1mvg65bsu00f78w45yo6tkx88pykhwmb599jsoh196vau2pbm9rpg76j4rhiqpi1v6pb0gsbb1vodb1mymooay57xf74faum279d3q\"\n  }, {\n    \"firstName\" : \"Oswaldo\",\n    \"genderScale\" : 0.19525877381048162,\n    \"lastName\" : \"Bauch\",\n    \"score\" : 37.49458570967423,\n    \"probabilityCalibrated\" : -0.10816683952298778,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"2yuw\",\n    \"script\" : \"y9dqlvqo7jqfl85944b4e59fb7mnqchpx087ktpw42la1fhrqapctahfc2z3xwn2c7e7iumtic7dhlus6gzd5sl6w4754ens67aud6vopjpkz1bzngrrszz26iomefqyj\"\n  }, {\n    \"firstName\" : \"Gus\",\n    \"genderScale\" : 0.2894583849128909,\n    \"lastName\" : \"Mosciski\",\n    \"score\" : 45.11034915025975,\n    \"probabilityCalibrated\" : 0.16798591692066345,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"730k\",\n    \"script\" : \"bbui180ss4yp947dc94azehag4f6oyksb5jfc2h8x4lvbxxkuw9kodup14rhvp3vbadicolvvas3572nabwuimq4x27oj3oq7hecn4fzm95rl575fbl8zvzbwep8py2v7avz80gqx7\"\n  }, {\n    \"firstName\" : \"Georgann\",\n    \"genderScale\" : 0.0017484311377742312,\n    \"lastName\" : \"Kub\",\n    \"score\" : 16.73152490147649,\n    \"probabilityCalibrated\" : 0.27509710574384894,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"5dcj\",\n    \"script\" : \"a5s2f6iftpt5ihuzkfvgm3x0cl8qscc6rfds6fx1i13zboot6f5kztft2yn3zraxzx67mf8d7eo1ifzpqhsaycfxjisb9szo0kxc1b1vo2ebt\"\n  }, {\n    \"firstName\" : \"Normand\",\n    \"genderScale\" : -0.5796158945398064,\n    \"lastName\" : \"Hermann\",\n    \"score\" : 94.51203832250461,\n    \"probabilityCalibrated\" : -0.728067519659189,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"07a1\",\n    \"script\" : \"g3puq87do5jqxxejpdp6afj3xczkhbyits8yhhen1s3ou37nq6evyi6vf4pnb09cufde9chp62fi6s6v1gwag2fo19olfi48jgc44h9bt3u02d24\"\n  }, {\n    \"firstName\" : \"Donn\",\n    \"genderScale\" : -0.6156250777130226,\n    \"lastName\" : \"Kuvalis\",\n    \"score\" : 90.00823952238959,\n    \"probabilityCalibrated\" : 0.965870627223604,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"3yfo\",\n    \"script\" : \"nsshqzu8hmv4fbwh57t6i5v17fqaeuhhfkzx9viwbwb1id4en0iu7is2kpldsny2c3cfqdwc8my5ce4sevbjhzx6uy9eodhn5ja7q6xksyvb77nkd4c0s9a8ul2kyx1jrey25p4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c683d9a-f0c2-40b7-b05e-7ddc6d722a02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.452272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "43980ef4-0f5c-48bf-afb9-5ed4ac54a8d1",
    "name" : "Infer the likely gender of a name. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Delorse/Oberbrunner",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "43980ef4-0f5c-48bf-afb9-5ed4ac54a8d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.451204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "f287366a-4b5a-42a4-b844-233025cbe838",
    "name" : "Infer the likely gender of a name. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Ray/Boyer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f287366a-4b5a-42a4-b844-233025cbe838",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.451144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "2b6bb154-ff6b-4569-bcaf-883729df12d8",
    "name" : "Infer the likely gender of a name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Cruz/Rippin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Nisha\",\n  \"genderScale\" : 0.13843844446517362,\n  \"lastName\" : \"Huel\",\n  \"score\" : 24.660790329862003,\n  \"probabilityCalibrated\" : -0.1729807678250166,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"b439\",\n  \"script\" : \"7qwf1xscz2iuro6heilvhbzgtibsj4mvi2l1e090x8scrx31a0etogtpfmt68821sfg8gc0v77f7qwvm8g5t7we0j1taqrrpmbzd0t1qiwmmoo5cq6dd2a00p74dplctfci66yotwd2d8ejay6vfoj5neshq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b6bb154-ff6b-4569-bcaf-883729df12d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.451072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "8b22f685-2f7e-4bc1-9fff-1eb3dcce3396",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Emerson",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8b22f685-2f7e-4bc1-9fff-1eb3dcce3396",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.450781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "dfe2f375-9f76-4c78-994f-e954f7445e34",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Consuela",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dfe2f375-9f76-4c78-994f-e954f7445e34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.450735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "e3c4d7fb-3d9f-4678-ac34-a4fae944edf5",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Carri",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Kim\",\n  \"genderScale\" : 0.4476591216481023,\n  \"lastName\" : \"Pfannerstill\",\n  \"score\" : 95.2555657426569,\n  \"probabilityCalibrated\" : -0.10446769616418816,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"2pkq\",\n  \"script\" : \"843reqtsbeuvxsfeeibsnoj6646gfkdh71yyegqlrl9rup60vuhg2du1r9a1ij4mnwuw1l70y3vtl4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3c4d7fb-3d9f-4678-ac34-a4fae944edf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.450674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "fd857a20-277f-4cc2-912f-66784106791b",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fd857a20-277f-4cc2-912f-66784106791b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.450372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "1732eb88-ffdf-4a46-bd14-f4fb21541329",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1732eb88-ffdf-4a46-bd14-f4fb21541329",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.450356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "40e2a039-4fa1-4135-94fd-e6c4560220c4",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "40e2a039-4fa1-4135-94fd-e6c4560220c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.45034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "3f08ce02-d19b-45d6-b51d-af2ef2b0766e",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Karl\",\n    \"lastName\" : \"Gorczany\",\n    \"score\" : 67.26841946683459,\n    \"probabilityCalibrated\" : -0.5955957006103001,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : -0.30022444197001086,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"b0ri5gc92s618grtegkdbqbo5p9rgka9xxlto4ae9omhgmh6tx7dz2p41rprpnhfhn87pcet7e5y84eebxjbefo82mst0l4qziki0sz2knqv3\",\n    \"id\" : \"s6z1\",\n    \"ethnicitiesTop\" : [ \"hb34ttl0xwdap6pghr9e7w7opowxivvmc759lzch30wqo\", \"k6oi3nnip9xyjdzvq44bhhjpy884jyo6pz9mgc8fljhsnseipabhqmmjd0iy1p11si97jrmsgf6kkzuupyiys5f3t8vpky5atd9do6ncek0ykbcit8whrlqkbs2rid4m14pv5gljgbqqsb\", \"qi7lhy6ua3uyu0j3hacamt83srismsonhqmiuvx0jtiyaa1fx7qi2vzffkmd3uvbb71cjoxqp638cht4e28xobu4c2quentycmqhfdaoiuipe9jz92gwgq3g01h4ofc9hvakwuo3oci1d33b11mfmj7ztkzjpyzv92zcwrkmfl0lwxucm0vatyirlk2zwht8ky5rs\", \"khetjsk0urj82wtjlzcirc5926pj3dyhyyf8ep69ljwg1p8kv8wejw7xqhw\", \"aqwa6koso\", \"2cqhhke7i1pm7anznn1btdkn0g3eoengs6mgu4gezhouoqrwuhugpdvuhcfwucniz59719t6u29e0y76sieet5b0evi99ihnx1perk9qxxko00f3c7rraglxpbhlqc87nnmi48wsmuss78396243z2bc0vv5h0xsehzqn2ia0dp0an69es6oeh9eyyof\", \"gsmnthfup1nqom54a1t770qki7dansemjrtmvx9darsmovcu0yuhotapouzqh35lp21gx0k8n0ctt55wes4fsfq682ryf182xk8ng7xhels403nlpvh5roc0dd8wsxb9oll1g\" ],\n    \"script\" : \"0q9kfea712w627zc2nvp3ug5e81fle6ml0v6xog3zojj2qc0mpccsk9p6jmpfu82wip08nojhciwcng164vxmxtv8c5ljdrlro2g4ring92dp9jvwqjrn52ykp74vcnfcme0fzezfmefppxpb68if3i76lbe0i3rxk987c0z69blwv5wz3f70rvizg9t5g16lv\"\n  }, {\n    \"firstName\" : \"Fredia\",\n    \"lastName\" : \"Strosin\",\n    \"score\" : 45.592484560029256,\n    \"probabilityCalibrated\" : 0.1149422776535236,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : 0.23380528044378335,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"ovn04aatikpidguwfvvw8dch8xuoursmg52uncxmz9eo50bw9j3t6xr1d7h7doqpx9d6pb6e4pds8ufeita10cybe3hmhd4ugd14prcmzllz5f0w0bswjmoq08gpinzqh7h6m4f6omg42qkakrl\",\n    \"id\" : \"tjko\",\n    \"ethnicitiesTop\" : [ \"8bnfw5s6gp7n8a6be2mbrf6x0hqlvxpi00pxv5uzo0murygteyzg06aorkiwimgaash631ckz4023cnzuorvzxgg3fz2wiat9\", \"wxublh64g0ab7sdvdqgy71jve8jilqsx8cj09uphgayjjy86jl1k95kahcgh4i2civw82ucfzd4yxsdaxlj2y3rcw84hf7ff93mad1cv3e75qyg5u\" ],\n    \"script\" : \"l2nt1l1hi8xq1w6l29o4ldl7vmct5difr7i4dpphl4bfse5jmhc6llu22qlicwh5h7sjzr1c840l7niasdga6ia27erl84w2k07gobm6haoa2ow9wksqv3psfz2e6afcuj5ofl3kabfkv3ctpzk3tk60zxrdthpa8f03s61qsnamwadd9bclzdu\"\n  }, {\n    \"firstName\" : \"Felipe\",\n    \"lastName\" : \"Anderson\",\n    \"score\" : 93.15348583842653,\n    \"probabilityCalibrated\" : 0.6933130773553529,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.8299957463887355,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"o7u1gz30u6vxm001aakds6zrf8ll0bha8rsfhtd176lwcu0ern8euiqyfhnon3vdb7e9385r4nw0wluzlzhwp8kbaazqu37m13z5yjn81o3kz24xtpjwax\",\n    \"id\" : \"a09w\",\n    \"ethnicitiesTop\" : [ \"1j84kzzvuaepdsqu00ovcjnpoa6hp5hxflak3nbs64k1pbb3eidliiv459dyu0gk6smgcqtdf4o9cmudykt7gxi4a91qwor99y4vjzvedo\", \"e9j8ykzs9akrp91gd7fjdodyxmtpk3encqr1b\", \"slz0otcifkgrovp5ejd9dfchpl45f0bajhysjisbxnnpswh7pooxtlag8gbd4k0c8vmegq6zi2ssw3i2cplx9m0wgdm538bgege94yh4p9ulydql7ju1tb1eovklq1l3ek0iho9ofs6p4qwx5mpf1z1pkrztryoxv\", \"0hkxwdt2ogxnd80msiixglv4q51izfjlsu4zs3c5many508p7aasqkn12ntfwcn6rdo4tfz4dofi80hdqu8t0v94s91qhjducfxlfzt4288ml362mq9j4n8tzdtwi4llvjbev1h3g8vv776cuy46fwsrbec\", \"a6h1az9mgt6pnqb2clep9jceto39fhbl1gk1xyp3nsgdkh6fw12z8ecmfxvjzol9zbsicl8i1ke7cdsqwzzos36hmha5qu1dalcs75xe2oj7gnq14uuo\", \"yeovonzujpg3memt9tv9ni2vnlqcf15yxxpa7yi738k5cr3842x6nft0h7mxcla2lmiud3ma3yaqpgoutcpbrekepe27y750oe6hk75op0dpl5940zjkv57kkkl5x4snr07dyzibedk352p98dfkgt7aaeagam63pgvvipql\", \"rlpyiyc0alq4nwbdbvgd0jfa658h\" ],\n    \"script\" : \"uzjmgujsg5xqsq68yzqe5w5x4zlq7kliys1iw4v6wf01ae24hgz\"\n  }, {\n    \"firstName\" : \"Akiko\",\n    \"lastName\" : \"Lindgren\",\n    \"score\" : 51.26219974844574,\n    \"probabilityCalibrated\" : 0.561838573253399,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : -0.5977799340794727,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"ck7b2w0r6aaf4fivnexp3doi5c2ot7yr16pjy1ecu7ah1om9svdjj5jo38y4hc5t6rz18er067259y9pn16ec3qu761pirulrfhxld6dfr44ckk9bz5gt9q1p17f4psy8x2ff8gd46jt2yepgim6mpucrlzt04358d4m41z8ihmmj0cj4hlo79rrvzrg05wwjlpj\",\n    \"id\" : \"ay9r\",\n    \"ethnicitiesTop\" : [ \"jszlxeom24cy60td92a6ssv7fnom83o8zkijx3r5kp\", \"q55v7b2f6m4mhmydyxmxlnm5i01j9jr38vicc2808te106r96lie3uoighk3z8y0eqfncd37w6vuzhtsgr\", \"6cj2sxpfo7oqd6x7a6ie7vq9u89tpl6e028p0hcxvc5ms1jrki2anp3m1t58o0m8q1dzh6cuf3amygmuoiogvyms4n0342\", \"n0tieaoldr2i2qmdhr72pf6lryjue0msvaha86o6oek60xsmxjy0fejpdrf02kc7wxdjrpqha938r5r1p8nx0jk8g2aiqyfobb5tnpndrun00bwopwf\", \"7p721p2u4xmat99wr31j54b3xhlsakaeybd0p8ezpvg3fx6lsbp8dvq293yegx9clm95ag85gqlfyaaoj3m8ko6z4ewciuvtlrnm8jq750l5wzpotp20ab62g8n71pd8m4rlrq1ocgs5txotubzjknmrfvru8ry343hh\", \"h9xv0sf14jmtj3li82rkj6pm2przc3pfwfz6oxld7dvoi115btvsc0cec4dv7zkygxy3vdzst363t91t1qr8a4oal2yhb2yj4aj712rnrqylcxithw1ta\", \"j52wj4x5zpsb9c8niat6d3vaxc80jl2clvj1df3wvovizfs5i0uk4ez5q38ozhral1sdqfqa6w9h64zwkfs36nbot9mro19z13gogaogqh4slj9gz1rvgqfm3u7c9n8bkag2rnnme7csijy9b101yw3mqyy4r2cyi4foo80oiuwg6x6ixvmsc5yf414u\", \"8fmqhp5weqiz6sf3m1xxf6jcvyxb52mz7dh1drt1n68hgq2ua4fooa39bpvdsbg8a8kt45lnj1undt9ijeb79wrhbi2j5t5tcqeh0h4ul84se1ow74grupy8xf8jv6se77mq3dmdzaikagdgvji7sh65n2o1aumuhdiqgh02bv0sa0pmy68wygfi36xsen77gtdc\" ],\n    \"script\" : \"30uj0mpq0gej5libeaz6syuz6rn9lxsbxnaywdhzlrcsftx3wc3i815vte2821o379moxosg6s6l4a8g7gsrkix9hoo1w4ab58a1wo94zlwbgppa7qqmcm0xcqo8\"\n  }, {\n    \"firstName\" : \"Otto\",\n    \"lastName\" : \"Legros\",\n    \"score\" : 93.97297082023748,\n    \"probabilityCalibrated\" : 0.03087846755362289,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.1675712601399053,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"ul0nurwlnkv62yryitle7oaimejjfqpir3oc95od5x4az30vyvs2plkjwi398k3eg2nrnyjbcslvp0p6hbo3hf2gw1u5cdfat9oqa3urf9mnwq2lpbh0znmgrcqzfwqwt2hwgr4tavj4x08ampeg7wc8scwkxijisrodzi9ky0f5iuamhaoktvuj\",\n    \"id\" : \"9t87\",\n    \"ethnicitiesTop\" : [ \"jofubbd4oxzdl1snblam58g9j5ozlsgc\", \"ck7a5zoxlbjh6oghlevi06sx8d4at2m56wgnjgte1ukqtg8opr4tcx6c58bqc5ljxnmumj9lvjzj9zoe07n5asoluw242hqflenfwb2r4yiuhsutnvs5e3au80bz2hn9v3kcvxutgka23www12mag6x96wu066m6ux4udhw9h8ql538fi8pw0o7skd8i8\", \"6a421pq5x8zjivbm6lg82nhsynhws9hmps6h0ii50t5ot8brab1ka36th11au0x5jfg75x9kb9pcya9srsi41tdztbqp8j8psf\", \"sz620522ks9i53237h5puzeg0y2se9azxgikirb9pemmfzy93407xbaxnn1gr8sn9dyj24cdjjdv97e1h16nkcjhgzk87sgfeor9hxviqdp6bgrzii328o2fp4i3cwdrnbo9uo9bemmug97mo5y30jxpdho1r1dfs0ak7he53493lnfb5\", \"cwrwgbmoub1mmwcsoit\" ],\n    \"script\" : \"xjqp379zjk31bnfrmsx\"\n  }, {\n    \"firstName\" : \"Patrica\",\n    \"lastName\" : \"Howell\",\n    \"score\" : 33.628004740077586,\n    \"probabilityCalibrated\" : -0.5233560058521527,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : 0.5168274051416046,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"5bpme31xd9lu46f22uw66loancmfqfbbwxqkuc3cfv61tetdq6dc6i416ircbujalbskgqz5s6dptxot1ist3igf2qhlet0gcb30nmg7386c822yg4f6juo663xyih0xsyqltbvo62ghe9zj2qkln9aivfy4bl54x9mcxd\",\n    \"id\" : \"1sk9\",\n    \"ethnicitiesTop\" : [ \"4e4rfvdzp3530gbsw6ln2uu6po0d25qvgx2mzahk0rc6bgj397hrhvbnzpd97qbkon55d7z56qo4k7iv66o7zgqthwey5v4gnz12h2dhmavhsgy0japemp9ls9fzsgpym7pof9dh1t333n\", \"leevmcsqdk7mhdaakej13isfexdtktl4xzvh5446rriludz50gs642pjuek0qp6jpit7mxgq1ach321ih356qcle7snqqo3mxh6ltlkcz59uyodsfnytbz7n7ha8ityhwocdu1wbm151xuh1kgi6c9jo2hv9nissydj1oo93d1z66dzsxbah5s5oj2c2qxqgwa9xd\", \"ft1l1my4tybp8llr5mz84a6xjw54461e0q7n7f9xgbf5k1g2kkeckerw3zge8e8nq2fqljpz6hzmlqtvt\", \"kvqivjfprx37os434wtqwa5n\", \"jzbkafh55jz6rphkh6yhn1f98ds6z20zg8sdywprvcvgj27rnxlv1wfd8r98lvpvpy9pf5xiqoja485lajoy54blqlc7en585d0xjes3x96pm27d8odrnt5ggmldyhr1k52fnheph0evh52kmblgqghf3o4l9x7rr5fxkp3im9l2t0pmzer34p5tqll7f0el67fm8nc\", \"mz0jzph87cu4ydluqjfppkchw9kwqjvb6pqpdyouavk95u8pf6fhsbg69ffywuxa7j9v2jyqqjkm407s9va10cdc9i2qlwiy5g47jdjq88qnjri7npjqh3jz9kc8wl5h7ghee6k50leba3ef3dkkcwnvhp7gp9qni8b0tkcwx24b24enaacvw7p1lgdmccqadk1tnh\", \"nkn2ufj6q9sii3atyt4xqr0z531il2rvcja29h6cey7o612tw91hyql9rl55c6erqq64gfdebq5qa46p7qpfocrkkatmqhbh9galxawnikgnese6iaw160uoqx8l6rzpkxkepo5fyihhntnajm9gmin\" ],\n    \"script\" : \"foheeksswybpjatsjaro81v1e8m1ul1cu6fisiw17v1swcp29r5us89v7cnzbkok32hqnewu67d1iyky3chdnr8v9m7r4ptz71kdv1rf57fd2n4ah1811rodwkn9ccoqt9ss8vxr7iqfcws7siajifppdtu6xcqrl51a9ouwg87ckxg2vwq391r08\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f08ce02-d19b-45d6-b51d-af2ef2b0766e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.450305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified diaspora names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameDiasporaedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "76d3911c-da0f-4fca-b7eb-dc691e144f3b",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diaspora/vdoa9y377lptxurur1o445w2bec5m94bw4yhxpaomrjyewi3xfhsqjf8oxaonqexi8qynylpql0kiyrcci1g9lcs8a26rhreweoe8ye9/Shan/Schinner",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "76d3911c-da0f-4fca-b7eb-dc691e144f3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.448805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "4703d7e5-3824-40d1-8dfc-8ff8eb7c5f86",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diaspora/805jhhhxb381eodataj576ysgskqeedp3ogw0wt58evqw03xj1wmd06ahslx0ur8yfimnw9qbkni3u52ott62tz6i256dvvn694x/Linette/Quitzon",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4703d7e5-3824-40d1-8dfc-8ff8eb7c5f86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.448733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "6ab571d7-1691-4193-83de-8f6b854bb98a",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diaspora/ce5fnpbl86s4uli1a6x5usw4ai3v3is5jaiqu0t5yah0zaje5nm12zwtdl0u17w2kpnf7fscv2byibab4ddbptn0o3wg/Cristobal/Johnston",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Stephaine\",\n  \"lastName\" : \"Kuphal\",\n  \"score\" : 15.810370035514998,\n  \"probabilityCalibrated\" : -0.2786675133494805,\n  \"ethnicity\" : \"Chinese\",\n  \"lifted\" : true,\n  \"probabilityAltCalibrated\" : -0.6391479677734313,\n  \"ethnicityAlt\" : \"Japanese\",\n  \"countryIso2\" : \"ydt1r43ton4hbdm0cp5zup8q00p6whn930uvgdees81i80swnsxk6wuhhwuw8g95wsj817pwjkwnqkr5i33hd9wioprrwyv9zecbm9mes64is95771h2ddw26m48y39bqeebvf4t88ms3z439vsz3e88e0gp4wbhtrp1bp6w1nlxvnikth7w7mbxobb3f7dzarsu\",\n  \"id\" : \"z88w\",\n  \"ethnicitiesTop\" : [ \"c0swi5td84yhhatfob5lchyz8vuxqhbca9bc84p5eyucc18ivi8s53uuje6uh5eou7m11xa0f3axob4pu8cfja8ms80gpj83pdla8qarc53s3a9s9dutpe405utxsvl8a9fxbezlkg1hlhk4cc5193u3hs8q06hcxsp88l3q0tjg0kr1w9q\", \"gi961m1kp5q352sr1689ir8wiwsei5\" ],\n  \"script\" : \"3ptht9r6axaxqmdf55eo1u9u5xvgma756dih3le7i651qec5d5kddp09rxltmer6vg2j2k2y07fp03ouhly6k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ab571d7-1691-4193-83de-8f6b854bb98a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.448645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "countryIso2" : {
                "description" : "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicitiesTop" : {
                "description" : "List most likely ethnicities (top 10)",
                "items" : {
                  "description" : "List most likely ethnicities (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ethnicity" : {
                "description" : "The most likely ethnicity",
                "example" : "Chinese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicityAlt" : {
                "description" : "The second best alternative ethnicity",
                "example" : "Japanese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "lifted" : {
                "description" : "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "type" : "boolean",
                "xml" : {
                  "attribute" : true
                }
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameDiasporaedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "ca2438d6-110e-4b65-a487-df40d5ec0ea0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ca2438d6-110e-4b65-a487-df40d5ec0ea0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.448251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "508cd094-bee5-4923-afcf-5af6e1abcc2f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "508cd094-bee5-4923-afcf-5af6e1abcc2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.448235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "f7d07f27-b191-4b01-9f6c-adeb51b0c781",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 400",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f7d07f27-b191-4b01-9f6c-adeb51b0c781",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.448218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "40497da5-739b-4fab-b183-b0f9d1a2ca9a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"country\" : \"Antigua and Barbuda\",\n    \"score\" : 18.88918148362475,\n    \"topRegion\" : \"j3o0kz9lnef3cv498geao1k960i5bdyafj5bril5keml59oqvwm0nq59urg5whw9m5ps1s8vhs1nsj0i8o36jarakxgjpe8yprc1s9qjmszazdgcmux6ei6yy36z8qenzzmxbyj4otltg05hyvw3e\",\n    \"probabilityCalibrated\" : 0.3411754313729005,\n    \"subRegion\" : \"y3i20ec2i2bo76onrynysbxlw5z9nlwnwj9thu9h3\",\n    \"countriesTop\" : [ \"3qxcien1uocepvwy7496ion5i3he5ca2idr2avut8z8yqggmaxyx3q0fdj4qf1gfm6wvswljsl84uq9pwjlyannvztmi8y\", \"6otyg77t3jipgdzp2gzmqquvdoacsys7fw3x9etq8rqgka6yz2nat3pb9mb58tkmkt6fehembg1zlg6iuaq61mawg2wsqj9lz1i8692mrt5qezjv4booefb7f9xgzg2h6offywactnn9\", \"zhli9zq7lvyysrsl38bnqakiztqah44j\", \"di66gp2191zetpceg4g9svn2r6mlg6mitysc70hzb8xtldqznwnsn9y\" ],\n    \"name\" : \"Elmer Emmerich MD\",\n    \"countryAlt\" : \"q0wnxlhvlg7kfl2kqrmchevzt9o3t98tuizz38hmqmmfqzqqil3xu3yn44jolr6mvanecdxdx3rjlcbdokd3kx4\",\n    \"probabilityAltCalibrated\" : -0.31816216362521654,\n    \"id\" : \"3ch2\",\n    \"region\" : \"khl40x7drzl4id1k0kdaetdwl7p0428djypbnfnc4hcatxipo7yd2kz1xjc3szdws4g8zvkbbhvnxs2aix1gzepvk0l3010gekkbadnhskoblq9nsvelp93ag9lpv8xbtsn1mxdekdp8nrfhycc5ejtllj0c08uc5qxetyhhiwu35rsqr8szxhji2oqd\",\n    \"script\" : \"mjmrc8om3apaaxegn789dypiftdkljju8o0c4pzi587ak6j3rqtvkotbwuyib6thcx9vaskqnakgau8n0jigjpxrv2z6uv5gz6w006gv0dceg\"\n  }, {\n    \"country\" : \"Egypt\",\n    \"score\" : 87.82379893600232,\n    \"topRegion\" : \"zrs2k1tu27j5poon8mxcfvl6ku\",\n    \"probabilityCalibrated\" : -0.7198123598572623,\n    \"subRegion\" : \"pyrhsajxdfu2zqkwc9t9ps6ixn6zr95ck0ucv6d8\",\n    \"countriesTop\" : [ \"9chacgqeze7ric6psnzl8\", \"tj3ibx78sr347x802lb12u65mfv6y1m6fbekkfoxzh1o2pybuehezed7a2y1\", \"jbqapv7g66hmw1ii22yy7xgcl9p7tqepntkoarhko0g2p6ig9ux5vmmczy854i8y5kkarozo9fvg7qu6ronqpr7xvpom6uh7xz\", \"y74enqj7noda8a0r4jzid1mphmq50m60xyq3872nulrww0uf54qxlp9wtdu89fmc72epxmx8wkj7cfmgbv0mg026ioo76buoyab9uqh4x4eu91bvoyykpixvbyew57lqevv6cbdls5dmghdmdackwvvdp8h9o3c\", \"s6lt0xwypjnirxjt3yhipvz7ov3dinxe\", \"436t36ypl9e1l5389qhkd9k80rt1aimnp8p2jnvfykoh3hfu9hnvy1qbsqbc63b76u5g33qz8ofunju74axci2fqs8l4i9liboxmfieaehp4syzkkiicv8r2uhzqlo3n4yvl7fwst\" ],\n    \"name\" : \"Taylor Wyman\",\n    \"countryAlt\" : \"s9spztth98wq43sduv0jmvj4q7a9u19j59iunh3dveiu2pg25iwz16nilp1yam9rf8twurtefwbp1ihxntcjid8gko4zk9cnewir1gzlyln60fn8tgf3wsj1vr0912q8ingrgz\",\n    \"probabilityAltCalibrated\" : 0.7448709115614489,\n    \"id\" : \"xxxv\",\n    \"region\" : \"4ivqxfhpa80xdxc09khyry0o4mu886j8erq\",\n    \"script\" : \"0kiuh86nwyk8riujpdbo09aq5jdcn3rcnoaslnrjh6g19z13j3c2716etoe2xbkz05gf8da81h2mbwla8xreia92ai3s8bm3j8fx2vf4hzj5hed92uyzzaguh\"\n  }, {\n    \"country\" : \"Gambia\",\n    \"score\" : 57.47009857238731,\n    \"topRegion\" : \"hxe00l5mefk2kooo5rh6bc6axhjvq1xslhwfkp3mgjudr7409z9i1d2b031i\",\n    \"probabilityCalibrated\" : 0.9516115498180551,\n    \"subRegion\" : \"ikyig6fqyxk9ho75qng9aaw9uccfywf8dy2yo1k75xt60u4k09osfd1wzpkyj9hojsu102dtb2bbz7z53zhkat4nn9k79aehchicbxultixd62j6r7hbq8t25znfi8fngsmyt14bb717uw5yvoj2nipgc45xtjvm632s237v0wa2y0wog6\",\n    \"countriesTop\" : [ \"zhcs2l5e7fsh4wr179ex3ld58febwrrpebdg7bgnw9jubzcgjm1079e1c77yy2fmotb7w5krmc3gamz4557pltbiy6sg833hj79zlxu5lgu7f9pr9771iijfac1etpkq99t4iwiydh37hoa3y37j5g356mzz1x9wbny981bvmc9\", \"lufi27p4n9bej7ewar3z10rn6h5l9r9c1dfc4z769gw3c1csljjvr4wworsfd3uu0f8eyntkcadyxwpgxc75\", \"dh6ouno1d7x23p0lvb3jrstycum83k435wkhq4phbk11dg0bqz03r6zvg1g6kcdeonh5oomsc1pvmb3lu0pjquk4wlchxby014z3l4kh1xxk4e37xinwskcfunkxd9bfskln8onltmshk3uhdqklk3zy1z7n\" ],\n    \"name\" : \"Ms. Bobby Muller\",\n    \"countryAlt\" : \"2nxod2h9b8n512zmv5bveyh30rtrd4srhnsu\",\n    \"probabilityAltCalibrated\" : 0.41048886729383005,\n    \"id\" : \"kel6\",\n    \"region\" : \"szu1nz8mgylad8zfo8g3yxhv67fguy9xgr2hm00roljsosco4ty5s52dn1nuowoty53p0aoqovynmnb0dq2kbguu21mzounin7rgyfw3j6u6ddryjdo0cikgajw2v8ur6o4zjw9iikchsqlk554my4xhxjhjbzs6hwss30r78j2l4lk85qil5ew2lqiuzfdh\",\n    \"script\" : \"852xkm3dmum4mwbd6sq84946t0mx1ka71e1ibxz6ww8iix8tpivdc6nv911ftduhvmq151mvcy3k9v42zt2n19k6moxif18j3svzdp52rqeyzeiiqndm1nq8snn\"\n  }, {\n    \"country\" : \"Saint Kitts and Nevis\",\n    \"score\" : 94.41641088032507,\n    \"topRegion\" : \"tgirudnhm6eanvzrdxiuaeff6\",\n    \"probabilityCalibrated\" : -0.37871529745461796,\n    \"subRegion\" : \"8rmxd8h5ieg8z7jlz1h65at0kxzoovzc14d7c9s5k7fb6l3wdueloixno1ka9r84xyqkclezm2b3h8tzbn3pggh9old3zapibzo5oud7zf2n8gzltbb0o8186dvzzo7x2ofueivufbwvuwjubf385yw3lld6do3x0zve\",\n    \"countriesTop\" : [ \"awwbtyubaa2akz3n\" ],\n    \"name\" : \"Burt Zieme\",\n    \"countryAlt\" : \"d24uuzhp3tjp1w3sjbld3qo77ergwvczaii3a4injgukddpi5h8vqqyh95ozrh4c9i3wxcn700usk9prbrx3bifktuwkkkwd74pgf5op\",\n    \"probabilityAltCalibrated\" : 0.9053760406217572,\n    \"id\" : \"9tn8\",\n    \"region\" : \"wv5do86u3d9fc98q6x1bgikx9y2dzmskn8wlr4wxk57jvq60w30kjejrr382c85y1bhmj286d8p1cx3djdk31318fljaqniftod48ypdlqblsgdoixlk2fjo5fw6kvg9kmcr2jscdyh2de3m6ufpa3koo28aik9f\",\n    \"script\" : \"qv88d6stclwprddztm6say9u41rbu7sw0n1rmqz2vld19geawn8e9npgjeovkp8g52mxcyoyitfamhlicqgpk3k0vvo542hc1meqzzv61vlv5wcr672lm20dq2mecz2j56qzps4u8tso7gmw\"\n  }, {\n    \"country\" : \"United States of America\",\n    \"score\" : 99.36528943953893,\n    \"topRegion\" : \"l8clsdmf68g8y6gsqjsuzqvrh3n1rsellw8tfnb0n3t3crfr53a99jithlwitau245ukm10gs49jm09rm5poyub7s2ed5rogj68mdx5xpn2nee4j9ryl8y84dwy3pzteqtsnwpx3ss2br4j51jfgp3z9t1kecw0pgorvbh78i36fdy7aqz4f\",\n    \"probabilityCalibrated\" : -0.803306574982432,\n    \"subRegion\" : \"th5aun1cy8swd7bd85z8b2z89mc1l66rdmex6t7fe69yapo7w4zvqwpeyt2ux92rr4jxcyxyxxvb6rq6tllmhmcu4re7rb2djmrqxyv4fbyx7y8th\",\n    \"countriesTop\" : [ \"qz5bzfdum3jlmsc8oiqkm1m0y0vgu\" ],\n    \"name\" : \"Shu Kohler\",\n    \"countryAlt\" : \"j2manm7gnnn960tde1ljpfgjb5bxda7msu7qzk3t54s0b9ory6kcif53o509eaascqpdm5d11fz28osy1pxa80jgc3efc408m9gb4nc0z2w8tncwua6g03eiorfa5hwv0wnvlltbeh3iajdvmcmsgdnusfxrkimb3jkyu7udnpkb4lqv5o8ges\",\n    \"probabilityAltCalibrated\" : 0.6383532637403915,\n    \"id\" : \"6ep1\",\n    \"region\" : \"gqin3cb6kvhtar0w444z6mi1bmgodzb9v74ydtl25ozrzbt0aph2736av1qqhquve4x0p82ozaxyc6h2gzn04dgipat7aacfvxg6f1yw4xm\",\n    \"script\" : \"pi5fj4c0bcvn9d6tw1u2mfwt\"\n  }, {\n    \"country\" : \"Eswatini\",\n    \"score\" : 43.265145597556796,\n    \"topRegion\" : \"dqujqsse3o4ymd47vid4ut4ha74akwhpm4dazs5xlfx1rxqlpdoct3wrcwyt2mcz750yr41ewe2v3pnz9ogmltk5w6butl\",\n    \"probabilityCalibrated\" : 0.4404773445069643,\n    \"subRegion\" : \"3ckjbxi5zwuwv9vc565t5a1s733k9k04nxippwdq60v8\",\n    \"countriesTop\" : [ \"trvkrenmupprz5gs4v5r6c43v8mwulbasb0ctzfac9acoylmoeb4jltvxdrftcg0r34ctaxvr7w9m7yu35fk4mqi6mnxt7y2b0uc\", \"98l4z5kiyh0v22lfwuvti21p2aiaa80x\" ],\n    \"name\" : \"Mr. Robby Nienow\",\n    \"countryAlt\" : \"4w7u8812j1d8ym4qz767tirgxzimuhssfawv5hzibz379ld3bso1f32tvetsinup272yjbv4jp0xde9j2a4sench0vkohl6airm9iqhzmjz48axevtpolar4cms6cjqji1gfdqqj10t2sc3z2gd4romusyhm3y4oyuj7yfwtakh9jg\",\n    \"probabilityAltCalibrated\" : 0.07560034380004743,\n    \"id\" : \"k1v6\",\n    \"region\" : \"6g8q1dt1g8ko2oxkfh1xgd2trs1c740p933cwtunkphkdj8q\",\n    \"script\" : \"8vgjps9nbs6n3qxqdx78n946bqnnyxl6uu6zc0ncogdc68rvt211j\"\n  }, {\n    \"country\" : \"Ukraine\",\n    \"score\" : 4.702780498965509,\n    \"topRegion\" : \"9z1b6cew8jeohdxygiwdd8xg86stj6jtk8bds758u\",\n    \"probabilityCalibrated\" : 0.23563370366048453,\n    \"subRegion\" : \"nuhnagnkic3wyh5e1k5eaf90mpb60ps1dlpx1uhdnywjcv2aoj92uaqd9nv767rh0ttkc7z8d6fonw84dukm5qlnlzv1vw1688skz6dd6e9zbwjx5pjc1ez440n7eqq4ysry9o2059htk03t5886qii\",\n    \"countriesTop\" : [ \"90zyxdj5crz5jv7iruxqg4ltl8qd2yrj0gyckenjqgrs1zgykxgy5x8mmrmt10w4d7e13k8bwesrr1227xplryj6m5a407pmt5u92w9hd0bmm9ioeywcna0a6gcpse1686pxzm3gir2\", \"obr91tj7elxtv3mkxnz1izm1vq2kuegj48s78mdhmzaw4vqxvd341wb77688mqzkgugj1pgkgi32k80lb34uugo5720hkt57l06xq8s6mrbuxbd4hatgffwveda\", \"act5wfpa9vay2xpfk67o2tgl8ej90ukb3arvgzlmywi6staemretokuhmx8iv7g0efjzgyn3tihxivey0igaa08nde2049ldgh56q0fwxlykjal7fzezp8zpd7wb04391m4fc89b3wjllb4jya4oep29jjnwtdb84g5tc6ih2x6hv\", \"996769ologrd7cp58po3wxl2ei1nabeyfvxlhzf3o5tvoyh4ugi5z28ik2htikccx9t85zyyp45r8ft1hab26azhtttf0igx88kvx47mjtm78i5knzvgnqjr61wkgg5qqcd6vrv37hcpsc5ob8ltjxorlp3w9f9vci9a3wywguol4xpf1vtpt8y\" ],\n    \"name\" : \"Dionna Cronin IV\",\n    \"countryAlt\" : \"8c5zbniufrs7kjxbus6xzv9v8wcqs8xw2r1voa60tpdz79uvxyt2l81a2hm7uczlzyjj0x32ry9cx7ncimmqvibgu05cp3lfowq0hcj1pboii7qnvcg49ezic1tdl8998\",\n    \"probabilityAltCalibrated\" : 0.7391516477389461,\n    \"id\" : \"2x71\",\n    \"region\" : \"nwmqo75zmzdfa08w02wc3tppmhg3l2r1fkj73s5lgfpavd44aau3cd4p0q4wdan87qb9lh0p4ml6pqnq63poxnmoadi5k8dqwfyujcjg1t5s6\",\n    \"script\" : \"qo7jpyriqky7i75fuzhkp40zgtk2mgb3v409n1qvdfqdyqtjt4p5gsdflb71wq1lcg492mldspvpkw6o9vqlbrnj0wl4a9l2x8r2leozl9jwf03pkoc08brgb7tjbhgeqihhwrmlv0ol7wdc4mcc3e9fl8s43pa53cvetllj20td9vg9r1wftmdl\"\n  }, {\n    \"country\" : \"Libya\",\n    \"score\" : 11.330812537894086,\n    \"topRegion\" : \"n7tbz2avrewdr1oap4g9oob22iou7hzjphjgp2zlzeshfcbtxil7em\",\n    \"probabilityCalibrated\" : 0.48584118164451806,\n    \"subRegion\" : \"6llxnaw4r5arekki3ynps73j0uynjz1mx9kjsfcbczrmnlarq6qljpqq3hlk4lh4wmgie3ro3xxbg1hf3a9gwz6pv6l\",\n    \"countriesTop\" : [ \"snl72qe9tukmstu0ydp6vx4ujq1ni1zywil2gbje82jtbyq1ktymb4t\", \"8q7otvser9iwdyvsd2jtlah4xelwprqc2qnblizevttar2u9epyvmsyej1uvylmwgffeb3vc8b9i1wc4d2cb3pkz08m4q8sfta7hoeziujnfbwz5f68\", \"2vpj16fgcuon2wgykhuyia3r29dhhmlea8ln2b0huivr8px857tzwickgs2x81qtkrqydrq92do0m81oyj2x6k9ww0gwh09klz1kgcazq64er3zgijnl\", \"ijpsxj4tmuim8ub8mtlqcxn5apqe1ti6ci4o5el7ynru1i3brc50gd5dxp1a8gt0l6n1y0xp5uc4iygygl059et6dherdyad8qhujtue7z6hbqvpu2f8a4w4zkh3rx3wy3f5bxj3tdcq4uy0gp8j1ckk9mjcfrup\", \"61wnx9rl30a6ekfz8x5e88uzbzfqmqslc76cca373fergkogocnbp6hfywk4d\", \"6qq2z9jd3xi6ao0di2o9orx5qh54ohdjs8cnhwaeb0b6yeu5j1lxgya0cgj0g7uozjxj332bthnb6akh5hmemgp0w7df7pfpf3rv2w10qr1wk3476dey6kunomhcw\", \"ilwek0mo84pm683j6zvmbkxa8zeom11wncpfhnnnwyokyx50dfzf7tpxh11g6bbqk35k55sqf9sgitj0sys\", \"nyyced68xbzw51v47gg98auyaol\" ],\n    \"name\" : \"Mr. Daina Schuster\",\n    \"countryAlt\" : \"fu303do7iry4fuy6pv0dzdobj11rscgbub0kcvk12t4k1pmehv5ia7182qa82vee84zrma96p6ucxxz1dtzvrbgq2atng40bb\",\n    \"probabilityAltCalibrated\" : 0.4841410399768593,\n    \"id\" : \"i121\",\n    \"region\" : \"bazlyc9hir8z3rriqy5qesbqhbnzmg8hed3h9knezuly1erlrt7ib5kufu1ifptpml8610og7bszwiy0gmrpy9a7uwy9kl4ax01kplozf7wig3901le3wwwruxm810pn1v6b5yyd8dhmeq87dpmcg4vangl0tjjlv2r7uzb7t3fht5fd2nd0ff39xn3nkdjok9ooc86j\",\n    \"script\" : \"9bso0bv8i8t6yoz29kyzyko5vwe6u8ou6qvuex7aklcr4qr9s6v8wwnurvkhcxqz7174obxnbnxtbjuz53n0wchkep5vlr2l17oibv43rustw87eb\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40497da5-739b-4fab-b183-b0f9d1a2ca9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.448178Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified geo names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGeoOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGeoOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "283eaf6b-dd58-40bb-bf37-fbebaa4eac98",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/country/1fz1ne1fyp0ymf2zebty30kdqsrq6gjuro31dieni",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "283eaf6b-dd58-40bb-bf37-fbebaa4eac98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.446137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "10f80c4d-e459-49ab-a089-a4f7749af840",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/country/dxeh43pu1h3rgt9mqtmd1wyn7wvjq2ez5tvyyyl64edcjyd26r3btikw1fjrmivvkvwzdry8u5b7pn40oygw5sy3xn8iysl91r3l2vxyhedw12qlezywzhjibjg",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "10f80c4d-e459-49ab-a089-a4f7749af840",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.446106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "2a674daf-da98-4b53-87b9-25af9cb9d3b7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/country/uo5wbeu8h5nhdrr8yzr2nb4kso21dssx8q4rruwfvgr41sftmp0ren0jdv5vn13mels6ffx352wtx033f6g53egpd380n0tvox8ttiuv4pazl6bk7f6qb2tupfvgsyks3nkp1ehdlq6ntefudei59kf5satn72a",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Uzbekistan\",\n  \"score\" : 55.08789523951242,\n  \"topRegion\" : \"5i15wlrlmot1zyzgtc1v390n2wthl2rad6q29781pufde1i35fltg1k5yjzh8xcnil6jzqebliizmx6b8ua2g3xokukpzfsd3qicb1t4716dk2fxppq53s946ekz54zdh8u6r8vwfridw9pscsvu288tgv25g5h3jc\",\n  \"probabilityCalibrated\" : -0.21596285312156827,\n  \"subRegion\" : \"arkdlyl426uhen80t59jt7csjcobsziqmik4szps0cft8m8och68dad9c90b61zad3fc14x3hci2lco0jf5sadsjisufj574uorl6rwyxtciqy9sz7t3jitzd0yatba0x9d7\",\n  \"countriesTop\" : [ \"jj03j65xllnb6g71uue2vki1m8yim3kz228hwxdu5loyjucdi1m8mg88uallbia2prghwjz5pgqnnwcc4dbmylvo9gb5y8heznwetg8mvn96izo3kp606nz42cceasunxlwygsv219tdwxrk1a8qiefc9m\" ],\n  \"name\" : \"Lizette Zemlak\",\n  \"countryAlt\" : \"0zl6bcew0kbtdsw09hwnfv8h5x6u85v2ren44w5palpat2xjkgs6li8k800vyyyhtqmtk7\",\n  \"probabilityAltCalibrated\" : 0.9353517899871135,\n  \"id\" : \"00wl\",\n  \"region\" : \"0aofzyogv308fmq\",\n  \"script\" : \"hi19k4t9aqg9cq8o3arvi6yobm4rq8fst8pfdn5gaxl6uvbn41welylmcmafyliot2c4ytbdmblemke1z41ypvtnxud62ci0819wrnx8fuc0i6up8t0ks2ikzeeqoxd1zh97ocrclgsd4wuc7lvqouophat1qtrz2a4a5s7u3jrajya9mcqi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a674daf-da98-4b53-87b9-25af9cb9d3b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.446051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country",
          "schema" : {
            "description" : "Classified geo names",
            "properties" : {
              "countriesTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "country" : {
                "description" : "Most likely country ",
                "type" : "string"
              },
              "countryAlt" : {
                "description" : "Second best alternative : country ",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "region" : {
                "description" : "Most likely region (based on country ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegion" : {
                "description" : "Most likely sub region (based on country ISO2 code)",
                "type" : "string"
              },
              "topRegion" : {
                "description" : "Most likely top region (based on country ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGeoOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "3824f855-efef-4e1e-a881-ee7fed96fb4b",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3824f855-efef-4e1e-a881-ee7fed96fb4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.445549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "235e47e3-0c3c-4660-82d4-8996e2d32ff2",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "235e47e3-0c3c-4660-82d4-8996e2d32ff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.445029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "fa1a7de5-4679-439c-b734-7b7185a848fb",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 400",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "fa1a7de5-4679-439c-b734-7b7185a848fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.445013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "c5267752-7809-40f6-a3ef-1c01fdf41b78",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corridorFromTo\" : [ {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Cleora\",\n      \"lastName\" : \"Heller\",\n      \"score\" : 29.38546254158195,\n      \"probabilityCalibrated\" : 0.5279584573751166,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.36101192972984286,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"8lnesqh50ovk9zu2x0rs72c27gxq837swjj6pzwsxly5wrm1ulnq4t3vd5s3uvr8jmr8ah08haycf9c3dnthqeha1uy50j8j66w3ui0ou1zikkfls7tj2hq0g009wu02wdh1f\",\n      \"id\" : \"zz5f\",\n      \"ethnicitiesTop\" : [ \"18n2vyze0onmhl4vruykdmcsqiojzqgmgfmdu78w5stv3jdj1igtkoryo4i7jeyg2xbiqceot86veaxv37ug20pukca765sj2qqyqs5n4lipz6abh1wu21624ewpqm1gjyc\", \"ty4x1redhxt902pb3t0ayd9mro8lfs0yrtztpc9x9ef2jej0fgvx9pnfjw9ms8r06lmgo1717yksfmypu0sp1bnazqiwvultqrni6xxwisqtf\", \"rxilx9kee6r8eyfm5kqo9b79vx6jz038jo7lfwx7336l2nspo0m6bzx3yjyrt3t1eia4uuezcbwe0c7g3xx2vlj6xbsx8zyven7dh8lhcsqq31sv2f5pil75udb0ez3rwbq45qce3c05lsn99fx5opqhldv1z5od92kplf02txo8rer30zu9wgkqcktbkppto19d\", \"fl0jng1w22z6eivitgezui5oy3ms2g\", \"13hbi3ymyhe57aeq0ho3vmm7hgkuu9sla7hc94jtk8ido8u\", \"593bwvxok27vlpbon3775gdph9antt3rnhitnmv8zij\" ],\n      \"script\" : \"dhg1o4bfkmwqneir7mm2c6jsj2bdycgmlreea0i0shbk93worlzrfsyoqwoo7ojpptok69ozizbwnzm2przyppdm76lyu98cygndor53k69u89supghv9a5so\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Bruna\",\n      \"genderScale\" : 0.5349952836067791,\n      \"lastName\" : \"Rath\",\n      \"score\" : 83.66575290835253,\n      \"probabilityCalibrated\" : 0.6429274392732789,\n      \"likelyGender\" : \"unknown\",\n      \"id\" : \"bn9u\",\n      \"script\" : \"p0l4osfcmxzfr4iwixv7uj0yy5v28pysdg0fk1ijxfu5v1pt2h5u5l0\"\n    },\n    \"id\" : \"3c45\",\n    \"script\" : \"f9ewrr8q218mhduxl1rt1wb2r9t8g3vis2kyc6h9spxy9strgfy1daqqud3o0yojwy6olmvidu63adihzb4abi09nbc2fihyb21545mlnyk8b1422vgwd7\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Dicki\",\n      \"probabilityCalibrated\" : -0.6209706387789768,\n      \"script\" : \"4zb0z0ywwjgfa21wwltkhirlsn9whskmt7g\",\n      \"regionOrigin\" : \"fa8c7pd4wiagurkre6jibbmha3vppv7dgfrlo283brpqsihy351ty3oohecloxsxzx1r5ui0aihm8hv7ezw44r93qiz2r5dtpcq28fc2h35\",\n      \"topRegionOrigin\" : \"xb2yxwgbrfve55n1v7w1yqvxtrweqfxitb2nuhhhgaw8r1pbf2m1300eh62km0fhe28ga5zzku1f21rjhmu4gssy8iv9sgl7wwmlu9edl5vex5rczr2o7d0g45mk12k8vwaye8sw4nkzg6urcwwngjkdo1gzw201ivazsnbkhyytjy0s4u\",\n      \"firstName\" : \"Carlton\",\n      \"score\" : 40.895461260088915,\n      \"subRegionOrigin\" : \"b4bukguktkl1tu6p01rob7cv6hucukyurxwaiiwhd86xkxaq9srnjv5234i\",\n      \"probabilityAltCalibrated\" : -0.32621201154078494,\n      \"countriesOriginTop\" : [ \"o6p1o4qq6gb27q8fbus7xqbcjbzaw3ldya9kseh4v13oxo7jbnco2g3yl7m533bsp4w8gm4yoz3pcc4p1kocy3ayf7o8j5r98yrepg6czh01s4hzic2t1hacrkk9uzy2bc5izkkvqf4z3a33ks69enzsj866o7ouycrgd\", \"3346w2wbvronp0xlk\" ],\n      \"countryOrigin\" : \"nx7yvdj48tr1d0kyzx3m7l81bbcsa9birasgie0xij\",\n      \"id\" : \"7022\",\n      \"countryOriginAlt\" : \"pt5e9zcouh8xrnoaxw15xlrcosaprxi9hp1y04vbz1smz64qa546pbb3e38ecumir3nh52kxo7yzadag2\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Harold\",\n      \"lastName\" : \"Glover\",\n      \"score\" : 75.56535281569688,\n      \"probabilityCalibrated\" : 0.8002409611493921,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : -0.40233106406205454,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"2zewoljpyfdpbv2wtl\",\n      \"id\" : \"i72b\",\n      \"ethnicitiesTop\" : [ \"5r27gmz4awt9vr2dcnqe0ihwsagoozsbqzt9e6qdre7jcghpzt1vcw7tspywh7lmdj2m5f70zymddt2cb24d9k5nl88irv0m2qkngrj67ppoinymbqz9aiepk7r271bv5d43x3blp6tnuz1fqygjo1zsjjm6g27dqm1kknu72l8cqzbcexpn6bwinracnqrp5gvjq3vv\", \"pajfii1e8g2cys5dhty\", \"kknwjpcouldx8vol0sa6gw51fhmernhwj3dh1ao741j3eqibxqga4jujliqv1m\", \"m0jxq3ccapeyvbacc3lh7e82db3yc3mz6cn0yszorqx41m05ky\", \"jxgxz634x36cu1863jtklgk5ohqnsunc48hvopfj6omy5ck8g0eve9sjachn9c1j0rw5t53yi2aeiy1srfk1tirg5qafqa28tjhjb7wxlhkunxflbp5461fvp0nh5siirgg0whu966132iavyt609sqg91lp0aeao9o9etgd69el6m\", \"hbtcqzgc8ioyuzcrruu72l61ns7m17u5tpmyh6bbufzj5bbacual6ct0ooz\" ],\n      \"script\" : \"arf9yb8cdfipxrhbgeld7ear0cpm5p4ugqnao6i2x8b494c\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Zaida\",\n      \"genderScale\" : -0.9317844087164262,\n      \"lastName\" : \"Johns\",\n      \"score\" : 49.40586034178286,\n      \"probabilityCalibrated\" : -0.7287087253881237,\n      \"likelyGender\" : \"unknown\",\n      \"id\" : \"j0c7\",\n      \"script\" : \"xrhrv5ooyaa653wmzjic4s15wk8ctc0mxe4jj63r4d0xc1rfe86zla524a05gn28zxlnh4k4s32lkefsoye85hlwkzdkgrlk6o9e954nmvrmcaf0ltnj1k\"\n    },\n    \"id\" : \"b635\",\n    \"script\" : \"nnmeum52dimup25tw4izg3ojj0zwx0liir38v6swb3czbfzl76wcr7gtvu0s8xkm13uqxqzoqhlgzxzurpp8vorzer2wrp6a4ub0i93geignrwbt11yqyu97vukfw4q\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Larson\",\n      \"probabilityCalibrated\" : 0.9617745468235237,\n      \"script\" : \"7pg5pg2tawnbs9jgtkaqj7xe3il8zulb6sqj93sjvwbx97bysuy846xef\",\n      \"regionOrigin\" : \"xpai5nxo1ytqqcihozk3l5v9gvv5tneq9jq7wv8sku30gu7s763d746r6wehc4lulcpv69v5o6l6yme311z3tvvqebnjg9sxtyaa6i70hg6siyay0ryj8yrntes3akuuxuycctkkk963epke2qygr2dq35zpx1li53jtx617rop5y3ny1w2iuxeuwy\",\n      \"topRegionOrigin\" : \"bskircccmxk4gm4ui82\",\n      \"firstName\" : \"Ling\",\n      \"score\" : 63.21485756376492,\n      \"subRegionOrigin\" : \"e3ht6rcg1myuolotcgcv0ewlbt67umwkaegs149x2j7eysqhmcaxjw3w2voyaq6h3w1adw66yz4y1r15w503hoxvpngz550wr59q1oxxp7khiqu0erump9uk15q9pmm5ddfoz4tf0wwvci9sgmp4w0dpzxh4f27k0w70lrucpc711fuj3rgfm0geqb1hew8\",\n      \"probabilityAltCalibrated\" : 0.708746638379415,\n      \"countriesOriginTop\" : [ \"6mz880ldbsyxypqjfnwgpochkhkynjn5clrzbjnyddpcsdx0nq9zeq1ikhcrfuyq3xyzsyolos3\", \"h342s0oxeew8t7l25jidv4luxn1k01x4nyvqzabvymb2550u2zjp8glo3q1v39psx8nctl61nvogdsse25vntiw6xy0cdoemreotab8q2gndi0xzow213ubzqyozpm2ee7ixf6eivasvel5bd1z4nkosvbnwf0tkygkwqgjhll\" ],\n      \"countryOrigin\" : \"2xjo7knzkunznepmbtd1t2f8cm0x5t0dcktsnwlct7axuvbhl8zz9khuaqskoiukx5ghf8oppnanzpmxmfb5irfqivyoeyny1nvlm89imq4fc4ninumblp\",\n      \"id\" : \"ptk0\",\n      \"countryOriginAlt\" : \"qz6y5iskz9qh16xyw55lcnyy1ygm6ccrykmqwwhsituk2tpf2bc2neex\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Mabel\",\n      \"lastName\" : \"Kling\",\n      \"score\" : 27.13693005535126,\n      \"probabilityCalibrated\" : 0.41179690009284586,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.9253227971434257,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"ldqi21uti8zkw9scz4weeklw8lu6j6068rhrz8p9uqymdc400arssue0rn45brc8fud1z9s7lx8n\",\n      \"id\" : \"00qi\",\n      \"ethnicitiesTop\" : [ \"m96txmb4eyulqautstwe17yog9v3ut1p3\", \"fk5gvv6snjhtuq6xl0x53\", \"kbxb20lh9mi6aoyz1giw8e0bhz4ioyvabrhtrt54dmrzl2v36wt1ydplyf3avbbhwk0xgvoyfo2jhbrm38pqeku0as13ll8a5j74dkknv8xqx2q1iazgdnr0vxu9ifet4f1itazr1nwl7o49qwrntm890j9et\", \"z2vic6z1o7wx31xa5ntlnbe5w3sewpvotopj7i8566hqgf65kca3j0b7h6dh0tqli525ht5jkmz4oa9dsvzlbmi59vngdcd6mekzw0zeqat8r6osyaboffnuv7xejter6lfaxb8l9mla5i9g1vzn\" ],\n      \"script\" : \"sp2o7v4p\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Melba\",\n      \"genderScale\" : 0.4360557108843792,\n      \"lastName\" : \"Altenwerth\",\n      \"score\" : 65.90304028027452,\n      \"probabilityCalibrated\" : -0.9680330663339907,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"i3g5\",\n      \"script\" : \"lsnt7vnpt61yhyb10wtzsf4gij01bxq3s7358kefo93oenyvt53847ldx1bgy95rg8wz\"\n    },\n    \"id\" : \"4r89\",\n    \"script\" : \"ph2po6lxhq9zm5w4u0cije3r3a2eb2rsb1r3fpfmg84mzai1vcij333h9irmu6z4zuknhomrr4n34q9bwmeuvwdd12tlawygq7ojdy0zhlmagjt5\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Gerhold\",\n      \"probabilityCalibrated\" : -0.9025168307803602,\n      \"script\" : \"xa0xxjpoh6ihljkryzj39ftniksfgya2mfw7jwjwfrn87hhhgp1xfrd2ciietvpkyalhv4nvhsbgvg3sij2gl8vbri879ru9fk2rb7n7jkfk5yh8sp9dhp2qg31b185lw0po98qisjeg\",\n      \"regionOrigin\" : \"2dwsdfonjgiy3y52hg7k5e6zxh0550wns3g32nwp971qqz39oi4n86mzcvdrm0euqnsjw0wbj6s3zau52xo5r477nuckwfz3klofodhv4bk9ymmjantcw1sc2vioxxrh7d3z4uh5ukqcfnfy95w2soei8gnvj3ntbij7tk6vlbj4u6y0urs9bpn8e6vqow2\",\n      \"topRegionOrigin\" : \"rkvcs3cs57765zxcx392ougearkpp2zqbf02w8h4llcjz65jewr1lkv8r12lwdmmy0nz89wdwlehi12h8gui9skqyfz4bu8f59y3sgs8c72m29bes0dnbh\",\n      \"firstName\" : \"Mario\",\n      \"score\" : 67.1908155164417,\n      \"subRegionOrigin\" : \"4vkbrqvw7n92e5me7xemhg9u8cni86\",\n      \"probabilityAltCalibrated\" : 0.9664808334071899,\n      \"countriesOriginTop\" : [ \"q8vg6y5tpou6m2hkfiznev8d1nnr5ui6a9jr2uauzseynx6tr9lw0j3ui2damcsro61julc0xnb8i0tp8bh8we9a9h9wkn2dh2v4k6vo28b3jtb6dw578yvye1vqq8cc4mjdj54xck3xmlje0hz0zp8h1ev4vtn6ytn8v22f4b4ss0isi\", \"4lqylrvz8n5a6iyta8kd0wxh5m51qie84pi6mrf1okbwn5vb1esujla4m524366rsznuoumbb4nu2f0ptkfxtmkac7yytfcudfclb34x9ftdvl9ttnomx54lr1ubfnh7hp2gqka3a94ly2rp2e40xg0iwdaq48oj7616\", \"vba25s44j5ay9dnjxi6lvejr4faicl6ocm18h0qarvwwxebcicel94k86mryi973d17brifv4rmc52qrp1qsoy010wazppcgr4nccwc5vc3vhzumm0zjo6kih1u9jglmtcyi4beqz7jgl6po61lmxpiv1ywj6g2cjgfm7fic9fkgpaicktjof2wc1q\", \"q05cgysvbvlwwpj1nmubispq72xjvlk7r4gwhifqdjaifi2f\", \"b5016bvagik4gn8pb9sobm33x8hc8ylcr11oh9m9pt7cgufkrdjxy7m1rvrstid4lbfnqqzj571hwu520hd3ayibyd2\", \"3lw6iob67kzeo8ep2uqbuqad8bgbyq0k6406t859u1gqf1r8iebnnwh1ma0ut69d52mau4l0kmmiklgxsl0o00zoar085pjie50545vqylgqztz229kiwzes88dg189pzomzbaawtwevlfa4ejklcowpovmy2vkf3bm050kzgdpr6bvmjkyhggetu64j\", \"drf6kt6qcfbfmbc7f1f62tfhnqau9xodmgdqrum77t6bp4sdlzukhpcxpsvptj6grpq5gmmi9ktd6so6fv9l40f9jgxa9udwel5gyf8wc4nnzncj0p5gy4\", \"m16u5jabxo5qv0urxxuroynbmu427l5oadzue3mv2pbsu8lbsw0dks5yk01ngjlzudngatr4o019ip325e2rxhfw3lkd7c5wm55jcjeorwucesfw52u5z172wxdf46adza6ga2tu4h3d1t5hco5ydwnlipf\" ],\n      \"countryOrigin\" : \"cjk2oyq0ihm2bst5c1uiaqta6q3tn2i6xparc\",\n      \"id\" : \"v787\",\n      \"countryOriginAlt\" : \"i82dklof60lh127bmm9caop11i7wov7i3mzg3htv6ih4py2hnkjt4aw3rsf627evp4f5mts9w5oh5xvxis16nfvttyogy2ddqb9fn3b4fqvlxlp94ax6w64zy6u7ro581q2abhcmv3y8xv6w4bdi5o5mjiuzvrdcj12jr\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5267752-7809-40f6-a3ef-1c01fdf41b78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.444974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch",
          "schema" : {
            "properties" : {
              "corridorFromTo" : {
                "description" : "Classified corridors",
                "items" : {
                  "$ref" : "#/components/schemas/CorridorOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchCorridorOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "eb18439c-0afc-44c0-8670-acdfeadba624",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridor/7dn8cwmqcafgiwxofrh66wk4hmtik89rqqy693a7nqxyf92bt0ztnr3phip2tu3pw4dnwj4cavg1j96rczjtw06vsdzca7yvl53ksz59ldfsu1xvkk435ko34rspvk63prk4yfb28k6ks7fcazqide3p7knklgiqlohf1kbu002n0fficfybl21dg0k9cowwvp/4h4kidqjjq16sza5qvs4zlfgg135bt7v6yx/8rq6tiaeqkxbz040yrt0parp3xc123gamjypfomi1uhc5lm9n8ilqvu9xeyisexcspxd82hqjf96z4311t3d8kap1ocfomk4wqp5cy2t6bsqihwi8vsk0v2zzks3nxcynxcmxyj7czq7modj08y16q4u715780u3hbdwsomk3fbn2h5s9vnkovymtzw/5w1f7c0gk9c64k1nneyvk1uwptmeaculyga82zgw11vyt70ir3ld95nq1lgt7q/dazlfyqrxn01lew6wvjkknaeveujngp5voixa1dqnll/ucv0wti1gwibfnntomkyi7vumv6jxx6ev81380cmvm2oiex6kz70aji3qoodkbdas331w20cld81aeuxozgfl0g3liix8g46",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "eb18439c-0afc-44c0-8670-acdfeadba624",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.442617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "fbb4dc07-04eb-4a89-86cf-3b15904cb9fd",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridor/rlwfdocwp7uo2fxdan7of6g2auvo9tiwhosoc33a/px7awwzqc5oflmgc89saj0b9hrm4zu48jdluf2need434offnuxhf7grml43owqar5z7z95n7m5hsj15exsesvts8yty5ieph0sm00mp70ndxozeleens2z96qh9wz78qzulwsu5dfq8grk1np9ivn5d2tongfusgucyu4szzzy8xyhm6134s2k5jueaefu08h77b/l0l7lgv2o8ync7fiob2rd6l58owpwo4wn19u36t63xm3283xoe7clqkfvngxgsvlt3wr9wxebnyj4f9k53inw0aaxt2jcb6smpf4iu7ef6z8s4fdrfufv4cr0jnnxyemq/k3vp24zay7972f4ma3tlmj6pm300dduqrajq6y5gwikhke99imdllijh47trsqgwiom7sobzbv3m9embcfq5kb1u14pngukb/scg3fcqd0xsn1wwl5tdmk9vu8mqyt91jafgfu13dgnl8e3mvm4o84u44k5b4cnnuia95k7g650n8751h7ge0tijq6in8l1oudw9s5nem9ye956mp8l2/o0es6iadgwvr5ed8rha1uy7ztblo0avvpqpagrcvtbp61io152l2cdlyto7zg63tlppme1bx7ngjdo5t1sa",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fbb4dc07-04eb-4a89-86cf-3b15904cb9fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.442538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "36858cdf-8719-447b-9f4b-46db8997c364",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridor/69ixi6z3get5ov/d9px7pxhnij0l7rvydppsql8wauowvrruyrbc7mtsx96okd3w89b13i6e8ajkbpeb5yqs8qtkoqaoccq9st9up2r80p20gi2tq3/hyn12lupuvocos7nzr2r2v5rsbbmz1y0444rkucrld76vitia03p27koq5tl2riuwpvr7n7nbzlcccp156ts9ph12hkiuzun7x8tmv0vpiu46byw9hbb/4db1bgvqslkswnbkbtwhysulb779life178aerxtlah0xqotnm0n6g4yy3izm3owcfe65tmszao9nhpjvywf5tgh6waffy26yloepy6gfmpqrleycj28jy1ys7xfkinjitfx2y5n38j0if3eco33ctwt3frgkc5nxkb/o7b9hmeshlmsfusxoobvvjos5n4khq1vkq8w3osu9mc9t/i6z4x8fa",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"FirstLastNameDiasporaedOut\" : {\n    \"firstName\" : \"Horacio\",\n    \"lastName\" : \"Haley\",\n    \"score\" : 98.78395764579481,\n    \"probabilityCalibrated\" : 0.5870158704200015,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"probabilityAltCalibrated\" : 0.2268118756139379,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"ebxb13a6xi5sfovjn7a0l0gk7sifnjjxwezqed4on0887rli9erpwj8vkqqznu9u723kclu6fji198wpejnxlwqle4yqjeqpg69aixxcvga2c716jzvigcqgg1o7q1vka2lzki8qhixhogzcwtchizwzzx2fwlk3zr2hy8jteqw0p87s96culp2rjxty6hzocdayobr\",\n    \"id\" : \"fim8\",\n    \"ethnicitiesTop\" : [ \"remc8kj41v2bra5mmk3flsbtovqy6cqoh8vq219y3xcg3v0o0aopgx9m2c5jdq7t3g3dwx1322y0t278snmmq111opuv46lc384ac0g14pyq6cp4v8kjw21ty7vobw53n6fplc22mqebts7e9gqo51xovpyij9esowh\", \"6ax0oayr618f6jv1pyoa2ykca6148\", \"7o6txgg1zb7kzv9jofjj53ap5jepxp0mdqiq416oapw4gs1fq0hvydp82abbo6qdlrgsbmci9hpttrabaygz97yhs28shsu35z12yx0rk1p78wazbkzx1nfs\", \"qg9\", \"zp791sdpkyejazvsjw0jlvgpuz5sv9he99jynqw9aluntp7pz5uigv42546bo1b8wsdl6pvs6wumxcmhbr56swn4knxf1j0sie56qqz6h35\" ],\n    \"script\" : \"xulntksux4si47hvf0k17l48f6wimx5pvvkfjzsw8hazqtyq617os90crfq05veg5u7toq9v255buc9xzmcmuofaesvfmtoa9qbq1pj2y46iq0abtfo97od\"\n  },\n  \"FirstLastNameGenderedOut\" : {\n    \"firstName\" : \"Kandi\",\n    \"genderScale\" : -0.1912050133447436,\n    \"lastName\" : \"Graham\",\n    \"score\" : 12.287061566284441,\n    \"probabilityCalibrated\" : 0.26630470462841194,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"401l\",\n    \"script\" : \"076egcmk1u9ptlh0jr92jrskuvpgq99ebpt2x2wy9ot9fpikikvysdm7gsohbyoazqvy3ucyrte3ml1xbu2zvdo87fgdxqopvawez2llumo2aez3803jiuuntbz3noho05k\"\n  },\n  \"id\" : \"i331\",\n  \"script\" : \"qip6srgrhb90d0veuf6755arezginbdw9jy4xwn\",\n  \"FirstLastNameOriginedOut\" : {\n    \"lastName\" : \"Brekke\",\n    \"probabilityCalibrated\" : -0.7458526234647156,\n    \"script\" : \"0ghpuzti7wd9ghq01j73og4ifwezioimnc1zqgmmdakglyslzi7qp98rywsf51gf3g48rf7oy0mhk76epnvvvraspawdl6zp8b21e8qhdcoaqy\",\n    \"regionOrigin\" : \"vz68zy3zg342f9dv4tr1ayrivsqs5rt8ch6bgw2ogyfuln6r9vtfz6nsbps23i4ruop8mc40hsiv4ysmncp66wg\",\n    \"topRegionOrigin\" : \"vixhrzowbmto6wuwfmqtiyejmvgrft31c8u5ydx25h5mw55pfpxlowrvnlu1xqfbgugz4hntm8okem\",\n    \"firstName\" : \"Hipolito\",\n    \"score\" : 52.82581713705061,\n    \"subRegionOrigin\" : \"yynmowynyl5vjhwloee2f4kaj7vogblx4xst0mvs39ao0etsee8vov673gknxfu48jpj80wi2p8qu92srv5bzl21ehl8ppl1oczob24m2ihb4ok0fmy53o7x1zmua7ed1lr7h8vqko88exa4yadkcexqf97vt\",\n    \"probabilityAltCalibrated\" : -0.9776323998110312,\n    \"countriesOriginTop\" : [ \"i86kdm9sqmufg5cfk6yaltimkessjdwtz8ky5pxux0d2j9xlzt5tlj5mvnpe21tffbdmhy01xgwwbcz3dlm4bwa8tqf9c300vtq0ut\" ],\n    \"countryOrigin\" : \"ofbboi70ynivxyogma6dqlzpbfqkugd7rtnn8srxv5mw8xxt0bxhdfutl2u8hcfj0gdmqur408wbpr9iqyzsq7juimv5h8f1kc8\",\n    \"id\" : \"5d9f\",\n    \"countryOriginAlt\" : \"7l4kdrsg1cx0u7di8zjy95ecep533ewe9\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36858cdf-8719-447b-9f4b-46db8997c364",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.442436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor",
          "schema" : {
            "description" : "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)",
            "properties" : {
              "FirstLastNameDiasporaedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
              },
              "FirstLastNameGenderedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
              },
              "FirstLastNameOriginedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
              },
              "id" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "CorridorOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "0b06c3aa-8fa3-41e0-ab22-73101fcd9107",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0b06c3aa-8fa3-41e0-ab22-73101fcd9107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.441565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "21ff9854-fd3d-4fdd-81f1-1683fd09b4d5",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "21ff9854-fd3d-4fdd-81f1-1683fd09b4d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.441549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "c08f0618-d4aa-4cdb-9249-5150394a16bf",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c08f0618-d4aa-4cdb-9249-5150394a16bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.441533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "5a957118-328e-4cb7-aac9-a496999dc725",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.046993035335978E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"mo5g\",\n    \"script\" : \"zoy6d4s9k044jjdbrnhfw0jkingrup4pwrbo0rnci53j43ebav0tloe8h0mjistcihomk4iqh90m760z07wl9irt0hezy7tmxkt15kij1oh3xa3qt33fda63rj2l\"\n  }, {\n    \"score\" : 6.870602985708357E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"76vw\",\n    \"script\" : \"wnwocktlns72z7fvpjmks95kdrtcbzvgj8asy545moierqf2cd9ovrtjio5hb7nbbo8yruyf7ocqwd11m48in4rf0cxhdb2zz3rs7n89e5fa9yudyh5osmtsxv1ieqk60erky4tjuf99u3wxdv5f7fyax1hx57vguxknpl1zgtgk0yv5zfk7u9vyy0s12cxv57i06ep\"\n  }, {\n    \"score\" : 1.009100269241789E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"i1me\",\n    \"script\" : \"yrdiy\"\n  }, {\n    \"score\" : 1.3831214619173758E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"r9xx\",\n    \"script\" : \"i4wmp14vb5bqp9o89xfyqk19np6axyh1qhz9zy6un7pj2w5bksq7qs7hv3hs4afcyrflut58r35mducuxlcqck1mp9rtjox8ehl910et5ksm4li1082npa2ba6e19v0e52zpw1xwvyg41qv7dmu4gvne66xxm83q8gv64o5zllynn8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a957118-328e-4cb7-aac9-a496999dc725",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.441506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "e99a585b-a425-4183-b0f4-5a28a0f21d66",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/geg4u8ttc9/kxm7thpb6iqxzmixfhhvk9csbrgf3asl/Titus+Schoen",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e99a585b-a425-4183-b0f4-5a28a0f21d66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.441046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "16e3b54b-ce6d-4ae4-a478-9f1127b9b6c5",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/t2iz8s9ne4vzig9ye3e1igvtc0953drraufflpnvzlcvt1ddgc/7e40wvz2pkjtyun16zaaoeapsrx36meljcbt214zvr5w6v7v9i3dzu1707b02n7y95xvs6uz4lvzbhymmakyvkfcbkbn02sh3tigdaapzrdckigz2f21ekyzek06hf3pibbdla4mo0ry5coeh4m9p8k8tt9k0vm428za5lj1umed3enac6/Albert+Keebler",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "16e3b54b-ce6d-4ae4-a478-9f1127b9b6c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.440972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "b209af3b-09a8-4987-a693-6f2f898dcd6a",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/d6t1pn67076j9xj0g1putayadcnvdi334pubnr4g7oqfmvqsideozyugyhz2ne9i4rxy6t04th75mjzlc5u4xm9w2vylab21tvkmcbk1qtmiklviavx1rh8ez6ugu4puc7cff0eth938aescr9f4pr6pl0hnauz259tddt5sa6/ppnbei02u2tklp54oslb5wjc9exlf6bad4qwpfcihpx74w7xtoyvit402cl9cnfsoybw92z6lgtu8xuvb5lrmqrim1ialpymn4klla3navt2m9mxk05ewf0bd1ac9gg/Ginny+Jaskolski+DDS",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.411859675763961E308,\n  \"matchStatus\" : \"Match\",\n  \"id\" : \"258u\",\n  \"script\" : \"m3e3mxkh5yjhbe3eervge004g8pb093gw4luy3g6afxftb90uhef6kb0wgqxjj21wgk24ab82a3pbutwjkd6njgsowinwkby6qqux1ezcp92wbsnnmqet8yjeqvba5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b209af3b-09a8-4987-a693-6f2f898dcd6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.440843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "35b1df32-2ab0-4f14-ba8f-efc3059b2596",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/jd1nl9mmjz2l94etxb1iydmz1zh4015dkv48vab25siuvhsrtb0hepbg3sytdif7450xchxpwe0lu5glukuqzhn64oyaseqm8jxfe65zb9o1jofr1gfqr1n5r3affuizf1fptry/bzm7awogzdi5dnr2php9t9gcbygfchie1hdo6p5he2pjo7ysnpk0x3r3urapg/Genderfluid",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "35b1df32-2ab0-4f14-ba8f-efc3059b2596",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.440595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "4a2cf1a3-55c9-4cd7-bf0f-d7b34e58baf9",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/0nw1jdtlg8psv7oaik4tdnmm5rndczia4quu16krtuc9p1lj6vg6b1d0f2g0rlz9tsp28esi060qeov9lienlgu9c0d8z/e9kxoum7zukrj15rrbai5yhoarvdmik3bwb6jy8gfohevktaximxt9zp7cq8f6v9zj8p0x5pj09zva4brvx11w4/Polygender",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4a2cf1a3-55c9-4cd7-bf0f-d7b34e58baf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.440538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "3e165749-43e9-4cb4-bbc4-28726d449648",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/fkf2xsy8dusbu7ezwhjx8l4mqxkgc2j7yl5789k0hun625fd89w1sw7ovyupucxgsdyg7c2s1p1v7tzyt1x5d6zv71mqmuhzpr0m47mr50vhceowviq2c35exdu35sfw5/8poe5d8krb6t5wr1qq5xzgh02qzjf84eic4ocs6qz6xpmqo8yyylo2x3i72tgmqboqfebmtrp5suvlkdgr/Male",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Leon\",\n  \"lastName\" : \"Hane\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.0262740134399231E308,\n    \"candidateName\" : \"2023-01-02T09:11:08.440003Z\",\n    \"probability\" : 1.23225646817397E308,\n    \"predScoreFamilyName\" : 1.4665490481420871E308\n  }, {\n    \"predScoreGivenName\" : 1.5001771918463363E308,\n    \"candidateName\" : \"2022-08-05T09:55:08.440048Z\",\n    \"probability\" : 7.506454568272083E307,\n    \"predScoreFamilyName\" : 1.3802640074844303E308\n  }, {\n    \"predScoreGivenName\" : 1.6121074434492422E308,\n    \"candidateName\" : \"2022-07-07T09:35:08.44009Z\",\n    \"probability\" : 8.804833629100063E307,\n    \"predScoreFamilyName\" : 5.447860255635669E307\n  }, {\n    \"predScoreGivenName\" : 6.525829050866509E307,\n    \"candidateName\" : \"2022-10-19T09:43:08.440128Z\",\n    \"probability\" : 1.335967653752027E308,\n    \"predScoreFamilyName\" : 1.1533112411938122E307\n  }, {\n    \"predScoreGivenName\" : 3.8433063911109673E307,\n    \"candidateName\" : \"2022-09-17T10:02:08.440171Z\",\n    \"probability\" : 1.5832138597574195E308,\n    \"predScoreFamilyName\" : 7.808171461249098E307\n  }, {\n    \"predScoreGivenName\" : 2.9057399105790645E307,\n    \"candidateName\" : \"2022-05-10T12:02:08.44021Z\",\n    \"probability\" : 1.4796524594200213E308,\n    \"predScoreFamilyName\" : 1.6856151351479268E307\n  } ],\n  \"orderOption\" : \"uve7wm531c2b8om4\",\n  \"id\" : \"s12z\",\n  \"script\" : \"7ik18wvi8pt6ozflgljwek6hk68hl75c2vmdiip9yae4be8v8okoxxst3a3733lzlhv2mwhn79o7nnnt7ll0gh60dp0dkisc8emd67ee46hdyi8xsgfrxwbof0ysvxcx8c8i4m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e165749-43e9-4cb4-bbc4-28726d449648",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.440464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "d414eda5-5d68-4a54-a05f-85246124cfdd",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d414eda5-5d68-4a54-a05f-85246124cfdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.439898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "589c6bdc-2a6f-4710-ab92-cfe20cb6721e",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "589c6bdc-2a6f-4710-ab92-cfe20cb6721e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.439881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "7dc67b31-bfe6-45e5-9f6d-7f4b1118afac",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7dc67b31-bfe6-45e5-9f6d-7f4b1118afac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.439865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "a891bfed-c7ca-4939-8243-13d4ed3122f7",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Arnold\",\n    \"lastName\" : \"Leannon\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.583552572705214E307,\n      \"candidateName\" : \"2022-11-11T12:17:08.437748Z\",\n      \"probability\" : 1.7331667825912914E308,\n      \"predScoreFamilyName\" : 1.8121352484666825E307\n    }, {\n      \"predScoreGivenName\" : 8.051182419082782E307,\n      \"candidateName\" : \"2022-12-09T10:57:08.437792Z\",\n      \"probability\" : 1.7170246086099646E308,\n      \"predScoreFamilyName\" : 4.875528920375659E307\n    }, {\n      \"predScoreGivenName\" : 3.2097220942815777E307,\n      \"candidateName\" : \"2023-01-01T11:12:08.437834Z\",\n      \"probability\" : 2.21270287364748E307,\n      \"predScoreFamilyName\" : 4.924861497053705E307\n    } ],\n    \"orderOption\" : \"vx1cydo4nzujtyt4kgks0bo0uhg60xb0wfsm1fqeenurj8yqx648i\",\n    \"id\" : \"w108\",\n    \"script\" : \"bsgbo1f8cit84d2gxuz1m6is1ak0v6o0t1g9g3w11rrieacutoicm2ph9axtukjx1xeequrvpu5botfap2io356lee1o317h7zklrl2ao1n4t6v11xictewgs87ktmz2yndr215apq9thcjh140g\"\n  }, {\n    \"firstName\" : \"Hai\",\n    \"lastName\" : \"Schmidt\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.51191023239534E307,\n      \"candidateName\" : \"2022-07-02T10:07:08.438032Z\",\n      \"probability\" : 6.847736038920758E307,\n      \"predScoreFamilyName\" : 1.7384222897340498E308\n    }, {\n      \"predScoreGivenName\" : 5.885918211382439E307,\n      \"candidateName\" : \"2022-10-09T08:39:08.438076Z\",\n      \"probability\" : 1.9486798072839422E307,\n      \"predScoreFamilyName\" : 1.4473117718878655E308\n    }, {\n      \"predScoreGivenName\" : 9.117822510649339E307,\n      \"candidateName\" : \"2022-12-31T09:06:08.438118Z\",\n      \"probability\" : 5.917858683412253E307,\n      \"predScoreFamilyName\" : 5.005056673263877E307\n    } ],\n    \"orderOption\" : \"icmrsilk0nsql961k40sc0kftxwkygcm3gbhv0mpybr53e1zq2d4ozonxh8j22aln0q39lnnxtm1upo1t278es26kpzwp2alnlo7r238xs0w6zrcaxeqxa14dh67z81e3fh7hmye46isfi2j\",\n    \"id\" : \"9pxy\",\n    \"script\" : \"61l5nyh4cmio164e9bdh17zcz2qh5p977w5rux3xjjf1wtlwusww53\"\n  }, {\n    \"firstName\" : \"Sherryl\",\n    \"lastName\" : \"Wisozk\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.7312039412662216E307,\n      \"candidateName\" : \"2022-10-13T08:52:08.438314Z\",\n      \"probability\" : 1.6843835932475882E308,\n      \"predScoreFamilyName\" : 1.5913866781700825E308\n    }, {\n      \"predScoreGivenName\" : 6.348848581466515E307,\n      \"candidateName\" : \"2022-04-29T09:11:08.438357Z\",\n      \"probability\" : 8.493137404789591E307,\n      \"predScoreFamilyName\" : 1.9996713859988414E307\n    }, {\n      \"predScoreGivenName\" : 3.0046637036954275E307,\n      \"candidateName\" : \"2022-08-12T10:30:08.4384Z\",\n      \"probability\" : 1.376747086648044E308,\n      \"predScoreFamilyName\" : 3.5787510263437607E307\n    }, {\n      \"predScoreGivenName\" : 1.4628537292978644E308,\n      \"candidateName\" : \"2022-09-21T11:26:08.438446Z\",\n      \"probability\" : 8.172504577702903E307,\n      \"predScoreFamilyName\" : 3.2701050100063535E307\n    } ],\n    \"orderOption\" : \"xd4bs2yc216aw5l60p7vpqhlhv2zrs6trket5w8s9luum92jqflsq63eodcmpwzux6no6bit5tm194stqf1h9deemd8dmuvzw8fwswrtaibqh6b9kcryvpu4zn\",\n    \"id\" : \"t7zj\",\n    \"script\" : \"e02dmcrvl57awq5551rvsvcmtvw4ynx3agabkskbhzpwofc2vikpk75v405hh3oj6aaeehylug\"\n  }, {\n    \"firstName\" : \"Quinton\",\n    \"lastName\" : \"Gleason\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.243191422084388E308,\n      \"candidateName\" : \"2022-04-13T09:12:08.438638Z\",\n      \"probability\" : 1.591735134329779E308,\n      \"predScoreFamilyName\" : 1.2324693856504523E308\n    }, {\n      \"predScoreGivenName\" : 1.7069023769709566E307,\n      \"candidateName\" : \"2022-03-29T09:04:08.438682Z\",\n      \"probability\" : 1.4467901559450045E308,\n      \"predScoreFamilyName\" : 1.3998684497959411E308\n    }, {\n      \"predScoreGivenName\" : 1.0798819679257224E308,\n      \"candidateName\" : \"2023-03-11T09:59:08.438726Z\",\n      \"probability\" : 7.610659252985567E305,\n      \"predScoreFamilyName\" : 8.855966892384759E307\n    }, {\n      \"predScoreGivenName\" : 8.053260664947538E306,\n      \"candidateName\" : \"2022-10-25T10:59:08.43877Z\",\n      \"probability\" : 1.3721770032986246E308,\n      \"predScoreFamilyName\" : 1.2526035439719509E308\n    }, {\n      \"predScoreGivenName\" : 3.920268718069711E307,\n      \"candidateName\" : \"2022-06-13T08:59:08.438814Z\",\n      \"probability\" : 1.7851768598504519E308,\n      \"predScoreFamilyName\" : 5.065082032109653E306\n    }, {\n      \"predScoreGivenName\" : 9.297388253650864E307,\n      \"candidateName\" : \"2022-04-12T10:23:08.438857Z\",\n      \"probability\" : 1.0642685637193313E308,\n      \"predScoreFamilyName\" : 1.5041428467219076E308\n    } ],\n    \"orderOption\" : \"fiu2gh5hr96uhvfk9jodum1s5if9egsyd7s5bunufaoce90wfzd1pb6gu8ckbnh7qwtbws737ws6fxzuxpzn03672wa9co8e2dygyqlcnkfopm684yvdrl3nsk0l2ibt2xuta95ojkjunlz3pks15yjt023jsbk20yt5wkrdwevprpf33tnzs\",\n    \"id\" : \"1r6f\",\n    \"script\" : \"bvvixzu1isdz3b977qqoef5e8tihpjz17ls3zon92u2f3w5iyeeqjh3fwv2stvwtmvgjscvmip5m8dw7pnewl3dotna87k2s34lx0ulj6pzl40u2dudrgi\"\n  }, {\n    \"firstName\" : \"Isidra\",\n    \"lastName\" : \"Barton\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.291385598636686E307,\n      \"candidateName\" : \"2022-04-06T11:03:08.439052Z\",\n      \"probability\" : 1.384245378798027E308,\n      \"predScoreFamilyName\" : 1.5900764218995341E308\n    }, {\n      \"predScoreGivenName\" : 8.58143210019753E306,\n      \"candidateName\" : \"2023-01-25T12:20:08.439096Z\",\n      \"probability\" : 1.3997735606343394E308,\n      \"predScoreFamilyName\" : 1.2179645869626796E307\n    } ],\n    \"orderOption\" : \"fv82mvubchjk2zfboiakwm8mbanfsj8fbstn0sn2ob0x34\",\n    \"id\" : \"crq9\",\n    \"script\" : \"6fe2pzymy4hgr0mngq0e8ccajzirfjaq16qhki23lrzc5r8pwe3wfy1dhwy6wiw2jk6yvdoavnq6dvz488stbomc48pg7czjai2cu1dykb62d50i8f0ti7ojgibeym1wrgyvy9h0c5frbkmzbciwo9bdd89dkfnlatabfqvjanifv03mf7ta\"\n  }, {\n    \"firstName\" : \"Delmar\",\n    \"lastName\" : \"Bergstrom\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.500547989005773E307,\n      \"candidateName\" : \"2022-11-25T10:13:08.439304Z\",\n      \"probability\" : 1.3524366591152041E308,\n      \"predScoreFamilyName\" : 3.660330422402044E307\n    }, {\n      \"predScoreGivenName\" : 1.4857502706608498E308,\n      \"candidateName\" : \"2023-02-17T08:31:08.439346Z\",\n      \"probability\" : 1.1094615960873745E308,\n      \"predScoreFamilyName\" : 8.175260164257579E307\n    }, {\n      \"predScoreGivenName\" : 6.398743785637901E306,\n      \"candidateName\" : \"2022-04-19T08:40:08.439389Z\",\n      \"probability\" : 1.672109096597828E308,\n      \"predScoreFamilyName\" : 4.84382511629793E307\n    }, {\n      \"predScoreGivenName\" : 1.5118150522364926E308,\n      \"candidateName\" : \"2023-03-04T08:51:08.43943Z\",\n      \"probability\" : 1.124358926604523E308,\n      \"predScoreFamilyName\" : 9.230432261421118E307\n    }, {\n      \"predScoreGivenName\" : 1.346849202972744E308,\n      \"candidateName\" : \"2022-06-08T11:04:08.439472Z\",\n      \"probability\" : 1.5238221340508516E308,\n      \"predScoreFamilyName\" : 7.456447153117542E306\n    }, {\n      \"predScoreGivenName\" : 9.29237115898797E306,\n      \"candidateName\" : \"2022-10-03T10:22:08.439517Z\",\n      \"probability\" : 5.925270798890456E307,\n      \"predScoreFamilyName\" : 1.7021401376601767E307\n    }, {\n      \"predScoreGivenName\" : 3.482802969373685E306,\n      \"candidateName\" : \"2022-04-06T10:56:08.439563Z\",\n      \"probability\" : 4.2160040753616895E307,\n      \"predScoreFamilyName\" : 5.291444401927277E307\n    } ],\n    \"orderOption\" : \"oj9qskcx8z137z673wr9qfpeks6vblgh4qt3zx53rmyk\",\n    \"id\" : \"1bbo\",\n    \"script\" : \"8ndevy6kp517e1ku7hscbsl0llrcqbkcrxu5vgkxlkp8wdiduny53xcuv7ndowpwbefyg5l4lfzhh2zwv1yubwffbb36qevd6ezw020t6omtd3op234zff6tyg1hpujstgnkupddc2dntcc2ma0gf0y44f3g6pd8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a891bfed-c7ca-4939-8243-13d4ed3122f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.43983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "e23e809f-26d0-4d78-a096-6ddacde4ba4e",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e23e809f-26d0-4d78-a096-6ddacde4ba4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.437651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "8fe73147-c126-4242-a3e7-e959d9c3b935",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8fe73147-c126-4242-a3e7-e959d9c3b935",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.437635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "52da7988-d369-432c-869a-f2354c55f972",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "52da7988-d369-432c-869a-f2354c55f972",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.437619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "f996fee3-555d-40f4-af58-a77a26e66b96",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Deanne\",\n    \"lastName\" : \"Becker\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.7288074594263834E308,\n      \"candidateName\" : \"2022-10-21T10:39:08.436203Z\",\n      \"probability\" : 1.4229624741615837E307,\n      \"predScoreFamilyName\" : 5.320049198027139E307\n    }, {\n      \"predScoreGivenName\" : 7.794750421334238E307,\n      \"candidateName\" : \"2023-01-02T09:51:08.436247Z\",\n      \"probability\" : 9.561499078240582E307,\n      \"predScoreFamilyName\" : 1.2861264038840116E308\n    }, {\n      \"predScoreGivenName\" : 1.3723566998208323E308,\n      \"candidateName\" : \"2022-09-09T12:15:08.436292Z\",\n      \"probability\" : 6.358434370571778E307,\n      \"predScoreFamilyName\" : 4.082217446587654E307\n    }, {\n      \"predScoreGivenName\" : 9.173856328349284E307,\n      \"candidateName\" : \"2022-03-21T11:14:08.436336Z\",\n      \"probability\" : 1.6960095423461145E308,\n      \"predScoreFamilyName\" : 3.317247158287278E307\n    }, {\n      \"predScoreGivenName\" : 1.2314545013246007E308,\n      \"candidateName\" : \"2023-02-28T10:50:08.436381Z\",\n      \"probability\" : 4.657519073387774E307,\n      \"predScoreFamilyName\" : 1.58601793036964E308\n    }, {\n      \"predScoreGivenName\" : 2.1447670003534408E306,\n      \"candidateName\" : \"2022-09-23T12:09:08.43642Z\",\n      \"probability\" : 1.050791228521695E308,\n      \"predScoreFamilyName\" : 5.026845282669772E307\n    } ],\n    \"orderOption\" : \"o7wfdj9z4j960pi8lcuyq3b1m4tmk3o6m0trf0pwo186go14lxrz7ydvdk82rndrt6yhnvt26psez75fwgawnel1zcerau6omsbuoii5mqt60jjjmev6e45fycnq2jepv6p2z7s1c0o2oib6kais\",\n    \"id\" : \"b99n\",\n    \"script\" : \"0ushm6n6u3bd8qn0ftz8c2w11bl9wykkjmv9ywqwdrhfoffoqx76kaogfdg79zavyig2oi85g978o9x8snc3qb64fraq8q3kujqwhj3dh0ii3zfskwmrkhnqsxzht409hd2zhbuhm5hyrdmh3g62yslxyii74vvz6oba46h0nwdceb3ani43249p1oomsleoi73nh57n\"\n  }, {\n    \"firstName\" : \"Sebastian\",\n    \"lastName\" : \"Fay\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.728791267215414E307,\n      \"candidateName\" : \"2022-05-29T11:37:08.436619Z\",\n      \"probability\" : 8.931136715171442E307,\n      \"predScoreFamilyName\" : 5.513842918271926E307\n    }, {\n      \"predScoreGivenName\" : 9.736366634472822E306,\n      \"candidateName\" : \"2022-12-17T10:23:08.43666Z\",\n      \"probability\" : 1.4869863838293112E308,\n      \"predScoreFamilyName\" : 1.6697806600050815E308\n    } ],\n    \"orderOption\" : \"3o95jnthowsknxvvb7if1x24kflr0nbpctkwhsldes50u19vhyw624ug5qn7p18mbc98n9ut3gh9myihhqj714xy6rzutxu\",\n    \"id\" : \"47xv\",\n    \"script\" : \"0l94ik94\"\n  }, {\n    \"firstName\" : \"Hyun\",\n    \"lastName\" : \"Satterfield\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.37522063913187E307,\n      \"candidateName\" : \"2022-11-27T10:54:08.436856Z\",\n      \"probability\" : 1.5642077705871065E308,\n      \"predScoreFamilyName\" : 6.605586828866106E307\n    }, {\n      \"predScoreGivenName\" : 1.0057817714395805E308,\n      \"candidateName\" : \"2022-03-29T10:39:08.436901Z\",\n      \"probability\" : 9.433039762770221E307,\n      \"predScoreFamilyName\" : 3.6059483401771135E307\n    } ],\n    \"orderOption\" : \"i6lub36mzrhyzy8rib96bj1bv6elb2tl1op3srgyx4xrwcz0so5g02xzfyog7klyeiyn23oe0qt9sgpz34m7d0qslqgyw32afddvazu93kuvmdm2bt5gxxa7utull075zf01c92xu4zx8sx6sp15pkbrkvzrft6bj1jfn6zwl58n71jeavr\",\n    \"id\" : \"jtnm\",\n    \"script\" : \"x3xtxqx22k4n28svik44ichwjw4bkuhfm8beau3nq10ahw0mtcc1bwxzsqb32eofjcq78krq6vux9pr9p7rci1lcdw5vgr4i41f9ttspg6yy2oslrf5xzfl14xsyq3kfkusn3lnq6m410cwkjiuq62o32q7tybsqt\"\n  }, {\n    \"firstName\" : \"Carlos\",\n    \"lastName\" : \"Schmeler\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.026686997589033E307,\n      \"candidateName\" : \"2022-04-26T09:21:08.437102Z\",\n      \"probability\" : 1.0139489424030014E307,\n      \"predScoreFamilyName\" : 1.1725890753927045E308\n    }, {\n      \"predScoreGivenName\" : 4.676049481095451E307,\n      \"candidateName\" : \"2022-09-30T10:57:08.437147Z\",\n      \"probability\" : 1.1625135406872068E308,\n      \"predScoreFamilyName\" : 4.2258514987253513E307\n    }, {\n      \"predScoreGivenName\" : 8.929247160567078E307,\n      \"candidateName\" : \"2022-09-02T08:32:08.437189Z\",\n      \"probability\" : 9.997836625451123E307,\n      \"predScoreFamilyName\" : 1.5442809213338853E308\n    }, {\n      \"predScoreGivenName\" : 5.906161268010669E307,\n      \"candidateName\" : \"2022-09-09T08:44:08.437234Z\",\n      \"probability\" : 7.199952789998063E307,\n      \"predScoreFamilyName\" : 4.5024531033510375E306\n    }, {\n      \"predScoreGivenName\" : 1.4271648920497047E306,\n      \"candidateName\" : \"2022-04-30T12:20:08.437277Z\",\n      \"probability\" : 1.4577154020716319E308,\n      \"predScoreFamilyName\" : 8.303329391076377E307\n    }, {\n      \"predScoreGivenName\" : 7.681934674133581E307,\n      \"candidateName\" : \"2022-10-07T10:05:08.437317Z\",\n      \"probability\" : 1.2320912920549884E308,\n      \"predScoreFamilyName\" : 1.5537678608693407E308\n    }, {\n      \"predScoreGivenName\" : 1.6092163958230454E308,\n      \"candidateName\" : \"2022-07-10T10:22:08.437359Z\",\n      \"probability\" : 1.0584016017742318E308,\n      \"predScoreFamilyName\" : 1.7855599561953359E308\n    } ],\n    \"orderOption\" : \"hj3ys3cq9xb1undijxz8luqqfxdbr6vpcg45t0acb0dcthfhknyniksuoryaccy5h4q1y3evjbtmzvp2vy9i0izxaxbx4z345onsal0uczpcxltpy00iugie5teq2b4bkchdhxle78n5vd\",\n    \"id\" : \"02u8\",\n    \"script\" : \"cekyjytblxk25fuq7xz3f8ejzetwpo5i0rlba65bkueyu94thahcnl9v3z8cio0umtachao4x81c456qrxesa9tyvfp1bkylh2v3gnm2mbp34awxm1xfrv2lotlpa8oa3npvkbvityr9999jofyhfo3jnjp5yil2nn2g1w2ofvt9fwmsuv5i5u19uzndss3ok00utuc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f996fee3-555d-40f4-af58-a77a26e66b96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.437587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "27cc96e4-4fa7-4dae-aa0d-eaa54d00ea58",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/b6fac60rlqr8ejs2uvb40zqsswaqgzubvnek7enj8bm7prf0u5zanw7nt4m7zohk1n1ogudq5mjn1f2d9gftkgg7ye1mgty3jea2pif18hmydlqvnplt29/sjzuh6r1yh9jv44dbt7ekftuksd4n7nc4saf7d98i55p8v43juo3mc3f3azp4zvyt1tqmloseylpu2xzq89da6zma2jys56g2926hs2rzz5subjjez8xt6sy",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "27cc96e4-4fa7-4dae-aa0d-eaa54d00ea58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.436105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "87f53733-b91d-4cd8-a38d-1821f2f2bc18",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/mrx5n3yxfd9176nj42g00iqs83b1bvp0i86smeowu3bbg26zjjdnxv9m0ryez0ppqi9cats6vm8olj1j2zzyd58i8zu8gqjejhqivsjwugpz3cjwfnxbhhbvjvkp1s6xhye9yilavgo18u9i21u1keznicinvs77b77xag/dahyf4dk1l3f0uf7ypseyhpwlz832b76fhvpo6u82jok0squ2j8jwgmmxi22e3obhwacz4no6a4yg4nn6jki5hpan2l46ihtmi3c4dtezuyp6043xk7g6c2ewpgq7",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "87f53733-b91d-4cd8-a38d-1821f2f2bc18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.436063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "d73c612f-48a8-4598-8477-bbb1c057c308",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/8bzwjpu2rwbc922xp2l2l1pmqwvkpxue78dp7x6i9bfcwvu7if0lkei7/9od14fj7gxj7je4d4kvfvxx75fsjj2gfjt9492hk5krrncj9xg2ypd7r17cxg7bwbg4z67sw2qc429o0ypb1ccs2blja3oi663ot9yzhu5e1u0ui4ejbxj7yftewwn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Chester\",\n  \"lastName\" : \"McCullough\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 4.196170043304733E307,\n    \"candidateName\" : \"2022-12-04T08:45:08.43571Z\",\n    \"probability\" : 1.0559652526335944E308,\n    \"predScoreFamilyName\" : 9.70149947999229E307\n  }, {\n    \"predScoreGivenName\" : 8.161474077698448E307,\n    \"candidateName\" : \"2022-12-10T12:20:08.435755Z\",\n    \"probability\" : 3.2703194573861405E307,\n    \"predScoreFamilyName\" : 6.537028100533701E305\n  }, {\n    \"predScoreGivenName\" : 1.500075277797161E308,\n    \"candidateName\" : \"2022-07-26T10:14:08.435796Z\",\n    \"probability\" : 5.431775119565859E307,\n    \"predScoreFamilyName\" : 3.563959897267695E307\n  } ],\n  \"orderOption\" : \"8tupnqw6l\",\n  \"id\" : \"3xd1\",\n  \"script\" : \"tr7qo2buy47kz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d73c612f-48a8-4598-8477-bbb1c057c308",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.436011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "54fe2904-6002-46e7-a333-ecdd8cb8e9d9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "54fe2904-6002-46e7-a333-ecdd8cb8e9d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.435612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "790c7c4f-52dc-41f0-bd35-c43b04810a1b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "790c7c4f-52dc-41f0-bd35-c43b04810a1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.435596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "662c192c-28e9-4f24-b681-013d8202e797",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 400",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "662c192c-28e9-4f24-b681-013d8202e797",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.43558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "136f46f3-db75-49fe-896f-bc18f1b76791",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"castegroup\" : \"xea750r209jnjfjinv8f4ymgq5a7lf9svpsnqxfhbgi99jyz7hvfx0i3od3c4mxbun9yj8dpk3lay1wdqsd599r1dz03nc6r97y3m01ryhx7giajencjf17jtvxve3gf1uqfx57u9b9dsciiij9uoksdkkgmsqj79w6\",\n    \"castegroupTop\" : [ \"qq6wxmak3eaa1d5jrjslar3bf7mjhmqlkeqlmxpyjmmeake9m2ep3z98jump9r5adxzvwj01063y1w59jvkas9yvlsfmh7j26ne21q39w64lf9wbh4hbxdtdp8wby2hbete5r4qzhev5on9387e2\", \"vhwtuzbv5q9k6amr9v95h6954q69gmtboiud45zu5jea4js40ccyogidnu1ckih8uv3i56v\" ],\n    \"score\" : 41.673328943751976,\n    \"probabilityCalibrated\" : 0.4154131399199301,\n    \"name\" : \"Bryce Reilly\",\n    \"probabilityAltCalibrated\" : -0.24652607855603414,\n    \"id\" : \"yz95\",\n    \"castegroupAlt\" : \"63filk6dpm8ij9yphrf1xygaw6a243socu3ylgfl0whzi2gvvydsymbs28fbfwtwke05ydlad7spil3htnvpqmc5ol9uhy3fuuwgysrw54qoo\",\n    \"script\" : \"568aouiadahvfni6kra941hudlokb590bff4xk70wbm6k69re97dmkr06v6cza3djc3emdjixoes82kh8xj5ideqjkgmhrklj8bqmziigqzfx837kfmercnmw8yayezeg0pphtlesgix62362ug0165vpur0s9hatn0qrvzixbzbnur9wqgi\"\n  }, {\n    \"castegroup\" : \"tc2qc4q2ki71ldyls37w3jfosbvf6e069seqkv8hs6p3idp5635os8uapneh89eqygdtfvco3nr2lz3p89qnzs5q73cltkx3t6jrzgu1sj2zx88wg340hk0i5k1ihj\",\n    \"castegroupTop\" : [ \"31s5ibfho6rwwf0i6mr\", \"r81eyz4x4myl19swyqwidt6798zh4cen0t7wasekwnijm9fma55mkzdspuz32sajhzhffcb258y15zahtlkc7nyfoutbfpqljk3dxmdufjnhxrn77g54\" ],\n    \"score\" : 31.10128246276489,\n    \"probabilityCalibrated\" : 0.9898008419445719,\n    \"name\" : \"Brant Dach\",\n    \"probabilityAltCalibrated\" : -0.8297910560212136,\n    \"id\" : \"ld60\",\n    \"castegroupAlt\" : \"p74ksdlggndapairwpvvhfb3qup1esp3npxb9jv4ja07jcatpxxs8tcmvrwp0mr14snorm4fligju8e7v07yr6y154nyjt\",\n    \"script\" : \"dyw9mrnd1rmabyutqupt2afgs1t2j\"\n  }, {\n    \"castegroup\" : \"am23110g8qxz0jh3f6l3m8w43ghjl\",\n    \"castegroupTop\" : [ \"hmkch2dpb0jsewvwncz1xz2\", \"8p5lp4t0iqda3zgtmja4y894o3kyjwgdvl3k6unkryzdw5hq3yoexg7g2erbag98xcbuvechfwwbtqykfqvg9dsztr3kusjbqjoav8j7nyggufjs1t0malusmj72xqe5xe0zq44tah6pwg29eu6ocrkolfxmmynvuetjgjgoh2rt1rlhdg8jj0urhtbvhzd9yps\", \"ybosm8le43ca6uqyfshztpjyjreczz4d708u3gk07jahmzaul2u74v5ff0xniowzrhfrow61eek1jgid5vz70fwouh783yugjn00osj39iyglufffnq123gscayvbwmvf6\", \"en3v\", \"n0d1rozvxq6bfvuwio2az1qgqt3ox2lvzw3ajmgzvkqeu1rdm2h6ck3sxbekhbmbjgdll7u9cwww07244in68c2g0hg9m\", \"zwcfcga4rckyndhoxaq0zt22y41uqoeg6j70emubqnk63dap10d4vp9xhwa38i28k6v04aw30m7czdrd5xkozabv\" ],\n    \"score\" : 75.14871144448097,\n    \"probabilityCalibrated\" : 0.783932717232835,\n    \"name\" : \"Ms. Bradley Cummerata\",\n    \"probabilityAltCalibrated\" : -0.5302997635572755,\n    \"id\" : \"j9o5\",\n    \"castegroupAlt\" : \"fgomtyfqeqbg2mfreixmrrh0ek9068hmqpcpahp7dmcquwx5vb08w5cddvi1iolarrqn0ruh1p9xbio1qrvjz9cumyojhizjtugod1fh05ag5h3j3twg7uy2hxw0v60p6a082mzztff888ahtvxt21tvc76fk9bbuvz\",\n    \"script\" : \"orvn3ju9u634n210ndqtspb\"\n  }, {\n    \"castegroup\" : \"oax7yr0j4recd7hwgnlfmr13fj2bht6emot3a3w8ofw059rdb0y297qqwc585yxs691yzskpnq1ydpdgxt1ijep0yaq2i6fx43bwcd3gd8fdpbg5vy8men2x0phdd60br8pcmnakdd1m73g8139jtrgsoebeo23kwjtyb20soqrf9or9yte0cm7rofq0a2pm7cczulq\",\n    \"castegroupTop\" : [ \"vx45u8ommy5gqhumjsa6n0yasq1m73dceb196pgrh9y97r4yo8qiswyv3j0koqipxlpawm1a6dukxr9tjin2mvhdi7sa4orjt3kxqbv84anfbl3oha9lssv3wampt2ofpatunqqrvozfcss9hs3os94pu91lkc9z\", \"x1y4qfdmjrr62jkhfwjm7kyckfwwsxe7mzn4ywufczqlhn2w19nodrzk0ynu2z6968dthy0adejmmg9qhf6oywei0z73kcxfqg2aibhxf2v9e9k1ef8u7zg8pfg07o7dx04fw0\" ],\n    \"score\" : 5.082852905172041,\n    \"probabilityCalibrated\" : 0.5080453175474218,\n    \"name\" : \"Norah Raynor\",\n    \"probabilityAltCalibrated\" : 0.07240790920491347,\n    \"id\" : \"u8i1\",\n    \"castegroupAlt\" : \"kmkpw53t70o98kthunu9kd61dheulry8r8ocjlz1fmuufy73bjbtj3mxeevtioiy7cfqyesmmeb8wyqm8e0awo5j0qx7zpp7hrf0idmi\",\n    \"script\" : \"y2f8kahzk3r1yvgf62zyzg6c8m9ggp9zh8ksx527h7wlgrxw7hen8rgusqxkxww4qua6edp7tkghhfu\"\n  }, {\n    \"castegroup\" : \"k57osu5jpcvotm70jzfzxx1bkmy79oj78c5tc3b4h9pl6rw0rsshgdv85z4yeqwy2sy4jiid07n0jr6yk8uh0dzvg0wpwucrici4\",\n    \"castegroupTop\" : [ \"cuau1sjy14\", \"1s0kvxadb21k3zwfaymm8kl1fjhgs5xecbtqvvjr24vl99ux4dau3uffdzzjall7a\", \"ie5e7jln52zd1wsfxx689wb7us5ixmifq2uo876p45ac7as1uuzw9ktlsswe4ugslpjweojsldufquclxxp0es290xx\", \"wbhdh59v3rnhlrm2zw1z68wsgsenv8prr7yyd60xvhw6f235xbcctckkxio8vv3xvlhll27xmaouilqft1r9idz9qcr2p3nckd1d4xy3zfvvpkxcgctl1ucljbehqtarzfam3h1aue0b521bj3fc98ipl76vak\" ],\n    \"score\" : 62.466091978453605,\n    \"probabilityCalibrated\" : -0.16038483716902885,\n    \"name\" : \"Brant Will\",\n    \"probabilityAltCalibrated\" : 0.4533487590837779,\n    \"id\" : \"944b\",\n    \"castegroupAlt\" : \"5vvdmj8odhkifdt1wbh2nezpxzh0b5i8jxulms0gy8s3f4u40o3n9wsardc43e7lbu943jrfine1erz4lpgmla6xqh2xgsmiq1sfldmj15ucemop\",\n    \"script\" : \"wh1khna22t02g6dhj7ks84lnqkjsntvp8avgtf49nr0k1lw351dffd4r44k3p434sxsnoe485n2s78h00qln48t6t682517aj6r80m0vui1sahdx0rbeb5\"\n  }, {\n    \"castegroup\" : \"eukusnge7l38rv2jll24l5jw4nrejg9lvyo1ouz66s3pvenn7c0txsrajuwh59ob7dy59s7zdbdrtmapi8rp4iw\",\n    \"castegroupTop\" : [ \"amflfdxj5ljwt\", \"t61jta6d4wbpnij8t9sov1tq4qhmw1aghqx0czfpqice7hc1wjquxmngigtjj71yg72v6ymuo6gzev0g0jtv8htxlmqp4rk7hnqo4wffyv33uxwtwpvplz3gaebv3jx9tob4443mr4oalaf\", \"az34puv3klzw7e3e6ek54ax4yah25ww0wqo3l9qzv3ibn5kun6hb782lz1spejl8ysqm0kip358cpd2viw6ka15camik7khg36y50f6n3ft6i2hr7jar1ffvseqit908k7sdzqmfkdgaqr5ghj21cnqhh0elw4i4gv3ej8a45ci39d6okw2dn9w\", \"9d56qjy19z0f59zr5n00myuf77163yj682uzn520dfg81zhxrmil5ncmlcwrgc8oi3thiymktfifcdrt3ar4tq40\", \"8p8fllz8hj2syi76tw1p59e0fjkdsavqsxt1urnsg5vp797oc4qjq42n00zlabm880ivj9g3haxew8yfng3282qdez0cfmdm6ahtk2uok8ahxondo9ar40dhjsv7qfag8fwrrz3pptc0vn\", \"ipqrp7fegdu15n1e8fqj20hmqye3lahmnrbnaniaqccl22163d786sfhx2rw7r2sg791euc5heskm9gtvwm03euw5squa5xklpyxwrwitks2i0jb1jfkjh541nd8fqhmhy3ev47dd5e6gj1d5rx4j1swf\" ],\n    \"score\" : 39.09614992053228,\n    \"probabilityCalibrated\" : -0.04978266776815121,\n    \"name\" : \"Asa Kautzer\",\n    \"probabilityAltCalibrated\" : -0.4242619868947417,\n    \"id\" : \"ws67\",\n    \"castegroupAlt\" : \"mlzok3p8rjcbvgms6mj8vhe2ck3ck69hrldg71x8hgsd1wj43vxra8007lb4fllwev3g8efhm91henm8xkpetm2cnci9b8hy3o6i7\",\n    \"script\" : \"ugz4r85evtpo7w3stbxeoqj5lngsttr3fxzzifl84vve76bgd3ymboz5m27ll4mirdmwyk9aea1jcfn0fhwh0ioi24la44ogct0vq7og9gweb6ki78fkkz62p12s3\"\n  }, {\n    \"castegroup\" : \"zj44zljt5qazzazfjwob5kxr07wgrzyuyad3ytx6ukwnn7xwfh8dqy1\",\n    \"castegroupTop\" : [ \"z5t0ogv4onqao3fnpcr6jo2pembhhljehkcnwyjcfr6dm9gowtykj258exibmot6mcl9vegjktlcre0pd6uz1xtxto9wcsfpgb42oouziuaz43pfcfmm64t4i8e7wusaxna53dklwuguoef55\", \"qhgcoab3ke5sj6jplc7hufw6glzsta53fxfh4t549usrbmhzddemopr1sfnbdbyhyufwubn6pr16uqp4j7f874pqw0efkyus13vqezet2xqhoufecsjfcsi30pgqdv671tcvbjmhld6cotev1gd3u4psjppti6m23zk\" ],\n    \"score\" : 43.60738114367724,\n    \"probabilityCalibrated\" : -0.17317667711208728,\n    \"name\" : \"Laureen Ward\",\n    \"probabilityAltCalibrated\" : 0.2583950423901833,\n    \"id\" : \"51np\",\n    \"castegroupAlt\" : \"jx7ce97512gwhhzwmm1prztv6ztlgq252ybijt1tyedsoof47yove5co8hlvl2w50mt4otqzr2duvuv1squ7ehoaxbu9cr3bqkxb46mpbs9traw63zpqwgt1fz53yvxvzlzbsdh24vr60znbicskj2ulwp5dy3\",\n    \"script\" : \"qpyvugl5chgi50ivjbyqgafoqw5p1jv1dcmg2evi119pu48ytkquqof5xp\"\n  }, {\n    \"castegroup\" : \"7k4g9fcnxpjc7quf3yo3fo8etv4685mjscpp3r19t94d8d1htirmm1ot9psb3rh0bcgqat1quyxj7j536rceaath92jnnudn7s2fndgy6cxm1nogm2dld2j9i9qmwm8ck37w1kac0md2mrnd1yyd0zqhe7fc\",\n    \"castegroupTop\" : [ \"24sy2ygbebj4zo9yejo6u8oj09h358q8bkzymr6b2ucgtmydarnkxcwj347qr8r7bhsj5wbn51g5s1j3j07sq7avcwj6wwxymqj8cquex3j4zi0ud97colwxchbdb71qh45\", \"08za0m91595vmvma0zdv6x8qc8po2rxb96yx0z05dbogajb8nhlb7chzztt1sq08w9447nzdf8yjunp6jiu3w30qracyjwihdx61\", \"2gmsk7i7am88m5722tez7mnulph2xbdmaftv44gxcwveht5c04fqiwnfwp2303yqjbhz38geamwaut27olvjrnr42j4re07kn2ijvb9x8ezzjs9tpk6fn7nzi9lewn10bew3nwg0sr0i2337lud1xnei6qjht0ker\", \"rpkdiuqdxo\", \"pzavqw1rwxh4besfn5fuxh8cvcihufpz9uujpbv9zjn2uot4sbot1hkan2fzw6\", \"1vuaqpopzrfm97kckhmsrcs3le9cj5hao64fovqt5myqx4fbxwxpe88bvmt4bgm6h6792a2iya38rif0bx7582yej8jd3eoqwu905gllyzosy1yoco3cli89ohhtq4hut5go4735o5ri6q0220\", \"lnl7cwmlgi1t0kfmizc6nnzglikd2t5dpw3\", \"h24ffra9l0b9cqi4zkws0e2akcdxywsf2cfydf0vm383vsocl8qdeifi0r7tx3cx694xp6qnrbsz2rrec3csl1jebkuix6zkp5j\" ],\n    \"score\" : 8.196350735346192,\n    \"probabilityCalibrated\" : -0.7280964609418257,\n    \"name\" : \"Kathrine Collier\",\n    \"probabilityAltCalibrated\" : -0.814900885554914,\n    \"id\" : \"za93\",\n    \"castegroupAlt\" : \"nycdpjcm23s3cpoqw4kh3hlf52f7e1de859tufv9m4xw57i9h3j8ikf7m3fdanamh2vob11hktpplvmb4fmjnahsix79qekabq352ope8mj1uqev5cwkbjjr1hoj5xazcctehk6p8unqpelpp5u2eb6q4rtn1se8ehoi1hqx62a6mp76abfwcu89qazx87fhx1wspocz\",\n    \"script\" : \"mbsrn9xob6qzevvbw3uo03uifkoz7jlozn8stq0dn2lfhn7a7f3f312cqnxnbmfz24vuyiih6k5gbukxzdxh7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "136f46f3-db75-49fe-896f-bc18f1b76791",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.435545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Caste group-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameCastegroupOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameCastegroupOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "044610a2-4f85-4efe-94d7-72b44aa12641",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/ydvnor5t9qubphacpbv2xrwd6i7ha1n7mmxp1wzv7si9brh63een7pj6pb97g0ns2liy4pqvmcgndkeojhdt14u4a15bzc24qxp2enhwro2uup1r4w8ovr7vmrd0ri5vrb69yvxoweiof11u4nsoh2b96qf4tdk0jzd7k6ybq3i2zgbqhpw/7ax",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "044610a2-4f85-4efe-94d7-72b44aa12641",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.433926Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "b217a2a0-a88e-41fa-9dd9-7c1812c4334f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/z383y9dpp7eorjgll8c9vkg30spcybezewuxgzk2kjoedx2m3uo7k3hcsm1p3q/r4i4d35h4x1o2t84gkf8e72pw23xbfvd66aw7rl3hmdd",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b217a2a0-a88e-41fa-9dd9-7c1812c4334f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.433883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "1b57cc65-cc1c-4e6a-8f98-fdef7986cc69",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/d3zc7ped3ng61ty1pdc4d31upswktvuqpsji30xzrmy53hbb33sy3yocolzlxizoqn61wzo4hwgtnv45/mv1f6uwsbr7aqt",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"castegroup\" : \"cuerloqnef75zigz8qys0d9kr9rij8329pahg7o8i7294c9ef6nwxqxjbypjcq5r07u3mp3yo2me6axiuudhe5x9bwugfyk07g0qs6swgdt7nl4cj\",\n  \"castegroupTop\" : [ \"te84goqiyqqmxrc4ndw69am17s65pfec19rl7xlh69wsppkw3vwujcja1vrmafn8zw1dhy15z\" ],\n  \"score\" : 17.683339872747126,\n  \"probabilityCalibrated\" : -0.6332077468035582,\n  \"name\" : \"Krista Daniel Sr.\",\n  \"probabilityAltCalibrated\" : 0.3885198429978318,\n  \"id\" : \"84zt\",\n  \"castegroupAlt\" : \"kyw98qc5ak27eg05jqdg4rihim597slzm0n6r\",\n  \"script\" : \"buj76w5vesakifng4ts6h0n78qrwfnvjg67ktsvlkvf5q27enm9d9k0riu7vm5bjylaew0vjztsnlkydsc33rtsp4guurp93kzl0m05qsbl3ibz59a6u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b57cc65-cc1c-4e6a-8f98-fdef7986cc69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.433803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull",
          "schema" : {
            "description" : "Caste group-coded names",
            "properties" : {
              "castegroup" : {
                "description" : "Most likely caste group",
                "type" : "string"
              },
              "castegroupAlt" : {
                "description" : "Second best alternative : caste group ",
                "type" : "string"
              },
              "castegroupTop" : {
                "description" : "List caste group (top 10)",
                "items" : {
                  "description" : "List caste group (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameCastegroupOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "53bf16b2-1a24-4850-a9c5-762454486389",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "53bf16b2-1a24-4850-a9c5-762454486389",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.433426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate"
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "934787cc-71d4-45c2-b55e-be8c13ea7989",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rowHeaders\" : [ \"ebvudl2m95hjbpca6hpgb1wv5b66cenijjqmp2yf5ta1xp7ptia96at51qioeufm2yadox5shpfvo5h3ddzpagviyd8revoy3pslfjaip72gutuu5m3ejjs2tqifc1f2jpk08vi08tk1tzjnpok4597oyy54p9bp14qww5vsz0d44iz1f9w1t5ph7p\", \"wc02954e7dnctg3ovhtr4seo8aurzuigl52fzggk8z8q8hphectciqxbie06ubvaqy5l88pkj5h2wglxjg5t\", \"h653t3tgrrwo4p9xggt8ugy9fv32dyq9jjf0icx8ouzamktfueyyy2esfu57yszsdc\", \"l117z9pt7crocp5ntvyh5fas61358x66u2cxcz144aiq23vxmlgflo9yg35qigg9mnm1gg86sp12c0mb0xjldhq94crya11rn8bten47cmx02umyfxo130tedxii\", \"lhrmy0bkkldzkryc9betrwccs70j39d9u8m7treuiarxg3kqu2zs05qsq7qzqmmk89e3l7j9kw03q1w3a27hd0nceyn48nv8n5fqycjmok49mxv23z3r70pr2eibvwavhrm4oasodd6ez0an8hi6dq\" ],\n  \"data\" : [ [ 1146369320, 324210451, 2137628576, 1811526880, 761793971, 1601714140, 619609162, 1894816552 ], [ 176298216, 368122695 ], [ 101657270, 114733161, 1092474411, 1251942182, 1749654912, 1078730098 ], [ 693441283, 579262558, 1445559515, 161022103 ], [ 70240281, 711428220, 1900260934, 99667719 ], [ 1663339009, 540849135, 725136128, 759222249, 2038556275, 1474724975, 845908836 ], [ 16482317, 86337094, 1292557221, 1484004321, 1261897004 ], [ 1279263206, 1995013285, 1110054381 ] ],\n  \"historyTruncated\" : true,\n  \"colHeaders\" : [ \"efn5lyhzi3wx9qo47yf940ro41hxyjuixtnwyt2x9vtje87kjsl1ia4hrr878rvvrcgny3axfp0mqjqjbm3bkq2xsakrk2st7hn59an0cpi16mfd7fcn4oz2ml06lrmwoj236cx834d1hzyyrcbw3slg98h837lp8zv11mqbudj2wgp23vnj3m5d9gm9zjkuig6a\" ],\n  \"totalUsage\" : 2301355448077092040,\n  \"periodStart\" : 7945830591720619457,\n  \"periodEnd\" : 6931786427544586301,\n  \"timeUnit\" : \"2022-10-07T09:12:08.433268Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "934787cc-71d4-45c2-b55e-be8c13ea7989",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.433396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate",
          "schema" : {
            "properties" : {
              "colHeaders" : {
                "description" : "apiServices as column headers ",
                "items" : {
                  "description" : "apiServices as column headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "data" : {
                "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items" : {
                  "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                  "items" : {
                    "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "historyTruncated" : {
                "description" : "If the history was truncaded due to data limit",
                "type" : "boolean"
              },
              "periodEnd" : {
                "description" : "End datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "periodStart" : {
                "description" : "Start datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "rowHeaders" : {
                "description" : "dates as row headers ",
                "items" : {
                  "description" : "dates as row headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timeUnit" : {
                "description" : "Time unit is DAY, WEEK or MONTH depending on prior usage",
                "type" : "string"
              },
              "totalUsage" : {
                "description" : "Total usage in the current period",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageAggregatedOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "d075c16a-7e18-483b-8929-197092d0f07b",
    "name" : "Print historical API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d075c16a-7e18-483b-8929-197092d0f07b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.433003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory"
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "8ad429c1-6676-45d4-9c77-fa7eb21504f0",
    "name" : "Print historical API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"detailedUsage\" : [ {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"woel49x6sa9kytk8j6v18ow2zc0vap9wg7bk9bcqpweuptwy1ytn590k7q6rj63slx7msrd4kzqhvosgm0rn3ldr37qmgoilo4u91mqcqnm0k2gtrs350ivin6bj63cz8irz0yyz2n1p0bttn52tdgxd7k5khoozdveahhhwwvcib\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : true,\n      \"disabled\" : false,\n      \"userId\" : \"s376\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"5dvtgyyukw9s0i6xlq7nsblj6gzbq0pwlwwcenr76fhtwqiypypac\",\n    \"createdDateTime\" : 1000046277501194724,\n    \"lastFlushedDateTime\" : 429546333787977211,\n    \"totalUsage\" : 3048595004514079127,\n    \"hostAddress\" : \"2u6l3gqkrwujl0aqqkd82t77t3twejjo88h5q2k4ll1bbgl07dkwgik01vltbwzz6qgchsx9ni3fpafgylo3a6h6erbdxo4cmcqi7i76xpqcx90kdy5qsxylutsscn6gd2n3qlnispmlnywx9qvr5dufojv4gqpac0sku1h26pimcgre7409\",\n    \"lastUsedDateTime\" : 5082239115086095747\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"gva1f4wei6r5r2q07afi9rrsg4cwt0j6t9ia343bedrumi7imctwr3jhko8jmhohl8rept95nelgp24fyxtxya4o7rca4vecz8o7hfabxlg4gft5p5svqduixaf8oq2ukttpd42ql5x9ajth\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"977v\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"tj7t737kg5l15jpn6vmr6j1cp681c3kd59vlr9lqhy854ifpl98dbe97xdk5wm020p01zb7fy4q3b2ar0abd2bq8z4n1mn6y0tfmhwi8qoaed12eri08tli12vw1i34hbpf0m0w4h6i4c1f5m5betf4h2hv9k0ldofyrefirvyu\",\n    \"createdDateTime\" : 8308423863234428043,\n    \"lastFlushedDateTime\" : 8909630735974320194,\n    \"totalUsage\" : 3747224917972662672,\n    \"hostAddress\" : \"dc6hbwz8z86zkcbcdf5aab8y1czuupurzantolzrjci8k9wmfuajuk1tn62o7ab5mzu3bbkzztxk2s22qej66vtjfqh1lygso3ahk448kle4w7qgrjc85g75xohaj1ji9zs33y1\",\n    \"lastUsedDateTime\" : 7806377217232131137\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"r0pgs5i9j4fdrm3uabrrs6zte7zzaj5o8uga6qackwf5mwm8bnuh8dmyy9lbcgewylf0b05ve2s61x936yi9b725s8y6ppccvum373ns63n5714l38izwd7kan75200btbyy5ggxjpvoxvzc2ubkxq55jlk7e2bryhfxan\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"1xb2\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"e9h84dk92ixaeb8duw0ouf1jwdl34jd1uourln806elgeyjml29xc4i2uwxw3237yqd3pn693dmwqe2q6dhab1y67gcxoz37lrx93eyc8s4j1ecphw6qy3bei6uzyywfc29p4d9e7ij6fxd8mcpb0b8esez21w6pr35zuyuq5g3ac\",\n    \"createdDateTime\" : 1172522870014769467,\n    \"lastFlushedDateTime\" : 27305252767932212,\n    \"totalUsage\" : 4627732345565257614,\n    \"hostAddress\" : \"l3uf6e0bm1vnyzv0vbf9ia\",\n    \"lastUsedDateTime\" : 3536621297717180008\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"68aje7fnjlbfibg8wmcwl33f7auo96yxjbc8fi0e2hgmlw9s04i4swqfqyktfkikjnawixasl3o6sad7w43qga0btqzsfgzk8t7s4gmz33iaqtldw0b11jrfuzme03lhcg\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"807i\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"832qy6rjvyjcp9pqxs95hhcml0lud3b6jmobst\",\n    \"createdDateTime\" : 4372485851367774794,\n    \"lastFlushedDateTime\" : 6249200214799239436,\n    \"totalUsage\" : 2286989484367417848,\n    \"hostAddress\" : \"ayislkeq35y0bn6gpah2a5psn2ow38w8ezqtdlglnpgg79tipcg0jmigg4az4h2l3sa8kzjbyozmeymk4wbk02dxqt8lmqw9hzbodn4xgvoaoparrc8sqqw1k01gp8uo6ld8cbu7sarclmwnp9gnv966vsra9ik2fmcyxexkit\",\n    \"lastUsedDateTime\" : 6912189368623332815\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"2gg096ataxawukxn8ra3gwf4ilemyrrnfs12xtq1wsxreurshqehf47k28\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"9gnb\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"ejnbtvpmqtqmtmlgks8yqed7eeelz2sqeqn06r4fferu9gndwbt9e3aj9zag47y6qt93mg7e54u01pfly0axvkhesbze0kkn21d3tpondv6cobxoi\",\n    \"createdDateTime\" : 3858600673541814066,\n    \"lastFlushedDateTime\" : 375424658246560806,\n    \"totalUsage\" : 6720504372923846666,\n    \"hostAddress\" : \"7prn8g4yx0wvu8jqhuaasqbl7da11sm5lebnyqw2vnwylmet729tx874ykiuo0p5xk6j3glpxb53xpyk2j98zuphnucjwacs8qg5a9dzy1aqkvfcdk3p12l69k91ffx1k2q3dh61qkvvamh8lb\",\n    \"lastUsedDateTime\" : 9143515224501083508\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ad429c1-6676-45d4-9c77-fa7eb21504f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.43297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory",
          "schema" : {
            "properties" : {
              "detailedUsage" : {
                "description" : "Detailed usage as reported by the deduplicating API counter.",
                "items" : {
                  "$ref" : "#/components/schemas/APICounterV2Out"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageHistoryOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "176324b4-9704-45be-b4b9-84fbe6bb03ae",
    "name" : "Print current API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "176324b4-9704-45be-b4b9-84fbe6bb03ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.432087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage"
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "300a6384-0cf2-43cd-b0d4-0f7457ac5ed8",
    "name" : "Print current API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"overageInclTax\" : 1.3350398618656044E308,\n  \"overageQuantity\" : 3685774299709175001,\n  \"billingPeriod\" : {\n    \"apiKey\" : \"76ygo3x0o1459tnty2g5y46zhhkoqhdj58xwq65286l2b\",\n    \"periodStarted\" : 1678944559186861360,\n    \"stripeCurrentPeriodEnd\" : 7344205401153025834,\n    \"usage\" : 7264559898549742739,\n    \"hardLimit\" : 8295956700679191631,\n    \"periodEnded\" : 4816863896334397378,\n    \"subscriptionStarted\" : 3926650019935491341,\n    \"billingStatus\" : \"k3k5aqh1f2vcmvvkrair82zsdd8qg0bqe5\",\n    \"softLimit\" : 4491521173190702994,\n    \"stripeCurrentPeriodStart\" : 7992282260425377036\n  },\n  \"overageCurrency\" : \"NIO\",\n  \"subscription\" : {\n    \"stripeStatus\" : \"434zdj2vj1ez1fd93zvoyyc8t98w75wu6fvwenp43qw9js498wtsqbx6q73mg0s33a4nny50ibl6o9es9hj7pdd9l8fshpca2j85kk\",\n    \"planBaseFeesKey\" : \"fpko7xsjfwhr3yyfr9vj36la7nv6aood5kam2bzxs774iz09j85tkrzal4bxwvmi8c3xa9h75sxq3af25bixg7f63e6jhe3s33cwnwkvsk956pvjvit4rtdjh5ngig45j35ndfjitit9bfpkepxwtmq9u9css98qw\",\n    \"planQuota\" : 4878945274188512030,\n    \"apiKey\" : \"9tubnhvo5f1ksm3cpyzq2ipwdzcosp6jkfq3pg0srt8qwzztx93f2nprv2yvh0wvmgvllfka2m8fqoe5q4dnbwm1rqmrj8mk4bf57k6y9yeng91t2gsbc7vomjqr6eavepvq8\",\n    \"priceOverageUSD\" : 3.310229486917904E305,\n    \"priceUSD\" : 5.339378566470368E307,\n    \"planStarted\" : 2013325745213621397,\n    \"planName\" : \"Miss Doyle Hand\",\n    \"planStatus\" : \"2254biebnmbgtbz49lthhi6bvrf40oayv6ca4z3g16e2v6m8u\",\n    \"priceOverage\" : 1.3533747561528915E308,\n    \"userId\" : \"6vx7\",\n    \"planEnded\" : 5696151220104069594,\n    \"taxRate\" : 4.4103282431217057E307,\n    \"price\" : 1.0413585216160739E308,\n    \"currency\" : \"BZD\",\n    \"currencyFactor\" : 1.6065375231871036E308,\n    \"stripeSubscription\" : \"qbm1v9r8xa4atxbbwye96nfgpi9614dbknw73w8jgnfrywndrg0yxlsil7o9ycp3h76x6e2295i18vgc2\",\n    \"stripeCustomerId\" : \"w2yb\",\n    \"priorPlanStarted\" : 2893035575826825339\n  },\n  \"overageExclTax\" : 8.222836133980816E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "300a6384-0cf2-43cd-b0d4-0f7457ac5ed8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.432057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage",
          "schema" : {
            "properties" : {
              "billingPeriod" : {
                "$ref" : "#/components/schemas/APIBillingPeriodUsageOut"
              },
              "overageCurrency" : {
                "description" : "Currency of the overage amount.",
                "type" : "string"
              },
              "overageExclTax" : {
                "description" : "Overage amount including any tax.",
                "format" : "double",
                "type" : "number"
              },
              "overageInclTax" : {
                "description" : "Overage amount including tax (if applicable).",
                "format" : "double",
                "type" : "number"
              },
              "overageQuantity" : {
                "description" : "Quantity above monthly quota of the current subscritpion, in units.",
                "format" : "int64",
                "type" : "integer"
              },
              "subscription" : {
                "$ref" : "#/components/schemas/APIPlanSubscriptionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APICurrentUsageOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "40214f7e-4c00-4781-87fb-897ecd85c05e",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "40214f7e-4c00-4781-87fb-897ecd85c05e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.431481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus"
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "dae96eea-c9f7-4817-b709-698f90ca1e52",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classifiers\" : [ {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Rodrigo Luettgen\",\n    \"serving\" : true\n  } ],\n  \"softwareVersion\" : {\n    \"softwareNameAndVersion\" : \"adluy33xn8yut9ishnyvt4hfdgui23gb9ri6tu00yzyzqaq2yj9jcnnrxyos2w2ilf2jqur57km6upzklqtjkdrik7gefh8z5y\",\n    \"softwareVersion\" : [ 36519944 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dae96eea-c9f7-4817-b709-698f90ca1e52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.431456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus",
          "schema" : {
            "properties" : {
              "classifiers" : {
                "description" : "The list of classifiers and versions.",
                "items" : {
                  "$ref" : "#/components/schemas/APIClassifierOut"
                },
                "type" : "array"
              },
              "softwareVersion" : {
                "$ref" : "#/components/schemas/SoftwareVersionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifiersStatusOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "89e28aaa-4422-40a6-a451-49f7c46afabf",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "89e28aaa-4422-40a6-a451-49f7c46afabf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.431314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices"
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "4272d20d-16d7-45af-97d2-c638ff349ddb",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiServices\" : [ {\n    \"costInUnits\" : 1006259196,\n    \"serviceGroup\" : \"7i5tnh3ul1b7jagq4s0l\",\n    \"serviceName\" : \"Blaine McKenzie\"\n  }, {\n    \"costInUnits\" : 584376412,\n    \"serviceGroup\" : \"dhiyk8m91wkhexgr3e0z7tw8vnappp7htn0wt3kqwvze2dtr6jlvl7dkyhnfcg554x1egqlqe3vnhxtcvnbvmoih47akz43g3\",\n    \"serviceName\" : \"Blanche Swaniawski III\"\n  }, {\n    \"costInUnits\" : 1011061887,\n    \"serviceGroup\" : \"f7k8s806r3ihaqz9nk8qdkh6c3r9hi6vw0ys7ecuoyqhas3rck\",\n    \"serviceName\" : \"Gregg Heller\"\n  }, {\n    \"costInUnits\" : 230232113,\n    \"serviceGroup\" : \"6auqe0qws49pavqc9et0wsu17js8uz490kqew9237vo50tygyjr78adwnu7w8fhqs9y2umxod34bc8huny2qavxj48llmikszzujh07u24tr50dbrrzf2eh52oimv0h57oi2g6ry2dfmrxsnotvshffzwgi70lk0xwe5o063wceyfcnt0l5jj3ohgue8o6gfkhnm\",\n    \"serviceName\" : \"Ervin Kovacek\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4272d20d-16d7-45af-97d2-c638ff349ddb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.431287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices",
          "schema" : {
            "properties" : {
              "apiServices" : {
                "description" : "List of API Services",
                "items" : {
                  "$ref" : "#/components/schemas/APIServiceOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIServicesOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "e25e254c-b609-4435-b8a3-0cf36e818565",
    "name" : "Read API Key info. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e25e254c-b609-4435-b8a3-0cf36e818565",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.43095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo"
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "44231072-7e48-4c0e-9f96-e4659cd319cf",
    "name" : "Read API Key info. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"bo246cv1mjua8eg4frwj0vdhlb1x8kr2icdiiby5cw0l8lib0151j85f3irm6y5s9nq5u08ugj48p85pkoe7lmyaaja33iaeqvcu2zeafirgjxe9jnuk8s6n559gfv\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : false,\n  \"admin\" : true,\n  \"disabled\" : true,\n  \"userId\" : \"f8c4\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44231072-7e48-4c0e-9f96-e4659cd319cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.430922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "40ed83c5-ca00-4a5f-8cbb-e9c055e75c93",
    "name" : "Activate/deactivate anonymization for a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/anonymize/8sj5g7stdq00350q108srrq9lm63ggvy6bn6iu00at/false/b0qwt62mqp5m4vl774c0z9hxdn1a3ykjg2bo4pf48hnm3pa8irwg2s1enc1bgifva3nuejm9ogu5673dube0sdh3o2cx5rnpz6klu3fokyqvg5zpt7707b1dwmifwv01rotiprj1g5ejl47o5f1w6qamfnuissz5g5p516ipe6ci1u6j6hg3dtjk4mua1w",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "40ed83c5-ca00-4a5f-8cbb-e9c055e75c93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.430709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "ac037b96-11bb-46fa-b969-da7e0bd552c9",
    "name" : "Activate/deactivate anonymization for a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/anonymize/rmq2pu1g3ff9i8plcmrmniehfsw3k5xbt9fmu3m5uwfz9s2y3xy3bocqiqosp6qgfchmiiireks/false/aznikjwuw63eu89jkkusd0ytt0va9zrbl7hz0z2da4rtl12c3s7usqkxxulmlny60pufu1asxgf8j1odj0smj8hfo271",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"8tim3xrjfhx50c6nyt3kd9\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : false,\n  \"learnable\" : false,\n  \"admin\" : true,\n  \"disabled\" : false,\n  \"userId\" : \"2338\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac037b96-11bb-46fa-b969-da7e0bd552c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:08.430619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    },
    "insertionIndex" : 275
  } ]
}