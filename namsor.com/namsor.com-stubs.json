{
  "mappings" : [ {
    "id" : "8559b13a-ea5e-4d8a-a5dc-10e6f467da3c",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8559b13a-ea5e-4d8a-a5dc-10e6f467da3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.442407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "5ef21d82-0421-4e28-8b82-55a9d709606e",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5ef21d82-0421-4e28-8b82-55a9d709606e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.442371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "3f6b5b64-0a30-44ec-ae5a-f7da4b0e33a3",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3f6b5b64-0a30-44ec-ae5a-f7da4b0e33a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.442354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "835b835e-3c9b-4235-81e8-b9bbe9548df9",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Jonnie\",\n    \"lastName\" : \"Crona\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 88.50771276322642,\n    \"probabilityCalibrated\" : -0.6094654116433738,\n    \"raceEthnicitiesTop\" : [ \"4ogq2efkk6s15glghiw7v4soflc5nmd5sw3iyoyqsno830qvn2oxbaq2d\", \"9gslx2uihwjdcpllun4s8did1dki4irn3ex9x6vhrjm8ojthnhmwc07i8alvhe80c79npg3saa1qv92uejdo6ixpddoi1b33y8gnu0c3yidmmykhvb943x8u9a1tlpoy78ys8u8b4e10c97\", \"1u84wuui9h30nzfzh854l8782ethp8hpxod6nxak9e9axg4xnzr75yp4rkvgvknpy6tkdbnqgq00448ooj69uh7jgw3fkmm8oe1eitexonaogx39coro1yg79ytlrbx3fozgnl792fl\", \"f48y1g3xhtw2ivsvdjja98h4787c53tbdc1na0h0foxbj7sfm47myixdi5yscmisxfcng5w6gf2zu0vavef7i5d5mgihraf3w5eyulkfw63ufl7hox7cknifjcg021jrg6eah4hmbuzd1ztwx1oh1l7p5bnf9vclzeh5hrn9t\", \"b4xotn0iqtb661ihm2d9z1elkvtl1jbskfztaxecb2nq32n5stx41eseuf4xr6k5f3rmhn2kyx13y3lwic9gftv3sfi76ky3450rvcrbgup8uin386llyepwwntxb9h6sxfr42zsyibyxaoc903dt1m9o\", \"q0x9c7sdjqk9sc9c01lud6egmpn09o2e2hbienz1h4srqm60ytr85ajyde1g7jrw0ci6thi1vhua6bfd1ljvr3hdm982u05ckea54ew2w2y9kl87o5rcxhcvsd6fweqk32mp5y6q9i7pga9pz5prh0sz4irn2vk3oguv6oqas9qxmn2hjelbhrao\" ],\n    \"probabilityAltCalibrated\" : 0.003916234722381784,\n    \"id\" : \"88ym\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"sn478wh6z3hodjfve7cdrcno8spn4logjrjyig7wuxt5bx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "835b835e-3c9b-4235-81e8-b9bbe9548df9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.442329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "845b23db-a279-4c6d-8832-0ea4a4de095f",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Xavier/Kautzer/84720",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "845b23db-a279-4c6d-8832-0ea4a4de095f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.442071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    }
  }, {
    "id" : "541e47fc-2b6b-486a-a01e-34f0e67900e1",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Wayne/Boyer/90413",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "541e47fc-2b6b-486a-a01e-34f0e67900e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.44199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    }
  }, {
    "id" : "27996c06-5ee9-4aa3-a7b9-89de92ce459c",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Lanita/Ward/19920",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Mina\",\n  \"lastName\" : \"Wilkinson\",\n  \"raceEthnicityAlt\" : \"PI\",\n  \"score\" : 32.63495245317015,\n  \"probabilityCalibrated\" : -0.46466537589183354,\n  \"raceEthnicitiesTop\" : [ \"pa2f4rsf8m4hclkgzwor8mn2a2zgrpewj9v4h2isa1egf2skfoloydp0k8qg96dxtvzbpe5r2aihu4zf1zyah6256oq3pr8rwye0861nro7whhjl23jf0j620k00fjvqg6oa5wz2ijfz7j2etiajlayo8\", \"k8puyjaac5c5sz6rb3zeqmubknsa81h5m1dwjc1tsfrv10q1ub0xveplirkfuoipk0f9dthkueddz39x4nshrm8no9d6bw0a2i39vwcpd0lu0kbb0cg9u5fhhcurzrazxj80n8lw514k2kvo2u7r7ful9hcagby9076d79rkbzyhqlzku09db8\", \"nhihjaix0j7nmph8nz\", \"9rs4st1jm1ygmckcqkb6gvnmaw7o6wsvhkbls33vdipfgb61m8y2zu7mcymd03iv8z76moi1jf6qyfsol3c8ivz2bx\", \"24dke5kjjid2j9659nv\" ],\n  \"probabilityAltCalibrated\" : 0.3862538233840038,\n  \"id\" : \"1r96\",\n  \"raceEthnicity\" : \"B_NL\",\n  \"script\" : \"ngirzoc8symg1gul9xyaqmghfvmtzpil357bzjatlknaj6qrhlf4czc56u32e6rqrueh53\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27996c06-5ee9-4aa3-a7b9-89de92ce459c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.441899Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5b5723e2-9238-4316-ac8d-a81a12398cba",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5b5723e2-9238-4316-ac8d-a81a12398cba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.441519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "1e76e887-8439-48a6-8c53-9518ca98c847",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1e76e887-8439-48a6-8c53-9518ca98c847",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.441503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "3d723836-581a-46bc-8669-98a55c2357c8",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3d723836-581a-46bc-8669-98a55c2357c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.441487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "edce37b1-5d3d-44c1-b274-d5baf2769340",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Christopher\",\n    \"lastName\" : \"Emard\",\n    \"raceEthnicityAlt\" : \"A\",\n    \"score\" : 55.949063634831255,\n    \"probabilityCalibrated\" : 0.6520475380175377,\n    \"raceEthnicitiesTop\" : [ \"h273a3dzgddpqwje14djqqa292efa68navo39zkj\", \"bhzl1em5mp22h8rc3e6krue4069vys47tkntb\", \"e1xo3083f5xtz2dvyufhvuwq4gxvucj9noaq377sy6jqt710bc52f50wcqot3rwqm5pv6aspse5fe252x9nrmm5xx4dphqszbcsuriqb10va2jaf6rrx6ioa2cdy517ka1d77zbjt6saadsi75oji4g11dm4uvc5ixanhkjfrg60pgmy7j1ebu\", \"e7w218g82ack056c116dhl5jw6w076rumkgjclx8kxxmssn10jkifm7lqt8868u4xgimi84hu09mnu8offio20pady4yjo15a9mrbq2ysxfurvb1zhwe2jfp2fyxq\", \"ilq3cr2d0tgivgvqjmn8lduqutm29\", \"48lziprj8p7fdjt132w5mn0l2m0rdatl7t6y0ncb0iq9xy369bgv9oi4jg8w5wuxhfm8ieoeztdauk4ayfyxbsk0leru\", \"ngittiqpq08y3fwckn1oiu870y3ht66v8wequgcpp8kxu1v43dzffwh9mii5purbhp80955x7\", \"wa29l791eqqayqqxg5hx7qzt07i7ltb1jqqserzptg5s9yv4gk\" ],\n    \"probabilityAltCalibrated\" : 0.9636259815978632,\n    \"id\" : \"3114\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"0sv3ufg0x5z26jrrv3hp8m96q3m7ymooju6sa8uwyi1hk35kifx1wffro0lf1uv8ftmcnbxeis0wdvt7ni09bp4r2ss5lf98c05zedx9c7s6hfz0srlba04y9z31a7ngeohoaii5sgqknqug4ul5p8ekn2wu\"\n  }, {\n    \"firstName\" : \"Zulma\",\n    \"lastName\" : \"Weber\",\n    \"raceEthnicityAlt\" : \"PI\",\n    \"score\" : 12.12192347456118,\n    \"probabilityCalibrated\" : 0.29191720365753704,\n    \"raceEthnicitiesTop\" : [ \"v7tfodh280remzyeael9v5ttftuetycdu5w3ij25le2xla8f5pi54tgpujrusqbycxw\", \"sz7d1vzzs5yab70ezyautx25wmbd1aeoj3h4pyq9z075qiev1443lmp207f6mzut09sjmqdjswn9i3h2axihbf1mojcyxpay62plrcol8deqr6em7p813qgwtndl0vkmit8joy8nncsgx30n3bpqmw\", \"fftoct534k3bdpyreys1kea27j7fe50lke4r15ozz9wjasaf0ctd7h7fxsfh11pn7ckgevjin8tkjpm2qm6f3u86871jys9028jcj541fzpjxoy12p7blza5db8cirx3brcqedc6be0co1txelxn0mdqxdkd0us0ogn825n3vv6rfbchw86k18x8e0ay9mp\", \"pvff7o6f6h1kmox7t5ukybcr09axnnpxrrxwyvbgg5ha3jyp8cg0s\" ],\n    \"probabilityAltCalibrated\" : 0.7278866744815324,\n    \"id\" : \"3t4j\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"o3rpuf5m6omnv4lqdsoibd2svipm9j4b1nl53bg3hbzqkyakhgwsfs6h1u05lq1y1nwy7tg0\"\n  }, {\n    \"firstName\" : \"Fransisca\",\n    \"lastName\" : \"Grady\",\n    \"raceEthnicityAlt\" : \"A\",\n    \"score\" : 82.39127199146145,\n    \"probabilityCalibrated\" : 0.2307555083138162,\n    \"raceEthnicitiesTop\" : [ \"8bggum3usn8h2ajx1wzsadpk5lyaancznyis9bizeao6s79st4pe6bzx248do58ok8ttozgj64epvngvwwfk8dfb69vl8l752wqk2an0d5yvm7nsu4cls1lov72p3mwj1do38bt\", \"btyorsa5044phjl840hsei69xbi0nzmljhpdgg3fmo8fi0d98021k0lzug7y3og2qnxmzfb2jv7ady2je12bkkuv8jbn2qwqmcqfe9x4\", \"ugg3n29wvk\", \"vaxzjoh2p25er8mkb3iiflww8rbc8z0fdqycy4vqdjpmrfifx7upodwyjsw0gfgotzhcuqpjd2vqckcwfi1bqpuyolhyfv8p28andkwsruds7ovxdjxejbmh450fe3316ywbcc3dzsxa\", \"8zc8lq3lrfisub6ltvt28xzvx04566gbhl02vmtku6mdcolul0woxe2qjb51hpxxy6j0l2tw8ln699rudecvg1cbtfxk35j6o2ltqlywvgvsg6nnfdikstm7jerqb424f4fn63lphvobm4ppc8ozuyry56rg1qucn18dmoe2o28opafdw88kpd47ikdgupe8k\" ],\n    \"probabilityAltCalibrated\" : -0.02468138480865867,\n    \"id\" : \"vnw9\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"80lynmseo4gki9g9es1tvky58mcwbw4q63iqm301crmkw4o2hofw5nt7fr7ozx1njoz9lm73o51ojmc4s38gmoamskdufdwzajh3o51lzz31of8j08w2i\"\n  }, {\n    \"firstName\" : \"Lani\",\n    \"lastName\" : \"Boyle\",\n    \"raceEthnicityAlt\" : \"A\",\n    \"score\" : 41.64024337003012,\n    \"probabilityCalibrated\" : -0.429251016574167,\n    \"raceEthnicitiesTop\" : [ \"hfuflmlf8zdb26acqd8ghr0dztvzc5cvepfoohdh8dgyvtf95agto6yndxhbao0e7myes6e7dv2xlc4judew5y7l6jnfag5fpg17o2hbjvl2l368omwedr4kxpluufrd9ei64sdmd8addhb9l2smq0t8czf19ud22o7ocy70tfqxgjr6vzkkqm5\", \"qhup33l4tlmwnrstll78pmq2mid7utfsppvgik59fudvp93rt2hexhalsxgphqi0j08y6t33t8ciqxpfa5plm62mzvth5uhrssvcof24ozo99u6asyueyxyhpd481mp9xv\", \"26bv8rhz4u93jpt7qwi28rpk0s4nhidqrlbb20yvbh59chzf5ymd55l8mkgi4le29l8qv9xxt3zzgdv382e1uhcttdpgebrfyzf5e2piqn76jx37su0gkg7ihdah8z615qjcs6cl626haz1dvxurikdw2f4pkbppqagu4342l7visi6u7s\", \"b4xw4s1q81o7gp420d0rs1db9l1eu75iotrxtr4ywq8hvy41be8ctt5im07m93kvxu36e6vu9cm9j675z83zczy7j2ma3xo2qbj8nz5oibumc64gq46pt0x023828k8qnwgf1yg1gnwgjt0nlznhs74ugrro5559jx6x\", \"hptz7ldxw1bkk9e306kxrdnki9wbetegy6xv725crft9ba8xerml0eieohxm0ynwncifsl2z8hxo\", \"oymnld03ckz5muqgfz3isx710l6z5o2ia9m44cqdqr2vumds74hz8648rgxaw79qd76yngztvwybr3fa744bsm6e7j3ofwn\", \"fk87gj9a6w2wna5f1qfb2rh7q1s1wenw8os7w0lbxciedr163qgks4729baxem8l52jz812wer\", \"gd07rm4l3eibwr7wg5jlsag7d23l7xwtle7nlhlag14wqi4vjtn1ne59n1diu6rtbzi0kvx6o0vzybhcuw6wup5euzaow73lvg1mjqwy39wwnw6bx0zmyxnj1jalt39x1dtlea944u9vp72ubepols5zeuymqm8y1psl251glck4pouumqyw7aszc4p061t\" ],\n    \"probabilityAltCalibrated\" : 0.050852829553889256,\n    \"id\" : \"3ekj\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"74bd9vciquk1mufbei9y7n1\"\n  }, {\n    \"firstName\" : \"Darline\",\n    \"lastName\" : \"Lindgren\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 29.82018045817263,\n    \"probabilityCalibrated\" : -0.2660105595801203,\n    \"raceEthnicitiesTop\" : [ \"hkr0pzuzvoyiucb2t1ohvsl00nabm9xdm318jedzuz4jlizjpee8n9wxeqp4fh6i3zkyaay2hahhdgy5o1r1hn0vrrwtcq09gjnn1qd79fwx7pj\", \"s176s7zdb3pruy1qs15096hi2c\", \"eezdxrwcrgji8fgqx6zvjeyao7tm18vqusbptkszmfvsdt24wgfr36r6e8h9bj2fyj61ucrolkrzjj4o1hrnpc1pfy6vnd4s664z20t\", \"6hbebk7636r2pkppaft7in2yjvga4g8kshr4dj8g8lqefceyvlzdbloid2bu4vcgs2pjridcgsy8uj82a7pjatofsdyvfwk0sq3cgrai2i6t963cllekz8jv6aud46j6ibbu5eitae7g9hvmvfucd0jaxsy64\" ],\n    \"probabilityAltCalibrated\" : 0.9875786238383975,\n    \"id\" : \"t2r2\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"n7kk3d7yjhko8a422m815osxwv4i0axjcc5c35nxlbxc7zws31ihx3n8pm6eyrytm4q4nvqsao15xcvnkn3ygejkbug131x2re3ftt8bzxub09fj6e28en07vshvsx7aebeuc1d33wcdsljbk9kk2vqf1naf\"\n  }, {\n    \"firstName\" : \"Anna\",\n    \"lastName\" : \"Buckridge\",\n    \"raceEthnicityAlt\" : \"PI\",\n    \"score\" : 13.980221967937922,\n    \"probabilityCalibrated\" : 0.05412591995467708,\n    \"raceEthnicitiesTop\" : [ \"k6t0765xdkffa3tx7nhhglosq1ch4\" ],\n    \"probabilityAltCalibrated\" : 0.11668687025833369,\n    \"id\" : \"4385\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"kq56bpcsf1ymo3q6ditp3jr9yhdivcmw05cmwwn57ztt5jexn005\"\n  }, {\n    \"firstName\" : \"Lamar\",\n    \"lastName\" : \"Ullrich\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 23.455552716256044,\n    \"probabilityCalibrated\" : -0.8979250895640274,\n    \"raceEthnicitiesTop\" : [ \"obr2i2qdlic1uznoohjsdrt1jczm44abzczdwd2g2jk9nbd08pawfg9bs8b1cb21185ozx297zfbzwolmnkv2f6f72x36opbfwxjt4muxgc2uywk8lnlogiagb39ovc8w3n4wn60jy0rx9e5d189iuo4w26mjipyxlmsii3\" ],\n    \"probabilityAltCalibrated\" : 0.37441126614069153,\n    \"id\" : \"ult0\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"sb7udvup0vun7d1ldrzo2ps98r2xkfwn41ugpr1vgcwe14auvmjmp\"\n  }, {\n    \"firstName\" : \"Janet\",\n    \"lastName\" : \"Stamm\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 24.270026214082343,\n    \"probabilityCalibrated\" : 0.8112497208324403,\n    \"raceEthnicitiesTop\" : [ \"19vmqcl8zzg4s5v5ns72n2q4uyahad1lzg3i39bvi2rip94k3erlgfnkuubq9pfa67figf8s4a4kfexbeydlhqxx1bwhi1wphwg8n1tuqyvl4p\", \"fu10khz2fni3j8a18ui6rexcspy8ep382hq78rh8ypcq7vhetqcjwrtgcgc510jciv37b0kisififqvtu38ynl5ugocxbxw73byuio6gjnxz4ioxp8osms8q8malc0u29ex24z0o1bwahmvni\", \"iujccplxscabad7xu7emqjmiopl9noanbjyf1vqid\" ],\n    \"probabilityAltCalibrated\" : -0.26970938798637145,\n    \"id\" : \"18aj\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"9fbl8g2zsd56z1sl2raze5nnkagmjomnf5yt9rw6acmk2f38zpeqf0twj68k8zc1s4kiqc71c9eb7chx5rexjgnn8amuqviv8hckxzsud5ql3thxbgwmdrs66fmkks\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edce37b1-5d3d-44c1-b274-d5baf2769340",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.441455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c9ee91f8-047e-43b4-b02d-88721d385403",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Isiah/Baumbach",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c9ee91f8-047e-43b4-b02d-88721d385403",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.43977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    }
  }, {
    "id" : "19b7fa0e-2be3-4537-b0e0-e5c0d4c4256f",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Daren/Murazik",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "19b7fa0e-2be3-4537-b0e0-e5c0d4c4256f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.439708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    }
  }, {
    "id" : "9405fb78-2a5f-4c93-959d-e9040b0daa1d",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Garth/Kirlin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Quintin\",\n  \"lastName\" : \"Weissnat\",\n  \"raceEthnicityAlt\" : \"A\",\n  \"score\" : 83.00656327379602,\n  \"probabilityCalibrated\" : -0.08741724568517073,\n  \"raceEthnicitiesTop\" : [ \"l4fegjehdld0l2m91aighihf2xqghm6sa2l54utgssnka72zpgjgu7f6nv7oz35kymxbvabk5dpli9ur9bl44fn4uifxuc7pj4hrdfiltyg0y5690a3paxs15i0o\", \"n7t1koxmg26iqjyt6okowo3lgt7pjippxiersz0thh24vxaehfgqpb36kdg7kt2ptmu20nuwlmmfxp8poscmlh5pchq8gjmk3tjcvolksxkbg3zd27wouuuuq7dkzp\", \"aam74s13scav7qflmln6hrxbd2n5jlsxdj3lwvgxib2xrnzpyfbvo5n4n2fuincafgwjkcrnmp2eef44ekpzo4snrqd7nb7uv1guy57wfgf8m4uoaj1y9gvjpp\", \"mgpeq\", \"fkehabo8scnh9a4y0v2uo4vqf4xr8xnckg7vm50kvgt9cng0z89fu5b3onxtqxnuung9q34n3vva61dfghpf3tw90bbuory9wo5jgmgsh1u4d9r98y70e7d7gkcrutojq2xd6hhcguyg76ui\", \"0ad6zgklz1pfaad23htff2dntd9j6f70ew8g2qggvnl7bhw6gesieokar7f0aqbjr97xnh2kz66z4x1eyxkq94abygwhn5bmvratxwigbe4gi3qftuerw7cqc1bbk3k7b9vpl7zvv41p8e1lau\", \"qpliahifriavj4iyueg8py02qwxpjpempb29s9xoqf5c4ge6kee\", \"80buetokokja1g0n1g8dnz9e5h06rd0dthwjxs2a1yrgbn3ine5o60g6km01gswg546itz2t23twdro6urs0zj5poz0k4u0a0hwvkz2lomozwbocq4r7qte6op\" ],\n  \"probabilityAltCalibrated\" : -0.08953654828367963,\n  \"id\" : \"e79l\",\n  \"raceEthnicity\" : \"HL\",\n  \"script\" : \"mbghqy8m0l9t35h7idpuwe902089r0bcfc5u01sd3trcogfv89dbwn2sidmnx8j3rnt0rpnftolxl91zv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9405fb78-2a5f-4c93-959d-e9040b0daa1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.439635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "3a4946b8-e689-4586-a980-e9392c6d23a9",
    "name" : "Print the taxonomy classes valid for the given classifier. - 401",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Albina+Kunde+V",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3a4946b8-e689-4586-a980-e9392c6d23a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.43925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses"
        }
      }
    }
  }, {
    "id" : "38566670-feeb-4423-a015-91b54567cf2c",
    "name" : "Print the taxonomy classes valid for the given classifier. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Johnathan+Marvin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"taxonomyClasses\" : [ \"haxuzyvn6xlcidp0mm4c86810qaqikm9mk8m69xovkvhwhiz1zkggroaqpcnk9gx4dvz845k3wi\", \"jub18z9iifazjvrwd0866a4d0jv6hdkeovl2f3cl8hc88pjxobcfx4vbe87k4r4lq5tj7hev9nlev2wwjinnyzldpfipb9j5x12umywynow824euc526cb86xau7fude2cw741pm8jmf28hjoo11cvhjwnblrjqw\", \"lyg9092ul5j3w91ojxrv9vo82c\", \"hiey6vc7csnhc0wxg70yb\", \"pgafrj9rxe4vjb97pmuiyguebh1tuoefct539ezxklrvzzz4h2we60rskz9ok5uctxv4ld54obqjkj7av3khwy88t203x5g4m44td7mn7pystvaqo0\" ],\n  \"classifyingScripts\" : [ \"wjqbigejifvdabv8j35sqy2q772dfb3j8r9mkwjyufpjjb75dynw63cj8pfxssyeeucgsrv5mq6u6nnm\", \"yox7to9g43g028crk69vyquydfywoz34hy1ekqlvlya17rqcxgfa5tww5cubhh8jche2na3wwhu6dlbqfg8faka2vkrlhg5fnw4quhmt33\", \"gf1wpox1i99xzdmqx0h1hcf7wdcw3a9o3ss7nm519inrgitlq6\", \"md5o0ql8bmcuh3av1rgvgs6valg48dbpn39df\", \"o4soqd1sxw9d4ygwhvg5gdssqr91y4d0x0egxmpdokd5bg8wrww4bsyc4cphal6rti1rtlry6cnybhc4p9r\", \"cteuj5gv3lzdmknvxosp26n47naca8d8yc8oj21qv66s9i0f2ajef0i5eqjbexw32kh8nqm5h5q9b8mazw3ulvyvtt2fgsu8gou5pdjjna6oe2kek8d8k3dim84mwqasp1aedjw9gszd8w435719ok6u4vdihm\" ],\n  \"classifierName\" : \"Babette Davis\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38566670-feeb-4423-a015-91b54567cf2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.439181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses",
          "schema" : {
            "properties" : {
              "classifierName" : {
                "description" : "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
                "type" : "string"
              },
              "classifyingScripts" : {
                "description" : "The scripts / alphabets this classifiers classifies to",
                "items" : {
                  "description" : "The scripts / alphabets this classifiers classifies to",
                  "type" : "string"
                },
                "type" : "array"
              },
              "taxonomyClasses" : {
                "description" : "The taxonomy classes this classifier classifies to",
                "items" : {
                  "description" : "The taxonomy classes this classifier classifies to",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifierTaxonomyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "70612830-8720-4738-9fb7-d2b809aa9820",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "70612830-8720-4738-9fb7-d2b809aa9820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.438949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "007b790d-ec48-45a6-81f8-378d06d86316",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "007b790d-ec48-45a6-81f8-378d06d86316",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.438933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "8a38ac79-d000-45cb-bfae-e36d47a7429f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8a38ac79-d000-45cb-bfae-e36d47a7429f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.438916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "05ae2aad-470e-4c6f-88a1-4a7e7918018c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Lyndia\",\n    \"lastName\" : \"Adams\",\n    \"score\" : 63.92909478974572,\n    \"probabilityCalibrated\" : 0.7944410880277482,\n    \"subclassificationTop\" : [ \"fr2sbq4n8tosbbtwscuglldqdrkrhr4cqxsxiyumj17hiw25d9qnscze34fdpmdc6lf3tlk19vi03qazdd7xyct0lsezc0bwi297vnw3cr4qmda2r0jnkys4253ikwa7bstwh6uype57jc6lk6nckpzeg65180j4t7ya5s7o3ao23\", \"zhdrlr114cilsvkz38wi0hohbro50x9whwqdzoq0bi19dzqlqsi9kgy0fol8l2t9pr8as66xloxlfeqnui3u3zz45kpr80xwp49bsuw4\", \"aij25d0lvaewwmkyfv9bvsehwpd8suf252bvsiwbdw18gslcjmq42ejcv0lssfabkdtytlnn7u35xkiwu6enpbsuu55lw46obbw4rx39f3vh8b2zjq9yqvp0cgup3ti1mftxdrdb8w6s2j8hyzke3m25xsgar20b2ufxshq0f5so0ma0rtbnlt\", \"j5k1al4gcz5hua3sdnvhxecmgk3lgegka3imkr19eqeam8bttednmmgnqpncyv2pugpmiyefyauvv0oflnfr29f65u4pnzfdzvmeoy7hysh29xffx7907f4fpq2mzn4pyua66vtvnsv20tbo12f0rc0vaqxxqcxcnx760hv9clj603sycrgpl0i5vyh\", \"ue51ta72fnawk0n5ys2g4n5uzzhgswvo5ogaon3y4ecnz7e61a31mvwbfc4efcip1qqcntaad6y1\", \"kwxnr2ak52eyeuiyjwqd3pku167\" ],\n    \"probabilityAltCalibrated\" : -0.9900390605700455,\n    \"countryIso2\" : \"5jjcjz0ovpsgegyqnixe4h97k965yotuhxr2u2hwvsyy19x4oaj6jn9xzsnwqeko8sd1e4d0s9zzyi0r7h92tr6glwlc1n89xgdqkaffc5zmlgvb2r4kjwixuwsolfhpmxr4zrozpaekjf9s3g2r4r0g0x80265n\",\n    \"id\" : \"t900\",\n    \"script\" : \"prb0kw1og54fhi63ulkrzwa7sbki3aq1lxc89zdmqwryo55srf5z0hn1tsmmgkt3k\",\n    \"subClassification\" : \"docmebwu3xaxrjelpbrwiojpaxffmpa59srve5ftmzdtg3gjthberb4qes06hc840h\",\n    \"subClassificationAlt\" : \"pfsbb2iman3vwilvvu99e4sollqg7gerzzq2r1atsalr6epnxgv12kmhvs0oq18k\"\n  }, {\n    \"firstName\" : \"Peggy\",\n    \"lastName\" : \"Wolf\",\n    \"score\" : 68.18154162669705,\n    \"probabilityCalibrated\" : 0.30082512471074874,\n    \"subclassificationTop\" : [ \"wf6id19k2xtk0pp4vr6b2tbq5vkvjp317kwndmd41\", \"oaoju6m7d31ves93g91ilgm4pigqmujqtf49yg264ilcg5mdf707rn07udvg73i9fkz1zxf\", \"elp1jbio9n39afypny6w624nsswrc69pqj24k76lvl3odgrrre08i6b48u0vpx0kwubigskpv7866swtj28pslxj1ga1i0gi2vv2hnt0huhkn3o32taqo5036234do5urgnh9kv5us796pg107xcu8so8oncg4zz4jv7524qtwm2d2q8e4ie\" ],\n    \"probabilityAltCalibrated\" : -0.4963460789849794,\n    \"countryIso2\" : \"cetgddeansjv46bre6z\",\n    \"id\" : \"o9m7\",\n    \"script\" : \"s66cxswuudc2ougu2hk9g749fophgj8ti3o2ukr6q1teaidif5k211jhpf1007oe3zebszkgqvyoeekxm5e3ax3ah79nyo5op9wxhxscju8ylu0vaixncecnc4jg88b8ulzlo2ynhjrqs7al97fol8wgqzstoeb5ug\",\n    \"subClassification\" : \"6uxhrn74yfhh5i1p9fxz0oa9ns280vbpgrjuu1ogvs53u6kw3cgusx2hum3oy142swbwc68mwdchu3akameiuemw2f146hzn3xcp9pm7kvy5van222ghw4zyr7vq89cwoicw6em\",\n    \"subClassificationAlt\" : \"f5us2w4vs4cx\"\n  }, {\n    \"firstName\" : \"Arturo\",\n    \"lastName\" : \"Schmitt\",\n    \"score\" : 94.05712276578578,\n    \"probabilityCalibrated\" : 0.16933018013064416,\n    \"subclassificationTop\" : [ \"z47khao5q79zy289un9l1b2yxlo4jzsj3k24b4lx16w0k6x24fj2v0ei6f8rnk2s90tcue0l1pfh40ykks8hko5ed1vgtgi8bwkzisw8cy630z13xv9\", \"nnfugj5wqad5fk8rxykn0rm9dams3jkqlvrp5wnp5mbus3mv\", \"0yqmcyxtk1poc3o2b55r6ijp6uhvstib2xjhngx4dht5niarhxxmw88s3txysm2zolrcqe48zsh3bmku5nlqkyuzic6fy9pzqi9ygv22xstk063dajy2imedgz5mbfptj4yirb45020izq3ygbs\", \"zu2z1tfxwj5pc59jynisnx8yromahnsw8vemv09u3vkidxkdb5u0b72ybs1it2b8jwyb320ypd8sauknkyrawifzcg6pv29hoyignjf5q8o1y31lmimrbexa33ycv9i9nc12d4h4v9lw6t040kv4df92ijcf1xe4dfk\", \"lyr5l479uny9z550iyu4epc9wynxngrlin0kei1gu29qb3kcw5mnnnn8v8r7jmwarojspl0dykfjovwztqqy2o4get4y512odm5uwpl0c29t8dnthp7w241zgagtdz7rzoitaunxruuj94oifzkdef1rlas1rlxzmmtei7\" ],\n    \"probabilityAltCalibrated\" : -0.20251034677366442,\n    \"countryIso2\" : \"8agkch0l8oeb1j7y7dn4x9cxltj22muikr3h1sa45y4yty0rmsku085wqocgs3lq39nh7jmkz79cinm9qrfc1o\",\n    \"id\" : \"055a\",\n    \"script\" : \"m4gat4rseiqehls2oisnib52mvb7n3veaibmwexc66a1nhblqk8rq5avv8rw9ynbfyipigtblans791uc3eqfb1igzx8yo4c1xbw0s20u9n9ihykw8d3i3twdc9qy8u0d3ojd1tl844bihi7jgoez9452v3wnm4s9c0rl0uusjpif20gpymb0bb\",\n    \"subClassification\" : \"y5u048dgy2262wjtmuarbm1jztss95bdu6n2vkfk9ih97bzvy33froamfq8ccg6t036h1a074f7bw02e4tsnpvv3h355k9is9bjq7mzgy9fglawn91l33qhspfazeg8v5s1y3hhxgfno16qtk36n\",\n    \"subClassificationAlt\" : \"e6sjos7i6axsfi8k2qb\"\n  }, {\n    \"firstName\" : \"Annette\",\n    \"lastName\" : \"Bergstrom\",\n    \"score\" : 51.89079135288822,\n    \"probabilityCalibrated\" : 0.5782159565439613,\n    \"subclassificationTop\" : [ \"sfm2alamd2skuaxtjcojebm8y5hpbt3a0bnpd7ynoa7mcr2lbi7hi0zijq4uzn567894fzp4zmibu22d9gmyfbxmh04rm48o8o6f\", \"g9iqyicvwgo9b2vwp625x1wuw0oy08ijeapd0hwd\", \"pfrkrsmjze0obr81wtjfvc88dbl4fgngzr6a3famszipyjfkz1n4pw5wa3ydfr6xpax7p2ssudf70sqk00hajz1e11pc8tuxitv8khsvfd6xxk415516lsiyaijqiq2f159sd1mhplo74dcis4y\", \"dyekf4xbim4tlnih079g6uo3ar750b94il0ryr6qmy5qrgq4047cj00vq3kqc5yebw76qcokrjoxyooi2r4nauhspaef7cn27n8u9\" ],\n    \"probabilityAltCalibrated\" : 0.11946131497257917,\n    \"countryIso2\" : \"27yxtej1ce4yqku2nrykhp8daev5ckxnrj7moxxqiggir4h2ioc4oinuu8szxdllly2uo1q77nzrbbpmte2bfrfrwdv7szokpgvre4a1pjuh95guj2sjyls4hkn3rnllay0sa5d2ifpoqfwkkg7l02iifutavjc38k\",\n    \"id\" : \"i2t4\",\n    \"script\" : \"lze1rzzbn0cxkw\",\n    \"subClassification\" : \"an2s1e4eskmab8p6aljqpysl8p8gwtsjle9tfdkbksscgjvscy7fdxyywrk1ratjb6879kyg8fkpxs3bz36kamjgyx5boburoc7wn4cxlh6lkdx4bo0dpdgmqbkqh6i2ook61ojzmtxwvwiqogoimejtdibak1r4opguy30y301i3gk2vkiqdidzxem3ync6rxyk4z1\",\n    \"subClassificationAlt\" : \"xq379dqvx1l1w961vtjm6d71956215cxis21s5l0rl4abc4m2m97tqow9bguk3x87q7\"\n  }, {\n    \"firstName\" : \"Kanisha\",\n    \"lastName\" : \"Leannon\",\n    \"score\" : 11.591741627432917,\n    \"probabilityCalibrated\" : 0.6842676445023197,\n    \"subclassificationTop\" : [ \"v66arjnh74\", \"jb7qclfre39sgy9rg87xq55pe4f3ozzmrxgnnsb6kmtujc41otoaqla8c7gotpoqjjb5e6u1bw8rouggiqliayoluhdd7hfdo7oxvwgk8wym8tqsjlb25le37wwza83ce075g9gz3a3f\", \"qlrnbfr2b9ws75xb4vg6bqljxr0egdyofl5izfy882dpkxglbup17lq8qeibiletlfl6n6ddad0nxl95d\", \"htelkpv9duszhgd6t5b20th6j2fdrmuwng3whxb9grze1zeeyt04jkurwl9osgfcpvejwgvjk5l73vsb9jhde4iujbonpybca5eis76usfqlszffy1xshrzh5bbqzaak7qzi7ly\", \"glvv9kcwbalxygkblyz0g0fp69wsskixatuvk9znluku8pipzd8f59bq5a1m9c6b1o1asa17m1valcp9ps1qesouws36rck5r82bflicpva2txkmz3wmc2bxkgsy6fpvmbb2kw76r8hhobrpomcmlbzbycuxa5s5iw3czo410\" ],\n    \"probabilityAltCalibrated\" : 0.6602986198163172,\n    \"countryIso2\" : \"y27ul9ury1339h9lidnjgkwwkl77l01lu5x5vrwtgak9mrvgwtcyfhiail4ymuyt64r5r5c0n58d020dfwut6qfgknwlhsnhzfrr3gst88vlx3rlqltwvl0ddxldihh3smxvh169aljy6u4pyndy0nonlmo1hrmdx6qonlwq\",\n    \"id\" : \"wb37\",\n    \"script\" : \"bb1k\",\n    \"subClassification\" : \"90c9vzo3ems37k4rhspxdb95kr2cfn6yqr6m6chabatyux1twiyjn7keh6zs0ocjlpm46gvqmwwjmz0pjg9jk00bj6l4ojoxpo78on0932hjngn99e1jqajodu7c3fz7iixx7oplf3pgdknnekrip8whzkuwc51i8pd3tk6n4y3trk4\",\n    \"subClassificationAlt\" : \"ysqcmuc5zjx8tjzf1ybyamy1txg55u36lzc7zyqzrboz4mauz2k0a51osnap0ivg8s55n5frf835w1l84ol78h27rcvbih2rb6d5c8kd4qmgmg4oaiojwn3t\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05ae2aad-470e-4c6f-88a1-4a7e7918018c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.438887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "58a56419-2a57-4a8b-a0b9-7c2ce93baba9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Drew/Hand",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "58a56419-2a57-4a8b-a0b9-7c2ce93baba9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.437742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    }
  }, {
    "id" : "bab239ab-f811-4c23-b640-195e5dbadd9c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Stacey/Kiehn",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bab239ab-f811-4c23-b640-195e5dbadd9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.437681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    }
  }, {
    "id" : "d05d5fab-ffc9-4802-ae85-c45bec0fe275",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Krissy/Sipes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Malcom\",\n  \"lastName\" : \"Krajcik\",\n  \"score\" : 97.41942876888093,\n  \"probabilityCalibrated\" : 0.9142929721137427,\n  \"subclassificationTop\" : [ \"kwioki1hbialat3sjqatfkpce1cwjcudkrucx4lkiiu1gxn4wi43fgn76lx8ddco3iywt3eodfyen74baw7qscjmzz2ny19sxn2wl47b7300abbp\", \"ilbi530d577qzi38fbof4ezjcbs6b\", \"91u2vnotbghevvq3o2zd9pm2a49uw1gi4gly39ca403om67cqv58xwfrepg6uhvvm1lae6d51q0awjih8kbdh9dhgerg2nb0\", \"xbqj6evpsc4jzbkitxmv0t93yy79usbqawab58ainiyrcjq583fa2r6zsa2\", \"c2n95haluapuegpuctpdffjpk1228z8tbq2s1x7mdgz5oq2sjuvnl0b50qdwjuf22q2lqjcm0og307g4323064pq2j8zm24cwnbs1mkw6ivkvqi9c9uqjb0vizz8qd8gxxu9k78lh6ww1bx5xjp\", \"dnq5b621p7yj9b3ykn6432iywh4mj69o179xy9yt3h94ju9y\", \"do1x7sxosjwpqhj7b6jz3b5o1ix01x4f6w3t3c4ag1kdfcuvse0pf8w8t36imxxh1rnqtjrg1qargby03iktgrwbf3fcg0to0a5jpj6ceozesfrwzw4800rpwspl6yw2ngwhvit5zbnmy7ymt30p0q7drocy9nas5xp37x0zp6687hp18frhc2u1wbzeyew6ayoygj\" ],\n  \"probabilityAltCalibrated\" : -0.39839438098683866,\n  \"countryIso2\" : \"bu9wnzotyw5gwidivcahddwzq89xfwpyx52f93y7nahdbbb20n6lq6pt4gfbt0r4fhma9y4vjt009g215834u0vgeq4rw1n0b0s1biwl84v7ej4jp38k65uns0q2swpqwzdwuhby4glrye7o471zyibubnps83q9uttjnil5jcbgcri1up\",\n  \"id\" : \"0j39\",\n  \"script\" : \"cfxg0renpzm711j6j0qjur386pn8fvyu\",\n  \"subClassification\" : \"nlnf5jexwkh81wj5d0uiigzr9fwuq6olz5hl95gtt7sxeexd7wi6c66zjf02tsxazdbt71sebvi8juan66fd3ppybas1xfbqvr94waosbuwor0fzcsva\",\n  \"subClassificationAlt\" : \"k5yi800vz6xqnfmcjbawrkwrvxbrjouyyadolj1jo58ws9euk809e965cx49gltzaw9c20clv6wujmlssxhyeub12twvtnk2ngjvbaqns11ue1vqzxbrlj15s5r0gtdolgmshmt4grf7ak0894ul1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d05d5fab-ffc9-4802-ae85-c45bec0fe275",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.437606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "67711583-460b-4b95-9bad-aaf0131c801e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "67711583-460b-4b95-9bad-aaf0131c801e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.43722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "ea082886-fac9-4bd4-982f-b580ab812722",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ea082886-fac9-4bd4-982f-b580ab812722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.437204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "13415d7b-2876-49f0-b2a1-0e4de9fc818c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "13415d7b-2876-49f0-b2a1-0e4de9fc818c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.437188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "191f26c0-bba5-41d3-9450-79ed1735578d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Christia\",\n    \"lastName\" : \"Predovic\",\n    \"score\" : 33.770806564424696,\n    \"probabilityCalibrated\" : -0.06574227851553416,\n    \"subclassificationTop\" : [ \"fwrhqbg7lfnl57kgmrazfsrkdh04m2ou5irakue8dbtpzy6qu2pdmn56hb3xbxgtwjak1hkwrlfkhy2v1b\", \"jhfs4kgxla6zlfyjejn2brk07vhkgzboh\", \"5y04748hat1mguikb5kmicx167azs8wn4r1dikzysxqqf9ou03j26ti3tccfahq1sm8l274i912\", \"bim1066shpo4i8rls0qwubecp0snllx\", \"ih2i59jhgx6ri5mdkg404igixo74py57l\" ],\n    \"probabilityAltCalibrated\" : 0.12065757639614216,\n    \"countryIso2\" : \"yflihdkha8uj2jgrlpw74i83utzrlerimlnuh60xwgvbbgz3bruggd2l8piopi976wzliz4lveeang3jegse364bchiu56z2gnwyher7xt4gt6ji1z9oq7lxe9ax6nzzmciepyufn6faeqc5x59txgr4l9emsg146ht374cmehlah8e7newrmj7kzkerhxn\",\n    \"id\" : \"6ksg\",\n    \"script\" : \"9q21a6geocy25tx5a0jhzqxvwvxve3iy8q2319ky31ubpr926z893v09rgv79roaetyle5fe2ryqc6q2c3pfaqtm03xaxdp60zhkxovomp3nn24n3p2gliwtc4gdznpy5dxg5jb62v094izezozf05uc9ovspfoey26wct3ev1nlozf8dcnp3p19ea3ucu2eu\",\n    \"subClassification\" : \"w8sqqajdtena0tbcwpw2mvca3gpq7k8mvka652pr122n2b8ejtmggj1dc2r34hwzg3j7e7zsku9sud1bplw85nvwaavix\",\n    \"subClassificationAlt\" : \"qgmpz6o\"\n  }, {\n    \"firstName\" : \"Denis\",\n    \"lastName\" : \"Bogan\",\n    \"score\" : 61.23875648411008,\n    \"probabilityCalibrated\" : 0.7892330587516427,\n    \"subclassificationTop\" : [ \"whx0kggnqzg4l1ecsm026k4sk1rumygtx055gnw6vj\", \"hrwdcmlmitujncqrcg0dcgjrdzx6kijwfb71jc5iqn0lbn1e9hls3wscxjnhgifm808oj5khy2e7ga3cb8o40nalzr6fb95t07oeap2tv8r5el653rr1n62\", \"174rterarp5hnq93kzv7lmpjx30iem3wntg3rj76yyy6bentfj1auk5wbjgnrob1jzkejzpy99ywevr8j0cje0en863mhyd4s2n958xdodvirijo400lu7aoycnk3z\", \"ix7enk7jn6lp3zj6uop1xucf9kib9z3pvlgq9kcc8d423ih4ijd5fpbci18xlcadjugezn9\", \"fm7ix3k5zuthixn78dkbt9jndr6wn5o2hexrwgr4v5ezcioynwwds3ms02o4ngboh1wggwiwep2rsof73s8m2zbk9jr8966xaj5lecy13xxksj7ysy7u9s2vpjrwnvkzxlk7hguz\", \"f2eq4mawdmwtq8dk6ulp2zgs2ezm8r6rj64ga77vtbhdtac7uaila51ulc3u3y6v403vsqozwooh9r74dvognjwdwr7acr172wsoi4ldtrm2y9ncnr5fylovn7kmh188621lf4bdf5vyv1cngcx5mljhb8tyclpdm2to\", \"i7pnw2599ge99fy5j7ardnfj8fwjsx353jmlmts89796xhanbutx9l9t0qzdhipb66ovgx17kfgojd3vb7apns7jeo069qlqjt5zjeet6v5hmifhn1tp3arp19tno5e17k\", \"s7r87sabywx9g\" ],\n    \"probabilityAltCalibrated\" : -0.6694313561447269,\n    \"countryIso2\" : \"5cwz3r7ou2rhf300ak9fqmhbzi9rqh\",\n    \"id\" : \"0ac8\",\n    \"script\" : \"zrgnmsdyrzlux628wptxthb2xwqkz527b18pclmbeswar5st9ryo1hn2qs0xhw6jxzulb13249f1e9f91pj7g7nn\",\n    \"subClassification\" : \"y45mr6zp8x8vfwyxauajcsotdvtbxcck6ul6uq9dbq762twm8oxwtv7ff2opy6hay811mt36958wfa0\",\n    \"subClassificationAlt\" : \"tj44p8lq4px8zfuwsba97ctkih1fhsips9rhaxnjgcgtjh48rhuh5bd\"\n  }, {\n    \"firstName\" : \"Trinh\",\n    \"lastName\" : \"Hayes\",\n    \"score\" : 1.5603964776744084,\n    \"probabilityCalibrated\" : 0.15793685907485688,\n    \"subclassificationTop\" : [ \"dv10pas9s90084ykqmdqj3rloghbqjyykdg15ahil1ass3a1iimqep4katqazot6m74dj0jjj5kc6f90f74msvdcp2y8sd1ovte83ycchv7k\", \"h3slomoqrcjt069zjlgmcfbk9lqririsyvhna6xca578ionz7ude2ce74srgu\" ],\n    \"probabilityAltCalibrated\" : -0.08292143948394926,\n    \"countryIso2\" : \"rbhxkf7w5xvpjr6bmjom16km40t22plkhnw2sie6dy0n6kd7b7u1l2y853wfjz9xqhdti26qd7dgaxquc1s5ctefb7gef1tg83ha3ovljoi54jqttgehqgcz72qx05o8dcniamp2ppupgujsjrtlemi4425aonszdzf8p47\",\n    \"id\" : \"9q4r\",\n    \"script\" : \"25mya3lxukejtbkbuucx92bq5jxmmc65zdrrypd59m561gfu7zdqb1ghk4e01wvi2ypefuo56fc3th2irmaootenkxgmdrxydwm6xj5l9ymf2uxvqsjkk0c2bve49lxl5s0o57t8yvi9yp71428\",\n    \"subClassification\" : \"w4xtbups0543hp5ksoalmf9xinis7y07dciqtxav7io499m1ipl78kgdb7waqsbndjrf21vpvciuw4oxh8pcigl9eyihjdm8sis43resulhpwag853oxy9t9jnzfrwgmq3pzzfs1pe84x\",\n    \"subClassificationAlt\" : \"yh1as15d4u7bfeaich1z91saz6yw40gjmarpx7iyss4v8c20m00u0krnkkrlmo2ljqxp6l543b79fkm44mekl2zc2cj1yo1c2qvqobzzway9jhhul1mp55fkhwiavvenzddwq5jl52ar87hwfeb57n1b4y1u65cnntnb5863tjwvj6njl5n8rs765veiqm04\"\n  }, {\n    \"firstName\" : \"Charlott\",\n    \"lastName\" : \"Hyatt\",\n    \"score\" : 62.70704895116081,\n    \"probabilityCalibrated\" : -0.5287823571067214,\n    \"subclassificationTop\" : [ \"7c6f5w163n53lgvlih009gdzrr0ld0nc3br8it4uvnco2ll2aphn6d9690usvlsr1d0ug3yg9apnksjs7f4laces5n7kii42p3ydiln33fiof35mju1e3pklyquzn9lrjxwxdn24flxvwcelos4mw5m\", \"u5yg80ajgzf7n2eil6m3wr2k50w7joo4to1j3rs3hxzimxt8zy57k951qasyggopgi1eel996416n48po0zuz08bimhtlmlj7p7tx5nj1g1sce9eqgsncjehoq13lyf4e4hhg0q7053f0oo0638rvjf0lxms47tvo7segqrz0ffs8pyd0\", \"72nqcrfbd61gofzoel93ruli3o65ypoixxned1jcyspaoxdhuic5dcg1b9u1qpv9nu1n4y6u7yvls77n7lq1mltfypvsy4igk0wsta2lkkwejbn09qzw\", \"d3olqktwxnvex5npfxz1pnphrql6hb7e8o49jbim2uahelbu0vthlw3\", \"gf9ngn7f\", \"ke0m24p7ne3sqlmhvxb1hrj2ovx04l5lgog8n\", \"lg28a9sdl7633zm88mm0wo2jc4dcu8dw6thnvb88ujwolbh4jwdoczdgpdeby5ln0s0kqd757bw4rzgjw2ujnk1uwl5\" ],\n    \"probabilityAltCalibrated\" : -0.7709220105268617,\n    \"countryIso2\" : \"civtbmcx67hogz51hknu6sm2p0qcz9loy9n00cmsp7zrvr25g381eycg78r5m0xwq4uyynhqjfsur2pajaa2s2xza1e35m161hvml4934qxwhj2qqafqkjkza0yybmg\",\n    \"id\" : \"834a\",\n    \"script\" : \"6odbf2bbkluuyntt8pgc5bsncjfz8b2kbpanta7t2yvoo42romblg0slm38ts8es3npui6jsnmwqmuzi0rsa0x4mgsy39d9sk0kcd\",\n    \"subClassification\" : \"tv78ahvg7gw6g3lcpnn9lui502k34xc72mzqd49dn87udpif8r8p2rac87qshzu49kr0bawrdnrjb7i33reijiuaodbl0rd58d1jlvpt9qy4sapdw9eaf7dicla1u5c9t8fhq3ccu8hnjhipgzyg79ks4bf0m205yaj73rsjq7\",\n    \"subClassificationAlt\" : \"5xnkq7ejh4f75heketp85prwlo4nkxm577727vbz9s1\"\n  }, {\n    \"firstName\" : \"Bill\",\n    \"lastName\" : \"Kessler\",\n    \"score\" : 59.49637817584307,\n    \"probabilityCalibrated\" : -0.3819010142605197,\n    \"subclassificationTop\" : [ \"68e6ikeo1xo47n6kck8xrp7480xd7sj1zpnqqqt01x6uoc1zx7r5nf12zjz3qe3etrk4etnjwr1q3537xpjedg3sjpsvgds98qt1uuqx53py6olalfk88upnydb4elbzhvpwu0site9aut1akgca67jnigtzieeugph621g7yna5nu9mfsdxxoupz\", \"fc50qbngyiifsz0ms90wwkv1i3hg\", \"584xx5aoe8s95t14vlpd02hvcms8ivkhc3ie3hywsor2jhr6kkydw9ayjb45gypmwbs6584y37x0afxvgzha1kalh9ableoaq8lt3wkf2whw6hdt8wizpuz94vcnt60btnu61qu7eg5p71hzopx\", \"4tigjoges5en71hwefkzf94tjlumu280jay87ofxrbxzvlmf\" ],\n    \"probabilityAltCalibrated\" : 0.6720887722064464,\n    \"countryIso2\" : \"7y2d30hni9p4p8b6kiixy08eh5hwl05tswa9ppkriv2l9naaxz1bjj9672zryq12bv9ul7gk5g7fntoonetc7ql1oz0uj923dg7wjka6s30w8a0t2eif\",\n    \"id\" : \"5929\",\n    \"script\" : \"94ulkc7soxr82ycj1r8fwjsqt6nyeoqkkdx6cqojbto301d99oax63v640st67ao03jjazndp5a3njppnbtq9mr7c02jbecae470qi5uku\",\n    \"subClassification\" : \"vl9nxd9630iy8qw9ozagmb024m8hcfa59x3a7vuqc5rydzetleznq78bixelo\",\n    \"subClassificationAlt\" : \"01u6m0p7fewa8pkas6uouv9ejguxtk1nni93tttt4qiiz4uc9zvin29sj22y\"\n  }, {\n    \"firstName\" : \"Arlie\",\n    \"lastName\" : \"Bashirian\",\n    \"score\" : 30.3953736122226,\n    \"probabilityCalibrated\" : -0.9743866665275163,\n    \"subclassificationTop\" : [ \"rq07i9quvf19107aibvcqyd4khhb8gcuu7ztjocm\" ],\n    \"probabilityAltCalibrated\" : -0.5570990737481238,\n    \"countryIso2\" : \"3e4d141m6km6ozbsbuvhk8m5nbcufcg5xvrfpdaj7xglaz\",\n    \"id\" : \"5t09\",\n    \"script\" : \"sol3lc4bk9ukj1a99fb937snkrp3herhtk307fec298pfqpxd0y12medu7qtpmqfvosoj04nmi3a1y6ftwfy0ry20bddyweih9em5dznj50upnxfw76zqc9mj60bbklhpugsk0r5zt5e4f6aqnodbb3h9liixa84i72zwjkzlz9ym3p\",\n    \"subClassification\" : \"omhirinds9jz5bdmmgiscb4pky7stslhqycozh2rgpu6tym85r8blj3lj1udk5shoihu6zdjopzfpmsc5vqxypvwlv3z9lnq4c0wzpgfddw5v77i7d31flyz6ygr2c07tyt41ojomp7ps1oj7kg40av4hwafoqlbw3bnahfycasfgjlpg\",\n    \"subClassificationAlt\" : \"v4ejzjvqheu8lzuhd7b8fk00f0cy28d4r1og7mmrkzftuugjp9st00pujcaxtltek5uuhbmf\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "191f26c0-bba5-41d3-9450-79ed1735578d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.437157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "3a90fcfc-afd7-4e2d-9b1d-4d6b74fa5cda",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassification/dk1fjo56ik2i2snjnl9t48yokmcyivey13ooumka44iv7scbtubua57qe6t39jbiiwgypvo3g8sqloyjrgou2ulggbu1i8obta3xbuv3yfd8zry57tods8653ljb/Taren/Cormier",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3a90fcfc-afd7-4e2d-9b1d-4d6b74fa5cda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    }
  }, {
    "id" : "fe8ce9cb-cf36-4fd0-8fb1-5c42fbadd759",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassification/sb95lfpcoe/Garret/Johnson",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fe8ce9cb-cf36-4fd0-8fb1-5c42fbadd759",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    }
  }, {
    "id" : "34dae1c1-b4c5-41fa-851d-965948110872",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassification/7nhhek8jf9izrvzrrv8lv60q9ja3gc18h5ggjltlbjccfjta0jysbdv15i9ar7epp0z7njshecc2qzigs6ro0irf51kf7iccnkox/Ching/Medhurst",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Mercedes\",\n  \"lastName\" : \"Howell\",\n  \"score\" : 16.794562911817735,\n  \"probabilityCalibrated\" : -0.6648962490550665,\n  \"subclassificationTop\" : [ \"arzbhy0ncdq0i0rw5unh9ypgqz15kpgj0gdgmjpo9e9kshp9r5433gs8rd0lm2ohubigc060zbp04zj2r5zfztogb9xslevh5wbhnefj76dmqrn2y0jh2wbp8lm2be9exr0en\", \"vvu87o7by4u6ldzles6bm7ba9z4kojqv9jqi\", \"ab4lhzi2q483twk3627\" ],\n  \"probabilityAltCalibrated\" : 0.9575504798510952,\n  \"countryIso2\" : \"q0f41tqifrxd1e4zudsa3al0s0ed3yfwq5mn89qysa0irhbfee77pc373cwh67is6377ueapuq29xlgf7xjz4xbyx28xb46x2l61voslagpvf8rqojzboxbu7429jp9uz3gwyv2gzfz8hwcbmz0v5zx5clxb8e95om9dlqa8e7orqfb83p2iio70tmuwv\",\n  \"id\" : \"l238\",\n  \"script\" : \"17348qwso7112f4ubkae51t2swysaqbvarv6oky6i7oofqnst18du64a3743ovjdxtgrnyjq4x50reoxfh2qrqnfgeqd8jjtecb0w8hwkedg4z0d\",\n  \"subClassification\" : \"sqtg04efm05w7qbxvrkncz5j7yd4fc9gs7zt7uko7jjst1usdtvw0r8qr28veoas2zcys2tia4sqd8hevo3684sqj4c8d20lcvcvjs53kldcp9kk3efbr49d3p68d1hkwvucwwg7oatvfyclohkp3hnxjge7\",\n  \"subClassificationAlt\" : \"0r6shufe2gvfl91x5tbbkke2at8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34dae1c1-b4c5-41fa-851d-965948110872",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9accaba8-58cb-44eb-b1a6-74a5d5704e5f",
    "name" : "Get the current software version - 401",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9accaba8-58cb-44eb-b1a6-74a5d5704e5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion"
        }
      }
    }
  }, {
    "id" : "f60d625f-88d9-4565-a918-908ee4069636",
    "name" : "Get the current software version (application/json)",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"softwareNameAndVersion\" : \"vknojouvqz07fb6iqdbmv516eo5u8htjq91c63y4ws3i6866o5ajr3qacubp2h068p6ia6n2nkox763cb07768rmkh7ozjirhqxhtt1oh22epirbngbrmn37rcosuhktisrjrtne88xa72pbl62zwc2r3sjes9yh5df7203dcbeda8ll0xn3gv89ah3\",\n  \"softwareVersion\" : [ 604668443, 1540785524 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f60d625f-88d9-4565-a918-908ee4069636",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435206Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion",
          "schema" : {
            "description" : "The software version.",
            "properties" : {
              "softwareNameAndVersion" : {
                "description" : "The software version",
                "type" : "string"
              },
              "softwareVersion" : {
                "description" : "The software version major minor build",
                "items" : {
                  "description" : "The software version major minor build",
                  "format" : "int32",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "SoftwareVersionOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8ca176f6-dff7-4ab3-ac66-dce2c0aa44ea",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8ca176f6-dff7-4ab3-ac66-dce2c0aa44ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "41015b53-fd09-4551-ad75-f7ca7b7550d9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "41015b53-fd09-4551-ad75-f7ca7b7550d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "215558f0-a4d9-4fc8-95ba-b01463d9d05d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 400",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "215558f0-a4d9-4fc8-95ba-b01463d9d05d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "726bd231-f303-403e-abfc-5d1f855f2872",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"0fnphmblj6hql1dfvvvc5pnk78kjx8qserg\",\n    \"score\" : 74.72463020162043,\n    \"probabilityCalibrated\" : -0.6556780883439985,\n    \"name\" : \"Pat Deckow\",\n    \"probabilityAltCalibrated\" : 0.7882750094968982,\n    \"id\" : \"rkr8\",\n    \"religionsTop\" : [ \"ursyfn0fmmrw6f8dp4awobqyht7ihi7rz8wiorcmdq3zarcnttvk0ny8wyu2gfx46nqm9waz7su9xzef560akzis6rflb649w7gonfw0oal4a1ium6vfebx0xx55z1rnl4wq7l9nydddhf537i27wa3zavesmyuowrglw4uwrjk86r\", \"8x1d\", \"1uyjug8jfc2mdofz8sjdmk9mxvai74iqc7m73409cfw46cryln2xo48gv8pl4oplfg506t\", \"39rw8lwxssemidccjgrhuehwr9ek\", \"fh8js2hvbgeos0pg3q95wxwmik2lp09anjqc4338rwczhoxevhlu0p22458oacjsl4x4yfhlhzjzt46o8k0bvlxpwzp5mpkoye1gk166giw8z0b8dvibpz9lejnyatmk9flnfvaj5gbxas0kj2i7vdy4twcsyyve263fr7e\" ],\n    \"script\" : \"gwaeagznofgrc62lvyz9ulz8ynoa8226w8b91eohfzv25v5iua1g392v2rv1mlvof84ixx0x1nuektfh13rfa7vofhtsboke7cqjl46y6svskp5fwqigkkgqkah7f9899z81dbzg6a50aa7omjvcsq\",\n    \"religion\" : \"r2efc3oe0akr0847e4rvhu58r017hfl1wpqrfklj0sxfyxmvhave0ypbzhdecd9a2k32u1psymgejksrraauvxzaodxz9mjq9mg8n657u4ix8s77jbs381ar80d94ifok\"\n  }, {\n    \"religionAlt\" : \"9je17q9caeefdexic8b9icm7z1jsxp4angmt9cse9sr642tzmjt7kn0carmhc8wdntrjp9flaedp66q54kwmuzxxq0c3tlwwbr7vmc29eewjmhi54g7ljgkau89fqwkj4d46hr7qz74pw5r8gq31kx7ha3mkv1cbjct4h1khquyvmgnxaeiq0gwo2y2btos22n6p29q\",\n    \"score\" : 15.605130759891239,\n    \"probabilityCalibrated\" : 0.24601766311390616,\n    \"name\" : \"Margarite Mraz\",\n    \"probabilityAltCalibrated\" : 0.4903615983974423,\n    \"id\" : \"65rc\",\n    \"religionsTop\" : [ \"ivk2vq00s5lfw6fgm9qkguzplqfeav2cymr2znxhh4f1ryqkhtnpnsgnxtj0cjmwt53peakmpwbnx681gs0ygadwq40jg0786d91c8h4sifd82h4kdcj9k7sd163muywuot8e04ysodhrtetxno0vflqdp1w2e9bhb7hu6aumrlch3pbicc9uicrnctfso6iaee8l\", \"9845leomxn8vy6d0gyhqizq9rqhhm48kyyrj8qjn99au51s8a274nm53wly53f5f59d6nsxbxeo28hvo5mp0lryygehm2uz4wjwd2qhutjx80kak0bfbhf7ntb96o1rcy3utwdc85j9v9sc8d02d22lk9b2t4\", \"hihuahrwsq8h7iie6r2kk5n73opqgfoqzn2m8bv270c942wpkek9xcx5ls5yv4izmd6xejt29o9sbxtsyowj5ucp8drl9au5ukje89x2peaqmv8nft5pjon2i9g\", \"q421scv3rr0f4xibs0h1oqf8gjrgs386bfxgegqsiadc6w6yng4h9kecv57ng4f9mn6m0ailnvsyplo53oc3dasegtrifi9zjnx52du2fdf9l7n6iyn767j7x11mhvyslwt7cl77qcopq8ssseqwqrmi\" ],\n    \"script\" : \"t9hodkq6o9bzv52vvkwbzy3owapj\",\n    \"religion\" : \"650zbh601\"\n  }, {\n    \"religionAlt\" : \"ghgcsko4xg056t3tlaqy6fn8u7e3njgabtz0ph50vd082ka2olwo0ngulfpygc8csm8wg5nq81jgmcga4cs3qo2ll7h0vgc4sgq4qtsqojwtlthe\",\n    \"score\" : 95.81801140652742,\n    \"probabilityCalibrated\" : 0.575260022918263,\n    \"name\" : \"Filiberto Paucek\",\n    \"probabilityAltCalibrated\" : -0.937940327225502,\n    \"id\" : \"2bb8\",\n    \"religionsTop\" : [ \"2aqk1bjemdmse97wc65ebekc2mgo51vfhnr3tlyv62yjnrdjygq9v4rb3jwrsd85aeejmguwyob499qp8p5za21975pqfl2b\", \"o9t26959h7yybf502nwupgjt0lz7gznn6l6x0r0xub4gyv7cre\", \"e6vcjnuu3ixyrq\", \"rsuwz4jgo7wgl1cwyl5s0xyaav1pqjq01gc3rix7r7zyvh2xwotylhchiivbsraz8yvstbutq3qvy1jyjjrjqz369nxlf9liyflzq34wmiffflva1zfwjyv2nqhn7gosfzrv5e6mjlsqnuf9s7h952\" ],\n    \"script\" : \"0jz2eg6izcbnk4v4os1ny04cahxcuh4cjt6ht0hywlk5hc9kpeus4lgdme3ss5ugm5qcifvo50fwhuc6zbx3ey9o2c3vvyelax54ma\",\n    \"religion\" : \"6w6d93svh7sbcmoque1igap7kii\"\n  }, {\n    \"religionAlt\" : \"cb54eq7i9eu9b7t5mzn5dw5qqehlu2tntzr8wtd8hx52i1f6v9e9e29do844f9knjggaixh53e9ja\",\n    \"score\" : 60.940156944292966,\n    \"probabilityCalibrated\" : -0.8274849592227882,\n    \"name\" : \"Devon Ritchie PhD\",\n    \"probabilityAltCalibrated\" : -0.1665950657581441,\n    \"id\" : \"w211\",\n    \"religionsTop\" : [ \"z3ysepw8q1wc83lpo7kyqct2149ddqubgbtt5xal9mfk5tufisxc0nwj9l2hexxgzidhgofvkvvd2m9k83kb0exgzniwo08ae8goe3ijjc8uoy9kkapfdcisrs1lt1z8jeor31h1t6mwxgf2cr8djustlbb0xa1kj7rtzs09bzdmb0i44wt0njmp98kauj2s\" ],\n    \"script\" : \"bep37dnrzccxd59jtbirqfavhohmkdonw5dd7tbt1q16kdomvd5dkpr69n1to50egy4twxbvznq02ffi27oin9efqcf0jx2bm6g576h4iw6gui5l2ef2schlyhy34xinkxn538i0o8l6qoslv9aln6x3\",\n    \"religion\" : \"716d4aztn9mtjptxjixyr7meocso283pbapkw2drwo0bhgnh043n9ftb86i3uiobjjk4iwe93rv8d\"\n  }, {\n    \"religionAlt\" : \"7pabd8ioveezg4xpc3p0h39ku12l0gjocreay4dtmsrydm41m12leaf8tlwcnls3knmwkrnml9myrjjyt4yx6u67\",\n    \"score\" : 71.98787178393377,\n    \"probabilityCalibrated\" : 0.8143162870439857,\n    \"name\" : \"Ms. Nicolas McDermott\",\n    \"probabilityAltCalibrated\" : 0.4965412881657161,\n    \"id\" : \"964n\",\n    \"religionsTop\" : [ \"avhyl15vh3q5f5lgttsl3umat1mlxrc6x3iddel4y14lqmj037nd39apbt5vth2uweriyspx8wibyiudff28awsmrzbrvoyd2wisjppurfpo09qodxnfj37lisz21wiop16xh3dw4u7cozugm42peq4isr93jhk2s6w2z0pxduya9o4sckhrosz92dq0c\", \"0x2cgt2i0yeoiqeu417impi0a7gsoawie31v5nkjedqr3s6jjx1qx535mnjhx904zunw0jl8g71o1tkwissc17rrj2pawughexdpyzv9l5yjajehupa5iy0jhmtbhdm8jl30fyx1m6bjb4y76homwd7k9gkczv4p6673ycroe88qkqe5moh5y\", \"hekuwn7xi0odp0tw551j2gx7ctc8nt4uyor4m8pydkae2l8fxhr\", \"3la3p\", \"46qwsysdv7ukaatsfn7ju3tu3cm8c0t6jku9ec6050etw1vx1x7o3t73ey5mwodyyv9rc8isyfdw0rjtk71coolvikubl9inrw3aku2qbghh6wt8g0szjeqj9i5c9nzk3qfqs2h4vlkzykqc9sr9mdiq9h69mac5tmfvqchofcwsczhvu0c\", \"bk9o6t4zg79wrbzygt6ci14gmag5d1krg1x5whmvydd663nqgmj3syhjfbh3wv3t9w8fnif6rndqak6uqksc8pjfn6015dg04xk98wrlx8njmct2oeh0hbe5ojk7x33uad7gx3durd27n5kzj9vbfkt4ftxprdneb39\", \"ipuze555r9adce2zuakteslzavifj6a\" ],\n    \"script\" : \"xmn8o1y88ailu3n9rekepmlcwtoxsgqar8kz4lt63iuhlqdwh65xxvepje51njizavl5t25q8hg9ued8qm3gs4hue4s07ptmlge4r7xaenabanx7ppn87ar8wuy2bew6lcq2z01sxstifd3imlhuwrnf22fbyj2w1hbdfu9ki01ei\",\n    \"religion\" : \"n9vx388ugqpnypxr9o5pgwnknrytm6ud9tpey51bali18e92zasttgcaifw0310dd6qu2qh8n3gftga3dkjxyvckl0tldzwcvu28xrx7q9hgdwnivms68l5o2n8ztm3fascx3e82xx6kdipip1unet43vrwel8huvgysetfmy5zsfdvt6klx0ok1dr7zbh91umv1wsp\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "726bd231-f303-403e-abfc-5d1f855f2872",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.435052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e5d11527-6db7-4ace-8d50-9baaabd823ec",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/k6bg0reiqqyt96fcppyw3knna2ux0y7iqvnq5e6dumzw1xnmz32w907mhsq2k/fng8wlalhbtc45sachkkfpxnthu9d8q20m6wivtisumwwfpqeghc3ca5wc4k",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e5d11527-6db7-4ace-8d50-9baaabd823ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.434006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    }
  }, {
    "id" : "c3ca0176-8db0-49aa-8dbf-f56b8e3f095a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/gygsxkyf2uy2082cfry44akp0o9ijm20qlj61i1exq6ptjgawkuknlvr5md4hy5pbhb94qcwfvswt0qqlna0x7n1fkugjt3behnb78rkyjo23v8y8adhfodk797lqd0ylqhukixqs876vs8ucjzpwdpzlz4bx1nbes54q6v37ejyeg/ycxdpm2f9my1t2e6klzhp2ailmpd0nokh5z2iwrxwsv9fhgfebqwzgz87xd0hsxj8ha5ioxcwi74hs84",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c3ca0176-8db0-49aa-8dbf-f56b8e3f095a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.433967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    }
  }, {
    "id" : "2c03c52a-a08d-4281-8927-b2237c2cba0e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/4x81gaow9afo76nx5l41gyhupqryer9wxzugqpelw8dys72m74z09ppcyn0hh1lccyhh4dlwyxrsend0knl8ldh2xoom30b90a2xy8vu6syh5dy24dkd236hnynp/9sctofz3hykb70cmr6jgqpjoio55uvjggaac2nasy71d30fa0wklgen8u669ori8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"in123e1qpgzch1quy253fyqab3m9k6sws922xapdzeb6wxko06yefo7glmeidcd81rla5j3xixkwbrpoc012wofbtlwque6nxlogj07ol5da8qsbufe8gjcr4n1kkfhdg372yitg8xm88a3wsdv7ng42lwk8bocarh57r84bkzo7z4w\",\n  \"score\" : 49.61772182486154,\n  \"probabilityCalibrated\" : -0.5111546460890926,\n  \"name\" : \"Merrill Cummerata\",\n  \"probabilityAltCalibrated\" : -0.9778758796065323,\n  \"id\" : \"1js8\",\n  \"religionsTop\" : [ \"drjidvzq03q2plkdnk3ie2626p2esri0m3lm212wztc08pgppm0sv46a8tm29j1vafbzg3kghh3sku3075gl37myfkq6mqavjrex65ot55kip4btoeeh11kpnfo7dso3q2g51\" ],\n  \"script\" : \"vidqy21ky5ni42l5pgi3smkk3uu306xd9j0wwi09lppgu7chy225huwssjolgzrkqyteeb1otwck6zp8nn7\",\n  \"religion\" : \"zbp4sgzmie8lcrt5vjyvm1pfl5xeqsf1txkhxfvf6hucpy1d6034vanqbb7y5n7cfu40esza5fd52gyodl4k1kimo9lufa2kvkd7m07nyrk5dycau2kss3n9atwu7cct3xlo622plbonwgzu7nnf6ymk32b7af0ix0hqir2l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c03c52a-a08d-4281-8927-b2237c2cba0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.433913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "894c7262-2792-40b0-8744-1cb7e5097dd2",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "894c7262-2792-40b0-8744-1cb7e5097dd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.433625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "9e74c761-4a65-44e8-9af3-e54a157f2a60",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9e74c761-4a65-44e8-9af3-e54a157f2a60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.43361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "e709fcb5-143e-4451-b0f0-b3ba1379b43f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 400",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e709fcb5-143e-4451-b0f0-b3ba1379b43f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.433593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "ff8c4ae9-4ef5-4fc7-a113-cb49f356baaf",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"u2x3i8bq525e4iki7qumyn7plxscl4h2vd997nu4dxqf9c20231qbr1b62yt0cw2tggidx604w2skfdydok4bs5zok1uoy2z95htf2r8en2o5ivvgzct5jc7ftiyjff2wy8imbxasyhr89i1v7sbef64b7caim5zlqahq00z\",\n    \"score\" : 69.51173813119846,\n    \"probabilityCalibrated\" : 0.28431309354999,\n    \"name\" : \"Dr. Lily Kling\",\n    \"probabilityAltCalibrated\" : 0.48722577069330586,\n    \"id\" : \"91h0\",\n    \"religionsTop\" : [ \"w3nificgyyot0kadsitihteei35yfusrwr3q26lwzv7992drh42rbxu76frj2xnm5tqak4ko7ivlknq40ilp3x5pfv1mhg07ckmzqzlqd43sbiz2vfm85pdtojd2y1mes0cwdks7yokqkg33h7kf09hddknwmi9\", \"thl7ehqchliofztfgjzmrprj63u6mafmbpvcmcrm58tjp6sfcmkzh15f70ho6ewddwk5ybnk1ylg8ngi8dtqcc8cmd95otzuxlsj2fm59gvmvmjaipfo9zc5c0nec8kthglitlrxlhpm6eeushpcr4\", \"2mjsbc74ecnbf2q6ytibogux83s87o8y41146vxcwenzm8wso4j8gv6dkd\" ],\n    \"script\" : \"h5lv2nsbm9npwfhwyjavmsosk2owgdf4073ay25twzoy50bsvh9trs68xq3qyqnkpxca14lk53ualiu9xiipo1663rpoiiyf8h17m5h15ocz5\",\n    \"religion\" : \"lavdnhbffpqa1qaepdwdp03p1q8iin4mz0ntani98wg7tdjdn1mzxdys31iup9kymz3fngmnljz3grm76u911jlwg5vup1s8flnqbg9636zpytlxs7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff8c4ae9-4ef5-4fc7-a113-cb49f356baaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.433568Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e17bba48-ee95-4aac-af4a-debb8c0e609e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFull/02i2g5i090ub5yj4rctpmfcaid4g7buq2e9gjcnpxibgah5fb9itobqfkmlind5rxpurr9bui410dynbl4w07eih1y4ky7b3vwucc7gfln3mt6ul5s8/g86v767bwkf0io85b159pgbiuz2tk7auno1l7tqf3r2ncm2oqbobxe17gp29sumzj53dglj2go39fv7g5xyun5/9lsh6kxah267fspafkujc584jb4rmjuk0h1zdd44pu6bumqjjcefwnifj6q1ke5ru40rzq22iuapf4k60",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e17bba48-ee95-4aac-af4a-debb8c0e609e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.433328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    }
  }, {
    "id" : "b376f48c-cff9-45a3-95a7-387164f282d4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFull/mtjbfljk2swicgbeowbh6ltf0vin64nvbb8g2j12/mvusaik965ivypr2dblvycd89to15d087yka56gnuytncekfwojkgsn4y5b18aevt7vaczi/dfn6deixwyc9m24kisiu45f2wi852svwivvdwvydm4e9k937d7nj8s8bweotkeo0cv3dqspgn7wvp33n8lyf8ffuuay9tu5t5863rj",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b376f48c-cff9-45a3-95a7-387164f282d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.43328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    }
  }, {
    "id" : "a0af3fbd-5cea-4003-9e7e-713a69526a99",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFull/2n7j13tkmpl5g46zvjldmnmb2ihnegv8h4gzu55f7vriixzubgleaxhg2al556p5ckoaux000/mydggdwtbyubw9xtcmkuhs2k3/bgexfpxe6epn7jf1ncxoux2gtmev1yqndklbg209yic6v4lmz9ygp1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"pma3ll58xxk44kby3kox9qss2oaus80k9r2eqcd5cxps70irnvcpqeum8qbfh04azl9fg9n1yvuse6hn75z1pplpz5imlda62scr1sjwnzorbamrqvvxms31ygoezn942xfdfsl6ypjhgmzsp712p7meh34slt144752gzl8fyebf1rtjc5\",\n  \"score\" : 43.535322192611645,\n  \"probabilityCalibrated\" : -0.8877440589449126,\n  \"name\" : \"Manie Aufderhar\",\n  \"probabilityAltCalibrated\" : -0.7241134421809183,\n  \"id\" : \"28zm\",\n  \"religionsTop\" : [ \"unlk2ph2dn809v4rjd4cbgmribplxkeied9q8t6v1knwz79inrr0aguwjpz1mrj43o8wur6ec1dxou3j3zq2d4j24fyw8nmfquyaril7ogbk49txaout8w9ox33yj97n2cd4akwjvvsjy66x4nrbv\" ],\n  \"script\" : \"y4lmtmorhe6hb33nws4p77i3m0v4iw\",\n  \"religion\" : \"v9wna7t9ebpnogwh4qlamhhtgbn1p2abtdsk9q9uzvj0dnm5b273alzsjjmi259lph9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0af3fbd-5cea-4003-9e7e-713a69526a99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.433219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "bc3043e5-d3b6-4cc0-8efa-f3c03f0f0e0f",
    "name" : "Print basic source statistics. - 401",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bc3043e5-d3b6-4cc0-8efa-f3c03f0f0e0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.432897Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions"
        }
      }
    }
  }, {
    "id" : "c738ea4c-0fb8-4030-907f-aa6df0de1ca3",
    "name" : "Print basic source statistics. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"countriesAndRegions\" : [ {\n    \"subregion\" : \"h00dq4kmkkyhabzfvx1ugj4jxaq76gsjawpvrl1yuvmoqqjs0npp953lzx6mij2h0xx09p2zxons0985zdbucdnvs9hwzxzp99misub0l4h5o7ahgzei3cz3dyjlfqwv0uqgc41vnnw7xhlxslc7ptgf1kwxnnbe7\",\n    \"countryFIPS\" : \"zyayyrbjuy7ljqju97e7k752yz95yzv4ubmutlxtrkz8rgpdc1nojzw3hjpy9f5udr29u3u5ib57ivwc9xkycwlokplc6tdztvj8z2bxaio92b2nt2rei\",\n    \"countryISO2\" : \"85ge4niehvn44gcyz\",\n    \"countryName\" : \"Tyrone Klein\",\n    \"countryNumCode\" : \"rbdklqb64ptjf11qrvq14e4kgs5mwvnz98g0zwzmewde6f8xda54lr8nwjt8evqn1ezkwe8hswx7p9048c1j26uv057xnhoa0dyugjoolqua8w1fjon816mhy8cz9ptncgocqzdyx5\",\n    \"countryISO3\" : \"gut6617btmiupelr78hkrb7d2i2kyf3mow16s5ifbm9af0ubpdzag52of4jsjxpbatd44u2icf1jlpp48qsr52kt10g899bwmszaugst0nwbpneldhrzu3p776dkp4debjddjkesacklpt23v86zunena6x4ton4a8g61ha2zgyp7s894t7hr6a19s6178qkqo8g\",\n    \"region\" : \"gl9m75paymghcmif3vqzeqbl7xsu2z8x2eazspgwvkrwngfgeoh21dv9vfgqxlecmk0aitcjy3pl7suatr0wecvz8d5sf8zjsuk6zqkmt82ezu6m3177tdwf9yjpnjzwv1vix9c5azaclasnlimr69ca2zu5s97htknpf0tk5n97tl3dytk2ypznd7l478me3ktot8\",\n    \"topregion\" : \"wzt5aw0t5fcxxu4opmd8l38vezvcpzoauqhd1zsfwarrdmda4uruwa5waxs96texm4qdvym8ukstlrcju9ktwutlnz2olzcq46h061ay48vzkaerl05u5h9i5i8zhbqng2ont4sn0ylmapinj2h06ui8spfc72mm2f5qqz76fjpqd1ql24ck8w1x\"\n  }, {\n    \"subregion\" : \"yesi49lsg6yxno961qy1iqdtqcjlr30c237svbcc95c1q1r5pzebvxcxsdaf144d3o4v2kd1dahq3iw2om5peugj6j2hjn8e03v8vl9dy6lbz013p9x21hxyv9n819jxzno6x6895vslpfqmpo82sla81jtsoerri13x1jg9qnju23uhchku5b\",\n    \"countryFIPS\" : \"104di8voukd99zjpbalh1t1qvfj1ymaqxrdbgecru35w7x8qkcnaayc31a55yz9knch3hwejdg2mgpmyc2ebbvprundmpn7izboa48vw2la3p\",\n    \"countryISO2\" : \"m7jhs9su5cit5389olvvfrks13hf3dg5n01pki64rildbzj3qylbxdwq3660jbb6bfbnly2xxr2stvh0y8swq4h34j62ki1o05dnsp9wkgjiewmgfqio0sfp7htli0bwfl28qbqig18rqgbge5p0ux13c8bo5s41vborhk61xlrmm5n3ftarlrn5xqsouu5byli8z\",\n    \"countryName\" : \"Reggie Schroeder IV\",\n    \"countryNumCode\" : \"r05a98q7rx9weaivh160q2432gc3t7u1qd0gccooxodi3mdzxg5hk6\",\n    \"countryISO3\" : \"r1311tthaj30i7q5i5ugxeqzzvhnrunpkljotxpxiz1333id3fqxdzfez0bidu9yqzvo6h9obnw3qlcsmuws1r3e2jg4ilj9c3nj9t1t6qbzfvzfwgjdn6p2hu7t4g0tixv7\",\n    \"region\" : \"s8nk6ert7wvkcw62c443iwoh5218bbq1nr2ohugw1u05pstt7ukdinq1cnxvjf8ta15l8kwxjy64wg3jz8mzvns02dhokovux0rscuuohmdm78p\",\n    \"topregion\" : \"wfm99dd8xyq5hmy89mh7yhisxq6wy6pdci144wjsq7mfl0fgiff2jjzg7j946alzjej8thl9a9e3dnh8grnc6ib92czhzc5jh3e55i4sa1i58i71u5c19mkc34clyto10s7qcei3ovolklbu8zvsdrw\"\n  }, {\n    \"subregion\" : \"piexr1\",\n    \"countryFIPS\" : \"x7y6shxcbx3n1enwph4g1grez6c7h6u8b7xp7ijnxig4tanjq2cjhwbgribs4ozldvup1534s5z6xknwmydgungxn56wper684e06dy25ublscbu8uy37lusmd88c24z6zbkdf4s328mfb32dk8stg5qbpp785rftu00\",\n    \"countryISO2\" : \"r08b07cfsbkwkyjpnvqtek1lkw8x6o9jjcklw3zkavvatv30ev8qty2l5gfesku9v9w0zon73snm6eli01q2tf68i7s3pzj8zhmypxc0p21hnym30y5pu327uqitr94oc3v8aoqfcygrj4x7msxcvh8zlgi07w2xdc2stj98wjqvoslqfd9mmmpawd3fhebf7mkic\",\n    \"countryName\" : \"Kathryne O'Reilly\",\n    \"countryNumCode\" : \"biizqm1arna0kb3y4j6uc2pcbgf2flnp2akzp3r498qejmqg29401j0wmce23myd48w0eydrqk1dhturtglnlxxmzmldrkfcwlwozt6hr\",\n    \"countryISO3\" : \"bxve57e1rkowjxrogksnhfpqzjbxqg7fcorphri67vo\",\n    \"region\" : \"a7as8alfj967rphus2ggnux0wyh82phs8k9xdkor6wa4v295fhmea13yvioq34uehwso7dxw5qcg1kkj84r3xptpwwt591seannsv1t9u\",\n    \"topregion\" : \"k7mihisc91nfeb62s3appib3eih58eoehzccms2966sc2yjq91vuwbupr7umm2uyu3mkgci1ggq\"\n  }, {\n    \"subregion\" : \"ka6rnrmkpde3f713tzzsmst3mlgnrpki5i0qi24mbg7fx430oitxufetbr0\",\n    \"countryFIPS\" : \"nwm8dzew0r6q0q93w6i3n6nfxwo\",\n    \"countryISO2\" : \"u9fi3n9g28146i3w5nksads1mk53bp3qgcf5imtzupacnqsa7ik9y9iwhz74242w1o5a04ehh83i4utlcw2mfqullvx4fe3g0g04phzijlpi1ys4ig6uw1tor2c5lqvryqamsis6ts3cej3wk3bgu0h0152tpg301f3u3tpa14usbfw06lq2a5bttfjer8t\",\n    \"countryName\" : \"Rossie Lynch\",\n    \"countryNumCode\" : \"q942ku5z6ko0kpguvstqel9ujkvnugadb04soy0eos3hj8qsfjk6g3qkurotzggk4h7oozcjxrsy3m4xbkq0hcfdsgqp00ez6myo25yq623may\",\n    \"countryISO3\" : \"osq2uktvuv3l1htai036d1ihc622ht1nqnka6fwvdcjxouxzniyvg8nldqyraraqo55924s17j9ksyo4c3e0q05j3xhdei1ahz12qv7f2s6ndhj5tgsrd3i6e1b1h6chi7ma60w4s8l5vnsa8k0p6yzllar2qaphtwmw563fh286ycprcnpwldp28q\",\n    \"region\" : \"9k9r9hfdbby39eijbynucebg7im1pxsiauv64vva\",\n    \"topregion\" : \"wnphwzysg9rm87gnlr6ljjyxtx8er18lriawz2w8g1y595quu1696sz\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c738ea4c-0fb8-4030-907f-aa6df0de1ca3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.432872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions",
          "schema" : {
            "properties" : {
              "countriesAndRegions" : {
                "description" : "List of countries and regions",
                "items" : {
                  "$ref" : "#/components/schemas/RegionISO"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "RegionOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e777be46-1f5c-49d8-9f5d-110bb8fed894",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e777be46-1f5c-49d8-9f5d-110bb8fed894",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.432266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "12ddaa65-4c57-4aee-a983-f4f5579f4e8e",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "12ddaa65-4c57-4aee-a983-f4f5579f4e8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.43225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "825e0c75-dd27-4f21-ae1d-0984023f9142",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "825e0c75-dd27-4f21-ae1d-0984023f9142",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.432233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "2314c164-7b9f-45ae-b1f8-82d126c1804c",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 80.75030350860386,\n    \"firstLastName\" : {\n      \"firstName\" : \"Johna\",\n      \"lastName\" : \"Quitzon\",\n      \"id\" : \"tx2t\",\n      \"script\" : \"5z241873mjxc2pa7hy1ger9gnyr33t72florg3u70mytc4tp9k97kl9phocx73u43qzsyw9k0ohpfzdyt15yz3ofgj2n67omrt8un8ov612jm1228mkoou4k6n4dv5utdmnlcnbfnpa7zzkt6c39zdfphc3or8p4h\"\n    },\n    \"name\" : \"Kimberely Bernier DVM\",\n    \"id\" : \"22r1\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"00hy0gpfrjd73fxlyo2bxir3lhknq1c5i6uktjg1surq2zu0nepi4g1moib\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 71.68108244144005,\n    \"firstLastName\" : {\n      \"firstName\" : \"Leonardo\",\n      \"lastName\" : \"Lynch\",\n      \"id\" : \"m60u\",\n      \"script\" : \"dqnlci9fu8vhl2g7zkxd8mozzwzcwy1d0javq2kkreas1cpdwfyzalgztxjin7ijx52fwgjnjcssyd3ml97x9nq6bn8i7ayhbl70y09g0kc3w6961o2ym7r9xb0t7qg7eb2monwn4kjonq1xt7en5zt83bm5xjmznwjpl9bf96scu26mfuom\"\n    },\n    \"name\" : \"Vivan Corwin\",\n    \"id\" : \"03p2\",\n    \"nameParserTypeAlt\" : \"LNxFN1\",\n    \"script\" : \"2l4qru49a1e7uzwctek79yqdqpsepuo4kro\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 11.288971526408265,\n    \"firstLastName\" : {\n      \"firstName\" : \"Tobias\",\n      \"lastName\" : \"Lubowitz\",\n      \"id\" : \"4zaz\",\n      \"script\" : \"v82zborbsdl7kz1oe4r57ppd1uob0nsa96c7m68qp1djo979qxxcweptfimaue8p0bbx3fxgwd2ddxevh7yfrp7mswceerqeoc3rgplat7d4yttwufevaam01xxwhrb6kg\"\n    },\n    \"name\" : \"Luis Herman Sr.\",\n    \"id\" : \"0h1g\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"dtks8lb1oj09291zajitgeoxbcqhp9r0871tkqfmlcoacx9sz3swancti325c9q85ev7ttbymnyid2211mu7oo956nz27lae\",\n    \"nameParserType\" : \"FNxLN2\"\n  }, {\n    \"score\" : 88.21600274413277,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jeramy\",\n      \"lastName\" : \"Kessler\",\n      \"id\" : \"6kl2\",\n      \"script\" : \"1z9duwo50hgjayw3bmialk5rjukoa9k5wtyfn5rnq7ymx4wcb62i4ra9xvbluv1j6weum4kx4rni2m6o\"\n    },\n    \"name\" : \"Mrs. Michaele Konopelski\",\n    \"id\" : \"0j9b\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"fpwwnezieezlqv7y3v0h78f9z3e3vuzdn0zghlkaag6y0u5p6v8zsb77nnygxzxxmi85ix0gvsl972oobwcjjlsy19suqg9scn4yran9v53tihiwg1c3ibynp9vixtadyim8rwduws03ah032bl0cvk5k1z7ya6omfqeentmtf93ej5fh9q9ntrngwl3u3f9tvh\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 31.991281336847933,\n    \"firstLastName\" : {\n      \"firstName\" : \"Marty\",\n      \"lastName\" : \"Kuvalis\",\n      \"id\" : \"2r58\",\n      \"script\" : \"t4k79ukz1irkmhnyw3qy8rtqqcn173tkvntcgza5nqjcfuu0rvpnv79vs24p2stigbal8gquceh41uhzyea1pxbeelsjd2kjres28rhztdw9p7\"\n    },\n    \"name\" : \"Dr. Ezequiel Oberbrunner\",\n    \"id\" : \"mndd\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"h08uhk7rozcjacc5u36cs3vtit7347ie72pguzyu3ogfkkcox89cee272w678xj6ntrn5yvrpjisx5u2flsqgaac8odhxugn2lr9b5ni3di9vvbzumpaf\",\n    \"nameParserType\" : \"LN1FNx\"\n  }, {\n    \"score\" : 71.99461321421799,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lesia\",\n      \"lastName\" : \"Barrows\",\n      \"id\" : \"63vs\",\n      \"script\" : \"163ghr778kgf2iep66ms7bp1ln1qj1y356fx1z08m7p5h6chqqra71eocs7i1zpr5qq4l49eqz99xqovbvmv5r41mnf8s9yj5y5dqw2zvjq02oo2f5xglxwk39qe2caqycfzzquh1srm5xhhxh6kgn2hvizgjo17mu0vtt334p572\"\n    },\n    \"name\" : \"Roland Buckridge\",\n    \"id\" : \"b64z\",\n    \"nameParserTypeAlt\" : \"FNxLN2\",\n    \"script\" : \"y2zyqp1jw3815r7q7mpk1q6qyw7g0ktjqjsl6619p4ikgwqk4ynmux1kdc9k5ack1bzy94vc22i2k0o19c1w81f\",\n    \"nameParserType\" : \"LN2FN2\"\n  }, {\n    \"score\" : 19.335621326695374,\n    \"firstLastName\" : {\n      \"firstName\" : \"Rivka\",\n      \"lastName\" : \"Koss\",\n      \"id\" : \"9wd5\",\n      \"script\" : \"6odtk0ptr7by07546ix53kwvlqcfore9x2ykvjcehfn1tofdtqb2gf2fw1h1a9quv9ndbzx6j6dbpzmbowp0lddgyvd4lytc0s6\"\n    },\n    \"name\" : \"Cari O'Kon\",\n    \"id\" : \"qi2a\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"onzgejgpwg9lolxoh5iqn20s4jydsqiwiuclz5ti0oy8aoozu3iawgup7qedyjrevixl9mtvpyan1v484xs83ax9dwk4r2a4n3clu78rem77tnv0smeisiehqz8p\",\n    \"nameParserType\" : \"FNxLN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2314c164-7b9f-45ae-b1f8-82d126c1804c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.432197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "3d5a2b16-8c62-45c3-a3b7-6532f2cde33f",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Cherilyn+Williamson+DDS",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3d5a2b16-8c62-45c3-a3b7-6532f2cde33f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.430059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    }
  }, {
    "id" : "ecd59540-6f32-490b-a1a4-c0ad61ea27ca",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Wilbert+Rempel",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ecd59540-6f32-490b-a1a4-c0ad61ea27ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.429998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    }
  }, {
    "id" : "0b65e3eb-5540-447e-a935-8e1bceaccc24",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Herschel+Wuckert",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 43.35669706745907,\n  \"firstLastName\" : {\n    \"firstName\" : \"Pete\",\n    \"lastName\" : \"Reinger\",\n    \"id\" : \"xu8u\",\n    \"script\" : \"8ibye\"\n  },\n  \"name\" : \"Liliana Beer Jr.\",\n  \"id\" : \"40v5\",\n  \"nameParserTypeAlt\" : \"LN2FN1\",\n  \"script\" : \"r0096wt1t8jknhe9anw0bl8tsl39wcjjxas0szocd336q8qyltppehtdk\",\n  \"nameParserType\" : \"LN1FN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b65e3eb-5540-447e-a935-8e1bceaccc24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.429927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "facc3dc0-b6c4-403d-ba3b-25930c19b3f1",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Ali/Senger/1-316-378-3157/e5ww3k76kwzmtr4roxxrgee2ozsi0b0mnzhcn4afip4qtf4b89usppr87ydsbgx4pl4sqerfdy27/uz9te5ql4d4gbi6tf2xzfipajh79str6w7zv0h",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "facc3dc0-b6c4-403d-ba3b-25930c19b3f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.429491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "e6285da3-4d47-4a10-9239-e2f688da0701",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Ludivina/Rogahn/885.270.0930+x4398/yz47ttdjfabb91cfiqm01l1sbl60ufedtg6h1n81lwssihpjdgf5n7l7g4jsv3kjdyye91vv1k3tcz84w7vzezkgdq2srgg0g4w65x/dj79he38451iujne3lpk2af2casyorzv2rb04d2rx6rx04ofujz10whrn7m63h0cr0x83fsxgxgvl1ytz4q9y4ktn90ymeu4t6qq41pkx7p34zms3o59ftv5efrbqeu3o54hqm0nz6wpd1nodzgsvgf71l00tgcgjd8pmrhhg0b24sew",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e6285da3-4d47-4a10-9239-e2f688da0701",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.429395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "5f4caf4a-f168-4a7e-a7c9-9cfb1693cc99",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Rosina/Monahan/468.744.3799+x49452/0sx1hkwdmmc433o4g0u9yazb3wz6xor2ifvhdowfepyv7v4pvr94cmb6x5nmzmrio84dyhddyztypktulflexwtmm42mu3zoijxm0euo9r5r1mov1ugztdmq2vjdc7mwlg2z0nj3kvipbms34isx0shw708fnvwqhbn8kxw8ihn0zz5j117tje2laxzw/crkoorux2xig6y4k1nvwks4q6i9oldpsr0llfer0ttaxw7nuzh7ixdvs60tbmo8al8npdmj7hasnqtm9kxtyqwy8zhpcyepzd8j026n8n8z8kgawz2ydw6fxf4938vg5pgnqepqp6u5lysazl9a",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Cruickshank\",\n  \"originCountryIso2Alt\" : \"f5jz7mn8ekz7u5264bg77pwvykov0stgcw6bftaz6oagxaxgau2b8x0foayuh9mmwuooz1o530g6\",\n  \"phoneCountryIso2Verified\" : \"t8w1p32jn19vpyn0tuiy60ozbqz2o6lmx5gkfkjuyupelmgnu9rr5u100bho9tthg0n3x5czmk1si910skhc3y7dzvkkqiopns0tnt41iwx73mj4ku3zyoye14xne6x2tt5mdxotva1aauh6lba74rmaiogfhktve6oevkqr\",\n  \"verified\" : true,\n  \"script\" : \"63bcca77rt7700sgwj2c7du64kiohhdozlezp5xezmsln4e55iygacgwjl0qbg6nohfmw02w4ztk2if2rhm77927xzsgkyt\",\n  \"firstName\" : \"Retta\",\n  \"score\" : 46.592761190402484,\n  \"phoneNumber\" : \"511-491-6878 x518\",\n  \"phoneCountryCode\" : 1638778763,\n  \"originCountryIso2\" : \"bt50ur4fw53it8\",\n  \"phoneCountryIso2\" : \"fgqp2b8bcig0w53u7ysa7yd3s6uegzg\",\n  \"phoneCountryIso2Alt\" : \"mrgfpu6s2nm8ptznaxhcqzlftdyx04guir9xdkz47y26c1eqdes78yuezjyx3m7l7unixavfdy7p0yha453vn4m7layep7\",\n  \"countryIso2\" : \"upyubkmme9lc3014rvcix3is3f4m87vwy4nb97g0y3mau9lnnffrd5up3s42lcignedwrjbg3ktwbw\",\n  \"id\" : \"6g6e\",\n  \"internationalPhoneNumberVerified\" : \"8pvrwv7byne3050gdo8auws016wvg185zdx28nozz52360c378amcb0i9ikrh9bpoawoxqicjwbra3ydkjbr231gtqo8ikdh6wv5881v5962xq99jk90bs2g15z6bsza86u0k99yo32lu87zuzqmo2\",\n  \"phoneCountryCodeAlt\" : 1860378120\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f4caf4a-f168-4a7e-a7c9-9cfb1693cc99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.42928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d09ae243-9cce-4cbe-ade0-589ef2b46f52",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d09ae243-9cce-4cbe-ade0-589ef2b46f52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.4288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "9e454377-1bfb-4417-b70e-9d92eeafa9bb",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9e454377-1bfb-4417-b70e-9d92eeafa9bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.428785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "fe178964-430c-4f5b-85c1-9aa0933fdf42",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "fe178964-430c-4f5b-85c1-9aa0933fdf42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.428769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "40fb96b4-b1d1-4996-906b-6e200d3ddd56",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Shields\",\n    \"originCountryIso2Alt\" : \"5v7hfejfa6qs445marorl2wyxstd82d08gqlk4szy0dufv28o8hasixd3sfol9moas542wda0m7m04lzy9ownuxq69tv8t3igzmb7sp994e19v2urzqee10g2tmqz15nd5jvlzpgoiz24x\",\n    \"phoneCountryIso2Verified\" : \"7ixa8xe8lvxhwhir0we4u0ebdrbqkjp5qj6mxdmnsb8k708l2jxdul7srkdc7yhrk3g1tjxiv9m6rc2l1rcen29b4z4scryq8c024gqidwgoq7v34h2zlsm\",\n    \"verified\" : false,\n    \"script\" : \"vfw2ni8cnf226xg8o1ba4ki3g3j\",\n    \"firstName\" : \"Rico\",\n    \"score\" : 21.680974481753847,\n    \"phoneNumber\" : \"1-576-036-8469 x00296\",\n    \"phoneCountryCode\" : 2066907137,\n    \"originCountryIso2\" : \"dbktpifj8lzywkdowpdmuswhh5bhjbf\",\n    \"phoneCountryIso2\" : \"4f2tepdohyyhupak65tu1iwmzltyf2ml4pd345ol9uf3g15kcywefurvo7vopx7056kc3e8n16rpbz8ysc6qw5uzduyb33s36atleoyyn1x3lghf7y3f3blzxal1t7z6kc48jf7jycql8ay3kxop9c4mw9kg2yruhplm0s1h3r579zu8gxtgi07cm\",\n    \"phoneCountryIso2Alt\" : \"mqtgnbxeixl6g10tfusjefa62atnqkxkemc1bml5bmhin2rlnyfr1vgvenoxqktn7uh8tt6qm18zh2\",\n    \"countryIso2\" : \"iurkhzpv43y6m8x0n44q61ikso3qs3icaq17edj2etakpopsj73f27idbroli6w\",\n    \"id\" : \"ul81\",\n    \"internationalPhoneNumberVerified\" : \"nzfm87t7lk9y0czromz\",\n    \"phoneCountryCodeAlt\" : 1458293573\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40fb96b4-b1d1-4996-906b-6e200d3ddd56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.428744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "f1395950-dcd4-4325-989e-41e2a7a1dd9e",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Luigi/Gleason/1-891-440-7219+x67798/vjv1z0zer9q71ul7h03i6diraybph3egj00z88a4ay04j7rrgihrpcz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f1395950-dcd4-4325-989e-41e2a7a1dd9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.428429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    }
  }, {
    "id" : "be84cfb7-6e89-4414-8c54-b934bdd1d774",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Darin/Homenick/137-415-5196/27xmyn7dqvtes9yy6ftp2pk1jtei4odg1iwiyrcg30mbt9phltyv3oudfy3hrv3s0jyvs1b1h57ylhvb5fch88ssgre24tyev79qsjxggpmsk58lfhcz4si8lrdvyxr81uvf30epj",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "be84cfb7-6e89-4414-8c54-b934bdd1d774",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.428339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    }
  }, {
    "id" : "d334681f-f0f9-4b35-bac4-9bb9a340abef",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Debby/Smith/325-417-1947/fx1z3xqmq7s3",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Shields\",\n  \"originCountryIso2Alt\" : \"3m1c0m5wrc5zakswbd0rdfob1e3rbj5bbr1wpyr11hwz3rq0zimckqqxxl4kpx6pgnqjnkiinpea3trtg086g16pncdrw0eiwzae0c2ayovyvbsfcluq30mi88n4\",\n  \"phoneCountryIso2Verified\" : \"jqgd5en67s3u9d55liurakg1y4fvpxk6p72iimz8jgb3548108z5cyjfpnvnhhegorzxe7fnf7fz8pzakqlj6780t8ld88jdp5nj4wnf5q4b2cr1f1telyrn2dlg77vnslaskqurmw467wo63bp5o3vegovwcddggb83j50lt0t98utl6u20vw5ru0v\",\n  \"verified\" : true,\n  \"script\" : \"pi8r8rstogl44isqa2qwek21mzjy9s9hru8e3jhgvupuzx1yid0m9cxvqb16o2pjp6t962vmz1rmnvd\",\n  \"firstName\" : \"Melanie\",\n  \"score\" : 45.176843426074655,\n  \"phoneNumber\" : \"784.440.5314\",\n  \"phoneCountryCode\" : 2099174366,\n  \"originCountryIso2\" : \"rhprk30pkj0hgpu6nbj6w15gghlecw2pc5xwc8pms8e00ajih7dnzov8kskiacwopobvovqle3rlp7yuzm7gpl0n1dwy7nwcsp1vsxfy3ubpmflw09wswqqzyfw7uy7xkoykn6gddkl7pnhk4xpbwvzafi0gcjx69d37a1hl5tloczq0vcxued5t0y5dxyu\",\n  \"phoneCountryIso2\" : \"l7z6soi11nzmas32im7bn70g2um7ukh54thsvxpchme7rv5bbfnubymuh5y7u6ussa02hirx9l06oc1eppj0nu2ure7yf2twym9t\",\n  \"phoneCountryIso2Alt\" : \"70lhnsf3mglrz4qslv2gibh1aiv3bxlh35rmj5c8jrgn6vcd01hy3jn4f719yo70t9oq9iuleyusi6pqtg9qo9xo1hmevx7ab7snred3vxhruloey72dwlbo61wync6nrszssdu\",\n  \"countryIso2\" : \"7genrp5hjmyp0won7aa5warggm24w1hnlhaia477xz3ovn1qhopq3xho9t6id89c15lqqsb7qxmhnf82c0qadqskyjhbtaqdfdxn2k2k10h4014aqepl5y3klce5x417rdcdv43n4\",\n  \"id\" : \"avqo\",\n  \"internationalPhoneNumberVerified\" : \"nomyx76a6gw\",\n  \"phoneCountryCodeAlt\" : 375875802\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d334681f-f0f9-4b35-bac4-9bb9a340abef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.428232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "33acd024-0764-4363-93fb-743b1a530301",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "33acd024-0764-4363-93fb-743b1a530301",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.42777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "4b98ae65-53a3-4b43-b53a-1a159e4e0e49",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4b98ae65-53a3-4b43-b53a-1a159e4e0e49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.427755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "7b2d9b4d-4ac7-47aa-8b28-deb7a759f4ff",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7b2d9b4d-4ac7-47aa-8b28-deb7a759f4ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.427739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "f2f7e716-aed7-4c1f-aaaa-77b811171239",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Dibbert\",\n    \"originCountryIso2Alt\" : \"dem4qxknedcr6vael63du1h\",\n    \"phoneCountryIso2Verified\" : \"y8c218lw861gqc372foc5fdu0qc2vdu3bd86xjxpdj7wq00qrcxigw2173up5kft9jegv7xsj5dvfyrob86k3wzd1vx9h2hcfczv5oj\",\n    \"verified\" : true,\n    \"script\" : \"8u0kdlysykbfdgvg195twi5qzv6gswd2n2g4b7zmvzhxhu3nndd\",\n    \"firstName\" : \"Suzette\",\n    \"score\" : 86.8148482348035,\n    \"phoneNumber\" : \"(717) 328-6177 x7250\",\n    \"phoneCountryCode\" : 1825558030,\n    \"originCountryIso2\" : \"6iev9ofilseoxhlgnd2mz1ikkklsn7e3nhsym0l0eu88uhqhgqhj719sdwcxnqxk2uicm16jegevufkrhkyi389ogxa0j0y1a2i0ziajcugi57ywyyoszx3efw9jq2u6somubsyh5myo7okquc2fklib3rvllkgn83d3e3eyp\",\n    \"phoneCountryIso2\" : \"tbzohl6f5ezhf17kathbb58rxz8ei87ogsdka54b6jy0tvx67c57pkkumc6ttgcx1a8iq98ika4jzeluy3bo2evna27crwt52mu2ze8ejfe8e3\",\n    \"phoneCountryIso2Alt\" : \"84dxsuzkkv38ofsinb58iwegy6dkyce6ngwp5ki0vxjbk0712jeqw2m9vv0y99k9fko3duk68tvibex33bpti96iv9f9tf72mqzz673rhdxaxfaglwh3clrn2wghacs4sui0yfuie9jiz0rs\",\n    \"countryIso2\" : \"f6i3sqvi8r50tmsuihzg5cku8hnutehjw5pd1qwpsd6eaypudtdfjkphkhekmvpjmss52ziutfriw4h9v8k9jzhc3garxv2x17o39hxk8rwk1sfanlczrxlvu6gqa3eo\",\n    \"id\" : \"8r10\",\n    \"internationalPhoneNumberVerified\" : \"qfxmgbmn9ocsedel7ouypqmaz70isay\",\n    \"phoneCountryCodeAlt\" : 1230337055\n  }, {\n    \"lastName\" : \"Littel\",\n    \"originCountryIso2Alt\" : \"bddhbvoo9glff5p2cjw3kcsvilo8zze9rhzaeb2oeg21xnu97xk4o4v4b7jb3l1eot7g14lewejaii9rrk2xui0g3\",\n    \"phoneCountryIso2Verified\" : \"4uzv7n7txxfhfenif9yhjyk52y9ywg9935w9kdnphkuhlktrzn23dm4qo9i0jz0h1374cn98al7bok3vgq\",\n    \"verified\" : true,\n    \"script\" : \"xwujig6hebdwwekfvzq396orfphtl8i9d9q8rq2dgcwgg9143mxnjffd49ihs5cki7aoypxq8zcx7ti61gjpdzjqok7tg65rb66d9zrsl0a0y0rvm9r9c28xjf7r383yca\",\n    \"firstName\" : \"Agustina\",\n    \"score\" : 90.12817112456906,\n    \"phoneNumber\" : \"005.042.0039\",\n    \"phoneCountryCode\" : 729378255,\n    \"originCountryIso2\" : \"51ekd6vg0ja5xrxu80lojgyevxtkimpymatb7ujnkbdifiw0stimzchp5oj3iztvsloan3u8cu9kbrsud3bfqaniqcndzgzavl6enr6t3lyw29qni8vxd6en\",\n    \"phoneCountryIso2\" : \"xwqlrtfnkb0xlwb7q59plaj\",\n    \"phoneCountryIso2Alt\" : \"0kj30180i25b23vrjwug6tfu8arcc0hjpo7mbh83y05gtgecpcip1b3vqzsyj2sd6tni7ix7vpvw9jrf5o0a24aqagk51rr2ew4xavrj3wjnu7anyftecusk4r4hm3fa2cidpcm4cmcpsoih9icr1e1ssm8e\",\n    \"countryIso2\" : \"utg5ffnwuq8a16s9od1k9u9kuepy6ms3nxk1y026mhcymc1u9gywfyw\",\n    \"id\" : \"u733\",\n    \"internationalPhoneNumberVerified\" : \"mxnftciqgd6u0gtrtfnad0ffl4n9kofjjokcfjm931re9goe0599gi9adr1evp5on7vqckbch3rcj3a33muokgwnzo8k03xh2evywkghnxiiglrm6s3j9mzj2g7fv7\",\n    \"phoneCountryCodeAlt\" : 728487603\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2f7e716-aed7-4c1f-aaaa-77b811171239",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.427713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "74bd65b4-3a0f-4db0-ad3c-c3b4fe3cd648",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Delisa/O%27Keefe/1-635-201-8967",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "74bd65b4-3a0f-4db0-ad3c-c3b4fe3cd648",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.427077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    }
  }, {
    "id" : "a0868a29-75e0-4b6d-bd7a-5f1f87d2da7a",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Rae/Little/%28559%29+388-7427+x925",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a0868a29-75e0-4b6d-bd7a-5f1f87d2da7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.426991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    }
  }, {
    "id" : "3c22a330-b3dd-4e95-b3dc-17d7a1b5bfcf",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Phebe/Gerlach/%28767%29+041-4680+x666",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Pfeffer\",\n  \"originCountryIso2Alt\" : \"uzexohud3as3fsfjoaa4p9bl81f27cmak3t3vc94yuziep6pg6gb8e8hh9d5rl1v7tfzwjq93max43di0ayag2nj89mx\",\n  \"phoneCountryIso2Verified\" : \"lu82qv5xl9j4ye9y4vfzcovpe3ltwmacfudf4y9roise1nyb04r0b56fjb5uw3q\",\n  \"verified\" : true,\n  \"script\" : \"dc77durxlvoxghube4i9k41mnf3fsxh9z176p19g9ft8pmb4zklg6im8gi1zb1ehv9de0i427md5jnk0ukvqnkkyomryxb95oq9b22nt3jnk6z3ud\",\n  \"firstName\" : \"Williams\",\n  \"score\" : 45.16325750944847,\n  \"phoneNumber\" : \"108-205-4520 x6692\",\n  \"phoneCountryCode\" : 1545235865,\n  \"originCountryIso2\" : \"hgcdbrpe6muj9rn2nygymtsh1gc7zb9w71o8hi7hbyph110b3bbd0muow2ms8tavrwgx5ye5i0o79la5j9rpve62da2fvw1iohi8fz3ipmq0nfk2i6xli83bu3o726zg7cbq08dsizx89jzoywbxd9tr0hxxzg\",\n  \"phoneCountryIso2\" : \"furcxs9b8e96p7vfu8f6mxcgpb9ardh06nr11nlk8hsa9u1ekkeeckvjfw49\",\n  \"phoneCountryIso2Alt\" : \"rmwnxrmv08tbqrr1f9ms6vg\",\n  \"countryIso2\" : \"721ubj2joz10m03g8xes3on65q481rbnvwjohrd2pa02whxblmhka6k93r830khl5ij0jla6yedu2h78utz1ntyebf4j9g7uqj1ybiqaaf1mr83647euwt9mh6lw0snf2dhay10iy1shx3j2qm8b24jlsjveam8no73ppq4wu7i071v8572g29e2gslt16vf5\",\n  \"id\" : \"ajpq\",\n  \"internationalPhoneNumberVerified\" : \"xs0adal4ev3g8q3j3gijndittq3yywq4a68kbd6ycc9\",\n  \"phoneCountryCodeAlt\" : 2026691130\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c22a330-b3dd-4e95-b3dc-17d7a1b5bfcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.426892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "07e55d49-9759-4673-809c-8721e45d56ed",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "07e55d49-9759-4673-809c-8721e45d56ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.426367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "dd3b7a73-9bbd-4e2c-a7ab-d1ff160b9348",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dd3b7a73-9bbd-4e2c-a7ab-d1ff160b9348",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.426351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "5714ae2c-5a8c-4131-b466-c9664bbbc1c8",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5714ae2c-5a8c-4131-b466-c9664bbbc1c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.426335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "57f61bf0-70b9-44e6-89a6-83eec8511290",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 99.02775818509458,\n    \"firstLastName\" : {\n      \"firstName\" : \"Clark\",\n      \"lastName\" : \"Schowalter\",\n      \"id\" : \"46mg\",\n      \"script\" : \"oeo4s\"\n    },\n    \"name\" : \"Rolland Dooley III\",\n    \"id\" : \"9b68\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"mlbn4sk7lhiz8ccqzo8xyyxxayyl2u\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 22.177034892921753,\n    \"firstLastName\" : {\n      \"firstName\" : \"Truman\",\n      \"lastName\" : \"Raynor\",\n      \"id\" : \"ju99\",\n      \"script\" : \"tsckvi0hlnf1kwchn3cgt1\"\n    },\n    \"name\" : \"Ronna Johnson\",\n    \"id\" : \"5994\",\n    \"nameParserTypeAlt\" : \"FN2LN2\",\n    \"script\" : \"f74vn544qiyo6b46dnka7\",\n    \"nameParserType\" : \"FNxLN2\"\n  }, {\n    \"score\" : 61.47174538295861,\n    \"firstLastName\" : {\n      \"firstName\" : \"Cecil\",\n      \"lastName\" : \"Romaguera\",\n      \"id\" : \"bo1x\",\n      \"script\" : \"ck85wr692qg6hb1qi4tat31lkjc5df1rbicr0tbaymx9n2e7otq2\"\n    },\n    \"name\" : \"Roma Nienow\",\n    \"id\" : \"650k\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"xgn9xcairgrwlw8edjaqvnbwwxehz2be0dwtro\",\n    \"nameParserType\" : \"LNxFN2\"\n  }, {\n    \"score\" : 84.23209624200032,\n    \"firstLastName\" : {\n      \"firstName\" : \"Justa\",\n      \"lastName\" : \"Halvorson\",\n      \"id\" : \"3631\",\n      \"script\" : \"zbf8b3902mpjj6rsdlpt29izxjhkgzvg2i7hykr570xrpryd1yw42p6xcmv5yhcthys470g5a5wx44vagqmrcjc\"\n    },\n    \"name\" : \"Gonzalo Hermiston\",\n    \"id\" : \"f032\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"kh5how8g4ltxj6iieb0uzgimvm7kihsiu1738lw9yl1vqwvzgw0dxujycjwjhmtukpyvslrli5rp2n58wby40ipo47tcjhhtrwaazelt32keeostb48gs1xbge63qv7qfzzchf3orf6ra1mflyt\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 44.52109346095349,\n    \"firstLastName\" : {\n      \"firstName\" : \"Candie\",\n      \"lastName\" : \"Sauer\",\n      \"id\" : \"8dt4\",\n      \"script\" : \"xd7y9dfczzppkrwjde6y1h20oa71lmq1emra37501i88qihw3l1daq28x47v7sjry0ajrw8ovvb1y80oiwh6x\"\n    },\n    \"name\" : \"Rafael Moen\",\n    \"id\" : \"4075\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"6pre12wp73v5n36agu7hy4525hzf5fdkrng7h6qe3bc12qieu3h7zsbashzo1evs3o43met9ecpw71j20p7tgdnuovoa4709t065bytzdgwq2xilb8i8rkvzurzh73i7psexptt0ml3nuqfs5gxb\",\n    \"nameParserType\" : \"FN1LN2\"\n  }, {\n    \"score\" : 18.61106397420995,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lyman\",\n      \"lastName\" : \"Kub\",\n      \"id\" : \"ep3z\",\n      \"script\" : \"dj5mm3agi2qs9e4s5ywh8btwckl7ho4gbqblhx43pei6zg65q6pv0f697vcqwety9s3v8w87m1hz6vzsi6d1kr6964k3cxfcc8oksd6twhex31jmw4kxelbtsm82wr6vqjrklu6cj0ii2d670yrmzjbsqvkvv\"\n    },\n    \"name\" : \"Blair Rowe\",\n    \"id\" : \"5kg7\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"3cm0noatah94xy9ff984kppa8efcawnqbzmsqhia15u0iw06hni651x2bvi2xuo2h1f56ofyo8so9tq5fqy36to3ijdkiqst0loahtxd1kgd882k8qhrvbieps3i0tdmc9mtxbldone4ep1dg6r689ofueasf9qm6k1\",\n    \"nameParserType\" : \"LN2FN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57f61bf0-70b9-44e6-89a6-83eec8511290",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.426302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c157fb0b-1815-4b18-913d-3418bd966a28",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c157fb0b-1815-4b18-913d-3418bd966a28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.42447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "8b166df2-a7ee-4a79-aaba-f35421a6168d",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8b166df2-a7ee-4a79-aaba-f35421a6168d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.424454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "3a1d59c8-7e6d-43cd-8b71-4a9b819d2ec5",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3a1d59c8-7e6d-43cd-8b71-4a9b819d2ec5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.424438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "132c2ecf-24cb-4705-8111-2afe3573fb16",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 65.236634642377,\n    \"firstLastName\" : {\n      \"firstName\" : \"Marion\",\n      \"lastName\" : \"Krajcik\",\n      \"id\" : \"9xa3\",\n      \"script\" : \"lm3smv38ow2cj0ewm4tuqjbx4npq8xlzz739k7j2f5c0u09qapvo6c8fn0vg9l899\"\n    },\n    \"name\" : \"Stephine Doyle\",\n    \"id\" : \"e929\",\n    \"nameParserTypeAlt\" : \"LNxFNx\",\n    \"script\" : \"tciy1np7nyjg2sugqg6wselbnccpnmg322ri97um1pub33utf1spkdy\",\n    \"nameParserType\" : \"FNxLN1\"\n  }, {\n    \"score\" : 64.02898675800535,\n    \"firstLastName\" : {\n      \"firstName\" : \"Cheree\",\n      \"lastName\" : \"Koepp\",\n      \"id\" : \"g7bh\",\n      \"script\" : \"phb3v1tbd5udhcap5kj6nhz7ntpkldncyiwxo819yo7gng0nmuvzz25yk8pxuuw3oybjio4rxkbvf7hr11ei5ysd8l5v6jyp2o0zx647cndy5g9lvg5xpl7nsk74mgq0gx2mdoqs1q2ds7c63szl1cpl404uuqug7thg1syvks60loz\"\n    },\n    \"name\" : \"Stefania Hickle\",\n    \"id\" : \"yi39\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"rbnokl0xbewpqwgnz1s2qjbb5mb48asvnni5762i8hm7yi5okw18m0xe3872hi351cmxcf15lq66al581nekqevmia8moha3qy4tgwea4qtdl5929yt13yoljgp\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 79.78232556924678,\n    \"firstLastName\" : {\n      \"firstName\" : \"Dallas\",\n      \"lastName\" : \"Jacobi\",\n      \"id\" : \"jyd5\",\n      \"script\" : \"1azdir3kkuls8ustqv4jpjs17cyimjritteh592vrx7snufe7wyyif0ggxr0ygjagef54g3wy8l1ex9kp6vs3unhvft298tda96iifv96apxldrhs4pxf743o29s6c9vbfcjzklhpsllx6h3c6z8fgam7f2paxe6nr\"\n    },\n    \"name\" : \"Irvin Bins\",\n    \"id\" : \"ott4\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"eyyddzu5kb0d59z16d63hs3m2ehn7da8cmidgtxmdbnicouahfw3jxw63psy4nh8mo323ysesyg6cy2u4uy2zu2ehmk4ouvkm5qw6iy35wbt5wrk2lnw913aa3wby7497r\",\n    \"nameParserType\" : \"FN2LNx\"\n  }, {\n    \"score\" : 89.74904716994662,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lloyd\",\n      \"lastName\" : \"Barrows\",\n      \"id\" : \"z809\",\n      \"script\" : \"dt16hqo3dyqlt7in478z5kqcylw0fatqz9zbehliaopet4ww5ad3bfad6\"\n    },\n    \"name\" : \"Ms. Wilber Smith\",\n    \"id\" : \"q1ii\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"fa9dtvjmcfsi9db9eb12vxz8xaaaf1x3zertsckl18uknspk9h7pcbyzukku8veuscid1cqpebaz77ly3f5evux2427hidv143ncl0zcm5cmgn90xdhx6k4mqkuah1qi6nwjso9tl\",\n    \"nameParserType\" : \"LN1FN1\"\n  }, {\n    \"score\" : 60.41001336496298,\n    \"firstLastName\" : {\n      \"firstName\" : \"Shemeka\",\n      \"lastName\" : \"Hintz\",\n      \"id\" : \"87q1\",\n      \"script\" : \"kbo634nzxoy8gi5702pl0mu7fcszb2ecdgu53s448gh8adoheumg8fv85odnre4bc8boz8nq98p14gflmzkxxiksmehmgdr9fbbbv7nlvpa6e0vju4fz06lirlykg2nboc3a2ldcstq5hbny4bcwg8dj5vqc3tfwhllao6ps\"\n    },\n    \"name\" : \"Palmer Kihn\",\n    \"id\" : \"k0ps\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"ftt8rjew3p402v\",\n    \"nameParserType\" : \"LN2FN1\"\n  }, {\n    \"score\" : 76.413149525852,\n    \"firstLastName\" : {\n      \"firstName\" : \"Trinidad\",\n      \"lastName\" : \"Beier\",\n      \"id\" : \"yi51\",\n      \"script\" : \"z5j3ika8mqwxohrn7ekmzpku91ggvsd5kl1z3jtefpunme2x8bw4y9jvc3kdvr4peahszvmj8ste5gob9rgccumtkq5a8x15bq\"\n    },\n    \"name\" : \"Brain Wilderman\",\n    \"id\" : \"137r\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"kpkpls1y5syihuaakbbdgleoe6up46agd61gm4ni8jmbrx814ok1nylkwfa4p51kicr9wsohkwkuj1h53odzlpt9zpcj67hg8703v7fxykmvu5exlbnpvmpvtzfv3znjv3yq8ulc6prryuyrmp8bskiszpb04qj\",\n    \"nameParserType\" : \"LN1FNx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "132c2ecf-24cb-4705-8111-2afe3573fb16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.424403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "103dad0b-27c3-4858-b59e-46d20a75fba6",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/xtj7rikcvnjhafpgth4krv1x63vgylt7wiwc9rtetvg6dqzcjaw6qn0y5v5vrxk3drxc10c8cs4sfjz0tgiu0235v6x59sb1elufbi0quu2/zj2h76otmmg04bpf4mef9q4ilvmh4ht79j5bsge2cshgw319tnjxewuth5u2qnkbfpfiqv6oyzyixnbh7vofbag8yo0eotb8mwgeihbk0y7q92wveqq6aoedybhmr1ehdh4fycysdbo8rvzg2h4th6j2eq3zdqm2iou",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "103dad0b-27c3-4858-b59e-46d20a75fba6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.422595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    }
  }, {
    "id" : "24e8ccfe-e51f-4268-874e-ac84fa27ff89",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/e29ufqy3xpydfmcfvvhcgfxlxvs1bdlrv0uycsfpsn4ite2lc2p2iz5n0vbhlw42q6xj5ki0re5d1peqi96rc4kpwzskckvxobgdwe25ypna38todgvat4jtms/kqgr5eyavp8l1x88t0hq7itz215qjo0x2toqpkpgsu3bez85lopr90tssaglvo97toom90by9r7kdj8abiu0tr",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "24e8ccfe-e51f-4268-874e-ac84fa27ff89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.422555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    }
  }, {
    "id" : "59fee62e-f53c-4622-94e6-07df0ce3a55d",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/q165zwt307szaw7r2jtjt7jm2f7kgdi9oq11b3vs4o0qw0jvvg/jt8oqki4fojsjr931lc0jhrn0ysrnzbp5wfsnt9vj2hz81jtlg7z4y6stxinresu18ko1cxn1yww4u75qekmg001bombvqtrry0181ul816jxaqb3ct6n9m8r3nq7nrkll0b4s",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 69.60176947355895,\n  \"firstLastName\" : {\n    \"firstName\" : \"Giovanni\",\n    \"lastName\" : \"Huels\",\n    \"id\" : \"c808\",\n    \"script\" : \"133gd9ns71ayq3w4zagt3uzqsock6lwzj5j562zp915p28ivum2o2u5cu3gafubz3oh68q4f0jn69l65la254au892e\"\n  },\n  \"name\" : \"Ms. Miles Bednar\",\n  \"id\" : \"3c8r\",\n  \"nameParserTypeAlt\" : \"FNxLN2\",\n  \"script\" : \"dhvcsql91jhq5w3ftmgktg8icepir1qagr1wf9b8cnw2wigh7qa7z0g567lwujxytqo\",\n  \"nameParserType\" : \"FNxLN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59fee62e-f53c-4622-94e6-07df0ce3a55d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.422504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "3c29b86e-0a40-4756-8605-8ce73dc0d2eb",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/9dp74nte48azab8z6rkzcdd2q653ogbrg41nbxwfg0rbrwpbjtvzxa5caoamzuf3zr9hrjr07263idwlu2ooa1d6xe7kg7q40flimjvvkcqnwe12dag9i4br4n7f5tmp2vq5",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3c29b86e-0a40-4756-8605-8ce73dc0d2eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.422111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    }
  }, {
    "id" : "07b61f93-24ef-4688-82de-f587e67aaf8a",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/s9ea27n5l1jxnlp7ma8p1a5jryvp241e7xjyebx1su23dc4skzm5py7h3s1rvg3ddrbq25pir6oi2aezb7xz42pjt2d809t5676n0oh0x13vcq79e7c8mbivhi7qhz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "07b61f93-24ef-4688-82de-f587e67aaf8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.422082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    }
  }, {
    "id" : "3650d671-a93a-4e73-8502-1c30488973c8",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/5mvo906gvx4k4xdxdy3q1y2n2zesb16rkajpi2z7hhx6kq3ihrgb6mkb8jt36k7tm4s7otjegv4f3d1i22zdjx344c0nag7prinoopfy3zlj1msefsiuvsk1ekocasmyic73e32q5go6wlwyaos83mn0y4wmq8zlt4s4ki1ozj9cnb",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 72.5094015904193,\n  \"firstLastName\" : {\n    \"firstName\" : \"Darla\",\n    \"lastName\" : \"McLaughlin\",\n    \"id\" : \"shxq\",\n    \"script\" : \"isz518571358bk7lhte5db4xnsy6yz1muqye17sdrtsrlvatf3rca4e12v1nr0ccflxj8d148mzb7lnigyhxh47blf5bnd4a9sv5nunz6vm8ygrh454fgwglr6z6pz148u0ikb8zq0dm47ua\"\n  },\n  \"name\" : \"Alexander Schiller\",\n  \"id\" : \"x47e\",\n  \"nameParserTypeAlt\" : \"FN1LN1\",\n  \"script\" : \"uz9d3waf2vrvjwc7buyy7tozl2iweaf20gu74q597qxmvspq5k1onr2to2t4rlqna71zfjoyptil6jzaoxk8rhzmib2z6axujwxj13ju0\",\n  \"nameParserType\" : \"FN1LNx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3650d671-a93a-4e73-8502-1c30488973c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.422038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "f5a290d7-f97e-44ae-8413-be5c846f60a8",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f5a290d7-f97e-44ae-8413-be5c846f60a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.42165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "17957e5f-f1fb-469e-80f8-e9bc2a1005bd",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "17957e5f-f1fb-469e-80f8-e9bc2a1005bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.421634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "3952c1e4-64e0-40f6-a218-15533c508e48",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3952c1e4-64e0-40f6-a218-15533c508e48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.421617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "0eb062aa-0bec-4c0d-86af-780d4bbf6757",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 70.33564628322543,\n    \"firstLastName\" : {\n      \"firstName\" : \"Chester\",\n      \"lastName\" : \"Hodkiewicz\",\n      \"id\" : \"o050\",\n      \"script\" : \"wwq5c8dtlk4nbdkbl02bbjc09jd00cgxn8hsgm0fqzftr5243429umrk3fjnu8d0e5nfsr53nt\"\n    },\n    \"name\" : \"Tilda O'Hara\",\n    \"id\" : \"8536\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"0qfhondrn6frp5ih1hefsbq5rn73t432r4q4q6mibe0gqu36wgt\",\n    \"nameParserType\" : \"LN1FN2\"\n  }, {\n    \"score\" : 40.90140420187408,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ray\",\n      \"lastName\" : \"Rogahn\",\n      \"id\" : \"7m8t\",\n      \"script\" : \"7p48cqob2m\"\n    },\n    \"name\" : \"Alia Schimmel\",\n    \"id\" : \"7p7m\",\n    \"nameParserTypeAlt\" : \"LNxFNx\",\n    \"script\" : \"3xxsxrir538eceio6vbvykpwux5hbdjd5o8ub5wu7q9gle6jfz02dv1qmq6tz2bnv7jm9retyhgyb2yujxsxhwei690m2uyse2wyhsfvrxh4s83uptmtv4g7tq51jqerhod4pezgqdbhaa91je3uqhbhwmyxu9\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 37.09275274671066,\n    \"firstLastName\" : {\n      \"firstName\" : \"Nickole\",\n      \"lastName\" : \"Mueller\",\n      \"id\" : \"9d36\",\n      \"script\" : \"85kd3o7pj4pjuyev25fg57av4rk5yvimecgpfh36tt50cdewbumv7smqvrl92fxfzji80wnde9vcl7z5hh8ex17v7zad5r9pjv1tr0evvl73ke9icvsxu1i0a2ar5898m05o39u884uh6h3907whqcfhal72aprxseqd5oxvs9qm2d6p1fc42nhfs8km\"\n    },\n    \"name\" : \"Stanley Labadie Sr.\",\n    \"id\" : \"vb72\",\n    \"nameParserTypeAlt\" : \"FN2LN1\",\n    \"script\" : \"gu5ceka5\",\n    \"nameParserType\" : \"FN1LNx\"\n  }, {\n    \"score\" : 39.82434787324989,\n    \"firstLastName\" : {\n      \"firstName\" : \"Danae\",\n      \"lastName\" : \"Auer\",\n      \"id\" : \"juai\",\n      \"script\" : \"igfwsclwxd5nn7k9a7qbebiamsk\"\n    },\n    \"name\" : \"Nathanial Crona\",\n    \"id\" : \"ild0\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"w1cay0i2j6bsxhsrv1t7wa5szl0arw3oy5l273o5cf3ta2cig0y8bell61i1ky6hfff50o6wt3fjduwaeim2xqm8t2z362wtjnlvzko4p3apmzoac64m1r8ozx4jrcfjs6g26b0b56eskfk0aph\",\n    \"nameParserType\" : \"FN2LNx\"\n  }, {\n    \"score\" : 10.779747695750231,\n    \"firstLastName\" : {\n      \"firstName\" : \"Alec\",\n      \"lastName\" : \"Hermiston\",\n      \"id\" : \"rvbx\",\n      \"script\" : \"qy0mpbzlcnghgrp5bu7fjsnvjqpo1cb3pdfpp3a9q27m5zkagxv7o0\"\n    },\n    \"name\" : \"Nigel Larson\",\n    \"id\" : \"3248\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"m5bi1bfq767lcw6pqg58y6j898srj06khawlwm40uqops7wyhe6m3bwv0i17gxvjqu8rtlyqikdyvv5nquy9gidl5rc96llgzff8z9b8l\",\n    \"nameParserType\" : \"LNxFNx\"\n  }, {\n    \"score\" : 45.57856596462825,\n    \"firstLastName\" : {\n      \"firstName\" : \"Inez\",\n      \"lastName\" : \"Bailey\",\n      \"id\" : \"bx3f\",\n      \"script\" : \"scg1hxkr51kwy0n6c48gpz1v1l8qwhn27pysfmw3qzokyzblgmxqazcqisotfjok5tizxr33z8u4xe31p0g26x44jksfezwihbq5k2ijz\"\n    },\n    \"name\" : \"Frederic Paucek\",\n    \"id\" : \"2f9f\",\n    \"nameParserTypeAlt\" : \"FNxLN1\",\n    \"script\" : \"4jhr9ghn91xlqtr24yf7mpo59l7osae008nf3hwq0flg3zphce45xil3lqohzg5e0s1zia19z5902mp4x4k\",\n    \"nameParserType\" : \"LNxFN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0eb062aa-0bec-4c0d-86af-780d4bbf6757",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.421578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "7e4ee57a-06f1-4551-819c-a76cc95b7701",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Deshawn+Okuneva+II",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7e4ee57a-06f1-4551-819c-a76cc95b7701",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.419804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    }
  }, {
    "id" : "0f2472b8-bb29-4b41-82b6-7a1ecaad30ab",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Necole+Paucek",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0f2472b8-bb29-4b41-82b6-7a1ecaad30ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.419743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    }
  }, {
    "id" : "7a5f5c6f-2f80-463e-8bd5-1b63fed06e1f",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Cary+Larkin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 27.620281369612385,\n  \"firstLastName\" : {\n    \"firstName\" : \"Bennett\",\n    \"lastName\" : \"Hane\",\n    \"id\" : \"43sr\",\n    \"script\" : \"pjlvtpihyx17dy7wazab15gnautipzchjm76exujc8qj316ztzjbf86yglrksk60fkp35uk8g3h1830bzov2wbtfzp8bv2xht9c9dw8mqip9oq9716uk9mi2y01ukholsdr44okmz5c8rhnwftglzojeek6he8jkhskk1xavrnsc91gtk9gl0h28bee89v\"\n  },\n  \"name\" : \"Dino Leffler\",\n  \"id\" : \"0p62\",\n  \"nameParserTypeAlt\" : \"LN2FNx\",\n  \"script\" : \"di35m7tqtbbayrg1xbfs7t8704rdpz80g24ym2zt0nvbabiinapcb8jrsx\",\n  \"nameParserType\" : \"FN2LN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a5f5c6f-2f80-463e-8bd5-1b63fed06e1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.419648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5d245cbb-303a-408c-8224-50b9e202a3d1",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5d245cbb-303a-408c-8224-50b9e202a3d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.41924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "953b8577-4c0c-44a9-a7d0-14b041bc9e5e",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "953b8577-4c0c-44a9-a7d0-14b041bc9e5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.419223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "99fd6762-4aea-4dc2-95db-b5abce43fa30",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "99fd6762-4aea-4dc2-95db-b5abce43fa30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.419205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "f47e04a7-b317-481b-9b94-164fed1d70bf",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 7.661986596663938,\n    \"firstLastName\" : {\n      \"firstName\" : \"Chana\",\n      \"lastName\" : \"Schinner\",\n      \"id\" : \"u7ln\",\n      \"script\" : \"g489ml9swq3psxkc686l7mnqz4wxx7oiqjmziiqyvvexyp0q8nhdu52yliavh5cjdvmjdbgmkyk416ffotg91qc66j6bf2hlkrxky5vf2hupjszars4w\"\n    },\n    \"name\" : \"Edyth Bode\",\n    \"id\" : \"938x\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"iq4xsrmvomyba36k7q7zlmw\",\n    \"nameParserType\" : \"LN1FNx\"\n  }, {\n    \"score\" : 71.44311797510893,\n    \"firstLastName\" : {\n      \"firstName\" : \"Debbi\",\n      \"lastName\" : \"Larkin\",\n      \"id\" : \"b9u1\",\n      \"script\" : \"iet6fkt8jhaiqutrqrev5hid1n4agiplxhhejukll35ss5y26fl7scklfyht3\"\n    },\n    \"name\" : \"Mr. Charlie Gaylord\",\n    \"id\" : \"3bjh\",\n    \"nameParserTypeAlt\" : \"LN1FN1\",\n    \"script\" : \"n1r7gzt1\",\n    \"nameParserType\" : \"LNxFN1\"\n  }, {\n    \"score\" : 81.789509353647,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lesha\",\n      \"lastName\" : \"O'Conner\",\n      \"id\" : \"st06\",\n      \"script\" : \"kc756smk20ja5334doodnxw0ohchsnwt62w1v19urmh728mq6naw46oc0v7oy5k1m3vdypb2wefwyxoce8gdeypxxscupdims4hs7v\"\n    },\n    \"name\" : \"Carrol Hudson\",\n    \"id\" : \"757e\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"9xp1n0kvecjlhy8055vn86665nasw30ua1yhvdwo2ji6se7m3p085q45kppo6cc7v7lx7putyzhdevla177vsgmmv0uue6pc68rxqhh39b1sdx909lulwn0uf5xotb\",\n    \"nameParserType\" : \"FN2LN1\"\n  }, {\n    \"score\" : 65.364816617431,\n    \"firstLastName\" : {\n      \"firstName\" : \"Penelope\",\n      \"lastName\" : \"Schinner\",\n      \"id\" : \"o0xc\",\n      \"script\" : \"nige7eb9clvt9pkt22q1k9l6x6t0jedo77yzaelh4n3z1fh319s6s7d47bj3qbfmf0htswx6hf04pcmk360d46r8kscl7tbz3rouco1of6uh8cyme6nyh4u41l479fhfbi48jdo632q0muim8q9yv1xmoud0x2lo4i4f0ct1\"\n    },\n    \"name\" : \"Miss Shawnda Marks\",\n    \"id\" : \"l643\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"tbmzxaurox8g0q87hinttwgo9er3redz3efiaw4cmxewlw1k0q\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 34.62579007476595,\n    \"firstLastName\" : {\n      \"firstName\" : \"Bryce\",\n      \"lastName\" : \"Zboncak\",\n      \"id\" : \"ydt5\",\n      \"script\" : \"qbcb4npuzivefsqt4eut5qo3w2ntdy0j2cvi6p9alm461myzrnaexl7flav7uhqm6qtahu50xo\"\n    },\n    \"name\" : \"Marty Metz\",\n    \"id\" : \"2568\",\n    \"nameParserTypeAlt\" : \"FNxLN2\",\n    \"script\" : \"2v4kkhkhqxyetyiunvmxgbnqw2649bay9eknh7vq2qqnnqvas15xi9iwch76q0y\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 89.25813499048881,\n    \"firstLastName\" : {\n      \"firstName\" : \"Rogelio\",\n      \"lastName\" : \"Bailey\",\n      \"id\" : \"pzm7\",\n      \"script\" : \"jwmxv2nsc1knob9egp53un7hfci2k51v8mgmh5ljxk8c8fym9igcx5kbbygxrhlj6f4a40fp1eu5okgfmdva4i4i5ms5qbkpvju3fne25tl5bh1rjo2t9czl38m6xkbgenbjjdmtj0mc33zqlcx34bdyjo1gg8ta\"\n    },\n    \"name\" : \"Ernesto Prosacco Sr.\",\n    \"id\" : \"6d9m\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"x3uvi34kuqtcsnxa0apogjuw63ir8m253vbmrcnx2f82obd5ujtxaawbivgefn11q9ychm4bfsfbtlfji0cs8ctd9pv3p4s1s33c8ub6dgrxhqdncz7otdfvcwbqiadyff1w3yd\",\n    \"nameParserType\" : \"LN2FN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f47e04a7-b317-481b-9b94-164fed1d70bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.419171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "7071f29f-a4ee-4880-b8ac-36a1189217f3",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Barrie+Oberbrunner+DVM",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7071f29f-a4ee-4880-b8ac-36a1189217f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.417355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    }
  }, {
    "id" : "3450c1f7-7d5f-4b3d-aa48-0643a3c3d544",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Adelle+Morar",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3450c1f7-7d5f-4b3d-aa48-0643a3c3d544",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.417295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    }
  }, {
    "id" : "a6187405-a274-4430-a510-9e5704e039b6",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Jonathon+Gislason",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 34.36612845737855,\n  \"firstLastName\" : {\n    \"firstName\" : \"Darline\",\n    \"lastName\" : \"Bartoletti\",\n    \"id\" : \"nzmb\",\n    \"script\" : \"3w8lgu3nwfeexchb46cwfqsefn5y5sh\"\n  },\n  \"name\" : \"Monique Champlin MD\",\n  \"id\" : \"6u4g\",\n  \"nameParserTypeAlt\" : \"FN2LN1\",\n  \"script\" : \"p0x3qejnnziaqyfrbhg9zuugic7yzyji2b5cyvxe6q13qjkmvvpebgsp40qwkjg62q2xwmgmw9pj2we84yj8hhk6nnd00k8ft7zhifvxm8apbzy9hbzb4inzh0ybuytlm0f9\",\n  \"nameParserType\" : \"FN2LN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6187405-a274-4430-a510-9e5704e039b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.417218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a47e15a7-266e-4cf4-8c4f-bb027fe750d3",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a47e15a7-266e-4cf4-8c4f-bb027fe750d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.416786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "831e4cf2-09b8-4f69-940a-6c00430d92f1",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "831e4cf2-09b8-4f69-940a-6c00430d92f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.416771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "9522d1d4-69bf-442e-85ae-e487d0114c84",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9522d1d4-69bf-442e-85ae-e487d0114c84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.416755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "43d58bb9-c0cf-401d-82a3-e6a6a0221dd5",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"lastName\" : \"Gusikowski\",\n    \"probabilityCalibrated\" : -0.3895367883470926,\n    \"script\" : \"a1d5tur75mzcwgg4e92t9eh8peuwyt0iy85aga8lna7c1jhtb9eheyseg6emhfoph21hnzxgpzrsjhcimmq09eomy8ncbei3lzbd3mlngcv2auf13wg7ayxtoevfhe7wd0tjjfduxibqjd626ontah9lwll2yaqwp0jzwi516042uov3kqg7tlucrz\",\n    \"regionOrigin\" : \"sg9s0iwp3qygislaffmv90ey52uim77d3dsiw70ef38r4slgroiiazddvt0kkqsuitu8v6if2cyk64z56br48sn60x3gs4t2m3bielipu00do09iwal7km9i8npca0j2r4z0c4g41t2g0x4ix6wh1i38xvpjjfqqx4ji157rxlk0\",\n    \"topRegionOrigin\" : \"26o0c57cq6azmqe8mg1tz601\",\n    \"firstName\" : \"Chong\",\n    \"score\" : 17.328947885561686,\n    \"subRegionOrigin\" : \"biclhdkxcrrxig1og9i4iyhit\",\n    \"probabilityAltCalibrated\" : 0.7895752413345516,\n    \"countriesOriginTop\" : [ \"8ump0jc2g1hd7lj6tc3o54f46v9olxyfmavb5dbdwjc5prxaoujijwnd8nyj5suvknuphzeckh1vzfenltmzfukfkw5x4qbl1sgd1brao2envh88b43mc8yahukbtlhalfv9c3zkwqa4m9tdi7z0ykdyld25cjuljwutf95cwmh3jiuva3wom3wkrj0mu9ce\", \"no96tgiql0y7e96vjkbpvizkvq6gegbuvgokc0d3j07rdoahj7tjlmugjefy09rapl3cqco8sdxx7yac8ctkzniqz27oj7ltxzp46nj1188cp9kn1zad\", \"pv8\" ],\n    \"countryOrigin\" : \"vc1mbin32m6oqk9vxwjgeswla5i2yw9ewo7do4cyimt9l3kpeokw7q8rnmr50b9plopsmn2lt493z02149ra4rvsvhibrie3pg2mqrzc1y1tbu0q34ckcaeuosw7e5pvws3vc3p3d2mgvq4j3qy58sx28h1d2vkq70f\",\n    \"id\" : \"ppb2\",\n    \"countryOriginAlt\" : \"8l9cp11exflcw236a4ycaej6j6ykerwdrozwui90n7uzms12gfk73ufsh5r4sev86csccdf7du0pdpzlw56k2bhpdoi2dghgkp0vtkqo8uhc\"\n  }, {\n    \"lastName\" : \"Hane\",\n    \"probabilityCalibrated\" : -0.363316195112362,\n    \"script\" : \"5q0g6u0lua0ap6o9edrhrbfy2lgpp1tyq5j6xvm7o772morbrdrckwxgy76s2jrdsn49tt968q4h3twwo1277ahmz2gc1gn9cemcsrosahnyldmwcucp78bcjt67rqz5l8u22zybyz5pw15yfimrlbn1w2hrfl6e34rw51tgdoma3dsn5qff0mhft88vbinwy5x\",\n    \"regionOrigin\" : \"b43725ir6kq4or4w6vxk47xss89tjlyrqta6v64lh1vifcl\",\n    \"topRegionOrigin\" : \"jrxcbri4oi9ntt48ye4y0lh5ip7k1x8dlybaftosjz8n77kizf098i51w3gv0hnpqb32mz81ua8imqyxhxvozywb1ycr3hq8uee01h0qyllk9jvdki5yjf7odhgr5rl797fksnlsy58k6gtz135gq34bvhzdt8cpslw6mi0ii5pg3b963rkbqxxh\",\n    \"firstName\" : \"Allena\",\n    \"score\" : 94.20229688625889,\n    \"subRegionOrigin\" : \"v5rvtfpe0tusf48y2k85poyjr0sytrvt1h3ait1xqpdzv7o0tisupmk4q1sjg4ls6q5ee0tu8n4i3zxow4msxvv5vuuk1xpuo6n2boo70sfsilqmezs6dzkow5f8zqr54crbjtz6jp6mop7tx9c86h\",\n    \"probabilityAltCalibrated\" : 0.9669768251690838,\n    \"countriesOriginTop\" : [ \"yosjqwcp3hxu7zw2u41pu5232lhgc2v7s7mjzfj3xxlqfrhnss3cz4tzimzzrq8n0uhgc7jq19vl1j2bjyftmat7ce5lxkika5rre43256p10haqdypik65pyd\", \"3qb4axckihq5odtz1lsjhw72l\", \"q8xqgqfm6ifckvyg\", \"73je1w4g82i0sqnkvsjuku5r7difqnqo8gxuux1nf2uvqgbgbs15fz6150q31jex1c3pfc70xrzysocr4tcar4hflsqu3gee3rhg70tvws6uryr1mfdgkp8seu8on\", \"wgmectgtwraobrrrlp893shcpdoufihsnv767jbv6m3r04dg7y3o29dfxaqc7qaup7oln14odoimkkngv8cu1vh2km2woomhjv9dx5cjphdj\" ],\n    \"countryOrigin\" : \"cd69g16gzxjzs42hbiiyci3cxqcon7190geo2dlbglnhn9ytryybwvaswbudilc1qp444g9pn5hyjq\",\n    \"id\" : \"2ag6\",\n    \"countryOriginAlt\" : \"4p3b5sayry6t8z16bs3ql8vkezn8t87l8vr27czoyjp5qebadhyq0j3i300habytvmi5mwbiulllnyway9nvyi6hzo3wwh6j189yo9oo20l5b0ssnfp6r2aacfomv7b9qz47rqrxv8tx5ramd\"\n  }, {\n    \"lastName\" : \"Monahan\",\n    \"probabilityCalibrated\" : -0.38648477194383335,\n    \"script\" : \"690lo9wb96nmn8b841qlaifgynhxou4abfxrxywkyf1duywypi26wnxnx0wsgpl1hec8xp5h2th1ve2w9nl1sbu3mt7lzzag19xpa07yslth9kawylt5u6aurhoq1m2uyw3in0xwlqr3\",\n    \"regionOrigin\" : \"1dkcu8btpks41ii7526g1podjsr5w3t7l7g5b5vabr1lzm1izwxkjtxx3gpth27pu94\",\n    \"topRegionOrigin\" : \"8aj2qvph1pehu34frkiv9ochwi480enftgqvpxmpjnfo0x27l4v9zluunbj3udn1mjqnkhzmw9a33hutwq60rx\",\n    \"firstName\" : \"Dawn\",\n    \"score\" : 34.15103040114671,\n    \"subRegionOrigin\" : \"bik1ua6mpdlhupyvza4i5kzuvs4opwwr5xk1obsebcko2hyekerz9la0kvrisby3t8uzddx6582ty0av1opf\",\n    \"probabilityAltCalibrated\" : -0.7511282026857506,\n    \"countriesOriginTop\" : [ \"wobugo3fp7k9xb1vder5jvq8vl9jhp6357s0zzurntlsel9t7vwi8oh9c6li21kjtmotgyymxwe05xz8upvsmvzng1g3164ptpnt7io1vxrjkntgjhgwvpu8tcleomhvnz51w74whywz96ekgwqcw1oy9\", \"3vbvc36zt3b5jvkbklzqvtli0mn3xnttg32zrt90mp5eb0sc7r27u7uelrf8lfksfi6nfka46rnt4o310cm0fwljjq0lsn58mnxs2s\", \"tqfdfpf4j904xydg2qdgr4b63s7m2yef39f3kdkyxpogmfb5xd47k6zrdu79ggn2e21v2ahken87huw4d1rqdf1knuox7dn1jdf2fslsqhgp9zfhocopzqsjemrer614qmnnzio0hejv39if30p5\", \"k1owlzq7i3mbzhh7jb16vp8d28chyrco11efee1i1ebvwc59wco9nfh4q1wlfpg2qhfu6k16vtzsfrb5e3nm7r4ig8k4d2gd2c8qjv9ymtymxfi3dshqnc2bl92j0ajnyq06n5pkutbmqranqdzgm\", \"xm2em7sbmpdpphqqszvopd1yeppxu170jacsts8c1189dft8t5f4ie1ir718yfn75uf79btz8o9vn7c301rsq7eetax0a2iapr897bx1zc9hbx8tb4tgmcmi6t10rgkcg9p0ipou1y7ymt5byia0yrzn0r5ml\" ],\n    \"countryOrigin\" : \"2c0k1notd61u4t3z3mhkaoi8ptzwnw5l6cwkxrqyet6kyf8l2enz0hu01o01jtyymxbxnrpi\",\n    \"id\" : \"4azv\",\n    \"countryOriginAlt\" : \"eej91tg3t9i0yvjkrmaa8wa3f9xztbiq674kn5mkw4prb599hx81gqg9xesqvgfxi5tsy2ewkspbrlaffmkdc3f16ihfyct34elyfcs93hhfyuhu7hlzbq5bx1xfuzbc6ggw2e8srvhff98asysqec8inf3k6\"\n  }, {\n    \"lastName\" : \"Kessler\",\n    \"probabilityCalibrated\" : -0.5705157758884503,\n    \"script\" : \"9h96m8l7fo7wkvckkpugkhss787ybkefqmqy7sg8rkxat2xuqqz9xvsi3dzcileumbwklpvjcncyrve0o5rp6tjkparkqb5vcxoxpwmxcjuu93r1wsfqumnzhz0oyibymp8fa40usxy4k5misdm31a9nm3s668bqu06flhy5xdw2ftlz1ov4khoz\",\n    \"regionOrigin\" : \"hhf07jms2gdww52k2mjqsiw0yfglascqv0un19pyodms\",\n    \"topRegionOrigin\" : \"tdqroe5mwzincedgxh1m1phmhspx79suxfi5gx3vdhfp23ezu1z0qlsnvj84l9hsja7na7v5h9hclcgtq776um5f9leis0umqtcv9wzwi\",\n    \"firstName\" : \"Lisandra\",\n    \"score\" : 85.51879508584364,\n    \"subRegionOrigin\" : \"2c2cqtjtavqcowis4ld7b1jorer4vq9cq5bl0ift4ohnm7jho4pcd\",\n    \"probabilityAltCalibrated\" : 0.8097391292576794,\n    \"countriesOriginTop\" : [ \"je12bjbv90bu7a77uhf3sqnjxt1n3u1136ul8cfe7niqkkkqxg2p5uke97drzc2lzqoibtpai6j1dqtwuo7q74xec7v7p3wey7ph0gept3on18ithklcg6mltcks70\" ],\n    \"countryOrigin\" : \"lmw4a6q0hvsohd39z93wdm6\",\n    \"id\" : \"5437\",\n    \"countryOriginAlt\" : \"2ndgvp9qbxpvp3jlg6fkderkw\"\n  }, {\n    \"lastName\" : \"Parker\",\n    \"probabilityCalibrated\" : 0.6688830980029385,\n    \"script\" : \"0x2a5j6rf40sk0j25he53ys9rapn4hae7qrb7dei90cybl79czryza985sugyrjqkhe9n0p14eenlcm8vb4qzcvw3jw1sjahdliofif41mwm8btc43pqpflrg6rvuuizrdxppb3fwshzaivdoijh34cz1kfdt\",\n    \"regionOrigin\" : \"ps1uxodlwxee7vv6bn4m4utkwvivroogqfj9touc231pahipzzcbp5o5e658jp3xkhsgk7cv1wk06n6l90cxje\",\n    \"topRegionOrigin\" : \"g7dwuh0qf590zu1u1mprzi90s7aq5xnw1j7txzimx7hnm5kxyzjozsyq6o6wdv8fna5rbx6mx9jdsmxp\",\n    \"firstName\" : \"Louie\",\n    \"score\" : 21.601860104847702,\n    \"subRegionOrigin\" : \"6h89i6tl8mv4row1rz6ducn0lky2\",\n    \"probabilityAltCalibrated\" : 0.6731859006248866,\n    \"countriesOriginTop\" : [ \"hg4orcbms7ulos051bd6c18a108henzqh27mfhk6qv6542hv658nbbu0d7cuepfw157ewivvt6s0ttvflra35739zzopleonjmsrz7e8swvaidcx5pe302y\", \"0ezhd0fg0aksr13joar27sjrdaw2src408oiov6ie7at2le6t2icnjq92pxnij9obug2q8pqwxt5w6z5ohv1waz4v3ih7af9zdaj75ac957rj5f2y58ryrsvb56chi1cb5b9rvk8mu5nqysue8mcpvotryz7x9bf0ojdymfjtouyw40mt10sctkse2m3vsp\", \"ewc43llnnbunzapva2oaum9iogy2xxzo88p5xngrz2o6ac68uye\", \"f7ug7p0uevra2v58qb39fetkmdgsfwakered5h1rqyh3f9osuox6m0z7kujnfodrm2q1a\", \"x4ca3wcs2tnwrif6aos08li36ajdwi1dh8un316hnnane16qndmtcqacl4vfobm8jb09l0ylv40lcazarfqyxrqwobj6xhti3hsppw2\", \"ow4hn1tlwrubt1bxdb4g80hcv1vgmeuc0zpj7vh0p9bd7fe5ksxwtf1g1qioohlqvrnpjwo2l5ajixlrzlgdu\", \"2aw5iz2ezg64g3izn805j5ue4hd04dfr9zohcqk9h88a93yk9h6q8j7jt1cuy1lepbq8h4a11ekz\" ],\n    \"countryOrigin\" : \"wanl0q26frphtqrdwlzuuatgij6kym7on4vqo9eye5tldiwitv2kw0ne3z6g8vq17fsedrmjm0mp8iux0oov1aszkyhdf2pjjvgt4wsppxcl0hnirvwj36rvx1vsn3ghlihf532426vsw59xhwb7zn1yvnpp722302a3f2l8s6kfqcgjykccbkmgw56jwbst8fs\",\n    \"id\" : \"85aa\",\n    \"countryOriginAlt\" : \"pdjugvst3i7oha7j93pr4io8r3ggup4g8tlmvsrtf0cs7fv2fjfaiuxo0ag0ty0vmb56k17ejyfi0x9iv1u8w1kr58w8ligj0prqomyjosdhb0jds0s1qh583kpsyoqedm2s57uaxreaejbxjs5kzgoh4ubj7p856zbl08q6bum44n0gum7l5kddjzhu\"\n  }, {\n    \"lastName\" : \"Little\",\n    \"probabilityCalibrated\" : -0.4932966866689785,\n    \"script\" : \"hpir2f\",\n    \"regionOrigin\" : \"hc2jflfpfeu7takng3v7rhperqecjq4lszgn5rtnukj7tymvqou2aad5rrbqbu2b23x\",\n    \"topRegionOrigin\" : \"rfq57o8kpb1nw0jwjftzs6xa4v7ug7awjp2wcsck7w91xsp6bdx153hc7jnx5zhrd569mrgth0j276iylk27zufg1nolhfw1n7b5vu2hfa6pd1pf8qr5c7h3xofi0qjm86wmz6hnu3v81sttw7q6i2qg3emz\",\n    \"firstName\" : \"Brandee\",\n    \"score\" : 73.37236421478039,\n    \"subRegionOrigin\" : \"kmv7z4vhe37a3zcdc9zam55y5pdas1tyvyc3j29e1qr1r451swhyr4gi0ks07fr9qtc2hrg2dlvwu0o4i3n28cjr2bttbmcj0d5x67nmxvdr53h562dv6ovumsuft\",\n    \"probabilityAltCalibrated\" : -0.23999405195317247,\n    \"countriesOriginTop\" : [ \"58j9jk8v1c83ciiko95l10a9vjzkjfu67kmwbxu2bypwdt1\", \"0a6u0qevhy5lsvkl7wf72lvflucn6utdtuabyxcnmrn6euxxo93awwe5p9gy6hu00me1g9dwxp\", \"ww31q6s7rivl3txblt9lvaa79ywzii80jbbcrqk340x0bqrcq9m24902e4gnq6qj4sulkeyytrbpbde2xtfupkfahf0q81ix1c7eko6he8sz8u8\" ],\n    \"countryOrigin\" : \"mumsqhymz29d8d3mbftkt7d4fiacg39fdbzr1u0xlrcuzylkku8nr7xqbqy1sof4999s39ayai2aj6kxoxam77anqimf8u0m3q9dq30hxtq3nezoggk3hjtkugna2xgdqwq8o011ufkz8m4zf3\",\n    \"id\" : \"x16g\",\n    \"countryOriginAlt\" : \"en5dxzyr2h510otbfc6iw3lth3h6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43d58bb9-c0cf-401d-82a3-e6a6a0221dd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.416724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY origin from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified origined names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameOriginedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8a313595-6eed-4001-867b-160c111f42a8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 403",
    "request" : {
      "urlPath" : "/api2/json/origin/Columbus/Sanford",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8a313595-6eed-4001-867b-160c111f42a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.415209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    }
  }, {
    "id" : "bde2311e-9732-4394-9b22-d2508263afa0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 401",
    "request" : {
      "urlPath" : "/api2/json/origin/Alex/Padberg",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bde2311e-9732-4394-9b22-d2508263afa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.415149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    }
  }, {
    "id" : "3892d7da-0069-4d93-b2ec-0d13f7eb5737",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/origin/Marica/Dare",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Abbott\",\n  \"probabilityCalibrated\" : 0.48549993117192036,\n  \"script\" : \"xf1wvoul6i2dqqx0iwtncke2qac3q7scf65gldqx7zqjbov1mlj46390m79zan03drr5w2h7c6gi7nhjbw9hc32q9nuz3xqymdqu5b9at8dn92tox9nspitry9zio6whj9vbkc96ejstvuyrxq4pz9azdiyx7m1pr552ps1qg6itf78jaxl9k3a9btt3idms\",\n  \"regionOrigin\" : \"hppyp9an75ugkowt7sso0upnrjav3e9vaznr5oskqn33atiya6s7q9zzz3a2ipb5mnrt14vw4jb6szev48pf7ac79k3rj6qlks11m3nutx6qpptzbhsyyltgb9srxb62kmj6nv6u522vdd21dpvhxiqp2yhp9umg66fyeqmh8dlcd\",\n  \"topRegionOrigin\" : \"fr3246fvqqroi7xurasj0bdif22kpvqt8ec24e6l9ui7ak4px6hmropyj0hbxzwqg0k5aio49jlqhraljktah3psw9xs7yn2jqjraq7a9ho2ifnxg8lov61nrl5g1onkt5m13jgk\",\n  \"firstName\" : \"Jason\",\n  \"score\" : 52.111631082706765,\n  \"subRegionOrigin\" : \"3u9ydb9rq3ege6y2y4i6mtayap91z3jya8klyvl8v5zn79pfwggw90556cm1vqag8c60bb6vbaita0xff9wwxv0gr5in89cz57hqfyrrnjxksdrzb4mey6l7vcuwc5if9msc6a1er9pkq43tr46wk5c60l4jvdkgz8ul0k3izeug5bwtkoscoj\",\n  \"probabilityAltCalibrated\" : 0.42898853807049475,\n  \"countriesOriginTop\" : [ \"rqaw604mjym2hasnxfgyaya60uq2n9c6fhqoyqcm2ydwacn79v296yimeomwvms2t2vjj3ce5v6ny499lq72pkmfm314yg2m9dxu92ztbepmvh076yukzi4a3klbi0a4gz3wwcx9k9mey9neoyg3gt77mabdmicylme28h2lxzk6fi1nlft8nhbai5q5x5d2\", \"0j15ffjhjm5n77rqy7pf3pxe3vb599zucuoq49iw7orejtws8vz0owdfj5w7pmecj8tc11obb4o0nqhwbd0d\" ],\n  \"countryOrigin\" : \"myaa4nicwmmvdgt9rqtfzdlbqf6qsjh0nxnp0ui050d223wwznad61mkv1xb32yaj6qzyczf6pndhyx2vonplizpc4ees3\",\n  \"id\" : \"d17q\",\n  \"countryOriginAlt\" : \"i28lawsivcb4dy5jp0jfwdieyqfkssy8q14447sqsr4pevyz8r15tvjtci64pwqcklfdzhy9o0qi7nt7uterjtz5eds2ckbd4a9h20262vta610vgrk1zqwiplkyrxhplcjc49cvugo66i7rxb7p181r0dbz4ncf78dt2olfxcg5e6ooan1wg5qyfyxppe8mzljcxw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3892d7da-0069-4d93-b2ec-0d13f7eb5737",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.415071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country of Origin from a personal name.",
            "properties" : {
              "countriesOriginTop" : {
                "description" : "List countries of Origin (top 10)",
                "items" : {
                  "description" : "List countries of Origin (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "countryOrigin" : {
                "description" : "Most likely country of Origin",
                "type" : "string"
              },
              "countryOriginAlt" : {
                "description" : "Second best alternative : country of Origin",
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "regionOrigin" : {
                "description" : "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegionOrigin" : {
                "description" : "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "topRegionOrigin" : {
                "description" : "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameOriginedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "12ed3cd4-1dd6-4c1c-8202-c0ddf4a95857",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "12ed3cd4-1dd6-4c1c-8202-c0ddf4a95857",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "74647885-f316-4b1c-b95e-29e31cd2c42b",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "74647885-f316-4b1c-b95e-29e31cd2c42b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "1279a0c0-0dbf-483f-aaf9-cce32b357be6",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1279a0c0-0dbf-483f-aaf9-cce32b357be6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "32c7bd1d-2d9e-4d85-a137-1478e20ae799",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 59.63617905340131,\n    \"commonTypeAlt\" : \"dkxp4yyc9phfxjbf0mloswjsrr8jqhop00hm2xpqcaxyqejvxxqntm6tle3mp1om9rtc22mwizz3p88gn5ut5rxovap55q4njmy8of3lqxj\",\n    \"name\" : \"Alexis Stiedemann\",\n    \"id\" : \"39a3\",\n    \"script\" : \"b8rjty7onpmivxdkuhssbjzghrsq7f6u2wps5riwgbwnz3p333ve3464xyuvr77016dduljlr8o016o5ua5qyppf46l2vnkrdvz4jdts3ca20wplfunujooe\",\n    \"commonType\" : \"x48gmx4gp9uz9u4rygicc3cc0o827pbs2gsjcgz5of3vfeblepwvtm06e6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32c7bd1d-2d9e-4d85-a137-1478e20ae799",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "54b4bdf9-540f-47e9-9e31-3770693ee2ca",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/i0vq072zjzqei9ybf4dt7mnb3j7z9g82sz8tvjubyug3ez98n1istu0vcnub6xwqa5ji6zxgegh70fkst4v9mpxf4dxxq1mmll73m11qz/j0icvmt5ujoh4pwpyxhg5wwzpgljk38ek8bijmfqslsr9yoqpjc5ct6jmgnmf1g0e61iuiai6vmnouyzvbih7ar405dxsohxmr0bagi1xxptrd39hzb4uyk3e97oave9njzhgkolk3qysih7rgma1mkwpvhjsv8jq77spgf4sxyltdumge0bgxny1",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "54b4bdf9-540f-47e9-9e31-3770693ee2ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    }
  }, {
    "id" : "3a3c3d1e-f621-4e2d-9d36-b0c54ff932c9",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/7o8ahrw9fq1h8q1g3szdrlywh1kbc4m1ox5er8t2pvefamt16rp1cdna0xfpko446/rkd6lvelmld3b5yt3xip6fmz78ts8xdcy0myl3645wak2yimn7k7tnn4gon5usumfda4v1xnr2yjgw6p2xbifi6gl6fwdz636tpkzqg4o8beaou6lgf16s2iu019yeolbjbjl1r94hvpn2j907wxt8wkpkly80tm5gkcqo98et4jzy9q7x",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3a3c3d1e-f621-4e2d-9d36-b0c54ff932c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    }
  }, {
    "id" : "e3f6d466-97b1-4a04-8aaa-b497b5cca2a3",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/40xqx2temiwy10cre093xerxq9a7vep48nsbcsbnsektbzgw63spd4flhyk8cpaokniblfq4j819kcv6a4j0s1j0k180ikwojm03gig1aq6lvqx84jscj8fwo/g5jp37oez6kshrzj1wm2g9cw8644lz987fae1w7cej0pv4xpx8ynp3urxi8jllhv4rtge282c3xmyjzf88t97rscoq2rojicrvfxz78e8cery2h1bvwfk",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 90.18343568015176,\n  \"commonTypeAlt\" : \"55pfj0fqskc3cims6mhf1vp978rciiudzxe8j54sv3mrkwrkoaemo5qs5ap1p87mbvhkqafyvgeivc15sv22l6b785c3fi0ann3tt839k5fowca5dj4mf5zzuwd5nmu5y8uoku0kwwadtms1vu5dbj6iuj69z6fjcnyl2\",\n  \"name\" : \"Dorotha Gutmann V\",\n  \"id\" : \"lbng\",\n  \"script\" : \"eisqvngd8hlvevtjm21375064xj7y4145qequeam97dwh290phcpm2fz3mjfo6s6pck3ejr4g86r395sq0mz9tyle1zbov1dsxuydg3\",\n  \"commonType\" : \"hsuna2bapytgh0yioan7ketxpp3wxfiq0f0eq8n7nel5ymfihcnewv3hcsvuc9jx0pnv3k46bkn978tx96eppkrorgokpkrt1t7pbvgv6usyl57vc4kjdydf6dm7toli0y5si5geff3a8mnbjfq024dmuigtrqyrfi0gap1qazh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3f6d466-97b1-4a04-8aaa-b497b5cca2a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "03bd8a4c-d2e4-4ced-82b4-32d61aa437ff",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "03bd8a4c-d2e4-4ced-82b4-32d61aa437ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "d4b69d65-2b16-4407-9f40-36d7368fbddd",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d4b69d65-2b16-4407-9f40-36d7368fbddd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "5e57ee73-8267-442c-9eee-4b352a49b15c",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5e57ee73-8267-442c-9eee-4b352a49b15c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "dc31b2a1-9d4c-42b0-aa07-469c8674c675",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 61.69989324223566,\n    \"commonTypeAlt\" : \"rz4ebaaiumqcxcpr9c6fe3hnvig4gfk2uy9swbfzf39kvrw5pm0bxkkihcwdxhccb3p0vtoqzzrggtn1wkc8xvotooqgnyrbxvtm\",\n    \"name\" : \"Jeff Gaylord\",\n    \"id\" : \"xx2l\",\n    \"script\" : \"dbwiunen68wolyvyt8qo5lwq1t4l7j5l6eaq1jy8g4dkwvro9jdoivfsr6922aisllbn8r17hi3fc56pwr2750ytzplj91po2kl\",\n    \"commonType\" : \"75mtaicuo226lv09p2d5bjholr7crx0m6uys9qsiasbkfymbh771f2lbc8ruaev53kgry291sqr39yz09k5fzjx61e3yr1y6uk7pq195ohlyi2iwxc3nce9deowi6wj34ys7plu4znde7k5cssvgh3dc5n5katkdz1qxic\"\n  }, {\n    \"score\" : 76.4457659885953,\n    \"commonTypeAlt\" : \"h1hci0jdnciqt24ocm8v4zznyfxoybuso98bg5jvg5nmt3nuxxj7vftwu22bwgfrgh3xr577o31mjy0ae3sw706fega43gkdeunab45b5jctryy49jb9dqt2tyxn2plcgbzdlabpooloym6wj2drn5301k8j20lr3gzrtji0hfbn0ao\",\n    \"name\" : \"Francine Monahan\",\n    \"id\" : \"k827\",\n    \"script\" : \"wjkq91k70b3v4qr0cfw0tiw58ig0ncsnoys1ghqmxzr13fp72ubkxsdswwcoj968e23fhmv69pcdq6gn5l4\",\n    \"commonType\" : \"ygky25inhh4qw39jwe88xwikh8n3dg0f46t8sfqnye8t78p448w87i1vwp1zv16ss5pyfusaslstkqxia9qw4zv8xa1qkalwokp7klol6chgreoxprtfauy759j33nhfoe4vnp6skhaw2cmd2jpm7bwn23wu669ketrbg56nui04nby139rr0orlex\"\n  }, {\n    \"score\" : 2.589489291872793,\n    \"commonTypeAlt\" : \"vhwg5u7csq\",\n    \"name\" : \"Delphia Nicolas\",\n    \"id\" : \"c6j9\",\n    \"script\" : \"mh5dn8ko2wwi7v2ncnjsvf1bykmdrdjco184x0myxpz98ra1u2\",\n    \"commonType\" : \"xj5mbi5ue5rbkmf4thorbtub0sxfqb2t91g5xu4b6glcvazu0qtu9pqkxsp2w24\"\n  }, {\n    \"score\" : 44.60303307258935,\n    \"commonTypeAlt\" : \"niddj97h01pbsid260cqcfohaf716hj6atqcuwwafhzyl7b9ey8jwjp8973a1dbj\",\n    \"name\" : \"Jamie Cartwright V\",\n    \"id\" : \"72az\",\n    \"script\" : \"klwh46l5wm6xsczf72dtebd9b4hdus0cdlfyhptk55rcq2ssxhgp8pogt53k2b9c59bxx2rbxta1lztaojmgjnz1dh1l0s6bwptygugnpnoybo5vrmxcvimoe80rv6p5191hid6ow5paxcs174fwghyn8esetpd7hhfqb2g5vkdxcfagrz1n69l0wb4qt231\",\n    \"commonType\" : \"4vl9d0oknm2olrhtvn29v65xiaeoub1nxcxbsx5n5objrtn7l0kn6aavggk7q10t1sa9s1yeoc2fvvgr3yp27akcvodsf9tuapvrg3uutkfnxhyzy4c70c28gp7k7i5ubpy0p9huqzqfofoocn21vauharjuj9q5hfc0\"\n  }, {\n    \"score\" : 57.55317610868076,\n    \"commonTypeAlt\" : \"0qvs6vu8wst5f0q30idi08i7p523yunegqy3ejb5l9sn57i6gtxb1jgczd5j8orykh\",\n    \"name\" : \"Mr. Alonzo Lehner\",\n    \"id\" : \"a5cr\",\n    \"script\" : \"efnfhr9dxakr2eqx65hmt07a7i2r8g7roysfgo0pxvbg9jg8nj8dwjn6ojhf6ok8eol1lrymupfknvhn65wvzjcm5hcsailxn0vlzx7ez143cwlpyl3h7k12shdhu2x8czrqw2m0x5rsdpom10b36bn3xz9gokq9glwhffzorlp51dfu815hyyhsy2w\",\n    \"commonType\" : \"xgjfrfecyefgyllzcfy70sfcn4o5tt25shhwjg4ppl0qavki9iumcc8u143zi1to\"\n  }, {\n    \"score\" : 96.63506240901224,\n    \"commonTypeAlt\" : \"qnd9b9vtye6y7ir34eowoi71c0ab2au37tz5cc2p6coafu7fl3ecisw366i3y50a1p614ecufpnvb4fm17bpdqfnnnd2bcfgzu9q35pv4znpbhu6mu5uhbjmf8gtez8rp7tu51gtjkh9iwuwd3bo50r4m9yu7wflve98tjzo835u9i1ob47l2klhs2bvhgbgluyhga\",\n    \"name\" : \"Phil Okuneva II\",\n    \"id\" : \"rnv2\",\n    \"script\" : \"j88fb2y1ohfusgqn0v5o2i6z8ttwnl30jvv5863grrqadnt11xsasxo1uezpnvomqeox91yyx5shadebjdth1asvp53787mp2bsf7sym7j2c25pd4tlgpowax6zjzanahwa4u66l3trmn52ipz6wgoqbvq2srkg1abjfe8zfnvzzi9h43t0rt983inda2wim1\",\n    \"commonType\" : \"av6k94\"\n  }, {\n    \"score\" : 33.88102420399396,\n    \"commonTypeAlt\" : \"reebsfft5c6l2imyrxnhcuxz96n374asveh6gne9r8nwn9fk75gg6ymdqn92d3wdsaly506qgezs2e60vrp17tt5vfg06a99f3clme6i3mixahqd209vh7jrmb4p6q9lntkojpnf9vsfnds8tjmk1cvvlzto1l9j23qj4t0oyytp2k3czxbi\",\n    \"name\" : \"Mr. Tiana Stiedemann\",\n    \"id\" : \"t7dn\",\n    \"script\" : \"v0opce1ae49j44wh2ode0ts0l1\",\n    \"commonType\" : \"c1qdrwyvadmmnfovjdbom19rxngp6e5y4bh14h95tq6860btr67lya323fg3yv11h68oegfbj1vt909zmltu5bx7176whuinbzihv0qb7zktxeixpox0t7bsbn0dztwi3hshf2w3lf6h2jqbj3r344lnf4fx093csxybs\"\n  }, {\n    \"score\" : 56.778309733770485,\n    \"commonTypeAlt\" : \"dyjvcifi6cjgd0sgcgmmm0ei7i7fqte1vz7w8m9lbj6s7lt48y18strbxbj31ws05y6vqt6uyndijuxgybd6frwlxa65wxb5r71pefxu529j3k5vti8wt220weg3dow7hf47ogucsg63q5wh\",\n    \"name\" : \"Tandy McKenzie II\",\n    \"id\" : \"a4l6\",\n    \"script\" : \"iqtxp0ldzdsax4adanustowxpvxl55u2jgiz0k06zyx9nk78rkkms63i5afz0vzth6pzguga44mmj7p4y770dtbmcfc5h9rfbnwxot3maijes50mv07ih\",\n    \"commonType\" : \"3zdouc8431n3s3imw2o\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc31b2a1-9d4c-42b0-aa07-469c8674c675",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.414037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "fde65be2-2489-4b1b-919b-e0252e21f776",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameType/3jiahl6zyoikq8k8dexn5sg700xu",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fde65be2-2489-4b1b-919b-e0252e21f776",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.412761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    }
  }, {
    "id" : "46bd8963-e23e-4676-9347-fab5003deb0a",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameType/rjpp0h89mlpq9i8ptqtyotztno9atgv64hm4up1k5xbr5obkaerrxpulqgxo8t39ah6o7lezfsqk3wqdj765azp9b23g8dmhrf1omeycnq4c1xl0zservhzz8pnll138p83tvgl1arrb3910o1khl",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "46bd8963-e23e-4676-9347-fab5003deb0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.412734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    }
  }, {
    "id" : "e0d5cf68-a956-4a0f-adde-de46821de80d",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameType/8r6hck9x",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 71.74013989243355,\n  \"commonTypeAlt\" : \"wdxrp16imwfuupk6tgj08gqs9v9bkfr2sz7g5d0wuo156cr80fl4vn76xugy4kmqjnfukd92rv3\",\n  \"name\" : \"Cassondra Gottlieb I\",\n  \"id\" : \"7874\",\n  \"script\" : \"7v2sx33s7d70k9rn0vn1i050zlst8d8qciaxxgw2dm428ixigvc8al5hwu6j991a4sdq5qonm3waicvw00qejy5rjo52skcvfhjl4qaorf74wpx2qh8q9hqf4oe0trqzkk6gferc4v6rywa9pbyxh7dgi8c1xqc\",\n  \"commonType\" : \"hgrg9xwrq1uynu487os9wyn249f0e9bk6s3wh4u08u9zyop75j4sik0tmu9gn3i0z4cazfn63ri46nq1qsmzelymgh6f6cz2gbx7l2wq8ghhyfn4xuo7f06np2o630q77yc7yesuyz2xmvlbvi0stwvmuu1sri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0d5cf68-a956-4a0f-adde-de46821de80d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.412693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "710f12f8-7a55-4ab3-9153-7cd7d5d161b7",
    "name" : "Activate/deactivate learning from a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/learnable/sv4n3wm5scyrqf404ip6hoesrz1sxl911spia9vp7orc7u6ea5aw5hzq9o1gojpu9l6vziejqsi0y67bgd11n798ccc1v9kfudw9330q7lhuyanau7qpb0gxwz65/false/svv8uqbbcifq370kvc5wwezn4227yi75az25g1p503wkzllyvg4yxxvr7q3sye2zmwm9h8kg6iexesbhya909h6qixzr9stlmdaf2m4ci3638u4j5ns4hlrpxsf7icc3v7ao5e0qlsbzg96j6jifc7rez2ad",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "710f12f8-7a55-4ab3-9153-7cd7d5d161b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.412458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    }
  }, {
    "id" : "67ac3c68-3baf-4c3a-83a8-738a063266bf",
    "name" : "Activate/deactivate learning from a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/learnable/e2q8foi1wnlezr432w79t1vtfx6e8xrcshtyy3abs6k168gbisoqmo63p2knp5vv7voz66y3xsle2zpf0wuxmcgqn9cgmgudei7xm/false/pmrkspt691c1vtpf3n6m251yq9oeqgezu135deco9tlg45g92v68882eg0qjomz2fvpvz",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"wrdaet0bps0tn5mwh4gmyokd7571tdbmr7n5atgzyo3j4ihdfmulcbtxaz1fui6rwn3djc10o9g2ngl86gs2a4p5vgz8klw\",\n  \"partner\" : true,\n  \"corporate\" : true,\n  \"anonymized\" : true,\n  \"learnable\" : false,\n  \"admin\" : false,\n  \"disabled\" : true,\n  \"userId\" : \"x9p0\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67ac3c68-3baf-4c3a-83a8-738a063266bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.41241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ffea5aa7-eb5e-41fa-b116-125f76ce1078",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/f076n1ikf801691ye88yobqvsoqwdj129erysfila8r5qrm9w8alvfoomq2h6gw5iy1zm3n8cjhuwwb78se6p7dxu6k3zary5nnp1o1jig4wd8ymw7223jt9z10c4ly279z41ww5o3yhk6nt8uwsrvlcmut1idqrft6r7muv5h87doqt24y2bcs/tcdcmjhpuke7o8ifw625ju0aybfraau2hpj0mzt3jlf5wlhyle07057ctb9r7t53nlytdyrucfccz5bq28phag158dox6sss0tnpwn/Damon+Lynch",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ffea5aa7-eb5e-41fa-b116-125f76ce1078",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.412197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "716a7039-add2-4a26-b6eb-0870e7b95796",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/94fhugdbn0nospn6wryzfu7iw5wrlt8g7f9j2hueczd5qogillpj7hwlv85vi0wxcxyfbspyn9v57fcib3agnyiotoyc0cl858n1nzjly47wn7jls694fg1oi5hirfkcajpg05fahhzdriunuxa0gzgsqkvok0kyusueoidxufsu9xgkl14vk3bjox1nxv1gu/pr1ygqgg2kh9pkejukf7fxr1jjuu0tfi8dc7y7csxph28z5nwoocbxw1lt1hgjhorw3mchwcotrubfe8847awg8kugoeojqthprbyq69orf0r12yln8vbtsg17uryj8da0bhns8r7dg9ss3lrys0vc3vm3r9bieluwgu4i8djtza6k2uzhvdeqsxussleos/Bertie+Dach+II",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "716a7039-add2-4a26-b6eb-0870e7b95796",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.412123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "525ad5c9-9908-4491-ab50-fe40106070af",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/ncexpbiusmayqqgtsov7ntt6wzb0lr520jjrx0jmrsx3wx4s0qex9o2759qpf1iez55qdxb0yz61jif63a0ukszneyob4e4msvca9mqsfnrug0hfzvs/8x2ztgtoed2k4x7k8fqzau8lwa1boj0ozyun773ohlcdd5m9blgsebaao6866nq7qiw6bkd34nsmy54f3i720ta4v4bnyb8l9jssivs64o8/Ahmed+McDermott",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedbackCredits\" : 2049519311357754156\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "525ad5c9-9908-4491-ab50-fe40106070af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.412034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop",
          "schema" : {
            "properties" : {
              "feedbackCredits" : {
                "description" : "Number of units recredited as per feedback loop successful classification",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FeedbackLoopOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "76ea014c-6457-4709-99cd-a04831b3e077",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "76ea014c-6457-4709-99cd-a04831b3e077",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "274eba97-f7fe-42d7-a9d9-9a77d2696014",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "274eba97-f7fe-42d7-a9d9-9a77d2696014",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.4119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "621c18fa-94f6-404d-97d1-a61171315dc5",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "621c18fa-94f6-404d-97d1-a61171315dc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "44349e45-c524-4984-9926-c76fe5abdf3f",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.507114930592316E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"57h8\",\n    \"script\" : \"634gtqq5m1z44jk97w55knv9ohczo1yxs3bntskxhgzy2fnjswmrssl32k4vrn29we2bqxg7zjh1fbpdwrbggdgz8tmqn5kzpxzx2gn8v7nh65gbnj52grxu7kq87d15ffucjt1f53dyl3z4qdbanxmqubzxcab6bi03ignh5ca0ag9w\"\n  }, {\n    \"score\" : 3.2714819018596026E307,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"8kp1\",\n    \"script\" : \"fgx87rb0tcfjuezvrp86jbon1u47ciexcjc5hd0i6l3mryd53xenh5z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44349e45-c524-4984-9926-c76fe5abdf3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "68b4e9a9-2feb-4392-b26e-03e488bcce53",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/16h7jgnck5yqso6scg47ug3baew3uf/86n68tanld3mh20tq086wj7atouhxlscdsdb84bxtm1t8wpj4cu8uk0uvp9cdygvobdb1/Stephen+O%27Connell",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "68b4e9a9-2feb-4392-b26e-03e488bcce53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    }
  }, {
    "id" : "bceebee5-5457-4786-8cd2-7ac13645838e",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/fkk15ay4h43r0yq/2gm4iub3be7roxvtsmd/Mr.+Lianne+Schiller",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bceebee5-5457-4786-8cd2-7ac13645838e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    }
  }, {
    "id" : "78a73527-ab7c-42e4-a6df-a65800f79231",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/jcqstad6fs7ht3vd1rec9taqbvk5l8fuyq2iafouu1iq81lympuvhbw11h6i/nm7vg1svmrrlmd8mf30xc1qpwz3f7bw49ke2zoillfjakz5coc45ad6dhzqmjua1vqo597dl9f3gqi15zcdh9th5t6v5s60ntc96mverjumx3brd1qi9tfkmtkupvdjf0fghx43f6lx/Devon+Torp",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.2614903437507143E308,\n  \"matchStatus\" : \"Mismatch\",\n  \"id\" : \"vo0s\",\n  \"script\" : \"6xy2hqfy7gpvemv7e0t6q1rq02kc3y2p7qbtoiuwye1n9o7hakmijiju1zajnldhip5fjh4rloe8miv4tgicbbwofaf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78a73527-ab7c-42e4-a6df-a65800f79231",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1d333643-11d5-4135-8a25-292543d22ecf",
    "name" : "Romanize japanese names, based on the name in KANJI - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1d333643-11d5-4135-8a25-292543d22ecf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "22b4877b-632f-4f96-991e-8f141aefb60a",
    "name" : "Romanize japanese names, based on the name in KANJI - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "22b4877b-632f-4f96-991e-8f141aefb60a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "9c5f0c98-c332-476b-86dc-31f0a66829cf",
    "name" : "Romanize japanese names, based on the name in KANJI - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9c5f0c98-c332-476b-86dc-31f0a66829cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.41118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "38af38a4-0965-4e1b-a09e-8fed5f32a1ad",
    "name" : "Romanize japanese names, based on the name in KANJI (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Miles\",\n    \"lastName\" : \"Hand\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.178106388423488E307,\n      \"candidateName\" : \"2022-06-18T13:35:59.408672Z\",\n      \"probability\" : 1.4650333996810872E308,\n      \"predScoreFamilyName\" : 7.370696875300948E307\n    }, {\n      \"predScoreGivenName\" : 9.529763099504113E307,\n      \"candidateName\" : \"2022-08-09T16:47:59.408717Z\",\n      \"probability\" : 3.574738728847211E307,\n      \"predScoreFamilyName\" : 1.361118529337753E308\n    }, {\n      \"predScoreGivenName\" : 4.812832768832751E307,\n      \"candidateName\" : \"2022-07-25T14:42:59.408763Z\",\n      \"probability\" : 1.445323303980185E308,\n      \"predScoreFamilyName\" : 4.004426399306791E307\n    }, {\n      \"predScoreGivenName\" : 7.797642594764978E307,\n      \"candidateName\" : \"2023-02-17T15:07:59.40881Z\",\n      \"probability\" : 9.11667094946793E307,\n      \"predScoreFamilyName\" : 1.7051307651355098E308\n    }, {\n      \"predScoreGivenName\" : 8.222058934879301E307,\n      \"candidateName\" : \"2022-05-14T15:03:59.408853Z\",\n      \"probability\" : 8.740787985097472E307,\n      \"predScoreFamilyName\" : 6.726337123947721E307\n    }, {\n      \"predScoreGivenName\" : 1.721276625351272E308,\n      \"candidateName\" : \"2022-05-27T14:36:59.408898Z\",\n      \"probability\" : 9.324822592652597E307,\n      \"predScoreFamilyName\" : 4.622338976617449E307\n    } ],\n    \"orderOption\" : \"v6tgkx4ymx3rx8c56h1sdfk04wonokznjo1px6ubowdkg4d61jst8fg7999s65uwduofbql6pgfxl7c57vxvzs7e2a2is\",\n    \"id\" : \"12u9\",\n    \"script\" : \"v060hj3z160l1fd3bbomfluud4ueln0fc543slqo156afwhiw5jiquduq6f0graj3snpyv38xn7hdy9h6qmbjiwutcgotl8l05vj655ez723ilge0rsqv7brg2iaca8joawgsfumwx3nzh171fy39qibg5og8yk7tq7hhgkghqj\"\n  }, {\n    \"firstName\" : \"Douglass\",\n    \"lastName\" : \"McKenzie\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.313443935620407E307,\n      \"candidateName\" : \"2022-11-27T15:27:59.409101Z\",\n      \"probability\" : 1.0254404955178014E308,\n      \"predScoreFamilyName\" : 7.823837276307326E307\n    }, {\n      \"predScoreGivenName\" : 1.249659802894559E308,\n      \"candidateName\" : \"2022-10-27T15:44:59.409148Z\",\n      \"probability\" : 1.23541032362868E308,\n      \"predScoreFamilyName\" : 5.27976209576981E307\n    }, {\n      \"predScoreGivenName\" : 8.878010534416682E307,\n      \"candidateName\" : \"2022-10-28T14:29:59.409194Z\",\n      \"probability\" : 1.461701133955718E308,\n      \"predScoreFamilyName\" : 1.3409167739109462E307\n    } ],\n    \"orderOption\" : \"c6g3k9qg75jd1zbl8mc7z049u9\",\n    \"id\" : \"98f3\",\n    \"script\" : \"0nsd616wy6mbxk9oaghc75688gmletvlkr8pikz1y1fy6xzl0yytlktfod6emhm1tz0cirhvssk2bykkd408kj71dn1itgegnhmw291t9eqncz701vohpc9pqny1y5u6q67rcmrwfx7ea1l\"\n  }, {\n    \"firstName\" : \"Cameron\",\n    \"lastName\" : \"Goodwin\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.302775215192155E307,\n      \"candidateName\" : \"2022-08-11T17:03:59.40939Z\",\n      \"probability\" : 7.28297259720699E307,\n      \"predScoreFamilyName\" : 1.442327200249716E308\n    } ],\n    \"orderOption\" : \"j4bnm8haojy8xjlmvi06a6s02xci79duasiw4h3v4ogmqg1ob5gbp0tjbnajmd4akec3m14ywftbp6860m16278qn83elcpalodigt0u5cahwo0\",\n    \"id\" : \"2mps\",\n    \"script\" : \"poc92n\"\n  }, {\n    \"firstName\" : \"Jamee\",\n    \"lastName\" : \"Volkman\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0954523915460527E308,\n      \"candidateName\" : \"2022-07-22T15:48:59.40958Z\",\n      \"probability\" : 3.23106105207684E307,\n      \"predScoreFamilyName\" : 2.7597239611036673E307\n    }, {\n      \"predScoreGivenName\" : 8.51408679602514E307,\n      \"candidateName\" : \"2022-11-24T13:56:59.409624Z\",\n      \"probability\" : 1.4220025373267465E308,\n      \"predScoreFamilyName\" : 7.306860261724714E307\n    } ],\n    \"orderOption\" : \"myxoog9bx6ad48zzysl930l6virppdv830t4170s869v0jvzeb\",\n    \"id\" : \"8151\",\n    \"script\" : \"jaqp8rf2tb4a21wp5gflwgy1ou6ihhlq5cuj4ohpfuy8gkflqi1qiu0d1ru6amda4bydxunbag6rgko0040m35fhwaydmy4z78i7\"\n  }, {\n    \"firstName\" : \"Tanna\",\n    \"lastName\" : \"Rath\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.7949689542224174E308,\n      \"candidateName\" : \"2022-10-01T14:13:59.409814Z\",\n      \"probability\" : 1.7191414009500214E308,\n      \"predScoreFamilyName\" : 5.30995207925913E307\n    }, {\n      \"predScoreGivenName\" : 3.7479599398661046E307,\n      \"candidateName\" : \"2022-06-09T16:12:59.409859Z\",\n      \"probability\" : 6.115526081823803E307,\n      \"predScoreFamilyName\" : 1.2423767669689054E308\n    }, {\n      \"predScoreGivenName\" : 1.6787165212087635E307,\n      \"candidateName\" : \"2022-04-28T16:54:59.409903Z\",\n      \"probability\" : 1.5536436041450733E308,\n      \"predScoreFamilyName\" : 8.106783004427061E305\n    }, {\n      \"predScoreGivenName\" : 1.185426833375457E308,\n      \"candidateName\" : \"2022-03-09T16:35:59.409948Z\",\n      \"probability\" : 1.7357943683379214E308,\n      \"predScoreFamilyName\" : 1.1682030638276926E308\n    }, {\n      \"predScoreGivenName\" : 6.558225002211852E307,\n      \"candidateName\" : \"2023-02-20T16:08:59.409993Z\",\n      \"probability\" : 1.3137242278349293E308,\n      \"predScoreFamilyName\" : 1.115690688981257E308\n    }, {\n      \"predScoreGivenName\" : 5.407784263453617E307,\n      \"candidateName\" : \"2022-12-27T14:35:59.410038Z\",\n      \"probability\" : 1.1704924668617765E307,\n      \"predScoreFamilyName\" : 1.3942645623386618E308\n    }, {\n      \"predScoreGivenName\" : 3.921300982252528E307,\n      \"candidateName\" : \"2022-05-30T16:21:59.410083Z\",\n      \"probability\" : 1.7933231113231773E308,\n      \"predScoreFamilyName\" : 8.142543296627254E307\n    } ],\n    \"orderOption\" : \"yu5yujft4t2y79wzu0s074idkme41ght8iaft4hl6gs18megp07jp1fafq8o4he6w1htyqh3z\",\n    \"id\" : \"9qvl\",\n    \"script\" : \"6je1v6cjpu67ue314qrhx1yz8885g8pjdbhazq0d3es8x13q4cd2u0zmc5ihy3rgbo2g\"\n  }, {\n    \"firstName\" : \"Arica\",\n    \"lastName\" : \"Quitzon\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.97210239992996E306,\n      \"candidateName\" : \"2022-05-14T16:57:59.410279Z\",\n      \"probability\" : 6.613463923123621E307,\n      \"predScoreFamilyName\" : 1.0716759117383127E308\n    }, {\n      \"predScoreGivenName\" : 3.7241321671099524E307,\n      \"candidateName\" : \"2023-01-17T13:42:59.410324Z\",\n      \"probability\" : 1.173544113217465E308,\n      \"predScoreFamilyName\" : 1.6488913208879919E308\n    }, {\n      \"predScoreGivenName\" : 1.7510159559778541E308,\n      \"candidateName\" : \"2023-01-30T13:39:59.410368Z\",\n      \"probability\" : 1.1535350371398676E308,\n      \"predScoreFamilyName\" : 8.649657839389163E307\n    }, {\n      \"predScoreGivenName\" : 1.1259304982393918E307,\n      \"candidateName\" : \"2022-05-07T15:04:59.410412Z\",\n      \"probability\" : 1.0990915737642792E308,\n      \"predScoreFamilyName\" : 3.64527481711819E307\n    }, {\n      \"predScoreGivenName\" : 1.084156327059795E308,\n      \"candidateName\" : \"2022-05-28T17:11:59.410456Z\",\n      \"probability\" : 1.5944459081638326E308,\n      \"predScoreFamilyName\" : 1.7947804809471053E307\n    }, {\n      \"predScoreGivenName\" : 1.6826578505729293E308,\n      \"candidateName\" : \"2022-06-05T16:27:59.410501Z\",\n      \"probability\" : 3.3498163560375286E307,\n      \"predScoreFamilyName\" : 6.617509906978404E306\n    }, {\n      \"predScoreGivenName\" : 1.5304654344057282E308,\n      \"candidateName\" : \"2022-08-11T17:15:59.410546Z\",\n      \"probability\" : 1.2980408299338547E307,\n      \"predScoreFamilyName\" : 7.552941319749855E307\n    } ],\n    \"orderOption\" : \"l1tln0w7yrzg6g913uxej14omqrn05lntkj1npjz2b9s0dxlglxpgxu88ti5k9pymoq1fee1vqb1b9i1dcvntca5itc34sdjzuoptndpmc9gpdhskiurd5xbj60zwrfusniqk184mptnxb1jxdk93x6p0zw3o59ea1c3sb7mk41wu76u543l975j4yuqgrvkd160oyvf\",\n    \"id\" : \"03xf\",\n    \"script\" : \"vehegv19mc4hdeacdxhr2nb9jso9eg73937ubb8axxgdj4av7yhi1q6p2t4xzxgvkledfur735amjhlb18wj3umn94gcrw0tyiiok8p0d8d36ax9ohqt0rrkmcj9gkhefdjyql\"\n  }, {\n    \"firstName\" : \"Adriana\",\n    \"lastName\" : \"Ankunding\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.5337532072477651E308,\n      \"candidateName\" : \"2023-03-06T15:03:59.410744Z\",\n      \"probability\" : 4.17279966484412E307,\n      \"predScoreFamilyName\" : 1.018370393452638E308\n    }, {\n      \"predScoreGivenName\" : 6.759569229449513E307,\n      \"candidateName\" : \"2022-03-18T16:20:59.410789Z\",\n      \"probability\" : 6.163011100948902E307,\n      \"predScoreFamilyName\" : 7.505179149789871E307\n    }, {\n      \"predScoreGivenName\" : 1.3711074215190675E308,\n      \"candidateName\" : \"2022-06-14T17:11:59.410833Z\",\n      \"probability\" : 7.34210551010409E306,\n      \"predScoreFamilyName\" : 1.0696250314931145E308\n    }, {\n      \"predScoreGivenName\" : 1.0190427553018442E308,\n      \"candidateName\" : \"2023-02-13T17:09:59.410876Z\",\n      \"probability\" : 5.494211952819485E307,\n      \"predScoreFamilyName\" : 5.710828249358805E307\n    } ],\n    \"orderOption\" : \"d1j0t49p52wv6rplcxomkv4y0uw4swl5unuv18e8eqspbns3xqftct5866wxphglcuqv0vqiqwd5l31uupffcdz0l2ax8pan1u402dno9767u7ms0m9kobj11hn6860w0\",\n    \"id\" : \"25ex\",\n    \"script\" : \"6uk0hedxupnm2tnho3eeeoafavom2m1bdeu4dkzk6mlkdw21yxyzoixhads7b2bp8383eyhjzys9djs2enc7wl8q4go1j9lnt6zvul1agld5mfjhqg14lb6xlrrwigzvufnxuf6mhab4zxhhcxtp9ryj8zqzful0m9zteq8qf67lakhi0a3\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38af38a4-0965-4e1b-a09e-8fed5f32a1ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.411147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "38441d19-13e3-4109-8ff5-c1b0203b8a5f",
    "name" : "Romanize japanese name, based on the name in Kanji. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/5lbhxbi85uz9aucjdol7g5ijv6lvo87ufwef3v31bj9y5d6kpvx4xkaz1g7f9ig49k9259bdlf93hsxilzwo13rdkbl7fiukck9rceiurqy2g/9oudc8h69qaty3bbgfxoq3jjn55xlfv38q95bjcriryrh1ba9at1h5pwh94lmi2epg6gv0f957xeukteew4ve1nbfw80j60w331bmhjn7rc28usk3x30e9u4lnqlz6t67r1a68f9opdijl5n",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "38441d19-13e3-4109-8ff5-c1b0203b8a5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.408576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    }
  }, {
    "id" : "3a45fda1-36c2-4186-9453-115906b9640d",
    "name" : "Romanize japanese name, based on the name in Kanji. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/1t42psdw3txks7umvjss0vuxbyzjvoda2qjsrfjqsu0pdxgvb3k9zxtwie1j75zwuiixwuonhroqaud71j2hm04j413cc013ickbvjn64jp95ouilcuah84ncs82rp1zahz6c7cfnv7y0x6/asu5x8",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3a45fda1-36c2-4186-9453-115906b9640d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.408535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    }
  }, {
    "id" : "84d33556-76f3-4acb-a93e-efc0047ef0ef",
    "name" : "Romanize japanese name, based on the name in Kanji. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/ejvelv4cjpjap3ndw74ozldujy0/mct7bdrr0wodzy9yvoi4y4itfsg3dcbrwnv0ysqinw7d2a08f8825hnpxgrt1ol4chdwro3n9fasc439j8jdhc2br84631ux992z68tsp29qmwz4y5jstyz8i6f7hhqz47y0o1q207h8e9bgydooxrdgihv29ww4djd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Ramon\",\n  \"lastName\" : \"Gottlieb\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.5531832206146162E308,\n    \"candidateName\" : \"2023-01-20T16:10:59.40825Z\",\n    \"probability\" : 1.7234785734161725E308,\n    \"predScoreFamilyName\" : 1.65959317800129E308\n  }, {\n    \"predScoreGivenName\" : 9.268211414782929E307,\n    \"candidateName\" : \"2022-05-06T16:08:59.408295Z\",\n    \"probability\" : 2.485742645885927E307,\n    \"predScoreFamilyName\" : 3.6358019716474396E306\n  } ],\n  \"orderOption\" : \"gkdddggj7psrl8e33zkk57tk80gpn0d0860r6jrh7lisv8yxief87fbz689wu5rbsndnbd1i1bfvys\",\n  \"id\" : \"07la\",\n  \"script\" : \"x71bvcbwmnmctn7ventsj5jbyj2gmoqn6jh9ltkeg99s05uc13gp0ihuhz89kg2j5c3qg60qsof38ctcmanzgzkpujox63lrtyk6i6jk4m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84d33556-76f3-4acb-a93e-efc0047ef0ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.408489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2dcd5a1e-7b24-4cfd-94a8-5c6f299344bc",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2dcd5a1e-7b24-4cfd-94a8-5c6f299344bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.408162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "5568a746-8f27-46c1-be76-3108f7722e0e",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5568a746-8f27-46c1-be76-3108f7722e0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.408147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "620c6e70-1fa6-430a-a797-0a59684f504c",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "620c6e70-1fa6-430a-a797-0a59684f504c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.408131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "ff2f7940-7909-4e40-a25e-a4eab32ff642",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Yvonne\",\n    \"lastName\" : \"Bahringer\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 6.567632846380565E307,\n      \"candidateName\" : \"2022-05-07T16:02:59.407755Z\",\n      \"probability\" : 1.5942544408822959E308,\n      \"predScoreFamilyName\" : 1.6200695183925949E308\n    }, {\n      \"predScoreGivenName\" : 1.2376746224190437E307,\n      \"candidateName\" : \"2022-06-24T13:32:59.407802Z\",\n      \"probability\" : 1.291934992035909E308,\n      \"predScoreFamilyName\" : 7.564745568353968E306\n    }, {\n      \"predScoreGivenName\" : 7.352155480171864E307,\n      \"candidateName\" : \"2023-01-12T13:38:59.407847Z\",\n      \"probability\" : 3.006014205273706E307,\n      \"predScoreFamilyName\" : 3.4618538085285293E307\n    }, {\n      \"predScoreGivenName\" : 1.3898384925934472E308,\n      \"candidateName\" : \"2022-05-05T16:15:59.407893Z\",\n      \"probability\" : 1.56552671504873E307,\n      \"predScoreFamilyName\" : 1.706307381821208E308\n    }, {\n      \"predScoreGivenName\" : 1.018581644830396E308,\n      \"candidateName\" : \"2022-08-08T15:52:59.407939Z\",\n      \"probability\" : 6.619525697514511E307,\n      \"predScoreFamilyName\" : 6.805799415387362E307\n    } ],\n    \"orderOption\" : \"77pnltraklursxmygjdqpljhmeo3kj4qe1hyv6xbo7lke0nc0odwmttnmo2a0ubxxqqsweqbit3ssk12bakb8b33y8f01osy1moccfr3xo6n\",\n    \"id\" : \"zlw1\",\n    \"script\" : \"uy7dby7qaatcjx5g9qrkmw45u31ikqprturl4874o2a80yj200piu36vccihekg79gutxylyfpsgv9t46amm5pn96qef3pvkdjtqbo2m8nvxgh9a\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff2f7940-7909-4e40-a25e-a4eab32ff642",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.408105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "27aa7ab7-a28b-413a-b830-fd4697f7cf32",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/7g9di6uhsmkivqfk6oy2zm1f886fd5ikzmay3y9pvkhpa6b9blddc6f51rqzkfg0cu5sd67x74uz3fii84lr4fes6xcokr9jhrm84mcxp2h7axpgvjppzaxd6smdk7zl3oxh1xrch2jm07bi99o3qil53vl6wx62uvecr80szwtfwute/rcr4xd5zejm9z9gkap62aqax2nnycakhoh8vzfzq3pam032pm5p86zuizk0rv0f1jhfj0oleye88ilxpp2capgv2lm401jguibz7onz4720h16hs3uej1mr2rxylxooc3z028xxr2lngkfu28y30e4snxtvb4izmddrp8pzxgrwuowsucncj17cerutta59e/Agender",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "27aa7ab7-a28b-413a-b830-fd4697f7cf32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.407656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    }
  }, {
    "id" : "ee423463-5370-4a99-a30e-bcc8f4ce470e",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/egpzsvlqp6cgbctlc8g0gp05tf9kikhfri9h9ioeutgz90cqf52r7iquq2xc5q9il3m10he0l6txgl2yywv/5g1g71y46vd2mq3e2jwe2vdu5jhgflm07p6u6zfovlsr481jv9ehjybxqje87zt6d8e1m42cuxmrkg7x75w6zj5q04jhkois0f4q75bbjj7a2n4ne9jo39ftdsx2d449bo89ydwjinf3z/Bigender",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ee423463-5370-4a99-a30e-bcc8f4ce470e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.407599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    }
  }, {
    "id" : "5972343b-246b-482a-abd3-4af02757c974",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/840dksx33s8ka92kxifm2kc8b2y3ufif8li6b561ypsxcs64d42hpu01xpgofh2cgseta8uy9tgwut3wyat7d6lfqnqpvy0cfax44z1uk1fcc3f4g8csuef6hl/ci4ora9r680ej83zytoek41csyryj11iedfdz7c028ek7fx428nx70rmwy474ph5hpr8q8zbctytj/Female",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Shandi\",\n  \"lastName\" : \"Bosco\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.7438618448588121E308,\n    \"candidateName\" : \"2022-04-15T14:31:59.407003Z\",\n    \"probability\" : 2.0696946609058475E306,\n    \"predScoreFamilyName\" : 7.857217768874007E307\n  }, {\n    \"predScoreGivenName\" : 1.7654441037269848E308,\n    \"candidateName\" : \"2023-02-12T17:08:59.407046Z\",\n    \"probability\" : 5.657810059537154E307,\n    \"predScoreFamilyName\" : 2.0282617675490098E306\n  }, {\n    \"predScoreGivenName\" : 1.4627150835079026E308,\n    \"candidateName\" : \"2022-03-13T15:03:59.407089Z\",\n    \"probability\" : 6.928189555662608E307,\n    \"predScoreFamilyName\" : 6.691790044731491E307\n  }, {\n    \"predScoreGivenName\" : 1.5582935243728605E308,\n    \"candidateName\" : \"2022-06-18T16:33:59.40713Z\",\n    \"probability\" : 1.6201449304447726E308,\n    \"predScoreFamilyName\" : 1.2460478995276626E308\n  }, {\n    \"predScoreGivenName\" : 2.2369810494353376E307,\n    \"candidateName\" : \"2022-09-02T15:27:59.407169Z\",\n    \"probability\" : 1.286765399476459E308,\n    \"predScoreFamilyName\" : 1.6456898221090272E308\n  }, {\n    \"predScoreGivenName\" : 1.6570561053382445E308,\n    \"candidateName\" : \"2022-07-16T16:29:59.407212Z\",\n    \"probability\" : 7.914987100887557E307,\n    \"predScoreFamilyName\" : 6.616456491631386E306\n  }, {\n    \"predScoreGivenName\" : 1.081845086722552E308,\n    \"candidateName\" : \"2022-04-01T15:52:59.407254Z\",\n    \"probability\" : 1.5229369212061822E308,\n    \"predScoreFamilyName\" : 8.552545797605931E307\n  }, {\n    \"predScoreGivenName\" : 1.2659409131662592E308,\n    \"candidateName\" : \"2023-02-05T16:55:59.407296Z\",\n    \"probability\" : 1.5307445363870144E308,\n    \"predScoreFamilyName\" : 5.241422898440219E307\n  } ],\n  \"orderOption\" : \"wimbj39keva0gcctqdjeqczojhtlscq1iqhx0d8net7bq69333rtneb7dqyas32l8ckobimf7adg7ll13ehd5krjilmg6z4t2cnpwr6ql3r3j8dmgt60\",\n  \"id\" : \"298d\",\n  \"script\" : \"f8uju0x0uofrztbut1ykh6o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5972343b-246b-482a-abd3-4af02757c974",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.407531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "34a7581c-b618-46ff-9f3c-e714b66289be",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/o5cjsx2cii840hgmr94u71a60jmobgntq3ywxucqebby8ttj0sq9da7xqxcs/zh6oasmxj693c423vlvd0hfkix1idygp9egagk4z8xjfffytp37m67wxupbqncag4lv7frewwra8luylo4a1nf3ow7sl0ce5rqn430fe4pv5csr9fi7",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "34a7581c-b618-46ff-9f3c-e714b66289be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.406913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    }
  }, {
    "id" : "d789fcb6-1ba4-4d09-bedd-91151feef515",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/x99zoegsok2b2oo8r02w6aoal6ezk1hs9muymhe22zpvyayd9av86ooiu7xyn0lyy04o6v216buaxod1ypbde3b9q7g3ymt88bfcf7mdcpsuq1q72zhe2a5ojbrhqdovbppfy3vvkf4x2/wktrxn1e6oy4rxgf3pbanvyidihdszs0cf7j38wf31kr47isfodw237iqkspaahr63bgocw03m5lutfy01fyhbchamvuzbjd2ahk8e3xrtg7fab65494e0yjj60t25jcdlcuyb5c20fr42bwf0r",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d789fcb6-1ba4-4d09-bedd-91151feef515",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.406872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    }
  }, {
    "id" : "5a673221-a441-4bbe-867d-d8f363b409c6",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/6a7nc0ceknccfp6sd90iuv386v748mpdr0qobm8ufvzt36uqd8/1i4ba6r7oifwfi4g67oalbt1yx",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Barry\",\n  \"lastName\" : \"White\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.0565678109375199E306,\n    \"candidateName\" : \"2022-09-22T16:20:59.406573Z\",\n    \"probability\" : 7.123057059629298E307,\n    \"predScoreFamilyName\" : 7.825475609805838E307\n  }, {\n    \"predScoreGivenName\" : 6.434720220665869E307,\n    \"candidateName\" : \"2022-10-04T15:27:59.406616Z\",\n    \"probability\" : 1.4535147969626032E308,\n    \"predScoreFamilyName\" : 5.98496973250272E306\n  } ],\n  \"orderOption\" : \"785yn1qg8tyz16ih5z964gn5gmllu5a14avdbwirjronvw1v7gq7ysah463p8mznjgs5kyh0h1i08qn2ozoyfszxcwef657yz\",\n  \"id\" : \"7311\",\n  \"script\" : \"0h8d865u973xrab4l3r8afw4w2o9ugo4kjk41j9b5akonvx8ai3z7fv4l94exeulqhk02n434m18acw9bl0cc0s2nobi5j36b8vpqagnb533tl0ikx2db7bhbnh78\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a673221-a441-4bbe-867d-d8f363b409c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.406819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "eadc253a-c311-4fc0-ac49-346d5612daa3",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "eadc253a-c311-4fc0-ac49-346d5612daa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.406479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "46ad4a5b-f252-461c-8bda-33e44498e293",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "46ad4a5b-f252-461c-8bda-33e44498e293",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.406463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "dd2e4441-f22e-44a2-88bc-acda5e67fd91",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "dd2e4441-f22e-44a2-88bc-acda5e67fd91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.406446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "c436c6d6-ffb4-420a-bd53-37ac7f944ea9",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Yuette\",\n    \"lastName\" : \"Cormier\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.5443077817116748E308,\n      \"candidateName\" : \"2022-10-10T15:59:59.404089Z\",\n      \"probability\" : 5.851090762841438E307,\n      \"predScoreFamilyName\" : 4.639730098636814E307\n    }, {\n      \"predScoreGivenName\" : 1.7031160099815827E308,\n      \"candidateName\" : \"2022-05-22T16:15:59.404138Z\",\n      \"probability\" : 1.3536939274513918E308,\n      \"predScoreFamilyName\" : 5.603631098730848E307\n    } ],\n    \"orderOption\" : \"uv0b27b3mo9xi1twgbl6obhifs61ryczuawfdma0nlrr5wb35ksb2dzib872u8rnt7rv1nc6whigxakv2t8gim0etwlm1z2e2xp5jyahwz9ycfb20yknl7ttodxbkvyiadxrtnetgcv2hs0s7u298hx053brsgeq5ip9xuvzrr\",\n    \"id\" : \"x52n\",\n    \"script\" : \"vd42pvbo6u1gk8qy4bd4v6q3rd8swfv3lovm20kujjruc31sljgqmiq6ombfuzb0qvce0ri35oktypz64yzyk6qq3lm50cbfjry3rexyr7qf5v880shdon27q09yx881g7hdlem53fbp1p6p6veyqhlgza4qu12ooq4a86szf8x1z6wji05xnnsrvbrrt30\"\n  }, {\n    \"firstName\" : \"Consuela\",\n    \"lastName\" : \"Swift\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.419059305696174E307,\n      \"candidateName\" : \"2022-08-25T14:57:59.404338Z\",\n      \"probability\" : 6.11910377478256E306,\n      \"predScoreFamilyName\" : 7.79361629117831E307\n    }, {\n      \"predScoreGivenName\" : 1.0144298238139739E308,\n      \"candidateName\" : \"2022-08-24T15:48:59.404383Z\",\n      \"probability\" : 8.647368703204229E307,\n      \"predScoreFamilyName\" : 4.522343451357554E307\n    }, {\n      \"predScoreGivenName\" : 9.736737104998122E307,\n      \"candidateName\" : \"2023-03-01T15:01:59.40443Z\",\n      \"probability\" : 1.9947414183176213E307,\n      \"predScoreFamilyName\" : 1.3788597708418252E308\n    }, {\n      \"predScoreGivenName\" : 1.6581652154146357E307,\n      \"candidateName\" : \"2022-06-27T13:42:59.404475Z\",\n      \"probability\" : 1.1615671767778417E308,\n      \"predScoreFamilyName\" : 5.025352991073767E307\n    }, {\n      \"predScoreGivenName\" : 1.5739204053179794E308,\n      \"candidateName\" : \"2022-05-23T13:38:59.404523Z\",\n      \"probability\" : 9.637683322216774E307,\n      \"predScoreFamilyName\" : 1.3980232148533543E308\n    }, {\n      \"predScoreGivenName\" : 1.1369218666691155E308,\n      \"candidateName\" : \"2022-07-15T15:31:59.404567Z\",\n      \"probability\" : 6.179140488368936E307,\n      \"predScoreFamilyName\" : 1.7288033573570814E308\n    }, {\n      \"predScoreGivenName\" : 8.980860541274695E307,\n      \"candidateName\" : \"2022-10-04T15:45:59.40461Z\",\n      \"probability\" : 9.560600566230431E307,\n      \"predScoreFamilyName\" : 6.668204353331965E307\n    } ],\n    \"orderOption\" : \"cehxfogzc1ksp3j8v906x15re6lb7nx6v537pdusoaih369eozocfew34o9rh2xxbr6u0s8z9vmw6l0jjvv00wf4ty6i36\",\n    \"id\" : \"6502\",\n    \"script\" : \"smr6szxiuzmqd5iatlai9fi074kih6nni2789vqzaobw2ujp6e5ot4wqrq0f161uix8wh11h6nbib7b07ln6mc944qw6w05k5o82gxmfpq568kjet105smncy9e1xotajb5u2ghykiu2m3hh3gejzbxfy74mshrzf68obe3\"\n  }, {\n    \"firstName\" : \"Toby\",\n    \"lastName\" : \"MacGyver\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.902307593181576E307,\n      \"candidateName\" : \"2022-11-01T14:06:59.40481Z\",\n      \"probability\" : 6.17282807320137E307,\n      \"predScoreFamilyName\" : 2.51873276814257E307\n    }, {\n      \"predScoreGivenName\" : 2.1590184640664216E307,\n      \"candidateName\" : \"2022-09-06T16:56:59.404855Z\",\n      \"probability\" : 1.2408733840045657E308,\n      \"predScoreFamilyName\" : 4.351912590993113E307\n    }, {\n      \"predScoreGivenName\" : 1.2856091744210225E308,\n      \"candidateName\" : \"2022-06-11T15:07:59.4049Z\",\n      \"probability\" : 8.800147451786418E307,\n      \"predScoreFamilyName\" : 6.65348096012375E307\n    }, {\n      \"predScoreGivenName\" : 1.221025726328518E308,\n      \"candidateName\" : \"2022-08-05T15:45:59.404946Z\",\n      \"probability\" : 6.418870118859457E306,\n      \"predScoreFamilyName\" : 6.066446904913961E307\n    } ],\n    \"orderOption\" : \"x33cx8mpxza5p7nxvoebdfqrygg6yseltr0ss6iv9b5a5t9pbkzyzix34cnh4s9cq7n664ke6n4ht1lb699gi0fnd2f17587sfh1nr3bx1ryo3vg3lwyh5sra4254533pwynv3v218xmcb4hi30zydcqiidertix00xh2\",\n    \"id\" : \"502n\",\n    \"script\" : \"e1zf2tjod9gzbh0u62rrer4r3douxyn272dzwiovv2k2te4eayxycoxxd3wedujvbivjw824i3phgadhr3g3gh8r9kwh677wi545soknkcc5a5g35xx1xhyw3u6vbs2r8nqs4\"\n  }, {\n    \"firstName\" : \"Mason\",\n    \"lastName\" : \"Heidenreich\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.4701702142227207E308,\n      \"candidateName\" : \"2022-08-03T16:56:59.405143Z\",\n      \"probability\" : 4.739330790499565E307,\n      \"predScoreFamilyName\" : 1.6809732644869168E308\n    } ],\n    \"orderOption\" : \"sg5ltzbhs5fq3q4uazozuqtdsr0cxysjvp84icsw0wqby2959nr0e5x\",\n    \"id\" : \"0x23\",\n    \"script\" : \"qrsk1tj4sat6ojd3d0omcblvdsnt9qm2b57pdcmwuzjwe115yjgva9xztm889omt0nlb7e99hos84ommkg8uc03t8366x4tcw7ouik8ygd\"\n  }, {\n    \"firstName\" : \"Sherwood\",\n    \"lastName\" : \"Kilback\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1503415202606946E308,\n      \"candidateName\" : \"2022-11-08T14:08:59.405339Z\",\n      \"probability\" : 6.045518162010735E307,\n      \"predScoreFamilyName\" : 9.791299753867403E307\n    }, {\n      \"predScoreGivenName\" : 8.403947306350446E306,\n      \"candidateName\" : \"2022-09-04T14:15:59.405385Z\",\n      \"probability\" : 1.5126992745437303E308,\n      \"predScoreFamilyName\" : 1.048389829050476E308\n    }, {\n      \"predScoreGivenName\" : 1.2953356091113869E308,\n      \"candidateName\" : \"2023-02-17T14:29:59.405431Z\",\n      \"probability\" : 1.0072048190998297E307,\n      \"predScoreFamilyName\" : 9.670557761181629E307\n    }, {\n      \"predScoreGivenName\" : 6.367729410002175E307,\n      \"candidateName\" : \"2023-02-13T16:49:59.405475Z\",\n      \"probability\" : 8.754344038815325E306,\n      \"predScoreFamilyName\" : 1.2154897726863544E308\n    }, {\n      \"predScoreGivenName\" : 1.4078256263040635E308,\n      \"candidateName\" : \"2022-03-16T14:54:59.40552Z\",\n      \"probability\" : 5.591885094164648E307,\n      \"predScoreFamilyName\" : 6.046359224701868E307\n    }, {\n      \"predScoreGivenName\" : 4.3673982944070723E307,\n      \"candidateName\" : \"2022-12-12T15:46:59.405567Z\",\n      \"probability\" : 8.250493224911424E307,\n      \"predScoreFamilyName\" : 1.3032383207627383E308\n    }, {\n      \"predScoreGivenName\" : 8.793448282141654E306,\n      \"candidateName\" : \"2022-12-11T16:42:59.405614Z\",\n      \"probability\" : 1.6331559958676344E308,\n      \"predScoreFamilyName\" : 1.0151883960098666E308\n    }, {\n      \"predScoreGivenName\" : 5.79037593636696E307,\n      \"candidateName\" : \"2022-11-08T16:49:59.405659Z\",\n      \"probability\" : 9.008479433317567E307,\n      \"predScoreFamilyName\" : 1.6741170129743953E308\n    } ],\n    \"orderOption\" : \"c3ns4630i1tumwn1eq5aa58mu4ndoyny5v7baxqif9hnwomehx8qg9irijixb2itn4x99980k0141qu9z1gjmpqbjfo7v6g0nojij5ufvjx0d9f1ueswdzza61fyx2gfpek88t4jtg5bdawv026hwjyk0rtf3tfdc63emvdj1x5uwhtn\",\n    \"id\" : \"74mn\",\n    \"script\" : \"oupcifv501col8xmj8ij8cshzs9rjeo2ap4sowsunalczq41z1wlzkvk9txnyei2ae6p8vfk9hq78te\"\n  }, {\n    \"firstName\" : \"Gregory\",\n    \"lastName\" : \"Bashirian\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.305325769752003E307,\n      \"candidateName\" : \"2022-05-12T15:01:59.405859Z\",\n      \"probability\" : 5.372173033996261E307,\n      \"predScoreFamilyName\" : 1.416614494092018E308\n    }, {\n      \"predScoreGivenName\" : 5.988304864339043E307,\n      \"candidateName\" : \"2022-04-20T13:59:59.405905Z\",\n      \"probability\" : 9.99946528301041E307,\n      \"predScoreFamilyName\" : 5.110771404623077E307\n    } ],\n    \"orderOption\" : \"qiddeqkegsz5g1zkky9l5itk9i3h95npll571q3blqelpn7vlaxmkldgo0bg73dlecnwyshmr1ojc0rdaoetvw67z8xlefqr420mktuf08i93oobao8ppitbbb8q5ggqf8rjgr2if0054bh5m5e44tsr6xd59as6zll4u4281h9lsh52gohpepcgexgjey6\",\n    \"id\" : \"4739\",\n    \"script\" : \"d24mecnz1u3slafpf5l8w0xv7thh27auanfuoh94wju4al4u0hzpfdnp6kfh5l22wo89mkz8yth5cfpqxf9ly32v6x78ddhsw0s9v90uxnjzmley57zm94aqn9we52hr5s3txsf7zyslf6f1ose54yeyjkf3fwss30jsyte6jymdqy\"\n  }, {\n    \"firstName\" : \"Evita\",\n    \"lastName\" : \"Ryan\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.791280224619544E308,\n      \"candidateName\" : \"2022-09-27T13:47:59.4061Z\",\n      \"probability\" : 1.968378779293022E307,\n      \"predScoreFamilyName\" : 3.2151188655964464E307\n    }, {\n      \"predScoreGivenName\" : 9.27024938294493E307,\n      \"candidateName\" : \"2022-08-07T14:00:59.406147Z\",\n      \"probability\" : 1.5215453116099487E308,\n      \"predScoreFamilyName\" : 3.994423136405286E307\n    } ],\n    \"orderOption\" : \"qaz0h9osn90n4zq0cj3a55a6jvre5ouxiui7ctt5ezii65bhjwosvmqyfs200jlps2ucijhllcrdne0mbt9906oi1w9fnqr4yvz74uhb7yyia1reg40j5lwzt90vf2f3f928ket4a9zqriyqqp7g9399vpwpzi19icaf\",\n    \"id\" : \"nl6z\",\n    \"script\" : \"xt7fwlksqri0wo1pxdozqbikydbf6dlbalwycpyi739jtt7et77vfld2yucttoxm36lbcocggt5w246tr9cyvu8u5i1rajhd3lf6cv071pzxsfjhua09rthtyk8naslwma6j3b4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c436c6d6-ffb4-420a-bd53-37ac7f944ea9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.406412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ed4e7d11-c810-4360-bce6-6e5a451ddf0c",
    "name" : "Infer the likely gender of up to 100 full names - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ed4e7d11-c810-4360-bce6-6e5a451ddf0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.403982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "55b6be0a-d319-42a8-81d8-0bb0933c37dd",
    "name" : "Infer the likely gender of up to 100 full names - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "55b6be0a-d319-42a8-81d8-0bb0933c37dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.403966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "78a05ac2-f817-4a77-9c33-e7ac33593b46",
    "name" : "Infer the likely gender of up to 100 full names - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "78a05ac2-f817-4a77-9c33-e7ac33593b46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.40395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "8e9dbdce-eb8a-4751-b9c2-78406fb517dc",
    "name" : "Infer the likely gender of up to 100 full names (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.7041076388431535,\n    \"score\" : 37.08877399857151,\n    \"probabilityCalibrated\" : -0.6487353054941876,\n    \"name\" : \"Kenny Rodriguez\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"iccu\",\n    \"script\" : \"3knv4f1o7uvmw0ibmzuyrybacfoztt7p41ybhheoxq6ikejk2yie5yqzh75jsea59ba0o1dx1xy3rqcvks3gjmysxutuofyoayz9n2quyywh694fhlshix7c0up\"\n  }, {\n    \"genderScale\" : -0.6859899012160928,\n    \"score\" : 65.26708353002297,\n    \"probabilityCalibrated\" : -0.7611126851077601,\n    \"name\" : \"Norman Lindgren\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"0m52\",\n    \"script\" : \"3gdjnn735ku13fs0\"\n  }, {\n    \"genderScale\" : 0.08101363719023347,\n    \"score\" : 37.93870694144537,\n    \"probabilityCalibrated\" : -0.21412472603255206,\n    \"name\" : \"Angelia D'Amore\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"45nr\",\n    \"script\" : \"8y8abf614aivj74qynnprqf5fs4p7910gyjlnuf1o5rno4exfyz6gsmew5mnxwulba5tqb6aj54md9zx876sp2epmxlde89y4i3wvfnkliiluu4ve7d9o82iajl4cuky8p\"\n  }, {\n    \"genderScale\" : 0.9342937992862264,\n    \"score\" : 68.93502059124968,\n    \"probabilityCalibrated\" : 0.7500431047474638,\n    \"name\" : \"Shelton Waelchi\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"qsbo\",\n    \"script\" : \"ke8\"\n  }, {\n    \"genderScale\" : -0.18231781799932212,\n    \"score\" : 13.630903065626809,\n    \"probabilityCalibrated\" : -0.12225007037887092,\n    \"name\" : \"Sheldon Casper\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"imka\",\n    \"script\" : \"8slss9lev7l6grs7341v3k0b4w165r\"\n  }, {\n    \"genderScale\" : 0.5545610612798084,\n    \"score\" : 82.46304130717358,\n    \"probabilityCalibrated\" : 0.31763912771797576,\n    \"name\" : \"Alvaro Hermann\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"3721\",\n    \"script\" : \"docajt4slkz0ilnp38s5wqlim4hrw00d24x6gdwgx55ifpn5c7kmc0qxqpfdpsuvj6ltdl0misw2m\"\n  }, {\n    \"genderScale\" : -0.16850620266374072,\n    \"score\" : 38.974826625079196,\n    \"probabilityCalibrated\" : -0.2820624597545309,\n    \"name\" : \"Iona Johns\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"e705\",\n    \"script\" : \"qnso9ucivc543gp7jal0l4iy2f9i19vqqb92lmx1behyoji72d9a9k11oq2qt3tyd663rar33aupfuakmfvzxhkxcfbo1xs6neyfe6bubirwlkdmwyqspmjzx8hg2jg75jtmbgqo8c03\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e9dbdce-eb8a-4751-b9c2-78406fb517dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.403919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8cade26e-fcd2-4e5e-93ab-59d527d7d721",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Lisa+Pacocha+Sr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8cade26e-fcd2-4e5e-93ab-59d527d7d721",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.40284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    }
  }, {
    "id" : "c70afc43-f555-47a3-9bbd-a22079cb786d",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Mr.+Sharron+Nicolas",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c70afc43-f555-47a3-9bbd-a22079cb786d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.402778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    }
  }, {
    "id" : "e58f6b80-3e43-4349-a570-c6bd1231b640",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Vinnie+Bode",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.6572564040791276,\n  \"score\" : 35.025310737297964,\n  \"probabilityCalibrated\" : -0.06902587888751421,\n  \"name\" : \"Violet Bechtelar DVM\",\n  \"likelyGender\" : \"male\",\n  \"id\" : \"s698\",\n  \"script\" : \"0adt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e58f6b80-3e43-4349-a570-c6bd1231b640",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.402697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b5dc1576-d5e1-4329-9e6d-a137d9df1bda",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b5dc1576-d5e1-4329-9e6d-a137d9df1bda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.402409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "af3ee91d-49dc-444e-a4fa-4e7265846169",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "af3ee91d-49dc-444e-a4fa-4e7265846169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.402394Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "1984f259-0cfc-4a21-8c2c-d518f24ee45d",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1984f259-0cfc-4a21-8c2c-d518f24ee45d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.402377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "e3478db3-bd5c-4599-98ca-78768f098f9e",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Brain\",\n    \"genderScale\" : 0.9597058127138716,\n    \"lastName\" : \"Abshire\",\n    \"score\" : 6.220601155028637,\n    \"probabilityCalibrated\" : -0.04239233602326342,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"8662\",\n    \"script\" : \"l2h2wddyxysh7hjk5y1wjakdmcip905pvvtsnk2y3fddmh2cl8ol7tu96o7l2r7ke4j4qx7ni1u3pxzu3oktet7bxceiqsbe885tpwz063\"\n  }, {\n    \"firstName\" : \"Roy\",\n    \"genderScale\" : -0.8373370593127694,\n    \"lastName\" : \"Heaney\",\n    \"score\" : 96.13815033579937,\n    \"probabilityCalibrated\" : 0.869729507375901,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"dv86\",\n    \"script\" : \"5opcg398nlw8wjcm9os\"\n  }, {\n    \"firstName\" : \"Lynn\",\n    \"genderScale\" : -0.897134310529897,\n    \"lastName\" : \"Doyle\",\n    \"score\" : 86.41741964779813,\n    \"probabilityCalibrated\" : 0.8329143413481888,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"33l5\",\n    \"script\" : \"qn1mirtb1wwseo5qprkpjksa6s3ems8a2eof6n7kbcpe6vs6qgwvctd3p868bw3q23afmm0g1ma5mrf05gkvj4fer47vnlsf9orjtx0h8t7zf8fg6ja3ocjq08hyim7s46iuxn70rewud9vkct4x8prdfvhu5wpqm0w8ts6wnug0dq72by7gdzl48fnomxx\"\n  }, {\n    \"firstName\" : \"Scott\",\n    \"genderScale\" : -0.2802947976143204,\n    \"lastName\" : \"King\",\n    \"score\" : 5.349864875856225,\n    \"probabilityCalibrated\" : -0.6537091566449897,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"p17q\",\n    \"script\" : \"qgui4c8yx3vl5xt8vpt5vblk44yjlga12qbaovgqx4hrruomcui1bpql2v4znvne2nlch2u4rqxk\"\n  }, {\n    \"firstName\" : \"Shonta\",\n    \"genderScale\" : 0.8124458675020818,\n    \"lastName\" : \"Greenfelder\",\n    \"score\" : 19.382071273276868,\n    \"probabilityCalibrated\" : 0.9409094715072883,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"34ts\",\n    \"script\" : \"ukxpyoo14lu85o2xk3x9wxfojf6xzt02xh8cowww4qnsphip87tpohvyp4qljh22iaulfouyawv6qukyzs9tne715bcn2554pludq8cbk1bo9hcqjj658xdp2kyatq7nz30a73sqp76x57lx7iftsqzh0fn24vx0ygcvk64ppgo58u5lvekev37ejokrz\"\n  }, {\n    \"firstName\" : \"Agnus\",\n    \"genderScale\" : 0.9370568706876341,\n    \"lastName\" : \"Jacobson\",\n    \"score\" : 65.07362962554998,\n    \"probabilityCalibrated\" : 0.8928664512102928,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"3iat\",\n    \"script\" : \"l3cua4reel1hxibjtap4m8mk8sn6jn6xx8ne05g3iyw4lc6l9f8s260d800w\"\n  }, {\n    \"firstName\" : \"Antwan\",\n    \"genderScale\" : 0.8570746220485073,\n    \"lastName\" : \"Mueller\",\n    \"score\" : 58.09712308157759,\n    \"probabilityCalibrated\" : 0.8688020331109079,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"588e\",\n    \"script\" : \"n4mcy37y98y27nbga2z3p72r1b4ctj5hk0u3drmflg1nb84qxf2baok2mw9ib5sy132t9afum39ci99n9wbqwdyip6thh20da8yrgv7r0laehyqkzqjt94gyeejh4k64\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3478db3-bd5c-4599-98ca-78768f098f9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.402346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "f147bb9f-409c-42d4-bbe2-70ba403cee15",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Pfannerstill/Danny",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f147bb9f-409c-42d4-bbe2-70ba403cee15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.401161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    }
  }, {
    "id" : "55b9f1f1-642f-4e8d-89aa-48753605aa4e",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Haag/Orpha",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "55b9f1f1-642f-4e8d-89aa-48753605aa4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.401095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    }
  }, {
    "id" : "1dfd6dc6-3bf5-4760-99f8-252bc87e688e",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Stehr/Carmine",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Vera\",\n  \"genderScale\" : -0.46648036973600426,\n  \"lastName\" : \"O'Reilly\",\n  \"score\" : 58.66449658137467,\n  \"probabilityCalibrated\" : -0.898791889422379,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"4w36\",\n  \"script\" : \"j2r1d71xq7c0r5qoc8fogjhrairj4h2xfw8xrpp28z76u01t9a48mf32zmlnar9slq6i1xlnmk18naxdzmokz36xuuvko5rfzueqla55zowymdyhex4hjivkb6ueuvrw8i2k388eltqywrjpdr2hjwacup89xuev0rv46vnm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1dfd6dc6-3bf5-4760-99f8-252bc87e688e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.401011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "721004bc-4729-4099-825b-c470f59e36b3",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "721004bc-4729-4099-825b-c470f59e36b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.40064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "e7d59ae7-7d40-44c5-a97d-8bb59964e9a3",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e7d59ae7-7d40-44c5-a97d-8bb59964e9a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.400601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "0dcc0695-64e8-4df4-8b3f-cd6b0f326314",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0dcc0695-64e8-4df4-8b3f-cd6b0f326314",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.398977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "f0d1677b-9ab3-4b84-b412-c46e91bc6fc1",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Assunta\",\n    \"genderScale\" : 0.7688774724783729,\n    \"lastName\" : \"Marvin\",\n    \"score\" : 61.01098373125564,\n    \"probabilityCalibrated\" : 0.8120991142771483,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"liq8\",\n    \"script\" : \"4l9s9f5u9qzju8kq4suw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0d1677b-9ab3-4b84-b412-c46e91bc6fc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.398951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "478f8dcd-5e30-4ef2-9f04-3c4893bf2af2",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Marvella/O%27Reilly/ii8zs",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "478f8dcd-5e30-4ef2-9f04-3c4893bf2af2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.398744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    }
  }, {
    "id" : "04bda998-d059-4e1d-b7fa-d406678ee7e8",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Warner/Ondricka/3rzvm6mnqoqdwammlbx7huogby9ujng7",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "04bda998-d059-4e1d-b7fa-d406678ee7e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.398673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    }
  }, {
    "id" : "c222ba92-a443-453a-aa77-49bae889f97c",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Matthew/Kshlerin/lwoxkt9le3mjtmenazej9ioya593o6xtlx28ukzgxa0t9vwat5ac2qyz6ujta0yrg6qxephd4ro74jz99bap99hml82ofvwz2om7rjzpf6m0ixzfmjhfsbq55pskhlahv34o5q8ciijslpzlkx7c30w8v2bp8o6of20btil",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Soledad\",\n  \"genderScale\" : 0.5473965345503693,\n  \"lastName\" : \"Strosin\",\n  \"score\" : 87.28806673790945,\n  \"probabilityCalibrated\" : 0.7116380645632285,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"29l5\",\n  \"script\" : \"s4rq589vrpmcw75my42112fz2xe596468l82w3y8s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c222ba92-a443-453a-aa77-49bae889f97c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.398571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2f9b7d6d-a335-41e5-99b7-f4fc91afd4cb",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2f9b7d6d-a335-41e5-99b7-f4fc91afd4cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.398283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "f9c7b5c1-4d7d-466b-b74e-009fcd5c8735",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f9c7b5c1-4d7d-466b-b74e-009fcd5c8735",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.398267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "90153122-a3e5-4160-aab9-2037f80d25ea",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "90153122-a3e5-4160-aab9-2037f80d25ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "d5153398-f1f6-47aa-9e39-fad828015c9f",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.00985286460826651,\n    \"score\" : 2.7982753476417432,\n    \"probabilityCalibrated\" : 0.06907542531315092,\n    \"name\" : \"Lashell Cronin\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"y7wk\",\n    \"script\" : \"c4indfvxt8rdwj74c0ms9zd36v56jfp7ax9hjd97yy5g0cxm2i9c72fjywribcs6mo99\"\n  }, {\n    \"genderScale\" : -0.9316624768615938,\n    \"score\" : 56.60277159390851,\n    \"probabilityCalibrated\" : 0.23997606899843138,\n    \"name\" : \"Sunny Deckow\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"on4k\",\n    \"script\" : \"kt1qgdf1tem1p\"\n  }, {\n    \"genderScale\" : 0.26748589064628403,\n    \"score\" : 41.991805516573585,\n    \"probabilityCalibrated\" : 0.7720820736565674,\n    \"name\" : \"Ms. Fernanda Schiller\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"5ae6\",\n    \"script\" : \"voizu2\"\n  }, {\n    \"genderScale\" : 0.7225131823012738,\n    \"score\" : 32.538758083095296,\n    \"probabilityCalibrated\" : -0.9855384210779534,\n    \"name\" : \"Carey Schneider\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"9yt7\",\n    \"script\" : \"7ocybspa3j2uystz4ytgj7ax969achf3\"\n  }, {\n    \"genderScale\" : -0.38765585826459614,\n    \"score\" : 84.65154292882542,\n    \"probabilityCalibrated\" : -0.10626620092551375,\n    \"name\" : \"Vashti Erdman Jr.\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"1rgf\",\n    \"script\" : \"vft98e91xgjcbjmoz20rrzujpwjjipxtmi9g8aqt5yu97ac992uzeiyfmkdq4qp2y9caff7xkqnrnmzg5d60e71t01vgcelo84sk71k6e03xdggp63nc2bj9mgyccnoks9m5ydybmn6sgga2mz0lfv6z9gpnbg6cadn3yhtsdz38simpmxtne5k8h\"\n  }, {\n    \"genderScale\" : -0.8571154079184609,\n    \"score\" : 40.739384019402344,\n    \"probabilityCalibrated\" : 0.9556967677496935,\n    \"name\" : \"Ta Lindgren\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"jq4x\",\n    \"script\" : \"jnmyyun2vaye5ftp0w0eulq0mqj1oqif8my9fu9psnwf00p95v6u98wcsvmrkyd1ifc495jbhfl7uhfv\"\n  }, {\n    \"genderScale\" : -0.29453958764958044,\n    \"score\" : 74.36365523003923,\n    \"probabilityCalibrated\" : 0.40317206225840363,\n    \"name\" : \"Amos Fadel\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"thc0\",\n    \"script\" : \"tf8kgd5y3sw4sw1rltyx8uf5eb8tqpuytskr3gyry57pgar5ruj5kypq8y92nju43l4ndz6assf8r1q029y9dwthfdhk5resrfvfysn5pok9ab23pracqzzuws7tip0ze2tpq1bo2298dqbfgzg9t6v7y\"\n  }, {\n    \"genderScale\" : -0.18728973701040075,\n    \"score\" : 92.42761298638811,\n    \"probabilityCalibrated\" : -0.6102032779357407,\n    \"name\" : \"Nicholle Gerlach\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"8eq0\",\n    \"script\" : \"gp3y01cd7axrv38lxmo7lb0b4mjb0kqfl6xgplk0hmeeo8tdu1u91p4y47bacjmtvw7rxr4rbc3ksi32rv96ypeidk7omse5cj4zklx5c0p7p463cf5mwahf7c4h17tgb25seydj1egxx1mcuqn1zkvmikkzfd7l1mtyq3p3slf488zag0vva4vev8btu\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5153398-f1f6-47aa-9e39-fad828015c9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.398218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "4eaa866c-30f1-499c-a617-b9336293ff49",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Austin+Hansen/q6bp8zzo81fgtcj5pzgxvi066rupcp5pl2kjrc54ufi4xlpqrbcshzxf5r0so6recyfow3pyna4gom7n5k35e924cqfvcz6seet27kwvuliuih5gimgosu15wfx0tazwc9xfkz3yfescj8vjnjd",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4eaa866c-30f1-499c-a617-b9336293ff49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    }
  }, {
    "id" : "a13c3b19-7b4f-4796-b6ce-e5eadbd1d805",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Milan+Keebler/73fxmnnkshy0mmqh700iecml5y8s5p89",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a13c3b19-7b4f-4796-b6ce-e5eadbd1d805",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.396917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    }
  }, {
    "id" : "a62dee95-8a8a-49df-bb84-23eb59ff4678",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Talisha+Beier/4dl5myh7xcjz7gg3s3oy6908t6i9axg7hnm7xa2qyj599fp3mvdf7rq1tvki66kgioml28xx27sj3jxvuope0sbf30hae2tgi6hutl7nnlcxn8bwbv91l4lqcjkcruzbxssm1ce",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.119071036602858,\n  \"score\" : 75.37829063450185,\n  \"probabilityCalibrated\" : 0.6768595433812943,\n  \"name\" : \"Bernardina Hettinger\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"uw9t\",\n  \"script\" : \"ey1mqxizqqbhphpabi801byjq9ifw3l1gigz7hc0ffc3rjdjn9f3v5z7yw9fzbtmttv1tq8a4ewi3ou5zrf9p73sthlztpqghdxj4yq9p417502brlkdehb7pp7bos628uqiksdqtpleiegydrh4mn6qquzmvo3chdlihf57pryn44psj0s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a62dee95-8a8a-49df-bb84-23eb59ff4678",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.396845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "40835e7f-41e3-42c0-8511-138024d2ccb8",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "40835e7f-41e3-42c0-8511-138024d2ccb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.396575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "22c452e6-3ea8-4137-9672-9941e562c08f",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "22c452e6-3ea8-4137-9672-9941e562c08f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "3eecb3b0-e24a-4a97-ad32-6c9676ee380b",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3eecb3b0-e24a-4a97-ad32-6c9676ee380b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.396543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "83d98e59-02b7-4d30-a12f-bd2b3282892b",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.8414218556612061,\n    \"score\" : 4.559877666732792,\n    \"probabilityCalibrated\" : -0.7509282198601357,\n    \"name\" : \"Eufemia Adams\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"op91\",\n    \"script\" : \"6t850ckfc4ptd9ka0w3ovua0yban5km1scboztpyt4g0nzxt3p\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83d98e59-02b7-4d30-a12f-bd2b3282892b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.396517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1a462086-fec8-4771-880b-26a3aa5793ac",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Miss+King+Douglas",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1a462086-fec8-4771-880b-26a3aa5793ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.396322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    }
  }, {
    "id" : "8ead994f-122a-4eac-91bc-34ce7017a9bd",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Tory+Wiza+IV",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8ead994f-122a-4eac-91bc-34ce7017a9bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.396266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    }
  }, {
    "id" : "e26c673f-0903-4465-b3a3-f0ec2e546226",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Lucas+Howe",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.5916335300458986,\n  \"score\" : 27.121062610639424,\n  \"probabilityCalibrated\" : -0.6643791629451326,\n  \"name\" : \"Marylee Borer Jr.\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"4ka4\",\n  \"script\" : \"rnva70nlvt2fuwjbqpz33q6xamiw9tnog9hft6zb1qqtcj28bjvs178zvplpq4cgnlo0hi1lfk7fcq56pipqmg8m6uwhmsnsdz7chm7z841uhxw5wdmu77kw7nj0iysrd83suszp98mpd7416wmnaqyop2qda6b1zrbnwlfg5fjpq2ktpcp5o21msj4xqjt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e26c673f-0903-4465-b3a3-f0ec2e546226",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.396198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "fa12f2d8-29d0-4ce9-827c-9f65d9a21cb3",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fa12f2d8-29d0-4ce9-827c-9f65d9a21cb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "bca0915a-e503-415e-af8a-4459b8f04413",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bca0915a-e503-415e-af8a-4459b8f04413",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.395915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "cd681921-edf3-4dd7-86f0-9f7fbdc3d9a7",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "cd681921-edf3-4dd7-86f0-9f7fbdc3d9a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.395898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "b047aa2f-1992-4b84-b61b-dcf88cb07173",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Delora\",\n    \"genderScale\" : -0.7522953490141424,\n    \"lastName\" : \"Shanahan\",\n    \"score\" : 56.72554434757024,\n    \"probabilityCalibrated\" : 0.4945810040820884,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"t11s\",\n    \"script\" : \"nwj0phof99gw9gm9efi0bzp27y57\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b047aa2f-1992-4b84-b61b-dcf88cb07173",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.395869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5a6f292d-6279-431c-8c49-74388b741a6b",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/1t47lrgolvfcbshn4zdcbikovcunamtcmo7pcobvn3n7fta7gkxgbi04vg2dobdwy05l55tg2fdl1ratt9j5qvwkupakguvm50kzssx8h33m7gmjgcvlqy1sfk8ol71pklumemr12mfh/r7qrgjasctxo6anat1gfy240tqxrjezbtvf8a32t4tigtjsg8tti9ynmvj3u18udpctqq9u4tg",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5a6f292d-6279-431c-8c49-74388b741a6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.395544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    }
  }, {
    "id" : "fcd9d514-baaa-4264-933e-44e20bb7c0c2",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/mrv2wp14x6m7hckxvj3vy01xqm08ubghy2sws0er66gcn51lpdimu0dqz3bb7fztmheenzbbnw9rrkjw05wn7ug61lv6xlxkybugritsg1c/vc9alfxlhahtayft2ho64vyq1firez2hc93reep70kkcw5b0bk84yj4b7zxobrmw662bq954xo8fiscsj4m2hyfhpqnznvg11m1ydr80ove2k09zxtwmtyn5q4irdxp80uufzybkogipnq7zustiys1tqgg9prkyoxv3d9hye5f4tcd4ahkjt14vf",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fcd9d514-baaa-4264-933e-44e20bb7c0c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.3955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    }
  }, {
    "id" : "2c761da0-8585-4f0a-93ab-75f6060b2c03",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/edqgw2alxz80op5p3g7fi0ye4mkm2mu93ob/6ndskwzf7bx1w7d1qrocl2pcqdgebudy5x9teu6ri687tf9o6cqhsuhd6la6ymy1naa7708astuuj1cnrdtdgopckjlmjac5zdu20ztgm7zfddvuln00ydrbfuptbukwva5x8o8io4wa0",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Kory\",\n  \"genderScale\" : 0.5136429836494998,\n  \"lastName\" : \"Kassulke\",\n  \"score\" : 38.83457790792999,\n  \"probabilityCalibrated\" : -0.27364674089687124,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"45f6\",\n  \"script\" : \"0ac836x5y6a9tcefrj8dqv91z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c761da0-8585-4f0a-93ab-75f6060b2c03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.395439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "df3d605e-803c-4869-90c6-f6ac87c9a2af",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "df3d605e-803c-4869-90c6-f6ac87c9a2af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "d370437f-f02f-4221-b6bb-3fd680abc941",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d370437f-f02f-4221-b6bb-3fd680abc941",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.394895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "bd3d99fe-380e-4592-b599-92f6c32f9cc0",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bd3d99fe-380e-4592-b599-92f6c32f9cc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.394878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "0643a18e-0544-4602-a0d4-236f0f6e7060",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.2689905825697845,\n    \"score\" : 4.113838458437313,\n    \"probabilityCalibrated\" : 0.613829246584132,\n    \"name\" : \"Garrett Koss\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"up2l\",\n    \"script\" : \"155qbdu9yyvyjtqo0mzelbsfngsoyoy72k79agu6689pbelkhuh18vges7hz0ulyn1glee4splfm0qfuaixjj745rb0nix7d20gugy7k49whg9syopug80zy7c525xbnwgiob8b4ikyajrnxrfzkhklzlh41kyar4esv649yt0vwb88aupym5d7bs6x4\"\n  }, {\n    \"genderScale\" : 0.8445825795935196,\n    \"score\" : 34.912728404015695,\n    \"probabilityCalibrated\" : -0.12197428232919738,\n    \"name\" : \"Cedric Leannon\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"sem5\",\n    \"script\" : \"mfmgmwmcokletzh8kfs0hmwfmm2xt805rwdy9tfumhssp3qphwevum0y3gm4mgi84qu4nlrzukqm87sio9wgx67yaejut99lha24zrtbubv8ren48mquzjos8qdp9nj12pv8p7z3v0o698dr6aw4ej47ti93qas7rgzn6hdfp0bcai02rbngqk\"\n  }, {\n    \"genderScale\" : -0.7962480554175855,\n    \"score\" : 8.39087953462878,\n    \"probabilityCalibrated\" : -0.48638923189669536,\n    \"name\" : \"Jonie McLaughlin V\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"76ye\",\n    \"script\" : \"r5v1lxjfdxqtt0060opm512ilyq6ft4uum0znmwj2ed7cjv2rkqz63j2ninscy2bqjk8xyej02kn0u0dlermders20p13lk8nek2dh18sjozvmscx8lbhf\"\n  }, {\n    \"genderScale\" : -0.7955411363384772,\n    \"score\" : 81.3618025694152,\n    \"probabilityCalibrated\" : -0.8678166157214322,\n    \"name\" : \"Miss Mitzi Bradtke\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"3ta8\",\n    \"script\" : \"9tub4uwneq8ub85kyr8fed42jnttxk8kgvvtxjppm3crejhefauo7hjr582r9gsjpxye73au51jc7lgavnvjvknpsnotl53fmmj8fcaqlnqf7azmvel0bwcvru85afssdbnd9otz4u4i\"\n  }, {\n    \"genderScale\" : 0.903470687948998,\n    \"score\" : 45.73791096613591,\n    \"probabilityCalibrated\" : 0.284627301890938,\n    \"name\" : \"Rico Wolff\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"y70e\",\n    \"script\" : \"xzgl39nm5t6w4y56pg6blmh4lpm4cv4kpq9oh8kf6weqzoj8ds93i4nbs5zkc4c7iev6aqu4lemk666davc4\"\n  }, {\n    \"genderScale\" : 0.4942890716866428,\n    \"score\" : 52.06541240570529,\n    \"probabilityCalibrated\" : -0.023951952436364055,\n    \"name\" : \"Thanh Dach\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"b293\",\n    \"script\" : \"29rcg62yum7bhi55e2fn9vos4pfnxyja23jw00ipy\"\n  }, {\n    \"genderScale\" : -0.5817253709862198,\n    \"score\" : 56.758889105663215,\n    \"probabilityCalibrated\" : -0.05629384241984581,\n    \"name\" : \"Isiah Waelchi\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"ebmd\",\n    \"script\" : \"k6dgnquurftfgeb2wjyqbkhdcvo9gtfyk0h4zqof147iltpw6312oo75qvvt0mcxpvw2i3nt5b1g17hlvx5erzgm95sexp1km6qlsovu7zzctmksxi96qkgjmfz7lpuh8aaqdqw4ao435n1vf9md6gos3978elbmyxlg5ie1ee8csi7omb8rffal\"\n  }, {\n    \"genderScale\" : 0.32043480526640145,\n    \"score\" : 10.073422740468008,\n    \"probabilityCalibrated\" : 0.12266018242513077,\n    \"name\" : \"Ms. Shaina Adams\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"q20e\",\n    \"script\" : \"9p6eh0kmvgx56vcr1hcswz3llj104lmcz64bfdmvcavlnln7ix2pgm9xschz2oz0xiexfhu\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0643a18e-0544-4602-a0d4-236f0f6e7060",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.394838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "fd3e9c73-5bc9-4eae-8005-d988d299a70f",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Warren+Gulgowski",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "fd3e9c73-5bc9-4eae-8005-d988d299a70f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.393511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    }
  }, {
    "id" : "347dbf0b-9f06-492d-be6e-8909e9ac971e",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Manual+Gerlach",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "347dbf0b-9f06-492d-be6e-8909e9ac971e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.393457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    }
  }, {
    "id" : "d208fc76-b73c-41ae-8c71-11c04eeb3791",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Raina+Barrows",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.26853698874077425,\n  \"score\" : 27.132869738834774,\n  \"probabilityCalibrated\" : 0.6111500111145403,\n  \"name\" : \"Eugena Jones III\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"ixn3\",\n  \"script\" : \"kaxmhdhfcmwwvk1muj0i02th935ur8igrjdi3ex8tqup19bjcod8niq2kbbxwkaa90okiab32igwuafsg5461nzku4v6irolkf37o9fwthznbn0nu3cojd46qqifu08ytd2gof6ooszka9n2pd7hmnak1m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d208fc76-b73c-41ae-8c71-11c04eeb3791",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "4d4578db-c982-47df-ab51-6dbd8d88ac8c",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4d4578db-c982-47df-ab51-6dbd8d88ac8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.393105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "fd1d6193-0c57-461e-954c-31d74ba907fa",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fd1d6193-0c57-461e-954c-31d74ba907fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "a950c292-e297-43c5-af76-f001aee4b687",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a950c292-e297-43c5-af76-f001aee4b687",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.393074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "c1f3cbe8-111d-48da-b7c5-d32fceddc39f",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Lelia\",\n    \"genderScale\" : 0.6236812962990734,\n    \"lastName\" : \"Wolf\",\n    \"score\" : 27.189110919230465,\n    \"probabilityCalibrated\" : 0.0552227904832534,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"5jqq\",\n    \"script\" : \"e4b8hubg0isugh75lww9dfutdpaivsh0ms5lho00f0g8jrfepxz116npgvc6396sfcvwn96urw6flxed06xd9ubdk5yg75bfg9t2mchwe999y3imdk\"\n  }, {\n    \"firstName\" : \"Earle\",\n    \"genderScale\" : 0.819552100300164,\n    \"lastName\" : \"Gulgowski\",\n    \"score\" : 62.21475629384084,\n    \"probabilityCalibrated\" : -0.28596504381815624,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"6x2c\",\n    \"script\" : \"567t2qnw45g3jrpv1lnaesgo0r5qctlwe6qvj6q2unq2cfci9p4x1ab2b2f55oq0pjkvkiw6fq1we1zf9vqeue1cz6sl66kwafjfu25ruutbmgq3cv3y5klpoa0lerzxtz24\"\n  }, {\n    \"firstName\" : \"Shemika\",\n    \"genderScale\" : -0.7875605666596284,\n    \"lastName\" : \"Dibbert\",\n    \"score\" : 41.84534302157653,\n    \"probabilityCalibrated\" : -0.18990077990511867,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"fi10\",\n    \"script\" : \"5j6mo3p8nol4cipxaqbn7nw2eyi8itt04nempa4tlr450jwioo8yyyrh2s93\"\n  }, {\n    \"firstName\" : \"Louie\",\n    \"genderScale\" : 0.2644714233721339,\n    \"lastName\" : \"Williamson\",\n    \"score\" : 62.47487171709866,\n    \"probabilityCalibrated\" : -0.8850797166793303,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"xt2l\",\n    \"script\" : \"ehd3mlw84pfphk0jtz8ezdhbz00ibzjo\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1f3cbe8-111d-48da-b7c5-d32fceddc39f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.393043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "991c2848-fab2-47ce-878c-2fef62e472b9",
    "name" : "Infer the likely gender of a name. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Cristina/Welch",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "991c2848-fab2-47ce-878c-2fef62e472b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.392327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    }
  }, {
    "id" : "29c139fe-d51e-44dc-aa30-4e911134cf6e",
    "name" : "Infer the likely gender of a name. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Tran/Wyman",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "29c139fe-d51e-44dc-aa30-4e911134cf6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.392269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    }
  }, {
    "id" : "f78af9a9-1084-4250-b9d6-31fdf3ead1f5",
    "name" : "Infer the likely gender of a name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Lauren/Padberg",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Tony\",\n  \"genderScale\" : 0.9632039859295707,\n  \"lastName\" : \"Pfeffer\",\n  \"score\" : 5.712048554586058,\n  \"probabilityCalibrated\" : 0.1439905470168379,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"21ud\",\n  \"script\" : \"uog4lwg4x0gms4suxf6et51rjgme6it0npq5tmrxi1jtvdojfc8gpdxo4xwi8aln37mxq2hnj74es5swefem81bqe6iqqew32tf687cl4zo70v6daa7wesf4z7g8tzl5tlpug96851heff8pvzs2oi0ipn6b0v54\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f78af9a9-1084-4250-b9d6-31fdf3ead1f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.392197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0d3617ec-22e8-4782-b23f-06f84efa9120",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Oralee",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0d3617ec-22e8-4782-b23f-06f84efa9120",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    }
  }, {
    "id" : "8cc8a013-0cb0-4437-bb01-9796e6967e4c",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Quentin",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8cc8a013-0cb0-4437-bb01-9796e6967e4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    }
  }, {
    "id" : "626f6ace-991d-485a-b6f9-304cddf0af5d",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Deshawn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Loraine\",\n  \"genderScale\" : -0.8124618839278923,\n  \"lastName\" : \"Erdman\",\n  \"score\" : 21.828465696018316,\n  \"probabilityCalibrated\" : -0.9518510455593079,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"336a\",\n  \"script\" : \"5cvbjsk62ph\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "626f6ace-991d-485a-b6f9-304cddf0af5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8c049d8d-fae3-4769-9e1a-50db93986def",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8c049d8d-fae3-4769-9e1a-50db93986def",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "0e728c64-2864-42a0-ab1f-d34efba310ec",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0e728c64-2864-42a0-ab1f-d34efba310ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "3c06c30a-8652-40fe-b35e-1e633029c5f0",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3c06c30a-8652-40fe-b35e-1e633029c5f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "7b4ee0c3-2a5d-40f0-94b4-193f0e5718d5",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Ivette\",\n    \"lastName\" : \"Pfannerstill\",\n    \"score\" : 71.89721042570193,\n    \"probabilityCalibrated\" : 0.8752462306823026,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.4472073174509994,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"uvs2lcmwko6ifezyv0u5tqkhshlz4hys6bktsc6x1j4p2ot7wv8qqwpxcyiae4h3mech5t4m9pol4hi0hz0a8dl7wwbhxnt18ohr4vvmfoewl41e5jfitqoq1w3l1bc980z5kroyf6m1x5yp9590eqzcr23cqnszhci\",\n    \"id\" : \"gr7g\",\n    \"ethnicitiesTop\" : [ \"b1twzn59hagxd7ewl\", \"j0a39sntc1a8r66yhbn5l4gq9derr4ggifmbpo6v5z61ijzv4h819q6p240qfloi0thh2touk5u52icycwie4kuv3ecz14jqvmzdv5z8jjbfgoyma1hm1yrkia6w03heuj8axr1ncuzksysv3721h53axhraublp5vpxwy3e5dp8dukh1efp3nkyamu0j0dbgnluj\", \"4vgnvaglcalb8ijukrw0d6v60q1lc2fy19q7qr3bnxv\", \"dihspzirvguxqxnoavvx\" ],\n    \"script\" : \"obmjb8crr3v5oc59rqgp60ni9ryntlaldx8j0balq38diqo11mdksk6bunn4xybvrbl2gk83lgdwhgg6aqf7dfonipyydt2dkbte27qpyxfta8wdtoexwyvd4lks8o5xt4svnbkkgyll9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b4ee0c3-2a5d-40f0-94b4-193f0e5718d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391477Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified diaspora names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameDiasporaedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e1f1c2fc-d750-4e6c-a0ed-9b8df5063007",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diaspora/xbr9nbg1e4i188ic16ryktqlcvywltnvz6qiapdjjxf385ud8xv4dc8qlzxtzes936ytvjcsp5wgr3tepriclhxdly9za5qjjbd9sk/Britta/Raynor",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e1f1c2fc-d750-4e6c-a0ed-9b8df5063007",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    }
  }, {
    "id" : "49b48507-ab8a-43f7-a9c5-d68e2aa0780f",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diaspora/t3jdlw8ynfv84s2raqdnx97l7x991gm3a45reity5078442gxa8nym5p38xxpv4ccwpt5p9sx/Lucina/Runolfsdottir",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "49b48507-ab8a-43f7-a9c5-d68e2aa0780f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    }
  }, {
    "id" : "af4aa6e3-d442-4f1d-998b-431652d4ba54",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diaspora/qftvqoihqcpuip39xx38uipmw1q5rxb9t7bnd8thh3h68jumqtln5x932uirxy8tuzd3ob8j8ftu7ai9h3ggyx67vozamg4p0oldv1dvgap27aefq4zyla5/Brandon/Hackett",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Jadwiga\",\n  \"lastName\" : \"Kozey\",\n  \"score\" : 45.67866525721029,\n  \"probabilityCalibrated\" : 0.06880354945242195,\n  \"ethnicity\" : \"Chinese\",\n  \"lifted\" : false,\n  \"probabilityAltCalibrated\" : 0.006904654055939652,\n  \"ethnicityAlt\" : \"Japanese\",\n  \"countryIso2\" : \"9cjpx954oi9ezdoeheb1wfox6j7t1538f2cjlixuss0v845m2qx58znbbvh843esrkz9m94hbzql35z7q8mabhkfcb06a84f1rkvz4tw0raka8a2q9w5zbsqedv6wmtahmbt9t\",\n  \"id\" : \"y0r1\",\n  \"ethnicitiesTop\" : [ \"lude1wu29jj3p8suo1nj79m06mqaexa2wtubb6q0lrz5r3oc0drqtm3wucq0ihrc0rp8z30rvcaw6ujcv1\", \"cospdhh5s2zboocxujr3uw6958o9q4ez6l3bbtxv4w4u79xtqtxcgejufkke6t25sv0x9ltr6v7f06lmzktxkos71bjbhbvdu5po0zgf4rodv346ah4fynhtx9vbbwk7g3rcac0t3wzha48mntawef954mz3t1mehpivdr52zmtq\", \"0htzooiireko8nags7150rynpz0ggmgmtgzafwfujhmc308xa5p2i8w\", \"3vtwgtb1waurt4werk5qxdlsx6k6pe86tvqx2gybyfpj2ro9\", \"zjsjsfse8yigtgzo51rv3s7xzutjvchapehafs2g77amblswcvf44r4fpuqc6s7mdf9avb6rpne90x82bcoc0rs4x75g2y9z5ij2w084natzalaekdtuzz4tikmfdc043ydobknp57da3v25op8fan3xye0jcsr9zcpib5jkuasjm\", \"2pyv7wvkf3msijw6bln0z6dclk0psunhg4h4b6kj8ftsrrbmh5e1ysvjc1qam57lja13lsxrbqfijjorsnxdkvzoqc0e4gilg07hxld49i8algibdhvczcux65wyop49x8fkv36p\" ],\n  \"script\" : \"2o0vllzalcif9gun9jd4e9ybj2fy41yy28536tr90khwioigpg3ykymq42l9hif9bnc4vgbylaub37yg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af4aa6e3-d442-4f1d-998b-431652d4ba54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.391057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "countryIso2" : {
                "description" : "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicitiesTop" : {
                "description" : "List most likely ethnicities (top 10)",
                "items" : {
                  "description" : "List most likely ethnicities (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ethnicity" : {
                "description" : "The most likely ethnicity",
                "example" : "Chinese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicityAlt" : {
                "description" : "The second best alternative ethnicity",
                "example" : "Japanese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "lifted" : {
                "description" : "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "type" : "boolean",
                "xml" : {
                  "attribute" : true
                }
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameDiasporaedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "35526a7e-c82e-4364-b667-d4533008e51d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "35526a7e-c82e-4364-b667-d4533008e51d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.390645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "1e6ce3f7-abe5-4537-bcd5-e4c9b680e305",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1e6ce3f7-abe5-4537-bcd5-e4c9b680e305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.390629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "e9cdd160-e08c-4ae9-b304-f0777f4848f9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 400",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e9cdd160-e08c-4ae9-b304-f0777f4848f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.390612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "9064abb7-3f31-47fc-8dac-98b913b98932",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"country\" : \"Belgium\",\n    \"score\" : 23.898424606262424,\n    \"topRegion\" : \"zydlmj20js19advvmmvihk8lceqsj349iac4mmoyfpi6f0\",\n    \"probabilityCalibrated\" : 0.9981261245393214,\n    \"subRegion\" : \"8ku8d8vjefy2kyin9fzr3bu9ea1h1ifxcr2fvsibzf9k4j6b9z8lng5h1rrtdxq2i83klzikpfb1wko90nfxplqd0qtin1vvcb2irc5zihcbw837brad4zhsjpw4baspkxaxljg01nmgi8679rh8o1e7n2sxfi3880kdqtcbjbrrcse9pyvzz0\",\n    \"countriesTop\" : [ \"tdc9zc4ew2oyg1oijnog5i1o2jw87hgmkeeivi\", \"ichzeptrot4uugtsuui1afh83feohyecy21ta2bxt0559fs6ofbmitprryjyjdshkiviyn61yh89cyacenjgy1\", \"4fi7f3ej40yy422lsp62rhe419z867hgwfrmcd5q42w1f26u4k5zd05doqalwhqbryphzekegrhhp86kfobin8yh6xymjeny6oph5nru8xl72db9e2qg8zojmvq2rea5faneg4z0\", \"canz2va1cqgmsnm09clg70z5blak2lv6nbhgmxrkdigrpeyrh9vfr95drloq3qzatez4o4wmhfy2dbfh9l0dbk5al8z9zo175hfyjd87qeatgqkejs0rmjnrlge4s222lxpdz6ka2nprks605ezxgp2gbndl6kef3\", \"v5x97vurvdg0z8jgdjniqe01x4shp3ngulyf7lwzbwd5djoivqc5wh7nqn0oj3b3v4nsoysb13cye1ockhnldsvqs3nhi4pie5p99lcz8to9we5w34hzwhggz8px5nygss01s3f0l723w4iddo9fr2u7sisj3so5hx\" ],\n    \"name\" : \"Jason Gerhold\",\n    \"countryAlt\" : \"ireiadcyhv5vmb24gjo\",\n    \"probabilityAltCalibrated\" : -0.4770495597203206,\n    \"id\" : \"34d5\",\n    \"region\" : \"69e0kmlg7cc90a6p6q8p2gr4yjz\",\n    \"script\" : \"usoh17lpckla6zy2ub3gqnsz2rfea5ky9rm8wfb2u66iq9foom8cdmcz7ly4wcnc6rbfkm2q5xc241crjfvqs071p7zgjl7lon4xyfb78ip6ge0jjjrp20v0mjimqz3lcnw3mvy37b8zocrf80gusiyeoq4yqgl3rr87zl7afq\"\n  }, {\n    \"country\" : \"Namibia\",\n    \"score\" : 84.1975345121151,\n    \"topRegion\" : \"2dpv85yfgf37mp2w1tdq70xsv4m1x9k2pzdoceyek4b8ek83n4itlgbtsiisljz7dozpj6nd2wo1zuoffkgpflho8estz3irbs9eaef9l\",\n    \"probabilityCalibrated\" : 0.00598371709304546,\n    \"subRegion\" : \"zi79qa25mhm1pby0s14zh3qhkuy7zbobqy8s9thbipluv73vt21ly4eilbrctijtjstyhuf808\",\n    \"countriesTop\" : [ \"iq59uuby3moq1v1cyu4izzv5rfsztqgmbltn4cguykp\", \"f7x2bcsvrcjglr5lpmjlcvjp69m7bcgs1bgwov5zql5zyph10euhg9r31izy12qqzn05saquinyezchau34jtu11g5gyi3irumh47ya5doclksi77\", \"4gthx4edfvto5nc2\", \"atb7rh67tjidxkh3yu1afh7lg9i94q2yvvdpuo4zcnvc9fqij8rks6h9m4o7ulcghb1k2wgfc2j\", \"p58z4ch4xof2xw32296hp88n6e20uo2cgn5n2crqu6axq69yj4s730hsirv83t\", \"bn54jv3awc3uzx93o14vsco15mbmc4ggpwo9eb4olid30vbermk4xslsgji5ksj\" ],\n    \"name\" : \"Ms. Bryce Thiel\",\n    \"countryAlt\" : \"3ct6lw3ush2oi95kpdfr9gzwqann596hy09sglflele471i77wikjcatzfutqr113qzosha1z3ls2mmkvawc5xhkbw63vdnzklb551fk9crxzgptevz33ptg4lg1\",\n    \"probabilityAltCalibrated\" : -0.31575646220000064,\n    \"id\" : \"k303\",\n    \"region\" : \"g3b93ho7qm1kr6euls8zy3rird11uqscfwjrf45x9h8la1ytx7mv4wiwyrdl2hwkprhfwlgoxryovzkv9yanh6l536axewt8pnnvqos07z4uz01j2li15vc1p1e86waxzdnwtpmleimk1wgi3bzmclp5tksve1om542qh4l\",\n    \"script\" : \"fs8agrg6hafbu3wntlb4gfy8keaa8jts2riah0uvjgud9nqfluwisjmk\"\n  }, {\n    \"country\" : \"Liechtenstein\",\n    \"score\" : 17.09137892021797,\n    \"topRegion\" : \"6efk42lmznmk5spn94mv7bdw25n6ut6vnq7qq439fxf4n\",\n    \"probabilityCalibrated\" : 0.31387852738054667,\n    \"subRegion\" : \"r41q6buc4e5w76p56242zxzegj6t1pk150t37thwo6zjqpmtj1wcwu4m53um00ylu7hix7edoy9yodjipa5392yw12j8zy6kna5569558kjp1um4psrzml3rrvrlewmtydsww9mlo3a5ttd6l\",\n    \"countriesTop\" : [ \"jzurjs9s2jrbtm573ge3d8s3haruz76uxcv5pw9plr4vqqe9ao2ltoyeniddl4rv5dhb0xmj6gdbpx0sw79s7zfbdlx49lfa2z29in7pu6w49uchq5spfxe3cg99pzzdmp165ipnhzm\", \"8v4vuersr5eimhqtznwq4xccpqbthbmara23np8je87tsverwn8s70qd3uekb0n9g1yme10v84as7gx7ey0lbjh17sj3f358zknnod3cuh5ty1fl4urnlfzjz4o0ef\", \"2z0xtwg18pyc6emnkil80qja78g59xqklxx4y4b6y8bqqa5bbmh6k0ibkz6f3nwwlqd3b7rsbjoh2zvolwez66xqdjb83cvn2poj7quptqxlr88n22l\", \"iw6aci0pwpj8hq20rjftlo6llornwjqy29co0mpgj2azw\", \"h2hi0810vqb6jpxv2px2dqqm8j8du4kob29wbqr1kszod0xbrqyuweniyab5yxn9z6jdb99eln13v4c1berzl5j1lyj4h5ysx30bvqfrkrbjza\", \"pr0btana4bwriso2gxagswmdxzndr7fldmmkgj3lp2rcw405847gf0vo23pvdhdcta34cnb572ulvx1b9etpni2j9cybet1nhvejb7d\" ],\n    \"name\" : \"Kathrine Cummings\",\n    \"countryAlt\" : \"zvp0p6ymwkoay4hlktrcshhjqzj9ixefz56vfaajuwmmfmhnnhqclaqm4rsszajq6nx1v2l4wef91sh3qj6o247kr6plyti80lut6rlyygrwqxrcr\",\n    \"probabilityAltCalibrated\" : 0.3873356997379487,\n    \"id\" : \"69t2\",\n    \"region\" : \"1qkaghmucpvssi6i0mhx47atajqe0hbwhw3y8m86m73dpcex5j1\",\n    \"script\" : \"siuapn2egxngdb8rjzsiik5kow3cei916fwfdepa7iurglf4venwaz1hl9zfka9qc2ofi2bgvu4qwwstlyd3h95hlx3vr2tb3op6orevgp\"\n  }, {\n    \"country\" : \"Guyana\",\n    \"score\" : 35.5228982059191,\n    \"topRegion\" : \"sykwa4jvul5oaeu2xgr7alpy7zrlxhabc4oe2pyll68pcinuv3rh3bz4lj96oxb1akcigudommfma7h3tq7wwov9s8x0horfiqml9gvxvx622a8nj8pvtrctcuwbzshd7vsykewuefl62njghgkzeyb0kl40q7ir21wlp1xg8kghyti0mnn7\",\n    \"probabilityCalibrated\" : -0.19960937210035024,\n    \"subRegion\" : \"vct8l8jtir37iq2mjp7y0jxp\",\n    \"countriesTop\" : [ \"2j61it2q5oyl3oyi78ek7ddsb39ppnrb86c7ftlf6agf6nrb6yr7yxz2t3ugops0gzkx1bfv91tyx81k0lnxhmil6etl3zza6dyai399y4ieyd3wqu0osy\", \"hj3ktbqtfnudtj3rntoeimnwgnr0lntbd7f4z1ej2k2yzck7gqrm4a0no8xyyvyvcdv53w1be641z\", \"s0690z8teyvp8vtztapxpxxlurf7d3m824boyolk1d2zfcp44109ckgajzsvugnw3nuxfdufgo3ebrxgo8g7l5fzap3re5bu7kcu03hpwposf7w5dws0nxrargn34anmi7n78efubqsms2oef8tbf0w2180qwfm\", \"88dbjijgmuut6pyy45bbgugolbm746b95jma2d0njg6axzwhi2up78raqqm4fcno52j51r8u4a3wb5re5fb5czkvgzakdfencicvx8jxk3av3nmbw4m2wmahghiejtqc9tnwqbl0gbj20tt2smg97m2u4g1btc19kyuto1ej76htj6oy87p\", \"y4ipyg5dgzwwd9hjis8tbrvmh2fkfke2425yyt6euk6yckkyotu4vemuw8e6urcq7347fnvl2kmqtcd8keih23fmmvvsaatnu5qs98hj4fyuwekurq8gku630ef4ds269hsugqrsrky49mnn4n4lp4sgyblc1\", \"cw4x1bwiyryffabzb49nfsjbqr296rtqhhlly3jb6zghopo9txmccezdiwuvhop1tifr4k2irazxmq1rfw2wl4yr4l6ft2gev4nw8rxor61tkmqcfnqxhtuqkijr5tud1wfmxjnlbkxb30x5jspu85o\", \"6mvpmecjc783fn5kr3dqtd0utrymurc2jgeudi04c2ymedy5q0w9uaatmt67en65m0ers5klahtarsg7h8myqohigld7hddnb66o5rvqo2xqaiqyt6\", \"oihlmjslp6p1qxlfml18rtndxlksp9p1ss34951ak54o2fnrmyqlr1yxp1b3uz4v5doc1ji5k3ow0vu7cjhddjforqthb57aejhcfmgmyk91d8uq93uuq06h601qbeyfcvukhp1faouoby3u1gsq3a7ug\" ],\n    \"name\" : \"Wm Parker\",\n    \"countryAlt\" : \"b5sm2yo2jj7lkwkvtil9n9cnmxdl687neiks7bpy9nh75wx7q1mqzrsvp7tyjkuv3fwsf6m5hk2wg2bz1ujja0net94th1b13iia07m3ybh99qtvbf\",\n    \"probabilityAltCalibrated\" : 0.17602353164156415,\n    \"id\" : \"280h\",\n    \"region\" : \"zhnu263gkrteksohrbxtd9dghcq8l5qgan0f5mdl0qiuogk5fvxm7jm0h83fxquh72kpf8ytu7001rh93emtif5tfj2trhppr233wisoouawkz7p77t4qcusq6ggez7noq6nrvlb\",\n    \"script\" : \"jyprrko6xj2ugghbiho4lb\"\n  }, {\n    \"country\" : \"Guatemala\",\n    \"score\" : 96.01212268693165,\n    \"topRegion\" : \"dufu7w1\",\n    \"probabilityCalibrated\" : 0.4414865356665263,\n    \"subRegion\" : \"3sh8o6s3iw41swpbq69nvv\",\n    \"countriesTop\" : [ \"uamjl2wuogkiuxjkcyjhw5458esqasxrdgioq4bhsphh6fegsm5el2b1spqr16nc0awydeveirywmurzj8cbozlglsrgr7p2r18m314pu3r5u7jdsp077ea4htsmb9v9bc43hp\", \"va0ea31ze6iqewdetc7tdolax3k4qxxz15b3ug23kjh9931dz567picxwpa6l1z7cph8vtzz93comgajbqm8krpi7srkcj0c33k69nldyuop9yl1amf32v4fpzzxctd\", \"wc8toc08i\", \"vzgbwwpp3mgkkmsiv3cdbs74ifdf2n9zt2mf2hijbmus0dlxtubi5nqqfek7dms9hnvz4wkb7twdgi8kdns5ceodzvu93nw5t01i\", \"66iuiefj54bpct5iehdmwg2ewadj9z20v23bwfhk8pkbn1lg5tfq1hrkfrl50bsjdiyq1tyo02vx5ii526buzb14dick\" ],\n    \"name\" : \"Phyllis Lindgren\",\n    \"countryAlt\" : \"swlpdnluppibqu1kmvbq9ipni\",\n    \"probabilityAltCalibrated\" : 0.6504290016158045,\n    \"id\" : \"ln2j\",\n    \"region\" : \"ezcsvqxbfvm3blj153zo524bmp2syb8csiuqcfirannrhxkyb1ix5xlt9j8bcsp1r0349rccubrtsgf4v9am1xs\",\n    \"script\" : \"h22cs2f1pqin0r9vtmd6h3yvrmrh904dy7qndrmxx1mcpityntahgrhiuw6wr3zcaag\"\n  }, {\n    \"country\" : \"Italy\",\n    \"score\" : 54.68037550123419,\n    \"topRegion\" : \"ax4ttus4zs4129w5ksvqoq2j8zk50ln2kbf0p74ssof22fiyyio9qi0ui2h6r8g7y6sy1duqzkwep4zdqxp43ky4orwieb6hxduwr52d4nwadvy6ogigu64tsuecszxnwi50thnilqv2jkhuhw9loyfeguevb6hu\",\n    \"probabilityCalibrated\" : 0.684657834190225,\n    \"subRegion\" : \"bdchv7afpfj5v2n7i1d6ceat2871undveyji5gzy75j7x6omfz0i66sjme51g1vnailr8r43rwfu5eslkzhk75f1\",\n    \"countriesTop\" : [ \"lpbpabnauhdlqcalb8o2cl6dgdvn2hwel3tozby2imb2bslqjf88vxmzbauvj2nh2y4bx31rdd4rxjdhijjw8fhvawainrmcd6hlbd9kyyzlg4rkm3f6sh35f4mxal4u2uw05k55uwqo8iitp5i6leuicog5c297cr8y\" ],\n    \"name\" : \"Mr. Taina Klocko\",\n    \"countryAlt\" : \"qebe1juqjxrr\",\n    \"probabilityAltCalibrated\" : 0.7554842579410865,\n    \"id\" : \"9hgc\",\n    \"region\" : \"bk9qgewnkzo2lky9fpqdekejbkh081prrif3ooq1rlaodtfz82vflzsbfpb2qllx5osoi43nkosyntzhcq4okm6f2gyyxansw2vmbe7ujkipx4wfbn63rhxb2lvilc709kpzcb7sw1r2xnczi\",\n    \"script\" : \"juyvtka6n59mk7l8k7448oialudtffukdkoxonvmgavni4kn744fdqfhpajzawbmyxqmv9uwcqdvhixeluo7wt88ekea3jomoq113qlqv7jnyw\"\n  }, {\n    \"country\" : \"South Africa\",\n    \"score\" : 11.089313931053258,\n    \"topRegion\" : \"2uv8ou2v3a0bpgiu3faq7d8yznpradku1skjs2cujq19phb6i1vvhs\",\n    \"probabilityCalibrated\" : -0.5557599689775194,\n    \"subRegion\" : \"zj28fesnve7x29i1wc407srao85abj9ghu3hzda2gbbi0zymhvwucwoysdwa291s0yoddonz0j2qlvb55a2oxcvs4eifm33bydbaaloxmvep6c8m85436mfuuw5iwh9rlimnctgfvh68p7m9klcqvy06o4iebiwy2p79530v7jyzxkkxjckl4142f5ic\",\n    \"countriesTop\" : [ \"w3xzd0p6e7y73bms17678zi6eg2fmtvr4zjxmztio7kbs03vc0jm24e6z4fi5qwxmdj6ho6egr5qlixkfpwt4g8hclrn1j\", \"o8peu27y2v1etithxmn4gi423im8u2uupqwbyfk92kqp2m7yyso4d6ohotlgd34mo56idbwgpjbfoq1d4cwwnboebwlty6fdufhr31etkeyg91ipz6r8641i3lhby2rwy1qzlmqtjadwfzq\", \"24k8uyxnh1dj\", \"1yb4ye1h8qou2e2z9a5z77gqcctenlm9oruzvkbnk2un43rq1\" ],\n    \"name\" : \"Nanci Sawayn\",\n    \"countryAlt\" : \"4a5juxrudi1jte5ditpjt906xsyi2krzdwduc52oxm73qa07bpa1fer0qg684bys0n58c0mkosnw2mp0kre4tw9\",\n    \"probabilityAltCalibrated\" : -0.12158102537829385,\n    \"id\" : \"xpdy\",\n    \"region\" : \"1zx1l43hn8aapk4j9yd7bqk2bbrx0uf3kyfmgvhnkq3ulpte7chxlb3n3a2qngknlkuj6s59o4us7xkg8vvvbwpmk0p26zqpnt9ipmfyb5yg0r9k0f8n4crjlfwbudvfnxxaaxxz0nkm9c541gdzqfba3gqw81y7twurxd1or5\",\n    \"script\" : \"i1absqzrmjcp2scwhtdwrjbujjbdk4y66oangaf8ib0qy0hhzwaamf5ubfk38qfpxd07iousevrdqxejv0e6i7pcskjsi09ebc8t1en02fyiz9v0sk75vplr4u2tee5pgqrvvd3f3t0s0bjiilsbuiimaybl9gfa\"\n  }, {\n    \"country\" : \"Burkina Faso\",\n    \"score\" : 97.90300281873236,\n    \"topRegion\" : \"o456tozw47c2qiyfc48csj5e6y6rmyco7f1rjvatye2d99moixwx6jmmsf8nidrlawpzauuo5x4yqd70n251zt2254chpzg5e7kzmtunpq3s0qio3z0j3inzu23jgt1yevscvgef3y7ih12jlklwya\",\n    \"probabilityCalibrated\" : 0.293975796864689,\n    \"subRegion\" : \"7bdso8fcvyqsxeej0h1yhkxzs34fp8uvyvlyz8wu0d0glf99\",\n    \"countriesTop\" : [ \"a6j3742hb4o\", \"461k7aujqdt5dzvogymkzbss97akhqquux3mcog503sl5q9eiguiul4465h4xpty9pf5avaqtm91zzoisezujupx86aqppue6hxmbjwdg7ef2m93d2rbqr2xmvns0srlcp4s1xrbr1\" ],\n    \"name\" : \"Claudie Konopelski\",\n    \"countryAlt\" : \"k054i4w7i50kpd4d2nlpqbrfnjkk9ttdyuacopwisq\",\n    \"probabilityAltCalibrated\" : -0.012488796188725004,\n    \"id\" : \"44gj\",\n    \"region\" : \"h5ibn16sgsc97o8kcmx77jirz65fevv31g0gqrrv2daquekj65bv33mmi1vda3rt90jwsr7mkjujooxjr2wblkn3f2mpcs5pqzz25dqql1lvrx82il1on10ztjeqkyn6fva21yyv9dm9ltv59aqdu21x126cqiv6e\",\n    \"script\" : \"a4riwflfb5swdbp4whdx2ossfxsswg4jey86mziecsg7ym4xlpd6g8w9u5n0z8eg2xwutc1xq9ide1rni1dr9i83olq5536coet49gfwmtsqwptqdn97hhcj71fq4dnzenxn6vvrgfg8ceuibkx6dite5l1jfaat026ox7emvvomrr\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9064abb7-3f31-47fc-8dac-98b913b98932",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.39057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified geo names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGeoOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGeoOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a20cecc5-78e3-4f8c-9b9d-6f83098e4258",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/country/x76x0vugwrxv4ynnz8ik09z525g8uuh5fljz0js4571y3t2ayxcqi950ap8dux7oe2b7d7bco029kg3ygzmtmaaguvd3x2pxkapdin76mwujjs6x2u53q1dpkv068quk01lto27j4tlpzhjxpmcq7d47m9x7icjs284k2wx2",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a20cecc5-78e3-4f8c-9b9d-6f83098e4258",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.38841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    }
  }, {
    "id" : "4cbe22d3-ce38-4636-a8c8-d49ff04d1c63",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/country/gp814xwkfgx6ht4p3tk",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4cbe22d3-ce38-4636-a8c8-d49ff04d1c63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.388379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    }
  }, {
    "id" : "20bee272-e96d-4e31-8705-6a89eeab92a8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/country/0nnqxvmeyjmms54jfj1w4c3i9ollg76lpp93q54lm8nmddhmy48bzkmczugf0wvdji35dkg4vxt158ni166ha3o0m2iwhl9l8ae5th5ufxh209ce8krbae1x58l5frivl8m187n0mqzt7w4f2k",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Cameroon\",\n  \"score\" : 65.36396251811412,\n  \"topRegion\" : \"zuszhfubv8hzmjetkhbbgeayyzunoak1o5jln00u81cn1hbc6uj63vkw05if28dhhpg5xsujdga8uwpleqjagf2l1modml9xlm8tqzqh3mhp3ww5898jnvui90odhgrhd8zsgqipl\",\n  \"probabilityCalibrated\" : 0.6485441008434307,\n  \"subRegion\" : \"tg9otpybtozugffupwpuu2o5i42drxmdz41si40wq58mq12k96a9j17dbsu9lddvmxrbhpeovwoihcim0wixu5dzu0bekmgft53ofwlxi3biyp09cdf2w4iu5x9it5y53y2l8e0k\",\n  \"countriesTop\" : [ \"f07brw5h7lv1wy4n5yqi3jnvt70e1btt39s6kxb1vgfc8m2wq25a7o0ebgs79iu7uqqnk4nwocil992pk5jklf8es47gpqz7p3h75y4q293eoc5215kk1izybfa3nkliswdke7i7obmhw2b2jckqspastpyj5gsur5q5oyfmzrj2hxzfnh7r51s3j3p\", \"6r3kupqq0wikc1qn08trc6j2yle\", \"u8u9aygvyx7yktyv2iq8c56rkqzxceolk3k3lbx1q27dd8zuaydh9a7pxywyqmvb7ayklyub21yyddc1rpkqx3dvpllpdmxreqma7e2mhqvj79zb9b67tngi2gb1fel1cm67u7mxx8mfkv6pv3m5wqe15nwybn0s5rgdvhaywskenvuezz6ez\", \"b7m3e4t1u6givgw7jwd77hzvqhmfynmeus797pyxwdti5ny4q2kudbdj2t\", \"gahzg8lxittpyhvwpbts5l0jxq2aozd2am52zss9rd24sf0unz10vvnv3uozppn60gvz4hqubpaac1vxvv6zznw9gdkhyhm177bxxl2n8qaliofsmyfxvxkae5k0vkaun7ttsp\", \"4d8wvsi0g7g7z\" ],\n  \"name\" : \"Fredrick Kozey\",\n  \"countryAlt\" : \"f5nm8dtjizwfpxrj9tqywkec4sy6jwb3n\",\n  \"probabilityAltCalibrated\" : -8.9613663250665E-4,\n  \"id\" : \"xm23\",\n  \"region\" : \"71azxzoxhmm5gamkmux6vquus6k6hqunhmio17my95gr4kxsby959nl928122m5e2arp2agzir1unqk1k2kxnxmtybmtvjijh4x98zg3tozen487ub2abbfj7z2mwe1bmg89vsggssrutyfnc8699aqjdtn6lzq3anzcn3r5vo0run3v2\",\n  \"script\" : \"2n32xm6x4j8gtuzftuu3af1u42nxdwhavfqjrujk2oa4khkf29rlrq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20bee272-e96d-4e31-8705-6a89eeab92a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.388332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country",
          "schema" : {
            "description" : "Classified geo names",
            "properties" : {
              "countriesTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "country" : {
                "description" : "Most likely country ",
                "type" : "string"
              },
              "countryAlt" : {
                "description" : "Second best alternative : country ",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "region" : {
                "description" : "Most likely region (based on country ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegion" : {
                "description" : "Most likely sub region (based on country ISO2 code)",
                "type" : "string"
              },
              "topRegion" : {
                "description" : "Most likely top region (based on country ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGeoOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6e7e8015-3457-48b6-bf6d-0b4cea8e01af",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6e7e8015-3457-48b6-bf6d-0b4cea8e01af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.387813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "c4839ff0-b84c-4134-a8c6-9418d37635c6",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c4839ff0-b84c-4134-a8c6-9418d37635c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.387798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "3b58ea20-9bb0-4079-82b8-1d7ce3a064b6",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 400",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3b58ea20-9bb0-4079-82b8-1d7ce3a064b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.387781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "aeba707c-3647-492e-87b8-a52add35876f",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corridorFromTo\" : [ {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Helaine\",\n      \"lastName\" : \"Schroeder\",\n      \"score\" : 30.91658544089806,\n      \"probabilityCalibrated\" : -0.3503248279598208,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.5025066982174013,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"s26ssw7rhtra9hriuz75n0751792clsy1boz8zcgrk5whvw8h3787squhcmawebye5u6w1qxqpd0mwvz2y2x9ctrogyaz9ckjeqqxh2g9uyh4m51gz0cd2jlh8ate188sjvmiksih1238nmjwedm8rd9trqsb0i9xtxr3mbrqp8jhv9p2ntb5aa9gxjugkcclrkod\",\n      \"id\" : \"7cg6\",\n      \"ethnicitiesTop\" : [ \"lt0roxs9qizkkx9s7b2mbs593vi0nkicwp4sbygzco732xygo2xzohxx0umoaqv2d0f12gwr1ecegbgvvmmtaun2jsl6517496fixhhg7gy9fs46ujqhafwuorr8p97bcgv5i6b44at9ify3yqzqb7jyf5drcxnfm8i\", \"4fun0m3uocfxvwqgc6cblaugdhzxcj2292upm11383u0ej2gdoqx6mnwgw2fg1vlv56ez9hz2bd2h9\", \"kg3kd2sgx9cplc4ra871nvs5vhe6266mxkom1aljbuhrv0a58lr590b9zi69d1b2iz4i9t7zqw2rmbxwh7h5lg1yqmlgtl6h6hkjml4bfe3mu51krb7djp7xpg2w354vf\", \"f5btzb\", \"3cyh0a\" ],\n      \"script\" : \"n2htepxqtoqa28n5de1o0zij9tjyxm2rp7y1j2xl8vgil5tjs1hsray950o1m4x3uh3f6uh76jm02ill0jvoob4lyy4zds21x8nuw5lljtk00e6s04vf5\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Lorelei\",\n      \"genderScale\" : 0.09439867822060832,\n      \"lastName\" : \"Wintheiser\",\n      \"score\" : 7.449017170790217,\n      \"probabilityCalibrated\" : 0.8456613047825001,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"057s\",\n      \"script\" : \"8n95j20\"\n    },\n    \"id\" : \"3dmf\",\n    \"script\" : \"boqgi2hnodxzmumdqfeycalxouka11hc03st385at9uawxq0fz4oatns4r4gry0gqljuclczphdsfs81rrtaq8svv60a34h8pgrlgofxqvrnnimm2j\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Cummings\",\n      \"probabilityCalibrated\" : 0.09245532012646618,\n      \"script\" : \"mwehl2uqhcxp4r0\",\n      \"regionOrigin\" : \"gsycmpooiqqh7xv3joate978akp4oe7y5kmpysnzawvz5ymp6rauv1p6tzec7vzhww\",\n      \"topRegionOrigin\" : \"j5wmvyoivwz1bawq70plpc28gfg37165tlld4lw2sj6jp64wt805k8x16ruk0sdpvis8avuss6w99p4sa60gz84thiuod47f8uibq3c4m6mcorwwe9h41c168sj7v5e259u\",\n      \"firstName\" : \"Solomon\",\n      \"score\" : 99.57253422713036,\n      \"subRegionOrigin\" : \"nchz7p5ho6yw12io0jmk6blpqpkxtequ\",\n      \"probabilityAltCalibrated\" : -0.6098311138376489,\n      \"countriesOriginTop\" : [ \"ltma6zg6w2h85z1dn2f2s6udbk4fmum6933tp37smu42mm8cztbd8w0hlvy7eicit9aoc4cux96kage3slqswxpfybphq6jvxx61g63mxczqb3bv1y0hyhj2il8g9uf52oghll0\" ],\n      \"countryOrigin\" : \"rz23k6aaxjtiicbrhbto3i6hfnsr0yx6womehtve72drl0cq6lcxo0s4h9q6sja0fxqpj4jdx6uyhuq84591k1imzdv6s29modaipjppxb0ey1uk92xn\",\n      \"id\" : \"maut\",\n      \"countryOriginAlt\" : \"6nlmtpjqf8srzdarw4pcrrmisf767k6km76tmev5c3wo1a4hlci26ybb1gb7uzrw1y2gwcpk5blt64x30fyes84d30dde2tm4hd6ofp6u82vt95eb063m4g5ovu\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Wilbert\",\n      \"lastName\" : \"Marvin\",\n      \"score\" : 91.77135907819749,\n      \"probabilityCalibrated\" : 0.6867180691975956,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.5964204245291689,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"t3c3mdpi6q2lb0geob0a2kdqfqpimrixux7jgqbyk9vr4en6durat149udrqgc31c66f0cxns1lro37ziah5rmbghqjn3egjslbte09b7su18qqo6utb2t5289g0rgy09b8cy9az4zoaykb2lno4cdyxst5tkyf8o9akxg5q46s078nkdy68fsvqx4lqedduglp\",\n      \"id\" : \"fe29\",\n      \"ethnicitiesTop\" : [ \"eevzepewqc86urkuz6nq4o1uka75d6n3xt7ho6htk6c9wx571l17gv6lenl5uty93ih6mk1brrfk5t9rht3dflfv79db74\", \"9njsbf9qoig373zb81k2bzpj6in8401b52yabxwj795ususvewazb\", \"20bpk4vc2tmql6bfylo2ee4sx70vmaeent2mnn2fjdih9mdagsskcldllp4fonxb2k996hnd2j3ua\", \"keocx90dn8rwkylqd8h3jug572ba0hcfcky74ws0em77uz97pjzs99sbtfshhwrqvliziskfo0rjf1pdpziwc7c7hqjbh3sba88j45q\" ],\n      \"script\" : \"p35deq2vhbpymk1xngzra1mock8076t5u3rwuphre6iy17zkxfu1w0i269a1t39st5sxw1gguhk5bce4yeunaxfzl3nf0tg7p6k58xtmdjlvs76275vldq2nceer1m52k4bj2yrhf8a1h3lngwx00krm5qnsmu0okh9zv\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Kandace\",\n      \"genderScale\" : 0.33828185081007955,\n      \"lastName\" : \"DuBuque\",\n      \"score\" : 95.12894128803065,\n      \"probabilityCalibrated\" : 0.9136568231495938,\n      \"likelyGender\" : \"unknown\",\n      \"id\" : \"8m2p\",\n      \"script\" : \"ey15q6fkth926488aomg8i5x\"\n    },\n    \"id\" : \"2uk7\",\n    \"script\" : \"kq9hlsedx3y1bfan1v3b0rs389rxz3yx650cpf525te77md1hx1d8uz1dq5ny647opxzkzkwb9n3rru5fczregcypi9qbdh3b2ix27\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Howe\",\n      \"probabilityCalibrated\" : 0.4720394283860221,\n      \"script\" : \"bzteyxt2a6fazrntyiuohfd6ch78k56j3akh7cfqgvwvxj8sv4hw6wwf9e7j503kppz9lk9p253s21ic1yvfjkh18nnv7qivv14g152mrxl0tt8i7yoy7\",\n      \"regionOrigin\" : \"zord4pghmx12o3wy5rpwp837cxv6x9u32r8g03lqng4cg7zx8wjgovdg2jxqgvn6kjokg9cf7527agn9dklb6\",\n      \"topRegionOrigin\" : \"7pmfip5o42zz5z8eh\",\n      \"firstName\" : \"Noah\",\n      \"score\" : 66.89642514893274,\n      \"subRegionOrigin\" : \"lmmidx5o7mbmlvft2cr3uwbmeonzh2cr57gxh9em7rgdcph6gbvi769tczbha57j1ykxsxijrzc2812bvensyy4esq87ejbawbeqa3oszbrt0i3saio5et73q86g8dhjyum3ldyvnuumle8hf2dkzo0yp2ytgb6u38d1bgyywtnoezs3t\",\n      \"probabilityAltCalibrated\" : 0.31563220487535415,\n      \"countriesOriginTop\" : [ \"1n68hg622mtvmvs8oliwl25immqpsjp5o5hzvb2d6cgb4rla1vc3of95lnhgkzid1swo0mewlmorel3ymlkfzyi6peexkn\", \"ugn2i5v2hs1sawmfxyaps5t3u5yqvox67qwjkbreursy2pywj5uwat9x9zt1jt2rzehialk304tajflaebe35606fht4hizrazrqbw6ce08h03u9vpjqe7q56kfgn2tvpjm91q82\", \"r8j1s53vhnd14z7gj0k33qmdwkmpogl7nhacu6fp3afk0018etynas13iqozto3lgzhx6zffdolazl4x0embgt10p9bijhkyo82p5d1fm9nvypj71bqcjtjzg2wjrcvrxjjvpsojpqd88mv43x0d7kfesooh0o45kci0g821rm2d\", \"xvdlftq6qufpovv2n3khtim64aaqudkg3vq661wzbgu9gspc7ouxjj89la5aec0w4ju6ssw0k35ppq9mzsqegmelvw2wzf2r17yd3dy1lvxy629q0qn0dwkgsapk85csoky07lhubohr507mrixwuh20vvbnyvf4j84a\" ],\n      \"countryOrigin\" : \"grgrihjm75ss403c090l5rnkkfxm3lo0dgo4quct93xo9lu9wk6h7wymz0vhczkcpapc\",\n      \"id\" : \"mr34\",\n      \"countryOriginAlt\" : \"xmji7fl9e8h5sniosrvmzlyt4pho9r13ugs2g5qqqq484l25augs7wwg4tm1nmga12l6swi4u2xp05uc3jfkhc3e40j3cohuijbohcwnca2hn6x6oukge\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Wilson\",\n      \"lastName\" : \"Hettinger\",\n      \"score\" : 74.43344516958868,\n      \"probabilityCalibrated\" : 0.04670928679911479,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : -0.6780478547175,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"5suskg8wo468dnmcvxxp3ezfvcxqh0jxwpogkafyq5c9h1wqn\",\n      \"id\" : \"sk71\",\n      \"ethnicitiesTop\" : [ \"juemjepjez1h5mn5330equik937ebtk08hhguzk2ipzvdgzi0tb2o5flri8rottkp4qf88oujp8r5zeybq8qgynmtc6kcwugfjf0xfxdyypq5gf8wxl1427r69vh1c3e935ediz1upmftjdysi73shp\", \"6z6bt54kx1ks40kxsnkte2yy5i60hgwaumw08jsnp\" ],\n      \"script\" : \"9n355e5290dx\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Trinity\",\n      \"genderScale\" : -0.9486010261858635,\n      \"lastName\" : \"Kshlerin\",\n      \"score\" : 21.892089541392057,\n      \"probabilityCalibrated\" : -0.4980126552279194,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"36wg\",\n      \"script\" : \"ymhlcskxkx83idot2kis5vobi0x5bmay2qbtuqi7jwbgl0pn6udoyypzh68csacl8blbsyqhyii1h1q52722y8dzggpsc6giny2wa88hypv5a1eneo4brn607eddrrdu4yzoj4951jb9s4l4s80e\"\n    },\n    \"id\" : \"gk7z\",\n    \"script\" : \"wmvoj9o89680y5w19ye3qpiq4epgn5wjuu2epmzzqarf5m3yc7yb1e7rl7fq6hnqlxl4d3oz0qxc1n4wzwoktk4y1jne0o3s9eueqv2jsq0e9948hnjci3p4u81agu83eebd\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Price\",\n      \"probabilityCalibrated\" : 0.019194989058288536,\n      \"script\" : \"9aziwwqztkd9bmohtjaesc9tc2b9bilv97islrx61nhh5rzsvfntr88yy64trqvb9dxpuuwj2dh2ps2mi1d9jy7kyarof9kflo6p7ra2vsk3ht2eb\",\n      \"regionOrigin\" : \"97aspl1900iqylqicbgsb7euzgpav6n374hrhg5sig6m0ur01j3jnuhc8h50murmgggmvwlibjvum1pdrpfmt8vxjs4c8ff2osb7pd1x030zw8sxus2f0mkzj5t6k4j72rjpmpaipmvc3dpv90ay4k\",\n      \"topRegionOrigin\" : \"v7uej0xwc7z0ndlng6hr8lxasw41u7xuwbvzzxykbpyzw9ca2qy1ycmmo\",\n      \"firstName\" : \"Cinderella\",\n      \"score\" : 71.80045633138627,\n      \"subRegionOrigin\" : \"0mgfcepqd3fvmmz3j15or1f7fa4qia1ak830uzobvo8jl1chsetcwy7iev6bknnc2tgs64qax7\",\n      \"probabilityAltCalibrated\" : -0.26575075719816144,\n      \"countriesOriginTop\" : [ \"ki6b0m0jizeyp96hhvwcbkzjb2g1p88xyo0pimfsjqz52lcmxfm7xvefpwgxs3gp128z5gu1zkfk0cw8k188alvijihlfeglld\", \"bou1r2ia1zo0ara8w7kzevvwyb65fflm108d07dcc5im9ris55e1v47w\" ],\n      \"countryOrigin\" : \"f8p3d6ce0lp0r20kp59y0odh7p0lz1im7d7v6ukxr5wdvunhtyi8ntkt0yuccinsh7ucjdofzol4wdnu8rjpjmxo2ro0zsznfkmz42g9q19dazss3ooihgprv22co0dvyegeoenu7irtoqi6w5g1treile10shj7nfnfss3\",\n      \"id\" : \"r575\",\n      \"countryOriginAlt\" : \"kuqjx0fbrcvui0hamnnsiseimhbwyi0rclwxtl72pez0mctn8wcrflxq4tsrpr2pxtw20mw3pdzlaijewbeilocyugfmif1fipkga01ayqyg92n4zxk072udgjrq20\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeba707c-3647-492e-87b8-a52add35876f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.387736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch",
          "schema" : {
            "properties" : {
              "corridorFromTo" : {
                "description" : "Classified corridors",
                "items" : {
                  "$ref" : "#/components/schemas/CorridorOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchCorridorOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "572d9361-8054-48b2-8bfe-53efe894e108",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridor/urau6qorm7aubo27xw8k58mwf1qawy2iufzfl2od851mplmwem15b9cwyrq8mj63dvld9w5jpwev9pdi7/qvp5fgrwdk7shk9/4o1p942cimmja51m1tcdeytvnmupv6xtjtsj6na960yctljy8qqjg7tlqpd794bb8ujjtz1lel5srj3zptwaxvwk8ctqkvkycswdetw4qn6zn0nr2shouf8fcmgya2ksnbpkg4j5if6h9jb/w31ak6s5xs72bcomv79aqry4geur0yesccb5n738rjaaq82r1ale89259azyjti9r1ubdsgkt8r5q7lo9m1inkxc8oq2b5f5grzvay7sedo851ioc5hbb89nph9cyeq5nwblqbltjjn6krbdd918j3xjn99vrxyc5pjtpm8jgi9e3wb8yg8slruze0yj61rc/9ydz4nxr954bpgr0skqee6avwff1tfdf13ank4ncwp0b5nrq241gx4sld10psfd37bvciude8dp1k14t0sydrvc/qyzxf4l7gn5vjx9v",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "572d9361-8054-48b2-8bfe-53efe894e108",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.385065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    }
  }, {
    "id" : "0693fdb9-798d-4573-853f-65b54e477740",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridor/6qtnv5rayes51vkykkudxv4luv4tvl7nmyqfh1frvkhc8k11wirr2alse8fi4mz131n1f4et37b4oauavcytmw77j2t3obxfr8tc1031a37r2uyq7lvekjttt8f4cvx9gfq0kt7asbwntb2/0eonjwh5r71m0f3c/looqojf0q6yyczn/vyy4l1clbfbrm3ql9xo93ovoqq3n6beuih192u936xvenvxi4uv2p4zc7uxi7pulqmd3hhw2f49jgt05lz0lrjf34iv554lcxfoljyehxd48da3ht/e4u3j1nsygbxevgm5lw2e2h0nnh3b6hr1wy2hzi4l993/bjdxjo16iav470d3pmmar9s3utmjve4lvk9pd9gjcqfqfb8p61thxu82jvok1dvvay164za5l3ci4bcmi2q6t5g85jp",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0693fdb9-798d-4573-853f-65b54e477740",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.384992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    }
  }, {
    "id" : "7be8fa9b-0b4b-4f0a-8967-5ad848068b71",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridor/6w3tsiy4u277ugbme94qp05c6o4g3sovv2q9gdqanh0sytai01u86i0sm8glkzuj01nz6rt4mzongn4z15/wwtijz53kbjzmik0b4gtvtzi7i9psyiagtpz0i21ldjosckhwmr62zf2d1a92ai/n8z9drgdjyy8v638x2bat6lkgzuhfmtw2fs3kq0w45j6ivy340z1ul54yoj30n8nz2rw5icegkv1uclljkvzccio0c1km4ke8kp27hjqltft2n0j16rql8n5q6ws4zj3ze6gwqk0tyvilu4xy15rq0q68zxa4rnqg0plumd1gcynawfdmiiaabig363ggka6tp6j2zt1/thbtdhd4pq0efg8t59tajwjf87p75uyunwur8kr4wrv1ugvstlmxjppe5zn6xacgiyzr9whgday8oyuhh518eg4ok3wyqfd9kegh/r1eql4js1pv0gqbjgvt9v7w5nnxllsq440xgorbjtzsqran16f2ib0bwq76kinoylldqh0inomhafuvkxmxhpbrsewa140knr4hruhdq2rph2ik412c22ipr7rao9oafouycwkbh0kea2mt4o28g6uk8uv1miwayz50hzy7st0drtphq8zgr538bm0pr/tbzskz62q18n9k6wu4v8m7khin1x85ldkkr3rbpzjthaor3m5r5yo0fa56shxl1z8fxy4mx1x0vqvlyh3sl2b6ay7ct7sz1pp5f8psbfu898zc12s9q8b9so2f8gm4bezyk3eqeuwoae4vulk7sdo6pkd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"FirstLastNameDiasporaedOut\" : {\n    \"firstName\" : \"Cedric\",\n    \"lastName\" : \"Considine\",\n    \"score\" : 78.98497013998289,\n    \"probabilityCalibrated\" : -0.1039714484464227,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : -0.4612728437070681,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"y1ztjqodg518l99cofm4mpigz2a97w24zk8zg4gv8ipnx0yqbpf7awnelt7r8t044ank586f12kp7m6uzoxndufxq9lyonz1p6s4rl2lvaaynd1hf3momzj6j2wk09nvn2ev97k3iy6gou3yszm6z7ob6tmjovgxdr2dt207v2h2wy4m\",\n    \"id\" : \"u266\",\n    \"ethnicitiesTop\" : [ \"8zz0liyxkmq7xnx833iwt32wx2god6aoeugqie60p32a9qwif8k0awuu7dzl707uh673s67bxte9lblajb5xl8wb6r0s3tkwfloxxkkeo489nvfrq16cys9qh5h6zrp5xqfqzmxide9q64nhq53tpawv138z2ppyir7j8232hgigt7cxg08r7cp2qb3m8zo24wqw\" ],\n    \"script\" : \"yfs9mv2vx6558gp74n0n7bqkmg9bx83jwg2pkp7zxsbqbv7\"\n  },\n  \"FirstLastNameGenderedOut\" : {\n    \"firstName\" : \"Jen\",\n    \"genderScale\" : -0.5817224069907327,\n    \"lastName\" : \"Prosacco\",\n    \"score\" : 74.37275858424216,\n    \"probabilityCalibrated\" : 0.7618087955808748,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"4c19\",\n    \"script\" : \"qt2vz4xyp0qtdol7qhlckwe5f99oe6thl8e7q37ot\"\n  },\n  \"id\" : \"x0rt\",\n  \"script\" : \"jng3xs1iprw2h5ru\",\n  \"FirstLastNameOriginedOut\" : {\n    \"lastName\" : \"Gerlach\",\n    \"probabilityCalibrated\" : 0.5834132216318098,\n    \"script\" : \"qv18d2cttw6pkfa2xuhoq3esg8w85luj8x8ncn4svykbtmwct6gitjjmd53z3p9ly8q9xfbtksi5whtl44t58vd8f9cqab6ue1mfftpdrrfo3uneen5jvw0n8oj7t1dgcvcoc5bj8qs0cbtuw42m2gx6mljydtav\",\n    \"regionOrigin\" : \"u4vj5ovk2bk6d3mgiq8caclq9escwvftwo4wa2fei8lls5iravn2cqwh5gstbd4jv049vkysop1c\",\n    \"topRegionOrigin\" : \"4n9381fawwhxbuprv5gyms\",\n    \"firstName\" : \"Emil\",\n    \"score\" : 76.26092836154221,\n    \"subRegionOrigin\" : \"mjdeptee7vkd54vhmn8\",\n    \"probabilityAltCalibrated\" : 0.8980688829064951,\n    \"countriesOriginTop\" : [ \"9hltvq1m\", \"e8vx4iyf38wbgs5nxgldmu2k80rymqilnpgf2dbanaruyx2wwqx3amj57247jz4ae9swjiu2lmko8xqm1axuo6k1v0be70cfo65ueejj3bgti9put\", \"0k5dgrflq7scpmziscvzjuec0mkjzo1zmhjey81ibpuc20iulg5czxwovzgep3qjcp18y0lzxv1lmpgfmgbbtkr3nuqxtopekz9hr039yxvbs3gh5p7nl99l27qvcc4d40tq2jqnoyayxqbhbjvmqfq1hukwiqf7dooft9v2dogysgg7w6978evr7vxgt6\", \"c9v55pkjnl54o77gd4y4uoymunkrtjiidimbkmlwsorv6m3p6rczjxg0f2yf9or7ak5kgas5a4i46cmaw8ipr9twa8o2lmomviurc90889o\" ],\n    \"countryOrigin\" : \"nlweufism2rg1u7cjzdrg2zks1kt1m0ntyvptozt1pkitp8lakkjvi6yfkbsozl95ki3hfhl\",\n    \"id\" : \"t5x9\",\n    \"countryOriginAlt\" : \"x8akxqc4zife0oehyyvhxjnhcnvn34rqd130xvzoa6hz7yqkyna11qhv31bytj09xyo1592\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7be8fa9b-0b4b-4f0a-8967-5ad848068b71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.384901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor",
          "schema" : {
            "description" : "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)",
            "properties" : {
              "FirstLastNameDiasporaedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
              },
              "FirstLastNameGenderedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
              },
              "FirstLastNameOriginedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
              },
              "id" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "CorridorOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c8176efb-22ab-4cf9-bcaa-7fad5f2bfc3b",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c8176efb-22ab-4cf9-bcaa-7fad5f2bfc3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.384013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "4fb74504-543f-4412-a257-a04e224ea767",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4fb74504-543f-4412-a257-a04e224ea767",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.383998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "b8db4804-af24-4cd9-af3a-753cb8500f39",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b8db4804-af24-4cd9-af3a-753cb8500f39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.383981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "087d234f-fbdc-4fb4-a4a4-a23dd59905b2",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.7350457932551933E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"vjx9\",\n    \"script\" : \"hw715a08966mw3\"\n  }, {\n    \"score\" : 1.3201183119317952E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"d4a9\",\n    \"script\" : \"nvydzch1v44ewj321dgb7cyn85z2mnt2vyg8i5erdzvljc42y4s2v7bchwrtv0jr5ajqzgm1694d42\"\n  }, {\n    \"score\" : 1.3183544408484017E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"g1po\",\n    \"script\" : \"xz94rjxc9s7cninwp3ltjvjcjh6sv5ekxh3itnqrewpy1n0tz51qaxr0web7towx6490zvp0xivaglk7ttbno1bnrt0qiys72ig8t74e3\"\n  }, {\n    \"score\" : 1.1946112929277757E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"mqwu\",\n    \"script\" : \"hmnflv66wn006wqrmgoqe5n07x9eq69qpxjfcj63s88tmbvchr8coq2wblqchcmlcuhrfg4c4n70u1ktkjd8gdhtlqcpnes6a2d1tbqzwz6tfdgzlgy3ur2s4goic84hfksj7ame9d4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "087d234f-fbdc-4fb4-a4a4-a23dd59905b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.383955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "37f3a7eb-356f-4fac-aac4-13a60e1d7bd4",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/mcsn39l7nqdjyvr8rh90ppwreaoi8spmwsor1azqpuscf5p6p35v624x/7ewzc0wwwba8j6b6tzkvnv4q56qtn3fi1nzffprnxbadsw0uqd5twray3a49/Riva+Bailey",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "37f3a7eb-356f-4fac-aac4-13a60e1d7bd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.383505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    }
  }, {
    "id" : "47b1813e-b317-4053-a1ca-06614336bbff",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/4o9thpjwkewnc5nsf4nf3rhbd5khqy2wfz82x2ht30jskxs9s8xbfi1s5pd1hkznhc192bodlmfg27am/acp44wnhb2caf9t8lzvrxbmbqq6higzxmxjjs36n4uq7wmlwmaps4ymqewr1l96b362zo2wm0u2nus56djdhejfunxetn5z2jzk/Mr.+Ronald+Grimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "47b1813e-b317-4053-a1ca-06614336bbff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.383417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    }
  }, {
    "id" : "72055ae3-53f5-4b73-81db-5e1fff6ef56a",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/78z5oiufrcgf2ollu4j5xyhh8d4r1lj9i96i67fu9ukl4gdk36b13x3b8utbnzhemtvityjj6l40cga70lf80pnx13gy7uhsktj7ewrr00z77nzaw78cahfvuq5vzebcfdqk1fpll0ac51z03e9mbtcawvv4r3kcz8rgl1y5o88u628ppjvu8pzpak6/a7zhsqnot0z2drd19ybornzuy2flc4emy9/Jed+Hauck",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 8.498006760447424E306,\n  \"matchStatus\" : \"Mismatch\",\n  \"id\" : \"2v0x\",\n  \"script\" : \"ej9tbrsz5lb0ldj8o6apo8r5dc5hiethgxwcutauleyxrau3fb1o1u8np4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72055ae3-53f5-4b73-81db-5e1fff6ef56a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.38329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "808bd3a7-2513-4a29-8036-91d5cadcd566",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/y1nf2vgojihzl36762y1epf2iu0x87rq2v104iy9s5ur94lszhcsa5soe3tfohfkskxp/1ht98pamym7jpvlkcxwavdowr9xcitvoyq5awlhf5zt39uxbwo5h67u9jo19cmp7d3vnsbzon9982yank9uestf07ejada2li9b40tumv5p944gtrl6csl9mssie6fj700dpg5y4qac08403yrvgh4nl6epod4b8lz9qdtu2w0x/Genderqueer",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "808bd3a7-2513-4a29-8036-91d5cadcd566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.383044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    }
  }, {
    "id" : "c40ad755-6e1b-42b5-8b7f-658d31666a01",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/ai9yox2yx84vhl84mq37xpwas7rcx6sp3pjdosr2w4hl9k0yozz4wis2ubwp1nsoktzhao67izpxzxeivw1jhrn65zs1e2/mwd4kkt1ey7ryexrrxmx4auqsrv0gwdkoazn4zsdju707ue69jzc016f1pb3gasye5r28eu0xkg2xfvkc48gypvvsnxoo6xo7l20xgrcuzog88ps88ttaqtfdtd/Bigender",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c40ad755-6e1b-42b5-8b7f-658d31666a01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.382988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    }
  }, {
    "id" : "05d403c3-89b3-4505-a4ec-8ebbad47f933",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/f8gwfjmdr9fuhwsuwtl9smt2xrt679l0rvjqkgzw97rwzbenbyak4c47jw08/qozutn4m1d0hi1ia4lb4x18iv24pdaex21t2nqvcz2sm1/Polygender",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Nikole\",\n  \"lastName\" : \"Grimes\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 3.1332329315619857E307,\n    \"candidateName\" : \"2022-10-23T16:59:59.382655Z\",\n    \"probability\" : 7.33924795034528E307,\n    \"predScoreFamilyName\" : 1.6358293647389602E308\n  }, {\n    \"predScoreGivenName\" : 1.7229882718399682E308,\n    \"candidateName\" : \"2022-05-13T16:16:59.382697Z\",\n    \"probability\" : 3.660273324948922E307,\n    \"predScoreFamilyName\" : 5.672673283013977E307\n  } ],\n  \"orderOption\" : \"x315rwe9s7yvj3sdk3j0khfmvg5wv2vu63osi771cm4au65on9b3pmnsbbg51x3dw85zfaj03vkesy\",\n  \"id\" : \"b3bn\",\n  \"script\" : \"lltbwq1nrmrtv11l0sx0emt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05d403c3-89b3-4505-a4ec-8ebbad47f933",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.382918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "14664f43-a772-498a-8b64-d19bc5b1ecd7",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "14664f43-a772-498a-8b64-d19bc5b1ecd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.382563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "96c587a1-535d-4a6e-9e33-623deef93cb6",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "96c587a1-535d-4a6e-9e33-623deef93cb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.382546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "1044ec98-8bee-4bd8-97ad-016e85dcfc8e",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1044ec98-8bee-4bd8-97ad-016e85dcfc8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.382529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "304dcdee-83fc-4bbd-bbb5-971fe08f91e1",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Rufus\",\n    \"lastName\" : \"Carter\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.228562144718955E307,\n      \"candidateName\" : \"2022-04-28T16:01:59.380984Z\",\n      \"probability\" : 5.844256899288017E307,\n      \"predScoreFamilyName\" : 1.318945974101081E308\n    }, {\n      \"predScoreGivenName\" : 6.192796089095269E307,\n      \"candidateName\" : \"2022-11-15T13:55:59.38103Z\",\n      \"probability\" : 2.4887875685641837E304,\n      \"predScoreFamilyName\" : 5.310008540793541E307\n    }, {\n      \"predScoreGivenName\" : 1.1922107043941124E308,\n      \"candidateName\" : \"2022-05-27T14:21:59.381077Z\",\n      \"probability\" : 1.551272080731308E308,\n      \"predScoreFamilyName\" : 1.2707333431209635E308\n    }, {\n      \"predScoreGivenName\" : 7.043242936403736E307,\n      \"candidateName\" : \"2022-09-01T15:09:59.381122Z\",\n      \"probability\" : 1.4120062505810386E308,\n      \"predScoreFamilyName\" : 1.7400239509789387E308\n    } ],\n    \"orderOption\" : \"dgr28wwekzs5gash0ta9bykgdibayzce5uov00wy5ck1u82s7d4e80\",\n    \"id\" : \"2hfq\",\n    \"script\" : \"xh8xqa4wvtx5ypwbom5p9bylcpdcv7prwot22dldfgqwmoc1cwi9sq34hw\"\n  }, {\n    \"firstName\" : \"Trang\",\n    \"lastName\" : \"Rath\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.112675691003856E307,\n      \"candidateName\" : \"2022-07-28T16:49:59.381328Z\",\n      \"probability\" : 2.678497142504921E307,\n      \"predScoreFamilyName\" : 9.95555195253511E307\n    }, {\n      \"predScoreGivenName\" : 1.1112718093363576E308,\n      \"candidateName\" : \"2022-11-17T14:45:59.381376Z\",\n      \"probability\" : 2.428709009440396E307,\n      \"predScoreFamilyName\" : 1.3393585291859322E308\n    }, {\n      \"predScoreGivenName\" : 1.2365517108297253E308,\n      \"candidateName\" : \"2023-01-21T14:05:59.38142Z\",\n      \"probability\" : 1.328710457413322E308,\n      \"predScoreFamilyName\" : 7.27445299070966E307\n    }, {\n      \"predScoreGivenName\" : 2.7540544150900793E307,\n      \"candidateName\" : \"2022-07-11T15:57:59.381464Z\",\n      \"probability\" : 1.3647394098561896E308,\n      \"predScoreFamilyName\" : 4.742810566653359E307\n    }, {\n      \"predScoreGivenName\" : 4.879143491769E307,\n      \"candidateName\" : \"2023-02-26T13:48:59.38151Z\",\n      \"probability\" : 1.2692032543141546E308,\n      \"predScoreFamilyName\" : 9.432046645920995E307\n    }, {\n      \"predScoreGivenName\" : 3.290243353461387E307,\n      \"candidateName\" : \"2022-09-29T16:33:59.381557Z\",\n      \"probability\" : 9.835570570657966E307,\n      \"predScoreFamilyName\" : 1.7158158336553129E308\n    } ],\n    \"orderOption\" : \"i8t7uiep8smlbcpivcvf39nl10v46t6i8z2wq183brc6et3fe51nmw92olt9nu930xftiwp1iy8ki9hcspm1c7vewjz5w8vz2lthj9dz0ktz4ikf7qm1dvuzt3tz9kahj74099gxpuoqx66znf1p5wf3j7ec29cbe0v470n7a3h5fegzroqcvlogwx\",\n    \"id\" : \"kyy9\",\n    \"script\" : \"6qk2gzg9kcx82oohddaydi9ba7ytuhlbwl72shzmnc9tjg\"\n  }, {\n    \"firstName\" : \"Ramon\",\n    \"lastName\" : \"Smitham\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 6.365704359857414E307,\n      \"candidateName\" : \"2023-01-06T15:10:59.381766Z\",\n      \"probability\" : 2.3880504353834884E306,\n      \"predScoreFamilyName\" : 1.1092516826483123E308\n    }, {\n      \"predScoreGivenName\" : 4.563669564390202E307,\n      \"candidateName\" : \"2022-09-03T16:19:59.381812Z\",\n      \"probability\" : 3.087068327746495E307,\n      \"predScoreFamilyName\" : 6.257611951885604E306\n    }, {\n      \"predScoreGivenName\" : 9.663785599668188E307,\n      \"candidateName\" : \"2022-12-23T17:00:59.381857Z\",\n      \"probability\" : 1.7536922552471646E308,\n      \"predScoreFamilyName\" : 1.779403404927445E307\n    }, {\n      \"predScoreGivenName\" : 5.883231266843411E307,\n      \"candidateName\" : \"2022-08-02T15:43:59.381904Z\",\n      \"probability\" : 9.600461330664818E307,\n      \"predScoreFamilyName\" : 2.33246703921129E307\n    }, {\n      \"predScoreGivenName\" : 1.6898031087287312E308,\n      \"candidateName\" : \"2023-01-24T15:30:59.381948Z\",\n      \"probability\" : 1.44732172693171E308,\n      \"predScoreFamilyName\" : 9.485183970289267E306\n    }, {\n      \"predScoreGivenName\" : 5.424918901773949E307,\n      \"candidateName\" : \"2022-03-15T14:57:59.381993Z\",\n      \"probability\" : 1.7591649048151042E308,\n      \"predScoreFamilyName\" : 3.7881698536122467E307\n    } ],\n    \"orderOption\" : \"pngu\",\n    \"id\" : \"jtx5\",\n    \"script\" : \"ckh5fm9ko9zm9cqud2oq4a01ctjj3lv8aop5fddrixg8v760cgif0x701rh2rlocjetsfmk13v2l911umux5ece9exk2tivuot12kolmuf1u1d88o8qnif670wbc\"\n  }, {\n    \"firstName\" : \"Irvin\",\n    \"lastName\" : \"Orn\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.0545348721703223E306,\n      \"candidateName\" : \"2023-01-13T14:31:59.3822Z\",\n      \"probability\" : 1.908528557977382E307,\n      \"predScoreFamilyName\" : 8.730713416779049E307\n    }, {\n      \"predScoreGivenName\" : 8.427987917605601E307,\n      \"candidateName\" : \"2022-11-14T15:51:59.382251Z\",\n      \"probability\" : 2.7895489275091086E307,\n      \"predScoreFamilyName\" : 1.4051376925244775E308\n    } ],\n    \"orderOption\" : \"ae03ejdkjpq4lmsr0jmr2d06ipr6mb18qw1vwrc8l4z52tdzgptdmhualx3n6l9ibmgjo9t6x376ez\",\n    \"id\" : \"jkbj\",\n    \"script\" : \"2z5dq0i7eznvd1v73m9z38810fiehouedrodzn8d7wgfooupvop2lczikuqyvg50wgbvv0yttzzjma6bt2qi\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "304dcdee-83fc-4bbd-bbb5-971fe08f91e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.382495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8b6e0890-e9e5-492d-8953-3d4df1238a90",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8b6e0890-e9e5-492d-8953-3d4df1238a90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.380884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "c2caa54a-4e59-4011-a22f-f4274eee7213",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c2caa54a-4e59-4011-a22f-f4274eee7213",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.380868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "a1c6f359-f311-4a6e-918f-2aaa1c3caef0",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a1c6f359-f311-4a6e-918f-2aaa1c3caef0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.38085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "6d3748eb-6ed7-4691-a05f-033b4d6c7410",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Chung\",\n    \"lastName\" : \"Jaskolski\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.3762850659210236E308,\n      \"candidateName\" : \"2022-03-28T13:29:59.380606Z\",\n      \"probability\" : 1.0471260671307891E308,\n      \"predScoreFamilyName\" : 1.165444459993238E308\n    }, {\n      \"predScoreGivenName\" : 1.294248184658392E308,\n      \"candidateName\" : \"2022-11-04T16:15:59.380654Z\",\n      \"probability\" : 1.7534388375382062E308,\n      \"predScoreFamilyName\" : 7.345866502109805E307\n    } ],\n    \"orderOption\" : \"9e8nu8l5ilm6uuvgvvh11rwfeyhk0ztbiktqu7kr87zn4eg36jmkn2upveznqn094k2eoxmoioladbr61iudqsk0qhs206sk4p5tdfduv7rhz9hzgltnqv1o9tam1gpxfnqf4chju1i9j4ajj8obm0ej6mcuaxzusjkqyu4e15cdf0ufuqmte4fj0i6\",\n    \"id\" : \"hn34\",\n    \"script\" : \"t0e5ewihux0n2rkq7iwsnx38as46oz9uq4h939gbum5mylydhzwjio2fechom5eej8gs27odfdzpyaf1l72bly9pwap9c50ejsmaexe77hdpzwrlug648irggoj8zl6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d3748eb-6ed7-4691-a05f-033b4d6c7410",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.380823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "21b05f4e-f8bd-4e01-90d4-7f9f21c2f240",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/j34by5txwt40hc7puz2mgs115r3loxnmry4uejgnuidp47s45uorj5c0iw8ww8qzyaxd97b8qddyzhz0ud917ml8h6ntqvei6wk3zqkpzf0ndr44pv3g3jpuk14j9s1gl8282ed9wwm9qsykyd203wcihpps6enph12cc5ydu8zanw22g7wokiyb2tjno/kf02mcuznx9pqmerlcerrcjc1mlbcue9vdrkflbdrsd25jqsjqwi4932r1zpb03vwoxpubi7fklukqo6tu8q2c7lzf7hqy5jo2vhuxb8456f1ri1hs1rrm2xl8lrubr60lgdpvqds7b3xt",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "21b05f4e-f8bd-4e01-90d4-7f9f21c2f240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.380492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    }
  }, {
    "id" : "a3dd7864-f51a-409f-8f14-3ad34d3b629d",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/rm7t/aicyicyl1s9fw4749g913gflv3l6viz4bewbece4jl6he6x6ea9hczdv2vtwjbi413d0pto5hl0h7u0ahrbwaggbhsfeu0gx2l597khu9rwmfhe8zn7wl2gqfw2bq2zpsce231xsu764nnzkmmq4cfpzsw30bxdlys4kvr0m",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a3dd7864-f51a-409f-8f14-3ad34d3b629d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.380447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    }
  }, {
    "id" : "178cc66a-faa8-4cdc-9a38-c4c5f7b27ccf",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/81hcf0uln73jc27foximzwrruq5y193pf8etx5avkwxhosv1tdldm3x2haefij1icky36pfcrv88s60ivqkr1ac6m2spxjydoxallsb0iozljse5m/8doymxxjwzxhatk81obuchw4pm6teyy63yriwcop4a81eflcxvdx",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Garrett\",\n  \"lastName\" : \"Kuvalis\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.4134765159928035E308,\n    \"candidateName\" : \"2022-10-05T16:49:59.379883Z\",\n    \"probability\" : 9.32406647741339E307,\n    \"predScoreFamilyName\" : 1.3010658829747446E308\n  }, {\n    \"predScoreGivenName\" : 3.101304580555883E306,\n    \"candidateName\" : \"2022-07-17T15:33:59.379934Z\",\n    \"probability\" : 6.178040405331746E307,\n    \"predScoreFamilyName\" : 4.3626530733940485E307\n  }, {\n    \"predScoreGivenName\" : 2.296647728198595E307,\n    \"candidateName\" : \"2022-09-15T17:20:59.37998Z\",\n    \"probability\" : 6.446555130959568E307,\n    \"predScoreFamilyName\" : 4.614389659746463E307\n  }, {\n    \"predScoreGivenName\" : 8.965276581847133E307,\n    \"candidateName\" : \"2022-09-05T14:34:59.380099Z\",\n    \"probability\" : 2.4186032419613637E307,\n    \"predScoreFamilyName\" : 1.2798978056600298E308\n  } ],\n  \"orderOption\" : \"5bkljuvn9tv70cnl2ybrd0qq884uhtoow100uumb30pvxgtrn5grarno3h1k5lfspj67dyisjzfdf4macy5hbco85fti5y7rebn2f1811darx\",\n  \"id\" : \"0x9t\",\n  \"script\" : \"w7r0t96xnekf87fdp0988rzj474qoq9odx1gflsxc7odedl8jdgq7vnexvrk1xa6ed93gjmwerk7b3wj79i6u013cck3ousfnuusrsuj1q6t0o4q2ltveaz6bpp10kperi3lhva\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "178cc66a-faa8-4cdc-9a38-c4c5f7b27ccf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.380388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a397894a-b6d2-46ce-a0eb-3cf7b9492302",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a397894a-b6d2-46ce-a0eb-3cf7b9492302",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.379745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "65bc49f3-a0b5-4ae7-8a67-dca28c15be51",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "65bc49f3-a0b5-4ae7-8a67-dca28c15be51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.379728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "2fca5081-7832-45b3-b4d9-0879d122add8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 400",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2fca5081-7832-45b3-b4d9-0879d122add8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.379708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "c68a1246-171c-4ce3-81b6-a40bb17f3fdf",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"castegroup\" : \"d4u9bx8ngzlvhz9jxffzpjz7o777mn5xp7g1neb1vfn4ix82y5opjmodqy4zrs54rk9yw87txl2b9fyefeme8oorao22tyd78zlk6sd5j1t4yruh53ta8bowfkqhf22zc3gf1akwg4b3aqw6z7k5jafgp3cs5evbu49vlj8n96en0x9p27tq5t2keo4z\",\n    \"castegroupTop\" : [ \"srviksz9laycphq40m5ol3064beawpkie6x1cx5yhs3oe1kgyu47vlbrozth4h7pgf69adabqjknhxtqm43xdpzdcjx04bvmshtvopektpkk3yyoda\", \"nzd23u945u215umtz2fjgfvmfpln4efkoctx5ev74nc145f1iabakhn4wkz6y2zgywdiv0jgpy7ou7zq4kw27hjhm7sikj3g199eoe\", \"hyl7kijjw791i3pu701mvfhmnlxklgus55yhir9mclbnmccjhi6nkbqfmmq9marfdcr1cgesk33462bxpmd4zxo092ybyam\", \"qe765oxi18354slmxojoevve578o1m87i7e8k0yxyuejj7tma16s4bcffdx9l9ykac24zlj0lk6iuoqav79h79ipodad8vqczxvi4pn2qj9s15jiq3y70pt8h\", \"c5y5l50zwenjrgta7ql6wfjb2cnd3q6wwsumdaseupdqczny5byc0az99hvqlzlo9bcyar94uh526nlnvya8ynl9wltifowsd33ebia31exyl9d2xwipzodzsprc8xyyac9e8pnueij4pa7eqsi11r008x6h4mo8spsydq0ij2cm6k\", \"7y5oeq5aubeeaot9j850mcarsnekck5af2pm80k7jw8q8qe5zuvxeugjzncn6rwl7z\", \"za871loikoswse0ssorej\" ],\n    \"score\" : 28.718742799005646,\n    \"probabilityCalibrated\" : -0.09445530973266725,\n    \"name\" : \"Numbers Effertz\",\n    \"probabilityAltCalibrated\" : 0.2969334802193895,\n    \"id\" : \"3b1l\",\n    \"castegroupAlt\" : \"rskc2mvrw5sdjquah2a9aean472jf9jpja87tahm6aed3mg5eg3eehc1vjwjx4axu5luvhok7yfqk0tgz6sov5a3y31q0h1j7yrtc0aze4qkvywlp75wscw2vszr9tm96ki73vpxxxjm35j2mj86atisxxpcw9vtmjj9g7el7sbhdeo1z77t1brv8nv6ozl6ls5\",\n    \"script\" : \"gixqchv8qwupr8czis687xajkrcrow93skwij7366axdxworlhrnjyz\"\n  }, {\n    \"castegroup\" : \"va2tt1avabb20okr12sawgbxqnvd0covkxg8i4fresy8fn7e2x6jxub0\",\n    \"castegroupTop\" : [ \"mcjds2uiesntua0dmgvhoc6cwe00a8a7043r8vl9zwtxysyopt7quxjqsuhps424qcj7ldlzqkf33sxgrg3e2pynrlluyux0czdtu4\", \"q6hisi78w4qouu75bhn4rip6v38mjvhpahx3tqvj15lww3av0oztkon1sllo8q8gsl7z3fqhasegdy95xm33559avyvelyxy5imwbl2d7xp6cvxb4fm15qy7bb82zadkqwdf4lwwobvot26bfigjg680aguahq491e2xmtrd23idl8ognx15uxz6q9co\", \"pf3fl22p7rqelu4selravo0o1eyhsikuw24sl5oyd3mxln1a0es2dbkhwsisimlxqlq137ntnvu25w4erk4poj2ayjunwxun7b5inh941ck8\", \"xcox7ve8rrwoznb7f28r4k2t7beepfzi7g3puc13515ciglpzwzi5ujtoic73o7vcor8fsd1utwo0eam855fjy8hjtiwe0ldebkkeh44ngx\", \"8ygmy9gmk2abwk998207dbn0k3lafm20yulzj8adxcdbwsnpigi81ri\", \"2vqg5vicutt892uoi399aprveymy7ci97es\", \"ay3vz6sbzn1cp7erl9gjrr3562itgf9dtz2qg8s6j46360hzwd2xyjjs5u483qqxp80wgba16xzvo5q47nppbwjqt8ha47s1njljbol17xo8ufijs5xvi2qtwcjzoim0h5htac6mdq979t8zg0bnyaiwzag\", \"fs2e4d3zk58olca8stk95zbvq1rhwoqz75fpu213v56mlwu\" ],\n    \"score\" : 71.62303272966629,\n    \"probabilityCalibrated\" : -0.45164474536874777,\n    \"name\" : \"Miss Charmain Bosco\",\n    \"probabilityAltCalibrated\" : 0.2586419727499798,\n    \"id\" : \"35tv\",\n    \"castegroupAlt\" : \"owc3m6iy6jdiudfkf0661388twc40etp5fh5ycwafs3b5ek8jv4nc7tb0597gqz1pv5px67wiuwus1knisujgqg2cd8z6ttdjafv2ao9nmdrm1167fyvobuta5ojmjnb8mg6fe5fhe\",\n    \"script\" : \"imfxhmon3nweclzinjzh6b31ozn7m6a80c527g8gccfgaf3i1fnafyivob3nfpbqvrnq0kepc3j22c2jqe8w90xeh7sj2xmmcolb9634yl0r2csfzknfinwel75asip0qtu8iuyemtx8jz60jmzq0hn4q3gidgq01ofzfzbftmfoxxe9z4uyher2wktntijey\"\n  }, {\n    \"castegroup\" : \"hxkojv9ahb24x1txx2xvihm3zvhpck1a1q0czho59sxg5ofmhqe1t0y7ghuafxtjzaz5ew24okcswgawynzjds0vpwktn278i7ddn0odhwb\",\n    \"castegroupTop\" : [ \"xfj4me8g3lqvaejq45pi7mf09t0gts18ss1tvu3wop56z88q4l1wuur3i9q5u34zlle4xmw79tep1rvdnrxe4uhb0ul6ez7cxgyy8hd8pt4edr3cjyh8\", \"yq35drpzh13pqwnrz3nekn9nv5zf6t75rae5eze7gj6fd428vlziir8v98gbzs8t73u6\" ],\n    \"score\" : 44.95256126971186,\n    \"probabilityCalibrated\" : 0.14435495386357422,\n    \"name\" : \"Johnetta Wuckert\",\n    \"probabilityAltCalibrated\" : 0.35205626933848033,\n    \"id\" : \"bdt3\",\n    \"castegroupAlt\" : \"ktbi9eqkab0z937tmjkwllsmbxpd4nxmvir15f5wvt68fdepa0ok60s738e04\",\n    \"script\" : \"til5brv8eclrx4gkgdfu12s4shembgaop89o44663sx7p1r\"\n  }, {\n    \"castegroup\" : \"qub1rad4msnz2qmcbgb4is8bi8abylq8tfl4l52ihzseezy3\",\n    \"castegroupTop\" : [ \"6p9pouy8l5ubzagw3oq8tdwjksjr8mx0emvwr47eugfg4kuqhi6rprsw49ho4n1m1y6jwhj7tvv7em1h2klbndlbxvz43e0f38m91xpkklom338dguz1007gvus35q0vyc2rjcje7yelpofq75j08z6armpo0xju9aj8iu\", \"jfr358owvgipok7m96tok3y9a9yh506ncyn4z72lj3nkozkhckew0gkppd95348ru7vcmk1lr652v5ggyev78tpjpkj97lzfur1woptpktp5kt\", \"0gakzhn7aahlksrritwbjsy9gv3v0pgt8jrlnxg522civjj1bukiek\", \"nul348ziv8ydn8rn83j0gl0t5f9kmjwzxlxcupleykon3y9htz\", \"51piduyq3l\" ],\n    \"score\" : 75.44070368380268,\n    \"probabilityCalibrated\" : 0.8201436705208556,\n    \"name\" : \"Loni Littel\",\n    \"probabilityAltCalibrated\" : 0.8814264300438956,\n    \"id\" : \"05ac\",\n    \"castegroupAlt\" : \"ig9sewz2672e5t61whiply704qfrjgc21k\",\n    \"script\" : \"rgbruljz5nvy24qfizww0gnqrhtk2l8yquu1ukmoow0eoqa325j8hikgng3llsb0jgj9h1bntqooa3tg6wm97gy8wrlui8byzetnghqmyhfungbjvy1dfjfy6cxdpy0nlcqbpjb1zpsutk0okxgq3ylw2f9lb9r4\"\n  }, {\n    \"castegroup\" : \"gg95ndqnkcuiri4hqqfk4q6ozwu0myoqi8d63ps0vs4mbcn7qozn3l8of332kemxlirn3arxhm52sk0g9dczta4ckp0ft3frq3fgz5mbdy84abjpghgmlrj9977uq0n9s6plbkupwrbymjfs3rtqmuc1nlq1xl36g1dxchu82h8225405s18m9cnlibmkejq68jew\",\n    \"castegroupTop\" : [ \"3cbvuz64w5wt4cf210ojj26n2iclp43j6r6bls7iy537bjhhvjztm56yj35j5szjdcqgztzajg40oe3ihnua0k84\", \"6yngvhiaao14yyfh2gjr60hy12apt0r24ozoc0yrat59kpz5c47hh21kokjieccwu34l6d7sy4c7zny0n2\", \"fznrog9nl572rf96rhhvnxkdjj8v93glktq2tmvrdem1k2k6mypjvrjx143eygc3dmw5uhv0exr\" ],\n    \"score\" : 47.79504938903091,\n    \"probabilityCalibrated\" : 0.3975162061267583,\n    \"name\" : \"Theron Denesik II\",\n    \"probabilityAltCalibrated\" : 0.24606350737277816,\n    \"id\" : \"2fes\",\n    \"castegroupAlt\" : \"o6h4xzf7ya0l9dtk04kr0edczeoc8b\",\n    \"script\" : \"srex1lkymi4xm34a17ygvk2u3f6g42p\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c68a1246-171c-4ce3-81b6-a40bb17f3fdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.379653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Caste group-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameCastegroupOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameCastegroupOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c4166f19-ffc7-4512-afbb-e00f30b97d3c",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/wplqga/389od7ywpr3oawnuzzvpzib29r1qwe34xzddy8venn1l00dh1z",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c4166f19-ffc7-4512-afbb-e00f30b97d3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.378547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    }
  }, {
    "id" : "6a7f72b4-bef1-493f-ae8e-c6464ac5bea6",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/thc4eys5gp0qoc4s4wfefxu9vqp1itdgnqskt7wiaorhewdu3gwulfslz4ryc8gj14sdorutu0gmmw4jcb10i1fhuctzuto4y5my7di7i2ggjb2pnc4pt5tjc4u8f4/54vzfza5cr364zbsq68580ztq0j8kor2035dkty3eaqlytkf537d797ovzjvozh58mhwtigz8ub9hmnvi6043mrf3lbtrw3arup8j57y72rz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6a7f72b4-bef1-493f-ae8e-c6464ac5bea6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.378506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    }
  }, {
    "id" : "81adeea3-cde1-49bf-b6c0-20d29e1156a7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/3lkobf29tchzs0yfo3azxnjvhtt60l3o/0v6ar583ckbu4dy036limjji",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"castegroup\" : \"s0tn9dj1ueqlgphkbjzd0z284rq9g9386lbwmel1iu\",\n  \"castegroupTop\" : [ \"i7lmjgaja8v3pzea2k8ocutprswnobq5ftv1sz5m9apo5gycar9r6kr08ihnewdu7toq330ae4ssqa2oil7gjwb6fw1h9pnm87jigoaiyxu4lmfixkac5e8uicn02h0373q\" ],\n  \"score\" : 50.7383024770044,\n  \"probabilityCalibrated\" : 0.37515899936237695,\n  \"name\" : \"Miss Shasta Quitzon\",\n  \"probabilityAltCalibrated\" : -0.5191086981962236,\n  \"id\" : \"674w\",\n  \"castegroupAlt\" : \"ioljwkywqr5po4tfzdwx8i1g29tit7teaop2rs3xrm873zcsc0d2p49xy5a1728havlek5dme0ssd3d6xsinmhlnqny\",\n  \"script\" : \"x2qn25hia8jvifgw9a3ml7myde4jimldxnywaexj3eyyprsz0kx6j9cxmwho46cldr4skvjd2va6u4r46z3vpyfoffezxvo5ldfai9ncqklu98lou2od1jhljvgcvfhy63ww9tl9kpn1yyqjh2lrre4znhrrwgrvnu6l5y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81adeea3-cde1-49bf-b6c0-20d29e1156a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.378443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull",
          "schema" : {
            "description" : "Caste group-coded names",
            "properties" : {
              "castegroup" : {
                "description" : "Most likely caste group",
                "type" : "string"
              },
              "castegroupAlt" : {
                "description" : "Second best alternative : caste group ",
                "type" : "string"
              },
              "castegroupTop" : {
                "description" : "List caste group (top 10)",
                "items" : {
                  "description" : "List caste group (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameCastegroupOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "4f531d67-7bc5-4f32-8aa9-fe94107843c7",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4f531d67-7bc5-4f32-8aa9-fe94107843c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.378103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate"
        }
      }
    }
  }, {
    "id" : "142bf639-2aa0-4d9a-9d05-d6d12590bfc9",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rowHeaders\" : [ \"twk90\" ],\n  \"data\" : [ [ 1847892219, 685485879, 1655046077, 448696044, 1950672155, 257180940, 1892292533 ], [ 908476503, 351197935 ], [ 657549310, 943148193, 1362296053, 204673256, 411624105, 609957554, 581978318, 1711155296 ], [ 1870892525, 314067956, 1909620239, 829710076, 1762748392, 734919976, 56042229 ], [ 2131760267, 1625939440, 1008069439 ] ],\n  \"historyTruncated\" : false,\n  \"colHeaders\" : [ \"ihkbmmqqdpzwea4nqkakvdo25etyyzdg458wqmvi6nof3148810y4qilwlefioxgj1tjm93cg5mq0lh9h4p4u45tunbdd00bf0bq84iusry962bjok1zyx1ekn39mjhs7a9jp0dsaacrrogcm63zy47oaygrhekn4k1a6fbk9\", \"55rge8ljse8lx3rfroqtyaftbma71w\", \"fxygl6o9wbrkej8qkjanqikwuw25httyhpimafrf\", \"wrbdx2u5in7n1oep2ixzwll3og53rs4q35fwqqog0xx4ujojszpgny847mmmpoq2l1rbddk\", \"2tck6554hvil1of03rla05ethldtwzmc12u8oevp5eezo7tzxil213ynr6blpc8dyziflf695h64dalan9yx4bpy2cakr730au4swgy8hnh8guzl1i\" ],\n  \"totalUsage\" : 3150605319006705629,\n  \"periodStart\" : 5099976966749483341,\n  \"periodEnd\" : 7385814737399460161,\n  \"timeUnit\" : \"2022-09-09T14:11:59.377942Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "142bf639-2aa0-4d9a-9d05-d6d12590bfc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.378065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate",
          "schema" : {
            "properties" : {
              "colHeaders" : {
                "description" : "apiServices as column headers ",
                "items" : {
                  "description" : "apiServices as column headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "data" : {
                "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items" : {
                  "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                  "items" : {
                    "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "historyTruncated" : {
                "description" : "If the history was truncaded due to data limit",
                "type" : "boolean"
              },
              "periodEnd" : {
                "description" : "End datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "periodStart" : {
                "description" : "Start datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "rowHeaders" : {
                "description" : "dates as row headers ",
                "items" : {
                  "description" : "dates as row headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timeUnit" : {
                "description" : "Time unit is DAY, WEEK or MONTH depending on prior usage",
                "type" : "string"
              },
              "totalUsage" : {
                "description" : "Total usage in the current period",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageAggregatedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "951d049e-3f9c-477e-bb65-52bbabfd960f",
    "name" : "Print historical API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "951d049e-3f9c-477e-bb65-52bbabfd960f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.377707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory"
        }
      }
    }
  }, {
    "id" : "db4a0aa0-fce8-434f-9834-4e21c99e094b",
    "name" : "Print historical API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"detailedUsage\" : [ {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"hvhxklhv3sjz7052dgj9lhxf2t8t28q48ww90ie84pkmefos1mi1kf9t5gl1flbbd16vk61g7syshqe24w02xklkl5pfr2kp38j3frj71upyiv3dalyvp\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"4e6r\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"nnrysqztp2413tgylgv0sy8u0qvbplrbgvby888imw9fpgwg1tpezemseppqpnly95o6y82ibqm5vr1r31zkmjpbnd18yvb5qt8db6lp55d794tawtaslg4kre5vprcubraqyf5wrcspi1tpaew1\",\n    \"createdDateTime\" : 4051871228348910680,\n    \"lastFlushedDateTime\" : 8185900073047721869,\n    \"totalUsage\" : 387851271750326535,\n    \"hostAddress\" : \"ozwpzzxdkbd7f7hkxpmkyiawouy5dz59r24\",\n    \"lastUsedDateTime\" : 1172857525545527947\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"1mk4krpgbcj8j6adiyll86z0re8b45pyvnfihbxm9mp3snx8a6xc2otuqw6q90iaezqmujrqp9s16p0xicbp7zk42t\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : true,\n      \"disabled\" : false,\n      \"userId\" : \"rr04\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"hdm4syvvyr2xzqn10xyuidhhz2k5wb6xx3isg3jexuejo0drj3eqmha9t3o86a1qpyhstrar8f\",\n    \"createdDateTime\" : 7998760470730230383,\n    \"lastFlushedDateTime\" : 7160095315159874159,\n    \"totalUsage\" : 1045516990068475997,\n    \"hostAddress\" : \"ovaqfbr9r219amm53arkoajgp0uuqcyxlram5pc1z95x3mixfvafspv3e9v58lt1gz88phwwq1bgqpz2vc85cjorhuwdxz2fvhz4me4x9746w2d157xs04wb\",\n    \"lastUsedDateTime\" : 8755954212180263456\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"fyhvci0ajgkrx4nukn1sc8zc6jv1j26m12bl\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"m659\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"iujfhw9l1se0ciux2f03etrp33kltwcwmb\",\n    \"createdDateTime\" : 759458292308719990,\n    \"lastFlushedDateTime\" : 8602544096874093295,\n    \"totalUsage\" : 4662212287515571410,\n    \"hostAddress\" : \"aoq3fquqovhlj20lm7funjhcvrnhe3kpticowy7xr5hxg71kss3nc3buegg5hb9yhaf35l8jkeknqvrd0d3dua0oy7927oxh7ggw52lej6lrx3udctyte226pajrvf4ke4udxy9zkqx9kiet3y8dffq7dqewukekmjegh1eirknaglqilnm8ugs09sgh062\",\n    \"lastUsedDateTime\" : 6657770489340128219\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"5smky196tkx\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : true,\n      \"disabled\" : false,\n      \"userId\" : \"00o6\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"a9kd52g4crkr2t61tjkrh6itz0jbyoyslh2s262jka3lpgssfzd5plpciyif5066gpjhmp0f53rktbnlo2jfvheulvqq3f8hb7yizsp1e2evzjee17t3bj0h5cpmocdc5llirm9scek21iixlfhchmvm\",\n    \"createdDateTime\" : 6167093011586577987,\n    \"lastFlushedDateTime\" : 4179061506483454230,\n    \"totalUsage\" : 9071230164922680328,\n    \"hostAddress\" : \"6lihlaxjrv2qarw1etrym5iooq5mc1og1cbm0xs0m2nssxxw5gwv12a76yxtpyw0m1hpsh390vu5w9xmaaclr3c2eehpqu72f6kmx79w66g233rlvvob96c2rphzokc2m8h20t8t8385tkp6tbuk6p6qr4exyh8bgi2n9dpp2pezl3\",\n    \"lastUsedDateTime\" : 1578799433231830241\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"0v09a8t7xderh\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"b7g8\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"iee95y7oqb6l2nxb7u3vrktyd2y75nlmrmp0oe1bgcu7g6\",\n    \"createdDateTime\" : 2350004344005111919,\n    \"lastFlushedDateTime\" : 2983512337025873785,\n    \"totalUsage\" : 390859848343157005,\n    \"hostAddress\" : \"d3nteiunttymicusqc17uh9y74c15grpwvlqprj8iwu1ma9oo397mpfz9epqktx2zujl7k6q3abiaoq88myu2bskn90o\",\n    \"lastUsedDateTime\" : 1857208280009141354\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"ar16\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"98jv\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"h3hggydkhtj1y1o90o68i97y2qyluefmp4pm5hgodmuqvy3cb0krcwox1g7ad5gm4o6zdcwrcihjhls08oxpktkqr7zcjomi3lw4uo9nkprvwdr1tn4j6wje2v224y7a4s686obg4qp\",\n    \"createdDateTime\" : 8588115121665251314,\n    \"lastFlushedDateTime\" : 9032634609978602012,\n    \"totalUsage\" : 6351934111570909873,\n    \"hostAddress\" : \"ytke2fz0hq8nq9j8b2dktj6fniv9wahbnw7wch7ya71xnj2isrrs793m3sldz\",\n    \"lastUsedDateTime\" : 7915914954809522518\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"zsp0n8d4gjdr308odrzbqmmfpumxcuaph0thskbrkdd0t6gnl62ye83p8e7asp2283a\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"691w\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"9db7s8v3s1kqjm8qmq7sw1h54o1ia0s3rc0c06piq3rjgbudcbmy7b9lk4j2xefv3w9nz5ckujuxx7uzm7agg8hm\",\n    \"createdDateTime\" : 2359120740203238065,\n    \"lastFlushedDateTime\" : 5583653746435356902,\n    \"totalUsage\" : 5591520834177473902,\n    \"hostAddress\" : \"dl667dnuuogefd58lryc0kow8buss0olscyfmxnd\",\n    \"lastUsedDateTime\" : 2866244740148338925\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db4a0aa0-fce8-434f-9834-4e21c99e094b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.377677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory",
          "schema" : {
            "properties" : {
              "detailedUsage" : {
                "description" : "Detailed usage as reported by the deduplicating API counter.",
                "items" : {
                  "$ref" : "#/components/schemas/APICounterV2Out"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageHistoryOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "3311afbe-25b3-4c9f-9cf5-bce6c1c571d3",
    "name" : "Print current API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3311afbe-25b3-4c9f-9cf5-bce6c1c571d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.37647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage"
        }
      }
    }
  }, {
    "id" : "0d7aa865-b4d1-43d3-ab82-a18636671a47",
    "name" : "Print current API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"overageInclTax\" : 6.703021052241348E307,\n  \"overageQuantity\" : 6186371104668630148,\n  \"billingPeriod\" : {\n    \"apiKey\" : \"gekwvkwi31g8r508ktd7dmjutuyrywx55j6b8ppf6a005k4i2xuusk1jvyz\",\n    \"periodStarted\" : 2267190373307604287,\n    \"stripeCurrentPeriodEnd\" : 7765582534739890761,\n    \"usage\" : 2836264660072458886,\n    \"hardLimit\" : 7751727439861619217,\n    \"periodEnded\" : 4641108882453929085,\n    \"subscriptionStarted\" : 1678420303290406563,\n    \"billingStatus\" : \"tr9socw05uhbgwac33cldx2our7jwa54kyy3tvdsr5z8cj84g4curbahv6cg1nr8cy2r9dt0mdvryvh1kd06szfxaltnpep6kr7kp7wrwofx3bma2kkm414hmgkdys1g\",\n    \"softLimit\" : 6405082120174013245,\n    \"stripeCurrentPeriodStart\" : 6272252237749812883\n  },\n  \"overageCurrency\" : \"SRD\",\n  \"subscription\" : {\n    \"stripeStatus\" : \"gxzhwb501hsah95w7f3i6c\",\n    \"planBaseFeesKey\" : \"zixxqute4amln5w0lactk9wniyddgcbepotpsxfjiuk463qfywyye62yxwl38rdo734rnqdc66bpe0cmtb8ebspm6or1uf\",\n    \"planQuota\" : 7695267040553640464,\n    \"apiKey\" : \"bspkf00cr5yavmy5h0urx0avcxbygvpsrjh4e3z9oq8gy9o0ad587icv45w3jds0ig08ykt7pivx6vlcnu19vz97adan28bjb6eq0vrex46z9ckb93tsqci6h2uwds3r3uig28zq1x8re9dp8nj6liu\",\n    \"priceOverageUSD\" : 4.935923269469749E307,\n    \"priceUSD\" : 3.0451285735240944E307,\n    \"planStarted\" : 1831773436732184265,\n    \"planName\" : \"Mr. Glen Miller\",\n    \"planStatus\" : \"uosu2homzc288riynxhrk0xuy9390bbnof8i013zjhag5dvp3brsaf1uex4emlbk78xwjs1agl9aaj4tycprmi65iuy3kgf6330rtufnchfrhh691a2ibnak2dkcwttwxoh7vu15uzzmf2psygn8u7f7zk2qqoygj02ws4fa\",\n    \"priceOverage\" : 1.219549184919902E305,\n    \"userId\" : \"8yj5\",\n    \"planEnded\" : 2384040807559601805,\n    \"taxRate\" : 1.4788889485479884E308,\n    \"price\" : 2.491450411861299E307,\n    \"currency\" : \"INR\",\n    \"currencyFactor\" : 1.6234089337005092E308,\n    \"stripeSubscription\" : \"6ihb1yjpcs03cdunbqp\",\n    \"stripeCustomerId\" : \"tnb4\",\n    \"priorPlanStarted\" : 6031913647403592601\n  },\n  \"overageExclTax\" : 4.3923564051738544E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d7aa865-b4d1-43d3-ab82-a18636671a47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.37644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage",
          "schema" : {
            "properties" : {
              "billingPeriod" : {
                "$ref" : "#/components/schemas/APIBillingPeriodUsageOut"
              },
              "overageCurrency" : {
                "description" : "Currency of the overage amount.",
                "type" : "string"
              },
              "overageExclTax" : {
                "description" : "Overage amount including any tax.",
                "format" : "double",
                "type" : "number"
              },
              "overageInclTax" : {
                "description" : "Overage amount including tax (if applicable).",
                "format" : "double",
                "type" : "number"
              },
              "overageQuantity" : {
                "description" : "Quantity above monthly quota of the current subscritpion, in units.",
                "format" : "int64",
                "type" : "integer"
              },
              "subscription" : {
                "$ref" : "#/components/schemas/APIPlanSubscriptionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APICurrentUsageOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6fe050c6-5ccc-4439-8ce2-0abf98515ebd",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6fe050c6-5ccc-4439-8ce2-0abf98515ebd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.37585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus"
        }
      }
    }
  }, {
    "id" : "c300c300-2ac4-451c-88ba-8c4add9151bc",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classifiers\" : [ {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Rodolfo MacGyver\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Neville Ortiz\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Marcella Von\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Tiera Streich\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Fred Kessler\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Emmaline Vandervort Sr.\",\n    \"serving\" : true\n  } ],\n  \"softwareVersion\" : {\n    \"softwareNameAndVersion\" : \"nujhjyn5xc7491vds4mx66w60hg2i403dylnnsowjk335\",\n    \"softwareVersion\" : [ 16969737, 1616477984, 719611436, 916505631, 1335846660, 1541749836, 587108657 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c300c300-2ac4-451c-88ba-8c4add9151bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.375824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus",
          "schema" : {
            "properties" : {
              "classifiers" : {
                "description" : "The list of classifiers and versions.",
                "items" : {
                  "$ref" : "#/components/schemas/APIClassifierOut"
                },
                "type" : "array"
              },
              "softwareVersion" : {
                "$ref" : "#/components/schemas/SoftwareVersionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifiersStatusOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b87e4866-90da-47fa-a281-cbb82f652315",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b87e4866-90da-47fa-a281-cbb82f652315",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.375364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices"
        }
      }
    }
  }, {
    "id" : "15307565-ff84-47fa-b4c2-ff8578ce30cd",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiServices\" : [ {\n    \"costInUnits\" : 851556737,\n    \"serviceGroup\" : \"709kjexyhnw9cjcf0dien7zqb7ya6i3cjmvr9xh9uen7e82ce54n0gzl5o96epvh0q7znsepm629pu9mvczaoveiv0x5yradbuputp3s4bwh2ap2kmlil53d6ghucqp9zi14vukglqg9vcjr5q8cxvi3izrn9dz81rz\",\n    \"serviceName\" : \"Diego Champlin\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15307565-ff84-47fa-b4c2-ff8578ce30cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.375338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices",
          "schema" : {
            "properties" : {
              "apiServices" : {
                "description" : "List of API Services",
                "items" : {
                  "$ref" : "#/components/schemas/APIServiceOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIServicesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "707922bc-a6fe-4111-bd2d-48afd4157a00",
    "name" : "Read API Key info. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "707922bc-a6fe-4111-bd2d-48afd4157a00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.375183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo"
        }
      }
    }
  }, {
    "id" : "3a2d6322-e88d-4c1b-89a9-b6a43a313820",
    "name" : "Read API Key info. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"o212e9dk7kuu4ztab3bako2wo9gbap7sqe9fki4axutxggnsw5slqfcv7larg1k3n7adak3tm248hknoh24yh5anv51uqljwk966srr4141o8do59x85j7dublhwy4rlsnzni0rgbm1k34a75f06zrjv0sm5685ddu7o9xbn\",\n  \"partner\" : false,\n  \"corporate\" : true,\n  \"anonymized\" : true,\n  \"learnable\" : true,\n  \"admin\" : false,\n  \"disabled\" : false,\n  \"userId\" : \"il95\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a2d6322-e88d-4c1b-89a9-b6a43a313820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.375154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5f67c19b-96a2-497f-af2f-95030fbba52c",
    "name" : "Activate/deactivate anonymization for a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/anonymize/3t0nxalpq8g8gp85ibuabpegn7grtf33l2e0zlukkd0uiirv4huwfqc2kxhymya1ou8xqt/false/rae9tyl4emc4qd87s819amfd8vfkm9pj8xvmdwnpne364w6h9yqaog1lcm5ukw6tnsihyu3wwthynw2jft0cp3ju6vpu2tuscd8bg8j3ktuicsklcevaw4rk9mp3v9ayzdgf2txhf87dy40najmpyq36t3r9wzv10k",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5f67c19b-96a2-497f-af2f-95030fbba52c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.374934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    }
  }, {
    "id" : "cc070b81-0b48-4fd4-a085-ded528a93412",
    "name" : "Activate/deactivate anonymization for a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/anonymize/7e2iic0ucqkc0g9lsd5oki4co4ml7o7k2wtaab6mf7pciro7hngw2kdp7dxouccrin1m8mopz93sbz4qd/true/xlyh6c1op6mpsqerks8ta2wc4r516t42svzlm23ene7hflxfgry7swquuvygy506mnshoxslqnpneex56c7vjmanf6vu",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"qx8xwxxkubfz\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : true,\n  \"admin\" : false,\n  \"disabled\" : true,\n  \"userId\" : \"847r\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc070b81-0b48-4fd4-a085-ded528a93412",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:59.374492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  } ]
}