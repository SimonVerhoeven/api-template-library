{
  "mappings" : [ {
    "id" : "7a16c315-eb99-4e71-a13b-ac5b109039ca",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7a16c315-eb99-4e71-a13b-ac5b109039ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.396538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "712785f9-2583-4c6f-8294-fb07d5f1a976",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "712785f9-2583-4c6f-8294-fb07d5f1a976",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.396522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "b8e016e5-43f6-418b-a940-af1806c7efe0",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Wilbert\",\n    \"lastName\" : \"Lemke\",\n    \"raceEthnicityAlt\" : \"A\",\n    \"score\" : 57.87562958813689,\n    \"probabilityCalibrated\" : 1.3500654419494142E308,\n    \"raceEthnicitiesTop\" : [ \"hirm5x6zrzjvs21q4bkcgkhy5n696bmrzpm\", \"wbfcq3zcze3oxbbzt8i9d3xi00dmg3j9giyd4u3ylzwi2afastqpbf1ceds2q1bj0hgd8wb29e6ptlsbfld6hwfqtyuoc9f9xlr\", \"y686j2xt2pfbpbedbkxlqcth9iklbcumegg3tihyh56l2tmj2f35eh5lic8qg6g8tetbswdz7jg9cdbpetx198qf8qlcp9trb5kc920e2f0xtwcae5txw7wosw52vpwzjsfozybvxwys59euo51h3p5u2iqm1sepjk4ym8abffmxnghv7ng9\" ],\n    \"probabilityAltCalibrated\" : 3.2137917794189517E306,\n    \"id\" : \"bt02\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"5vhi0g7gcwjzzsb8pk80671mqj6m8a014oqomi3kv5j4z\"\n  }, {\n    \"firstName\" : \"Chas\",\n    \"lastName\" : \"Ratke\",\n    \"raceEthnicityAlt\" : \"A\",\n    \"score\" : 8.11871960989774,\n    \"probabilityCalibrated\" : 3.750357476149245E307,\n    \"raceEthnicitiesTop\" : [ \"lob2rarpc9xc5fk3y5d1pk4190rel2zv4x5s58uvjivgazow7qysfcvej8lkfeuiw37swvuxlyeavzdab7sepbf2e\", \"0tdhltdal6rxd6uql861u3nwks7z08puji97tg0884yguwc2qvhx3apw23xq9oiaa83f3kby9dzpke2rlxsx3vkqk2fin6tq2jcvm33g1soot1vpbqzo6ls9d9v21fpjf0aanmzu1sgu5xk0knqnxtwee4f27qr4\", \"evj\" ],\n    \"probabilityAltCalibrated\" : 1.3263412625708358E308,\n    \"id\" : \"t4nm\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"mr1htmnmjbp4zdv6i719194a6hwpsixwgc2hkcb0gnuxi81bw3zusmrvqabdq57eegughc3zmn8pa5bq0tiaialliy4dwm7v8oyolmyy48y8vyr614mvj74hdswb60ebf3whaqtdcp0lil73p0knarcgztqtv2gmt96pcc5kdradnsnuvyb6zvzhb0az\"\n  }, {\n    \"firstName\" : \"Leon\",\n    \"lastName\" : \"Cremin\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 97.28184763089332,\n    \"probabilityCalibrated\" : 1.5523580813342667E308,\n    \"raceEthnicitiesTop\" : [ \"ykpwpu9yufwj7w471fxl8mlnsvt3tlhpuyv68eqrbn2wlztxu0pj68o6m5pe3j1c9wmh2tpfsd23oq5610g3ipfv7r21h7tl8nu0lfdt53ow5lb4qiie046ojcms29ecvyjs0rz7o3wtffwpgvvnlf4jdgre2589aodw0iynzkqom5vu4p7\", \"32pdwndobnj16kxvshzwcszt67o2vasetg814orvk72vcz7s1qa8lht\", \"y7sgsapdw2fhzsl87ojd5z4kq8kmm7niy49hun7w0ok78qct992c9o6u5jmmcay732yell4whkzp120gphv8pp288xa1o\" ],\n    \"probabilityAltCalibrated\" : 1.0029325884943946E308,\n    \"id\" : \"z0uh\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"vgkw4h1szy7285\"\n  }, {\n    \"firstName\" : \"Zachary\",\n    \"lastName\" : \"Kris\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 62.274723177900945,\n    \"probabilityCalibrated\" : 1.0595090665122262E308,\n    \"raceEthnicitiesTop\" : [ \"3yezf7hobhy770myxu51t3iamita7dx4fpg6c\", \"twaxb9quobf6of5u7wq7xzpgf8s48fzcjmhquwytknu50vm726xunx69ldphyow8b24k5r12\", \"0dlf4dh08sdnx995ruzqddznu8pni5e6a1rext76rr7u4jpw3e78x8ur2ar7frlspsdidrky19vjw5p6idmjf3njjtmmamrqhx2rhk1rxym6weiehckgbv9bvdlikut63bb6tw2ejers9jp5b7a5sw2a0qpa5o5i\", \"smmrfs9dv1kv9bxrvi35okx9t4h5109acgx2dkpl6us6xneipvanlj52xhojjh0e56d4jsohvje4ht3llek58xxxksaqnhhxrragvwjra8bme4lckqdpfx7pzthstv96psjwz89lumt8jkvru0w9gmzuylc7xpnpfwu2ikff8xdqkkerj77662o10fu846z\", \"5oa1l2kh0r1y8us942k0kmpcpm2phjn33drmkqlwfjdo6zz7egv6c7z2ms2w2f9t65\", \"6ym2rgjz7v6cvcoo7reeh7k33kyd4ksxc3bbbtwhnalsqz88x8nl06euomw637lugt9y63jg7c1npundxofdtv3tn8i7t466c0oshcrnf0upirbwi8l9jmzh5rg\" ],\n    \"probabilityAltCalibrated\" : 1.1349809382705836E308,\n    \"id\" : \"de60\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"9fhoonirsbysk7z8gtgilz5htdaw0639u71u9ck5nw9zxofkb7xtf1zuiy6juufjrccgl8yuq6v2qlgnro7e48m3lrfgg1lg72epigr4mn12omsx009r6lyny477cmp3v9m8rzwoat2p\"\n  }, {\n    \"firstName\" : \"Jackie\",\n    \"lastName\" : \"Macejkovic\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 81.59147752179224,\n    \"probabilityCalibrated\" : 9.461225934589004E307,\n    \"raceEthnicitiesTop\" : [ \"luw1av0g7qo958nc93804cqogufyunl68ulet7c690sa7tpuhizma8ymsisa5qreo1xy8gutoa80jvh9pucp7\" ],\n    \"probabilityAltCalibrated\" : 1.2036134523667618E308,\n    \"id\" : \"p17q\",\n    \"raceEthnicity\" : \"B_NL\",\n    \"script\" : \"pxuee74\"\n  }, {\n    \"firstName\" : \"Adelle\",\n    \"lastName\" : \"Becker\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 10.45609938775961,\n    \"probabilityCalibrated\" : 7.887286086633799E307,\n    \"raceEthnicitiesTop\" : [ \"sw04wvfutpg25w1023x6ohi83i4ir65ddlt93cxa73wjluko3494imrpnotw0fxqq5o2chb2mvk7j6rod68jwikoyzotmgpe7i9ls3vd6unouqp994ww2gfxg\", \"u2f2kpgdnxinw5zwrmtgwffhr98nmv27c5stsyrwjgro57udnb2ar5oxbcaib9039sffa67yj93ejfwgw3z2qcwufc8nub\" ],\n    \"probabilityAltCalibrated\" : 7.518340778999613E306,\n    \"id\" : \"254k\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"76omaewjn9clfchf3wpatd890g3kztmhtlvy5x1i14sqjoh8o5m02ql8ht66b9nc82fruenl1nhynisarvaqwvdcevz002lx1rf2cczb4jx8mr\"\n  }, {\n    \"firstName\" : \"Andrew\",\n    \"lastName\" : \"Osinski\",\n    \"raceEthnicityAlt\" : \"PI\",\n    \"score\" : 85.64643020709322,\n    \"probabilityCalibrated\" : 6.726967566433524E307,\n    \"raceEthnicitiesTop\" : [ \"oh8m3m7nszjgx4cl8z0ow9vftwmerixmyk33wys8g7y6c9t03v8i0jigzbrrtf5roea0gr6bxz2rfwou4gnaisrif8\" ],\n    \"probabilityAltCalibrated\" : 2.5622168409606512E306,\n    \"id\" : \"07s4\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"qs0cnp16ccgf2v4ljid4jivha\"\n  }, {\n    \"firstName\" : \"Carmella\",\n    \"lastName\" : \"Sanford\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 42.61713341020894,\n    \"probabilityCalibrated\" : 1.6214407885588462E308,\n    \"raceEthnicitiesTop\" : [ \"0a76a2mo30zsv6j110kcr8o438xmc5zcds1gf7kmey2shs3q3qnqvec5dsfsm2pjhjfbjfb76xkl8auf7aend\", \"9iil26dm8y38zywdtjb4tug7vtorwqripmo2pvge1joqc01sr8cel2mgcgfd10q3yekk3vngv9m2p74ar4pmm0g8sa\", \"3wc3uw50h1dv2gfsyhyg4dg7sbif6yng0fd0xi3inohj3sip6i0g3m7rhl3hvcgmvuk8h7sibqtwfn6xko6a2zrg2aeq6m3xrka5b581ya4ytmdw2\", \"u1w326ygw4un6w1rblmh6bep6jqvswtpd4qjzme37cuacbmvjeumb0yi8qqsls3tvpxqlueeqc4iqmzetlq5kr4lp7fdc4dgdqzrylb3q0d1aq2fb163l8hwlrw53ym\", \"4cauqm11g640zhahhfq6mlma2i8xlc4itrwyc7dbn3dbwmvyt939cjzsw6fg8n77axhvhj\", \"f23t5lxaznyq34pfifbs8c264suo2011q6ok2coqsz30jni058g9uxtcbr8yhuncprt2iofrq88rj1izx1j102c8tlqfycyjo\", \"thmwujmyqgpn3xfhlcax6xx20a31dtg6r05g2n0u1j271qwf60\" ],\n    \"probabilityAltCalibrated\" : 4.1747875923712016E307,\n    \"id\" : \"1l51\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"hawgc0c85f9qgfp7ujsoi47kjyw6ytn6mfpr80nfa36gkclg1kpo0v45ypx8hf1k0tf9irrodx0yzgzvbjg5amce2r2rhzrdnrlypk3ea0cog9fwstqb0jiit0msx8dr7yfuu5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8e016e5-43f6-418b-a940-af1806c7efe0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.396484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b7a44b53-a6eb-422d-bb4a-441875e158c6",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Ute/Carroll/86532-8782",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b7a44b53-a6eb-422d-bb4a-441875e158c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.394962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    }
  }, {
    "id" : "f26d398c-8adf-4112-be06-1ad22e007cee",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Emelia/Zulauf/02173",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f26d398c-8adf-4112-be06-1ad22e007cee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.394886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    }
  }, {
    "id" : "9b91afa8-fde6-4464-a1ae-b1dedf5f6ff9",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Ahmad/Schuppe/64521-6197",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Kandra\",\n  \"lastName\" : \"Boyle\",\n  \"raceEthnicityAlt\" : \"HL\",\n  \"score\" : 2.701083248583369,\n  \"probabilityCalibrated\" : 1.6974898109501008E308,\n  \"raceEthnicitiesTop\" : [ \"bb0c9yhhojlwgw9k42fep1tz6matkj6n72507jrzlwjeng2t0jzbwoy\", \"lst4p5ltew9cwmkjnzh4odrt3yqba0xm7e1jr9gn3k4ctenu1j2ubue3gez98btv90p0ncg7tmkp\", \"idssjy4c9z7xqr60oftzjkoxvd6ldbidif9iobuzapk49d5qg6o0x1tlon1d9cmx74e8cqrg1k3mi7l2gs07mbxfawcud4xi2frodg6xm8zk61wginzpwyzpr4jta5s6lttevpucqek5pjssbawxs6t51w0yv5aj\", \"hff1feh29s3tquaro4bzy1z52yun8d9c0rorkt0eu4jf2he37msd0q1v5cgtk7zsvoi1oarqpqtihmua8y3x2j\" ],\n  \"probabilityAltCalibrated\" : 1.179284346875242E308,\n  \"id\" : \"040z\",\n  \"raceEthnicity\" : \"HL\",\n  \"script\" : \"yb7pof98mra0dkyij7runz5p2uu5q3vkqsbxbarha37awaeigd7b6z9a7mk6ou2kwsediuiw2j187nnei8y2asj7zoibd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b91afa8-fde6-4464-a1ae-b1dedf5f6ff9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.394794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8214e47e-d282-409f-9594-23264ec2195c",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8214e47e-d282-409f-9594-23264ec2195c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.394437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "4fdcaa38-8145-4f7a-b7a3-09c66702e6aa",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4fdcaa38-8145-4f7a-b7a3-09c66702e6aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.39442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "c00009e0-6c0b-4a20-b474-2a2a93548c8a",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Lavonia\",\n    \"lastName\" : \"Auer\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 86.3486548706178,\n    \"probabilityCalibrated\" : 8.649296968248776E307,\n    \"raceEthnicitiesTop\" : [ \"xf08hmmwlxx1s1cao1pyvb5xc\" ],\n    \"probabilityAltCalibrated\" : 9.296632646481701E307,\n    \"id\" : \"95w0\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"hmqmlr349jarzv1l5z6xw8nyq54ljbthxj7f42iror9y0hpydrfstr8xezol5zspb3izmgerjg3kxvgujh5kym\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c00009e0-6c0b-4a20-b474-2a2a93548c8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.394395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1cfdda61-d486-4e11-9941-4b7768051281",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Lise/Reilly",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1cfdda61-d486-4e11-9941-4b7768051281",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.394154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    }
  }, {
    "id" : "80813c3f-05cc-471f-a533-e25633a16870",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Rachele/Beatty",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "80813c3f-05cc-471f-a533-e25633a16870",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.394092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    }
  }, {
    "id" : "8afae9e6-bd30-4bc7-8d78-ea1642ab0c6f",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Karl/Nader",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Kym\",\n  \"lastName\" : \"Nolan\",\n  \"raceEthnicityAlt\" : \"B_NL\",\n  \"score\" : 7.453591191339837,\n  \"probabilityCalibrated\" : 1.2597482292244453E308,\n  \"raceEthnicitiesTop\" : [ \"fdk7rofpl52qvjpkjjjp2qbx684z8i35e6jabc35lh8c2lbzhqjfjhgsxorrnha477scuf6b061f86kxly3vwkam4yjq4mzxx30n2cksl42z0yiy1c36sghqn8ycd\", \"dah772x85qohx1bbq3oinr0po6wnra76ccgsurrpiey8w1605fdiy0y2a28c7qdy8zv4zieju01i5xlzmh87uiz6\", \"8v21uueocvdyj7nuva2w8lvb7qa6k12e0h4jr7pvbnr0p2c9md3dzgx8q17mws2dv98gh663sbwjpfkq0rv6hz60xvtww8zenr1fsph49vn\", \"kxpdqgh30eiq4gr9mhix1ydy52jqfz9a1x964cugq0ohelvks57rnc5otb5addt1cab0m58\", \"87f986qbt37iav7uacs46dvqgagxg3wzhanob94w5i2qvx55tcmc\", \"jn9koatfd1jktc7ynk0z3ccv9wdde1109bfhq81uau7rfsphutyzy79jcs9cmrx2ue5s8kd6gub0tqx6nsxec950eie\", \"avevhu12rqaa9x\", \"yeav7lhl19dqivspylkw9fmlpbe5q03spsbdjhc7tvmky9telu4b4z886n77xmwo9irzmz2f8m478v72nt5xjo32kttos0bmyzmpir05yqsflg9awuq06o852f9cwcwh1gr68dg6de08i4medg\" ],\n  \"probabilityAltCalibrated\" : 1.7095502072443136E308,\n  \"id\" : \"17ao\",\n  \"raceEthnicity\" : \"PI\",\n  \"script\" : \"7befly4i7r4oz473pesf9nzku1b3fv6htujj6cbzxxd0y2pd9bg97a7feqtdvv8l5q8fbxagymbd7wrxa8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8afae9e6-bd30-4bc7-8d78-ea1642ab0c6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.394011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "37d98a9c-1a16-465c-b94a-5a05c7e5dea2",
    "name" : "Print the taxonomy classes valid for the given classifier. - 401",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Wilfredo+Tillman",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "37d98a9c-1a16-465c-b94a-5a05c7e5dea2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.393561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses"
        }
      }
    }
  }, {
    "id" : "b327e564-ca48-486a-a24c-d89de03d3d79",
    "name" : "Print the taxonomy classes valid for the given classifier. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Dave+Gleason",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"taxonomyClasses\" : [ \"jjxrxvwxainx77p9cqu9rx8e05i\", \"rqxk6km8nb7qjy\", \"nku3lwtrzaqx72kuhaixi763bke5a2rs572rdockvygcds5\", \"lrq9w4gil4aoh6ftomoe2xl6eqzbensk0358ygaxajxpo8h70\" ],\n  \"classifierName\" : \"Amos O'Conner\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b327e564-ca48-486a-a24c-d89de03d3d79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.393493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses",
          "schema" : {
            "properties" : {
              "classifierName" : {
                "description" : "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
                "type" : "string"
              },
              "taxonomyClasses" : {
                "description" : "The taxonomy classes this classifier classifies to",
                "items" : {
                  "description" : "The taxonomy classes this classifier classifies to",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifierTaxonomyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "11f9de81-ace0-4165-9dc7-71e73a399f7f",
    "name" : "Get the current software version - 401",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "11f9de81-ace0-4165-9dc7-71e73a399f7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.393296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion"
        }
      }
    }
  }, {
    "id" : "4cf885cc-9ea7-4353-a852-1a4a05316d66",
    "name" : "Get the current software version (application/json)",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"softwareNameAndVersion\" : \"lwecplstku6ujdtlcw9v1yhs4oqqcts65wkhtap47w1e9aj31s3foy1t0vom46wim07wpelbgoqmo8teipkr9fvrbgdj2iak3rniju9x3oddu3oklo3cazqvq8bxah241yvzxf8jzkqs4b\",\n  \"softwareVersion\" : [ 1142331001, 1967753798, 1072434555, 1554854372, 1679393840 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cf885cc-9ea7-4353-a852-1a4a05316d66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.393268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion",
          "schema" : {
            "description" : "The software version.",
            "properties" : {
              "softwareNameAndVersion" : {
                "description" : "The software version",
                "type" : "string"
              },
              "softwareVersion" : {
                "description" : "The software version major minor build",
                "items" : {
                  "description" : "The software version major minor build",
                  "format" : "int32",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "SoftwareVersionOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a22858b5-4c02-4f84-998b-901fe0cc5a88",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a22858b5-4c02-4f84-998b-901fe0cc5a88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.39313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "0df53f7e-7bda-4d00-8853-8498dc9c2b82",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0df53f7e-7bda-4d00-8853-8498dc9c2b82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.393112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "e835f80c-6eee-47b4-b077-35e8741289c3",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 57.59850904829267,\n    \"firstLastName\" : {\n      \"firstName\" : \"Cristopher\",\n      \"lastName\" : \"Schaden\",\n      \"id\" : \"go97\",\n      \"script\" : \"c3oxg3h08le3v0qh49og8fwww5et83xl1pxtqknqe7fwmrkjm44a\"\n    },\n    \"name\" : \"Mildred Bergnaum\",\n    \"id\" : \"tik5\",\n    \"nameParserTypeAlt\" : \"psiwpkux4d2pkdu0qharfskzlfv87fggf5k4u\",\n    \"script\" : \"ftvg3ic90vb1s986svx\",\n    \"nameParserType\" : \"a53iqw6ksh4fwa339q747k6zkfj1sw8f6xmkwf3b2ystsl9n79y56woum2ab74qr6uz\"\n  }, {\n    \"score\" : 11.002519765349605,\n    \"firstLastName\" : {\n      \"firstName\" : \"Tamar\",\n      \"lastName\" : \"Marvin\",\n      \"id\" : \"wa17\",\n      \"script\" : \"a2qd8rkim0u2419dhihse4tvrfxxkeks4u1aqcawg7q91elewq5\"\n    },\n    \"name\" : \"Miguelina Bergstrom\",\n    \"id\" : \"0619\",\n    \"nameParserTypeAlt\" : \"2oqysjg0ix6xizw2lx2w1p0zteaqbi70b9n1b2uz7tg343us4lbt0ch0eqeb7ag49m4m2a326ivk2s5q6cugcd7qj1umsta2gfvu9lrdybtas6t1b8gfaw664tufswvboz2py5bigdtf6mkc25qm41\",\n    \"script\" : \"ehnw3qae8rfxn51n4iezdkfp77n1ae753967uea0w167nfpeir67hhzqhpvjs3a43tju1o5p59d1d81ztgqhjn7ntf5n26g0izb3\",\n    \"nameParserType\" : \"x95tua9gfk3tyvutlet0y2uv3ywgoeq6farcvz32ex0jdrjav99vdfpzlc4leekjtcb526kslkw4k8ygd5ejids9hklrrv3w5l9th8q33fzgvj9508284g3qfv36227lj6pqjcbbhc94ryguzxuc33f5mi13b249cb66carz2thiekl6n8p4z23kyjo9prnlg8pc4zw\"\n  }, {\n    \"score\" : 65.58520142053754,\n    \"firstLastName\" : {\n      \"firstName\" : \"Benedict\",\n      \"lastName\" : \"Borer\",\n      \"id\" : \"n5zq\",\n      \"script\" : \"6bab2vf93pi5k16yveugo1kerhzh7j1lyq8nte2fg8ylji3wcsy6euzcvw2915adbgz5q7m9cddvmu2rt7wsbntncy8\"\n    },\n    \"name\" : \"Sharlene Blick\",\n    \"id\" : \"a5c2\",\n    \"nameParserTypeAlt\" : \"nzcm9jd4hubtsq8iiw\",\n    \"script\" : \"n4kys48xm3oiqm0brr2wjnmcyms12p9kkh00vped3ygantxccvp2bsuhm51mkfvvi6qfp8ct\",\n    \"nameParserType\" : \"6fij6o448edl8yier5h14fqa2xa41ewna9ild8vlmsvrgxvx3jf6gzq0fb2281pw\"\n  }, {\n    \"score\" : 98.4879277483928,\n    \"firstLastName\" : {\n      \"firstName\" : \"Gil\",\n      \"lastName\" : \"Hettinger\",\n      \"id\" : \"68rz\",\n      \"script\" : \"fi0p42eqm8zowenpnd7d4rwwukoxgd9339y39tluvij3hcr9v2irxxdxwie90xwedw4gqhskzssj2920trkzny8ibjian56dz2iguwlkrfy305udzqo52aam11q2gtsyvn08ectu2iwo20\"\n    },\n    \"name\" : \"Mr. Selma Kshlerin\",\n    \"id\" : \"fv1b\",\n    \"nameParserTypeAlt\" : \"xd0k6rsaw2wf43id770c9vuiqw0qe1fgdwtmgf2dnz28cwgzd1xsyvrmal9qoi875627\",\n    \"script\" : \"jx4ogtw01j1zjzhmzd4a8tvgypbmzwdbqcfud0wqtcsnk1j8xo\",\n    \"nameParserType\" : \"zknhc78xz5qosldrit0mksxe8pj9nwajstemowtm8ocg7wl0egul\"\n  }, {\n    \"score\" : 51.55027771377074,\n    \"firstLastName\" : {\n      \"firstName\" : \"Morris\",\n      \"lastName\" : \"Bechtelar\",\n      \"id\" : \"4469\",\n      \"script\" : \"470132bhhh06q478y3h10ifz3qkp0dodo06kq7iy56wikg4hflnv4a26e03ghql1aghtu4jss0yngu1dw0n899e59qs2tyb9mzk7veb0dqp7yauygpdv5u3ju69k5uvegbv67jpdad9p9y2zpomab6w\"\n    },\n    \"name\" : \"Rayford Mante\",\n    \"id\" : \"e943\",\n    \"nameParserTypeAlt\" : \"ijqukc0gch3df9ne0m70nxd975t6essegt4jg10v6xfi8mxvsuh9a8fgkqh5ax6rk47kvy2c44lgo8rkpyufygxo6nu7btw839vwgntf01xvo3jvedmruae0dxz3as8v3r8ck4y4zxourbm6mba4\",\n    \"script\" : \"7vy9o12watgcie349o9dli72z8hfsjrtali31a6yyupnqaprupo8u7pir7aapn1euis3f3a995fw7ikw62h29goe4wo55f2ksczs0yyu5gljclkk5zure961emyxgiana\",\n    \"nameParserType\" : \"tz0knwlrpve2jjnq1qixctcbewopvq5nx2f0jti9m4v7odtafazirzz6cqvsbun8u80tz1wuig8y84\"\n  }, {\n    \"score\" : 41.187967563736684,\n    \"firstLastName\" : {\n      \"firstName\" : \"Boyce\",\n      \"lastName\" : \"Schimmel\",\n      \"id\" : \"6z46\",\n      \"script\" : \"d0c9kykmvrp2mkypccdx4n7nv9gi0xvywobx3fggt611er4gjb9k1wws55tzj66p1z4o0g4w5olj98mp33t3rrcfc11cwn8\"\n    },\n    \"name\" : \"Dara Weimann\",\n    \"id\" : \"9e40\",\n    \"nameParserTypeAlt\" : \"jwinx5s3sz0pdtksd7jckkm1z071195a7q8b3l858yui9lzy3vu6561sj6ssrbasg8kakvsoq7n3h8v25httk3n883mhs6\",\n    \"script\" : \"oais8tjyydi9u4pc5v1q4iaehelvb3z5l6ss62w02u9mh37chctvhk0mw7jjpe5h9h8rzvn7lk7nkmb8xvahz3idpryg16hcngqjodh2w\",\n    \"nameParserType\" : \"aapjbvu4i8pycoaf6l\"\n  }, {\n    \"score\" : 63.70738702355514,\n    \"firstLastName\" : {\n      \"firstName\" : \"Humberto\",\n      \"lastName\" : \"Terry\",\n      \"id\" : \"n78v\",\n      \"script\" : \"8elcfnigfd0pruitmnsav2utfiiwwlvdag5kee59qbgyj8gcuwkuedl60dr9lpy\"\n    },\n    \"name\" : \"Cortez Morar\",\n    \"id\" : \"yldx\",\n    \"nameParserTypeAlt\" : \"1i8ya91d70slxsmawse465a2rnk3cvat295fvfh5vn021dkzh0jvb66tmwmez9j84jmqtkn7af4djj2xd9upj9731cq6p\",\n    \"script\" : \"db476mccr7lbdlmlym3dfkd744wny8wnn6g7qrkj9e4w5tjp5iam8bm21oqt43sgw2kp3l7kbnywvn8d9ssm4ptacng8jpon7r65i468\",\n    \"nameParserType\" : \"ui3rnkrhc15itzyq88yj4xgrwox12ui3y52m5bujbooq1avlhk5azs8ugakjejm5o316m7h4lq8sn3a8lkj4qukqhmf68ciarryb092wp17o9iskk2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e835f80c-6eee-47b4-b077-35e8741289c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.393067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8e0fa5e8-d153-4689-bca1-53d24ea35e33",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Nena+Hermiston",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8e0fa5e8-d153-4689-bca1-53d24ea35e33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.390951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    }
  }, {
    "id" : "6b7c5663-5338-40db-8054-e8838e67f55f",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Vito+Smith",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6b7c5663-5338-40db-8054-e8838e67f55f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.390894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    }
  }, {
    "id" : "fd772b12-6538-4aa2-8f1a-3649399f7f62",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Steffanie+Ankunding",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 21.99210659726223,\n  \"firstLastName\" : {\n    \"firstName\" : \"Kendall\",\n    \"lastName\" : \"Aufderhar\",\n    \"id\" : \"z9wb\",\n    \"script\" : \"q13tpl196i7ay9nj5lrszzqtni\"\n  },\n  \"name\" : \"Lon Kuhn\",\n  \"id\" : \"ha83\",\n  \"nameParserTypeAlt\" : \"97n6fo9zzccrskjf2pju0yiroak5d15dpwv\",\n  \"script\" : \"4b6arl9akijfudz2e0rkf3bya1cvjs962ohe\",\n  \"nameParserType\" : \"fh7ardepizffxskc0w4gb2ldijz416nks\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd772b12-6538-4aa2-8f1a-3649399f7f62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.390816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ada38476-253e-49ea-9664-228c8efe92f6",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Sam/Moen/%28863%29+095-1330+x362/yx3fodnpx/5bqzdeep8ruh289ks3khte7hvp0xxrhdbi6twjrmp3gimhkhdc3pwg2pcme65d12",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ada38476-253e-49ea-9664-228c8efe92f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.39035Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "1d834fbe-d412-4574-a94c-74324244fb4b",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Margarito/Block/069-849-6770/554qpsstkwh3okxheu3l2wtljjamoknntzy051tf0uh2u57vf88en71dpkmy3995gf0lusnyxsf8avqrpa8bphl89imf05f7ugez76hx6by5i/7bp3fchnqecgr2ocgrw8oew8bm6tx5r5ziqdvza2n3y9tzt1uh7z1e1hrz9lel6wr9czt9bej0mgm6bv1dahitfx2qdcgj5vqfghlgof9lygipmodms9ehs4bfhmu0yn18xs7i6pmbwyoxbjrha4",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1d834fbe-d412-4574-a94c-74324244fb4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.390253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "01548fa1-32c8-48da-ae71-a2150fb225a0",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Jacelyn/Erdman/173-706-0033+x7801/cm60ch8s4e7vxwvv2uiancqv9kv9nw6fn4r30xxvwbxwiwztf91thuojk/b8rvqomcyevr5881ibw7fg7135tz8oe5jt7mvio5s51wsm4b4a1cx4wg30knimxkbs55rkdmn5vx5tzb712eghne9q5hnibbn3ajv1qyams2z40u4ug5mnjcikkyyt3nqs2tjt6762dfqrswrv6xq3gm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Medhurst\",\n  \"originCountryIso2Alt\" : \"pzssv0kcjg5uvt2ho1shmspk7crqgcvx3nuohr0nsy80dtchvqxf88lwlhxpajmac0cqzyll0fz2gmhfwt9mranumyn536h2hjy110uh2ete30j31dvklv1rsdo6mx81twdzv35s7pfpvzfwo40m89u2ywqscenk02528700l5gbgcquharzcml8xgmf1eyfby\",\n  \"phoneCountryIso2Verified\" : \"3yv53d8jbfgo12tmbvb425zgszpukj91omjm5irsfj0gw2tca74chvbmj2umszjbn67wy2hkipn1ilq3yqjq1mxh3chqmw80c8lbqtv4kxgpol0j9rzm6axmpufi180jna4for2zuatqyh33hj52fzbkgg86n1bxlwicyw0lf5yd8ej3mh4tpdekwl71qx1llfjh\",\n  \"verified\" : true,\n  \"script\" : \"ghr69upeo0958jsxshuqf0kx1sr3uyz8x1fr2kfk6sohgcn6sf84jfup2wg25r8h5xcymoq6z2hgj5mc4712waong37uaheejafspi9l3w1ejid51wz82lr0k22re9278yoz3wx5fzkgbdeijkwatp2bun62junfv2n9tb8h7760\",\n  \"firstName\" : \"Carson\",\n  \"score\" : 24.294993636909666,\n  \"phoneNumber\" : \"255-446-8776\",\n  \"phoneCountryCode\" : 2086155691,\n  \"originCountryIso2\" : \"djouf285d28fsuzizcfdt4ghzz3pxxq34keji3jvarv77i6qcpedasjni6gzbr86v7spev6n8q2b5al27nbg7mr5kfz7x867js\",\n  \"phoneCountryIso2\" : \"eloicxmwuqmfqx30tqsa20axwgdqpfb0nbb4bitncvvq\",\n  \"phoneCountryIso2Alt\" : \"hffoxu5fkoluhhh1xcwcxvk4hui06v0ukjndyvsxmhtlkvcivjvwlm3ulqsjzre4n5be204w22pio2u5lysv7i5v6s8ird55vulv5wlv8qqzxsmpxm6v1z3mm4artxshdmbk44\",\n  \"countryIso2\" : \"22i2f1ki8zicd4yoz83zdbrsiitzomno2gar3sl648hu4lgsy85jn6nqjq0fjgr3x3bvd8qg3jirl86ri2mvlsax2dotj2000r1kci75a35al51aoc6rmym9q0czrk1m17wv09s056fh2h4x64tr3v3ldusf86k6\",\n  \"id\" : \"29a5\",\n  \"internationalPhoneNumberVerified\" : \"cdeyebcy7ypm9lurdmv7yjjyed495tybzxzcajfjmix06amyhasv55sinmfm7x3l7h2s54nymww5vhw8ec7f9lstf5v080k4wy81f5grcqfsw5h1qse2e1r0vopma7dktf98ssyqj21exkrh9b5h0za8v1dsudehut8\",\n  \"phoneCountryCodeAlt\" : 302555861\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01548fa1-32c8-48da-ae71-a2150fb225a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.390132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d7ea6432-9727-43c3-abca-a8950e5c6264",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d7ea6432-9727-43c3-abca-a8950e5c6264",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.389614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "f2dc804b-4f93-43d6-9ae0-329f8636b444",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f2dc804b-4f93-43d6-9ae0-329f8636b444",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.389598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "67b09eec-ad0e-4d28-9dde-d56dc7bec680",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Sauer\",\n    \"originCountryIso2Alt\" : \"ws0p8tzdkedz31v37czk9toojws49pdzb74w05p3e13\",\n    \"phoneCountryIso2Verified\" : \"xc753qdlqy5y22xfrwwfn2pt3n8ts8i6yrwwotvjmzfefe1f13f88qhrksqn3l6qfklnces5jt5zs9h0yetjt9pbv5n8023t4qnvn40omqeexyx7tvs46c6i1msl2da02\",\n    \"verified\" : true,\n    \"script\" : \"z5erjsl14nve2fdgh622jbh9aazmstei53g5uqcedqek4cu7fstmqx9q4kovjtoegirf8owiczyy6auxwpczeto2q6projvjl2vt0u7cqn9tj9obuy27ji3i5\",\n    \"firstName\" : \"Kendall\",\n    \"score\" : 8.21433392481058,\n    \"phoneNumber\" : \"416.036.8175 x657\",\n    \"phoneCountryCode\" : 1605449488,\n    \"originCountryIso2\" : \"m7h6anfabf1ip1y1y4kosglp9dtcbkzpjyg9lqlrpejnqawzld62i0tzel0ugpcmxe37n182vkkkr8l8n5we5zk9wl7z2xu0l4whos8\",\n    \"phoneCountryIso2\" : \"4e41ahovuo2ucz2tycbqwfxm62rmf0ki3670x2tw98tw5emn3rlzgorbwvfb5qxvi12btb46mv7xw32ce67o23dntuw9ej8wi2f0qmuah2fy82sfzas2yqbvautu7tnaxye5g6lns113rnm0yvl96k5n\",\n    \"phoneCountryIso2Alt\" : \"xen1zzkweeanlevj11rmxdm2svlt17rraw3emdfxxjxz7ia6cbzkvcsuac5tyxobxwlzsch0koawljowxigdadmbva91in0p8npsqhxvfs7jffe3a5xokp2xdp3doxp290gvo2d6m0zwykf61p\",\n    \"countryIso2\" : \"26yw5vzohqcwxl5ii581q6xrestgmrwh4j83u8wnh0bbznmjoig99afa4ghvcab8w67tpu1z1huq68428d62aoopv3xksa1lkpl35um29eaa4c7scsyt5fckworn6j7muqsk3cdih0zebacx6xo1oxajf4\",\n    \"id\" : \"fpc1\",\n    \"internationalPhoneNumberVerified\" : \"xmcxmg5trqwql4lyrk9w0kk2u6whzb42dgctx6mxgcliaimbk9pghtepyk9iwd7jr9vfdzh4fritkcl0g3vtx7el6g8dpp6djdsblztp61n4c7yh12\",\n    \"phoneCountryCodeAlt\" : 1650505393\n  }, {\n    \"lastName\" : \"Daniel\",\n    \"originCountryIso2Alt\" : \"fy3uhi9ogb4idcrotctddmfz396niw2nuqp550d6msu0hqkcvvuoc57ovui9ncxc15udltv369sfsdnytjcphercv8s7r7lrpbvowub9r67wohi9lrsoowvdvpkfwgemycekn3goubd5l06hwl8hobbqrvmudncxkb9odi27wo\",\n    \"phoneCountryIso2Verified\" : \"3a0lkhgstjksk7y3ky6um7c59rdmye9u11uxk1uxuc7in006i9s\",\n    \"verified\" : false,\n    \"script\" : \"9kcfpgqu7vomb1cryo9f8o1gslgyjpuub7mo4cf3uw7vy1gqrde81uc5tnvxl15xwbch5oee3cl0427gcxjyvt\",\n    \"firstName\" : \"Sarina\",\n    \"score\" : 37.0890291009173,\n    \"phoneNumber\" : \"683.805.7750\",\n    \"phoneCountryCode\" : 567859894,\n    \"originCountryIso2\" : \"8mrge1belexxf2jafzmrutgo42xe0acf6m98kq56u3eoc4uqod7rh9tt2dn5cavaw86g9p96ntsp58cskzqc58atf4p07\",\n    \"phoneCountryIso2\" : \"3m5t90p0z9bqes6zrjrrxvh1hojnyqs9gfyo\",\n    \"phoneCountryIso2Alt\" : \"ocretqftxyint9tb9de0lk4jeno2vu2hs62opr65t8scdtyx0vyteqxxpc4b82dnbp0wsnd54hrf59wn0ob44t8z9dy5ocbrk5yoirdra3201hzarnem6mo7m1bmhv8ybp3du90e7mqqpl6lvmfcusvhxlrz0d4jhyww5rvfcfafgm39c\",\n    \"countryIso2\" : \"6vqlf0r3ngepimpbb3q9nr771jz9ni180giylhd8fauvmsdxgi3m2o7v8mx2t6j0hz24ifn2a0zcfzu8mp7vabyytqakyltgdrz9f1bsy0e19r1lisyghd745brk5nrnpp1ko6vai6q070bsjm79p44kzwc8j0hmghrgxklsjr42eiis9gby7eze\",\n    \"id\" : \"wuci\",\n    \"internationalPhoneNumberVerified\" : \"tjz88rarsjg1lunnsg72yh5ifc0iu9bq713n0nba9zmj7q69odnjlcefwkcbhxj5169\",\n    \"phoneCountryCodeAlt\" : 1672422732\n  }, {\n    \"lastName\" : \"Stiedemann\",\n    \"originCountryIso2Alt\" : \"hsjf1eksqs0u96jxo43g5qjswve0f3im2qorjiicb9hgzcoknk9fwjvzd3m5kuswzesd059jtdwm0djjzsc6wg50d4ixv75pgwqrf94fkwrpdigqp8q7g\",\n    \"phoneCountryIso2Verified\" : \"3sv5d0drhcdm3efyd2m05d4k1gc90112pdozq1xj4n7d9pm2v1nlbk7aytkhmftk4npwn\",\n    \"verified\" : true,\n    \"script\" : \"i6uj4r6vsbp3tciqq3cblju464e5w5811az0wq9uogo7c52o589lxy4dm9dow4fztshjeuqci641uc5yw5o\",\n    \"firstName\" : \"Bong\",\n    \"score\" : 95.22237698832657,\n    \"phoneNumber\" : \"239-793-9458 x3793\",\n    \"phoneCountryCode\" : 1860216498,\n    \"originCountryIso2\" : \"p644bxdorxxttgvg1n82k8bgsmf81zgfr0o6kjynqq2odctcww7fn7a9yvtrw73h8iibk31rcfed264p30p3n58hhb3e7ncu6ta\",\n    \"phoneCountryIso2\" : \"omv3whhkumtywu3rihmqp9qkn6c8did2hk4mx2uqk4fgg53tyy27ruy5ngb4sdevdpj5px8wnzoyr19zfhbx1idsu5la873rn6u3ykd1i3ic5b2etm9cu1ncel0y85x6hg14srjyl0xbliepw014zayft\",\n    \"phoneCountryIso2Alt\" : \"r30uma6k8dakiuohxj96ahvipghlsyrhk8kiiwqq3dhdpihgnfc11ea7h1ng3n8ajyc2shq450jjt1e8xh9jtwnazhjsra4t09rvmtil3or8f11w7pjw9zv3yyvb606380tpyo26w6buyhcd10r1ijs5iukx608be03ghyem0pczh\",\n    \"countryIso2\" : \"586mk76yzbd5bhsg8xue75rkxg4xkv6dcyvh0us0rjlwu2xleh63r9mfviqb5dsz1cihqs2mzwgu3yx9vy2gyr5ktiwn2iyjcpcbwi52lgn8t0qa1kj9w2651r44i98hd5toq7td309p1uqaiy0qtuuu6j9i7iepccfjecy2g1neisb6oqpokh9h85oly70m6\",\n    \"id\" : \"ey19\",\n    \"internationalPhoneNumberVerified\" : \"qwvrqcd0tjqax1a9kjwbi95cyjz24pi815sp4myshnyfh8k9dh9osajf47sp5mx59u074ad730qgovar51snyzhvam7bb4yvmyi8xh3x7hd36m0ds33g0c57trwn6zyqs6aipah5x78nenlv7m2nu91cwzav10rvkumjqlpb26jzyof4coycoju1viuhd9uh5h3s\",\n    \"phoneCountryCodeAlt\" : 1030478438\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67b09eec-ad0e-4d28-9dde-d56dc7bec680",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.38956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ce28b314-5845-45e4-ac63-bf76015df43c",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Dakota/Johns/%28905%29+258-3625/el59zzatn0viq76ti6vutgb8cm8nx19in464fia2rwx65lojpuoxh9bgvtj9ap1tx3ufsjsddcvnwz7g88rpon04qowiryzlhpgazyt7puwdxoqgxbpjspfoxdzq1kv3m64ssw6ncrh39494",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ce28b314-5845-45e4-ac63-bf76015df43c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.38868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    }
  }, {
    "id" : "7adc34bd-3ee8-4bf9-b349-cb6233c6f4c8",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Adeline/Zieme/682-310-2754/omul20nyqe9px9foyuov58wxpsqzf1ijbc2hlokyglvue1vq5w2wyyuuxx51h1ke6rgo15z1j0vsqhtzy65u0oqoxq0ad9yn5scq4chkzlbtufguc775hyosno992ncnwbm316xaxx6qlmp1x0y9vpmewj7mkj5ujguvtvhsvgo8gjng361umsid8nmh0r6bemd6b",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7adc34bd-3ee8-4bf9-b349-cb6233c6f4c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.388591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    }
  }, {
    "id" : "b6798edb-84ee-4a3c-9eab-1f31909043a7",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Norris/Kilback/735-754-3876/658eh31l1sl1w",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Stroman\",\n  \"originCountryIso2Alt\" : \"2w8hxyvam229vpiqar0pj6p1jiblh3d58ryqn7vq2lrg4012z0yq0q0ub86w4mpqzcxrc8qhvsm62dwit7abux80jpms15onj9pqw1\",\n  \"phoneCountryIso2Verified\" : \"isy5mebbhlce28t4g5bk1n8j4f3q1511vgvjttjbm3yjin83tnciul3myhsewpfhutzt682iuasyxyvaun168dp61fg1t0xkqa342amk9maqha458noq7t8nds684q9lywqxl6uyz559sy9ph1pkjrtr7w7nh5xozrh6ye\",\n  \"verified\" : false,\n  \"script\" : \"jkcnym98x0bq6899m0vjdkdmkl90idw53zml945p1o5jy7aadntnav8zu2a7yuv3gdmkpg1znghegustwjrrxm54phn3yb9p9cflsjprvuwj6gbz23xq\",\n  \"firstName\" : \"Christine\",\n  \"score\" : 30.576988902286516,\n  \"phoneNumber\" : \"212.166.1308 x15776\",\n  \"phoneCountryCode\" : 1996926988,\n  \"originCountryIso2\" : \"rs0yxtjn4qrb12a3jj57i416f2iwsohiknwj1aul7rd2irmb2d743ftizsj9yqjptk2984f3bc5f\",\n  \"phoneCountryIso2\" : \"xs86hl2bp8khml6ttpke4z3jmmzlf9abtz6incydzgf6k3iwr5b6fhson9r0e0b3it6rz8du045h1c9n4ayc12625bt7a5ipxj9g5bn2op3dt59lo6dw84hkf4kt7bjgwly81584drt9nx4ek2lmq11v1791oemppiqo6ssgplmnl44r3pyaj72yv1k\",\n  \"phoneCountryIso2Alt\" : \"7v418yxo04g7z3frw3ceo8anjpahocxwo9oigoprsc6vu631bskhk5547hzwxnsrabalhrom6hy6560nozwt1xpmv03lbdcpo4wic12w9z0p87iy4neqjnblna7309j9u5snib89a1skrtsciavvzye9ayw0z1trx1cmsduudc13v82b\",\n  \"countryIso2\" : \"mgtzieukh14i6hn0zut1b9i6pcstpz4hez87i5indm3owyqonzkrbmvbeu7nkt9uansszsmb72nm9pubtkpkie3tux5w\",\n  \"id\" : \"xv38\",\n  \"internationalPhoneNumberVerified\" : \"js8s1k1hmek5xz09gmhig8zfsp3ffbbowcnizi5iauxfyxcy9nzi6udagohc6x5gr7haepw5yfm3pk6ebav\",\n  \"phoneCountryCodeAlt\" : 1224309903\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6798edb-84ee-4a3c-9eab-1f31909043a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.388477Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "23c76660-b92c-441f-aab3-f519965ff102",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "23c76660-b92c-441f-aab3-f519965ff102",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.387956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "794d8957-a0ad-4166-9018-b8d38dac1239",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "794d8957-a0ad-4166-9018-b8d38dac1239",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.387941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "f46675e4-9b21-4a12-a719-4966aad2d101",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Quigley\",\n    \"originCountryIso2Alt\" : \"0nvtvdp6rm8inuvsntpockbt83m6846fxr058xe6icw25l61lhhzf28ggqxl1qcgrkg36nks4469kjkz4wrykgpr8ouemo\",\n    \"phoneCountryIso2Verified\" : \"ybnr6ud3l7vj0xxgh6sgl4x99ebe5sseci5q2xxvhsdmr25qxgww0s6gitczsxm931gvi7ib5rlvcwf3zp46qob1engwz8kqds04qvkhyqftll7wacueihkyllhgg58gnfhlamcur2rc8yuxwlflcfkoipy823f5x786bstay4h9daviborusmkzypm36rrjnev\",\n    \"verified\" : true,\n    \"script\" : \"5qh1259fc6jjr9jkgm22x2vcelwszngnxo07jox17dtcdix6ogb8rgwgcw75h5qefbllc7lowppbllxwsphb0ige6vveizspaykv1cprczdih75c80aw7qazla\",\n    \"firstName\" : \"Lauren\",\n    \"score\" : 96.79271832923634,\n    \"phoneNumber\" : \"1-866-392-0652 x6037\",\n    \"phoneCountryCode\" : 673784544,\n    \"originCountryIso2\" : \"oflo5p0vvwx7nxvj\",\n    \"phoneCountryIso2\" : \"qcvnydu\",\n    \"phoneCountryIso2Alt\" : \"xmg9rbvof2epauwj9lb8bx5z314lgf5wem00r0zvka9svll971k9u5rd6dan2gj91qjcvjk5v6jx4x597ihxef9n18id3pxb32\",\n    \"countryIso2\" : \"aafujwki38k33semd0ih36vdrzg9lz8n62gvz1z4y12bhwnfrgty94xvire5wlmhrfq1s65jri2s5xvmheyqix7sey8piievrz3zx7qjvf7wib4fva1xk0vh7rhu4bfpgr\",\n    \"id\" : \"4892\",\n    \"internationalPhoneNumberVerified\" : \"q5tfhgbn2y5i0bc97trgot7l9b91hsg6bau1i3nva0x4ptigtu3pl0o775azqazjeky26brko7sur91welekd64rrfo33pozrmr0isok9o1d7fatbz697v7hrkvy3jaf98ql7alptym1gzts3np0v3s\",\n    \"phoneCountryCodeAlt\" : 376691390\n  }, {\n    \"lastName\" : \"Gutkowski\",\n    \"originCountryIso2Alt\" : \"n0b41j241ijp8q6ys4zaxyo7gjl5kix67suq6lwgli33m5on8crgs3eujohsb89ulsbhcn825zzsyw8slorildwl82e8i1l8libfy44rnwvk03pc9i3dheklaugxos6oncdg1cu3pdd3jf98ec88srbxxp8z5lahcw2m1cclqyoaw8f\",\n    \"phoneCountryIso2Verified\" : \"5vtvqpr9ch262m3h06tux3g849qh4ntyla4fh3t1sc8x0xese50dmcv2pd1jydv5avcixj5r3eefz3gg7c5d9keh7tjavsmut5y4hxr505d934pkci\",\n    \"verified\" : false,\n    \"script\" : \"gby79io4rmkqll1fcd7er8qzap8m1sbzrw6r2vhamed1tsmql2vnqh8bcnwp4jejjhny\",\n    \"firstName\" : \"Mittie\",\n    \"score\" : 25.06970762528653,\n    \"phoneNumber\" : \"464.842.5592\",\n    \"phoneCountryCode\" : 1487868672,\n    \"originCountryIso2\" : \"zm5opoqp4sgz9y3dzyhdbz1eye1g5emypabsriijzcwz5bwk5bmkwwag1kgmitx0k3gfgwi7rlznjxxxtm8wg31mq6x55q9mh9466tcovhi397ude4behs5sy0sn3eslm8e7k6jkoipcgys849y1c2iywe\",\n    \"phoneCountryIso2\" : \"0wptdgtx7cph84gxbx9ppfyru59r3q893ylqey53md9vm73fqk7lgb67kp0enqyfz3jxk1ohqp7k2th7b09x6e1avr333f\",\n    \"phoneCountryIso2Alt\" : \"c6drm4k20od59lgzrdhm4rrt20vyyrx701pl6rptnnnvi3lecasumla8ga2bg3j4ftokj536pwgsugdcxq8csblvkgirediokbqvuozozgl6sjbsnudxk5zup6p08rlx02fv9iwwh2d6zikiqib1j7l\",\n    \"countryIso2\" : \"zdc9rhz89tjcqrn1phbpsov61glmlhj4yrojadfhzldey44zxw4yo4icybpmj9895fjtxyehfkwx5\",\n    \"id\" : \"b5v3\",\n    \"internationalPhoneNumberVerified\" : \"7t2ni1qn14pqeezfhdjr9cd932c3lhvc4elkokiohiijwd7w8bfzf26jdo67nt0aqz4kbuhmzpnt4n6ofzwlowcn416dam3mmvt0glzngwvpzh6ocpqcyif7vsjma94b77wcbvhbf0b9c1lnpt8ung8vjyaa3wv5x7qk7jl54dump1hi\",\n    \"phoneCountryCodeAlt\" : 1298211905\n  }, {\n    \"lastName\" : \"Bednar\",\n    \"originCountryIso2Alt\" : \"ymygfuoga4zftjdp2o7ik3eqclgukhj\",\n    \"phoneCountryIso2Verified\" : \"u05tm877xb0zzi7hjfyzay\",\n    \"verified\" : false,\n    \"script\" : \"abmil2dopoffqs9iah6z9q25a61s\",\n    \"firstName\" : \"Isaac\",\n    \"score\" : 24.010251459864207,\n    \"phoneNumber\" : \"479.135.9988 x84516\",\n    \"phoneCountryCode\" : 1190653192,\n    \"originCountryIso2\" : \"hvwwhn4yy9uc1b4opsdu53j3y6oz9dn8x9tjqm7exx1nwy5leq4hw52of96wabn41pyi4k2wt8ik9b7pmd4ea63y4tuoo43upse6bstekiftsmq5c828j52oo5xkdhji2sfdnj1yru1gxeu192adnej74rfunt5vkibkkk11hyn3sbkd4prpeybqk9vo4k3e2a\",\n    \"phoneCountryIso2\" : \"jf04inj2ifxz0fovhv1kftu4g4181ja5hldf0fwnfd8b5y0q0q2qiuv8cv6qikdht6zoxq6h2atd7uq3q5rq30a9we0tybu1agn1j3btzt8il0hnro7uui358zqogf\",\n    \"phoneCountryIso2Alt\" : \"kkpo5poukyt983sbnta0hyvcrszdqn9q78qu4bn6xxrhsbvmez7tc4aznlvos7cv307xfd04gl5ntg63d6ik1ky1jh9z2y8p6sd9j0z32l93cfkykbjy0m67svr17tunyw7f7zug37y2oezwbi2ot30odc8ovr96wv4lr2nni1geq3gdhfk4iql1w80zv8u9oqqh\",\n    \"countryIso2\" : \"sg807ejjykhlagerjf4pgqf8zbjb8pxba7oo39mt2021f0k8mt3ecvrifsgnw7j9ke0yk9ctbuqnzemhyeii7796ts1llhrd8m2n7mrp7y9plaxi0agzan0i0wtcp0mfru5tb5cijn19h5dm2kxssl1i2oynr3simktad5qufvfh\",\n    \"id\" : \"tzl9\",\n    \"internationalPhoneNumberVerified\" : \"58melcnkn09x27l4gb1m1ubftrn0o31fvi5wzgnw2tncql1b2wf5ouz2h3s3476buk69cpky8ggrds460h4q3wz8uieszmolsgoarige4hbnvw5k6pkgos7nvrzsnom4sm3j9ahc49koloy4chr8oa7yifxf4op41xs3lb8prkry3eh570auluqdqgjw70\",\n    \"phoneCountryCodeAlt\" : 1008134497\n  }, {\n    \"lastName\" : \"Dare\",\n    \"originCountryIso2Alt\" : \"zyu3b255njnhjmtvyvr5rp6chjj5uuonz0n\",\n    \"phoneCountryIso2Verified\" : \"54dyvohqepn5vozxgunhk00mrnpjpyfjp3z64gmgk8is25b4mvhr5feszasp13ks6oa1uotb2mjyrda2v1jp5hotisgc8zimksrv0hyjug3wp75lacw04vtp4j1qv3a1ljy4o8ttcd\",\n    \"verified\" : false,\n    \"script\" : \"jlbzyv7uakdv877bc0ohqaakyhlmh9yhlc08ixn3vjjpy7zkbl048mohh3pi7snqpk1y\",\n    \"firstName\" : \"Jude\",\n    \"score\" : 44.2208427692376,\n    \"phoneNumber\" : \"303-265-4053\",\n    \"phoneCountryCode\" : 539885606,\n    \"originCountryIso2\" : \"z9ucktllqppy54u338vq5g8xz0dg9fornmma5hewazbtordm25koy0hq4aup73x9i85ovz53u35vyligmuaoe9m1v1igtwrzcfjgfv18u1fii2ygfy94ll68scfgjm1atlzwvhm25nsrfa0eo1pis6a6n42vx9s0grrp15t1c\",\n    \"phoneCountryIso2\" : \"lv1uqy44smj8lh4bn6r7in76h5072es7zptb4x4n3bgk46df75vy78ywx91x6a8smbfoepkyhi\",\n    \"phoneCountryIso2Alt\" : \"w3eh455acgpb48hrlzeuas2z439a3p2akgy100ayk8kipw59u9qz809icgm2xqj35zmcuhu5o4tsp0cmab44z0xpan6ap56hg5ux9536lvulpz7mrm7hltexikdot2i18aercscpaa8g8nx92poqwzzdaeraf6\",\n    \"countryIso2\" : \"vusfpncpgxs3x6oo9vgwkl9lou76fewb5iibwme667d754lnjeqw3cxtcpqvlw7pfmvhcypqdrejbwuyikg2u1ge3ubvcq6qsl4jyu6mc74rz5ahyv8tgq42bqrd4k39klsxq7hyf4y4zjle34qeywzz2yttoshoo9z5\",\n    \"id\" : \"o3et\",\n    \"internationalPhoneNumberVerified\" : \"3xnhkg3ax2njfeuk5xr\",\n    \"phoneCountryCodeAlt\" : 255329661\n  }, {\n    \"lastName\" : \"Boyle\",\n    \"originCountryIso2Alt\" : \"zjr1ztychzoybm5wp48tb5zh8sstgaliulw5byxwwlu2yvq95i59it4q2i0nllipok323htvmhuafpnqx72198z8ylhlf49lw3mmh1ksxicxra1z72m1nyfusmed5o378wnghiiwb1o29p0bq0d51ntsog2qckwbz5tbyhp7uan7dvwb91b560tcet3sv43wsjwhcx\",\n    \"phoneCountryIso2Verified\" : \"g278svyizhuqqvc4inpqle87ie0otrh8ofcgmvcjzazwtwyiala6iucr0psz84r6pvu4ifvxb4rkmflmndzs6bbbsqthlsc4gqepoqqrwldufetryhngfq7aiy2zbforvds\",\n    \"verified\" : true,\n    \"script\" : \"m2meepg95ufahsbew5wboarxnuvf1ycvdousjkw9pjrqk8mreev1ez565yxhkb3z71ixpzfxlg9w5gxq1zlmc0vh8c3i0i31vg3dbsi4wo420vox0o13cq7rwzx6nzy3i4s9\",\n    \"firstName\" : \"Emery\",\n    \"score\" : 89.62583441815273,\n    \"phoneNumber\" : \"540-296-7701 x975\",\n    \"phoneCountryCode\" : 554993353,\n    \"originCountryIso2\" : \"b9oswakwyte1jw27w4j2prumomxggf3m3lspq42oxd2cqq02ee55jo332bkscn1epum3p2n82ixtk4mn0bbssv13jr8859sxjo\",\n    \"phoneCountryIso2\" : \"ytm8rma5k8cx10jvx9sw5tc21z40xded15e13clbh01lwfpma6svp6au1yj80pzd2k0jo6bv9kr3bjr6ob9d3qccn3o\",\n    \"phoneCountryIso2Alt\" : \"tiu6gqb4ficmy9k056x2bmgcepvc7duincpcpqumo6actkrnj9u6lbypkbdpj4q8lytgjs07hd25rx6l14ubjfxbdyg3f7dn12ua6kqmfxphugij8d9b1uj5sx7nnvrkdm02i4f0ovdckleg5trg1h140bq\",\n    \"countryIso2\" : \"k2q9ocja965dlu174srt4yawi33jq4487a2a4qxxny6cpgw8nu65vkoifc9a3b6qmchrs2p4bryppapaohvfhgvvnltlnp0331ssorzvlvb255ir41k43m1a3ln6tdrjkxm5m6q3k7c9i4lsoaber8a3fjbnms3j2wraphrgmj0krras6njvpwcgbii6gt8vddj\",\n    \"id\" : \"818f\",\n    \"internationalPhoneNumberVerified\" : \"jalbfdzsulelwr35oqugofu775lbielifsopqci7sp4rgljratcxw2mqvduthraav96hulxra92sbezyldyl4ddcqiut71epy27z6737melf\",\n    \"phoneCountryCodeAlt\" : 433338593\n  }, {\n    \"lastName\" : \"Mitchell\",\n    \"originCountryIso2Alt\" : \"t8jc09lk421j42lz2rkw1kfsz52o1t7ufz1vc6aoh9n82wehhprp0kswbamti4\",\n    \"phoneCountryIso2Verified\" : \"g8k3u3ff1gtbedod3b53t0cak1t3jqjqzw52a2yh9nrqn3r1lki0yyq0c807yuw5lorxq7iqhnv3st5dogyvlnhcuqaqbj96boi1auwmbkh9fzas5ixtv\",\n    \"verified\" : true,\n    \"script\" : \"4c9ndoh9i624o4jeuue5rhoj2h3yrqbu2xyco6tfyyn9zu4jvzomqtccn2ayluc8ktuq5mhisqw1rcv6r8wb8a1aye7jbv452d92xo4xry2bgtmedj4n0ykqdx3od8zd4osc2wcc\",\n    \"firstName\" : \"Wyatt\",\n    \"score\" : 62.45361902339182,\n    \"phoneNumber\" : \"1-314-790-2038\",\n    \"phoneCountryCode\" : 1253688784,\n    \"originCountryIso2\" : \"yo5bgk7r1ylfcyov5vwp6l1d254nnnwp804vtad9chq28f44jspvu1dbqnj10dypwzfga9g5psjtub90vizj0gft7s026z3f352362fm3fqdr5433x8w33o3e2x1w34headihsqideyx96wpcmqu82fxnvt\",\n    \"phoneCountryIso2\" : \"4nb9uac5dtlhd8jzvid6vzqgh9p4ycrgnsn2a9akxv0wraotct7o0m4z5ldj0ea7rqh9dipslmfkp5yajqq1e86i808fn3qm3b29bvx347y86yf1l2y2tte923snhdtrfpd7gxzov4oagk24tr22dtew4k988mkdgc82cjmysbueq1z27f7ta3lnulhthq43tmk\",\n    \"phoneCountryIso2Alt\" : \"hg2xwuqcur1sdgbm2o7lxvzi92uwki9545mj7g9vxezkbib0eytsn0jht5\",\n    \"countryIso2\" : \"e6ldxs6s5nphunl3z0yewb9xzgeoviwzhceiu2ituwbnikcuzqrl2tsmoif\",\n    \"id\" : \"0drj\",\n    \"internationalPhoneNumberVerified\" : \"qcnmxfvg19zcix8bcr27vgki86hb7mkcr9rutuw8tahyhii24ylo8r6sljdi79mhazba9kgj4344vzgyst73gcan45hkb9hmsccpy447qrx7ew7cx58kf6is38c5nc0t0k24ggfeg7oest2ey5velssfkg3ozgonv5gizqtmap9iflo\",\n    \"phoneCountryCodeAlt\" : 1854291552\n  }, {\n    \"lastName\" : \"Bailey\",\n    \"originCountryIso2Alt\" : \"tofhxe58p0gbjhltnk3ad2qp54asepgqohvh99d18odag1pmf7wjaeicu84ip9zb37y85f8gzph9ay9l1hqd13mvpk4zcc\",\n    \"phoneCountryIso2Verified\" : \"e2tju9u2eanaqz6x1n1ph7ij1fsuroumqnij5kwgr0g8wpbzd7i0ngq0se8jzdrf3wx8wwb05spsi1e07iot2p1orvawkypd79n7h5eppdmngjjcjb7bmnqc1lueoung0zfo17rxvradavuju2esr9b1m90xtmdvekyms2l7df2hsgc\",\n    \"verified\" : true,\n    \"script\" : \"kcvczq6f8w31ahtapx61upa3gfspvltb09qak38b5ijiw6olib1rvf7286qo176m335twaeiyfwzhang5o95zap5k6nkt\",\n    \"firstName\" : \"Kurt\",\n    \"score\" : 22.75151682841233,\n    \"phoneNumber\" : \"050-749-2835\",\n    \"phoneCountryCode\" : 1228174103,\n    \"originCountryIso2\" : \"64om7i7d278dos3ci11hrpx552fxag90psqp4evevak54kdkhfngz4r6vyqx0s39cr9p\",\n    \"phoneCountryIso2\" : \"wibqi5a4sjbmnpv5nd80gwaleflmk2sonswvx52l227mzjmsq7cdy43e4g1kou5657s1otussqse81hzinlcvhmzw2n3ns01oav97l5sfd42ygtf7u3z6sm\",\n    \"phoneCountryIso2Alt\" : \"cl2t\",\n    \"countryIso2\" : \"baee2999jl4k19xzci0edvxll7z035jnmz4ppjgv\",\n    \"id\" : \"1c45\",\n    \"internationalPhoneNumberVerified\" : \"43415vm38rrrot3bk0rz63kgy13taxzpajj2hefaisan9nbduu0ot11mt6q0zyr563ogbslcreiamy8f9azg0ss61bfnxguvoo6vtp2qomdabxaiw8katx\",\n    \"phoneCountryCodeAlt\" : 268834261\n  }, {\n    \"lastName\" : \"Ernser\",\n    \"originCountryIso2Alt\" : \"0ew3cr5ni1hirt191pjmortliel1hwa68z587mhkzlhjqitl7m9jj6ecljk2zmh966g3vz0ucj12z5sjyvb3x22qd\",\n    \"phoneCountryIso2Verified\" : \"6o5xwf1pn3j3f27o0wvyo0n2\",\n    \"verified\" : true,\n    \"script\" : \"2imun25kigd9gvh75bj6cgz1cqzmugmaeqcu1ez95ice90lm5ggyc3wc11j\",\n    \"firstName\" : \"Tonisha\",\n    \"score\" : 36.324907866933906,\n    \"phoneNumber\" : \"(905) 994-7433 x11919\",\n    \"phoneCountryCode\" : 1313919383,\n    \"originCountryIso2\" : \"yxuj2g5a9s9huyg49penw9a2hm45nxhmljorly20cqtjb0lnicou9kkjhl7mkqm113bdjd6um3msheu9y2fc3s6d1k49c0sd3s81axzaulsdkhq\",\n    \"phoneCountryIso2\" : \"bvi0fj9dawm3py17ria34hfch9xbt573my7lu0eq2vnmmrc2b24bhg1ikqihb0h0wyo5zah6xvwxxxly0hk9uiy2hm9xtj7wpt85a0enxne84tyre21nrakcthjcs9nvlc7oy7pz6d9\",\n    \"phoneCountryIso2Alt\" : \"q7wyk9hmru4gxfcijoci35lm97h1e2a4o2g12e\",\n    \"countryIso2\" : \"xd90i\",\n    \"id\" : \"b0rw\",\n    \"internationalPhoneNumberVerified\" : \"opusvu1pu1zzoack2p4i6dc8eqn8583znddkkc7pi4rvgxagbp4c5woqpqghiv6fshj1xld15gk5kkt5tc558sqsu251xvdpbzdispr4g5h9jbwuflww4t950a06ya32ld6hhw5imdfvi6dryt1fpcn6bqhy\",\n    \"phoneCountryCodeAlt\" : 188989111\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f46675e4-9b21-4a12-a719-4966aad2d101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.387898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1dce7153-5e71-4add-aa08-99490eca3928",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Macy/Reichert/573.243.0223+x114",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1dce7153-5e71-4add-aa08-99490eca3928",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.385707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    }
  }, {
    "id" : "410b07df-5282-417c-b460-bbeb59ac343b",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Shane/Wisozk/795-118-1045+x1361",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "410b07df-5282-417c-b460-bbeb59ac343b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.38563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    }
  }, {
    "id" : "f6910163-caf1-43c9-bc0e-135c51d6697f",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Reggie/Schuster/625.951.3610",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Bauch\",\n  \"originCountryIso2Alt\" : \"pv2q4xlmxjbmvd6odav9j2y7tloiab5w8kwf2t52b5vc9bncj9xb7mad56f202q2mrnnlvke93h25gsh556v6f8oho9dnr06vdm384\",\n  \"phoneCountryIso2Verified\" : \"qam8zoh1o2yy4o6nfh518ncbn1wkd7myxjfqwp1082jqza63jguxp758ni7ziey92g8ttm3jwmxkiam224kgoeu8f709qsbppdpt78k5icow3vy7lygq5vwboumolpqptl2nlt0o8ak2yaufc6bntfb27se\",\n  \"verified\" : false,\n  \"script\" : \"pa8tkdns\",\n  \"firstName\" : \"Sharie\",\n  \"score\" : 81.97063324101337,\n  \"phoneNumber\" : \"1-355-297-2304 x17430\",\n  \"phoneCountryCode\" : 1020132023,\n  \"originCountryIso2\" : \"5x5ed0hcgz3j5raavpsvz6u9b9otmnc1slvcjfbi9c1jsfqmd5i0kshrgkln5pa8madi2lso6v2fsofgsvsn4whw74w6vpmrz0tqgrktwcgni4zpg9vmup2txv1wkz8z0if6\",\n  \"phoneCountryIso2\" : \"lj9i83px733xwhxged41pzjhqvy0ci9wte5hzelm2jz7j2qwnwz7lgkv7c9p88zb084c1psydi2gltq8defsvn6\",\n  \"phoneCountryIso2Alt\" : \"gsbxb7fbuz3ft6o8yp4sap\",\n  \"countryIso2\" : \"l7sfzf7ku65x5zmcdo6g\",\n  \"id\" : \"bmiw\",\n  \"internationalPhoneNumberVerified\" : \"ykgvapuxebo8664l7p3dtquazwktjgv83o7vmlq58djdtfqy7j89zms51exiwm0\",\n  \"phoneCountryCodeAlt\" : 1214134283\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6910163-caf1-43c9-bc0e-135c51d6697f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.385523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5473d5e1-1c0a-4e59-9117-0fd4f325fd2e",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5473d5e1-1c0a-4e59-9117-0fd4f325fd2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.3849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "c748eb5b-ca06-4a48-a74c-f7b16cc08ba6",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c748eb5b-ca06-4a48-a74c-f7b16cc08ba6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.384883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "c50d8e07-2ba2-44f4-8fd9-667c3eb683da",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 18.414027160540748,\n    \"firstLastName\" : {\n      \"firstName\" : \"Quinn\",\n      \"lastName\" : \"Stokes\",\n      \"id\" : \"ug6g\",\n      \"script\" : \"rbmk0z\"\n    },\n    \"name\" : \"Jordon Ullrich III\",\n    \"id\" : \"3cg3\",\n    \"nameParserTypeAlt\" : \"8r47lvg6bis9rcq\",\n    \"script\" : \"ks8j8d\",\n    \"nameParserType\" : \"mu9r9afwdr7ia9jlmb6se3gch6bobvjgykh6r2933ux3cjajcc94aonk1srbh7ton0ppl19m8c5kg29bmocu0inbh\"\n  }, {\n    \"score\" : 53.523915299193156,\n    \"firstLastName\" : {\n      \"firstName\" : \"Guadalupe\",\n      \"lastName\" : \"Crooks\",\n      \"id\" : \"i8yr\",\n      \"script\" : \"wpbcfz3nzi78c430dxluhhc5dxte6yczy3gu1dhfdk6evo9kz1r4k1mq89x6loqvs3vndpcqxn2hwvw2rjend1y1afkbdi3vz8i8x2uqmidsblcl5v691tkfbot4sprqh3lo9dsac11h7qpls33fr5nm33\"\n    },\n    \"name\" : \"Trent Abshire\",\n    \"id\" : \"c1yi\",\n    \"nameParserTypeAlt\" : \"8tapacmg8wzytjzcx4fq66ljlrs9yon7bs9qtmv9p1lldwm1fbqbr5mc\",\n    \"script\" : \"w5c4kqcrwoxgnfq3pcx5b6vd7m58su2lvhbxx5f8erfxakxc7umsedddf0h0cvualqvjj6xr8s008sd8y76rogdx4l4k4pig6cd0fjolevz3klx4hq6aq1jpv2gy5g\",\n    \"nameParserType\" : \"tqrrqzv3qgznwvfbadtbali0sf1r2jvovcylxjzadc6xe16yam2tds4hs6cl19m6etlckxkm3gvgbu14u7y\"\n  }, {\n    \"score\" : 22.921517856775488,\n    \"firstLastName\" : {\n      \"firstName\" : \"Noriko\",\n      \"lastName\" : \"Kilback\",\n      \"id\" : \"3ejb\",\n      \"script\" : \"cj7sjjsj0w9g0zmdowijuqg4s5pikawanqth8z4pmojryo76yf02mxx2es22ulgxu2uh937ksnhd52iw3yi3xqj\"\n    },\n    \"name\" : \"Seema Ward\",\n    \"id\" : \"150k\",\n    \"nameParserTypeAlt\" : \"j48nvyij97tcejn8mh4996vmx09muxhztrqomdq2howd7pmrrilqw4df2rwg5qc99rq39jr2z7l99qphundr031v\",\n    \"script\" : \"jjqizhjh0ahb\",\n    \"nameParserType\" : \"v8t138341mrulmpa1a7fog4ac114s5s8cq3icn6z8i45370c2to7hjjkl7cyciftm34ptzfslbz7buv0vx7t80ndjrjgk3zir0i43u77qtjys5iu40gv9rce2vl2gy9fyhglp31j93c4yig8t\"\n  }, {\n    \"score\" : 76.43207947153256,\n    \"firstLastName\" : {\n      \"firstName\" : \"Fawn\",\n      \"lastName\" : \"Spinka\",\n      \"id\" : \"sr17\",\n      \"script\" : \"3guuhkja5dbtzbmul8kc8co58d3rc4hw738276vj8hevlj98c8isg6dqx74mrg83edfmq0y1ogjjqbl4xqw28hl6symwia6lxjs372zc80n56paebhy70amp98wurcrzkcjpvff0optk5fcyipbizlqfdkgcpcsyp0o3k\"\n    },\n    \"name\" : \"Annamaria Quitzon MD\",\n    \"id\" : \"4cj1\",\n    \"nameParserTypeAlt\" : \"220g7xh6sy5jx5sjrlvyfp4ubtukgp5in6eiapnhyemrotbmppnevhhb9honeq3zfiedv4ggxancy2cyo2vomgsup2jshjoo6t3wm6qx821firi90wnp2c9h8vrpl6otx8ywrhg3wjf7y1tqucul\",\n    \"script\" : \"flu5pulk1ros8l3l8pe1xjkpo29rt7dxzeiez3cqpzlddiwk2hyc9k7ct6vh627382bf2r2cczjyfj69c99wobdqzref3uazg0l4mxrqjqusgjw7faamb67979w70g\",\n    \"nameParserType\" : \"srz2c7xk3bxtcjuiicpllzote5pg9jpqkjrb2kfvx0rxls1rh9dy9mtez5v11874nei7t3s3zwdlofjvzrbu4hn70z9ogatezvlyduup7tx9h4jpmd9oqekr8bsdfr1h483shvf0cpnxz33pgpj7vv9ejwbtel2ocja07lhca0kokgic8k8zyf2157z6xnn4doek9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c50d8e07-2ba2-44f4-8fd9-667c3eb683da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.384844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d55c5b8a-bb4a-4997-88ec-9cba48adfefb",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d55c5b8a-bb4a-4997-88ec-9cba48adfefb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.383579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "99fa79c4-79f4-4aeb-a850-c287a743ca5c",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "99fa79c4-79f4-4aeb-a850-c287a743ca5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.383561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "cd7de20f-4a09-4ea3-b0c7-878b2925fa4c",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 29.865121874284096,\n    \"firstLastName\" : {\n      \"firstName\" : \"Len\",\n      \"lastName\" : \"Heller\",\n      \"id\" : \"6073\",\n      \"script\" : \"ytjqf1xjuh8k12g093dhr8ywrvtqz2v8r499f2en7uoiuk91uqa5tem8dqxzajkltfigdeup2scs16222ezwb8fpzf\"\n    },\n    \"name\" : \"Harris Kshlerin\",\n    \"id\" : \"6ax8\",\n    \"nameParserTypeAlt\" : \"w8kffa7n69rr8mogpiwdilrk9wfum2xv3d7dzotvbkytnss3nawo\",\n    \"script\" : \"gzkjghmt1yxxjjtx9ijpgxudagyartspw4yjcz99gg9rn9otnajx8uysy5np1urn10h04rcfydkc4zsu1mfxxzxy2fpcypxqsi27z6b6y89ytw9z1my8rwdc39rjp12a3ponyjl4w34r75b3dq06cqfqc9dzr\",\n    \"nameParserType\" : \"htnphmlq9oq7x5sczdfyga0vn63\"\n  }, {\n    \"score\" : 29.26003824521517,\n    \"firstLastName\" : {\n      \"firstName\" : \"Autumn\",\n      \"lastName\" : \"Kiehn\",\n      \"id\" : \"h69m\",\n      \"script\" : \"50g2gey67e25jumptowfr\"\n    },\n    \"name\" : \"Gia Murray\",\n    \"id\" : \"jzv0\",\n    \"nameParserTypeAlt\" : \"6cowwimnejayskxt34eexchi6uk6lvio11k9byyf7b34n1htftkx64z3pqiss5e6nqmhrbqz1kjqm8n7v0\",\n    \"script\" : \"ntqzukcmx2nxz35vw0qaws6f7fodgn5zgfntmv2vci9md4pgitk387ldzs8z5qb\",\n    \"nameParserType\" : \"520fk0j41n1d2r46ljwmimt8mdn1koq1uojxzobqsuabipq5f5qroni6jy2v1g3xhain9oc9tsjbqc0ewcpfwayr9q7d5at85vbo768ogp4vy7w4nbq0d6pyafdtcnsidufe4o1w5nxgjy67a73vjzp88ymtc6g4vsfo4ts5o\"\n  }, {\n    \"score\" : 71.87382415643685,\n    \"firstLastName\" : {\n      \"firstName\" : \"Caleb\",\n      \"lastName\" : \"Champlin\",\n      \"id\" : \"gwgy\",\n      \"script\" : \"q1xuzumpozuhai5hcjz30x52ob30opvx5qjs4z32d0i6mjni8zvtuxayyh0q4an3g4fb8ldw0915bpv3zo8f0lfryb386m8i8uyka35skwg0f5o6kw2gorewec\"\n    },\n    \"name\" : \"Shila Bashirian\",\n    \"id\" : \"68wb\",\n    \"nameParserTypeAlt\" : \"ej014mwgk48ww6ghf6031hxfirfbs1q1wzt8xo00inyq1gxph86vqauoimcocoe4\",\n    \"script\" : \"bjnzeq9o1jb4tx55rt8za8uhdwtgg0ckgp5fidv2r3oorj42yksi47xrtsitg9h29ziqj69lnranvpcvz9aph33exahfckw3zc6i09rnkojo458p5ni742qw4fm5377s402r29t5a1hwa\",\n    \"nameParserType\" : \"vj2r3jqpgjxgnx5iwk\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd7de20f-4a09-4ea3-b0c7-878b2925fa4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.383522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "120dd2e5-f802-4ff5-9bea-edb539fbe7e3",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/nqbxg4h7o9i5jccjgk7cmg561sibnh5un4yh17ixm4x4bgyonlqwr16cm2nm1y2kjcgi66p3rqgtkkuu5ptu1nwoj92o9u3cw2/1xzs6cax4156i9ea009kalinsgtffq9qwz7q37csc5e1hski7lchkcq8ehnmrebs091v0mq7uzu2myzbudu5wi8r19ulyilaqr95kntrezx7w2s600xuv7wpw15eki2vqzj29lc7hcat7fa1m",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "120dd2e5-f802-4ff5-9bea-edb539fbe7e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.382448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    }
  }, {
    "id" : "8f245729-1464-44c1-bac7-c151ae7a7b2d",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/x9uinkffwl2e95f2j6umn37hhc4jnx6ameeqrmrhvmo7dd3t9529q3jum5aii3vv119uayfr18vhg19h3vybq9w1/ljg0yyu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8f245729-1464-44c1-bac7-c151ae7a7b2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.382411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    }
  }, {
    "id" : "850179b1-5046-415a-8fc0-a1c28d1fb9a9",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/1zklgti78goqtkfeu3e7v0pbnbmut0x254s1ze4fp4/cp7j092c8kezv7ndb8p4xgp08hble42zdejz28k2htndgjc7a39vkjppf2skq3wsuijxn59gz6h5r21nqmt1ta2mhp4bx3p0jm282b7bec74jxfwxrn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 19.41492077013868,\n  \"firstLastName\" : {\n    \"firstName\" : \"Jon\",\n    \"lastName\" : \"Conroy\",\n    \"id\" : \"8vt2\",\n    \"script\" : \"051026y45jdj4hqwq1devvbgm4xcigh5sviz0f2hw3f3hsqy5p4i8okj4cuzrumn7dhd46xfq0sbrhqapf0mxudo7nkw6dpusfx5372dnrcdgq10l2zbj07c4pf93xh3gpgvtf585eajufzbukxnm3obueq0ebutn3k3j5uvt6c3k74gnn4cfaecaqzgb\"\n  },\n  \"name\" : \"Chance Moen\",\n  \"id\" : \"9120\",\n  \"nameParserTypeAlt\" : \"anaktq0779z7owrluo26tza360v0sag3fdyf4x84fzj61eufgjqh92n97urh5rptu6rzuphwyp9jt2qlijhj5copd9o7483ezipsaiblwzhno9ydjcr0ih5yv3odw5g11d0\",\n  \"script\" : \"ccpnngcrwq9196ar67kq97e9455mqcw87md1u2nlp4jv0cujr7dxm6k2f35suu0lmsol5op1asyefjzlhljpwm3yo1zxq2zy5vmxgd3aclo4otkqhmuqdlga8nyj1g70v0bs35bqntq315p2eet0bw6lql3rq5mugpmmaczy224i44ug1x53\",\n  \"nameParserType\" : \"h9cyhm16ksd00ynl3p044w0didrc0u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "850179b1-5046-415a-8fc0-a1c28d1fb9a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.382362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0f76d986-6636-418b-87a1-d831dfc1dcf9",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/kllm5b0qs95c32k3dy7ctvd2yelxobm5cy9g8evkqcu0z9bnstmexs57bzeew89pkk7on1dqi8wg4tarrm3qb2banv71ywiihwhfccfvv0hjsai",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0f76d986-6636-418b-87a1-d831dfc1dcf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.381991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    }
  }, {
    "id" : "2cdb1c2b-2a29-4bf6-bf8d-15aaf4c6fa9c",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/2rgd9sticchnl060kj3aytbh6dgjxq42ermezuskze8rx2agx25xrem85qubekq0yya5knrd8dmnh1blamnihdqc0rg06xfg30enoh9hi0ued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2cdb1c2b-2a29-4bf6-bf8d-15aaf4c6fa9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.381962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    }
  }, {
    "id" : "7a2269e8-27d1-4bb0-9615-3c4dff037477",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/d5f9coaf0rkzfbn0sxjf01gqlxvu1tvr5v06blj2b6soaa4ulprowomyndr5qx9lxj4rqne17gofdkw58ijjaaoceunohh19fadpgeo3fhivhnxsr8nd13",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 56.29523262116616,\n  \"firstLastName\" : {\n    \"firstName\" : \"Heriberto\",\n    \"lastName\" : \"Beer\",\n    \"id\" : \"8feu\",\n    \"script\" : \"1bmgu1fe8bmnz7wn0i8ajtd6sqxkb97bucvo6he7py1k6vdnoppe9aykgy8a2pkuxrtk3tebdc2g5wqr04tnsqzzxb0iyktbziwocxs5ltpacqd2bqpuvvfuks8ise7duws7384qvbqwu17cbrwa7a08v9o88j2cfuyqwkac8c2rc1odfkm4vc\"\n  },\n  \"name\" : \"Lorie Gutkowski III\",\n  \"id\" : \"5249\",\n  \"nameParserTypeAlt\" : \"6aimjq2p\",\n  \"script\" : \"0m7uhhzx0sytfgan2ap4fmsxrl6z926uf1g0dgypa4ci50nvctff0yoo2bdjqqg1i1u7\",\n  \"nameParserType\" : \"5c6hnmw7yxn1jxwkgbsnhblmzctzb3j1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a2269e8-27d1-4bb0-9615-3c4dff037477",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.381919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "76f49663-51c8-4c6a-95f6-14d21d9cc4fa",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "76f49663-51c8-4c6a-95f6-14d21d9cc4fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.381519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "caa909ac-4475-4a11-ae94-78d2409a8cef",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "caa909ac-4475-4a11-ae94-78d2409a8cef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.381501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "be8b31be-0c94-43a0-a013-619c7a845ee9",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 47.448404967762734,\n    \"firstLastName\" : {\n      \"firstName\" : \"Dwight\",\n      \"lastName\" : \"Rowe\",\n      \"id\" : \"4nwd\",\n      \"script\" : \"1g7dwsdeu3uied356h4lne7xhwvqu3wr0v2a4z0o3zoy3pczpnb17jb8p93aqxuap63g132l7l8c7qr4ewqii71r7lkg7cquymksg84gnhei17u0zw4rdygfrhgen7dvlffn8zyuvjaitdugti9kz1dk8xha1efvbs73tmb2n2t6o2qodo19pjgxkli\"\n    },\n    \"name\" : \"Camille Stehr\",\n    \"id\" : \"flv2\",\n    \"nameParserTypeAlt\" : \"pucid2ko9z4ykcscmbs0nbqkkqcr1wdyrza8uw8s3o9n10sbiznpo1wwi1s7594dtipphjwkmr07hr5qbqxrnz05yx8h7\",\n    \"script\" : \"vlmpl0ocjvwiwxdn6xzcwnu2oqbka0471hzvsmvmhtzt0tn98\",\n    \"nameParserType\" : \"gp86bewg3c5q9vj52yjxwv6xxhr47hyk4fenux2qfqd7rd0jrhs8z1x5zl908vu9mo85dg3m99e37kkgjewmkh4d6oewwhkjx6uwh7bk2x8wslsvf5qnj4od7hzrfawp7ntgpytai\"\n  }, {\n    \"score\" : 31.783303930856256,\n    \"firstLastName\" : {\n      \"firstName\" : \"Karleen\",\n      \"lastName\" : \"Tromp\",\n      \"id\" : \"45t5\",\n      \"script\" : \"1dwpis588wa032xntx0rhmtumgyydr5y0ow55zl1epalze84m2dprw8yhg\"\n    },\n    \"name\" : \"Tawnya Hauck\",\n    \"id\" : \"4i1h\",\n    \"nameParserTypeAlt\" : \"kv3fjyw7lp8kx6ranpju0ibjeowbpatwz2q5p2pnca2p0dq73ojs55yjjyysfkd1gj5vf4hkmetuw8ttrn2bew8p6d030\",\n    \"script\" : \"xagt3sk11vzromwlwnledss21idndcaxvo2utmvh0a56l1fz844xnxzxmmqi9s65z5g56yzpgd1ntjou4ty84heqn42iy824kkitl0l0g72mciby886yul0hikqagk2ljjq\",\n    \"nameParserType\" : \"6qk5qudhvoagwgq5t9nyu1ljxo0ijtfepn52lfifu06uqjt5\"\n  }, {\n    \"score\" : 43.45569181635812,\n    \"firstLastName\" : {\n      \"firstName\" : \"Malcolm\",\n      \"lastName\" : \"Koepp\",\n      \"id\" : \"9dc5\",\n      \"script\" : \"istol4daynmzqexbte3luwa7u9g3c7rwb9q8r38fup7m324buuaxscxg5by2rsxtp82kqx4y4j4i2dipim72rmc8b6uv97bdzzh8zvyocwgfotj94b\"\n    },\n    \"name\" : \"Mrs. Emelia Rogahn\",\n    \"id\" : \"5pvh\",\n    \"nameParserTypeAlt\" : \"ozbmrrw337v2f0vx0l9khy1x02baf3csmcn7up9tsklqg4aewiqh9dqvarg3129umpr296dhsazx7ld5dwu2oujh8mwkl77o06nlxo86ioyt6c03tdsp9u9ec48lhkvjfyvelvqxgrbr4o6khv0bdorj\",\n    \"script\" : \"51lrzvtnp45ox7sb1omv4on4umnztf\",\n    \"nameParserType\" : \"3t5ihibv8xxa3trajdjc856hkdy3hro428rfadjxkcw3zm\"\n  }, {\n    \"score\" : 98.01428601219021,\n    \"firstLastName\" : {\n      \"firstName\" : \"Denisha\",\n      \"lastName\" : \"Kunze\",\n      \"id\" : \"h26q\",\n      \"script\" : \"oipsl2t8f2a5falq9o8awx8yr\"\n    },\n    \"name\" : \"Ms. Madonna Kuhic\",\n    \"id\" : \"djcg\",\n    \"nameParserTypeAlt\" : \"qxafbe6gkrwv9sahmh91vs0nlqlol3lnpoo1ld7y9uz84jn9056\",\n    \"script\" : \"gywshst6sp74ix2efgp7fjp9c5zzfa17dcq7qjcn9fukjewn2jmwyr2unaaguqp7u9rbnhcgi9qzl2zlaz4837dkwyjewzopjhv5xgrpl4eldxrppdch3b6pl4z12xeb4x7d0xqn5m\",\n    \"nameParserType\" : \"ryztyz4xu0o7sck73yeyiwymc0hv2u102o9rnad417csggm7qg971wwo725a8l8qn4xex9d6b8avic\"\n  }, {\n    \"score\" : 90.56111739079677,\n    \"firstLastName\" : {\n      \"firstName\" : \"Audie\",\n      \"lastName\" : \"Ullrich\",\n      \"id\" : \"820k\",\n      \"script\" : \"k1cj0h0ker4oci57ozmfmukc8wdij6abd4mdthce7fdipnji\"\n    },\n    \"name\" : \"Mickey Turner Jr.\",\n    \"id\" : \"d7k2\",\n    \"nameParserTypeAlt\" : \"o3hsp8urcb5e79r7kcbd6i0p1f2q7gire5xravkxcun21vflh67xtpnac4cut8oaantu855dbb2y22dxxmdbno0mmx\",\n    \"script\" : \"csrk9lpfiifhkt4sifevjg74jzwyipojgcwsg3aao7sc1yzgkpy7pmxxpvaucxbud5eoe1ze30oe6fje97o6tc66fhde1bh5bhqrco881nruk78vl5aoqbkmy4krxqqpm6n22j9\",\n    \"nameParserType\" : \"p9qvggxx2wtc44jb0rewxrj84alhz2j8071epb04\"\n  }, {\n    \"score\" : 80.11207423469176,\n    \"firstLastName\" : {\n      \"firstName\" : \"Shad\",\n      \"lastName\" : \"Daugherty\",\n      \"id\" : \"wroc\",\n      \"script\" : \"m3c5hl1z1ir9sg5zga4psh9wk9d7lrb4h8atyq90xem67gfzgkcws4dvv4rcles1zowo5j3tdr9nwroolg9gs1qoxxofd8pesd9ua50ux2cx9y3t37r\"\n    },\n    \"name\" : \"Dian Mills\",\n    \"id\" : \"900h\",\n    \"nameParserTypeAlt\" : \"nbbla6tefwb6ohpp11y6df1bqgm1rsbtzeresb0yy4uoblgxoa2si5k8i3fhyc2emzllkjtq9fzzkgs50ke\",\n    \"script\" : \"t54yofrv5ohzt64w8l3hh7e3h25v6rhodkfnq9aecgdj81mygummx14sa3d9wjig24r82zxozf2hi3kk8qfpur044n4wwlv1\",\n    \"nameParserType\" : \"r57qk6pukdpm5i6rmh680wlfj9\"\n  }, {\n    \"score\" : 74.70150294610495,\n    \"firstLastName\" : {\n      \"firstName\" : \"Skye\",\n      \"lastName\" : \"Conn\",\n      \"id\" : \"8853\",\n      \"script\" : \"41sigy65g1yn6kpc7xxrmlvg4de28txtpg1s60lhqjrx1g43vo72ogiaor616u3zsgxni19y8jz5q7x87qlfpotgaucn3k88eejnqo7cuakbh\"\n    },\n    \"name\" : \"Colleen Kunze\",\n    \"id\" : \"0iiz\",\n    \"nameParserTypeAlt\" : \"pk47fztl3l78n3687n1t8x6t4tcrfr0vhxku6l1rzhro5w778708v2bw02m4ou50c6lj5oo8arl3ejwiyyns5p63pi5upiom2\",\n    \"script\" : \"sjutchoxocvee6ixyxdb6ovv01khyzsmxmbn\",\n    \"nameParserType\" : \"h1dvoo9evz\"\n  }, {\n    \"score\" : 6.9031843458102315,\n    \"firstLastName\" : {\n      \"firstName\" : \"Estela\",\n      \"lastName\" : \"Romaguera\",\n      \"id\" : \"nn86\",\n      \"script\" : \"golnnkzm6szf0wzdcpxh79t8b2gz3ym2r2uiw52jul6m1ptguyvjvsul238wowrdda0qcveeggba789bwdbck4fryhgkn4h9on8sf4p3u9\"\n    },\n    \"name\" : \"Mrs. Edgar Deckow\",\n    \"id\" : \"3ipn\",\n    \"nameParserTypeAlt\" : \"2ldk09gq0plxm6ip1o4pwij8ngzu5cunq2d6c51ywbf7j5frzgud0kzyzqmfup1nyiqi2210tq7vfph\",\n    \"script\" : \"ydt8lw7wmr6aatf3jayan4jmnggaj2n0htxyhe8bj4nv5mx7swqwysu6r1ss5f5z2emhocjd77513ne2mqygydue4nlew6yv9hpbxy7o6san1p65j359a5t6u9fitcxx229dd8q2h0pqi04q5ozkv6o3ev4oz94whvfqcmmeuqmhe0ir748do\",\n    \"nameParserType\" : \"f9tnilgeymiwvoeccn2is3sd39tj1c\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be8b31be-0c94-43a0-a013-619c7a845ee9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.381451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "7cac6a87-c72b-497c-b9e7-1382f938b9d1",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Ben+Green",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7cac6a87-c72b-497c-b9e7-1382f938b9d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.379118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    }
  }, {
    "id" : "93d83248-cf20-4eba-93d9-5e763131fc1f",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Annamae+Von",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "93d83248-cf20-4eba-93d9-5e763131fc1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.379061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    }
  }, {
    "id" : "c8cda896-9e55-4ad1-b464-6e5cba5193ca",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Mr.+Annamarie+Stanton",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 35.56423917171225,\n  \"firstLastName\" : {\n    \"firstName\" : \"Harley\",\n    \"lastName\" : \"Morar\",\n    \"id\" : \"f97m\",\n    \"script\" : \"4qn9hqcn6a67mt9zspha67h79hhgqn5x3yzcf00o2tolerpbg\"\n  },\n  \"name\" : \"Mackenzie Blick\",\n  \"id\" : \"0r7p\",\n  \"nameParserTypeAlt\" : \"f97vxhzhau49plywdukq7ibt9gn52toa952u0ld9o8lhvadun\",\n  \"script\" : \"spkhcego9iq1t7cjmn2kfw7wvyt9bcdwsdqfufox8buuj95cuh5v9foknbezam8yd79u8to4cugh08zstb8ldxwwaq9zt0u57unwkgdzrx61alyo6i\",\n  \"nameParserType\" : \"7ljnrk4ryz8x799pjuttjb174980o407qq0haefjdugz5k0h2kot85zxgvk8mc5fh3m9fslqn7z4i1v9ap2dy1vpeolmdc8o2112iwzjqmjc81rw69j5axso1579xdm6j3me1htic6m26nsjvkvuacn9fug1lpuqm3r4aga82dvcxft9y9rmdro5b31etiic4juklnf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8cda896-9e55-4ad1-b464-6e5cba5193ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.378989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6172da7b-acbb-4e6f-afe0-2e1cdc2bb9f0",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6172da7b-acbb-4e6f-afe0-2e1cdc2bb9f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.378568Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "6685b32c-acfc-4243-a02f-d13b712f283a",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6685b32c-acfc-4243-a02f-d13b712f283a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.37855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "827774c3-ee0f-422c-83f7-8363e6fd11be",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 94.49580195057318,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ronald\",\n      \"lastName\" : \"Weber\",\n      \"id\" : \"u529\",\n      \"script\" : \"7m0bkzzgcmqqwooluqk57ml39fuc7xn9ve6j1156uah60jnix2wxwueu707br4mi6icx71a1hlgytcbk2jkh3m9sso5kzo0zmxlxpurbluz0s480mpetdml4\"\n    },\n    \"name\" : \"Wilhelmina Funk\",\n    \"id\" : \"5qwn\",\n    \"nameParserTypeAlt\" : \"lmrboxavd3t3vcqb7qgnyqohgu4kcp89435r7z960vwvn3d8q9o7cdcqd\",\n    \"script\" : \"deu4ojuh8n3hbet97h5xcp0zwiuvrbes38sp5q6smact5gq1mz1asu\",\n    \"nameParserType\" : \"wb25utcukpe7gatlmuhpof1qyzbgbqhszc7l06zxhnzexstxitg5iwvyi70cud361jpj7o8fovkofilmtsk69cgmmcrhc26pji1zpcf46auyfe4m0env712\"\n  }, {\n    \"score\" : 84.09553447777357,\n    \"firstLastName\" : {\n      \"firstName\" : \"Otis\",\n      \"lastName\" : \"Mante\",\n      \"id\" : \"z2u0\",\n      \"script\" : \"dek4mlobvt20gzgut6dnpf23\"\n    },\n    \"name\" : \"Elanor Waelchi\",\n    \"id\" : \"g6nu\",\n    \"nameParserTypeAlt\" : \"g47fq3gtq7fyt70brmzfh8h80g0qyg0ykca\",\n    \"script\" : \"m2l2bg799x0hx1x7e3kn\",\n    \"nameParserType\" : \"4nqmyl85n9nv512yipfsktymao6oyyjd3sy1w3aesr5417ltlvhyraaovmjn5045ed0mq3erelu6c8i21jrsu6r2fx48ffqxesf3uss75z9z4mmy8fxcndfnq2myiid9uxk66y47uxr0mrx82vuk3780x99\"\n  }, {\n    \"score\" : 69.89673078341887,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jung\",\n      \"lastName\" : \"Runolfsdottir\",\n      \"id\" : \"222u\",\n      \"script\" : \"l55vissqy3cf5d7vzlvyp3z7jqyn1nrtx6bznlhdz24q\"\n    },\n    \"name\" : \"Tyrone Langworth\",\n    \"id\" : \"1i55\",\n    \"nameParserTypeAlt\" : \"rgeq0tnv2robxm6m36svll7pnreub97kfr4kxj8w4o1o5vkexqhwpb9jjorp0xaab510vewiz5bplf5f4vngyxxmquq4lqv7cz\",\n    \"script\" : \"y4nntwuslhl4h2etd491ue9fribguco758h6pxshe906p19gnxj6x5nk5ve7tapm\",\n    \"nameParserType\" : \"4rh8m128zzmre68uhxgdg9bw3c94cwwa55e1y8b4oj46feclud5e4ejuxambwn1fuowv1seo69kq7lnhcp90mm7zj5m5mqo4\"\n  }, {\n    \"score\" : 37.091055045255004,\n    \"firstLastName\" : {\n      \"firstName\" : \"Marvella\",\n      \"lastName\" : \"Carter\",\n      \"id\" : \"nrk3\",\n      \"script\" : \"q4gts5g\"\n    },\n    \"name\" : \"Vernon Leuschke\",\n    \"id\" : \"4b1e\",\n    \"nameParserTypeAlt\" : \"ntas4zzv1uiiqb2spgc5x0nzozwwkil5qj9dt8fbrccdr08eyt9v8u3d3ini36f7ev4av8rlgxa3hxeup4ijlev7cd8mh1uyx3xx8ktkjgva4bshhuwc0nt4ogv46n4df0tohnnh2o01slfi7zfxxhcqrfkhmz\",\n    \"script\" : \"f12c9i37ndl2osuyphyzdbzv3wr2bddllhkul602kvmyqfzslk1ayef5guzriotjy4kb9a5kdej627v7hcrp273cmalq1xhfiuy21avxxc3dk6g1sd6t1utwd48u\",\n    \"nameParserType\" : \"w2yr5ej3farnnuda67axyzk0qr4fffaq8ease72518o2et6i3rr7wjwlwtcjb5237t2ez7npzn0c809rj3dgpkymvlpknjdx7nj41b44w5raz\"\n  }, {\n    \"score\" : 51.74903882815214,\n    \"firstLastName\" : {\n      \"firstName\" : \"Stanford\",\n      \"lastName\" : \"Moen\",\n      \"id\" : \"xteq\",\n      \"script\" : \"r0ggnl6jemmu0xdb2z0gbd2n4tok2fcdfzgfr890ik0t1yss5avljjb61fpdaowamejtd3yf7mrt05376\"\n    },\n    \"name\" : \"Fredric Baumbach I\",\n    \"id\" : \"575c\",\n    \"nameParserTypeAlt\" : \"0i0jhfy1p07493d7jv4kx2rur1ziae8\",\n    \"script\" : \"knifuu0yhzvbqsy7qgsv5ianj5asp44o5ahnc74lwtdbundsab05mntd2y44tu32xbb859bi47xoafh8zrgqgfdk29c3nv4awiji10dj3s97jmgdhb8y0qacl5uqfnjg60d0po6b2glsoq3qg4xwds4x23klzsblfwpno1xeygr22\",\n    \"nameParserType\" : \"xic6wkj2czd130ai5a6p7dvtqm8gr88w547prex9l3131vitgg25raj6r7w0tvsyfcel1fdx8zqndf4it4c0clrykm2wqh1uxjnof0ytwemskodo183tntf09vi3y0ib0d4jgglerpjqs0oc0grssey0aaw9nbhr\"\n  }, {\n    \"score\" : 73.16520358293914,\n    \"firstLastName\" : {\n      \"firstName\" : \"Danial\",\n      \"lastName\" : \"Rice\",\n      \"id\" : \"p7f8\",\n      \"script\" : \"whhmya\"\n    },\n    \"name\" : \"Dustin Crooks\",\n    \"id\" : \"qe9g\",\n    \"nameParserTypeAlt\" : \"i2wxkw2vlu8i5xcq0vcuf5iwak75qqlg6k693cdy5m1aib5uuu8pt10wsb3b261jnt5d49ww2lfnqq6qm02jxw8otjthyeggovr6ynbkp2ymz355prh3ltny6oxp2dvfq7li8levpvq67554m6nhs\",\n    \"script\" : \"pvc999f2vvhbwsaybx5\",\n    \"nameParserType\" : \"pkxrf0qv7diehp0x6zrx0ez2kt00mtvhw9l1m6vzqh89k6zbra55rwf7idhbtvl70c3oqljuwi56x7eez6ngtj\"\n  }, {\n    \"score\" : 37.342126121913836,\n    \"firstLastName\" : {\n      \"firstName\" : \"Clement\",\n      \"lastName\" : \"Hoeger\",\n      \"id\" : \"q1pv\",\n      \"script\" : \"djxwy5m7cf2vfalo495ur2pk856zmvratvqx3kt1zqh6lv3c1udz3qgy7ibzaab19e74veb2n96o8gp\"\n    },\n    \"name\" : \"Mario Johnson\",\n    \"id\" : \"98ix\",\n    \"nameParserTypeAlt\" : \"tgth976imbm16g5ek9vlpkpmr8gaoawmnpn7i4v59ub265567wj4krcglu79xmxrobodovahnsncltj5ej1imj8il1vwi3qpnsn8gs3m20wkyggui1cow6nrfcpu\",\n    \"script\" : \"drri70kxyr6rqp6g141g8ld8x0ccj18uc1dj265rqo1qfda0mwnubnrjuejqhol9ztcbmds3ql2lxoh6gtc4c0cpfr3mdnfoaklty58k4ye0597f9fpwgk162tf4muurptfnfbb23qgqb38\",\n    \"nameParserType\" : \"b6916sjyprn6z97lvpi168ccq05zty64yewj6pdgwv1hp3oxe05ygiv8ad14vqd8r1iggjqy6anjzaifp7272\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "827774c3-ee0f-422c-83f7-8363e6fd11be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.378497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "60804509-8e48-4fca-bd5d-04c54889b2e5",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Keneth+Lubowitz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "60804509-8e48-4fca-bd5d-04c54889b2e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.37624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    }
  }, {
    "id" : "27dc0541-bcfa-44c2-80ae-b94448565066",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Reinaldo+Torp",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "27dc0541-bcfa-44c2-80ae-b94448565066",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.376184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    }
  }, {
    "id" : "22818a53-5834-49da-a58f-f0e1303168fa",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Dawne+Dicki",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 50.99476781413301,\n  \"firstLastName\" : {\n    \"firstName\" : \"Melvin\",\n    \"lastName\" : \"Collier\",\n    \"id\" : \"w9g7\",\n    \"script\" : \"px4piaukvvmuz6fxhgs06ude56td4ep9tr87mbli31zdfbn9e29q6a1ds9\"\n  },\n  \"name\" : \"Geoffrey Von\",\n  \"id\" : \"05ov\",\n  \"nameParserTypeAlt\" : \"71nk3gi5e8ymmlavzvyl2ujmjqt0z6tokfcbn621s0wegasy2xrl8ql\",\n  \"script\" : \"hiwg30e352u1qtyxvwyhisccicv2dytablmh9n117a2mmydl2qzbo0q0cw4t3d9dofu3tlztpn\",\n  \"nameParserType\" : \"zfiek8tdvfm0atd6b82r1b1r6m18umnrbmqse5xeugugsxib3tie271fgekdo133hn4o1ibtn11kj5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22818a53-5834-49da-a58f-f0e1303168fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.376096Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6e7ef50a-b643-4a30-a94a-fac17876c514",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6e7ef50a-b643-4a30-a94a-fac17876c514",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.37558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "d12045af-7965-4c69-90a1-e5a95ee2a04b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d12045af-7965-4c69-90a1-e5a95ee2a04b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.375563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "3293ee9e-180e-49a4-bd0f-eb1f970fa98b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"lastName\" : \"Luettgen\",\n    \"probabilityCalibrated\" : 6.920667086101363E307,\n    \"script\" : \"9efw60l1i8my08a0db3mc2yt4333f6jxi7k2c8g1ercyt6c2cps6d49fhhtjk3xv7yi\",\n    \"regionOrigin\" : \"g2f6exh5go0cok0zm1n2o38lmheg2s8gry1jb0lcjmeu1f5r4xi4rjj8t2hun1ldlpx8ud7by7rx\",\n    \"topRegionOrigin\" : \"bje9p70fsmkjz2gy2r4vzdnp6fqkrbnbigrremsm3g3uewxr8wp8ogjn524jsdn6fzutwemns9pbgga6lxwoonjgy1kyapo2qzlvnkl5awsa7rkrgd8zj\",\n    \"firstName\" : \"Renaldo\",\n    \"score\" : 23.128789434140796,\n    \"subRegionOrigin\" : \"29bmmzrek5xzotxaczf6a0iv9447l0nuw2sw4g37vzn7mc4xyufjd3tq5egb3l0g30uioqf4q07z4t3qusue3ipfpbgxugepdv3g2m5e7nwtqdy9sdnoj87340v07vf2wz5rw4id50ytb4t2clnxvqpym\",\n    \"probabilityAltCalibrated\" : 6.492268040645096E307,\n    \"countriesOriginTop\" : [ \"fbltxushnc6tax7p3p8miq36vgj06buq04of06\", \"c5sxr3xxd3c6bfwoy42kankhxpxmvv2xzkckolgozeprmjozi6m6t0tter0dqe3stpghqhdkp8ex26apzj6ejpmz1u535i48qvipx3nqu0jc\", \"47mds9prx06s\", \"syfl94tiusjx2iish22ku4i3jcyyizezc275619c1g7h1p9keb0q2gs6zgsqgj0ancb9flpl40rarjbrgwfpkj1ot\" ],\n    \"countryOrigin\" : \"ocj1tncs1iixjryz5v8srazr6ib58nddm3ivel9rqr3vdpcl1i42j7zgwvfycxg1pu3cua4maath8kt7gma8gycemn2dfqmv10c8orncrdqijo3568jfafuhfqwh36hz16e3m5ah9c0nqdesqnn255mp8vb0itk5ufp5gagu1s0o9v5jdw6756rbgragm\",\n    \"id\" : \"d097\",\n    \"countryOriginAlt\" : \"2lyyg6vo8p3fi9lypp51kgiw4c2sh14xrwdwbyt2hk0xxk4tre0sp0zsv81iu5zlypnc712pve1zl9jbei9rcb1gl0tm2n42lufsn0ab2hueelrsi5ek2v8buokgubn4wov22e9l5yn85a2v431qp05b178k0p9i6a9cifsa5eb38vn\"\n  }, {\n    \"lastName\" : \"Friesen\",\n    \"probabilityCalibrated\" : 1.630556262019848E308,\n    \"script\" : \"1vfnzlvi78fz4qrl6une49q2pmxrrcxzbf5mfzzqnhmlc1js6xgyxntp7uav13iynzvs2myhb2am6utwkisodwguqy54gezbf3\",\n    \"regionOrigin\" : \"wxvweqypgewt9pkru8pixmq4p4evef3p0kjgw6x13wucoqaihu2j6gc36zrtabp6075ltnqrjokmjt9bb\",\n    \"topRegionOrigin\" : \"f7y0ma4mo352ppuoyw8s1vsoi5msqydhzbibsmrnrx3psukhsoo1opgnsrqr92ffzzb53z67547jya29ruq5xeu1ocn03qk3isp08686gh5w6bitqvdpqb2c6u46um74neo6yqy2aku31n20v72xjjvke7dhiq56414qu7g2pw\",\n    \"firstName\" : \"Ali\",\n    \"score\" : 52.76794215802406,\n    \"subRegionOrigin\" : \"plakbzxtp4485bk8051juyllxove5khx3b92fenstmam8rmhk45wthen1hhgsnqj4vyunts6xjm63hriundjqmw27n52plp4s6ieimc4t8ezbl8bdva94r6i2fyjwzirzjwmhjn42cuijzpkleadwm24s899umsbcvhsbpkw6rcvsqi623bou02mgz\",\n    \"probabilityAltCalibrated\" : 1.3262089906836348E307,\n    \"countriesOriginTop\" : [ \"fxjk8ubrzwejo68po1bnq5783uonz4oibbfuazbpwv49ete471civn6iz42tytrq0e23wme5z4bu83wziki23gd6z57uwub5ifkyqjzp9kfi7s825fui0q930ji35w1x2oz8\" ],\n    \"countryOrigin\" : \"r1n9itelvs79devoip2z189r7jqkkyd6gx7zy\",\n    \"id\" : \"8s0x\",\n    \"countryOriginAlt\" : \"2h7hz6etglc02z1mvwhopwujguv4hnndsknuisux0cfbowadpvssu8pdct88xsqg65hpi28uh7w2z3xmpzesq6cnfda39i6st\"\n  }, {\n    \"lastName\" : \"Bernhard\",\n    \"probabilityCalibrated\" : 5.080474356738808E307,\n    \"script\" : \"xpa8mhsigdu7taei639quhml3dqc9423da06ba1nu6ovymkp4koq8f0kgcto8gma67yli7pwow25z3006rplmnt3rrzk8mqzi9roly68lw5tr3sgw8c\",\n    \"regionOrigin\" : \"riri96minnui0i6ahnf0vbbd5w23gbub7hnmo7uolpcx9jmvnyca6d7aev9s3x58nh7z7zxy79bdjuxm3o0ihet3q5ek7bu6wukjkfu9nngy885bpx7w9n4t28snyhpfkx98o6zxjzr9kosup58g2ovblec2p8u8182p\",\n    \"topRegionOrigin\" : \"r0vlg2a79fipl2bkf2umnk6n00y22y7md6jn247xldpylbzx00tvjydffj6vp46ts82spmpv4xjcyegzi042qz79\",\n    \"firstName\" : \"Shirlee\",\n    \"score\" : 46.815394112187704,\n    \"subRegionOrigin\" : \"uyxcdqip7eidv6nvees2mmnxdl5ofsuse74nbb455fjfo9kxsnwf8fo0y1b0j1vb8y5vly1cv3wox5lmc18zisejhyzm66xx6r8o19g6pqku2cm48f8ub7owbgbhz8lov7ui6p3v74jxg4rmaqo7chgz24mvr8o26ia0aywn1mlv\",\n    \"probabilityAltCalibrated\" : 1.5834552677411195E308,\n    \"countriesOriginTop\" : [ \"se6epy8j4tws6rusk9ety8a299oujig28fzycivxk1r43f50e9rscnc19kdlx6pzlw51dp4i9yfzrspof3zg7wvd06am55gzfc0v2w2akq2zoy9pzrelbfv27b75rr25ps40q4ytpouq5t6ydwg6kw9kuqstc06iokh0xrewn648qd2nt\", \"rt854rtm9274d7c8gj9yo0u4x6p7u7blt0iadonuguj4bmu56dw3ccf2tobeco0b7evdan4uwyo3a18s2xco4smqj0jx29lz28vhkwej9bkc7nn7km95977goi11n8ff4xuf33ffvchr1zf8coc6miug8viy7kpajd5big0o2ya2h7\", \"lyhxlpjbswj0pdkuf68i1pzblmsqs9zgnkjz8x\", \"ci67n60bwe2cj12k7cgdiubnw9ik9t3667t1ks9foczseevaxia91qrsg\", \"wtpge38zz2332srlon9lyc0evpfnqaxwl928v4fxwgnj7n51vphrvs6xnni57nu0v6q91c5r0vamemiypymknq0q7xei16kbxcocxglxu8c30em4healb9furz7gfgwhh3sce3ontc9fjem7g2em2er776x2twl99wal8710ii1x9khjzgnpswfi\", \"iahwvk1vv2yzpt58cas3zie040atcxsit9o25vghihxhsqlz70wju2wn2tnp2bq5tt5mi8a9cz1knxtxijmeqy\" ],\n    \"countryOrigin\" : \"13hn85010u53zp4v4hs9ullpuu4xw6s8t1rpyjmbsoi6n48wlgsouvija6e9o2b59mm9klp6lvagkqycxh9ebjb1y5i5yl28pgxexllsw0j9ktvbowmvs27718zzuohcq669kwigkm74955c\",\n    \"id\" : \"e1v5\",\n    \"countryOriginAlt\" : \"auww8vb2svhvskyb4sgc2n8uranuvp2uymcxn2id7hmpnin9m148qkfke5ynqam3z8tp5amrbavafevq30a90sefx0cxonsmxz9j44xk21m2c17wgkdq0xyc9wkhhhubhj1sn8q4cadyl75tci37ul1dxcq6cs22b5hf599jj28yovvz0wq5qt\"\n  }, {\n    \"lastName\" : \"Miller\",\n    \"probabilityCalibrated\" : 2.9976468625457643E307,\n    \"script\" : \"te8148dm7ktm1sp4vomvzcs79g4knczpp1kbq7dlf49252ht39tcucgwkywh89kjw779roha2lax1rjmf82j2nex12flcmwqag6mr\",\n    \"regionOrigin\" : \"aubcjopxhchk6un1o3xur78il71043r6rkuppoje32xj16nk5nuy33iep8evb44dkni54tsih7wie0sf2pymn6dyz14z38xljmwvasugwllcxo55s7ibed9jqdpjz1gipvb6ojqs\",\n    \"topRegionOrigin\" : \"u9kwkfilhp5jjlpfcdklwv9f6so6vg7k7px1qvnii8wfngbx8dsp\",\n    \"firstName\" : \"Roland\",\n    \"score\" : 58.209005007599956,\n    \"subRegionOrigin\" : \"prkua16s3cjtfx45svm2z2bthera7oajbtwlzachszehlfxp55dzcnbrlwdzxc9iw4nj9nzs8dtycpzv8qdmnc883ah07mfm5wk7jfs9eszn18txgadmocjh0ofy7rme51kncehnjhireofd916rsg724ybmuawn5iv6ql\",\n    \"probabilityAltCalibrated\" : 1.3943385929248535E308,\n    \"countriesOriginTop\" : [ \"5gb052qlxvq3ourvc7qmjky7oh9ga8gn2id53e1ibrzk8ug7sahmfbinozlt3w8fekgeqi439gyjqq58y7r0qt1zqjxis64bu06ff5zy0p8nwcvvwcwupk6taiauvzqrxgth1175b75c42795byhxpxzxv3aqf4evfe72cyuesgf8l8omk7f8gqriep5n2hu5ikat3yv\", \"jnk55cley6uprxbiwqx44zujw24iu6zbstmlasq9hx7uajczjd26xk1i0v3qv9thzm3rc7cijos7n4fv3wk1p6qedueglaql1lis6miqkj8biugwfd2wfqz7jygj66wv00srhwy183\", \"9meo4ql6rlg7lobm4wwdzgb42u5vs6c9lvterbq05aszvyes7ixwikbd8df5m1amsxgbu6mrtbxprnlros7v4sgb6a6889njoim1j7iat1t50ak\", \"o1evruynh5lkoqh7dfs4txdz9w3vjr32hyp0ze97jfuopc4gunoqdzg13sa28adgrz7kw3kzii47ghbnp99s3xglx2319yj5pz1cl26kn9us8pcfekodsiyf9f3h537l2eenzzp5sg8wpfh0x1op7sq8sm5mxpa\" ],\n    \"countryOrigin\" : \"51kvs89ywbj980ik4wwwu3qy51tvrc6hd6b9vged55re5sl6jd6nqam443328xvv4v5jwoxbvw3r5qcxkr58lg9464mexxgce9m8e4m16cbsg6xthk6ibx51iosta5a8b67gy2orocgmibaxjjk5ys4sjfpft8a2of77ocxlumtsalh\",\n    \"id\" : \"z5dc\",\n    \"countryOriginAlt\" : \"upa18lmdsgws5t39xynigfruqg9lrnj2leolhn8pjiqhogknxg4n601qprseirblszdf2p02ztvx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3293ee9e-180e-49a4-bd0f-eb1f970fa98b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.375515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY origin from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified origined names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameOriginedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5967529e-c40f-4735-9b50-80b78458dfd4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 403",
    "request" : {
      "urlPath" : "/api2/json/origin/Tameka/Willms",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5967529e-c40f-4735-9b50-80b78458dfd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.374388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    }
  }, {
    "id" : "f533844e-6aa2-4c65-be57-b82a3a4e2980",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 401",
    "request" : {
      "urlPath" : "/api2/json/origin/Dominic/Mitchell",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f533844e-6aa2-4c65-be57-b82a3a4e2980",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.374329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    }
  }, {
    "id" : "1e11c541-5311-4888-b7a5-ca75e88239fe",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/origin/Harley/Kshlerin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Bosco\",\n  \"probabilityCalibrated\" : 3.77053706363809E307,\n  \"script\" : \"ict1hsws5o8gtdmnptaz2ohvgnenjgs9sg6khryu8qgtmrr2f982uhimyy3j9b58m0r8m3nsr0sxgrgeimbt5v9880i86292s3iynmo68q\",\n  \"regionOrigin\" : \"li0oy7lyuqsmhef9jg6mexbnq5uphydwahvttba15czvbbe7zamgwcnzmgfdnw8u34sggingur2n27h622ughruq5jdy9bqf\",\n  \"topRegionOrigin\" : \"tt7w7dv1jqvd8bwst92lzpbghi0ll9e6x88jbe4ai8t5johdwe9wz7ejb3hv5sk0alk9shjnno7tpxtdbukxl52e9sa2sjbws6gt1adafm7oh406aayhy6e6jpdml3n3jx07mpo0drujqiqrbx9rcj6g6u24yo8bk5vs2\",\n  \"firstName\" : \"Calvin\",\n  \"score\" : 22.355883997479843,\n  \"subRegionOrigin\" : \"69p00xii3pm07p7orq6b79nrnckxhwgz3rsqgcoshe1ly9k4udj1g63nfogg11moq8eo3ly3hz3krhsjtq7htbgb8wmyhoq3ht76jcf1cht37ssebc5utpuop1d0ijjzuy68lx795wubamkkk0b22zp97e2\",\n  \"probabilityAltCalibrated\" : 1.5145482933324938E308,\n  \"countriesOriginTop\" : [ \"l3a5k5dku0rv78as4xwchlsn359xzpknpop5rdb4qf55v8cexdqxa\", \"s11o9nug7t4jjb8wfa5jylhbu1h2sdmkdz0477h0w1j89hkffsbm6m8ye48hv6el2d\", \"wxlmdr7y27xx8ramf3e4dzolsmlxynlhrehmqnz8nmz39jq9829k7nzba3ccz7sk6jordgzc2fc42kojb28jm6i1ecpgp\", \"0f9p\", \"1v0u8fmf5jr89khxtvw9rniwz3ndl1w40aj49jz3udv2mhysrq4w0novh6xokjwmmz9wvga9nmy7mkhyedxykbhtxqmzs94g65z5y3rrf51lznj6l8gub36276gewlhrulj6i5lcfzcl7c041qj1mn\" ],\n  \"countryOrigin\" : \"sm4ne35wot7ab3bw616907ga4ay2vdcypvvurus7fgxst6chr6bgh5r17e570faa36f9ddi7byx6l9takbeoltay07js4jrx\",\n  \"id\" : \"141r\",\n  \"countryOriginAlt\" : \"e9emg4tb9y3sa9ofa0knrc3va7s25zt6s6d4yxacumi2atx8fbecr2z2chjkmboqd8modkz7vnnn5m70lh2p7kiqdazeggpbp2bu2dv4cb28q3ds4pe9l45mvoudqw2esh6v06rwl03ruplfkg9q8orr3meus6tn21qp8pfbl66pkik2h6nf6jak\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e11c541-5311-4888-b7a5-ca75e88239fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.374248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country of Origin from a personal name.",
            "properties" : {
              "countriesOriginTop" : {
                "description" : "List countries of Origin (top 10)",
                "items" : {
                  "description" : "List countries of Origin (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "countryOrigin" : {
                "description" : "Most likely country of Origin",
                "type" : "string"
              },
              "countryOriginAlt" : {
                "description" : "Second best alternative : country of Origin",
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for countryOrigin to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "regionOrigin" : {
                "description" : "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegionOrigin" : {
                "description" : "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "topRegionOrigin" : {
                "description" : "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameOriginedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "07c6b9ba-e279-46ab-8b8f-d73a403bb038",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "07c6b9ba-e279-46ab-8b8f-d73a403bb038",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.373747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "f3751f98-c083-4519-9d42-0a0b74af8707",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f3751f98-c083-4519-9d42-0a0b74af8707",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.373731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "f0a9286d-c89f-4abd-9147-206a45daf641",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 37.03947930181949,\n    \"commonTypeAlt\" : \"e4ju9en8wwbnf70rkrizopcr7rulm57v18jaradpur6ocfpsbg0uiqhghxjs04cbx9vtuhr3q2eyrmk01so1832xbjno2t6z25wevbi3rj3a5ihaa72plagom4z28srw4apmtbucbhu3pdg2r73up1ibc9u\",\n    \"name\" : \"Kandice Miller\",\n    \"id\" : \"g756\",\n    \"script\" : \"1veous7i877cb4goo4rhko5he2km7c0tjq91rz\",\n    \"commonType\" : \"elyf9d0xq35xumd2ax94f54yok9ioefb7fr3eppzabmsw7q0k1b6hmwe\"\n  }, {\n    \"score\" : 33.20546725528799,\n    \"commonTypeAlt\" : \"mgivhudzoi3l3svikbr50fb161tdnh4p9xpalxtzv7sr63sux5xzecwhxj8aa7oa8ocoh9jnonmkxmjnpi9qi40phhx9rmhkucbtq77lcts9inuss2zdgd57mkx9rmaogt5kibd3e5flra0t7lexbt9djjw7jvln\",\n    \"name\" : \"Salvador Kreiger\",\n    \"id\" : \"wn9y\",\n    \"script\" : \"4c7kcmqalo5bbmnyoxgq3mb2k842077uxwkr7vjt5zwxfa1wq99g72exp9o9tkz6o4y1cy995n2prxufg6f6vq9fghkksmheugn1kgem4grliruxzqf14714hgy9hi12zgxj0wm\",\n    \"commonType\" : \"5hhvuwfc0atm7qmg82u048sbyw44hbu0kpeg7a5yv7opddsi9bbkmsr0uh9n3pka0ffz7xpmx6o756qk\"\n  }, {\n    \"score\" : 10.55808153609531,\n    \"commonTypeAlt\" : \"lhh2aihmzggk5kfgwgsnx4ro9wu6hi5jy7g9ohsra9cj1usrvyxqwcchwsug3ka40zdilw22x91hxpakqt72kbcerls3ue918uhqoortioh6l7omksuznltdfrs0q7z2m3g4uc0tu26fv5efafn3vdb7o3a2c8vf21yw5ixitn6npyqq438100bginet3t\",\n    \"name\" : \"Dirk Rippin I\",\n    \"id\" : \"re7i\",\n    \"script\" : \"kl7k5rbv4enroef174mn9jwz6hj08au23xzue8ninytzvgss8g9g3u9ly2jg3r2pfiiafmawp4z73d4kczatcddgrahx5l3yho1usvu5h9uis47b4iwvm4zokzl7yz5x8ksj1l5xkvy1imtyr00uyactl9l0ey\",\n    \"commonType\" : \"0y292lyqoblbcewcaiq8j55vr7zexrvzh5vum2c1buk3cspku5ugrubptsioagsr9rkn0d6pl59oktfur0gato7ehbw5a1thsds7uxpsj\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0a9286d-c89f-4abd-9147-206a45daf641",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.373702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9b361212-ab0f-4c91-8ba2-8562eeec6130",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/jq3cu6gc76gmeis7w81vd9xjrppssa40qxrtnhjbtdv40w/tyslv0v0vdwf129adzsz7sr0yafi72hu1x4j368fuwsza74e8uxi0rtk0s9yhbmi0psdan9l1php9cksfwhp9vad8xt64lhxl5o",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9b361212-ab0f-4c91-8ba2-8562eeec6130",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.37319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    }
  }, {
    "id" : "7bf1cf72-e6ef-47b0-b94a-f7820c8c426b",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/hh23dt5pkhe1n97mep3tpxua5h4lmka9o5twzh4a7sge6u1fpisg9roa8rd0renrxr5vl6iwci6fee1bf3hdbwik7jjwwc92pp3dwwxguch4of1575lq/4m52pci7y2al7rfnszi1xr2emkz3alcoa4gou6dv5211wnmrmxd55fosv425j04n0n1njcmtao8go5ry9i5xudtq44ilzrobrqdkqngdsj6tchzw",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7bf1cf72-e6ef-47b0-b94a-f7820c8c426b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.373152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    }
  }, {
    "id" : "026c5dc7-f8c2-4be3-999d-1d4b94080f29",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/yw6i91quk3qayrrwxm5b52eut9l4hhxgwg3qaku6f4axctvkyjtw1cx02vjctzcian6pzq2q7w696vpsqgs52uvbh6dr6eyzg7je56j6wqg830war1sc71gg05trpe7yp2ij/7iufqfhkxp4t3o7pybyy7hnwfizr8lom4bxtwu97l3qt3sq0elqu5f3cwwi7e3f1lkhftfeurmymgsn709wzf4q6bq8mwazyl1exr6x7l2c5i7z2ochbeztolm35sfwkxuwcd1tv8rpheyyp",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 33.38116448084072,\n  \"commonTypeAlt\" : \"3kzwo5rvjle50j3nj1k94smzen85i5fhzwbseddcy1m5ibsan8djxsk6bgd33jdo0bvaeh16tluc\",\n  \"name\" : \"Dr. Hilma Rogahn\",\n  \"id\" : \"5w34\",\n  \"script\" : \"2vj2c2d5c0eyongybewmrb8saljy5t0yqs3rz5aw8h6np96227zq5ibf6kjpmlr85ils1wnx9ki9owowfk9fdmuj0v5\",\n  \"commonType\" : \"hxshw9y5rb5c032bgs35yprq8u1dadk4xg1v21bsrufqjaz7j5j8izw9xxfjg2ig0ffkl3lp11eh8d3bbnrq8rweci1oss9dqnavswwxf249l0mrlgymx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "026c5dc7-f8c2-4be3-999d-1d4b94080f29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.373103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "056ac4b1-5d5d-4f32-ab9b-4ad86df25491",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "056ac4b1-5d5d-4f32-ab9b-4ad86df25491",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.372857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "05fd2545-1c34-441e-bf2b-e4c04bfe83eb",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "05fd2545-1c34-441e-bf2b-e4c04bfe83eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.372841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "26127496-edbc-4f61-8820-6b8c4bfa67a3",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 14.64586204835725,\n    \"commonTypeAlt\" : \"qfo0nodb7cm8z9nbqy9ho2o90vak5jxlqtluhzrmdzegd5zghkcq1drs1hedzhb15lszia8r8haccmo9hytgwxn3ynrtkirm79634wwhfplk4nkv76uj9jl2plm6dtlvdyv6di\",\n    \"name\" : \"Wilfred Cummerata\",\n    \"id\" : \"29l1\",\n    \"script\" : \"fj4qqghwqhn96fdomcjk0qu3nvod17u8o4cgc2tw7blbtuo2jovjk0xr0gwhhmk9mxipjtm348m5zuhn8ywuf8sbh87ysb108wf0un3ln6a25631ek\",\n    \"commonType\" : \"ck0bum509jtyr09vqwve1hkemeqjk9j0tni67xtkjqhsunmbwi79f6y6u1la7teonqovk1ni5ttsyec83nxwcxma3zz1ydeg79mk65op6y670n4g9pkdn3164r97cg0xsv1nstwhxjdnzdd7nhuudv60b2xy9iomwa7a\"\n  }, {\n    \"score\" : 41.757910872073765,\n    \"commonTypeAlt\" : \"3df8zljakkeztdc\",\n    \"name\" : \"Mozella Jones\",\n    \"id\" : \"td0n\",\n    \"script\" : \"jmkipgav86pr56d7klxek9zosaox3z5q0sbd1hi1qyu23ln27obmrg4kbt5xrtr8e355gwl53o8fh3ucpkklvojh5cuxtdcv503jj5lbp513c9yh6khj989pwl0a1ycn1ff7pq9326pxjjfdughwxd8dzeuy5km8ah9r7ggwgtn20rgzt39curw5r8lr\",\n    \"commonType\" : \"foxmhor3t0a8mdl39uuq2vssz2idwhz28k5j7collno8cmpeqo6rvsxj6i8miduaf5go3caf9yi5018h5whs7c2czy70lw2hiye8ddeg0q03nqeplmg3n76vvsxh1jf30nozsmhhgsro107ye\"\n  }, {\n    \"score\" : 45.744313028408534,\n    \"commonTypeAlt\" : \"7yi408jz1uiuvtwy13keo8aom1zi9hdlmtv4f2p3cq2gigdj6lyq5f2o7tzswa03jb09aop5frzbukqro4u2ghz41c69fy4965ls6vncptx049n1q\",\n    \"name\" : \"Carina McDermott\",\n    \"id\" : \"zt6i\",\n    \"script\" : \"5j30yamehxzktd0i23jy53x14z1gzsr7rh7b\",\n    \"commonType\" : \"okj23zu4dhx3qeq1rcag7sxuw7l5twtnbb10d6de1xsbqf4uf9jb2f8xfu8hgyldqv2oqbdm26qx2b7631x9ayqby\"\n  }, {\n    \"score\" : 21.618584074300585,\n    \"commonTypeAlt\" : \"2waflf3fz7ymb4yfb05xmx0ksu4uy4rzpppdomvxqyxn3r0sjvrvcf\",\n    \"name\" : \"Raymond Johnston\",\n    \"id\" : \"80kn\",\n    \"script\" : \"zhq0leptcw6ku5j6gs0r1qb0hywo7slm9t98glgohxbn4kasn5p27o16tu44g37tt\",\n    \"commonType\" : \"7uvurscuujqzokhmmn0es7ge0tparqxufc64pln94kzucul5loo3kvneoop4hv5775scahgyvc8wiftneqe334zmne1m5easagzt6g06zrv48dt95wib3q42dwfmqrtntmxkryygj6ic5ywuq6cvj9pzt99y42tz8a3iqvb8sh2elsa3c9vm3ta0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26127496-edbc-4f61-8820-6b8c4bfa67a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.372811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "3ed74b46-643d-49b1-9a50-9f0a98ecc7d9",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameType/hvg63t7tu2yntk31lgpbefy74z30f35rt1lpzd",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3ed74b46-643d-49b1-9a50-9f0a98ecc7d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.372144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    }
  }, {
    "id" : "1c717424-b8b4-4f91-9f5a-439f77304143",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameType/5oe88vqisal60jlagpb7og5uthx5oi",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1c717424-b8b4-4f91-9f5a-439f77304143",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.372117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    }
  }, {
    "id" : "170219a7-522f-4420-8d8a-2b717fa27841",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameType/sc95gu9pn5bb4vy7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 10.736059555510579,\n  \"commonTypeAlt\" : \"5zvajxlgayyi6f14zm1oqgx1h83dmerhmg0k9of76jn1saew1cmaws6hmpoq5vj954dgwxfyx4ymm0epuvakq\",\n  \"name\" : \"Beau Klein\",\n  \"id\" : \"aj24\",\n  \"script\" : \"ox70a3i5ehrsvovhx7orci7olu9podbaum8q2iezsenpa9y57qljojwz5yxdit288xk9ororjex98\",\n  \"commonType\" : \"4p36u92dsk3umkh0mu4pngr0hmm23hzc1qmxuz1db1b5fepqexn69dpyffm6q4jlqfd5zcdwayxbhnrgw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "170219a7-522f-4420-8d8a-2b717fa27841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.372074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9a86b48a-6e67-4c53-a6cc-2bce3edf0694",
    "name" : "Activate/deactivate learning from a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/learnable/y3ye56gfh5vdyl6hwz96ba6xngwsekvna3uvda98ssfz0lpinfq4qs28mtq15ytrbnpud4yakkcbg9dv9kkl8mc10taif4vzjn8jmzbrhwxnazlapq8u9ghcgzhwpzjm79hxvxv9vlacl82lnul/true",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9a86b48a-6e67-4c53-a6cc-2bce3edf0694",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.371776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    }
  }, {
    "id" : "6313502f-a1a6-47d2-ae75-86b3fee0bc14",
    "name" : "Activate/deactivate learning from a source. - 200",
    "request" : {
      "urlPath" : "/api2/json/learnable/88wrn3opi1t3q46024v8lkad6634osjf9sdsyfcowq2pgl7xudbtou53guz9ke37t3gri80riqvfes09ey3fwuucusl8djef237415fvqt4oo8pitgd1s5og52i0vw36lqd4fehglsl80ubqgtvv074jlhlavk3ulvx22dfu2lagoqurnzni8bh9titx/true",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6313502f-a1a6-47d2-ae75-86b3fee0bc14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.371745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    }
  }, {
    "id" : "1cbfc413-89a4-4bcc-b204-b75638101a81",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/wyezj7wryekgdt1fu1xm33nbduh1qguydr7kha3pb89ipujskod72unl75r416r0qonahxglee2as8vdh0lwlolsronbinw7r9yep2qnliqxo5ugsbiw6kranmsegn4fp3fvjv9bvv6n3bi6egww3j99qjki50mgg0eacttd52p62bpzigzflhlr/f1z5xx089xd9g43opp9a0d0oy3j7qyixbtehhtr3yj4bdx0kh7i58nk0overozdlxr30ju95bhz62vl4j64q2sthxciq536iykqdyk52ry6joz60191r6420zq3mtksmjib68i1r03vxm5ntc9k2zah7jiqo7wswagj49ire5/Issac+Mitchell",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1cbfc413-89a4-4bcc-b204-b75638101a81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.3717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "68ef3e2b-7be3-4edb-aabf-9daf13309646",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/f4f9uw0idg2uwfgryjjkwr5jagkbh7ckwyehsey56/ws7i18ldgvqhptd3il4xiwz2dl12e8gfvoysr60jkcrt7qj51040nl1/Irwin+Ratke+I",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "68ef3e2b-7be3-4edb-aabf-9daf13309646",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.371618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "7873c2e6-2360-488b-acae-efc375d44ecd",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/1mwh5psy0viysvuiul77y1e8o6rsf63jrcw5apz7vvgff8du7fc5sa3e2xylzrcjk3fmxgbjiq9xm15fo0n6/fflnx4ps4n6moxd9p1ujeyqmjo2ozwekfbtts44v3ezywe7vt7nfhzy2t149l154wwh3z3wllble95s2okn7uk7kzvjsnvterzsnea7exq4xknpcfp7vok92m9qsv2umfqvld44fowvjz8g3dcq8po61lczu2i5s4/Deloris+Harvey",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedbackCredits\" : 3806938497950354654\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7873c2e6-2360-488b-acae-efc375d44ecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.371506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop",
          "schema" : {
            "properties" : {
              "feedbackCredits" : {
                "description" : "Number of units recredited as per feedback loop successful classification",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FeedbackLoopOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "138b64ca-d149-4fc8-84d5-1b7e42bffcaf",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "138b64ca-d149-4fc8-84d5-1b7e42bffcaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.371332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "57d39274-b6c0-43d3-b0ca-8bde5e71962e",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "57d39274-b6c0-43d3-b0ca-8bde5e71962e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.371315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "e7f0ba10-9f82-4612-8ebe-475cfaf5ddc0",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 6.856765672977934E307,\n    \"matchStatus\" : \"tnrgoroytcafnob0ksch6lhvjbl214cja21rh4ejowd2965pxq8a5wdguhc4z5wldgp2fee0wezwykabknd1sn48roaee8re02gmuabjnvx3sl11nx\",\n    \"id\" : \"ky4d\",\n    \"script\" : \"7gzup69lmv3\"\n  }, {\n    \"score\" : 1.5248910358682221E308,\n    \"matchStatus\" : \"ryu0zqg92qacx3t8swlh6lshsfw380y8m5voaq8xlti67zn7ykhd42\",\n    \"id\" : \"y3j9\",\n    \"script\" : \"94sc7q0gvvztp3p5apo\"\n  }, {\n    \"score\" : 1.124357709132216E308,\n    \"matchStatus\" : \"1as6d3nfplerelzwmyr5lxy1w5m0praovucouizi36b4csn2y9lecvewpfhp7vy0rpx01qga73i66ypgap6m0na5yjtm2kj2g7a5ucnxvsqffqdnxmmdzvsvgajz688jvw1gdbvn4ksx3tofg3g3v2277e2kfedyrro75v8lw5wijyt3v6dh2tjxe0w6ljz04\",\n    \"id\" : \"0d0r\",\n    \"script\" : \"2f3rgktl1r3kbt6lz3kupdyxltswhvletkg0t7ae1sz6bctzbyitrpfj3fku3i8sct3tdej0iz290z0kt40t3zot8obuwb9o2wup2kvf0sws33vjwckqp2kj3hz1kvk7k3n0qp78qv3bm8fohbsoibs9hyph3l541bj7bitf5fpeu\"\n  }, {\n    \"score\" : 1.6617978225732917E308,\n    \"matchStatus\" : \"n21wfvn7sdrju2g4vkyauo2tq256z6eqg7viwv4\",\n    \"id\" : \"p8r6\",\n    \"script\" : \"1bnts9fd1a67doth0j6eyj00ltp7nrzj2ge28ohy2mtexwznbjtrwtzzhr0iigk2wdq56qv49r6dsgbwe6b\"\n  }, {\n    \"score\" : 4.033017991580613E305,\n    \"matchStatus\" : \"p9sdosoesoocn4hv1mn38kkclq7aen2smw99hyvxyffefneqwhfebco5oqk4xcii5gtnzx1aikvwvwxdrvxh04o0jpf3rz2bht20ob1vkj79g5kwhc1puclc2hpf1mg6us\",\n    \"id\" : \"q0i4\",\n    \"script\" : \"2ifohjw72j06795dp7f0i5i8a0vqu3o3qsq4ogdl6hvh5tdxpbbj6tjf45ukjaj4p8h2u1bi3qv7vlphecp9jzp2twsn6gs79v3hqxdg4bro7dfs06lnna6t0xojuwyv0henwv4t24hk3tui1o0lwyp9m6szm15k\"\n  }, {\n    \"score\" : 1.761122658736305E308,\n    \"matchStatus\" : \"axypjy38faq248jxcpvmecefgm30aw5iz7zgeqwkr0q5l1medbdgx6dia4md0n8zpdndsnnp13ialjijgnk\",\n    \"id\" : \"8r2x\",\n    \"script\" : \"aqmoens5fxccy78fqpeb32q20ohhytojnr9kg2p5rbqlx5zrsgnnxlbvkl5idnucw9jp0vn8duhg\"\n  }, {\n    \"score\" : 5.0210043441232783E306,\n    \"matchStatus\" : \"7ewzakzeg6l5ao20195c6j9ao9309e6xj8xuq9v2q3dacbb2uv9r9k3haz4m5alqqc9m1t4sq79pe15ixunllf1gf71wy8l7529c6gwx6feb7rt21hyccj4n7ocjj\",\n    \"id\" : \"8u8x\",\n    \"script\" : \"62ib4qw9qrw3oda7gyvfmokw6f93527geg\"\n  }, {\n    \"score\" : 1.2642156920723952E308,\n    \"matchStatus\" : \"tq9yyv6fhw3kwbdvwpcu2iehx27ziqro4gt0zw18gog6ujrr4z6274khn25n7jryqfiqpc7fr58x7ba09jrw008vg18bgbj40chpudxbq2iebbfk0ktl5yy1n1n2vtlqodmhs50nav80919x8\",\n    \"id\" : \"12od\",\n    \"script\" : \"okw8mftjumzktgy6a04vc4yix8jnj1ieu5s6rdbwrqul72a09ueh99zqecadoa8cucd5gts8xgafz762okitsux0p1dwcojo5hav7dgp99lltn2y8ql6f19o5so\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7f0ba10-9f82-4612-8ebe-475cfaf5ddc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.371272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d8020e0c-520f-4b03-9a45-9fa0b8df7351",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/h47hxy63ftu1kyhtaizqgm35062s4elnh936k/y4nd6zcvhp2l41kmxh6swgzhbcwvku2dmjdcafpk55mv3bpg3/Krysta+Monahan",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d8020e0c-520f-4b03-9a45-9fa0b8df7351",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.370322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    }
  }, {
    "id" : "ec409c58-7fb6-4fd4-8327-d548c9ab48dd",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/c02usvoqrq4yrngkypvel9suqcjf792ckhm7pxuq6fna9urfmg352lr0x2lwpsj5ho210w043oprxuyr0j51mcxz4dxnwe6r64iif7z9lf1uvfr9xy4ca5pra6x6agunfzivrbp10dhh3mas5tlxswrw0f77hhgdmje5w7o3dafy1i9q/gdp0gz47bp4hx0lt8alla268n8tby8fe50ayvz18sw6jc8d6sduycd0cijpcm5pdpta7jqav7ok39fic3mo0fo7ca1xjmfhetvrs52hls0tzpej5ipzd1jz5e5gt7efvrssdchnq49igcbft0imz371izswawbjr2hveyywharuep/Michael+Bosco",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ec409c58-7fb6-4fd4-8327-d548c9ab48dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.370248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    }
  }, {
    "id" : "c47f70db-eb73-4e69-9e2f-b11f1750015d",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/drdxax92wluxwgjdacctwo7bc09lv8bpf3m5u2hl5n6dzixjufofk6sm83tc0h/xhu0i7tls5fgg2p88o00r982u8np5w4xern4ujbd6kuk4fc4cxqd6dejaz6k4om6mf4h776bdc1fzwqwqpnjmlp01bf8guuha9tvil04pumx14wrdbl023f5r1w59rz5xmhk8q1jud0eixh/Harold+Grimes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.2591721195578935E308,\n  \"matchStatus\" : \"0rjzu0rw8gyfoewv2a6qvt0671wjvawghp28k7z9e69o6orvj3vp\",\n  \"id\" : \"z1sn\",\n  \"script\" : \"o6wn0ekd7tjh967ww9uxqm35nf4fswf6its6ln\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c47f70db-eb73-4e69-9e2f-b11f1750015d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.370144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6b8da182-eec2-490f-8c3c-6e4085b84b3b",
    "name" : "Romanize japanese names, based on the name in KANJI - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6b8da182-eec2-490f-8c3c-6e4085b84b3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.369871Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "ac4fac4e-fc71-4f33-aa29-a1545f4d493e",
    "name" : "Romanize japanese names, based on the name in KANJI - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ac4fac4e-fc71-4f33-aa29-a1545f4d493e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.369853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "ed6f1f63-3ee0-4666-83df-94cba88cc9c3",
    "name" : "Romanize japanese names, based on the name in KANJI (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Leoma\",\n    \"lastName\" : \"Leffler\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.376947892991786E308,\n      \"candidateName\" : \"2022-08-16T13:38:09.36881Z\",\n      \"probability\" : 1.7356251039733946E308,\n      \"predScoreFamilyName\" : 6.053223554704001E307\n    }, {\n      \"predScoreGivenName\" : 2.1122424582982174E307,\n      \"candidateName\" : \"2022-06-29T11:11:09.368855Z\",\n      \"probability\" : 8.7507283042771E307,\n      \"predScoreFamilyName\" : 4.2965501877275415E307\n    }, {\n      \"predScoreGivenName\" : 1.7422892314324944E308,\n      \"candidateName\" : \"2022-09-07T13:04:09.368902Z\",\n      \"probability\" : 1.415990720490236E308,\n      \"predScoreFamilyName\" : 1.061360673103536E308\n    }, {\n      \"predScoreGivenName\" : 4.668435945092747E307,\n      \"candidateName\" : \"2022-07-12T11:37:09.368944Z\",\n      \"probability\" : 1.2341591746221092E308,\n      \"predScoreFamilyName\" : 3.6635326267967063E307\n    }, {\n      \"predScoreGivenName\" : 1.178460592755572E308,\n      \"candidateName\" : \"2023-01-30T13:17:09.368988Z\",\n      \"probability\" : 1.2940395438867551E308,\n      \"predScoreFamilyName\" : 6.530003290778764E307\n    }, {\n      \"predScoreGivenName\" : 1.1276619583373843E308,\n      \"candidateName\" : \"2022-08-02T11:26:09.36903Z\",\n      \"probability\" : 6.140241565955698E307,\n      \"predScoreFamilyName\" : 4.656578799106598E307\n    }, {\n      \"predScoreGivenName\" : 1.2327746182198085E308,\n      \"candidateName\" : \"2022-06-04T10:50:09.369097Z\",\n      \"probability\" : 9.314556940325122E307,\n      \"predScoreFamilyName\" : 9.86149930832955E307\n    } ],\n    \"orderOption\" : \"g5g8o8gbjiy29rihjrwq\",\n    \"id\" : \"0rc1\",\n    \"script\" : \"nmhmwmrixbkvsiytodsizmzi0wz246bwma6hpaihvpejbggp315jdm5xorogjmodeb099j0xnbelniz0thxn8fus0kl7xb37czfm0w3ykvxmggnen9cz54ge5ayyi2cm6gzhojqakry4ttof0xbik1w01c0t9mlu2oql3wpc22alz\"\n  }, {\n    \"firstName\" : \"Rudy\",\n    \"lastName\" : \"Windler\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.987482444226243E307,\n      \"candidateName\" : \"2022-11-06T12:06:09.369301Z\",\n      \"probability\" : 8.905094794507724E307,\n      \"predScoreFamilyName\" : 2.926704433534665E306\n    }, {\n      \"predScoreGivenName\" : 3.7430665667299614E307,\n      \"candidateName\" : \"2022-09-15T11:11:09.369342Z\",\n      \"probability\" : 6.356705804780716E307,\n      \"predScoreFamilyName\" : 5.961318137868316E307\n    }, {\n      \"predScoreGivenName\" : 1.4665055609554025E308,\n      \"candidateName\" : \"2022-09-11T10:52:09.369381Z\",\n      \"probability\" : 1.0834411701977404E307,\n      \"predScoreFamilyName\" : 2.7030856559451848E306\n    }, {\n      \"predScoreGivenName\" : 1.4388145119709156E308,\n      \"candidateName\" : \"2022-07-11T12:57:09.369423Z\",\n      \"probability\" : 3.3909748033219827E307,\n      \"predScoreFamilyName\" : 4.2786840428249527E307\n    }, {\n      \"predScoreGivenName\" : 1.5989466658366132E308,\n      \"candidateName\" : \"2022-04-02T14:16:09.369464Z\",\n      \"probability\" : 1.7634135519319607E308,\n      \"predScoreFamilyName\" : 3.2257645794359886E307\n    }, {\n      \"predScoreGivenName\" : 4.4076137437020443E307,\n      \"candidateName\" : \"2022-05-28T12:53:09.369506Z\",\n      \"probability\" : 1.6547694561045361E308,\n      \"predScoreFamilyName\" : 9.870295544969E307\n    }, {\n      \"predScoreGivenName\" : 1.0633303351129314E308,\n      \"candidateName\" : \"2022-03-09T10:51:09.369546Z\",\n      \"probability\" : 3.521115670097698E305,\n      \"predScoreFamilyName\" : 1.4391853900031331E308\n    }, {\n      \"predScoreGivenName\" : 1.1240832756760656E308,\n      \"candidateName\" : \"2022-06-25T14:13:09.369587Z\",\n      \"probability\" : 1.7377164640511374E308,\n      \"predScoreFamilyName\" : 1.6598670824851587E308\n    } ],\n    \"orderOption\" : \"rgpumnsunex25193k3hsvl501g7rz7p3eoolui6piisnpulgmqr5oqojk9ucbh7htnjdkac7now1apzx3lkgn9tl7yj4n\",\n    \"id\" : \"ix6m\",\n    \"script\" : \"l0vzvibhnyrk12lmjq8ccauszhtbgntzb8uo2gt03vhdmew6tkdmu86k9gz5bneond0o1bp1lmw5d4vinajgidj9gsjteosc0jevbg36pn7t5d6qoyyo0joirkienyniufgcprwmovzchxzb9y0bng15yhgk0lr1ywezcv3dl54z2vv7oua8thf5uh\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed6f1f63-3ee0-4666-83df-94cba88cc9c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.369818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8ea4fb31-cfa5-4852-9cbe-2f4f38e33c72",
    "name" : "Romanize japanese name, based on the name in Kanji. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/xtdfcl4wifhm5cecuovu429t8hog04d3osmco98onfelpobj3jehwr7ik3v4eyktokn1e0rsggj2s79xstyn2yu92tond3vlbhvon3vfwn1h4yt09awf8uzd1abv6qwk7mjffhbp3gz/qbietjyvth4lzz717979vc6bqon10jpuc4jitk1ktwimtsvv2llw0uzweisgy1pgmwe1o78heib679d1b1ns67eih8qa81pk4mwbxkgqo2324d8g759lgq8mvkmqstgja548o4cmj16r",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8ea4fb31-cfa5-4852-9cbe-2f4f38e33c72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.368683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    }
  }, {
    "id" : "3eedb07d-aef7-4652-afb1-e478cf238c61",
    "name" : "Romanize japanese name, based on the name in Kanji. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/do6rp8fp2b0wdgt9t3o8n6eodb5r2t94dw3armcysxdw2zon9u7zqsslju4yppe8deh29x27ypcfzb4y50dqjgekilz6mtfwfd/1kfp2ae5yx8w2b1ed9yzp7f2fegqh4l0a618h0vz602ejxcoqjue1gajqn6go5hqphknyhvkez9s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3eedb07d-aef7-4652-afb1-e478cf238c61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.368635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    }
  }, {
    "id" : "7ccd7ad7-d095-4856-9059-c7c25e10639c",
    "name" : "Romanize japanese name, based on the name in Kanji. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/5xm6lnnvk0lgjntytbj1hfxuag8c11dfcx8hs2k8l5n4qvde6flnrtc8jjxew3mqxiuymctr74kcmjdkxinxn94h6jwa6vmdz46ide9gxxm97sulmfyh1myqsm5g0hpxwudqz79ejgvlll3h0ka5p0wzs20kcqd10i6pa7siml06cfkc436jncsr3hgifl/txkmvh01one2njp08tbqw8iato2e7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Tomasa\",\n  \"lastName\" : \"Paucek\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.4677593573109304E308,\n    \"candidateName\" : \"2022-06-07T11:16:09.367899Z\",\n    \"probability\" : 4.535122138248989E307,\n    \"predScoreFamilyName\" : 8.816266646788961E307\n  }, {\n    \"predScoreGivenName\" : 1.4449035211333842E308,\n    \"candidateName\" : \"2022-11-07T12:08:09.367947Z\",\n    \"probability\" : 6.789084931979531E307,\n    \"predScoreFamilyName\" : 1.4137470980435326E308\n  }, {\n    \"predScoreGivenName\" : 1.5908236267598255E308,\n    \"candidateName\" : \"2022-11-09T10:46:09.367985Z\",\n    \"probability\" : 1.6937289478710582E308,\n    \"predScoreFamilyName\" : 1.311681445731391E308\n  }, {\n    \"predScoreGivenName\" : 3.193157033514258E307,\n    \"candidateName\" : \"2022-10-08T12:14:09.368027Z\",\n    \"probability\" : 7.479365866358676E306,\n    \"predScoreFamilyName\" : 8.192719324272535E307\n  }, {\n    \"predScoreGivenName\" : 1.4777676410732182E308,\n    \"candidateName\" : \"2022-07-11T11:58:09.368109Z\",\n    \"probability\" : 9.089742504223727E307,\n    \"predScoreFamilyName\" : 3.4479079484724416E307\n  }, {\n    \"predScoreGivenName\" : 8.217649319399388E307,\n    \"candidateName\" : \"2022-12-31T13:34:09.36815Z\",\n    \"probability\" : 1.2624475476424853E308,\n    \"predScoreFamilyName\" : 1.482802380583358E308\n  }, {\n    \"predScoreGivenName\" : 9.838879273563543E307,\n    \"candidateName\" : \"2022-12-13T11:40:09.368211Z\",\n    \"probability\" : 5.342532255280795E307,\n    \"predScoreFamilyName\" : 3.9344039611841075E307\n  }, {\n    \"predScoreGivenName\" : 2.1706208190471897E307,\n    \"candidateName\" : \"2022-11-29T10:36:09.368251Z\",\n    \"probability\" : 2.1499117463458573E307,\n    \"predScoreFamilyName\" : 6.34511894580622E307\n  } ],\n  \"orderOption\" : \"45q0652e92s3me1sycz0nf946omym9a\",\n  \"id\" : \"5632\",\n  \"script\" : \"t5qmrrppeae0s9uxkyl95zdxqc62k5g83n59e9uq0jkoefsxfyhwbv2vb0kiyhdx31br8ng7umfdyepxqnmfl2vmfyx514n523oobiwz9irysrle2r80yyf0h80993i7p5x5nqivb2z3lpovop1enqor5llo52\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ccd7ad7-d095-4856-9059-c7c25e10639c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.368566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "02743ac9-6a71-4bd0-bf4e-9686ebed9ab6",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "02743ac9-6a71-4bd0-bf4e-9686ebed9ab6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.367752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "d3539861-09f1-4b3a-a70d-c0d285f3642c",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d3539861-09f1-4b3a-a70d-c0d285f3642c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.367733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "266084b9-d290-4163-8c36-3ad86b80b5bf",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Zaida\",\n    \"lastName\" : \"Fisher\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.325284461070693E308,\n      \"candidateName\" : \"2022-09-26T13:15:09.364521Z\",\n      \"probability\" : 3.04952715728971E307,\n      \"predScoreFamilyName\" : 1.4449455656496076E308\n    }, {\n      \"predScoreGivenName\" : 1.7574915428959541E308,\n      \"candidateName\" : \"2022-09-09T12:09:09.364564Z\",\n      \"probability\" : 7.947082020078622E307,\n      \"predScoreFamilyName\" : 6.176024973474239E307\n    }, {\n      \"predScoreGivenName\" : 6.273682141035472E307,\n      \"candidateName\" : \"2022-09-17T11:08:09.364605Z\",\n      \"probability\" : 1.2094685836963398E308,\n      \"predScoreFamilyName\" : 1.3726024427930414E306\n    }, {\n      \"predScoreGivenName\" : 1.2482494756730346E308,\n      \"candidateName\" : \"2023-02-26T13:22:09.364647Z\",\n      \"probability\" : 1.7266695676564213E308,\n      \"predScoreFamilyName\" : 4.0536449858460924E306\n    }, {\n      \"predScoreGivenName\" : 1.5449589465759837E307,\n      \"candidateName\" : \"2022-04-21T13:55:09.364687Z\",\n      \"probability\" : 2.3995157434208874E307,\n      \"predScoreFamilyName\" : 1.580524848082776E308\n    } ],\n    \"orderOption\" : \"5nx90y4n745rw7kfa1lskf7e14b4kz0m6p13zd61ydrd1hddtkv4i32cjqqbuihwndlqghnbps6r92n0t5j28pygdgn955geplalojebd\",\n    \"id\" : \"xfv0\",\n    \"script\" : \"p0c3abi37vwfewgge866v2dpn5c4q673vywp8a1g1m4701b14z9or16m25zdye6i9v5fk9d57wml5q6t3rxowl9604atuijc7kj2pkokpj4hxxnfzx\"\n  }, {\n    \"firstName\" : \"Brooke\",\n    \"lastName\" : \"Thiel\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.511504061489295E307,\n      \"candidateName\" : \"2022-11-19T14:11:09.364937Z\",\n      \"probability\" : 1.0635242146725662E307,\n      \"predScoreFamilyName\" : 6.741815787613299E307\n    }, {\n      \"predScoreGivenName\" : 8.779312634581609E306,\n      \"candidateName\" : \"2022-06-12T11:04:09.36498Z\",\n      \"probability\" : 1.5079082774344288E308,\n      \"predScoreFamilyName\" : 1.694897803411217E308\n    }, {\n      \"predScoreGivenName\" : 2.474466941955575E307,\n      \"candidateName\" : \"2022-11-28T10:45:09.365023Z\",\n      \"probability\" : 1.5758303964775393E308,\n      \"predScoreFamilyName\" : 1.184207286174736E308\n    } ],\n    \"orderOption\" : \"xcydnqa49782ywerm7ygdaw9vwihzvdf2fycjtcpg4mfg124457lh9cb3h5s0zn0lo2gucu6m7sn1fiilm2f8q18o0vjmif5uvcjndkwja63pcrnm0hw8u4h2c686k62kc2tnplgyk8ap6cqbm2z8tkcgp4frnv3go2dp798xhax8xu64g4lt6meg7nz11\",\n    \"id\" : \"wxj7\",\n    \"script\" : \"pj5mulgkzpjmzkttgozpdecmte4hm8lu9g43vlqmoyr5op8ruidavwqsxrznli43ajmum24u8367oggvtzsp11dm2lkj8n97yg08z76bfvut8x05ft97nsyevzzbth5kf8w4zy7c4qdazkwpk3qq12gql4oqf9ngm\"\n  }, {\n    \"firstName\" : \"Jarrett\",\n    \"lastName\" : \"Beier\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.6521302310132244E308,\n      \"candidateName\" : \"2022-08-14T10:26:09.365219Z\",\n      \"probability\" : 1.2165424133199048E307,\n      \"predScoreFamilyName\" : 1.5683463714040435E308\n    }, {\n      \"predScoreGivenName\" : 9.637954364561335E307,\n      \"candidateName\" : \"2022-05-22T10:34:09.365259Z\",\n      \"probability\" : 7.710718270208249E307,\n      \"predScoreFamilyName\" : 1.6422843618998125E308\n    }, {\n      \"predScoreGivenName\" : 1.5287542689664553E308,\n      \"candidateName\" : \"2022-05-13T11:46:09.365299Z\",\n      \"probability\" : 7.491363666182114E307,\n      \"predScoreFamilyName\" : 9.224829698709643E307\n    }, {\n      \"predScoreGivenName\" : 2.7485474461509697E306,\n      \"candidateName\" : \"2022-08-22T11:46:09.365342Z\",\n      \"probability\" : 1.643490354348878E308,\n      \"predScoreFamilyName\" : 7.50538716172139E306\n    }, {\n      \"predScoreGivenName\" : 8.293856763079285E307,\n      \"candidateName\" : \"2022-09-12T10:25:09.365382Z\",\n      \"probability\" : 1.567719070157697E307,\n      \"predScoreFamilyName\" : 1.4489255364971593E308\n    }, {\n      \"predScoreGivenName\" : 5.64905060300909E307,\n      \"candidateName\" : \"2022-07-04T13:35:09.365425Z\",\n      \"probability\" : 3.727083566401342E307,\n      \"predScoreFamilyName\" : 1.6227253083841615E308\n    }, {\n      \"predScoreGivenName\" : 2.4101281565646977E307,\n      \"candidateName\" : \"2022-12-12T12:24:09.365464Z\",\n      \"probability\" : 1.462557922297977E308,\n      \"predScoreFamilyName\" : 1.5745399008064001E308\n    }, {\n      \"predScoreGivenName\" : 6.706036683309986E307,\n      \"candidateName\" : \"2022-08-13T11:52:09.365506Z\",\n      \"probability\" : 1.5175205108335783E308,\n      \"predScoreFamilyName\" : 9.699212553063655E307\n    } ],\n    \"orderOption\" : \"tjtar1w7rxvroh50skvzh8cplvvgniijbdp7ycf6wgtpv22aplz1xn51bxzwf\",\n    \"id\" : \"77r3\",\n    \"script\" : \"6atpr4zacebkjb30nrlayes570corce4r3quwf8eb9muxoscmatxjqqn6vxlxcoly36nhhzyyxvgv\"\n  }, {\n    \"firstName\" : \"Lemuel\",\n    \"lastName\" : \"Crona\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.626954515562233E307,\n      \"candidateName\" : \"2023-03-02T12:03:09.365713Z\",\n      \"probability\" : 1.7790665972841346E308,\n      \"predScoreFamilyName\" : 3.8357405033090043E307\n    }, {\n      \"predScoreGivenName\" : 7.69040790242521E307,\n      \"candidateName\" : \"2023-01-17T13:55:09.365756Z\",\n      \"probability\" : 1.3657987261311082E308,\n      \"predScoreFamilyName\" : 5.061837589946557E307\n    }, {\n      \"predScoreGivenName\" : 1.195949085316658E308,\n      \"candidateName\" : \"2022-03-25T13:02:09.365822Z\",\n      \"probability\" : 1.4582648983078524E308,\n      \"predScoreFamilyName\" : 2.652250849920046E307\n    }, {\n      \"predScoreGivenName\" : 4.757245847750723E307,\n      \"candidateName\" : \"2022-12-10T11:01:09.365881Z\",\n      \"probability\" : 3.7961010450484796E307,\n      \"predScoreFamilyName\" : 2.5068970496718555E307\n    }, {\n      \"predScoreGivenName\" : 1.139840994317083E308,\n      \"candidateName\" : \"2022-05-25T11:38:09.365932Z\",\n      \"probability\" : 1.4821501242092165E308,\n      \"predScoreFamilyName\" : 1.5016469146742121E308\n    } ],\n    \"orderOption\" : \"8ng3pa2bigsj2wlvjt9iezasq6n4g3xp51vtbt22eb6l0pdc1xmfpwfcgl0lrpvaslbvs55wflndl5emci7w185l4jexkvqmf0fjpmrln647g2a8c857vnsn1p5p4lk7p143xgol3j3mf5qepu39zdz25me4bfrvyd4z5b3xovebaj50bki9kdbjbr0n8wgl7\",\n    \"id\" : \"17an\",\n    \"script\" : \"8pyih7st2juushmv55\"\n  }, {\n    \"firstName\" : \"Glenn\",\n    \"lastName\" : \"Johnson\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.3103594382898902E308,\n      \"candidateName\" : \"2023-01-17T11:58:09.366161Z\",\n      \"probability\" : 1.7957235241844258E308,\n      \"predScoreFamilyName\" : 2.1674587922094466E307\n    }, {\n      \"predScoreGivenName\" : 6.99592209831639E307,\n      \"candidateName\" : \"2023-01-22T14:00:09.366202Z\",\n      \"probability\" : 1.5050938249535297E307,\n      \"predScoreFamilyName\" : 8.64310643032195E307\n    }, {\n      \"predScoreGivenName\" : 2.2424131680892053E307,\n      \"candidateName\" : \"2022-06-22T11:04:09.366296Z\",\n      \"probability\" : 1.7231016112876602E308,\n      \"predScoreFamilyName\" : 1.1529531482395323E308\n    } ],\n    \"orderOption\" : \"qthfx92v5on8intic34jonp22b82np5qtwa919yndgxegjdb7khhua8twm9xd27mqlwle1ftbry37picn7ugbnro4e05yhwtpydro0\",\n    \"id\" : \"7824\",\n    \"script\" : \"t6o3zdvqi6pao1fymssg87lsssl3qptk3vjbn8wbahkq62iw78xw7svjx6xv148pbufoaghdcnawgau1bj6gblwmyxhs8uyn0fd\"\n  }, {\n    \"firstName\" : \"Leisha\",\n    \"lastName\" : \"Bernier\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.662133672038048E307,\n      \"candidateName\" : \"2022-10-12T12:38:09.366575Z\",\n      \"probability\" : 1.0865209779062387E307,\n      \"predScoreFamilyName\" : 2.6516255846614077E307\n    }, {\n      \"predScoreGivenName\" : 1.1819261302622997E308,\n      \"candidateName\" : \"2022-06-16T14:17:09.366631Z\",\n      \"probability\" : 9.16871477246267E307,\n      \"predScoreFamilyName\" : 5.279680755795463E307\n    }, {\n      \"predScoreGivenName\" : 2.4312001088914947E307,\n      \"candidateName\" : \"2022-04-25T12:10:09.366674Z\",\n      \"probability\" : 8.021013337653399E307,\n      \"predScoreFamilyName\" : 1.0792764756090828E308\n    }, {\n      \"predScoreGivenName\" : 1.7955769230080377E308,\n      \"candidateName\" : \"2022-09-12T12:30:09.366722Z\",\n      \"probability\" : 1.3830636160037002E307,\n      \"predScoreFamilyName\" : 1.0949454487756414E308\n    } ],\n    \"orderOption\" : \"tfmt4gzp4ahqgrn27odzg7nq8bzxdqkqv5mpbnymzctrstphjxt3nuur12w66enzuib0ijmorx4hycqy1jwposqo1rqlm5vot1h5m4lkdiiqip25tlrbkh9cl24ejl3qsgpqr2m5vz2k4ph7sspnr1cvcij5nalpjwj1ptscfsods3mb9k3bl5bymcmezy\",\n    \"id\" : \"23q5\",\n    \"script\" : \"x1hhpxpgbmmfkk1ynwdhehtxvc64ia6r04gfxe0u4ek\"\n  }, {\n    \"firstName\" : \"Man\",\n    \"lastName\" : \"Bogisich\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0454878345698008E308,\n      \"candidateName\" : \"2022-08-04T11:49:09.366984Z\",\n      \"probability\" : 8.011385700692136E307,\n      \"predScoreFamilyName\" : 1.022457815572878E308\n    }, {\n      \"predScoreGivenName\" : 1.7647121390754418E308,\n      \"candidateName\" : \"2022-08-25T14:11:09.36703Z\",\n      \"probability\" : 1.1261930397174839E308,\n      \"predScoreFamilyName\" : 4.853982696253848E307\n    }, {\n      \"predScoreGivenName\" : 8.888029382426971E307,\n      \"candidateName\" : \"2022-05-02T11:43:09.367081Z\",\n      \"probability\" : 5.509363186593621E307,\n      \"predScoreFamilyName\" : 4.1894123407270956E307\n    }, {\n      \"predScoreGivenName\" : 2.1112118601946895E307,\n      \"candidateName\" : \"2022-09-24T12:38:09.367126Z\",\n      \"probability\" : 7.006532048611849E306,\n      \"predScoreFamilyName\" : 3.8564333517976863E307\n    }, {\n      \"predScoreGivenName\" : 1.326834274674036E308,\n      \"candidateName\" : \"2023-01-04T12:20:09.367186Z\",\n      \"probability\" : 6.158487264749949E307,\n      \"predScoreFamilyName\" : 3.975493455662016E307\n    } ],\n    \"orderOption\" : \"ix4wjtwz6xpm41fdtu2j\",\n    \"id\" : \"hgl3\",\n    \"script\" : \"a9e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "266084b9-d290-4163-8c36-3ad86b80b5bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.367672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ee576c66-5c93-4f2f-bebb-461ceec37f91",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/r4ax4pxo8l0zf8c6dbj0dcm3skyyyr0825n3hz97gg5mz8k1uspozwrb7p6df6xbrq3edhxxnxkmunsg4zokuh3076ok9r64qtqbsu1v1fz51rycq91qqnc/ka1bhq7nca4rzm6d5z4q4x2s63acor2x0jndluzlh9rx7sejfp60ntg1zz0n5z0ecvqwkcd2rbvqmzn7e0xu6302b886ru44ntse0u6pdcwh8u2ny73sht7jpzbfvql7u2pdb2t/Female",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ee576c66-5c93-4f2f-bebb-461ceec37f91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.364411Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    }
  }, {
    "id" : "373cf9ba-a8b8-44a9-8b80-73de5e7e568a",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/cwsn40c9mppb1qhehr1nnmfe1g1toyfd0wypwvd/z4ez79o3r77be83xxf68grjcdiafhyuotfhbnqvvbk141slmd/Agender",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "373cf9ba-a8b8-44a9-8b80-73de5e7e568a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.364356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    }
  }, {
    "id" : "8aa2b0d3-4fd0-43df-9218-2ab8703a610a",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/fyw6f/cxe381l4a144uoittkoalw70bhk/Agender",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Estella\",\n  \"lastName\" : \"Kulas\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.5714713537889461E308,\n    \"candidateName\" : \"2022-06-19T10:36:09.363957Z\",\n    \"probability\" : 1.2083567208370525E308,\n    \"predScoreFamilyName\" : 1.1550036801056015E308\n  }, {\n    \"predScoreGivenName\" : 9.776174840370156E307,\n    \"candidateName\" : \"2022-12-06T14:16:09.363999Z\",\n    \"probability\" : 1.4799796375944512E308,\n    \"predScoreFamilyName\" : 1.000220252270489E308\n  }, {\n    \"predScoreGivenName\" : 1.639101324427541E308,\n    \"candidateName\" : \"2023-02-20T11:34:09.364042Z\",\n    \"probability\" : 1.0347508424054298E308,\n    \"predScoreFamilyName\" : 3.329491349066888E307\n  } ],\n  \"orderOption\" : \"9f67itkoptjeqjtcu2c8ji0w12lv65azcw09gxxqwmweiwti9giw2x6nrkvwgcvdqknk58n7n1r8f2wktww2nwq7xs98hl0g9tobv1z7gxw\",\n  \"id\" : \"8114\",\n  \"script\" : \"fshpy0ct33png7zhi80fnmzq7fnzw2ryika5hd72ir53908dwabsp075t3yhli623ctc39gg9k0paslretj57yvq16a93g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8aa2b0d3-4fd0-43df-9218-2ab8703a610a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.364285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5f4f7d96-1f67-42a8-b7ec-18c4ccc115b5",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/puzdg6b6jerk4x850sf17cp7smch4zatytdit7se9921gzt818ml44gv6mr63d8wxe37bioq8nawuxqwcj0vw0p8/vitj22vtvour2u0giab1jtrnz589plv8zyd8a1tiwzb94gr6dz3c5fdco8pithrhmbyajychavus6aso2zrpypearqz0crvptn1wxihr99bki48uhhlx98sxeg5k22o6orw76pfsonry82zwt9ioqr8tflic0it538geoa3sgrcharwqffnci3x",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5f4f7d96-1f67-42a8-b7ec-18c4ccc115b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.363855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    }
  }, {
    "id" : "03f53f1a-c9da-4f47-8573-37aff28585c7",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/rlbf3eiv1c7c5eucd8a5vtevlgnjhfvg1pow4r3x/hep3vue8houafahx6x8f16l1afvyzn7n0zk3995itz56noipe4eywdeas653ow9l243hr91bzbkg0pnmxcugmo2x2w5wie6",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "03f53f1a-c9da-4f47-8573-37aff28585c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.363813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    }
  }, {
    "id" : "1f0dc08e-8dde-4acb-8d6d-69f99135a593",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/hye8zps0qubtkbe6ftagk4mreepvhrsjvcd7ppixnlvnp2f81z3hifd6wk/rdptibncu5zdaxq4lp620x38z2r3a6bw8wiyr3g3gbvz28e5xcqt8ndihh39qphax2ikx4xljog3wsnyh24m0rqxqxa7rru23pr",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Oralia\",\n  \"lastName\" : \"Turner\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 9.776242177366931E307,\n    \"candidateName\" : \"2023-02-15T12:28:09.363239Z\",\n    \"probability\" : 1.4947549511004568E308,\n    \"predScoreFamilyName\" : 8.31963302099059E307\n  }, {\n    \"predScoreGivenName\" : 1.3844573386564775E308,\n    \"candidateName\" : \"2022-03-19T14:08:09.363282Z\",\n    \"probability\" : 1.0244569084208427E308,\n    \"predScoreFamilyName\" : 9.605155450487856E307\n  }, {\n    \"predScoreGivenName\" : 8.562201967664523E307,\n    \"candidateName\" : \"2022-08-03T13:34:09.363321Z\",\n    \"probability\" : 1.2600862487528702E308,\n    \"predScoreFamilyName\" : 4.09362226557109E307\n  }, {\n    \"predScoreGivenName\" : 1.5919554353950338E308,\n    \"candidateName\" : \"2022-05-11T12:36:09.363361Z\",\n    \"probability\" : 1.1994659020893224E308,\n    \"predScoreFamilyName\" : 1.175845940263349E308\n  }, {\n    \"predScoreGivenName\" : 1.4559158990183262E308,\n    \"candidateName\" : \"2022-11-17T11:28:09.363402Z\",\n    \"probability\" : 1.1036755254242332E308,\n    \"predScoreFamilyName\" : 1.3734543543123087E308\n  }, {\n    \"predScoreGivenName\" : 1.0943723628964565E308,\n    \"candidateName\" : \"2023-01-07T13:45:09.36344Z\",\n    \"probability\" : 8.019966341338984E307,\n    \"predScoreFamilyName\" : 3.651358484220208E307\n  }, {\n    \"predScoreGivenName\" : 9.455919067013391E307,\n    \"candidateName\" : \"2022-03-10T14:07:09.363485Z\",\n    \"probability\" : 1.426544916433588E308,\n    \"predScoreFamilyName\" : 1.1590329235288815E308\n  } ],\n  \"orderOption\" : \"dnt9nm370rgv1hr2sbfulnfx8szzljfgyidj9q1zkblhq67r0fr4ts5wh350ccfz3v2zc9dzelshpkplbt2qhvwi59vc4jhx1xpktlg72hioqekgaju0owkpmoeqo99pk0qre36bwc8dm1lg2gu0y61ymrbc9aylw4m7iumq8s4\",\n  \"id\" : \"m0fe\",\n  \"script\" : \"xu4yaovg93wlvtey4g7e1k7jx7uxdfp5p09kzka67nr2gnwgh52u0yysxxo2tyvlaoqrqon7m085kj7yeeblkzhq2hy0u5tbg0xzjrxs10sbwyi93ojjof4e3r7udw8roi442udomccaines7wio7zdg5yc14kjr9rkyvvit50zwn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f0dc08e-8dde-4acb-8d6d-69f99135a593",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.363752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6a77381e-b2c3-4cef-ad85-3a4faa486ec4",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6a77381e-b2c3-4cef-ad85-3a4faa486ec4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.363131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "485ed212-cefb-4e1e-8585-009b26da2391",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "485ed212-cefb-4e1e-8585-009b26da2391",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.363112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "dc926782-a193-4c90-a59e-edb4e566db98",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Kazuko\",\n    \"lastName\" : \"Reynolds\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0719358815651177E308,\n      \"candidateName\" : \"2022-07-25T11:38:09.359837Z\",\n      \"probability\" : 8.915815211233652E307,\n      \"predScoreFamilyName\" : 7.047979059610466E307\n    }, {\n      \"predScoreGivenName\" : 6.347253222823702E307,\n      \"candidateName\" : \"2023-01-08T10:36:09.359916Z\",\n      \"probability\" : 1.0011931258944997E308,\n      \"predScoreFamilyName\" : 1.0573267109811853E308\n    }, {\n      \"predScoreGivenName\" : 7.145368405033859E307,\n      \"candidateName\" : \"2022-09-02T10:58:09.359961Z\",\n      \"probability\" : 3.26661941249528E307,\n      \"predScoreFamilyName\" : 4.703487416865129E307\n    }, {\n      \"predScoreGivenName\" : 6.906870119221413E307,\n      \"candidateName\" : \"2023-01-23T13:13:09.360001Z\",\n      \"probability\" : 1.5834615908517468E308,\n      \"predScoreFamilyName\" : 1.0522206090613185E308\n    }, {\n      \"predScoreGivenName\" : 1.3441547931037792E308,\n      \"candidateName\" : \"2022-08-24T13:19:09.360043Z\",\n      \"probability\" : 3.1376332919858916E306,\n      \"predScoreFamilyName\" : 1.336113060188546E308\n    }, {\n      \"predScoreGivenName\" : 1.2773205042116797E308,\n      \"candidateName\" : \"2022-10-12T13:32:09.360086Z\",\n      \"probability\" : 6.551564738676607E307,\n      \"predScoreFamilyName\" : 1.5451266038426959E308\n    }, {\n      \"predScoreGivenName\" : 1.4485359983941685E308,\n      \"candidateName\" : \"2023-01-27T14:09:09.360126Z\",\n      \"probability\" : 4.0753298832626357E307,\n      \"predScoreFamilyName\" : 1.032325934980507E308\n    } ],\n    \"orderOption\" : \"q4jaxgtmr849lt138xp4nnvj76u3s1a6j1o5g0fvb2lbw7n0cjqjvivbo5aeozs4vhihw3y9vztnixeg6inpogqr4e7k9fd3z8uiej5j017ha8axd3bt0ya\",\n    \"id\" : \"2m55\",\n    \"script\" : \"bjyv3n5dsg1fg2sz44qq1istvbt49otf2mzsuaixko1f8jbgiqfitulofs9eejt5c19ogf0n43mnk91jtme3zt8yo7oqins7lvqw2yqv43w8kvr687nq6165otrknn3mgc47vbodc3wdtbc3kp2aq3eb580dwwi3mghd3xr9jv4ittuwa0jfj6pps6cci\"\n  }, {\n    \"firstName\" : \"Aracelis\",\n    \"lastName\" : \"Bartoletti\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.59773953331776E307,\n      \"candidateName\" : \"2023-02-07T11:02:09.360343Z\",\n      \"probability\" : 1.1426476687689505E307,\n      \"predScoreFamilyName\" : 4.813517416162321E307\n    }, {\n      \"predScoreGivenName\" : 7.873689328471081E306,\n      \"candidateName\" : \"2022-05-07T14:09:09.360383Z\",\n      \"probability\" : 8.462369435579727E307,\n      \"predScoreFamilyName\" : 1.5451665757030634E308\n    }, {\n      \"predScoreGivenName\" : 1.6171169395577972E308,\n      \"candidateName\" : \"2022-08-06T10:26:09.360423Z\",\n      \"probability\" : 3.917796478706125E307,\n      \"predScoreFamilyName\" : 1.530652877811309E308\n    }, {\n      \"predScoreGivenName\" : 2.0987173127415205E307,\n      \"candidateName\" : \"2023-02-07T13:57:09.360464Z\",\n      \"probability\" : 1.1570192553438358E308,\n      \"predScoreFamilyName\" : 1.3674930452223562E308\n    }, {\n      \"predScoreGivenName\" : 1.473644842621622E308,\n      \"candidateName\" : \"2022-12-31T11:45:09.360504Z\",\n      \"probability\" : 1.4958486938742783E308,\n      \"predScoreFamilyName\" : 7.356851930770352E307\n    }, {\n      \"predScoreGivenName\" : 3.2537578218993856E307,\n      \"candidateName\" : \"2023-02-22T11:37:09.360543Z\",\n      \"probability\" : 6.625896487312164E307,\n      \"predScoreFamilyName\" : 1.782487034815055E308\n    }, {\n      \"predScoreGivenName\" : 1.3570136246517694E308,\n      \"candidateName\" : \"2022-11-26T11:52:09.360583Z\",\n      \"probability\" : 7.083756812284196E307,\n      \"predScoreFamilyName\" : 9.17462037080648E307\n    }, {\n      \"predScoreGivenName\" : 1.601949105133291E308,\n      \"candidateName\" : \"2022-08-09T14:17:09.360624Z\",\n      \"probability\" : 8.412042141574057E307,\n      \"predScoreFamilyName\" : 1.5596964344150542E308\n    } ],\n    \"orderOption\" : \"z2fifqn5w5h4dmoyajwdzqotrbj61bekqdd3abtkq4xo7tz34vubeo23s9kbzkrn8itwaifn0q99i2pscb1dzp9a09vfgybciifat2wkh4b1ptaxo3ghdw0bh676vbkm6lgl3azcbp5ut\",\n    \"id\" : \"pz6h\",\n    \"script\" : \"jyv4y3zs4ny03cavbwlb9tdg1ykweg\"\n  }, {\n    \"firstName\" : \"MMMMi\",\n    \"lastName\" : \"Brakus\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.473139717658991E307,\n      \"candidateName\" : \"2022-04-01T13:29:09.36082Z\",\n      \"probability\" : 1.0072859489684577E307,\n      \"predScoreFamilyName\" : 1.3209012487801595E308\n    }, {\n      \"predScoreGivenName\" : 1.7195864364074753E307,\n      \"candidateName\" : \"2023-01-20T13:36:09.36086Z\",\n      \"probability\" : 8.309208074702998E307,\n      \"predScoreFamilyName\" : 1.1054561122449915E308\n    }, {\n      \"predScoreGivenName\" : 1.400722143638497E307,\n      \"candidateName\" : \"2022-05-22T11:19:09.360902Z\",\n      \"probability\" : 3.8276255028898443E307,\n      \"predScoreFamilyName\" : 6.995276635720044E307\n    }, {\n      \"predScoreGivenName\" : 9.909869910065354E307,\n      \"candidateName\" : \"2022-12-15T13:49:09.360942Z\",\n      \"probability\" : 1.548744821167587E308,\n      \"predScoreFamilyName\" : 6.088519689188283E307\n    }, {\n      \"predScoreGivenName\" : 1.7890428976533505E308,\n      \"candidateName\" : \"2022-11-18T13:55:09.360983Z\",\n      \"probability\" : 1.7334696510535296E308,\n      \"predScoreFamilyName\" : 4.855784085539626E307\n    } ],\n    \"orderOption\" : \"i50o\",\n    \"id\" : \"1905\",\n    \"script\" : \"hwcrme5kf5s4239s4cc65tix6vfyt99ftgm0gdzc6431xo307urnd0jtdbpu6sqow10m7kawuq881y7cobhs74azyj22ejalfcvfdj65ueiyyl1aqol9bngc2hifxsbthcehbigyq1yzf2p9dl8y40teg7z5qx892ix256yzrb8vyzbulayjbn24sp24r4oo2i\"\n  }, {\n    \"firstName\" : \"Eugene\",\n    \"lastName\" : \"Rogahn\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.3537604996168926E308,\n      \"candidateName\" : \"2022-07-13T10:41:09.361176Z\",\n      \"probability\" : 1.2042669696940954E308,\n      \"predScoreFamilyName\" : 1.0822884868719483E308\n    }, {\n      \"predScoreGivenName\" : 1.669124126859883E308,\n      \"candidateName\" : \"2022-05-18T12:17:09.361217Z\",\n      \"probability\" : 6.908313572332721E307,\n      \"predScoreFamilyName\" : 1.0990976386330676E308\n    }, {\n      \"predScoreGivenName\" : 1.8982089679275225E307,\n      \"candidateName\" : \"2022-06-24T13:46:09.361264Z\",\n      \"probability\" : 6.426108889727279E307,\n      \"predScoreFamilyName\" : 1.860131003137631E307\n    } ],\n    \"orderOption\" : \"vp1qxz31vhyq40zlymg874esrtgvnfjg8pn1dbqnzla3l1bv5cxzvsnp34xk16qd67bdyilc682ma\",\n    \"id\" : \"5nu1\",\n    \"script\" : \"inzkw5dfllv5cw5qcltj1uv6q0wrql9edi6q3ipbj2tly3b262wju6nvc1r0y5ku8uuhe62q6s5z1qk225u69buth1tw134f2dvg2w8kiv3fl80igu7\"\n  }, {\n    \"firstName\" : \"Kent\",\n    \"lastName\" : \"Jakubowski\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.373904101369497E307,\n      \"candidateName\" : \"2022-05-12T11:05:09.361451Z\",\n      \"probability\" : 1.5364077499555956E308,\n      \"predScoreFamilyName\" : 1.4493458027214778E308\n    }, {\n      \"predScoreGivenName\" : 1.9030818428535213E307,\n      \"candidateName\" : \"2022-08-04T13:27:09.361493Z\",\n      \"probability\" : 2.42009354839038E307,\n      \"predScoreFamilyName\" : 1.6443787899417712E308\n    }, {\n      \"predScoreGivenName\" : 1.1448671790987325E308,\n      \"candidateName\" : \"2022-04-04T10:39:09.361533Z\",\n      \"probability\" : 3.90504231315047E307,\n      \"predScoreFamilyName\" : 4.749710253566514E307\n    }, {\n      \"predScoreGivenName\" : 5.083191682600156E307,\n      \"candidateName\" : \"2023-02-08T12:02:09.361576Z\",\n      \"probability\" : 1.3646845991965343E308,\n      \"predScoreFamilyName\" : 5.752643825634843E307\n    }, {\n      \"predScoreGivenName\" : 1.2445340515685244E308,\n      \"candidateName\" : \"2022-06-19T11:24:09.361618Z\",\n      \"probability\" : 7.273737027970521E307,\n      \"predScoreFamilyName\" : 9.9265930024256E307\n    }, {\n      \"predScoreGivenName\" : 1.3461766504008417E308,\n      \"candidateName\" : \"2022-07-20T14:04:09.361659Z\",\n      \"probability\" : 1.4317289770779374E308,\n      \"predScoreFamilyName\" : 4.488961205948249E307\n    }, {\n      \"predScoreGivenName\" : 6.747742724998087E307,\n      \"candidateName\" : \"2022-10-03T10:44:09.3617Z\",\n      \"probability\" : 5.719784129474326E307,\n      \"predScoreFamilyName\" : 2.4893328054926477E307\n    } ],\n    \"orderOption\" : \"1fzfmoy8su19zhu9iekl1wycd1syqr5wqrjidgo19u92jpiljo1j2ycaizzysxjtxcadutvuznp3yu4d2b8vzuyydwxdavy1go9y42tiwcqks59my9osjpoc6oxtkh6wys7z8k8j6nbm9m58vt5uwv6wyn0lk2v6\",\n    \"id\" : \"n134\",\n    \"script\" : \"vr07her4lpg0pa7m65rp863nn3xv5332cyvhn2ub9j61n92jkaf3bng63r2jao6nt6xboirdn4jygbvt83nhu9p931gxx9lyhtx3n7k323029d97a4o9xf8m2782osgc5h3z83a0ter3te5my001d59pzexkmc7lmvb54xkxuzmsoqjhcl9n6s55zei4491ou3\"\n  }, {\n    \"firstName\" : \"Velda\",\n    \"lastName\" : \"Bauch\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.840203472613158E307,\n      \"candidateName\" : \"2022-09-20T11:26:09.36189Z\",\n      \"probability\" : 5.983657712472339E307,\n      \"predScoreFamilyName\" : 1.5576811645199764E308\n    }, {\n      \"predScoreGivenName\" : 1.1510322666078357E308,\n      \"candidateName\" : \"2022-04-05T13:10:09.361932Z\",\n      \"probability\" : 8.490592214382056E307,\n      \"predScoreFamilyName\" : 1.369250578927179E308\n    } ],\n    \"orderOption\" : \"s2lfskcvhy9oi7mtxpd2lzp8wldgvanzih2m05dvmhrcohbjkn4fojzn0empt5tzpusaubf620bnd5mdzxik2tjkdwe23fnld233ezz6o\",\n    \"id\" : \"29r8\",\n    \"script\" : \"iutr876nxflfe2frv1kfwduqxdvu3wunjknamrsifs5pcyo47uidxrehufbrsgegj0ihijzufgfxdb0gfm4gi2ms3xwmrq658mrr8y1h3ivlqs6sf6oyvvpvmwl8v4cznko8694utuaum7ben54lp19jpnnds4ybhtze1t99ztfvy63cazvy720q\"\n  }, {\n    \"firstName\" : \"Claud\",\n    \"lastName\" : \"Daniel\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.7430133878191786E308,\n      \"candidateName\" : \"2022-10-22T13:40:09.362122Z\",\n      \"probability\" : 2.9567546892613476E307,\n      \"predScoreFamilyName\" : 2.1777310685043482E307\n    }, {\n      \"predScoreGivenName\" : 4.168566584047873E307,\n      \"candidateName\" : \"2022-05-24T12:17:09.362163Z\",\n      \"probability\" : 1.123387813989867E308,\n      \"predScoreFamilyName\" : 1.2290403143072374E308\n    }, {\n      \"predScoreGivenName\" : 3.3447895761224985E307,\n      \"candidateName\" : \"2022-06-25T14:08:09.362204Z\",\n      \"probability\" : 5.429087051227776E307,\n      \"predScoreFamilyName\" : 6.606547973218892E307\n    }, {\n      \"predScoreGivenName\" : 1.6329820874122456E308,\n      \"candidateName\" : \"2022-10-10T12:18:09.362245Z\",\n      \"probability\" : 4.711259761799136E306,\n      \"predScoreFamilyName\" : 1.6097774028347115E308\n    }, {\n      \"predScoreGivenName\" : 9.68826633828347E307,\n      \"candidateName\" : \"2022-06-17T10:28:09.362288Z\",\n      \"probability\" : 1.0152546059149535E308,\n      \"predScoreFamilyName\" : 4.204596683174302E307\n    }, {\n      \"predScoreGivenName\" : 1.1569745677513282E308,\n      \"candidateName\" : \"2022-11-26T11:44:09.362329Z\",\n      \"probability\" : 1.4330744056387695E308,\n      \"predScoreFamilyName\" : 3.027505068607341E307\n    } ],\n    \"orderOption\" : \"wk6obkyd4oxj96oj0eju9c2d4dr18d3grqq8fma9mus3dfn2f0edm6wfs4mptmu9b00be9jeiv5nw2bumwwuynxbdf7r1gt1prkv6t4u192wzn9kgbq5b7wh3pgkc9m95zxunmi7a0p6zugm2ssu7rdy52azq3ccbrddj58\",\n    \"id\" : \"21l3\",\n    \"script\" : \"oql504etp12spxejklw1m0w1vkzotlt2l0lbix95fygt1ajgiyvj13knm787vegjcxgr4mv9huxce8pys869aw5m76nab39mz0mvh84k7y\"\n  }, {\n    \"firstName\" : \"Janene\",\n    \"lastName\" : \"Konopelski\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.2226902180887799E308,\n      \"candidateName\" : \"2022-05-28T13:13:09.362524Z\",\n      \"probability\" : 1.5848069288228863E308,\n      \"predScoreFamilyName\" : 1.426612796498557E307\n    }, {\n      \"predScoreGivenName\" : 5.530025374147115E307,\n      \"candidateName\" : \"2022-04-06T10:32:09.362565Z\",\n      \"probability\" : 1.2890010251689456E308,\n      \"predScoreFamilyName\" : 1.809939284998675E307\n    }, {\n      \"predScoreGivenName\" : 2.7516277966350717E307,\n      \"candidateName\" : \"2022-10-13T11:11:09.362607Z\",\n      \"probability\" : 1.2319831527972882E308,\n      \"predScoreFamilyName\" : 1.3191946112462128E308\n    }, {\n      \"predScoreGivenName\" : 9.652680910717128E307,\n      \"candidateName\" : \"2022-09-09T11:33:09.36265Z\",\n      \"probability\" : 1.4100114053328809E308,\n      \"predScoreFamilyName\" : 8.722024005798882E306\n    }, {\n      \"predScoreGivenName\" : 9.558114679918026E306,\n      \"candidateName\" : \"2022-12-25T13:53:09.36269Z\",\n      \"probability\" : 4.156335733172545E307,\n      \"predScoreFamilyName\" : 3.6170353773222286E307\n    }, {\n      \"predScoreGivenName\" : 1.5772740728004842E308,\n      \"candidateName\" : \"2022-11-11T13:09:09.362731Z\",\n      \"probability\" : 1.739658217879243E308,\n      \"predScoreFamilyName\" : 1.6118068869501858E308\n    } ],\n    \"orderOption\" : \"r0dd4dvfml2pn5zyywbw8sokor7o60j84nwkfrflhxyz37uuvp00wodmm170ucuk2xk35lyfqyjpzmyefibmdyrg4ibxnjwp4z1k2sg4do2ukqie19awjmb8l9f43lcq\",\n    \"id\" : \"96k9\",\n    \"script\" : \"faqx4arczp543yqnoh2l7c5d2skqi38rf6j3gu7n7f1esl3cjkjccownf3mh9tez2akgheuubbao75npnypk8lv3nobvhf5qte0sxuic7zjnhyabt58uvyi51x182xdceqv4uw5rbt0uylcq7f1of5l15t\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc926782-a193-4c90-a59e-edb4e566db98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.363069Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "adccd5c2-8f35-42c2-875a-c03d9e66212c",
    "name" : "Infer the likely gender of up to 100 full names - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "adccd5c2-8f35-42c2-875a-c03d9e66212c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.359714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "5c5b1221-b434-4dd9-91b4-6895d4ef96c7",
    "name" : "Infer the likely gender of up to 100 full names - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5c5b1221-b434-4dd9-91b4-6895d4ef96c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.359698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "2aa7e0d7-ca3d-4135-8e0a-7de23058a061",
    "name" : "Infer the likely gender of up to 100 full names (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 1.161001136118077E308,\n    \"score\" : 19.11623462035148,\n    \"probabilityCalibrated\" : 6.479364452177469E307,\n    \"name\" : \"Chery Wunsch III\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"l3ep\",\n    \"script\" : \"x8vsytpv6scxr4pteik84mebgoy9yf4ogs90uy11pt6ngx0p71jyyh2lqib6jl434wblj0xku6aqltibjymbc0kd8no\"\n  }, {\n    \"genderScale\" : 4.879028395045332E307,\n    \"score\" : 1.1443330612107783,\n    \"probabilityCalibrated\" : 1.0435626376403497E308,\n    \"name\" : \"Darby Torphy\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"8t53\",\n    \"script\" : \"e6sfyx6kcweyu14pg4ihpgfhih2n5ev6zf9dqtganbursi9ampnk1a7cd0st51s9b5zi8qeu68noco7jth7zhzonl7u0qgsxmoqwjgfdsnjfmhxfogiu4v2zvu8dzsyi3srcvnozvfgen9031x5gbunnv5medw3ys8sjlktn\"\n  }, {\n    \"genderScale\" : 2.005152197779434E307,\n    \"score\" : 83.4454399627718,\n    \"probabilityCalibrated\" : 9.397758001821693E307,\n    \"name\" : \"Samuel Abernathy\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"cwyx\",\n    \"script\" : \"mvwj7k2smgzdn2n74zl7be5gb7ksfo9y801y6emyrzgsos51pj3oj1bxssl2vb7obb\"\n  }, {\n    \"genderScale\" : 1.4377906251994415E308,\n    \"score\" : 37.82745242689304,\n    \"probabilityCalibrated\" : 4.495948424425667E307,\n    \"name\" : \"Lee VonRueden\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"r7li\",\n    \"script\" : \"0yz5xkv9ej\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2aa7e0d7-ca3d-4135-8e0a-7de23058a061",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.359672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "490587e8-8ba6-472c-8c35-ff1205ce76f1",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Dr.+Lonny+Hegmann",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "490587e8-8ba6-472c-8c35-ff1205ce76f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.359065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    }
  }, {
    "id" : "2d2001ad-2f68-4221-98c1-81fd30c7ae33",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Mrs.+Rigoberto+Kunze",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2d2001ad-2f68-4221-98c1-81fd30c7ae33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.358982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    }
  }, {
    "id" : "d60f581c-94d0-4d00-a927-4f136c5d4905",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Zelda+Williamson+V",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 9.271172079705298E307,\n  \"score\" : 78.56222472789639,\n  \"probabilityCalibrated\" : 1.3996996865614394E308,\n  \"name\" : \"Carman Daniel DVM\",\n  \"likelyGender\" : \"male\",\n  \"id\" : \"24ee\",\n  \"script\" : \"8fu5jnwu1v6ze0ed0au1kkov1q4jcul1rud3rn0xgkgxt945c1ne7bkrf6nv1tnkvfslxeh3h7y86ub08tlddwfznn5qjf9p7mq3su6bbad\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d60f581c-94d0-4d00-a927-4f136c5d4905",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.358908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "format" : "double",
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "262aea1d-38a1-4778-b645-e7816704806e",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "262aea1d-38a1-4778-b645-e7816704806e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.358612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "196210ac-1455-4002-a0b6-9a7dc6367371",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "196210ac-1455-4002-a0b6-9a7dc6367371",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.358595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "7db5fe4f-2f33-4b9e-8317-ace6081d4142",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Antonia\",\n    \"genderScale\" : 1.4893366383440535E308,\n    \"lastName\" : \"Carter\",\n    \"score\" : 30.55109857490591,\n    \"probabilityCalibrated\" : 1.3141190742325617E308,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"4x09\",\n    \"script\" : \"bj0dyajr6qh3vbzvchngj80lcdn8yeo94flmp5e6u0iw94i9r0a4swybjx0za74zjed24697pygn0t3e3ooaaffxsushcsgnhdha39l6lsf1b4aig2k1mu7uraf6wyj4amu1glynwzjlteak6tax2k20clxtjl5p6zubpnjar2o4x6kmx8enwfud2l\"\n  }, {\n    \"firstName\" : \"Olinda\",\n    \"genderScale\" : 1.17673304581799E308,\n    \"lastName\" : \"Kshlerin\",\n    \"score\" : 55.758209527417144,\n    \"probabilityCalibrated\" : 5.782459139137936E307,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"l26u\",\n    \"script\" : \"f9wqvqft075l5ujnka139yx2g1hme8pv87qrvaevs0semjz4jo73fm8a9h8atk7ly1dbdi95mt6ug981hvwwn44nidukicv2p6lir3bi6jlzawxmxfc64v9p6e7r9ze5gjiwc3t7sqnv7cuooxjh654s665d357vgj8s13hmv5yiyx8qy1t8u90dqxnoeabjlvn8wk6\"\n  }, {\n    \"firstName\" : \"Brittney\",\n    \"genderScale\" : 1.678515144655104E307,\n    \"lastName\" : \"Ernser\",\n    \"score\" : 97.34030484546162,\n    \"probabilityCalibrated\" : 2.562598783604474E307,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"775v\",\n    \"script\" : \"a26z7wwld4orlxvs3qso8qd9yuqjui8ldq5an5ctitkcwzpxyazoxvz9leo2wc71gus8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7db5fe4f-2f33-4b9e-8317-ace6081d4142",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.358569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "372ca841-4b3c-47a3-b5fb-4d5b1d4190fd",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Wolf/Doyle",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "372ca841-4b3c-47a3-b5fb-4d5b1d4190fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.358084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    }
  }, {
    "id" : "bd14e454-3056-4627-b077-90950bc29beb",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Dickinson/Doyle",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bd14e454-3056-4627-b077-90950bc29beb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.358025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    }
  }, {
    "id" : "687e943d-b4df-402c-854f-cc853afdde01",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Frami/Mariam",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Narcisa\",\n  \"genderScale\" : 1.6857085828818899E308,\n  \"lastName\" : \"McKenzie\",\n  \"score\" : 71.54718677053863,\n  \"probabilityCalibrated\" : 2.63671129951549E307,\n  \"likelyGender\" : \"male\",\n  \"id\" : \"pvcv\",\n  \"script\" : \"2hd1kotjt2dscg1zua5cnyfc1z7e213h3zfn0uf6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "687e943d-b4df-402c-854f-cc853afdde01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.35795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "format" : "double",
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "14a00473-1894-4f4d-bfa4-8cf9633aac4f",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "14a00473-1894-4f4d-bfa4-8cf9633aac4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.357666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "f761ab51-0634-4ef7-93e6-7d5020d4e330",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f761ab51-0634-4ef7-93e6-7d5020d4e330",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.35765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "2b560677-590f-493e-879b-fb52eb29326c",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Quinn\",\n    \"genderScale\" : 1.2690902779658583E308,\n    \"lastName\" : \"O'Hara\",\n    \"score\" : 77.42599783455734,\n    \"probabilityCalibrated\" : 1.6023138748883278E308,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"sq6v\",\n    \"script\" : \"lvb1pjcjst1uig5hwqgcyh2sovgi\"\n  }, {\n    \"firstName\" : \"Fred\",\n    \"genderScale\" : 1.0616873300298624E308,\n    \"lastName\" : \"Kub\",\n    \"score\" : 73.41048690937063,\n    \"probabilityCalibrated\" : 5.551473563800645E307,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"03cw\",\n    \"script\" : \"5momjx4vx6kwfgoodslhd8ck0\"\n  }, {\n    \"firstName\" : \"Kent\",\n    \"genderScale\" : 1.7364874108001582E308,\n    \"lastName\" : \"Hermiston\",\n    \"score\" : 93.06423961978119,\n    \"probabilityCalibrated\" : 1.7562873705816495E308,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"s7ar\",\n    \"script\" : \"nh9ea3tmqdbn0mzq9gv38i7a5hsbphtkvhajuy4p1hf6d86bx8srkdo917oyn4oflmxnckxpwl08la\"\n  }, {\n    \"firstName\" : \"Maynard\",\n    \"genderScale\" : 6.595471754562655E307,\n    \"lastName\" : \"Schmeler\",\n    \"score\" : 66.40777552513765,\n    \"probabilityCalibrated\" : 1.2368258237590159E308,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"c191\",\n    \"script\" : \"t7ra1ndwtzh2860emb0tt6zmrfwqgcdsd543zu9jisfd58fgf9e9khmmi4n7gt8lw9m9q9ipwoamhssmyb38bukrtdifw00083a665v2kc5\"\n  }, {\n    \"firstName\" : \"Leisa\",\n    \"genderScale\" : 8.292020107732009E307,\n    \"lastName\" : \"Cormier\",\n    \"score\" : 13.213323871233607,\n    \"probabilityCalibrated\" : 3.643557299479352E307,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"9g1k\",\n    \"script\" : \"v6japgkr89icyzpt178eh4d8oc46gu10li2e13huvn7bowjq5idrp0eei9lgl11ofazy\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b560677-590f-493e-879b-fb52eb29326c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.357623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6f9e59d0-4842-4ca7-8b6a-0f89e1d11836",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Alonso/Kuhlman/4alx9jce8943b9iznmrsxzpphv7p27rzbpgqcjh7u28y1uf5w2pltfta2rxawovyaldgm46es5tcooi6jhjhhvp0z6tzw0i2e85ka2tbku0927n6szql78ghfxqc6l2va80t25ket30ghhih0qpxmlx7qmhai591m1tgw9pncqjefsf328qc94uc5ktdjw",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6f9e59d0-4842-4ca7-8b6a-0f89e1d11836",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.356819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    }
  }, {
    "id" : "6ed8aa2f-8d79-4a9a-8f50-374efffe9edc",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Domingo/Stark/pf3el0fvvxp17oua8hx848ynvrlh9k8gjwucu5sfjme5a5rk6qrlz8p1bg1jnekbdvzc44fnbva2oljg608ukadiefu7lsty0de8acoa6k0y3umj831gpxo6wz3tyajtaexu1ybx9",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6ed8aa2f-8d79-4a9a-8f50-374efffe9edc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.356747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    }
  }, {
    "id" : "a0ebad87-c86d-4a4d-9c3f-2cf51ca1c28a",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Youlanda/Nolan/xo8r4jnbztmoijy5uxp7zpzi9bpf7zvrnzrbam0650ehvz2uu7i1cnkgmo3ln4o2vg75br29yvzdb1xkitujdogo7fx8ct",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Bernie\",\n  \"genderScale\" : 4.369018312289842E307,\n  \"lastName\" : \"Treutel\",\n  \"score\" : 76.39560448106334,\n  \"probabilityCalibrated\" : 1.389845163691375E308,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"22rp\",\n  \"script\" : \"2qqm68i9mqk7xik22zxlxj9ijwq02jhhi5zf1hy5dqylva50tpii51lguyls52i0k29cfozi4n2rwgfhk4xfjqgum6e6ypmgqb30w90ty7ai2ibt5zyvhk9c4tqrydjxyb9bxg2j98niwydgagyjx8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0ebad87-c86d-4a4d-9c3f-2cf51ca1c28a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.356662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "format" : "double",
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "c5f80127-909d-4018-b830-7209421d8ee1",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c5f80127-909d-4018-b830-7209421d8ee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.356317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "bbf5b98a-493d-4409-94be-731e20d4b522",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bbf5b98a-493d-4409-94be-731e20d4b522",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.356301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "ab04a356-c73e-4605-9ea7-dc3727ba3775",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 1.6298850896440502E308,\n    \"score\" : 33.07040974925284,\n    \"probabilityCalibrated\" : 1.23314234827966E308,\n    \"name\" : \"Patricia Stiedemann\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"af4f\",\n    \"script\" : \"qzhsekgdr3koefpx0gye0u1aswzdtshpm1moks9d0r3fyfel7a1877vssywdf8f54nrwhaqtwdm5yw3hpy9oftwyp4z6iudrwyn59gyf8ce9fta\"\n  }, {\n    \"genderScale\" : 1.139874398103084E308,\n    \"score\" : 6.573895442288857,\n    \"probabilityCalibrated\" : 1.679289730944778E308,\n    \"name\" : \"Mr. Jim Koch\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"94rp\",\n    \"script\" : \"ezl8hvrb042w9beymkv3106b9yqld0me61d21lhrrh4ermpdqxsn53m6e7oqolxfn4b2h07a4wmykm6q\"\n  }, {\n    \"genderScale\" : 1.707549279740076E308,\n    \"score\" : 9.228766684531864,\n    \"probabilityCalibrated\" : 8.780021188916724E307,\n    \"name\" : \"Roger Muller\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"u033\",\n    \"script\" : \"u4derzekn2hfwwpbliwelavuogxyl069bs4h96t8ap5ihx3a2pe6ttdapxcw1t74yz6f8vzqw2w1kq4poltzk1wb55c2pzqobibdpmsvkmud7vy0g0s7o1g4akaia27u0clvcs8mfgczoq71fb49b59yvl6\"\n  }, {\n    \"genderScale\" : 6.754401289061334E307,\n    \"score\" : 72.43856637516444,\n    \"probabilityCalibrated\" : 1.5177403929940146E308,\n    \"name\" : \"Lyman Bogan\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"y324\",\n    \"script\" : \"fa40b1zacqv8rba0zg\"\n  }, {\n    \"genderScale\" : 1.7130523890923874E308,\n    \"score\" : 98.42632611985877,\n    \"probabilityCalibrated\" : 1.0581660030253341E308,\n    \"name\" : \"Andreas Waters\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"9855\",\n    \"script\" : \"1jt83i9zc826281si2t7cygdqjbq0ral74kp7hq4i16rywsd65w29fo0hl254y9xm51ry2xa61p96h9cw1db4iz67gzza86w9wqgpkh1ngt8f5lwatfewzu3tda8rc\"\n  }, {\n    \"genderScale\" : 2.1856547859573634E307,\n    \"score\" : 74.6369599483889,\n    \"probabilityCalibrated\" : 1.6896755636165994E308,\n    \"name\" : \"Dominick Harris\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"3lq5\",\n    \"script\" : \"jt8mg5uvf976zpcjtlk9e5vymhlpvd6b2aao8synesrz7qz5k4mcf7mvninpzgic94lzb51j684hct2i4mbs4010zndxx1o4wz5nhjypkvboggocb72v3\"\n  }, {\n    \"genderScale\" : 1.5305793489181567E307,\n    \"score\" : 93.6429150354916,\n    \"probabilityCalibrated\" : 1.3712571410579447E308,\n    \"name\" : \"Wilber Dibbert\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"6y70\",\n    \"script\" : \"9mzkca8kob7ym8dbz6l0a8idm8lb6td4ns1qq2whv0l66u9iym39n8605fe1ff4i6bs2gbar2ul9idpjg07cbvb2wht4wpmo8hiu78b2vx2pgi9vabhve758kxkvs912grtwa978nw888gkpk8albu7m1x7mc9l1lcsiqipemg7c0njuavs16nqrbbolfl\"\n  }, {\n    \"genderScale\" : 1.7927350708300617E308,\n    \"score\" : 20.601144154713957,\n    \"probabilityCalibrated\" : 4.605359703788861E307,\n    \"name\" : \"Lionel Jenkins\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"nsdo\",\n    \"script\" : \"h59b1fuib3le0b1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab04a356-c73e-4605-9ea7-dc3727ba3775",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.35627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "52e6484e-07e4-44f0-b7e3-2d57acd01b8e",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Morgan+Heathcote/b5uv64kvuf9l1njo8lgxvrx9mc3sb4ok7ypcwrrulvhjyabqk6k6dhvexj94w4srorjrvr5tqolnwlwdasab6ee57js6t660sjdfu2z4j9",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "52e6484e-07e4-44f0-b7e3-2d57acd01b8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.355087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    }
  }, {
    "id" : "ad24dbb4-a480-48c1-9fd4-bb130c4a520f",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Maynard+Greenfelder+III/e1dksew3llock92a3tu2wl14prgntozdr5fk9fxfqv",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ad24dbb4-a480-48c1-9fd4-bb130c4a520f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.355026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    }
  }, {
    "id" : "cd687922-d545-4769-85bf-cce0fc61ddc9",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Bella+Goyette+V/bj8nuxmot3ypnsljwc5kpxenqio9zna6oa8p2learg4uju6s5gpytmhqs7bcrk6jmg9t0n4jvhw0dqq5q1kzeejun11oc92my1npoifsu6d9udg323yoauo5za2bbmb3bptrmvzgbn5kq70hi6u0r9osrk8j6400ig4ei1lo3g",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 1.7178963929405917E308,\n  \"score\" : 1.3415734581375571,\n  \"probabilityCalibrated\" : 1.0327432537570028E308,\n  \"name\" : \"Tiffanie Walker\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"86ty\",\n  \"script\" : \"r758w9bsgumsxiflqzrcrv29486khj15nr3e8wyzj0d3vdguqha3aop1j5r9kgxjoa1id91dfn01gs2l067ydq1b93hgqdl3wstou48007bhhxs1o0d09v83ehqb18fbh21gb5jn3jjchabemzoup0o2ewdbqfxyq4xdmfm2i3em69wozf4rzpeul2vwrbhxq4v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd687922-d545-4769-85bf-cce0fc61ddc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.354951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "format" : "double",
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "25f81fd7-55bc-49f7-859e-ca7fe0260634",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "25f81fd7-55bc-49f7-859e-ca7fe0260634",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.354662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "142a5134-ef2b-4038-9418-47703b672b61",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "142a5134-ef2b-4038-9418-47703b672b61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.354646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "6bffa72c-5548-4fd0-9b81-eb5ccf536e78",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 1.6251144454950428E308,\n    \"score\" : 20.918150226151834,\n    \"probabilityCalibrated\" : 1.532834226735486E308,\n    \"name\" : \"Mirna Schinner PhD\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"2206\",\n    \"script\" : \"y6pkwa7rm5ancv0y5rjcj0ungwqplkpqonhp3tvylnqaeyu2eulhjekmqidnt1utkkuoynk2obgnkmyk44qjpeervlnt\"\n  }, {\n    \"genderScale\" : 9.513389807065953E307,\n    \"score\" : 99.09447768185584,\n    \"probabilityCalibrated\" : 1.5715486996125206E308,\n    \"name\" : \"Loise Bergnaum\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"q8h7\",\n    \"script\" : \"5c8wtop98n88wisolb1xsk38h03m7e6ukreljvv1a0qenfbabzw3h8uqa9ozxf2c6y550dgavhgvustpy94hso93s46xxg3m70uyx1ews8rjl36u9p3bzxcvsj54g3pou\"\n  }, {\n    \"genderScale\" : 9.309339727183112E307,\n    \"score\" : 46.60957451621345,\n    \"probabilityCalibrated\" : 5.280675080644221E307,\n    \"name\" : \"Jay Emard\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"qng9\",\n    \"script\" : \"6l4jt2torejlk5lo5rewjdp6dqu7tcsd3jht402dtmhbloxyz7p6lpo6j99u4qjpkms17rokp\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bffa72c-5548-4fd0-9b81-eb5ccf536e78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.354619Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "643d45d0-dc9a-4c44-afee-58b775670784",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Trena+Morar",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "643d45d0-dc9a-4c44-afee-58b775670784",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.354138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    }
  }, {
    "id" : "dc078200-3e9a-4a26-b4a3-c2313a198971",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Celina+McLaughlin",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dc078200-3e9a-4a26-b4a3-c2313a198971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.354089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    }
  }, {
    "id" : "759ceb7e-0565-4dc1-87b0-32b1670011a9",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Ouida+Heidenreich",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 3.891815324368844E307,\n  \"score\" : 4.167785370761079,\n  \"probabilityCalibrated\" : 1.0018413790351912E308,\n  \"name\" : \"Dean Kub\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"i15x\",\n  \"script\" : \"auf9qmu9nloff94n7feogjubd97c1krw485di\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "759ceb7e-0565-4dc1-87b0-32b1670011a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.354028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "format" : "double",
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ae27dcc5-5c7a-4eda-bd10-5b48dfdeb432",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ae27dcc5-5c7a-4eda-bd10-5b48dfdeb432",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.353759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "849142d1-8914-4ffe-a7c0-67528d7f3c51",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "849142d1-8914-4ffe-a7c0-67528d7f3c51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.353742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "05ac0249-f18d-4e9b-b258-8a24f7df632f",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Leland\",\n    \"genderScale\" : 3.515395756162226E307,\n    \"lastName\" : \"Schuster\",\n    \"score\" : 79.16582417080176,\n    \"probabilityCalibrated\" : 1.2093992852377454E308,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"w18a\",\n    \"script\" : \"jxitv7e14h3hwz4uy01jk0w189kev5fp901dymvsi0ei52cv6m65pdl7gyusr9gcl9g677xm3vkihl40iohri2pv6to64q66u5t9xpd02iz4kpxnl3cvga9pz2\"\n  }, {\n    \"firstName\" : \"Isaac\",\n    \"genderScale\" : 8.999481278010719E306,\n    \"lastName\" : \"Heathcote\",\n    \"score\" : 51.15953603410266,\n    \"probabilityCalibrated\" : 1.7700473316168467E308,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"5gfc\",\n    \"script\" : \"2u13f7rxx0quxpesvxprtk7y4bq5kx8ojjvbec9b5brl81ofyr2vdkplwtjwr6lldp0kh98vqdyjns\"\n  }, {\n    \"firstName\" : \"Tennille\",\n    \"genderScale\" : 2.707204584595302E307,\n    \"lastName\" : \"Goodwin\",\n    \"score\" : 3.973771801501802,\n    \"probabilityCalibrated\" : 1.2122064728896598E308,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"s1xn\",\n    \"script\" : \"ceyeb9xb8x94irix1n4orl0mrla8b8huinlj3ls8z0t73pd4zhfrv5gx5qwqayg462xdjlx3ygmsag4ye0d5t6woh9hrlvlrs69\"\n  }, {\n    \"firstName\" : \"Sabine\",\n    \"genderScale\" : 1.3777603646663719E308,\n    \"lastName\" : \"Abshire\",\n    \"score\" : 37.49731272242405,\n    \"probabilityCalibrated\" : 4.649063946337977E307,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"9a69\",\n    \"script\" : \"cad255mm8s3xi54i9k9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05ac0249-f18d-4e9b-b258-8a24f7df632f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.353713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "29a70d1a-c9b1-4660-bf8a-7cc8009066db",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/rc7it0asuwchccc3d5fk4h9f5xyh8glqdot5po1pxfahy3xeoqeij75xre31bi17uoxnkg7xgo8xv0l28xet1vhpnne7vnm270qxr9m97lyuuvvfhzz68qwq6u8fr8rlarp912bxnnknw7p4426/k17gqqik8b9ehyphmdapuvabv",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "29a70d1a-c9b1-4660-bf8a-7cc8009066db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.353066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    }
  }, {
    "id" : "dabb9f5b-44ad-4e60-8be3-eefedbc69893",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/sd2nhj0hzszv8a1tvbguedfkrxwc05jv7p98ig5tct8m6i711pogpn1i1owkuio/oqci2shtzega4z83pmty2x1j1wdzu9ullpkl50r72dshmisp2r8a0i6qwosarjhasjinyi4zo084f0se33vzljodhftnpq3ckpfpdn3qco7pnuoif07juo789hk8farotjuo1y6na1ea2u",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dabb9f5b-44ad-4e60-8be3-eefedbc69893",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.353028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    }
  }, {
    "id" : "9a47bd49-f454-4cad-8574-809c62d11ea5",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/qt4fatwsz8zbyi5kw4m0u8ym5vhoahog0gbsofwtemhtmny0x9i5n5cb529n419p12s2w8o4hndtupcv3m11zfzzwzqtbt6y50ugiwgv1hci1fkjfpnff793yn4ye75be9/uoefzg8u5naltkiucnbrhqgklizlh222nvex63z68jdmtj41mxslk7xtsu9kkcgnwpzxmmr07tp68hbwt9joeyfa4amrnnxhb5irz3p92w4a9hvaqpaa8qzzzafz7p9gxl17uqkx591s8jwo7z3t5gte3y98j8fdejq5mp6rcwpph4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Osvaldo\",\n  \"genderScale\" : 1.621505764739173E308,\n  \"lastName\" : \"Kassulke\",\n  \"score\" : 0.6429057181661979,\n  \"probabilityCalibrated\" : 9.981713632115855E307,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"728c\",\n  \"script\" : \"t7j29av17ps\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a47bd49-f454-4cad-8574-809c62d11ea5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.352977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "format" : "double",
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "61f86a38-6a98-4868-82fd-ce3a557a4f5f",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "61f86a38-6a98-4868-82fd-ce3a557a4f5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.352695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "7f37cfdb-760f-4436-b88b-b48b6a339147",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7f37cfdb-760f-4436-b88b-b48b6a339147",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.352679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "4cd82bad-af49-47fc-b310-a88ca32cad33",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 9.333034485741394E307,\n    \"score\" : 70.9531803073533,\n    \"probabilityCalibrated\" : 3.888016992427766E307,\n    \"name\" : \"Vance Balistreri\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"zd1c\",\n    \"script\" : \"7e4xdokubm36abfwqxlvh8z6b3a26pmk0ph6rroy5c62m62wgskam4\"\n  }, {\n    \"genderScale\" : 6.159961502923268E307,\n    \"score\" : 3.086363806756154,\n    \"probabilityCalibrated\" : 1.1831002515260262E308,\n    \"name\" : \"Carrol Moen III\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"55x7\",\n    \"script\" : \"6enoir9ruzzbttnzrg9tv3cw74u8xl7ijjmq33812fywjmu7oqhnsvsbg9hmdmlhoa09uw1r161w7ary67ughj6mjql0qp2djmpd5oj3svcatd6n8cozt7hsrx323dhs549x2tm173i5heoyaoiycrq25vfvbu3ce4beg5zf16hmkrwneoir23jm129d8be41\"\n  }, {\n    \"genderScale\" : 6.095677446841533E307,\n    \"score\" : 43.375406106944546,\n    \"probabilityCalibrated\" : 6.521211956357769E307,\n    \"name\" : \"Normand Homenick\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"66zi\",\n    \"script\" : \"43rm5dmhi0lb7lszznhlxj10j31wwcrvrl7ra5d6bwlcgrut2vxzip9rzwh2xa6yncrkhesdow2nyv4mjrfvrew73y8z21tz8ero8nrewu337h04gny6uolwnx173qr2pp3ht1m2c7lx1ktpjr3ydu85a9di0f8n6jibjbitrfonyk0mwra1r1pu0a81t4wdsa\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cd82bad-af49-47fc-b310-a88ca32cad33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.35265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "689eb874-42fb-4df6-9f45-e59749cfb3ce",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Miesha+Medhurst",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "689eb874-42fb-4df6-9f45-e59749cfb3ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.352162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    }
  }, {
    "id" : "ff9fd415-b4a2-4e7d-84ed-2070181d96d4",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Ned+Rohan",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ff9fd415-b4a2-4e7d-84ed-2070181d96d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.352106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    }
  }, {
    "id" : "6dd2058b-81c1-450b-b6f4-7fd939a803eb",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Zita+Strosin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 7.654959978730086E306,\n  \"score\" : 18.45502810860955,\n  \"probabilityCalibrated\" : 9.474610401802227E307,\n  \"name\" : \"Sari Lind\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"63ly\",\n  \"script\" : \"m2v33bh9ro7t4cc59p970auh4ig18m4iiiyxksfelippq4cq3jmrox16lh9ehe9504uvw3b7qs1djin4tiz5dg7we3ikbz63nd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dd2058b-81c1-450b-b6f4-7fd939a803eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.352031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "format" : "double",
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5b7945be-a42f-4e06-8bcf-1be58748659e",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5b7945be-a42f-4e06-8bcf-1be58748659e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.351724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "024d62da-cbb2-4f46-b308-914a88d89b7b",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "024d62da-cbb2-4f46-b308-914a88d89b7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.351709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "a4bcdc00-90e5-41a3-922c-6099513fe2b6",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Arron\",\n    \"genderScale\" : 1.3225038726502769E308,\n    \"lastName\" : \"Quitzon\",\n    \"score\" : 87.20394753660999,\n    \"probabilityCalibrated\" : 1.2479306302289749E308,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"pidr\",\n    \"script\" : \"mf4dp9oa0jjqq7g2cx4\"\n  }, {\n    \"firstName\" : \"Nathanael\",\n    \"genderScale\" : 1.0621222802793954E308,\n    \"lastName\" : \"Beatty\",\n    \"score\" : 28.19081514334838,\n    \"probabilityCalibrated\" : 1.1524780563520892E308,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"05gq\",\n    \"script\" : \"hxrgix93vjff52ci2h4671kn6ko1xpqsuvc9ih6r5wrvrci4l0eabrpina6j4g2c4146sz2edvr48og2nq04clwt76tswnb5736rse4yz5fiwrr81xzx0gfws8awlc3owtv018uxwt6sfy9xydfr06ooq1kyy1oc2unk1kjb7\"\n  }, {\n    \"firstName\" : \"Kai\",\n    \"genderScale\" : 5.561568648369299E307,\n    \"lastName\" : \"Wilkinson\",\n    \"score\" : 56.83983416023123,\n    \"probabilityCalibrated\" : 1.0622225269871049E308,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"anyx\",\n    \"script\" : \"wlizhg93m16fxc3sokhocoponcgug39sm10voeakg28dqx6x8mrh0jiqun748cfmpiataa4s80fcnfcpa6hlxcugkllr3tld0bacnmz55r4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4bcdc00-90e5-41a3-922c-6099513fe2b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.351682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "bc8522b7-0e36-484b-8287-f5e1e1308f5a",
    "name" : "Infer the likely gender of a name. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Bethann/Hansen",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "bc8522b7-0e36-484b-8287-f5e1e1308f5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.351165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    }
  }, {
    "id" : "87952b82-8808-4864-8604-53ce806f206d",
    "name" : "Infer the likely gender of a name. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Joel/Connelly",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "87952b82-8808-4864-8604-53ce806f206d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.351105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    }
  }, {
    "id" : "819f8002-71d6-4686-9522-089010a7136f",
    "name" : "Infer the likely gender of a name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Palmer/Smitham",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Jamison\",\n  \"genderScale\" : 1.3216979690640718E308,\n  \"lastName\" : \"Gutkowski\",\n  \"score\" : 65.3500965675246,\n  \"probabilityCalibrated\" : 8.818617010328443E307,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"c63i\",\n  \"script\" : \"dd2ajtrgrb1sn8lnwalotg7mirfrcqkiq3fnf65nnjy4rhakyaglivexk05rw6i6hghjhoiy83e3g0dt2zykrgatykjiq8517a45vtydfw7a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "819f8002-71d6-4686-9522-089010a7136f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.351033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "format" : "double",
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ebf5fc40-7c5a-484e-99c3-8aab2527164e",
    "name" : "Activate/deactivate an API Key. - 401",
    "request" : {
      "urlPath" : "/api2/json/disable/29c36x8qfu46p2jbc63q70jhizezmz3dvbsiw5mvttrstmnqs39a7der0ekcduspgiis9knj7d52tqzn1h73db97rgnrzn38a9e8gtdl4i2yupm63t1j8kka71ee617bgw3uvs/false",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ebf5fc40-7c5a-484e-99c3-8aab2527164e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.350699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "disable"
        }
      }
    }
  }, {
    "id" : "1c379fbf-3eee-4718-9dc0-847f14f6ef66",
    "name" : "Activate/deactivate an API Key. - 200",
    "request" : {
      "urlPath" : "/api2/json/disable/j2c7jpf3cg3zbyyphy586arxpi20ty2jt5qze5q01cjkstucpbzni6ywdwdb4s/true",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1c379fbf-3eee-4718-9dc0-847f14f6ef66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.350668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "disable"
        }
      }
    }
  }, {
    "id" : "78c6dd6c-dbc3-41ae-aabd-ff0a396b738a",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "78c6dd6c-dbc3-41ae-aabd-ff0a396b738a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.350631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "bb683eaa-417c-48cb-8ebe-25f8f6936c6f",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bb683eaa-417c-48cb-8ebe-25f8f6936c6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.350615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "4915a4de-7012-401a-abd1-d6a24a41466f",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Jules\",\n    \"lastName\" : \"O'Keefe\",\n    \"score\" : 17.603975510682133,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"m8lt36tli7laboi7vrt2f5lw7llmq9qp0l6us8rrnlripjdnnmeqfq6zt822qf37f4w6fqg5msjy7ftwqzubbi906kuok5eg6b\",\n    \"id\" : \"6c0d\",\n    \"ethnicitiesTop\" : [ \"koo5jr576991916c9w3ff0zb2saysyhedh5gtnp2gy11p0nbo9w8lvss9sv3cmn56rnlcsb1q2bf6hqkkqj2dzjvfhe1fddsurplyl55k1m5k3va9ml0bexdvu6f17je91sa420l3imuqnrl3a21yeb8dklz1dwg4lfly8du2a1x6jwenih2ft7ry3f\", \"kx5ww37b\", \"l2cjm0vj7xpp1pcw2zch56k6w7tv4m70p37yd8vamgic03vm15txdlmdq445p29k81zkn08tizcqk2dp9vdxb6r6\", \"xtbcm7haizpnr9ggr3l2wfuqtumqyg5rj0ooevxslmb5jp4tqnoaab6tbky2l6podh6tbsily7i\" ],\n    \"script\" : \"gkjjs2ot5vy9vkob26o234escrhhrbouf2th358pr5o38u4g86c7snhfo2j2h165tu9x728794oosepwfifzweu6pe183kzjtupjcwnh2t9sagafns24godi4dv36yex5vvf73uo8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4915a4de-7012-401a-abd1-d6a24a41466f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.35059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified diaspora names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameDiasporaedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "36714a9c-533f-4238-9b5a-8ee5eb5cadb6",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diaspora/yug5chobnpvdb870lo8h9zqdvl0eds7878r12t5a3m6kjoswkslwzylmavuu2mgzhjrrlk8qlew9ucwhi7uelex5kx4i7qqi0zu6yf651j4du5pinhvbqpim7jgi89xbcczfwmqwev8rp3kkbrxkuh/Adolph/Dare",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "36714a9c-533f-4238-9b5a-8ee5eb5cadb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.350344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    }
  }, {
    "id" : "a9b1b55b-16df-4f42-ab81-844c3c12d7b0",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diaspora/met8mjeyxxpkkgkowcz213asnoh2leoi00sjil33gdknu6iljhzgdu4vzbkx6pqrl11xld82l7zufnpm0yfm3c9kyio2wp4yfb91qrh9/Abdul/Durgan",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a9b1b55b-16df-4f42-ab81-844c3c12d7b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.350273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    }
  }, {
    "id" : "bfaf11cb-7674-4f17-9bc7-ab133831d230",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diaspora/hnzwts491yikuhb5xnaubr4znfeav7e5mfnt33g9qxm4kzdswo0893h18f19glxklepghsel2ycb9mz5ofvegfid2p7db0qb3q96q0rqv7wx6jsb581c0jngdb/Velda/Skiles",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Victorina\",\n  \"lastName\" : \"O'Hara\",\n  \"score\" : 98.02013343276495,\n  \"ethnicity\" : \"Chinese\",\n  \"lifted\" : true,\n  \"ethnicityAlt\" : \"Japanese\",\n  \"countryIso2\" : \"zfqpg12nz3h5oqxycaekqkce9bkk7yh724lyz3juenzxaipset3r3y8jd6eo5yj9xmcw0qfbgpnlasq7dzzqsnmh2kl4szgt\",\n  \"id\" : \"iio2\",\n  \"ethnicitiesTop\" : [ \"paxt5174s6pybv6wd2b8rzxun0m6j\", \"0kwwkvifyo2pfk8d\", \"ekzus2522gj0\", \"dd4k52jbuoks5wmfjnvy3lly95\", \"jf96z06ij\", \"r4jz49givek2xuxpemibti0temelic3r97xpl1vvnyspv1raudob49ldssyvbp7l8un2jc6ptr5cwsett1keu5s7r1lkszfuh5aqeq352a42kngyndqn0yntyi8xbn6wylds7j8eomzo6entdqzsxocucz6d5a6lsac5izqocokmm1c39\", \"4cszufkk0njtxuelnzrc8iho89zkxygh2qx0k3a1cmpsvr5homj6qoipqjkrgzmcz6dgg30zzkmzw1gc1d05xgpdy6vyc\" ],\n  \"script\" : \"icz21vxo5psh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfaf11cb-7674-4f17-9bc7-ab133831d230",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.350188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "countryIso2" : {
                "description" : "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicitiesTop" : {
                "description" : "List most likely ethnicities (top 10)",
                "items" : {
                  "description" : "List most likely ethnicities (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ethnicity" : {
                "description" : "The most likely ethnicity",
                "example" : "Chinese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicityAlt" : {
                "description" : "The second best alternative ethnicity",
                "example" : "Japanese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "lifted" : {
                "description" : "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "type" : "boolean",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameDiasporaedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e93eb0bb-b0f8-4b66-9329-cb2d6faa898e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e93eb0bb-b0f8-4b66-9329-cb2d6faa898e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.349787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "05abcfb6-8084-429a-802d-310f114202d4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "05abcfb6-8084-429a-802d-310f114202d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.349771Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "debfbcc6-911c-4c44-acec-fb73a4a86e33",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"country\" : \"Zimbabwe\",\n    \"score\" : 8.860845109934512,\n    \"topRegion\" : \"4zm9dydufrfup37yt9cku43hpb0okrokew3yswwyh9lpq6ywtubnbpmx6z8vw7wg25ppds0aa8luqv8n5w1a5xdef9gb9novz18t4aea9mv9lbvmpqm4ms71pl47jvcc6zzihkhdz1q6gp5m42pdkzc\",\n    \"probabilityCalibrated\" : 8.950082107065759E307,\n    \"subRegion\" : \"o659dgabjjyy5fl0k76x08ogznxi08ado60uprec7cj041baizmqk41889axhnuueb6ge0kjibo14armtjjhwjpa2j40irzvvqra0yr7gphjvmqx1e1w6is82x8nsg1liyzlwjj8m9djsd3mx0bxre3eccmhhum2889tky1ack61j0md\",\n    \"countriesTop\" : [ \"qkdap2ktvko2uxmcbj5mdrdzmpfoo2gr73jlej2qgcls5jpiqmkc00ile0yx1mnd1gdrw40jvkew1yqcripkan680pbsmem8gmeu3yqhviwpkb0ivp8inwcozqn3slg9yrnt30sn1zzvdtnjevxvj4go94yt5vx7idxfcy77or\", \"c4rwtejzlnl7xi466xnegox2dho8pyf637anf4pys81\", \"ypqc7j2ve66qodn5yd4pgc6646dsyki2ymqai2ylxnl4f5gmu559ydw3qzn13u8iznda32o22tsdu24uw8fxstiwrvj6aojz8x6jfe618de4l22hhulkrn61njoor29glzmtvsi6nlkl\", \"236fk8d1t5v14ea3d1v0r25zlrh79981spyafhna6wnnzdi9i5fcd7wgnkgaygkrhzzyvfk3fzujy5w4we3heqp307kvny81pgpimgu6sb30b2vhc8\" ],\n    \"name\" : \"Casandra Goyette II\",\n    \"countryAlt\" : \"wn3f1hlmfj36ent88\",\n    \"probabilityAltCalibrated\" : 1.6808478072826284E308,\n    \"id\" : \"sl0d\",\n    \"region\" : \"ug8diotonxswk1jpw4szevl19grt\",\n    \"script\" : \"6z5s3nbixu0fh5q61j1gim0j55vo5lmsyj28kkfiuwixwkauojvva8yd4m0tavanmvypjhkggi0egmwhxk9lba8znbn2d5ir6b8xmn3or2x9whzgxgkq8q4y0kc0a2akjs5hwa2acgezn1hdojkb7pcwd7m\"\n  }, {\n    \"country\" : \"Thailand\",\n    \"score\" : 11.397744989405645,\n    \"topRegion\" : \"dvf7jao2jr3rvl5d405x54ln7ca8qy9y1x8bympmzv5azlehuyfmtpkd7ims06s2fz1zboqtklp4w6v61ezbgqobt4904s9kn2mc2i7gbstg0vefgl1q5tbrjejltk64ayibd7ke2xhh8w64jfgkfxjxjrrlgninnq\",\n    \"probabilityCalibrated\" : 1.2893988193130691E308,\n    \"subRegion\" : \"c4xrxrhrv6m97vwo8f1hh6dz1s0yvi15gtb0soalxd0xyxenldn9kavrmtk49su7f5uvj5a8ip7io9zqpp7s9weqk5s2y6pyr5gzfqcxmiwamdh2uf95o5ttjg2kfjiu\",\n    \"countriesTop\" : [ \"dekspgdmo9cqxg31d4trgjzydvhca1xwoogoc86jkx1yp0jxt85zqtsqhrxeaiu6lr0e2mo3am2kif01h3yzlxrsfqd18916\", \"ywdqwvq4auk0i1f1ek3xojh3vcc161b1f28gh4zwqkmm0zasyun5g74zhmt\", \"yh6crizsyec7crhczosn5m3\", \"lz855jiwmwu25cjd8eew9alxkjuoaujyawxgpnfsgrtzttyec6su9936421rh6po6sidmr3vf3t28i9d6ns3l597r27rdh8rqai85pp\", \"zmy0fj6vrb037pzotkwvgvz11qg2cdslwznqok8jf0kgbf4lx2fed4hs475bkxhg10fkd\", \"inlwrbfnr01lm7hn2b6j1vkdrz6vxe3k5z1viakx378\", \"i1shap38gihz2v1wbz8ljjzgkxt9fydqzhsg722kvv8pju1yc5dd0o8x0skht2zxpq7yc9rwjirbwc58o68tn6ywa4han36fl86y92eaufrdr14a4bwi3rwn44pgfsaiivxtfxsk4i0uypqgruurqwuw60bxaz\", \"p5xxp66rspq5s58t1gr1863d123hn24c7iegw4iuu753ai44uxxfipium9damxkmxs2hvjozr7afkw6um8k4ds74vv0a045hs5d04equtxohtl28wp7p19gibppfzbpm\" ],\n    \"name\" : \"Coral Kuhic\",\n    \"countryAlt\" : \"7cyiip5gjmflnmghy1r9o952r3a7hhszkfhf9kkudaq6y6yppu\",\n    \"probabilityAltCalibrated\" : 1.0346663771584454E308,\n    \"id\" : \"0w37\",\n    \"region\" : \"kwmowecu34ofvkzpxzsxxq42whpbiitzyc2tp0gqgekjfdxljuwbj3kdg34fyqx2fr1hmiah0kj1dmk466a106wltbw96hhj1tprgvwvvb2n48y0errro2qejpiwyn6qylh37kss2d30pmyax1dm7socnolh97qmddyxygcnvfppopcdk0f\",\n    \"script\" : \"8hq89qehz40fidemerh3rizk8ss9zscp328bm2ciyk302hfcelgovd8q9zph4h3pa6tpednuqgz5rgskvs9xogz4cddkuq1yr1fnqcj0lsofcxw79sgo3mo614cuj8ilus1kxqnj4g2tqhtp4a9djkwgv2bq\"\n  }, {\n    \"country\" : \"Sweden\",\n    \"score\" : 31.642526543050064,\n    \"topRegion\" : \"fqvpl3bh1gts2tjywebx2k7q51363jcun8zrthw0ra4x1q6eys1lnpsdeoxg94g4ky8uupybz3pcohz6bmec58h1upqxdisszelmmi6ap4s21airgpaav0tj07jbto8mfhorv8e0j10diisolt8bdmkna4chb34rx73h3k9q2yi\",\n    \"probabilityCalibrated\" : 9.884614892576049E307,\n    \"subRegion\" : \"54dye\",\n    \"countriesTop\" : [ \"x7kcdpta54oj3kawo1jnl3unp1kl55dbd7c33jlxgyae2h5dxoaw7ug0t27yr7m2cqvmy88dkv7zk2iznddn97tsuy7jq8q9q8bvrtvpl9zksvbcvuzhrhk6bncnesaw0i4beivru4docuyf4ddttyp8575reypnlnggc3qy3qyhrty3ylbcag8\", \"9dxvti4q9vemdsmq2bl6cc95\", \"6sgxuarofar52x42hj2z1zi3pgsh0bkhticbt0y9n0f4skcsgxgk65vaj2p5zewlx51wwayahyysrw4vjuuf\", \"eaysw7d6qaq9rdhy3ofkp0cev1lxq9i1zeulbqepkhm5ss813l9yjg0jsl7ginyku5kkpgcaoys01y9ur88s5g1bu7agpazv4g8ut7tz1f5ay72owtym50ni9l15mbl1k4myxac4omw7kcf09s\", \"w7tkje1dv62yllcy671xkdz4dph95x2cvfcwwuox5oawz7dmwffzzpcdh7whcsa5p7qxjg3tjxofv1qbmjwqifelp1ev21wm2cqojt1p0i861mrwmjbjwc93gt00tc9qw46znpna4i5aw70fhzp6gntyvuxoj0w5am6ic4zichgqeo1rp8967j\" ],\n    \"name\" : \"Jonas Pagac\",\n    \"countryAlt\" : \"wwnxo0\",\n    \"probabilityAltCalibrated\" : 1.1905495000175438E308,\n    \"id\" : \"aef9\",\n    \"region\" : \"r4c038qrtlro9xd8uw2tsx0wy07wua1r0ec0wwg39sbrvoryj30yyybj41ngc73weg8agzprxwpl0cy02kw75d40hxjpbzz4slik3rmy055uyd52crottiiqufscsmmmbmw8tmbdka2sw3wp5micmt2i\",\n    \"script\" : \"zt8pp9xpm51rsi9r59q1yhfieegpe316wr03dm0pprixduekjd0e2oiarbfnuxdf3gul930q5gcxb9affb4xfv9x9p81zgqceokzw22cw9i1tmpnm6hfxofuum8urafwuue\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "debfbcc6-911c-4c44-acec-fb73a4a86e33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.349742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified geo names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGeoOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGeoOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b3231301-d56d-4c4a-b142-c6ff1b374cbf",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/country/trlb2cqr3qbu0e5mpnh2v6z7vtevg0nq4s95k1a3dyv28a9eviojmq6kcy9ddnzt9mztcl56ykm6v8lyrcarwgm7c3uzn88sid3q5tu1sg07k2twa19yh7y89oj98z7lodphosqtcbu3wsoiktw1i0nmpxto2uopj3thsz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b3231301-d56d-4c4a-b142-c6ff1b374cbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.348974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    }
  }, {
    "id" : "d3be47d4-f31a-4ea0-90e8-e6d3fcb39825",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/country/n5ra3hlq9bronlm70xjjd0y3des55vmk3w4bb9wur",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d3be47d4-f31a-4ea0-90e8-e6d3fcb39825",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.348942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    }
  }, {
    "id" : "da5078ba-d8a8-4b74-bf6f-62ebbfb6c528",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/country/wx0si91tuzz0qbkrcebyq9n7in1b5ascf56ojqp0ia7zxrk24vb8hqky6yxwtr3curg5ygftbghvvunbzipktfq12yldihsgl5fmostm5zc1d3n7o9t",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Germany\",\n  \"score\" : 66.18525887203471,\n  \"topRegion\" : \"xe8h8likyt7jftdc7wst2071eywwoqkw18mhl8085a7h6306z1e85208rlxbchmg72i7emkoshmlt12hl5luod8ed7fieuecdlgnhmexio01kab3vzntl3pzp1u3zo2skb7ikkrf84cgfigmxix4uby3\",\n  \"probabilityCalibrated\" : 4.586006556550369E307,\n  \"subRegion\" : \"3kq4dxbvqpzjwjmjyalljvzd2tk7k87jqwecvq8urhjfnfvmmrkqrv81lup8o4206qobz95hxkybpuadrf7g0rrzjkv39s5vq6haqnojgrk2ylrpacx8tb134b2pbqswi0b7bvipkzpivbddb88wbruc3nig79r8xgove9aylv5y3o06ecnthwta\",\n  \"countriesTop\" : [ \"8wysmijj2xt3y94iyo44fij2eic8e9gc8enfj5n3pem1ybau3eq4axf5wqg6nj47rk7lhc0e8jq5ol9dkp8cvseo09yq3jfw0d5wfeqgq0mlosi8mwrwwaf9wh97zlbij89iyot8q9dwh3t33lus214i68dpzir2gbwqi5o0au4asiyx\", \"ro95y9p1km0do706x6k0j2ltu323qphvqrneirdu0b6wq6oyqub0gqd5glpwteb8ypgeoz3e9mjdbllx202ucnz23x1lhzrrfnry8hp0yx367nyctnmqg71qqoa4mqab2tlmidlgs57sx0reckzn4sxkpq6ybaes1y5e105n55r4n4kwa30nchq546u39g\", \"jpezj0e44b15t08uje7b25qaiepttnu9mu1ib5g7ch1exc55qyjc1oibpts5u5wauv2ebfjne5s1witbv47py2l4jys19bipmo3g1mzuhyrn8mqrr9s93fotwzaxyyctqxl0zm9zykdcj7ubtgatezpu1w2rlkz2n73l7y3hwz432rca6tkcd9xo9vst9xx8gdvnq\", \"1mrzk7ocyfjr2dh3s6r68p9akbo2rufsfptgotfbvxp9qvkcuri7j3efnzna66whyt68rre\", \"ngwvh2xg9q7r6tmhaypuvkd6snxgmz476v8e6mcvxc1nonamrpmbqabgwkgl2rc2haqaucaif4enfuq58l6tpeh1a3zwcpdhq11l29yqxkhtpjld2c2q198xm5kzgfjb54vmcosm7tz7wggvgo9cel7jjm5oisj973669ypboeponhmy\" ],\n  \"name\" : \"Shaquita Ankunding\",\n  \"countryAlt\" : \"w14kjif775nxyep7xpdmntshv4ivfwx29ldxkk0v84uxsbp15gea3039bfup0xcv830tj1rxotb2s18n8pj3fo7uob2u6hlm5a4kimk1v4fk5omgfa72gzmzi7r2l9hysep7mj74t2uidw7gq723h71g5v08rur748culb7cuui1w5632vpt3pc51ghdtrt5rn\",\n  \"probabilityAltCalibrated\" : 5.521306743866137E307,\n  \"id\" : \"j91b\",\n  \"region\" : \"wgbcqpzvl4w0b9549fnl9wvk8ncg5wrldq9gw7bgh6wevdvavi4t1berr6yqecrutru1\",\n  \"script\" : \"tr3ug17jaml6wnhztzloc1d2dzrmecergde575q8znabdy8rid5oyeo2h0gikswkos5t4735o6githq1c34jkqxptttlnhg034xco3gbrzgz5pltdjmlfmnjw7xwgru4ve1sj8gq2au0k5f21mh8fepkds1qz1ycm8px1zqhbjcvc32iq84y3hpj6er3krg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da5078ba-d8a8-4b74-bf6f-62ebbfb6c528",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.348896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country",
          "schema" : {
            "description" : "Classified geo names",
            "properties" : {
              "countriesTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "country" : {
                "description" : "Most likely country ",
                "type" : "string"
              },
              "countryAlt" : {
                "description" : "Second best alternative : country ",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly.",
                "format" : "double",
                "type" : "number"
              },
              "region" : {
                "description" : "Most likely region (based on country ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegion" : {
                "description" : "Most likely sub region (based on country ISO2 code)",
                "type" : "string"
              },
              "topRegion" : {
                "description" : "Most likely top region (based on country ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGeoOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d2858d69-659f-4376-b412-5401a46c47b4",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d2858d69-659f-4376-b412-5401a46c47b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.348393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "edfbaefd-1478-4559-9b58-496586b52790",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "edfbaefd-1478-4559-9b58-496586b52790",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.348374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "edd18848-fa56-4c73-8088-b4ebeaa54f88",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corridorFromTo\" : [ {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Lyndsey\",\n      \"lastName\" : \"Turner\",\n      \"score\" : 16.562219360561937,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"5zj9eh1mjvwnt794ugspi6vfvf6tx9pv4ddf75s8tao8p1c3yqg2tk6upweuu9ukeunk9a\",\n      \"id\" : \"rh9e\",\n      \"ethnicitiesTop\" : [ \"onxikuyi86bfohy91dm8ohnxvsses4qraih10r614oc0\", \"zwmprj0ve53ysvadc8sbpucdbzig5mqwfxb4curxh22w8qojsmkg20kd6anls4vt0c879x9sbjy1qqa7sl734x8t5\", \"smv976slg1rv5imvam238ma5xxf5jfvzcpz84qsgvcljbxzozdb065wnltyqbz7an0x99dl327qmy3f3gyv5l4b4fwph\", \"dm3f7kqb8eidf1psrzrbbdyl43udnw2w74y7az04wm1htpp15gzaav80x2r4pl25xpvc646uaz4g4jdq06kywgr9ceusje8wj9xu3jb7o5kphse9p1a1853kbtnc88wb1pxvk7sp83sd0h8phi2bfumtgj\", \"iqtvpxeza2c6clihfim6i5zeahxj5mfu5t30inronjnq6ktryngitai5grxlavscyrnp9kgj7rii\" ],\n      \"script\" : \"9gmnbwtrj8128tbo31z11k50cfwsysnm4hge7g74hcx2q3wydjkwzczmwrcay2puu4x0t064vm8e48y4tll1q876ad627swh\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Moshe\",\n      \"genderScale\" : 7.194592514561614E307,\n      \"lastName\" : \"Wunsch\",\n      \"score\" : 4.847537987218642,\n      \"probabilityCalibrated\" : 1.7865215402459486E308,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"i4c1\",\n      \"script\" : \"gcft9b47fjzlxr97d99hq2lq\"\n    },\n    \"id\" : \"68ok\",\n    \"script\" : \"x4bmzn5jzsgitg7kaq60osje3aiknbu5r0rwtnk1g15ffc3qwp9sdeo7c4btqf4deziqfv3en5jloq4owomlei6x1bn5xvpahvp0ec2uj064i5m93adth0jbheaswyh4px0ufpaowhqd2l1ad9t20pvihrffu54xthz40jy1ouumx3ezhj\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Zieme\",\n      \"probabilityCalibrated\" : 1.0334317018311067E308,\n      \"script\" : \"rlzf5avbns3ap172n2hrkk5hnkcglj8gaj2avofn9jdr759427vh5a2qx2i3vl0piybtwnecc0zoqt4qy8psdt4eqv58hxy04tsu6cd83715323ac0spm6klxduq1nb6b2fms9i9zoe2wjmkcmdmpox5yatb1c2idvtme6cwbusg34mlxzx1j4rczfmvz3z6q1mx8ik0\",\n      \"regionOrigin\" : \"p6snk7qsmrivvq9y9horm4xx9\",\n      \"topRegionOrigin\" : \"htohv\",\n      \"firstName\" : \"Hyman\",\n      \"score\" : 79.95359618507396,\n      \"subRegionOrigin\" : \"y5zo174auoba84q6fvletbrsx6fhv6h0arph7xb0y2u3ynvi3f1631ey28ko6hmrjdohi07zxy6cbylcmdf3psnccy10yh3yh47sbnnrijolz5ttctwl1k7k1n1m3nwlcjb5d1wgdij1tr70hgbzy5mbn8ox\",\n      \"probabilityAltCalibrated\" : 1.4372025843059182E308,\n      \"countriesOriginTop\" : [ \"da9qmrtiyuc1d508s33zautzr95ho1s8e1rv6ieyusu35owcdbppiec8gn3ayjfghe2mz3lhtn5jpl7yigp1elfni3tmcl6\", \"7x2462o228jullaspprlhcq266fpqpc0zl7oqk05jdmzibch8qyk8magvx22bbkgxmmtsrfrnjnkdbbmr31yy7rivgi0hiuyf795r3n3n8lcapu6feecvvh1djty71werpeb4ll5f67r2m22o93ys3yss1xm\", \"5fim1lr9d8uqhslsgsalenoe083m8b4h6vz0o7m\", \"vsxt4cwou4mtaj88rbj04ienvs5j7opyqhqv9py4qd31toc7fu0anmdsifh7b0fn0r9h8j5gu3zt23yiw771i7fovdr5v7fmlk8iluzkaak6rzcba2vp90h57q8hgd3gdq6ynpnjum5mlpkwtfdzs\", \"233fs3tdb0m8u2xj7fbto0sb7h4wp4ibygwb4tanihgh8qbx0q3brckdph3ngr1qpbz861lydtt8o9b5qdgsoxbiedczqfs5j36ixvdz3vvs6bycck9j95e74e3qt0v0oh44dvnc180rqkf9gqsy1eg3v8soczj3jog869ionvx7psvsv037\" ],\n      \"countryOrigin\" : \"vzkenk4yvl2sab15tac6z4ccg\",\n      \"id\" : \"zkd2\",\n      \"countryOriginAlt\" : \"afii9an6k4y99taqnl3slndcvwsnlru77mqbxzhxjiofziq6nkcfbezd3qiwebts35dt9ua7iwnfknu9ovsihbjxexyhfyimuutlup9j55b2040jj6pcb5u6n5e3aq8aqx\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Gayla\",\n      \"lastName\" : \"Kling\",\n      \"score\" : 66.0273383652494,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"mrjo45l9kfziok67dor029wtad6e6760812n1wrtan220nob54ngzeyckfg7soagbzjuf\",\n      \"id\" : \"5e6k\",\n      \"ethnicitiesTop\" : [ \"yznu1bhqmxvvk3o2vn644nnkx45\", \"hcnf969l2ha7ui31w3fdr5ho6rdecwk3v5vcgkbud5hb7jdxn4t0xvww5bsgip1ws7kt2zgvhr1ksivn8stkw8\", \"kngg6e333mn0w5rtkywvsyv4kflfv7pi4kvoizcjpfp3n15dnyz7n9zsm5swor7t3r3d8o09jka7gxr1u1u5eprcpwknfpmikfc19u1cw6yveifvxvnxewfwhwgl4yhc3ozhd\", \"z2rfv6rsifh419tr2bnodm5hvzcqht2535xz7a0sdl0t6l5rn8vdsm4q9oclry4ygtryyfn8vtc6f71zyh0itefxn91lljy9vztjuykyk0tzmp3615zsnxnsm26ntlizbuqrtbbwehvyptha0kw3khad20x6dc3a\" ],\n      \"script\" : \"wn2mhan2efbp61ejykoddvhbue0k07a0avjgm6jur06buwre97nuf9utt8vtra4v7\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Bennett\",\n      \"genderScale\" : 6.872252601317972E306,\n      \"lastName\" : \"Osinski\",\n      \"score\" : 13.241500970010033,\n      \"probabilityCalibrated\" : 1.063846788735532E308,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"t206\",\n      \"script\" : \"uzq0cb29uhr7u60ots2b1tsi\"\n    },\n    \"id\" : \"83p7\",\n    \"script\" : \"2lglk6ezt3nplo5rbd6c2kdlkyosmprhv4vczzkblhhggolib0z1w47oaqobwifiynyxkyn620wxm6rnebmy5fow9w4nrv8qawn7jefpful\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Mayer\",\n      \"probabilityCalibrated\" : 8.035494821736386E307,\n      \"script\" : \"ffzeo337fnjexx8nl439tobentqagum5uq8myiky0vzmyldh5prl8ohqfqekbn4j7ccyvlw4em3\",\n      \"regionOrigin\" : \"gq4xwppydqlhyfpyutk2xa7huqfz2pfu35aab0accgf4hrj1fsqjv5npnzthk24uqgk1o71w44dyvsvvu1t54xd5szuxnal77wayrockyt5t0s17xxvnpd249q67z8xzodtz394uvsnjr81linsa5yqtqh12awh0n2wqd0gxtolxl\",\n      \"topRegionOrigin\" : \"3mikrgknefu\",\n      \"firstName\" : \"Randolph\",\n      \"score\" : 47.52876646248899,\n      \"subRegionOrigin\" : \"uw7dqmd3ebobpeu9l4t9juykigt221yg5eywexuxyaepwtu8o3sit8121i9mabm1a4hb7ap7l4koubsexefle1wftobue63l\",\n      \"probabilityAltCalibrated\" : 1.5554401131512894E308,\n      \"countriesOriginTop\" : [ \"tvoiuqtjd7ehaw8zkdvgkwhnascnr73egzxxx4aqx4q2x4ozos8qnhlz2d3287g3bnreo9qc6y4ehic326z5b8\", \"biaqpfdi0qmrc2o41rv1s2ectbp875w6t3rjjr2354gv51f4z82fytz13kekpm8bthujbyose9pg141zad17hica2abaxq1pzhe7iphmp8rxp5h9wp\", \"1aamaud4gypaqb4lymvc9ngr7v544e7dwvnomk3d49yic8xt4r5qo3ic4pnrgztfnhjkp6qyifx186lm9zn0i8p2wsm6pvo8j80tk0pzyf49jh8g5zhujnc2oadha2hcwdk\", \"xfrprcsmnxgi7vrgk0a62ehyp3dbsc6gee92c9mtio2s6z10ng1czthqln60yspu3br8rw13srjwx35hl4qxmmd4pu1gjucfa0o9bg3i\", \"gqma15fgs8bjtohn48ahlwe41wrmuplpu2b99cmzt8b0rvojpk8am3vojefdovc3uob0of2l8wk2u28do\", \"e28u94kp5bgphsg076q0ug3ia4okbt3hd1qcz0fdm42b62glojyo746hh4m19n40v4l041vronh4mtxhfa65rrr1entvzddeogi6tz6pec3w03i4vsstnhyx9rz6as403p7ecuxozbfv8gg3gh2e6fu5mumudzely3m4sjcz\", \"4ds9w\", \"0bcpt6nu2lt25cp291xb6hry9xzzq3evth9u5mklcdim50q27k0c5q6ooorl1\" ],\n      \"countryOrigin\" : \"dlde5\",\n      \"id\" : \"5hr5\",\n      \"countryOriginAlt\" : \"t4unv3utjr89hyqqdtbs7ase38vz3crjleie\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Tyra\",\n      \"lastName\" : \"Crooks\",\n      \"score\" : 37.83563789833928,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"a4z7zhu07bcutl6h0smerskz8yo7qbqfjmhjlgso1xve6exd0ua4tqnniuzknqi5oa6x3ap93hm9oozninso\",\n      \"id\" : \"4p2r\",\n      \"ethnicitiesTop\" : [ \"p8td6ujovxtz88nwgzpk263y9kvv4h2mpcwut5px2ncmee8bcbmuy9lqskd3zxgiq6kavwxlszfe49jd\", \"30r95d0lrhnn1fyrvg122hmznff2v37kik7vviqzw5vddjj8qrs9\" ],\n      \"script\" : \"enye3rxzq5n5zk4r8mxqyklqnqsk3hce039h1tsm4ahln7gyky1t6mjdsvouuqxpv0kk8b3nny\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Werner\",\n      \"genderScale\" : 1.5544673633259641E308,\n      \"lastName\" : \"Kshlerin\",\n      \"score\" : 68.44875093717894,\n      \"probabilityCalibrated\" : 2.0780724439199955E307,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"2537\",\n      \"script\" : \"86raif7ss1ead8ib49ji31q8jftff7elrlaw4r6mdbozxxkyoltdnuwx5i49s21n96wxcb7vcd2nnvxd1p8cs5uepvakt4ur7m6821vuaq1l1pibcimjkk1cbprvgvo18lvoy6xneq\"\n    },\n    \"id\" : \"90i6\",\n    \"script\" : \"dnu23o7patzw4ktqav3oqouwqjjntatztefnmg1etfb7laecj2op457r522jihjddwx6rral0txxw4f5pzvfl0kvqozk5abroceb6ete1\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Hermann\",\n      \"probabilityCalibrated\" : 9.438745588682454E307,\n      \"script\" : \"q7uxly8n5c2p1iwihxucuhhn5yak1wc47zx9xxdnb8ndays32gitkni9hx29ynmx6eerpou6jx399yuovsd5gf957zj8k5dni7uwfuw7v1qn2v5p95\",\n      \"regionOrigin\" : \"k1atpurqubrcr56mywfckbkdkxq31wg5loe3skvdw28qyl0obpkhz2ggeo0n9fupnci04lcdwnhgtpv7fkrblpv2xbe0yckp67a06d9qmdwpxghxq5lavy4sbqvv78m1qgivhkjpaskn0c0545h1k0sgar3fllryb0r8epaok1hn2ks7tg7t13jsk4bhc48q92kvk22h\",\n      \"topRegionOrigin\" : \"8tjn40ydysy08lyvk4yx9bd5wdj8qvdylq11vcrfzmqyq3iryae93d98g4ua52cu63pk2af4yahfel54zwrwopdl32u5sc44zi7s25\",\n      \"firstName\" : \"Michale\",\n      \"score\" : 92.87762361251207,\n      \"subRegionOrigin\" : \"mya0jus6hi4xbr4ulfie7bcq44vvdjw2mdymjs995mwo7gb\",\n      \"probabilityAltCalibrated\" : 1.3110967785005744E308,\n      \"countriesOriginTop\" : [ \"m2s6y3nuqa1xo8to7956c49dj8xxe0gp2xw1v0nqv7otrcme6l51z8786zf96t2gerigilg69wl21upu8a5jyioes4\", \"9jzqg7j4kbbf3nqsvsw\", \"rrfa76vn1mcghzt1uwr8tbgim0bbjid0wtv7ys5yvbzys1on7jbx0hcxijwaychndz0t8q87u0oa1spg5cnl6gzkpbxsmloapo7o88vghtb79b3m1if3ou7puyg1vw6txocv5em35b1uczrf1d6g2l625v7exizk4jaakvp7\", \"9nd5rs35h3by\", \"isjrcb8h2a5m9kk2y6zamaxi78wtg63qsxol9ji2tzxeylnd2jbxa1p14vwtgssqbrp1wmm59xaueygat7aoxlccgdo2xt2x0y2sd7y5b55ytjziwt6486aat3v5q33t9w31j4miz6122nn\", \"6umteyrc7r26usdsmz7veu9mzc94fxe1jcmxvdokbohpjd2wwh0qut5xluzd4mdz77jl8urntend8a9dnt9nht3tjkd5go18uug1qmrxrdee8nb2or5fe6\", \"orhh4fccczw1bkfnvxjmd820sn2cpwp53hlcmshjzz0omk41c9s6hzbh5w86nzlkf4ov9tqoml4u701bfgisubl6cdve0dkw1vhlnl6\" ],\n      \"countryOrigin\" : \"arsx6nj1yanehh1v8nw456788k8m7dt9gqlixuhdrnr0cyk5ozyzra276hgajbo76v6w2zldqitvaxn4a5mtl9la6y9dogsdlpfy2mwitmlsgyyherx44w1zijswb7nev440pem0i1uahi1o\",\n      \"id\" : \"mg14\",\n      \"countryOriginAlt\" : \"2p6yfbg5epvoeulan6lbvo7vsgo076\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Towanda\",\n      \"lastName\" : \"Rippin\",\n      \"score\" : 73.64389133183177,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"975dk3wefbiuyf4i7dxymb2txek5p4r1dm8dm0nk4bzy1ca\",\n      \"id\" : \"aj1f\",\n      \"ethnicitiesTop\" : [ \"cq9cxfgdym9y32xksgcsmdz4da6iy8v15t3msdyukhfbw4ucvw5bww2u28jz2d5pw4v7yhbc91rnxdu68qejj31ssugoh0kqnetqz82\", \"30dir6443qolvuwtkr8vmwvhnr73fu7nz6qv2uec9nl\", \"u929n5sadfkaapefd865atd7z0owtz5vdqq2ixo2h7tsle23x0x9j17wikxe8cdae3gmyecic84m59w14gbaeoqjq482ayh41y4emg0e9v322aa0z6ptfyx1y3jufzwhekq2tjlmd04qs5jga6cz70plvys8f5a1gj11tcvfghgnfj0l1\" ],\n      \"script\" : \"8h883ordfzbrm7902iaipeiivo7fpfcbcvdnhdkh83qv7ugtbieo3mh7ef504wicc2kvgmnk2gddjx6rg9i403\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Tod\",\n      \"genderScale\" : 8.707562245409955E306,\n      \"lastName\" : \"Howell\",\n      \"score\" : 32.95824359483218,\n      \"probabilityCalibrated\" : 7.533130441998817E306,\n      \"likelyGender\" : \"male\",\n      \"id\" : \"592p\",\n      \"script\" : \"gh5yosg90lmodf0nz2vedrj3rak9ekw2qo5uuoip2c96x3hvnzmux05xlhmapre5rqbs7bq2sjbbhz8swdom3286rv5s3std59y8uwl7hg805urry1mn2g498v9guaks7goqx3y5pukwaslncbovh6j3iftp8ue2r2funlpwhl2na\"\n    },\n    \"id\" : \"lj0y\",\n    \"script\" : \"wx3me6bj6gadmn6bjxnmd8twuuk2d08qio3jio3sdcd1dbc95jsdc7cmotf47xbel9eb21ygvaw65rqbjr7oi2kwiw4v7c\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Medhurst\",\n      \"probabilityCalibrated\" : 1.5712295614364776E308,\n      \"script\" : \"ulnc5s2p7sw9q6kclmb22nflo9nrbnxc4d5ctlr7ytu7z8h0u1njzyrgsnppnvowcx825zffk3dygfuaa7m7z4jewnabj7kdqsfhl1exkz9w3bqmn62\",\n      \"regionOrigin\" : \"hizfmkkyh9fp8vgrufxbcb\",\n      \"topRegionOrigin\" : \"9iaqwjo9eqw3vp16dt3b\",\n      \"firstName\" : \"Kendrick\",\n      \"score\" : 22.41792583044774,\n      \"subRegionOrigin\" : \"l75lkx3ufcu81sddr1iz4bmec2l8gxhifgvpcv4b7ptj8vxjobg941hm7e6bjiw2ssn9we3e8qg08451ydrp1mmi1voec0l\",\n      \"probabilityAltCalibrated\" : 1.6153740376887397E308,\n      \"countriesOriginTop\" : [ \"gpz0aiieba0sr367nqs0g6i607f92xuh80e0qs145y11i2wz2kup3qlklktkef2avwzj9s1xhdlehofufj0zbrzhg2c8oa59rifta3l96rszfaze2t6pnk7j7lkz3n87qm0hmjuij4i4ona3foo1jx2a0llowxj3hvgdkq0xls0y5vywxti6c3jrpl4\", \"2j0uar735upzfgw030jzweomtjv0hi7rvs1i1pwxo1o94l316vui8ac8drqav9zxx77i98rgeagxz3eo95jdw816ed4x8ohb9rcnxvipnz4rzr860k66pcyrwiows5oewviyx2ngv9iftwu7rojqp7r4769\", \"x5xtl48yacg5srqnwfapfm6jkvyde\", \"tiioqmh6yjec97yj9ifksspiyho4kwrzok299yufnsuapeupfcfdv45d02gg5azaglnwy8p8vtbhscl0toddawox7dk0mw6ils93suptuj33h4ucf4jgx6q3it8w5ryiw2w3tubtz48f6v58c5zb058n24k9l\", \"rdxdh7ty\", \"upm6lsdymiq4vuludeixw6ab1ey4c82a1gcmhxo7vyhu29x7rzxkz14ot\", \"7wwk9vlp4\" ],\n      \"countryOrigin\" : \"j2lip5mscq776749h6ttl2lq9lgwmjoj3ra055bebk1artpw78uvm4jfq3n17nyrog5mzizi8feuqnl\",\n      \"id\" : \"rn3i\",\n      \"countryOriginAlt\" : \"4fvfp9rzmkpexunhonm48n5xdpcmiyxb48zbmi75b1kibf025c9xe7ql8xqqxhvdb20q1umxsc9z9abvy1ugo93\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edd18848-fa56-4c73-8088-b4ebeaa54f88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.348331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch",
          "schema" : {
            "properties" : {
              "corridorFromTo" : {
                "description" : "Classified corridors",
                "items" : {
                  "$ref" : "#/components/schemas/CorridorOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchCorridorOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "de8c797d-5588-450f-b30e-1ad6af6f88bb",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridor/o3f1l3gf6lgp2kz01jbxzb8h1zh4ka36j0thvueaxggfrweq4l91tew6qd6x3xdk3osvvq2yk7m4bb4lyoq9kg4w3aiui87xdrfplrvspq6ffswd5g1nva48xgacagu1t5kh1yy30130dzaay94llrmu31d5wcd3a6h23adtababy/wgoxoioaid892zmwt83ltjeh7gchey8hh5lchk6wt1ufjxdg0vzg7ys0qu8b2xm2/opnbxn2bb9yizlyw4mrq2q07wchzq85vaapppyizjr2zk7sulbz8r5e1j2pkbij4ln03iye32e1tur0u6i6r7j6derbco5pgpd1waj3s7az0mphcjger10cna4ijjn2jbsclzhw1ydjw39n2ko1it8xjiltcyi/9xrll2jm1e3t6fmozuq1kvtrbzsv9jc0fn3827h751h7jiwdp3cm12xu5jtvjhm86tbdnhou5yyq7wft5fqvqnw6ha7wivopx7t76n0zbs7hzfc805hgtoidmdghowejs2hn0mhuf88ub4s25u9/pkge380x16a3us6rje98v2j8im0l6nn9thrdcgki56qv9jxfrdyo869yowg6fojrjb6q25am78zmsdgo7n4s4xc9nfn4v9tniqltgnq5rkxx166o2s0kx0ipyi9lt2c1irg45ow3incg7iqdptelr3tv99xbr5w5gc61yeg4js3ep4a9blanoywdd88ar49br4/ezaw7wqaoucg7umja7nyudpc77pwr7weqctfhlaci5u3j7gjxox2x3oehlzy0fyk76cs9e2uszgtm4bsjxp2zg4fkom5qwftfvpossk6pkmmls2mgi5bmke275fu2vem4",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "de8c797d-5588-450f-b30e-1ad6af6f88bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.34395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    }
  }, {
    "id" : "893f2954-106d-4a08-9b68-ecc1b198530a",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridor/sd58s4opzuyugsttfm28xoshiz8sg/ia3odvuenrevdtj40x9hky57bpo5bk6abnwt1jnv1xu6xtaryc50i00g5q2jvfy6z8w62lliequozoo55da1obupokllb7muxkbkt956v153ye0h4n3hc98dcyqqfsfzbkljgfu7sbl3wzarcwe/wog0bi4rha9fj5vwcp4nu8xa812m5allqlr2w1zpdmop9iys5u09bcpx5as41wjk6059nfcfk1j1dy7fyjhm/aiz20pe8csxysemrejes/yhpz9kzk7ibhrsz5p7q8cankkmqvhjtx8by1lbit32adxlu6q5twjdbpwfauo2vjv68rwvlzo1vzqtpxsmqly711a9lgx58seye6p9y2mel7740h42aivhnk0yv/kstpljzqedlbw0c4kgdgp7xcaxr7tzz3gf0ptsk7sowl1pj7nww4157ql3erjzthoh4bmv1kxzg88s1hi5pcp6lyxgdjt7b2uikauoocg2rdj2wlpzx4xfq0d6jbp",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "893f2954-106d-4a08-9b68-ecc1b198530a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.343805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    }
  }, {
    "id" : "052ddb8f-52c6-4aca-b479-68515933e35a",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridor/a9kzh20uwq0uorspmp3eha6ow29dpys3x0vn0rsz25fj0gcrp1aj480qnw0h2i1laielieqov9jusvpd0ik7856625z9hug2o0z09v5oy4dgmd5lf086c638qz21x3adcw8hzhpok7d7waz91/3ays2nf55czwhm04e8zybpt1nron0jo7yp4zu30ypas40xl3h24jr3l4cuxngmf7yqlzjva2f2mmg8y17wzmajyxoagzvfs9n5mq8khsza5gzhtfv9nv72uegene6tm8g37qv139ntgo08qh2bti8q8wfg8r99ul/iz04t0f1vj3wh6y39utl95ogbn0m36x64stgfkvtbax4idgvxzxid/4nwzx79rpzdjzzpvbn4nbnm715lzs1z23xzjvw6x4q6xkdf2gtiqw3ng14vsx6cs3l116n97qavaai8gc7ioaqlmpbczpo6099zt/ld2uc5fztd5prxjmowap6msh6q84hbjq1r7k5zogthr3bo32ykvq9ijz2nz8hlalrihpsunw9bwpgkimh/ejh6nxk2uz668cyosq7trawd3if7wwpq9zjty2liihjassl0n619yjoc7eyonjv7wlisc4y1u5c8ov7c6ert5j60c8i",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"FirstLastNameDiasporaedOut\" : {\n    \"firstName\" : \"Marth\",\n    \"lastName\" : \"Stroman\",\n    \"score\" : 48.875146821108416,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : false,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"o6ory7uof2idjannurkxg4qawt28i8x6xbbilme1q84c65smkyskwhpt5nd6nzrpr95f0t1fqztw5dymd8l93bir40lredi5n4u7fsg3\",\n    \"id\" : \"169w\",\n    \"ethnicitiesTop\" : [ \"43msrijwct6ddt3drcn53jl7fcwuo9ksa3naqk1owwb9hoysi64tt919isfsyoat3j41tnuerwa7ztd9dhv865gv2kqr70jjp3eaopq6p82k60foc6sedbddnasysqch\", \"oamgan8d6e7r16rx21x5gi1c0w4q2cyskedhaate1r7qoc1ns5dy0pisd2stfba5qz7abba90u8ecp13b8mezwyubzu31v32yyclliqdff957p7mrbog5kt8vq7muccgimowtvaetwyx4gcvr2vdrrca4xdkffqhcozw9mk47q2yv2o6ogax7z6av05r5isz9jkxj\", \"k13x3lul72ab0fqskbut2tw1atwogotljhpm7ycfj2ykhhv3321ek1d3glzaidsogf\", \"m4yx9fd99qmi5a0t0wdsskbna4ftk7poso669p5w1qkz8wa1b266h7jdgwbiphr65o9ewr5h9oi98mw5cm38oks28oke1af8yial4o435kfvdl\" ],\n    \"script\" : \"dvz841dmv12f8dd01e85znj80ci782n2g6i3ktvusiup2g0xu09nezip54vas8n1tsrrsc03vrsac6d8na6xjr7zrmwxac1pmvxg36h6sqptsgy2mkfyufmocg91s5r65wpyuieq7tsqw6dbhxjfmgy5a8j54snwtcyht1wp\"\n  },\n  \"FirstLastNameGenderedOut\" : {\n    \"firstName\" : \"Jerlene\",\n    \"genderScale\" : 1.6951312593981819E308,\n    \"lastName\" : \"Jones\",\n    \"score\" : 47.39099995119216,\n    \"probabilityCalibrated\" : 9.51190610158274E307,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"3gi6\",\n    \"script\" : \"ejl3rzyu8\"\n  },\n  \"id\" : \"222e\",\n  \"script\" : \"59jbtn7mf8xpjg1xcyrf0nfvchhg1ppby6ifap6c1y0ln9lk9ajowew606vlbzu47hhq7mul1e74rs4r8wpq3lti5rczo9sjedj8z8d57tyzdq63wqhlfg2zypn4jggkj2usk0ucwum1oksivbvc1yzdsuhxmcont4rfwe1ig97\",\n  \"FirstLastNameOriginedOut\" : {\n    \"lastName\" : \"Hilpert\",\n    \"probabilityCalibrated\" : 1.2932967395101283E308,\n    \"script\" : \"rts5pki4bgyep5ls6y2e5gvyj7qjkth77j1yu6mhjvauuu70yu7h21n1p043jeumd2as8js6x3mpc85v30y4lxwn9kc652xplcsjq51qbkki7wac33n9z\",\n    \"regionOrigin\" : \"k0fmcwul7mglkj95pkrg8xbb1um0onja0uz4x4tcvlsobdmjr3zmqu2zunkgfxf6t8b4t5depxcie9ud09rshthrubzlfcwmuv1pkof1grwiprc2yerm9fuvdn8qliwcbq58iypz9l3hfm4t04hn1zbzkabz5c17llccy6t2fh\",\n    \"topRegionOrigin\" : \"p5m41bywc6a95qvnhct0mhexlr85ub8ixulkk7qtrfzbup1j1x4vmg17ld9rs415foaiymkwmk38youtiwza34wbfnovop3v0pcvz75vsjxwbi2pot601ooq63roikixnq4drboj22qr3vpy68kbtc4wjm3aytrytb2ia164jeu1w0cdxkjb1984t9g217kg5lmpp1mh\",\n    \"firstName\" : \"Ocie\",\n    \"score\" : 90.36125607112304,\n    \"subRegionOrigin\" : \"q2a8fy5yrkqvo73fxtcsjdqkk9wewxty84p4k2fh2tcq121u1n57reqxp3a35vh36f185hr22upnnwqeijd1ene7l8bs93r5g5dt3fgjuo\",\n    \"probabilityAltCalibrated\" : 1.4516662451129126E308,\n    \"countriesOriginTop\" : [ \"ad44gljn2ot609rpvjoafpgfk299lfeniw1f7273z8wtvxz7knu1hn\" ],\n    \"countryOrigin\" : \"vo4rzyfkz4lprrvzwulrrp9298vcp655aw01twusvz7yjzufiikfwhl9k98z6cyoogfhvl897o4b10yeeglhs4yte6jgt55c2t1p1lh8vzudjqd7rih4hbkci0k78c6sc0ykudlg0zbj3rdbaubc5g4uhhq5xi6sljei\",\n    \"id\" : \"34c9\",\n    \"countryOriginAlt\" : \"hjtkqdwow0tk6bq9wanhprtvs6xw518qdvms23nxreiqb81vw4aiyalb5yf79d746b0rxsed345gw79eyb8k03f86shps3h8be6p0uksxvny1ux4gn52ri\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "052ddb8f-52c6-4aca-b479-68515933e35a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.343609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor",
          "schema" : {
            "description" : "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)",
            "properties" : {
              "FirstLastNameDiasporaedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
              },
              "FirstLastNameGenderedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
              },
              "FirstLastNameOriginedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
              },
              "id" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "CorridorOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "25434366-0228-4e3d-9c1a-9bb8903dfade",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "25434366-0228-4e3d-9c1a-9bb8903dfade",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.342554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "6fd92503-3159-4b3b-ad6a-60d49836e723",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6fd92503-3159-4b3b-ad6a-60d49836e723",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.342534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "b3b8df94-935d-4a36-b9f5-851ee962c530",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.2091757998090414E308,\n    \"matchStatus\" : \"563p2ecz1b2xuv01yx15hjn3pa805bq9hmen3yp5ev3z30luehiav2n9ybt2cs4eg0e4ahwsrat9qtlgc2e8bqrd96mqbqgm14e8iaz6s154zuqvx7dcvr9fs5u53mqm4fogaf9l\",\n    \"id\" : \"6n27\",\n    \"script\" : \"osk7hgaquq44onps0t3ir8ry1bopiij7auowrw2x2cq8uw2htc31x9ili7s3uijf6495p0u5\"\n  }, {\n    \"score\" : 1.7348655358562606E308,\n    \"matchStatus\" : \"leb5ye1r2tlzx5yxwxac2i\",\n    \"id\" : \"5ic1\",\n    \"script\" : \"6ve5io1igdoqc3m1hctqtlyswq1vib7abzlb9lj7y6ein986cfa4lwe8jkjv9vv8qutbkqz4m02rvgdiwsdqgdgwik5z3a7e7u0fvsnvxzjrhw6snve7dgyfaqqzloqdatsxb6g0o3x40y79mrpqhl968cqziy2li4snvc5mxzcfw1o89\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3b8df94-935d-4a36-b9f5-851ee962c530",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.342498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8d099455-5623-48ab-a6f4-804bd9f4323f",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/3cicsmnvxjqglwyvkes62a43mxgpc0s901qitlw5br9z1fswwk10hle4mmec9vu6w9c0gptjdfyq8rkma0dk1lrxkqgqups0shkn2wrnw/ijoj7j73au2vpuajo4espy0i1xnohifsvjjmx68ht1238x4v0i5l1oulfhgoiqmo838akwbnoexxorhwuqotfj3xoj93635ygs9vior7o49rtxwcek1fnqrnk9ei2nt5g1g/Porfirio+Streich",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8d099455-5623-48ab-a6f4-804bd9f4323f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.342158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    }
  }, {
    "id" : "d8478a34-51e7-4772-bad8-4f4d969f2de9",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/jawdg39svfp05xtk8y1snqb4gcywx0d6cj2lhx0u6wxzzd9g3ks1giit3zh58anymcrli479feczt3yda5f17lb9jtxtbtp9ilh10p37zdezxc9v95tqkrmo/hj8oxrmdz279ac20ewswn0ph6f9z637zh8f3uizxjzw8vdk0yf045at9tkopi9alcrq8awya3qmih7rxienvt7ro7mi7wv6jjn23zf5kro5v0q88ohdnn9k9rhs35gizt2m9j26mj9mrw63wjn137ppgd1pw0pi8nt3orpzgs099hz550u/Lindsey+Herman",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d8478a34-51e7-4772-bad8-4f4d969f2de9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.342052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    }
  }, {
    "id" : "949291d7-c6d8-489b-933d-b21bf546aabd",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/515wmwu80vzqmy3bii8d9kodh5mpqui0hx5jwu0lrcabv0ta69boa3mx7unq4unne7knhnfmwliusnazssyk4no0p0u7dcp3oxuuynosfey2qd9am4bv0k9dyconoof561ntmvb28ii/tc3oabdkab08g3ynbolslef7hrgsnlrnftxrzuzp3vkco1oa59npba5x7sibv4br6ch04r6blquuxu3nyi9uo6l5zy1u2w27mxa55btf287r77inz03ux2bmihpqr/Elna+Hintz",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 4.088846077741574E307,\n  \"matchStatus\" : \"kn86fe7prbmdapitnk7u4pvlk23kjsdqhzil6g3b5dsxttdt1qta31lmmul02te77cc0zz0wdmzyxvx8s0oc6gycoqyftlvax8qfpi5oem60rn783yxpvloiqnh9o1jrk2smj6b6peyfsny7n\",\n  \"id\" : \"5why\",\n  \"script\" : \"ohh00ncke69r6qqc0lfptaalzqvrqlcqjx6h3nfe575my8pjm0p70kslyh8iv5y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "949291d7-c6d8-489b-933d-b21bf546aabd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.341929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "f55aeebe-5073-4f12-944a-4cafe7ebc3b4",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/xgjd670gg7do5qplpkn3hh5okirzfoqlvu8x7lpj9rq03eeqmbqgpcn24df7x7dewjir3a8vpge8lpn9k48debpu68ok8zpz0t1v7tu0pihfywb5uba61fwkpieu9lqguvn2lryto4760a2bplgz0rie9vcxc1sg7civ6ydsn/cuj9y97d3fyz2almqgu5sq32k5aluzq3kwhmczxuqt654uhy4kw3kga3mfu4ix8aomu0qf7n3oql0o7ost6qz7b1rf/Polygender",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f55aeebe-5073-4f12-944a-4cafe7ebc3b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.341579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    }
  }, {
    "id" : "ac978214-b0d4-4d14-a7eb-5b53e1130472",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/yi2aq0soricopubtc741yhyfn2cfo748kamy7tyes8ena5tojd1k28omjyedh0wt4yslpr28wzn6h65cj9jk1avw9kpiz5iloennil5qp76633p0zuy/ikr5csdlcx2el16evhpldbz89f9xr0c24l58uhgnocjdac3f7tlrl1iog8chgf6uvkgldis46zaa39y9vdfwxb0r6y8ox/Female",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ac978214-b0d4-4d14-a7eb-5b53e1130472",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.341523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    }
  }, {
    "id" : "b8d674e6-104b-4455-af46-5b0dcfe20502",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/08muu6a4l3ap8j57809oougfbpyjrelzlzdgd17pf6oiasbp7tvpub00sxttkjvnb7oin7e490d37eo9tit1txzmueoq639tbgl4cq75tcgd01s28t6uspn8emkqaqbkhj7575i1ov1n4531bhet0riymkn8ofv1mszqsruqzo074psnmna50v/gryxbumpwnklxprgd/Polygender",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Jarrett\",\n  \"lastName\" : \"Beahan\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 5.09290080271771E307,\n    \"candidateName\" : \"2022-12-05T11:34:09.34103Z\",\n    \"probability\" : 4.650374984701926E307,\n    \"predScoreFamilyName\" : 1.360486768805187E308\n  }, {\n    \"predScoreGivenName\" : 1.0300927965507802E308,\n    \"candidateName\" : \"2022-07-09T13:45:09.341089Z\",\n    \"probability\" : 1.0979781215429588E308,\n    \"predScoreFamilyName\" : 6.451045129607823E307\n  }, {\n    \"predScoreGivenName\" : 8.244788841071763E307,\n    \"candidateName\" : \"2023-01-27T10:37:09.341126Z\",\n    \"probability\" : 1.5989470857344956E308,\n    \"predScoreFamilyName\" : 1.9894243354139374E307\n  }, {\n    \"predScoreGivenName\" : 1.2185444618713391E308,\n    \"candidateName\" : \"2022-06-07T14:08:09.341166Z\",\n    \"probability\" : 8.824328906272792E307,\n    \"predScoreFamilyName\" : 3.767319498091821E307\n  }, {\n    \"predScoreGivenName\" : 7.432917232646762E307,\n    \"candidateName\" : \"2022-07-28T13:48:09.341205Z\",\n    \"probability\" : 8.886265127968862E307,\n    \"predScoreFamilyName\" : 2.8544195205894553E307\n  } ],\n  \"orderOption\" : \"t4y38c50f1k6u2gigqfntystlm2nzkjwhz5qv1t8rxt3bxvsazx4me4s4olkzbfw2xqjzcyothfebp1bga1dn53mrjginyjvdibdm10k28f7lwm3hi5lknyxzwe8xm49px6wr7o3x01vblo\",\n  \"id\" : \"6s2e\",\n  \"script\" : \"nuqhvnma49awoac7x77ggtuxbdqvgm879vf1f2et4pi7gw3bxr3yeanw27xvu4bcdbi2hz8wuxg47orn15dvsbj8xqoe2v6gaitzxdz7bdsflaaz4zm2jbum9smujqtut4x2zgfdb5up6b3g7uadh2s6a3kuhq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8d674e6-104b-4455-af46-5b0dcfe20502",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.341454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "732b3b2f-0d5c-4241-9d3e-78d4c478eecf",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "732b3b2f-0d5c-4241-9d3e-78d4c478eecf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.340903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "8f1293ff-539e-405a-ba0b-b4f71de2a093",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8f1293ff-539e-405a-ba0b-b4f71de2a093",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.340883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "8f13256f-3093-40c0-bc93-5cdbfd39d493",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Kraig\",\n    \"lastName\" : \"Volkman\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.0226350745641765E308,\n      \"candidateName\" : \"2022-12-21T11:38:09.33861Z\",\n      \"probability\" : 2.152689654252933E307,\n      \"predScoreFamilyName\" : 1.6889710302742756E308\n    }, {\n      \"predScoreGivenName\" : 2.460248535483051E307,\n      \"candidateName\" : \"2023-01-31T13:24:09.338672Z\",\n      \"probability\" : 1.3893271894251706E308,\n      \"predScoreFamilyName\" : 9.571552681337255E307\n    }, {\n      \"predScoreGivenName\" : 6.007246659169145E307,\n      \"candidateName\" : \"2023-02-12T14:01:09.338724Z\",\n      \"probability\" : 1.095059890904364E307,\n      \"predScoreFamilyName\" : 2.6143078610395393E307\n    }, {\n      \"predScoreGivenName\" : 1.6843422352140534E308,\n      \"candidateName\" : \"2022-09-18T14:03:09.338776Z\",\n      \"probability\" : 9.247589311220977E307,\n      \"predScoreFamilyName\" : 6.617715093545144E306\n    } ],\n    \"orderOption\" : \"1g9ryhxl68411dfgbnqde56l251wx74l00c\",\n    \"id\" : \"0258\",\n    \"script\" : \"mrz88s0su8f4fd3yt5q7h1ppxbmwnhpqaxx98uecfdc3ydsj5x7yu1dzm1rj6mgpv0qvyd1iuor7z0aozhub1krmr3r52a6x0espw48r9becmftdwxrvn97m762q9uwrtipfzs3ab0uin4md82a108eaqion\"\n  }, {\n    \"firstName\" : \"Mariana\",\n    \"lastName\" : \"Erdman\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.6848151519419895E307,\n      \"candidateName\" : \"2022-04-27T13:31:09.339053Z\",\n      \"probability\" : 1.1802657684540868E308,\n      \"predScoreFamilyName\" : 1.1530458732283391E308\n    }, {\n      \"predScoreGivenName\" : 5.890390667543378E307,\n      \"candidateName\" : \"2022-11-15T10:48:09.339113Z\",\n      \"probability\" : 1.557960266622461E306,\n      \"predScoreFamilyName\" : 5.625994802924064E307\n    }, {\n      \"predScoreGivenName\" : 1.3103658764030714E308,\n      \"candidateName\" : \"2022-11-05T11:12:09.339172Z\",\n      \"probability\" : 5.778400841856706E307,\n      \"predScoreFamilyName\" : 6.811217964416625E307\n    } ],\n    \"orderOption\" : \"nhhhtmhieerxhojbh31axi3g039gdiy5bue\",\n    \"id\" : \"0261\",\n    \"script\" : \"5ikrmsz8bb58yrvc6va5nzeiha0vbqbj6ffezh8mxu6kyo3xijbe50xhevinwrx8tcqmzgd7iecxu1hb1qh2kml6gf03j6vwn5hbeymb7cykhiwypg5t4m4bw4vzg\"\n  }, {\n    \"firstName\" : \"Suzanna\",\n    \"lastName\" : \"Conn\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1669768608308997E308,\n      \"candidateName\" : \"2022-10-02T11:09:09.339465Z\",\n      \"probability\" : 4.781712810171308E307,\n      \"predScoreFamilyName\" : 5.401662334846099E307\n    }, {\n      \"predScoreGivenName\" : 7.184727213232299E307,\n      \"candidateName\" : \"2022-03-26T11:18:09.339526Z\",\n      \"probability\" : 1.4720773364835598E308,\n      \"predScoreFamilyName\" : 5.257953593239929E307\n    }, {\n      \"predScoreGivenName\" : 1.5235671385272917E308,\n      \"candidateName\" : \"2022-03-18T11:27:09.339584Z\",\n      \"probability\" : 1.6136098643568598E308,\n      \"predScoreFamilyName\" : 8.780241954325853E307\n    }, {\n      \"predScoreGivenName\" : 8.05950843007553E307,\n      \"candidateName\" : \"2023-02-22T12:26:09.339637Z\",\n      \"probability\" : 9.733122703963363E307,\n      \"predScoreFamilyName\" : 1.4440085275834144E308\n    } ],\n    \"orderOption\" : \"zsc62ngl795f7c3f1tkqybkzgxnoli5vjpchevhoj41jhcuiearfu2g4zhoh5x1amxuqgy\",\n    \"id\" : \"c990\",\n    \"script\" : \"7pjly9des7qb4bdwkljm482jdckphbeb6l12u8syn745pzyxhorxbrm2496gysu1e58bxhayjdog4q6k0n9afqfoelw7h98mmyelnrfmcttogzzcu0utvwo9v2xm2fczy16rfme86cbpv6vjeh5i0mr0svef5\"\n  }, {\n    \"firstName\" : \"Elise\",\n    \"lastName\" : \"Herzog\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.477274901533261E308,\n      \"candidateName\" : \"2022-06-14T11:52:09.339835Z\",\n      \"probability\" : 2.2305650204757055E307,\n      \"predScoreFamilyName\" : 7.603066168226454E306\n    }, {\n      \"predScoreGivenName\" : 3.83028544804912E306,\n      \"candidateName\" : \"2023-01-13T10:31:09.339877Z\",\n      \"probability\" : 9.843762328460269E307,\n      \"predScoreFamilyName\" : 1.6034015203965323E308\n    }, {\n      \"predScoreGivenName\" : 4.649691680332589E307,\n      \"candidateName\" : \"2022-04-30T11:06:09.339918Z\",\n      \"probability\" : 6.801254510375871E307,\n      \"predScoreFamilyName\" : 1.512533345781964E308\n    }, {\n      \"predScoreGivenName\" : 6.474481653456257E307,\n      \"candidateName\" : \"2022-12-17T11:32:09.339958Z\",\n      \"probability\" : 2.562927909223887E307,\n      \"predScoreFamilyName\" : 7.520440375705062E307\n    } ],\n    \"orderOption\" : \"2l9y4aea3pymx8j8volvygq5pg2v5llpg3kc10b68kuiavn5vn51chfwlnnszw3f8lhao5nlss92qs0iz988l2y76tx52wyz1nsh4c6m69o7scc97f5aywaryedwtyo0s0anq10u722ei08xdsxemh3\",\n    \"id\" : \"28w9\",\n    \"script\" : \"razsoh3rjoatlhcx3t6zg59uyrcd7w7j4u8tl1cqo6689rzabv2a1rcgsag0w6ptpkofr65k7nv7jv4mqh8j18taluftgc2\"\n  }, {\n    \"firstName\" : \"Debby\",\n    \"lastName\" : \"Yundt\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.6897507079102445E307,\n      \"candidateName\" : \"2022-03-22T11:09:09.340174Z\",\n      \"probability\" : 2.621324173647343E307,\n      \"predScoreFamilyName\" : 1.5094302381028156E308\n    }, {\n      \"predScoreGivenName\" : 1.3935678810729647E308,\n      \"candidateName\" : \"2022-11-19T11:37:09.340234Z\",\n      \"probability\" : 1.0469663393626566E308,\n      \"predScoreFamilyName\" : 1.3934124731405667E308\n    }, {\n      \"predScoreGivenName\" : 3.645767831991974E307,\n      \"candidateName\" : \"2022-07-07T13:13:09.340294Z\",\n      \"probability\" : 1.3688358155163618E308,\n      \"predScoreFamilyName\" : 2.606690652747785E307\n    }, {\n      \"predScoreGivenName\" : 4.4388061105408543E307,\n      \"candidateName\" : \"2022-07-16T10:57:09.340346Z\",\n      \"probability\" : 5.255495866683359E307,\n      \"predScoreFamilyName\" : 3.1879921218825637E307\n    }, {\n      \"predScoreGivenName\" : 7.971734179386098E307,\n      \"candidateName\" : \"2022-06-04T12:21:09.340401Z\",\n      \"probability\" : 4.214574819341923E307,\n      \"predScoreFamilyName\" : 8.87368335448307E307\n    }, {\n      \"predScoreGivenName\" : 1.9637108283573999E307,\n      \"candidateName\" : \"2022-06-30T11:57:09.340454Z\",\n      \"probability\" : 8.42173660082319E307,\n      \"predScoreFamilyName\" : 2.5137890434976687E307\n    }, {\n      \"predScoreGivenName\" : 4.147831686709185E306,\n      \"candidateName\" : \"2022-06-25T11:39:09.340516Z\",\n      \"probability\" : 1.1876528779398596E308,\n      \"predScoreFamilyName\" : 1.1807970101353787E308\n    } ],\n    \"orderOption\" : \"o37qzytomkobge2k3fzi36bfiakv77mxwl8bzlscfdbph5jgdgtlcg3g19j83dymv2lhdfuih0ry58vnm968h3clnyla5ekkmhmia4ef404pk0nq0bgnmrlyg52kzd7swbe8c4\",\n    \"id\" : \"204t\",\n    \"script\" : \"kjaa02j2ck2am905ic2648adjriieqkvy9d3mh9qb3afb8dmkaa5bxutos2s1zoe687boxx3m88756d0v9hdsb7890fnrk5552yk0gosw9xivcloz3oyhs0u181v6r8vywqcnuw69f1o8xwhr6r6n3xiaysxfzwl26l612j\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f13256f-3093-40c0-bc93-5cdbfd39d493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.340842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "91a8c2cd-b810-47d7-958a-ccf8359f811e",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "91a8c2cd-b810-47d7-958a-ccf8359f811e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.338454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "d1bae277-f836-441d-9273-32c5f131713b",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d1bae277-f836-441d-9273-32c5f131713b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.338434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "9057526a-e529-4372-836f-bedb058a3cef",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Ronny\",\n    \"lastName\" : \"Marks\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.104879154353207E308,\n      \"candidateName\" : \"2022-08-05T11:34:09.335526Z\",\n      \"probability\" : 1.3523053341090975E308,\n      \"predScoreFamilyName\" : 9.784572983280807E306\n    }, {\n      \"predScoreGivenName\" : 1.5882401666238299E308,\n      \"candidateName\" : \"2022-12-13T13:49:09.335588Z\",\n      \"probability\" : 4.3760485503282835E306,\n      \"predScoreFamilyName\" : 1.5834987153187162E308\n    }, {\n      \"predScoreGivenName\" : 5.126264152918934E307,\n      \"candidateName\" : \"2022-10-22T12:08:09.335645Z\",\n      \"probability\" : 1.0430393676508274E308,\n      \"predScoreFamilyName\" : 1.0403851587868658E308\n    }, {\n      \"predScoreGivenName\" : 6.205757270650521E307,\n      \"candidateName\" : \"2022-11-21T14:20:09.335705Z\",\n      \"probability\" : 1.7373027645685162E308,\n      \"predScoreFamilyName\" : 8.111543772270349E307\n    }, {\n      \"predScoreGivenName\" : 1.531735714881747E308,\n      \"candidateName\" : \"2022-07-20T13:51:09.335762Z\",\n      \"probability\" : 1.6012483528850247E308,\n      \"predScoreFamilyName\" : 1.3511598599206082E308\n    } ],\n    \"orderOption\" : \"c9smsdizpd4n45akpgx6iepgggn9n6s49nvtnek9x5oujqdrkvqmumba8u1pi65s744v2fj9u2gb20tdassxcx8lk0093z6eea8yj5zjg4bfl0oqaze0ubdbuwtetn3o40\",\n    \"id\" : \"8c58\",\n    \"script\" : \"99sq337gjyh4zzkeivpuck16mwpgmfrzo590f1mgzw35951va9kge4qvnkmeuiaf1r8nbb\"\n  }, {\n    \"firstName\" : \"Laraine\",\n    \"lastName\" : \"McDermott\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.7482633234469152E308,\n      \"candidateName\" : \"2022-03-07T11:38:09.336026Z\",\n      \"probability\" : 6.631182555206367E307,\n      \"predScoreFamilyName\" : 1.5158947669064189E308\n    }, {\n      \"predScoreGivenName\" : 1.2107432196008057E308,\n      \"candidateName\" : \"2022-12-11T13:09:09.336079Z\",\n      \"probability\" : 3.482310105115471E307,\n      \"predScoreFamilyName\" : 8.377143987218461E307\n    }, {\n      \"predScoreGivenName\" : 5.225384080635868E307,\n      \"candidateName\" : \"2022-12-25T13:29:09.336139Z\",\n      \"probability\" : 5.009911107230072E307,\n      \"predScoreFamilyName\" : 8.547214529356177E307\n    }, {\n      \"predScoreGivenName\" : 6.364340733158596E307,\n      \"candidateName\" : \"2023-01-12T12:06:09.3362Z\",\n      \"probability\" : 1.8462186241407852E307,\n      \"predScoreFamilyName\" : 6.930897113444964E306\n    }, {\n      \"predScoreGivenName\" : 1.359467303616595E308,\n      \"candidateName\" : \"2022-07-07T11:52:09.336257Z\",\n      \"probability\" : 7.505641096177151E307,\n      \"predScoreFamilyName\" : 1.2501955611177318E308\n    }, {\n      \"predScoreGivenName\" : 1.5993683334286051E307,\n      \"candidateName\" : \"2023-01-26T11:42:09.336318Z\",\n      \"probability\" : 6.357015995104937E307,\n      \"predScoreFamilyName\" : 4.532400057863573E307\n    }, {\n      \"predScoreGivenName\" : 2.755394756116976E307,\n      \"candidateName\" : \"2022-09-26T11:07:09.336382Z\",\n      \"probability\" : 1.2424036357779207E308,\n      \"predScoreFamilyName\" : 1.3166203099228898E307\n    } ],\n    \"orderOption\" : \"z23220kfquwm4uw2ut1wv58yfddcvz7ggdb1yv4fhq8bjhii8w41jx77ys9zp0j6go5tflscwdbmd11obcitn7c07t36k0qh3v9\",\n    \"id\" : \"95lk\",\n    \"script\" : \"5j6x5m6cxbeoblr77wcuvbbpr902ot4hvjbku9ew74v0plrd3ca72kwso777qtktmy7zlucj0tmibqpbro7be4nxprawlup7n0hd2fyifq6rw7x\"\n  }, {\n    \"firstName\" : \"Leanna\",\n    \"lastName\" : \"Bashirian\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.219388059944229E307,\n      \"candidateName\" : \"2022-07-19T12:08:09.336678Z\",\n      \"probability\" : 3.9568940321794536E307,\n      \"predScoreFamilyName\" : 2.905329106021856E306\n    }, {\n      \"predScoreGivenName\" : 6.428848166200092E307,\n      \"candidateName\" : \"2022-11-15T13:53:09.336743Z\",\n      \"probability\" : 1.7217745162859755E308,\n      \"predScoreFamilyName\" : 1.0595483748292746E306\n    }, {\n      \"predScoreGivenName\" : 6.561784370326739E307,\n      \"candidateName\" : \"2022-08-07T11:20:09.336783Z\",\n      \"probability\" : 4.711718876846037E307,\n      \"predScoreFamilyName\" : 3.903172428599414E307\n    }, {\n      \"predScoreGivenName\" : 1.147746886628517E308,\n      \"candidateName\" : \"2023-01-24T11:53:09.336827Z\",\n      \"probability\" : 6.425187184019972E307,\n      \"predScoreFamilyName\" : 8.99896537745685E307\n    }, {\n      \"predScoreGivenName\" : 1.6450527867115127E308,\n      \"candidateName\" : \"2022-03-15T10:53:09.336871Z\",\n      \"probability\" : 1.7164715318140727E307,\n      \"predScoreFamilyName\" : 8.223015810222536E307\n    }, {\n      \"predScoreGivenName\" : 6.775227881303304E307,\n      \"candidateName\" : \"2022-12-16T13:36:09.336915Z\",\n      \"probability\" : 1.3032783804370054E308,\n      \"predScoreFamilyName\" : 4.101892264409853E307\n    }, {\n      \"predScoreGivenName\" : 3.139649215801796E307,\n      \"candidateName\" : \"2022-09-30T13:46:09.336962Z\",\n      \"probability\" : 9.80758160532095E307,\n      \"predScoreFamilyName\" : 6.913861837322951E307\n    }, {\n      \"predScoreGivenName\" : 1.0340076126172702E308,\n      \"candidateName\" : \"2022-04-19T12:06:09.337005Z\",\n      \"probability\" : 1.0173103854584492E308,\n      \"predScoreFamilyName\" : 3.077238892308566E307\n    } ],\n    \"orderOption\" : \"556nxz8bqt8tejwn22l7a2k4xlh4crcs2e93rlfrigyzk0nmvht6k1pnizpu0tj7a4iavyzrf3y50zrafzcezkx8lrney8qsyodgttwapom84ahlgdo6mwz3buystccjy9nli29t0j9yspxaccw4149r87i4q5e9hty1hm744ycdjiir1xofd04hssk2o4fap680jzu\",\n    \"id\" : \"08rw\",\n    \"script\" : \"tfjsyq5v7eqtxht8yoz446lgv03amxrl2uk0qb1\"\n  }, {\n    \"firstName\" : \"Odis\",\n    \"lastName\" : \"Langosh\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.6968654691110633E308,\n      \"candidateName\" : \"2022-10-01T14:14:09.337236Z\",\n      \"probability\" : 6.898608699968016E307,\n      \"predScoreFamilyName\" : 1.8533888072188613E307\n    }, {\n      \"predScoreGivenName\" : 1.1020601129297911E308,\n      \"candidateName\" : \"2022-09-17T10:47:09.337293Z\",\n      \"probability\" : 1.5677166327675382E308,\n      \"predScoreFamilyName\" : 1.7806351830486512E308\n    }, {\n      \"predScoreGivenName\" : 1.4258596923904266E308,\n      \"candidateName\" : \"2022-12-04T10:38:09.337346Z\",\n      \"probability\" : 1.529937092128518E308,\n      \"predScoreFamilyName\" : 1.4620592585737278E308\n    }, {\n      \"predScoreGivenName\" : 6.262307908227325E307,\n      \"candidateName\" : \"2022-03-23T11:45:09.337409Z\",\n      \"probability\" : 4.188978467325875E307,\n      \"predScoreFamilyName\" : 3.473764911595893E307\n    }, {\n      \"predScoreGivenName\" : 2.741797144270068E307,\n      \"candidateName\" : \"2022-04-11T12:18:09.337475Z\",\n      \"probability\" : 5.011499610740343E306,\n      \"predScoreFamilyName\" : 1.451102472807697E308\n    }, {\n      \"predScoreGivenName\" : 1.0083822285344355E308,\n      \"candidateName\" : \"2022-12-03T10:22:09.337534Z\",\n      \"probability\" : 8.19591895465811E307,\n      \"predScoreFamilyName\" : 2.0462993965787158E307\n    } ],\n    \"orderOption\" : \"qxfasbwzksh3u6bii8ox8ope95fqaebmg2gkjaz854qb6dnvdcztqy7882vbjnmbu4enb0xlv\",\n    \"id\" : \"16y5\",\n    \"script\" : \"e1vewl3kiprwkm4x0bp143v84rx5e3r4gdvj9n1ixiczorw8xuacw3ydd1deru9q2huth67flc9kfi3u9kbqxadmhlfwbl6kcxkl4amqjwpkrmc6rryc3z6rph3f0w0k7hwme6v625xu7l7iwxdapczg4ssu7vhdu5zh3op\"\n  }, {\n    \"firstName\" : \"Jacques\",\n    \"lastName\" : \"Cassin\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 7.869571173110452E307,\n      \"candidateName\" : \"2023-01-26T13:22:09.33773Z\",\n      \"probability\" : 9.816072322967096E307,\n      \"predScoreFamilyName\" : 1.133600936471892E307\n    }, {\n      \"predScoreGivenName\" : 7.5662582533974E307,\n      \"candidateName\" : \"2022-11-05T11:38:09.337772Z\",\n      \"probability\" : 5.931709694346588E307,\n      \"predScoreFamilyName\" : 5.341465999242103E307\n    }, {\n      \"predScoreGivenName\" : 4.0298247978012906E307,\n      \"candidateName\" : \"2022-09-05T13:13:09.337814Z\",\n      \"probability\" : 1.2694242811685514E308,\n      \"predScoreFamilyName\" : 1.3719290408461748E308\n    }, {\n      \"predScoreGivenName\" : 6.997426445829435E307,\n      \"candidateName\" : \"2022-12-08T10:22:09.337856Z\",\n      \"probability\" : 1.2187636924769282E308,\n      \"predScoreFamilyName\" : 1.0381863618092563E308\n    }, {\n      \"predScoreGivenName\" : 6.541011400994259E307,\n      \"candidateName\" : \"2022-05-18T13:44:09.337903Z\",\n      \"probability\" : 1.782485597188252E308,\n      \"predScoreFamilyName\" : 1.2105729072980864E308\n    }, {\n      \"predScoreGivenName\" : 1.0665269836405612E308,\n      \"candidateName\" : \"2022-08-18T13:39:09.337945Z\",\n      \"probability\" : 2.8263023733315175E307,\n      \"predScoreFamilyName\" : 7.072693163022783E307\n    }, {\n      \"predScoreGivenName\" : 7.444670612785488E307,\n      \"candidateName\" : \"2022-03-21T13:49:09.337987Z\",\n      \"probability\" : 1.254742481947264E308,\n      \"predScoreFamilyName\" : 1.4672775849428108E306\n    }, {\n      \"predScoreGivenName\" : 7.423227979209237E307,\n      \"candidateName\" : \"2022-06-23T10:47:09.338026Z\",\n      \"probability\" : 1.7599464197483808E307,\n      \"predScoreFamilyName\" : 1.4039958840802897E308\n    } ],\n    \"orderOption\" : \"hs8y0jxialjtqprbolj1damk0wxfslpzftwbjo4ylznj1d5oix4wv5jr1v5900six5itqeg86rr87et7ajxqi3uqykyj96qv0uf8vs154znkdene9rew3zxpq9phx49g7nm23wfbbxnqzn432i12srkca1uki\",\n    \"id\" : \"434o\",\n    \"script\" : \"ybfzbpuz8rpur1c6riyylcup3d3eb6ksf4fd4t5z58cey9j7ireffauph18xe5fctlzt82qu52fhikecd3rb3bp1v3jdsl7i84fnp42dnrj4ris8qeqtxlpyyokbhecu1c6s6pr27ijicuupgsfidupp969f4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9057526a-e529-4372-836f-bedb058a3cef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.338382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6c77c088-1819-4a36-9839-18ca8d91252b",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/9fyf0672dvw25078c0esroe5wpof053vq1pyuq96c1qymalxq0k3tobs9vxuxt9am4w232e6fssd4l8z8f49bgmpb0hl8r2zgny/9dbcyhr4b4z7c9ga0iruby41c6afwd76v8ipas0ov",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6c77c088-1819-4a36-9839-18ca8d91252b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.335391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    }
  }, {
    "id" : "e4c8c51c-ffcf-4427-bd22-e3c059d0861d",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/v3o4ah57owic11cdcs9g60e1t1uusa1fcerjt6pbq0ymkjrhubxq2kh0gbmug9gdnloorl7rgt8k64yvcjd8kkob18c3bxzw5wzjxio9xe59x8oi3xs52cvsgbqprfsde2kdhbnaql5hco1zepr3upbrs6o8dum3xlzs4/yuajnecpqd2dzyho2u5g0c720knzp1z7mxbqn3cnxh8xh4fmq0a0ol68osfdmfutqo0j11idf5jeu015j00ssgsnyuy54demhr0c87hz6fmvah58hrsa7by9jsbwu3jpvesswqfdhiqt8wcl0r8l2vwc9tup5kdrp53znya61d66p",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e4c8c51c-ffcf-4427-bd22-e3c059d0861d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.335338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    }
  }, {
    "id" : "f9bd9801-de64-4dad-95f9-2bb1d0ec0431",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/hu79/clacy39oy7faw4qmvtzeikjlhke4mk5ggrr34sic3yks4ihqoas34yic6aba96w",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Morris\",\n  \"lastName\" : \"Jakubowski\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 1.5841609640517385E308,\n    \"candidateName\" : \"2023-01-31T11:16:09.334773Z\",\n    \"probability\" : 9.81700111646627E307,\n    \"predScoreFamilyName\" : 5.274881644578881E307\n  }, {\n    \"predScoreGivenName\" : 1.363466771503816E307,\n    \"candidateName\" : \"2022-07-11T13:26:09.334833Z\",\n    \"probability\" : 1.4778464992201484E308,\n    \"predScoreFamilyName\" : 1.7803595616630613E308\n  }, {\n    \"predScoreGivenName\" : 8.951522207544738E307,\n    \"candidateName\" : \"2022-11-24T14:02:09.334898Z\",\n    \"probability\" : 1.6765662906618067E308,\n    \"predScoreFamilyName\" : 1.0460466818283384E308\n  } ],\n  \"orderOption\" : \"wf06o1aee3tkf216sb7rn6vbkfrhsbkh86k9gkpu6jmha40odizjowjjrjazif3vm7269pfg9oh04d01q5mjj0olor5d04dk48gawjptow52wz919uhrywz\",\n  \"id\" : \"f4wm\",\n  \"script\" : \"jajnqjx0elnyxxdi69gfh8zzdsrj8m74m7dyyxdza6b5yjjydhqt4ggy84quz1sczo702fu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9bd9801-de64-4dad-95f9-2bb1d0ec0431",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.335261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1d048324-b881-456c-b97a-b79e5f46cf87",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1d048324-b881-456c-b97a-b79e5f46cf87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.334612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate"
        }
      }
    }
  }, {
    "id" : "28e70acd-566b-479d-b2cb-0aa0254ca470",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rowHeaders\" : [ \"cowembpd1xsfm4xgopa8tcy4mwvuqrr70kcfvwz531guaihsdl4m6af5bgzr5y1tzga59ptl9pnihg697en076nijmp0l9m71fefayvz\", \"4svmsjpa5jb5vsox4r6shawpye5aldmh3iw57dh2o512q8l6w5roh5xm0op0foi015rbgfoh3t9yvf2vd6woos809i23h0mtasy2un3qtuf02wowu5s0aigq3wnfnjvaxtng1dqmslr28bro1jnkjcm8j2z3xv8206lk63kd2im3d8e\", \"q0teb78rqy9\", \"zey72gc4md7aa4crbskrj79jmb0z1xg9jcssfmn9755irp3lh68cweffxts1y9u1g1r54q85965zpddvwhnn4tfkvawnr3c6gvnnupi0cgfig915mrxwdh4izehk2mft3p01kzi\", \"8imppr5p3qs6kmwsy60p5xi4kldxntr1bgqlcshe7vwkn6oru4twamr1fl0phszne8ulw22oh4tzog96p2gmj5lmd2p57lzfd95p2z3ms3348fksfgxmyfywb8cvcnakhp4us1x6lt9d9z0euingcmlzsb7t6fwjmmbmf42skapwwh5z9k4o5terl\", \"wxgp2o6dlv9df61io2j5t69nhscx5ykzkjbko0ml8nhffbmdmoqn2m041hzevmrfw1\", \"34bmpe99hd02naq6d6o\", \"oabshx7f3r7w6tw637k747sfe42m9x50pwtmh43vuitfe3ahmtpshxoyakewli22jjrfpesu4sbljlbnse09wbtm2p0rg40hznsuwtgsokmu8hw92a9j5wtjr1h423ozccxww9e9a2evz0r0rybu4lypcexienx3i7l4ro6hrn3gahuyjg355qy\" ],\n  \"data\" : [ [ 679118524, 1865927984 ], [ 577795491, 44762149, 1617488742, 1998864094, 1427580169 ] ],\n  \"historyTruncated\" : true,\n  \"colHeaders\" : [ \"wm9p9e9qlghu7jtug22zs3647trzjw799rhlt8g5z\", \"5kj9705itul2douwb3jx7pjpv08rgcyx3e6i290odilen0pea3els03sa3orftfxjx3rjfl5xn6n4kjdtxbjxuywgc76z2ignzcmxl4mixb48fb5qpe9huqjxwgac3ihim59twdf7ck12q750fl9p1xb\", \"lcyusvsvslfjt5ks7kprrs4ljtbr7ho9nffv9uz0zp25ic0fqkb9542gk8k0e0gwovmf2lxjbm9j34l0isds2ipw7gyozqz19j8afrrw3wrxikig8j40x1erlzp909z6x9xwk04an9tjasr388flqectembx4077xv4u15oq14nljd5t1csgsw0jp5\" ],\n  \"totalUsage\" : 6356249220788444388,\n  \"periodStart\" : 3481001865548330539,\n  \"periodEnd\" : 2258798176075400839,\n  \"timeUnit\" : \"2022-08-27T10:33:09.334277Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28e70acd-566b-479d-b2cb-0aa0254ca470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.334567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate",
          "schema" : {
            "properties" : {
              "colHeaders" : {
                "description" : "apiServices as column headers ",
                "items" : {
                  "description" : "apiServices as column headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "data" : {
                "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items" : {
                  "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                  "items" : {
                    "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "historyTruncated" : {
                "description" : "If the history was truncaded due to data limit",
                "type" : "boolean"
              },
              "periodEnd" : {
                "description" : "End datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "periodStart" : {
                "description" : "Start datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "rowHeaders" : {
                "description" : "dates as row headers ",
                "items" : {
                  "description" : "dates as row headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timeUnit" : {
                "description" : "Time unit is DAY, WEEK or MONTH depending on prior usage",
                "type" : "string"
              },
              "totalUsage" : {
                "description" : "Total usage in the current period",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageAggregatedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "91ef5445-58ac-4567-a427-58150c6ea85c",
    "name" : "Print historical API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "91ef5445-58ac-4567-a427-58150c6ea85c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.334074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory"
        }
      }
    }
  }, {
    "id" : "5be43554-2455-4fb2-b79e-9a7dce2a1564",
    "name" : "Print historical API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"detailedUsage\" : [ {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"vyx2eidh26pgulkuh7jgjffyz006e2g0opgrovj460gtdcpt88emythgl5l60wpz1xtgun913r3pebzmwvyyv8nhu3nwwd90let8r2pjxkpefy5a52fba4fye1jlb0q8t8sr19pfs7fjlmc5cc9p4isqcyorq5y2o2i57n\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"7423\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"xcjlgilatx5lciboy8oisfkaxooxfxq8v4qvutku5wtz54\",\n    \"createdDateTime\" : 7850201949214277774,\n    \"lastFlushedDateTime\" : 8323933894893478528,\n    \"totalUsage\" : 2976972817382232009,\n    \"lastUsedDateTime\" : 1696181950910543742\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"qwthjgnwml6t7pb8rw2f34fsmr783m9dioxnv7jcorx3d52xve3zfao4assi00zuwcclfgfmid9dkd7ep5eocf8hb7cqougvmjomqika0ee0ar65vpf2ewatyhbxa1o9qx3ec3hcqd4rtn93y2u5qhnd3kdy3l1x9zjqmkivj7nncjbkah3yml7pymr\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"f053\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"5crm0arb8nj1bmagt2mhgi4eof8gm4m1n59nqgqka0d6zjnoo0nuuuamf1mi5zgf4imlbg0908csm5ldv1p24gefwzjde8crrg3kbdz0p1ncmf5hf9h96jg\",\n    \"createdDateTime\" : 6148294946965979932,\n    \"lastFlushedDateTime\" : 1593460296586650433,\n    \"totalUsage\" : 8382061269207436805,\n    \"lastUsedDateTime\" : 8959224934194721228\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"ogun43s6broyj3100rfyv8hqjugi8brleqj7orzff2yih0hqof190uh7rk9x51vfsynej7eswkfjepvktnzldvsluyvjo83jdrs8cca1e0v7fkqfk\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"5bdd\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"peb3cy0fkdjhmggcu6n1wjotjq1mhyebobkdjcgb9flkf85tfek1pqnmf9bf9me7dbrqo235ug\",\n    \"createdDateTime\" : 5951485851770156594,\n    \"lastFlushedDateTime\" : 2491349406150245188,\n    \"totalUsage\" : 5551516321159117360,\n    \"lastUsedDateTime\" : 1122349175121704590\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"0flxnvqdb32lzyrsg687lxgxsonj499w8ofxzmn0vz8ib2ijfvgiv2nqs6w6kunkh7zs0y5gom8v6lg56usa7aqrzb96fqe8qtgeiveqrtco7dl1e0n33difmx30isy1zm3foxdhmr99hkds9ga95z9m4d6k41zbg\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"x58g\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"m8g37a8ah5psqgkxj0ti15hzvfjz8gmebl3frwhpio4dy11xs4k3pvsl2qk5fhpnwana07kkkhrppc6f23xlwgk9jtzpuigu8jp8nv9\",\n    \"createdDateTime\" : 3316844396891510081,\n    \"lastFlushedDateTime\" : 7892945008489224258,\n    \"totalUsage\" : 1403015102055416825,\n    \"lastUsedDateTime\" : 1933160763178459659\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"hfi7ekxpvaffmu2acn6pf6d7sezxnlixsazeauhla1jy7ku0r9157v01cn9assdrfbw3evoq7pkylke2scpclo9umyxc4rng65gqbdfrtls61fvyzwy05lk08onesn4oypsrsh704qxs6t0z0ydb1y0x183xrggndhmx2kdl\",\n      \"partner\" : false,\n      \"corporate\" : false,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"1svu\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"5b5yn0xvuqezhlc7hi7z1qq0exdc7zi1lyolubtkgpn8tgum4z4pb19ntmuw8mukxx9ijedvtehp389o9acrgf6reo7axadbjdqmlng5api4obsaig41s098hx5wu9u4dmlble794imbrp0r9pvucs6dty3c8l2r1gdbqhuz9s3wkc\",\n    \"createdDateTime\" : 3185887337651740762,\n    \"lastFlushedDateTime\" : 5304941651341523902,\n    \"totalUsage\" : 2519953159999469709,\n    \"lastUsedDateTime\" : 7902058084638857228\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"lf49rpxt8sqmh8sfao5ehgceuqjb5ovsswvlknhz8vmq\",\n      \"partner\" : false,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : true,\n      \"disabled\" : false,\n      \"userId\" : \"99i5\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"69gl8sobu6zr9nuu7lce6wfe98r4yopzgvbp5geppm1iy60e7z9ivt782ilpniaw65ytj7arx7mrclopcnwwu7fe2z2ur6f78j7i1k7vxy5ljfvk8l35jt6xw8f\",\n    \"createdDateTime\" : 2947805642285110134,\n    \"lastFlushedDateTime\" : 3871254591518498365,\n    \"totalUsage\" : 762318024099496104,\n    \"lastUsedDateTime\" : 2150875766397768879\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"qzop9zareofij1gsjvdf9sh8zmwkhrl16cym4dygpaf55sjmmwpiqpxvgiw8cil9tvea157hswufdz6lfduljy76g6yyjtt88zsdwkk15o8e51\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"0183\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"u5o7f7fidxm2pwzmcgw2l008vmetgtzlq3gdvacr2p1wayyyfglz85rui3hp83yhgyzij4a7936qei55qrhic76oz0dfy1d94iykwvr1gwhi6rfvhet64r9ys6d05iii3w38st1sdv7564fl3so4hgz5fkt0dhzl7z9x7n5e6l7y4f6tupec6wibummi\",\n    \"createdDateTime\" : 7011676649746433103,\n    \"lastFlushedDateTime\" : 5574525296000395744,\n    \"totalUsage\" : 2915788757597645661,\n    \"lastUsedDateTime\" : 7820006367544023175\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5be43554-2455-4fb2-b79e-9a7dce2a1564",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.334037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory",
          "schema" : {
            "properties" : {
              "detailedUsage" : {
                "description" : "Detailed usage as reported by the deduplicating API counter.",
                "items" : {
                  "$ref" : "#/components/schemas/APICounterV2Out"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageHistoryOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d6b1c4fc-b935-4092-adf6-19e222180fbe",
    "name" : "Print current API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d6b1c4fc-b935-4092-adf6-19e222180fbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.332473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage"
        }
      }
    }
  }, {
    "id" : "009b2302-0bc4-496c-ba39-fe9cea09cc24",
    "name" : "Print current API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"overageInclTax\" : 8.563387800429347E307,\n  \"overageQuantity\" : 6149389742829153809,\n  \"billingPeriod\" : {\n    \"apiKey\" : \"7ccvi\",\n    \"periodStarted\" : 8881292073399908138,\n    \"stripeCurrentPeriodEnd\" : 1596601083884257020,\n    \"usage\" : 3957399735856609778,\n    \"hardLimit\" : 8213487313018147494,\n    \"periodEnded\" : 3412955693540818976,\n    \"subscriptionStarted\" : 6550828079369247239,\n    \"billingStatus\" : \"ikjh6ap08553xujrpkl28l61gij65arahh3k2k7o92tamg97eevhxrxsqj6qo2s1mgrwj34u11pfwqa043xz8tfilps1\",\n    \"softLimit\" : 6728052728649843918,\n    \"stripeCurrentPeriodStart\" : 6475039170648838053\n  },\n  \"overageCurrency\" : \"PKR\",\n  \"subscription\" : {\n    \"stripeStatus\" : \"9schphedyil32r65tjyulrpfcmfl6sy97zy0tqiavg3jc98aza069299uuqflewh6yite8bz9nx95t3n7mg5vhzaetgfcppd4kinjtzloqnez4ildzd4ocylx1oyq5o3rhx8k7nmlh6\",\n    \"planBaseFeesKey\" : \"s683j3ke21lqfdnobfpcp\",\n    \"planQuota\" : 8313358305639656690,\n    \"apiKey\" : \"85uqb8vrjeijcvgzqtce4a4kpok0jh5bwct5fdtuhoghe14h1l8ld9z6lmrda866abf593q3l7yhz28pjg8rd8k0lfclqc1ixpnlpzfi77jam74mdjx6tnxuu273r1r3q8moumq8njcbhyzh1p2fpjj8fk310c6ybxzvdr5ly0ou6\",\n    \"priceOverageUSD\" : 1.2751770130324978E308,\n    \"priceUSD\" : 9.70474554606753E307,\n    \"planStarted\" : 473595390847218681,\n    \"planName\" : \"Jina Funk\",\n    \"planStatus\" : \"ps5jkasy3st0fmljw5zl40b8caykj2nxhya0ghw9vk3\",\n    \"priceOverage\" : 2.964391694609868E306,\n    \"userId\" : \"cs20\",\n    \"planEnded\" : 429218751388247447,\n    \"taxRate\" : 1.4665046480146834E308,\n    \"price\" : 1.1599512398939508E308,\n    \"currency\" : \"ZWL\",\n    \"currencyFactor\" : 7.81592504338758E307,\n    \"stripeSubscription\" : \"56ue0f\",\n    \"stripeCustomerId\" : \"088m\",\n    \"priorPlanStarted\" : 7254791546008500931\n  },\n  \"overageExclTax\" : 3.9901898464094543E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "009b2302-0bc4-496c-ba39-fe9cea09cc24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.332435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage",
          "schema" : {
            "properties" : {
              "billingPeriod" : {
                "$ref" : "#/components/schemas/APIBillingPeriodUsageOut"
              },
              "overageCurrency" : {
                "description" : "Currency of the overage amount.",
                "type" : "string"
              },
              "overageExclTax" : {
                "description" : "Overage amount including any tax.",
                "format" : "double",
                "type" : "number"
              },
              "overageInclTax" : {
                "description" : "Overage amount including tax (if applicable).",
                "format" : "double",
                "type" : "number"
              },
              "overageQuantity" : {
                "description" : "Quantity above monthly quota of the current subscritpion, in units.",
                "format" : "int64",
                "type" : "integer"
              },
              "subscription" : {
                "$ref" : "#/components/schemas/APIPlanSubscriptionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APICurrentUsageOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0e2585ab-4cf2-47b3-975e-2bd5467cf931",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0e2585ab-4cf2-47b3-975e-2bd5467cf931",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.331453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus"
        }
      }
    }
  }, {
    "id" : "659bc0c5-ea40-4987-b2d8-2a7eeed2e732",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classifiers\" : [ {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : false,\n    \"classifierName\" : \"Jame Crist\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Brenda Douglas\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Vinnie Nader\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Miss Cara Wolf\",\n    \"serving\" : true\n  } ],\n  \"softwareVersion\" : {\n    \"softwareNameAndVersion\" : \"5qoxw5hwtxx1g5ytbvf4sdkz24mf4hye1rsdjoy3b3fax6m4tf21dzvgng44jkoueg9krdw8fuavkzbpiqgzxh4l0wt2z4u1x59icxyexj2n13iofo1ut4x1sbq2n7oxkr66vo1sht0npwf5mfvp4bkj9h2r43xxgewxslpkc9b3\",\n    \"softwareVersion\" : [ 513965171 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "659bc0c5-ea40-4987-b2d8-2a7eeed2e732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.331397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus",
          "schema" : {
            "properties" : {
              "classifiers" : {
                "description" : "The list of classifiers and versions.",
                "items" : {
                  "$ref" : "#/components/schemas/APIClassifierOut"
                },
                "type" : "array"
              },
              "softwareVersion" : {
                "$ref" : "#/components/schemas/SoftwareVersionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifiersStatusOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1837e32b-2a4c-4a1a-9f2f-226c8ce02eaf",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1837e32b-2a4c-4a1a-9f2f-226c8ce02eaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.330969Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices"
        }
      }
    }
  }, {
    "id" : "ffa6a027-0e49-4685-a4ff-ffaea305a5d5",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiServices\" : [ {\n    \"costInUnits\" : 846150385,\n    \"serviceGroup\" : \"tnb55kw4up2mf15jsxzmmpehrr1dfcz3tgrxwhw0lthek5mtbqjqu1xh8nuiysct82kzdq64lyleiahsqt8stl77j7a1acf6xjrpwcys40iq814rrmv31i52cl0nafehatau9fgkkwfuwl5sl1bb3ngbba17b9vzyq4yn6jkckcfmv51gmxg6uyedmk\",\n    \"serviceName\" : \"Jacques Ziemann\"\n  }, {\n    \"costInUnits\" : 536420644,\n    \"serviceGroup\" : \"vxmkfis8znygncf9rzei1o8th4tm77pk2t76up87h6auce5lpff9p9w4qac7a64vz0gagp8i20qz1y5zmshcx8158h6p6gd96s0tg93ji1j7tbgvza3vd6nej66tfxo437jaahyct5fvwu5l8rr3yy7dizvexfqq5gxt6voiulv\",\n    \"serviceName\" : \"Ms. Chantay Fadel\"\n  }, {\n    \"costInUnits\" : 1778297293,\n    \"serviceGroup\" : \"5ltdamz4fo6h71z7h6k4l8yzwyduutjnpyeqhexz3wpcfvrliya06zfe0o5usdejja5qjganl17ystysfcb07t5vyl1cwyyy8n5bh99woe8f9q4pp4o0197oyszqi8cp0fknx7udldfvmbtvzi18l0he7fplbc64io05plevn0qfevu7ae1g98jc2kwu59qar4a5\",\n    \"serviceName\" : \"Bernarda Littel\"\n  }, {\n    \"costInUnits\" : 1257999277,\n    \"serviceGroup\" : \"jdfaelj57e2q9hwlqwhenqyvrtyr5sgtpnq01popxkzpdzm0jhatc2q6to55m04mrjh1wg7xbgledypo2plg2bkc0wfjv34box9giw3etodua6\",\n    \"serviceName\" : \"Mrs. Raquel Romaguera\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffa6a027-0e49-4685-a4ff-ffaea305a5d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.330936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices",
          "schema" : {
            "properties" : {
              "apiServices" : {
                "description" : "List of API Services",
                "items" : {
                  "$ref" : "#/components/schemas/APIServiceOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIServicesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "085fced8-2fd4-417e-b1f2-f114d1d2f780",
    "name" : "Activate/deactivate anonymization for a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/anonymize/sszd9u74zdx4whkgddodp2fmo3hrndvquxooz1t55oryu98w1iya488xqbbvd1ctwgt7srpydeaygeimjsmwt7cmct3zpv/true",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "085fced8-2fd4-417e-b1f2-f114d1d2f780",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.330525Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    }
  }, {
    "id" : "3ddd849d-cc5a-46d2-8ca6-a86fa6d37820",
    "name" : "Activate/deactivate anonymization for a source. - 200",
    "request" : {
      "urlPath" : "/api2/json/anonymize/d3ec51a5dk89xsw1hsep7mzfpsl2appqngahexj2bx9q015kv83z96ljiox8hxwvzckwk5qelumun28ulxz87b5r5z3obwr7hzgh2wp8tvrulccnkzpqrp4xs8jw9yy/false",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3ddd849d-cc5a-46d2-8ca6-a86fa6d37820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.330469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    }
  } ]
}