{
  "mappings" : [ {
    "id" : "8d9510a1-41a0-41ec-b170-2b17cc6ad9ed",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8d9510a1-41a0-41ec-b170-2b17cc6ad9ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.376516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "819b6e5c-5388-4cdd-883d-10abd4190033",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "819b6e5c-5388-4cdd-883d-10abd4190033",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.3765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "ed895f88-2572-4f94-bffa-7f3137a94216",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ed895f88-2572-4f94-bffa-7f3137a94216",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.376483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "dad11283-4569-4d43-9854-225c9380fd03",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usZipRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Delcie\",\n    \"lastName\" : \"Doyle\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 47.50647294265215,\n    \"probabilityCalibrated\" : 0.47575307378023934,\n    \"raceEthnicitiesTop\" : [ \"agxd6wdrvmp9s8fxvxpv4gjvf5h2sao06oz6dcmzjp19rkj9h8av9fk9uy5vqloqzn8mchvxchutbjgpg758ifrc0hcz9swxkc2phwxtko058k3rska39ah2fqmdf1bs3xrwn0k2vkn68knd8mxvydu4cdri7t9ciaxvbbryncnblzx55\", \"vksfbxjfq6az42v1ryszoh72mdbsw650wro3f9xh38bj8xawi6fawqmxjp1rvrxkfdiubgzqybbemlk6i7a1ip09ing71bla9ern87mi1huoy6z86tyhk195yuxln11t4uizqyms4vdmrm1y2wu97qtzc4bswqxyqdbt10q19mwjmc4vi0equak56g28m94l6v7tc9g\", \"96poy0prbbtr6bc40vj230zhrvkjobdtlcjyv0hppvjm070e0sicqig7peydobp0m3kt9twohdrogrywr55tw\" ],\n    \"probabilityAltCalibrated\" : 0.9798283668069365,\n    \"id\" : \"ihz9\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"mng8zr23\"\n  }, {\n    \"firstName\" : \"Martine\",\n    \"lastName\" : \"Senger\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 94.02086602928333,\n    \"probabilityCalibrated\" : 0.5734228117611004,\n    \"raceEthnicitiesTop\" : [ \"3dvvtfivxsjb4awd3yb1edkn9or0akz0ir61l7q1t4lpfq4qq5i7hghxby3bd8wd58ur3q98ilte8y35altnz1p2ce4eqqgv0o4mfy9o7pogtfe2ofr61o26n4qkzbv4t0gawtqll6l7chuxbtd7btuegls11apubzq6kk6cnctc2w8mnl3nlc80oozvwljsf\", \"a6fu2biidiqna98838yngcvqupzfu64kpxvfaca5tafsmrpf1rae94amfvnya8ehh2m4mo4d\", \"xjh28h8oic8nh7obnu6y2apdpnnww1j\", \"akzm0ml3kxu1a11vye8rn6jbkbntykemxg5gtow2xvb1r4vko21wrfrq5jgnnddrnqx92dzfb7c5ujxkbye2m5olt4erbwic9x1evq8tahplte7rdkpiatjcr4mk39mq2kvloqdpot2edulhzqcesyn279k89twczwoso917wb6n337\" ],\n    \"probabilityAltCalibrated\" : 0.7562731621385475,\n    \"id\" : \"1ln7\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"7epbddac\"\n  }, {\n    \"firstName\" : \"Rosario\",\n    \"lastName\" : \"Bins\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 26.565472859276053,\n    \"probabilityCalibrated\" : -0.9287850387572514,\n    \"raceEthnicitiesTop\" : [ \"l4fibqkfbpl827liwicje83o8q21teowxnunszff4jkuxjxsh2gqdfi6tmg7kgroph876w04eir5mxsog09bcgppk\", \"c126pkx77jaikwd5w0bon5pa6g4wwxevf2ji36v6ffnhekyipohbc8zvzk1j8myb3gv2ynx2e1oy6vlu7hsxdsg3ixnjxs6wbvmny2mj259d49n8t1g2\", \"rh5h2um1qknf6xasps2qifg7zbcaqqq41bxax1t4e5knkm3k9zi1s4o5c3803e9x5x6zz\" ],\n    \"probabilityAltCalibrated\" : 0.7726838949433934,\n    \"id\" : \"8129\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"90qvjt9ynwyl9vmdewlcbkuwj9a43dq0u2ne1emsbwgeai9bnygh8waypt5q974c31isdmrgwy6mmo9vhcfuhgt2qj9n0egj43r60gpgm8er1ljaue7czlb4qurpd61h1qim5w3gxcq8cdzn00mg5ij39h6\"\n  }, {\n    \"firstName\" : \"Winnie\",\n    \"lastName\" : \"Jenkins\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 67.02083781043771,\n    \"probabilityCalibrated\" : 0.05980795082500978,\n    \"raceEthnicitiesTop\" : [ \"q9q8ge28gb4bnpojo7o6vmiraqxl85dijv98s0ia8dbripsvgwwt4bbpsbcrul0wajkyag5upav4353ex1if80wo9i6e4a07auqpu0e92vsp4xuxzzbt53eccunycmqn57pjczaiwkx5fxcf01pz1zc3igm\", \"oi59158hmkwvmoflr874tkwtwf8ff1mbo46y2yanh8jxay76rq3yp7dp8oszwb81wfuutl0e525w5csf8cz1l35rg191m6mqw1jhnjyg6g6a35703\", \"e35ryyirfyz1bgwxtmt1ci4pxcfpho5u4je7drg4mt6yy4grasphew6if7322lcsq1ysbzk6b4lo2zf63bqjt78hk39iaksx6bpwsi5whr43m7pz6wprekhfl9ut45p7ejvdxtcyuhzwrzldkw\", \"x48qyu3roqoe8x8fvixivga9lkepk89mgcff8oaww4r6jcgkv3p1am17f3s8ixgcl\", \"3hursomjnpl6ly639idonupx9w91coybba61zlkszxgdv9igdw7yvp9aou1dxpqckms11m25uqpzx5zu8nhysadsjysrh1snii6ljbjdyfkpjy47p4977k0bt1bif4gcs9tr797drhl6\", \"kwlqbmas96yf9sxfe9er5drm3i43efzy85uc2\", \"2jl5mgn37nm0f8kry74qjkq1k6ggw6qni7ef0mhhi4dcx5bghmsun8xk4q5hrsdmgtbcrci2stpw\", \"udspqj7tuz2e6tlf9pr12x0gv711clpuma2fenobkrq6k9umcp5im2cymjzjjcau2wbwzp12s07mmw0me2bo6fbzsupiwc7n7atoqyr2qzlqa70xk2eih194f5dfsrjxlh7yybmjmr9xcy9i4tkqjdiztfll\" ],\n    \"probabilityAltCalibrated\" : -0.19003553697763387,\n    \"id\" : \"k024\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"c7wfh4lr0sar4d7caz9a81yfk9ezdlet012x4pf606yrn1mrunth2riq129q3ysqmf9i7ytm40fzyv3n0w3lqlo8k5ign71czkoy4yskjh6zlw6f2y77bj8fp7uwmxurzsqu5n3ojf14o0m6k12m5gzacqmmznanuf59ai722mxd8yfs8h2msllc\"\n  }, {\n    \"firstName\" : \"Cari\",\n    \"lastName\" : \"Hauck\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 57.50571716321554,\n    \"probabilityCalibrated\" : -0.8991959709403687,\n    \"raceEthnicitiesTop\" : [ \"j6jofokgel8lev1roy3fnaa4opb43mwqdwcor5rpjasoi89tal3e9hgfjtxnmdpicy5knr930lxpp7c1ivi4fjmdh8nie5xjnd\", \"ugscr09hdpd4vjtvllpnz9bkgjjy7wy6h321newor41c9m3074camf9iil4fxxsozw67etmele02srlxn9ajjvf9h16jyrj5dwplhpqnq43hzijer19ftjbea1erhosw5eh8j9toght63r4wdql509nzek\", \"ainsjbju7854h5e1te8fnki2vb68mcpnf09r55u6qbmdp8rq6mfbuyouarm8ngsicw3xuf3iy9ph2f2s\", \"22nzl33bw855o4v7v4q8swkta1hix0wi5nt0mbnb440x12kqc683tuzhjrcbtofxmfdlzw7ocey5syzhtnen0btwh13bogqrwda1tiw1x14q7fzyiy8h9jdtgm3ymssc4viqvxxjqucw8f80isy486wwb34g3tegul36ltqh9gjrvtz8\", \"4qzxi93gqndz07egvr5w7fdq99hrtoxx1l699dvzf83qroip1pv2wc1x706q3g24wsk95vb4v6gdefb16966049p5thve5ci83t6rn10501aby0wi7dctlrew19ri6ww9lsund7il3d7uo9nh6lj1llvn8nvzdvc0qau4xv\" ],\n    \"probabilityAltCalibrated\" : -0.7766985873814336,\n    \"id\" : \"2y8y\",\n    \"raceEthnicity\" : \"AI_AN\",\n    \"script\" : \"idhm8spsh6eswo22dmikbjy3ubgumxl9vog7z84umntcp6q4322v8okabd25fg7kaydmr3m2amu7yzrd7m0inpd0zbzsic0f2xv6\"\n  }, {\n    \"firstName\" : \"Leonora\",\n    \"lastName\" : \"Barton\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 21.27819829360085,\n    \"probabilityCalibrated\" : 0.8493830215375653,\n    \"raceEthnicitiesTop\" : [ \"082rn47si56ghw343pbiq1c\", \"2gmnya9xjyasv7j33pq1coiwkextifiayr82cbooqsjxxhvz03vtto41iyn6s2lni6tj43kb73122ep280n5hlo981zch03rjlofhuhs3shzugtagjtyx3zo1g08gf\" ],\n    \"probabilityAltCalibrated\" : -0.8465900627389173,\n    \"id\" : \"9d71\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"51bj7i1q5ln2qn1w8rdd4mjb2e41k\"\n  }, {\n    \"firstName\" : \"Caleb\",\n    \"lastName\" : \"Turner\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 13.73116874823095,\n    \"probabilityCalibrated\" : 0.22951082238378517,\n    \"raceEthnicitiesTop\" : [ \"x9szwgimsjjqz41t23tz89ulgligkvahu9jn78ene2ozzwaz2jeigzez94bovya36di6dvnj24ejev38wr8ggzjaor7x78wca65ahoclqe9z4nz4nj0noz896tyz1vjlafs02xipzktkuoun4drttxp4mggeb90glpf3e80os5qdvohm7u7n9gjru0tm7w\", \"qnqmtdx3r2ddtq7m7isc7cgcomevuow4d8e1kjhvtmn1qom0u3kpjj4442yiwymba6n1i36pd4an5telhssp9a64tgqssrmnr6a60be\", \"xgl6ni9\", \"o9vz8ebs5qgrxfwhnjajfn6h0972xuqpty9o8xdz6oclah7oh1\", \"4xoyuwgbu8lqomqp4gtjf9ymz8wr9nihttyx28qvxtdng67jlzdpt2wxn0cbmkc7h2tyfq9inw2fn8s9aj0afhcckz4801qat451alr4hhmj9pfnk33k0s5l0a4buuiznyv2f55gv3o19s1g3us6\", \"vr31qawmop6u0y2173dz3jln546ztuwig6hzipzccu7rxbt8hr4q1la16otlu8a0gwno97jzjq91nrqqr012dverwy48df7rzu4onicte6pwc2lrfjgork9kw29jmjcrw3ywpnpsozxfqjpnf\" ],\n    \"probabilityAltCalibrated\" : -0.7003687282114404,\n    \"id\" : \"5uw6\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"vjzhpsk9uhsc5rvov9bl3cjqezmgfmoqjpyvgovp96gzkmhy7cqhgh1iv99ym2oxwiyvjnyvmqjpbxs62r8ti6qzotg0ro7ofwf4ecpi51bln7g295682wkuqlsnmflpv0yy9vkcesnf0x5orsnfk6oybqgih8yuj2eefxvjtdwrpiv1nzrkzpjmp\"\n  }, {\n    \"firstName\" : \"Reed\",\n    \"lastName\" : \"Cruickshank\",\n    \"raceEthnicityAlt\" : \"HL\",\n    \"score\" : 37.0432753864615,\n    \"probabilityCalibrated\" : 0.4395639722043987,\n    \"raceEthnicitiesTop\" : [ \"ize1uynpavugvafsmtg7n0rxhm0mygf6k4nauo85ar6hxtrjq6m57su5d\", \"xaxkywfq6utfh314myc6nzcz54f7q9dzvtkjngycjydprl2rzzzpyvchgy9pcjjy108b35pv4i700olwu5q66dyj1agr0s8q5uqz49sg2ynhckl0y8w6qx3b8k7k98syir6gfpb18rn8el\", \"y8fv0kybpdhom1g10xsnz\", \"omi6eiro3blln5bp7uf0cvs41g31nb26cxwpkodddkhgr97vz\", \"k60haewvr4arzfoh7m6uhixyzjqlwpcgt3yth3cn4hp9nu3eprhgoitym2qixiznuoqg9cl\", \"4gm7ijn4v0zzce\", \"7lh7ite5338k19yjg5b532addhvj4v7q8kyawo0fogto7\" ],\n    \"probabilityAltCalibrated\" : -0.6023791828066443,\n    \"id\" : \"9093\",\n    \"raceEthnicity\" : \"HL\",\n    \"script\" : \"337vjv52dgd6yum5zxgzfb4qvis9y3xr4khd4yvc58be3ts7b4kbdfe3jtf2fazfelstvcea64udqog3fprpmkbwrc2l8adkgfscvhleumqk3i11e9s3rueofmgpm83ksp\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dad11283-4569-4d43-9854-225c9380fd03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.376446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usZipRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2430eb25-f0e5-476d-9f3d-a7e4ebb27bc1",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Everett/Lebsack/94505",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2430eb25-f0e5-476d-9f3d-a7e4ebb27bc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.374784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    }
  }, {
    "id" : "74fc19fe-fa60-44ef-a74b-a306fb55f51f",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Mabel/Fisher/56888-9568",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "74fc19fe-fa60-44ef-a74b-a306fb55f51f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.374708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5"
        }
      }
    }
  }, {
    "id" : "798fffd6-be07-434b-8b7b-9c830b137ea5",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityZIP5/Reginald/Toy/19679-7366",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Rodrick\",\n  \"lastName\" : \"Parisian\",\n  \"raceEthnicityAlt\" : \"AI_AN\",\n  \"score\" : 28.775884384177928,\n  \"probabilityCalibrated\" : -0.5226654679403133,\n  \"raceEthnicitiesTop\" : [ \"5iimsgzx7tp1njnf255vcozecxulhsieerc8snb5ak2ojlxd5y2spm7x4h5z96zo86a5r8dgcy9q4mbbj711krv98tsikk6scenozzs60i4nqury5r9bipzqp21b9f1i1rgu7oe7ioowxtr4qzwap20s6zp\" ],\n  \"probabilityAltCalibrated\" : -0.683359803364741,\n  \"id\" : \"gr8y\",\n  \"raceEthnicity\" : \"A\",\n  \"script\" : \"pui1h1pibx9m1lmhafecd82itjz71igg4jq6xh3sano5bm2rnq4mez0hdvjnywv6cgw5cp717ez19t1ry7zjwi18weyeie6akql9u6rb5yytjmq3ky7gn3ivaw2q7zyjsw5b30t8xswvl959s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "798fffd6-be07-434b-8b7b-9c830b137ea5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.374602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityZIP5",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a069b2c7-f166-4b34-8232-8203081cb348",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a069b2c7-f166-4b34-8232-8203081cb348",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.374224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "a43e497b-0317-4b74-b0b3-ca88edda76f5",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a43e497b-0317-4b74-b0b3-ca88edda76f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.374208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "16863668-9c4f-4eb9-b32f-441960fd011d",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 400",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "16863668-9c4f-4eb9-b32f-441960fd011d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.374193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch"
        }
      }
    }
  }, {
    "id" : "4abd5f68-4e96-4342-bb22-b8b630af8c2d",
    "name" : "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicityBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Lauralee\",\n    \"lastName\" : \"Abshire\",\n    \"raceEthnicityAlt\" : \"W_NL\",\n    \"score\" : 72.63283460299097,\n    \"probabilityCalibrated\" : -0.16442910238022135,\n    \"raceEthnicitiesTop\" : [ \"2p4voormauil460d2sh3jzjs13o0bortnj6mjm2gmzqcnqz6lgxvwssv1hue5u813jkry767ajc20j4lqscquv0rnwwhpzh0yssqd1iyviy25\", \"7g6fg86q9kzax6vbndq8hy5fgjbkf9cji31hm3tv8kwx4mxuipllsrf1x2\", \"381wxgymjxg9kcj11xpj0ylc3blagyii576jj9603oux96yqc4ziueomjjnx88z7qw3u6lxzna1ewoakf8w6r3sa7xp30vr3105l68ftqczjq2e33scovclk5vekk90a7qgzmhsj892st07jbkrryyvwp77\", \"md00c7baxpeupcuel89hzn6ey0vuo39ojbeu247sjrdd684enakrtzcpvqcq1muo815lafj1cyy2q26wjaldzljke4hy1deq392i2vb0ab07wzxvst6ms79o31eo6cdq2xnelkmtzea6d6c5hvts48zo\", \"m594tmrkhxsvt887zf7hsozrdga6pkx15glq8h8ggiori9r51gjx21eykeupb9y\", \"qaffz9acv4l6cic30l2f1xydgu399klof8wpkif9k5ilo059579gnrc0wnl0t6i892j2g4su4znl8cvryjhrzb94cnp98hmn1lgjlby7vn2566nru2sv9ms3tclyiz2x6prgi775cxtn16owunbli\", \"mmcl7y4lkx00lqpv9rovgr9mpzjwx28rs5ry7l1d4iqsjgujx5cabf3e058x498gqoujiexigmsk8h79bjwyeqi0705m5hm0lh24ngs8ab8adh8g7op5mlpi8ahyz5avc7zqnkxy1niyq2whhbxi3baelgt6fqw3\", \"uv7pg0ulnq2tz5z2tkloq5696pzb2j2bp2ror06b2201mz6yq625d\" ],\n    \"probabilityAltCalibrated\" : 0.579905363316475,\n    \"id\" : \"72lm\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"k07ac7r66q2gzb2ycfd9gbscwrg1jwvb7xfm9sa4w7\"\n  }, {\n    \"firstName\" : \"Lavonna\",\n    \"lastName\" : \"Bogisich\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 83.96684082260809,\n    \"probabilityCalibrated\" : 0.407502445031908,\n    \"raceEthnicitiesTop\" : [ \"76a1ljdv12kgdscyhhdymsugnpldefgwsd6xyo94lkddlk0lu80vwp5ehw98t5p0ie396vxenx5jxc42fo3sjr37wsdjrods69lbit9vv1f4ej9zebu0kai4\", \"l3b6zc\", \"ow8dapa34mbyy0ls16g15l9toy1lcalgf79yohmqdh4yo595f2ye5kc8ibedbz11cx877hvbrssqx33zqr3lddwvsq7o3r0ah65wdgt5tofhdupk\", \"ualkilbz1qow8m1gykfg2719ygj1wohdekyapd79288vcgt67fnoqm1mpdms50l4wgtknhsqnk27oanzspplz01bomlh9enctih5bl\", \"bjpgxbufbgc3ejb99wh2mflsbsr9yg1xm69ky89cgesk7h0ahuko8i0v3qvp64dg4g70mhdys8eomkzc2tq\", \"q98ssmahhn1tzskruem575610zed6x4pd7gntmhpmb6bxj972bnjapbeikpwvafk64mkgbs1umn42rv4mdwdi8hidvxcqew4ljc0lljul5ocftdr1a7ni2195ykytngoek9ah45z7qtc6l3t0rru6m6fijk1qz708zt67rmyjn\" ],\n    \"probabilityAltCalibrated\" : 0.8527726049578748,\n    \"id\" : \"8y42\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"2dw063qq4cctfbyfm9xk4ontaqkp2unpc1y5oy6kzupnfaln3ni3jodp2ws0e7ub53072jly600c194kwp24edricj8ta9zoszyjl0op4d5rdw0luck23y2yj8vp6myo156wunhntu852fzk0zx5ncfg4dqwnkfb1yuvf2ux2209293kbuxu\"\n  }, {\n    \"firstName\" : \"Lowell\",\n    \"lastName\" : \"Konopelski\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 53.04827605639589,\n    \"probabilityCalibrated\" : -0.02266445392902705,\n    \"raceEthnicitiesTop\" : [ \"20zs0zoyzq0hmt56s2fetqmfsr53mkob5gagax0a\", \"arjqhwxvv7e8tvzy7pk8etngo3litltmw\", \"ihprra0zko8oxj13ikjd30xxdms2t0rcedo7dihylnxet3eqgkkzcpz0bhan6s7o320k6o9ig04a1db7h77j19u6k0rz116vk4osdw0v4fgbcqv1rxt5ox6jgs7n9zy6hr1h3hip1ryq7pg67m15jlbmzjrpshg9eraq0wvnkadip7t4qqowqnp89y6njvho\", \"whalyrtxqopghy62zel28vye6of1y2785j7wsyolcnkdccnpshut4xv4i6veh7pejh9r2nha7wb4zwoi3cdfs2h9hw7nd0ufsd2f6uuoi8sjij5gth3ulj9w3iue359seypsg2lj0dv00s6t0ifoeohz0g5hfzlkcbnkhozuipjeug\", \"rvzdgqx1i8twr1m4ec1o2s8se9sp665pvvnz5jawe9g77d8inf3ukvu8fb2mk2o2n\", \"j3et7w5n3vw5\", \"okuwunb01jcfs6zh7y7pbd22b65y7fmiwc19xlqb2lzaizew7xa0tljbb00k3v1cx4yc01b8lcys9jzqhzvg1holalgbtbx36c2gpl9vl0p0nojbybgihjpjc5jixeljr1xue\", \"k5kcyi62x8307pqutngcrl9j7eshclhmq6d090u760kipejuozqogepvz588v5peb\" ],\n    \"probabilityAltCalibrated\" : 0.8515361764022851,\n    \"id\" : \"yj8w\",\n    \"raceEthnicity\" : \"PI\",\n    \"script\" : \"nwjudjk5csvhee6wuh58hs13krim2ldebf81dku42cugfo7bc3p11z07ysw6261yjjpbeq72k27avswhatxp56581hxzab9wpjkf46ovajyutrq7tl4pv7b57x3xj0avicjlwb12osjit4d8h822xcr\"\n  }, {\n    \"firstName\" : \"Mae\",\n    \"lastName\" : \"Hirthe\",\n    \"raceEthnicityAlt\" : \"B_NL\",\n    \"score\" : 90.20126242186997,\n    \"probabilityCalibrated\" : -0.9291079509756142,\n    \"raceEthnicitiesTop\" : [ \"k7dhdjdoxec7v9e6gkpe6vue13fy3x\", \"j3p74hz3shxfw56o1smlandtnqp1fhikc1k4of5ysomwjm3nsfitiovyup700s1o7ry4x0de60ujmv8pncyquxjzd7emq4p9n86wwuddfktq3oprhzz26aj5p33v89cgotpoqrrea5w6ofqoejhbpz1vsq973z08myqb02t20jn7\", \"jqqzxek8cyfamxb5bo3vopr9d6xv5zjdyn4lb3lmfpaowk1nk1v2bemx1v4ebpjhm2e7xcr5h8lju7ejw3b8rr17pd1lfdblotyyd0fcoipblqesf29ktqg8hdgfhsfk6ta4pz10qcxc05pqtyoah62gpah\", \"8na7wpvzxd9u688cxy82xz2m7ulkxs5vexvkfcy3883drzj79e75ag5q0qu7hw4zi55z40rfc63azp4q1kpcs407pkavqgsajpszntczot41vh4hdfxa10\", \"2rn4oabrv5v0la5xccrvseqt1m4nt652n6efj4jz808pls74kxs1ml15w8pjexp82dfsc0jqahvabhiqsklv72mxwtv1nknwxd4k61as3gkt389oy6wo7otxbqs7osp16a35yz50w1vsbppec33i3kpi4o67msxv2c\", \"nkm3yegda99b2e6mcgjxhrzoelncglpz881dnlf0ys\", \"orx7ntw5nrejdv31vibjixda42a9ywjt6b9bmizml0f\" ],\n    \"probabilityAltCalibrated\" : 0.2146652334895609,\n    \"id\" : \"3igj\",\n    \"raceEthnicity\" : \"W_NL\",\n    \"script\" : \"900r5drbn1v8jtd9\"\n  }, {\n    \"firstName\" : \"Grant\",\n    \"lastName\" : \"Stanton\",\n    \"raceEthnicityAlt\" : \"AI_AN\",\n    \"score\" : 29.916378085380323,\n    \"probabilityCalibrated\" : 0.40850085567227534,\n    \"raceEthnicitiesTop\" : [ \"2unmbrgj3p9nw5\", \"wz1h1wpllnj1aky229jhsuu5ljkjntsborwfgmvykl4jj36wr1bihzgybznbbn47kd2xgk1x5lhi24fxnlwd9wsd8dsiy8ju4pnrxjg3z1bqvqpepurnd6ek8v4wu4tay35dgbnkjfnnqeoiaysi3zivhevelof0rqyjry\", \"673amkqpmgzijmuq1i6lwonqd2nvx67s1ndzjjtlxbck67p038fr1chtdl0l178wg8ikhu2wi4a74hti02e04bdpwegz9r41k8n90taq5d0jwpqob5yzrs7yvrvb\", \"sy9snohlpdpe079bds2w0ui93lwp76kjbmf8jhowsf8fppg46jpyeht31gtr44cd31554bxmhgcfy0ap\", \"grw5l5mb8412shtxvz1senhmpbypn2oktp5l4od7a92d069hemyy3pugbp3r76qa4b4lgryw69smlrk74r9dxdj51lek1xwwvv7a\", \"l8v5dibjha8z6pu18lxaiguojtpsam53x0rsy6ngborkkgu03qi94afljwpzoj01dsjymlqh6y9l6wub9hqagdqrzqxvjsq26rcqup8hf946l\", \"rutnfqdi4jd6b358cp2ts9i795oueev8y4bng3jn5hxg7xvjyne0tc697diawia17orqio6v9sth0dnmkfrolkt8qn9plpk8fr5zskxqkjw16shhmf0g7hus28toybn4da26rcur6yzpr51o91a8scnkja7xzfx29j10\" ],\n    \"probabilityAltCalibrated\" : 0.05321993719680718,\n    \"id\" : \"hbay\",\n    \"raceEthnicity\" : \"A\",\n    \"script\" : \"9j7x7fbswthtljtfm3yf2v9whegt8jop1dzhvtpmdus10yzt1xgdjmpbht0d860mcdghfbf3ywij3u2zwaf52rqwz4b5abqustvqh8is2wqy91q6nik45pupyr41m\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4abd5f68-4e96-4342-bb22-b8b630af8c2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.374153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicityBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified US 'race'/ethnicized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameUSRaceEthnicityOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e83b7c73-6831-4d2b-a10c-d66380034d22",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 403",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Maura/Dickens",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e83b7c73-6831-4d2b-a10c-d66380034d22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.373037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    }
  }, {
    "id" : "8cc254b8-dc0e-460c-832e-b71b4528b102",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). - 401",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Young/Orn",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8cc254b8-dc0e-460c-832e-b71b4528b102",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.372975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity"
        }
      }
    }
  }, {
    "id" : "a0abb012-6e94-42f6-8bfe-8515b2500394",
    "name" : "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/usRaceEthnicity/Reinaldo/Bauch",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Aliza\",\n  \"lastName\" : \"Klein\",\n  \"raceEthnicityAlt\" : \"AI_AN\",\n  \"score\" : 43.92920991128491,\n  \"probabilityCalibrated\" : -0.7015462318852275,\n  \"raceEthnicitiesTop\" : [ \"r7ykjx78f1cwz2pt10frm\" ],\n  \"probabilityAltCalibrated\" : -0.6410523799461032,\n  \"id\" : \"94po\",\n  \"raceEthnicity\" : \"HL\",\n  \"script\" : \"5v8zet2j34wod3m8y7jr328vgswcgzeczar6pz0nr7kqheydzfrydvvzfx7ntvq148ca2lx14zyy7m8xhcan6ekzj02xmxerch3qwmbz6mcfc77282lrbmvu2xeqgaldo1jvl79jcqwmtdblxqg2wp1fk5jj8pvjzd958kuvey2i0rw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0abb012-6e94-42f6-8bfe-8515b2500394",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.372902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "usRaceEthnicity",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "raceEthnicitiesTop" : {
                "description" : "List 'race'/ethnicities",
                "items" : {
                  "description" : "List 'race'/ethnicities",
                  "type" : "string"
                },
                "type" : "array"
              },
              "raceEthnicity" : {
                "description" : "Most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "raceEthnicityAlt" : {
                "description" : "Second most likely US 'race'/ethnicity",
                "enum" : [ "W_NL", "HL", "A", "B_NL", "AI_AN", "PI" ],
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameUSRaceEthnicityOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "26a198c3-317b-4892-a01f-5f59594365b4",
    "name" : "Print the taxonomy classes valid for the given classifier. - 401",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Ernest+Conroy",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "26a198c3-317b-4892-a01f-5f59594365b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.372568Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses"
        }
      }
    }
  }, {
    "id" : "1da655e9-3d28-4f78-89ef-ee317594b18d",
    "name" : "Print the taxonomy classes valid for the given classifier. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/taxonomyClasses/Miss+Kendrick+Wilkinson",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"taxonomyClasses\" : [ \"yelq8zu3fryj6knspofjrp1469agnvpfopjglr1e3okktfnp5sxnaqqb7qsepqzmrnxzehgls2q0q5gwe2w3z20bshg95tfwlxbcxcjwqcpbw3x369d2n2dq8vmsmhnubjvv42qo42g873okkxqhymfbrvf41atv9fzfvxszc9\", \"2uq4cnnhvr1ei10swnpjo3y9snwby7z9m9r8nzs9g1j9v9chddsvx0wa3ih0l64ewuqxajwspysx52cvqbwevwrp3iwommbdiuv3l8nbyqtnrxzslhgwjnf4i8b9iu0ebcb63x5ozi035v6tx0cwop4xqn0tlqiprglp0o1lcdr0c6\", \"irvujz8db21eejanpb5wurlp2v7y1zxbjj4wqcxybiz36pkrydg81i553cxv9kyhy886\", \"6rh2vkskpmehcsgsjj8g6dheyb7oma56yxjovpf49lkisk127ysd302ohwzhrpswd4tg5pmgkhzhooycq6xwx3s299urb3p06ozcvsduenq9\", \"3o3ktjorifipf36cq6d70mfqzxz7kwrcals2nrsf80k4xelhr3j5ah04ryyhnlku388161althuoel09gex0wv5g5toxirqqosqbousi3wzd5s70cbw6yagf6wigye6fvffhn\", \"9p161xinwv94j0kjkzfm6o7mr13gcomoi4he0mb10tzvg563j5355x4wfnzjvl1uwvu5bn3pur6iygt7xd2hg39ksmqncafhbtcic4bpu6jt3gofp7nalo41g16azy4fqn\", \"ggf8wwtk4al7bu803cpe62yzi7cmom554shfjk63t4605m0eon62715z2fqx38ane1iejdtkldafqhqdl0vpfro5ktapq479owxu85p9dcj38jbjz92vn1brnav8tls339vu6zr0phv69s636y5o5rd50tz78reai7xwu3up41fycz3997p3n5alf3px4icl\", \"pru8guxe5klp3u81ubzxsgsdu11jk6ayeu6yq8jrn8s05cf44005kzthyd22\" ],\n  \"classifyingScripts\" : [ \"c1dsabhd60hksxpt6llhpamp\", \"2vpj9wbh2rgehy1qewl6llc8undd2xh69an9tzpsbrlsyohnpi1sescxm3mvfrlq5pu8szwbfk4jv4nig7dspm206eko6dux3xfaccv7mqiv293ra7levjnpg1jop0pv7pv4smiub73cytr4w501yfaw5fv64ug50ygykx6ve8vpof5\", \"9uzss4xiyl0c8w7v8ou192mrzwii1aatjkjdfkxhkm0g1u7icdvoms1gvtbhckx8pgt5m0k9zhcsu4qqp0dfwmxpa3r3tc6knwf0tauz29cc\", \"7hxgnmnm12jitdl\", \"4rjlilqrtq62ee1fqa1r6p\", \"1ans\", \"u1d5v73j7komerdjnf4hdmkgxmdlxkcwz5vghm6w1f9x78y7a8n4g0hz5l0y7qzhlwc0tfxzxm6oe47p\", \"42u\" ],\n  \"classifierName\" : \"Ian Volkman\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1da655e9-3d28-4f78-89ef-ee317594b18d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.372508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "taxonomyClasses",
          "schema" : {
            "properties" : {
              "classifierName" : {
                "description" : "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
                "type" : "string"
              },
              "classifyingScripts" : {
                "description" : "The scripts / alphabets this classifiers classifies to",
                "items" : {
                  "description" : "The scripts / alphabets this classifiers classifies to",
                  "type" : "string"
                },
                "type" : "array"
              },
              "taxonomyClasses" : {
                "description" : "The taxonomy classes this classifier classifies to",
                "items" : {
                  "description" : "The taxonomy classes this classifier classifies to",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifierTaxonomyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "873fbeb8-3f82-4f55-9b22-46b600e3184d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "873fbeb8-3f82-4f55-9b22-46b600e3184d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.372258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "8e99ddae-f15d-4b59-95f0-cb0b090430e0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8e99ddae-f15d-4b59-95f0-cb0b090430e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.372242Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "e423ec71-b20f-424d-a40a-2d12b933a21e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e423ec71-b20f-424d-a40a-2d12b933a21e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.372226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch"
        }
      }
    }
  }, {
    "id" : "d9bde52d-ed22-4ff8-a56a-de37dac7aec0",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on a list of up to 100 names. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndianBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Rubie\",\n    \"lastName\" : \"Ebert\",\n    \"score\" : 17.19159628818042,\n    \"probabilityCalibrated\" : 0.28040428636031267,\n    \"subclassificationTop\" : [ \"bnpxf8modq9mfjjh17yeviuqe8ov5p93e6i3xxshp4nshxp5b29od4dpc3xxycx9br79hobn5swnem1c1dc4mquknqs3zgqs35fdp2gv5c2kpzfsw05r7wzycm1st6zwqld5flqssprfq\", \"iypichbogfgj8rpqgv4eiuw2l8f87cd3gbvpn3los88k3z4c9hmms2yi6v1rbbex0xbblvnhqe6qb65jxegkceapnp59rifrdvdlgniin2b1veb046yr741dd75ea0vrghwzz99j23skppuy40oxjq1gjlepkzjfpkmp6z5wtynoxxntf9mwyi5haik32uan785it\", \"bbwsch9kx66i17uwywbwhfzu27duywu1m2qcd6t13k2zm9ntnl071jmqlehh5x2wttrhpm5tkwry65ksk47i90o390k5j7ta15smr5g95x8j1siyxino3z3qfipcq8omgig54g88tgm69jihm79sx\", \"b8dfpek8w6zx87gbvjrdb90roxlxwywl2a2qbz25opgmob5thcgfgc0zated2wey4g13rokcou6q9g911o3gxdfef85hmhsnf2r536xtr0u0d32sw2dw3\", \"q3g34uadr6e66q7l3va9n7u77m70rmziszk0up749byltkm58zw3pfdi0xpwvogqxoht6f4p2hjqziydluzd5wpraghvpgkss2o0y81eah4txgjin70526chx2hy8tzp6o0j896m1amx63l7dnrw7u1kesixpqpwhfura5cewipcst7xj6zadz0p\", \"0zqorvgvdkmzx6q4cch9x8kaleln1daoxi9jl640bek4h261afudwy0qw3hflyiigm9m5s9ksnod\", \"iwgwe9awb19koyxfqg0wtozh5fnrqea6rvplkqnh76p3xzi0z0n0797fetlgz232uu3mw\", \"ihedsbqvwufawsvpfomcoysnpquohl3pcvu29a65mt5z03ywmjec58qxy6jc8syfsxzdv1iantpbezxahxcihlo5wqf82mqdynb55ljgnpa8yss6n80g747hyse48fooy48pgxgv1yggbb68uxj9nme5ihkg1skbka1fjdn47cvmdnkloc3paiukqx1o54l3kfm\" ],\n    \"probabilityAltCalibrated\" : -0.42149255133090047,\n    \"countryIso2\" : \"mf80pei5owjjwy9mjfn8cyinb0jd23jek9ezjtj6zb915z0s5ejryin9hts46h3974stdxvton7ff7a5ap07elbv7ac54goafgax70xf4y2ki1g3nn0crcjaugbg9nfdh943xgl527xlqv5t7pkxim0rdms\",\n    \"id\" : \"ey5y\",\n    \"script\" : \"rx9yspw8jizsanuuxkmqs5bq1xk8o9x6tobqtiuh1xo8fsalr3lgkcb510ljn5xc7cc7k8t0r11a58\",\n    \"subClassification\" : \"yhkcc17jct986hg697owf7gijj0q176e1kojukcs6b45m\",\n    \"subClassificationAlt\" : \"0vw820w8c91jfi19a6ydblhjtw9f3sux09q1z2mzvnwxfba4nwj7a8mqp17t68uzeb329vwss3yr13yezfh8hioisku9dtcq9p2s51w4fzoqa23fioj335n3guftl3s7yfs9nqreozlru040xzuz1lvbsu97mz69sose3x5qg8x0lecc7016cs9t\"\n  }, {\n    \"firstName\" : \"Jani\",\n    \"lastName\" : \"Senger\",\n    \"score\" : 78.66977824947762,\n    \"probabilityCalibrated\" : -0.8332830545663898,\n    \"subclassificationTop\" : [ \"kabn99gpd7l6bnomehcsxkkw8jjxb3nljcgfg2r0v\", \"pxmght9s78xn3rn81aqkyrzvibq6bihmjm7587oh9jb2t5fif8sw2q2sg6fzu71e67jt4dlng\", \"vnbjch3n83bknsdoibu84v5hpzsum6h4gzvpaklm71gclds2w4dq77919sqlgqa2vqrdvls5fzv\", \"dqeeinl60nx3vbe6mgfkp4jiwqhsuhzszsv91l1fpdty4l9sk77v6690d7ahsd8mq2c1v9mn47rv01e2tfe1e1e0jrq3nea37qherf8cidfbzw5aeg7qiimltsqdnkwq118wxdk4efo0t9iineo2fzq9kfen0eq8lu3r5x\", \"7t556kcrjyb4f7vc0fzhosrw0xuskzjjpu85gico7wwbtg9b1f4bj1ac1tvha1vum9onykckacmkx472vlwiuuvt45o7tjpmujqjq4bvp6jsrmf1yp490ylqsdpv8pic5jg2vdafwxav4aer65yjepm4vxrrsky747gyqrojjinunozhjv0mvsbufp5k0r8cgtlg\" ],\n    \"probabilityAltCalibrated\" : 0.8357030082877313,\n    \"countryIso2\" : \"4wqf9lm6d0cwho7gpy7o01pqh1ohf953vzyaqdla650micafu9vld68s1tlc4l4hefq0cc2ygwu3wy3iz3tvr9nc299o45v73w7bxb0vnrxzaplvi5hdgudi2605ugat0kg0d7y\",\n    \"id\" : \"e49c\",\n    \"script\" : \"4l2wctfnvl77fhl60ezhaffd9cfi505uqe4pvsxwij2irqk3elqwgpe4yzrnsnh8d\",\n    \"subClassification\" : \"y3423yuj94cemzl1safqgrrzwymqw8jpr88nsvhxxagswzroewt4bjzlxns3pofnkcpwry70p8l6awje6z9ggba31zl3ddreb8pw6zntdb3g11832wmaau7\",\n    \"subClassificationAlt\" : \"ndxa1bqchcp4pnslt0xesmbzwx3adofbyjg4ncqh6cowhnt5q9v4j70rhqqwjnh87wyvkf4k4pk0mm1nlbfrrwnbou0gfyayz1pdc3qx9hltyzlt8v504lle546y5yzca4jq4p0wjqryfm4yf0l7nqtyz8afqfwgojmmex\"\n  }, {\n    \"firstName\" : \"Adell\",\n    \"lastName\" : \"Trantow\",\n    \"score\" : 83.4254194496951,\n    \"probabilityCalibrated\" : 0.47742851987155044,\n    \"subclassificationTop\" : [ \"3plhrizvr1a54f683rka5xr6ipobldi3xn6ayj\", \"b7xlcp0e634or43yd01fru6fbdch40t9bfafqmsnicq0g9or4knt5wnpszelv9pxuw6qy198uz4uzs07nbpajx2bn11xvsud33gd3a\" ],\n    \"probabilityAltCalibrated\" : -0.629277503677713,\n    \"countryIso2\" : \"1fskzwlcllck6s74aijfzbqtphg64jy5wrmlvxzs3b\",\n    \"id\" : \"wunb\",\n    \"script\" : \"wf0qulnc4tu8qghd0cwqn79a6y01w1e\",\n    \"subClassification\" : \"xj5yygcve4sd07sfbeikcsarq\",\n    \"subClassificationAlt\" : \"oxgehgp3gtdfh5ccvl0jb3ub56xi4v6btmqxquqfeuw7dl0uix6308k0ts1moekfjuyvdx6ohfe86bg6kydkk17j94pkz92498ncgxrbi7\"\n  }, {\n    \"firstName\" : \"Antonietta\",\n    \"lastName\" : \"Schuster\",\n    \"score\" : 48.21388777493899,\n    \"probabilityCalibrated\" : -0.7619905852042874,\n    \"subclassificationTop\" : [ \"i9408iel1hk7munuc5x0azeec7rsuhihy3g1rmwe3fy2sn0zjmoepzb2f669aqgmxpsdv7x71zky8ul5zhtecu8hxjwpzn017njthdccqrmqyqk74rgvm7th8w\", \"r26j4dln3qob8m80p0knakngon7a1qww65b0dptke2kyifi9ovlywobh68yojo3rqil66nybot6h9nc5qfy15lkf0uh7wk26na5ezo68fjs9pbv80jxm6j8kitti3er2mve3r7m3htn45nfu8udf6h190axe907692gprxewxlxp6esr0ivrfghyfrd5axqk\", \"2cntwu311a5cwo19hbgoa6hf26ypk1ko75cbdk04jcepwkviiyb3yx977uuf3mkzt2qvn8rj7gftqnxfuv76prgc0edrckgrwh6yj1bcqa9q4dhnqlhldd8atfz9kmqtla34g538omrpvdp8xxt2zmzijsn8ztdl3vnk9is0rgaduoc93\", \"5i7uzt49ofzcqdaa6zoogx1rxnt8c0uehyeq5tf\", \"ghcqo6zofqssspqfi528wgzr80mc66dbur\", \"lnrgy5a52668kan86m61wtosyzi1opwkgd726bmy5o9pvzlcbioff0we0hnwmajt9b5qa3wv8cepq4ytpweusztns2etv4zsx9l91l58y8ro5kzwwbshtqya1m6jtnl4v3qt2ibfzpqqc0nprl6co1s1k2azacw3cttwj2kuov03j3mnakjv39md4snzgmpxfbq9ib4\", \"8hqurgalunkb8e3elmaudjwatqwqvsvysckenb4c8ve2ax1pab0hui74fdapc5r578cwt5u6adcin8m9m3rcrntc\", \"1i2ocalgkltves8\" ],\n    \"probabilityAltCalibrated\" : 0.42524699399964905,\n    \"countryIso2\" : \"mbgcyo73bax19fid9re63pltfxdw6bu1xxo1i8p9eflzfsqa2usvs9jc7xy30sxgdyq0hcoy3zk08vxr93voyflzig56za8olkvc75g4tzr3msenfa7tp01qsblmkfw8hqee0vq5tlt1szllnsv59\",\n    \"id\" : \"ez0r\",\n    \"script\" : \"ce49uq5c76gksrxanhi09id2rcb5ljljiqjx0mj7z6twm69a8qxx1iihmk6vvg850gb57kc7m0wbkxbmxm8qnvds1t5nfa97gstbp56yi15w3n1ctvi671i30ndui1matasub0fec1trb0liw3jlgf0mny9ioul7smdjke0c10f8c6laicsob5dw6r2ecw333sz9u\",\n    \"subClassification\" : \"ymxocn8u7z5qv2xucaeq8cox3w6r54p06kegfhhtu9ibir92l5zv3yflzdjeacj7kts9npybgqpdd4mytgzqucdy88sawlta49j8qilpcspzreajldhxt12ylllmuurmlsiojpmbrigyn71xgzur4m2nfk2q20u2vxyxxsb8d3wz7m1v\",\n    \"subClassificationAlt\" : \"ffnnab08wo11zxfauvuw1zmmxvba43pe8cbga7ndjx3dfgnleavj81oflu7zugr531t5qthe9zzio0s9qv8gy31\"\n  }, {\n    \"firstName\" : \"Hester\",\n    \"lastName\" : \"Jenkins\",\n    \"score\" : 6.645712540891546,\n    \"probabilityCalibrated\" : -0.2218831802082244,\n    \"subclassificationTop\" : [ \"a2o1be4e515uq65a5kqtvmwmcrzy0ekjwo6bwci4ghi14lms5mtve1x8jigeia7uk2v7e6mjlmkucw4qq9j8wezl0hslke4uykd7tw6gmk350l5x2zqg82l2dabtg5er1afkgygq1\", \"j1xk5oa9m8677y1tqmcoai9ft8w82lek2bl51yoyqkrkefmczkq5ux447qbjl1u\", \"zzi8mq81v6ivvdt0qmm63ordez0tw9lnqd94ijkla8qux3r6t1j83ir4i2q5uvn0pccaob8ywfrx5im7j7m78ct7uj\", \"drofskfgui46r8wgssapdndgteatlddh3ue76nio669u21a7uird11hajm4khfyrmpqrgz1lcacfb1w0fjgvrfxvrxzn\", \"9wvoz7xqj9k67xw9m7rtifnho103zqm0dlc2z93dnwk7dt2m7rncix13fvg7f7nr0mcckaq67zyi9u6tdemqqy1z1o5\", \"7cjtzde869befv5capn4diw3tiq7l1zzzphd3t8ej6j6duv0040qhbmetznhh9kpbw56xc3p30l3hpjerd0zqeyd8q82vgony337tgykkmymx5h9rm8m2bl3ksq09e7tktm07npdmgef7p37tqrv61qgb\", \"m61ocldioehbkriqp0g6x2mrixvypxyksouajz06rrltuqpls4eabgf697cdmpjb1n991qbolnhyw6shv456h4lreeoileievokrwpm6tmxvt08g2s0z77xffvhzh2otjwyjulcpoglr5ztgs4dcmxietglvidocl26m7e9xq59u9oy6qk3htq\", \"7obk9zoqn99w2ixzso1apsdccczgohxb6pjqywuappu8clvbkva5fumj4gxs84b17g727xwdb7ip4wh6xi5gkudmudxykxn2pb91319lirzpkwf80r4xi3t8jdzmalw5a4egk8lj5pziy1yskw86iuy2ix3ggjhgm1yatboy\" ],\n    \"probabilityAltCalibrated\" : 0.6170301743154623,\n    \"countryIso2\" : \"mfqcxizck1wrph1w567jog8yk2b3ijnefih1\",\n    \"id\" : \"3ia6\",\n    \"script\" : \"apqbafo4htap8iu1h29ldl3tgqy19u7hc2mmzmoftgsb8d6o7zqd71k9f7qta9h8x0qxzos6wte8rhywgqldypr77wwcorhl0it2uwc77jtfex0nak6byr1ywh57p2tta84fv8ohg7cbdxu00xwwfegun5sejbo3ug75wgg9h5wqctuoz4k0sn6czpi93jdv489o\",\n    \"subClassification\" : \"5q12yx3hligt2heth7w2e7li529n9m7yml5i2055109ltc5j99lui7qv46vuwa2o7zxc7kidxme8eqpvz9gahg9bncwqju43rt0\",\n    \"subClassificationAlt\" : \"lof9agdx5cnkoulmp3cguu8kybwdai28qc1z0i9o0ayz94e0ko5fb5zalhddteo5sjff8rjukmmk6het95shzd20ehp9cn3cpggpnk818zzo6z9unntc8npeizba9ygoej2hjvbfpy1bphgi7h5qxlx85ytwzb29qx0nuphvyyfxn7m\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9bde52d-ed22-4ff8-a56a-de37dac7aec0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.372192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndianBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e9bb4e0e-12ce-4c10-a5de-162d03e766af",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Jessie/Schinner",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e9bb4e0e-12ce-4c10-a5de-162d03e766af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.370982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    }
  }, {
    "id" : "0bc43f43-ba1d-403e-8306-aad2e3d805bd",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Philip/Kuhic",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0bc43f43-ba1d-403e-8306-aad2e3d805bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.370924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian"
        }
      }
    }
  }, {
    "id" : "ec4c5032-8264-4fe2-bc9e-ba23c6948df8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian state of Union territory according to ISO 3166-2:IN based on the name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationIndian/Mohammad/Fritsch",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Edris\",\n  \"lastName\" : \"Effertz\",\n  \"score\" : 7.877449810957393,\n  \"probabilityCalibrated\" : 0.4511455079475095,\n  \"subclassificationTop\" : [ \"ld7mvxkpzcjke4bereihn6jl1opfv3drtvt7syn6g3d8jxi8gfux8d8t8my1grre19w0y386\", \"h40w9f1p\", \"0vigntqf09f9yyq5l4fmtw2h84an02g6snxbzcdqixw1n7zma8cdpok7wv9d6uscgwxarnmf6vq36zz3928ymtst7kc3vrohbwmuznsfq2zpq2h06q3ly75cd5kw3y9v3x0egjbqvaymr65h585n4hxky9j1ab242uzmw5pgs338t4wudl6zh0gpil6x5psqkjj7y6\", \"lu6dybiko6vr2tjnltlb6kn92tdwbhu2v58silqg1bpz253demsypjojuvfaq3jjh03lc5h1tqut24rw8882saawr\", \"5cjby350whc7zbb3fzqo4bvdrf1enmger9opme029461l8nbmf2kkfa9l5cqz1igoiq4gt8dcr4khqflrh1746fs1d0mwfui5qf0vjr16mvxod9k1k3ko5m2f8t2uw6odxh7h93q95m8qtoy8cdjk70bsxa0ls9v9zsckvj0h1307ic2pivlsnvvn98r\", \"q0jqx0rdv8s8n2kxhes9fv387qm1aa4vp5v8vh1zfl0hofxceyogfk7f029w3dt1rtoxmxjpuduna8rpp6fovzchvenho99lzeplyzdnpom5f1t772c2h27sadtldvjthq\", \"69gf16uok0mv64kf1iwibg95gyhw79iqvtvoqgrs14e6bcnq0rxyyzrsrmk7bgzv1oc3swnj3c\", \"t7pb4kn91jssbqcdt3p6uky9kv3pe894\" ],\n  \"probabilityAltCalibrated\" : 0.3350953316095018,\n  \"countryIso2\" : \"g6u3539rd5a459ma703nu196rb8brlq5udgv4g4437frclclj92mm3mi9k1eytkg06xf6bw9i0ri2jsx8rlb25h0iaymdzz6i\",\n  \"id\" : \"tb5n\",\n  \"script\" : \"qmboww5ayiaxr5nkowligxdwkst3fidr22i5rc4o\",\n  \"subClassification\" : \"4n5l0q85n5tv54u3rtim4m1grz2f32zuukl4vhn0jtexfizfoxh1n8hao2cub3oim0fsi7ym536m5yl3wxrvvejcc6yeo1subp3p5j0hdt0xoeb97thgd13d\",\n  \"subClassificationAlt\" : \"s1nd8p0i7vd051kwocylkvdcb9y0hr1jwr6gpskwnfsbxsdmwutvvvldu7yhrwm6jddle10he4lrusnyw0yujen63cswn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec4c5032-8264-4fe2-bc9e-ba23c6948df8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.37085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationIndian",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "421327a3-e45d-4f38-9c2a-a31bdddbc4bc",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "421327a3-e45d-4f38-9c2a-a31bdddbc4bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.370476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "96934be6-0ec3-4f66-a81f-12d08f97311d",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "96934be6-0ec3-4f66-a81f-12d08f97311d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.370461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "f8241c15-ad96-4664-b1cf-3cea2cc1320a",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 400",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f8241c15-ad96-4664-b1cf-3cea2cc1320a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.370445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch"
        }
      }
    }
  }, {
    "id" : "d77d96f6-3ea8-4dd1-bcb0-248815bbb944",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a list of up to 100 names at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassificationBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Elroy\",\n    \"lastName\" : \"Hane\",\n    \"score\" : 70.06743290098811,\n    \"probabilityCalibrated\" : 0.054550835596094194,\n    \"subclassificationTop\" : [ \"47hqiu1hz9mbhbc4c66cw3pvdtix80gktzb9sz1t\" ],\n    \"probabilityAltCalibrated\" : -0.3954288396467187,\n    \"countryIso2\" : \"lnr85oqyvhx3979gnvb8heyxbe12upa2toadnfb58k33wxy19sgh8qqwd76kpimntp1ybwqvx4w48ev18uv0l69nfv76jdzz1yqkahnw79qndjltp7qt4nkjjfwfwt9cg78a68e06nbrngbog1bh5h7ge5dz8vbvg4202lhbm\",\n    \"id\" : \"6444\",\n    \"script\" : \"e6uvxm9nb5mh809hsmxxe68jdmgmb49yef7plrvfravmfffjk1w8rq3nf6t9tfeteao07bg4gnd55zd8xeo00bvbwhptkvldyg597qcomrkbdqikcjbzklj8bc\",\n    \"subClassification\" : \"3lcq1iu668xlgmjnjnvaqibdfa4d87gf1jekue6hk9cqkdr3g4vv35cxyiygw316miixjpx6j8b0l8caz1l5m1alzye5v6uh4l6xoso931hqzosv017kyr28ytkgpks2g6c05ipuz\",\n    \"subClassificationAlt\" : \"mrqci6q7iwdq4u49e3sweev8lekzbbkcqo7620ikdbxvzolxyjrlhclhrhrj338hz4bfmd9iela0ma1bp0klustclkbqe1po43ax8590hjfuek0ezin2omaemmmt8p7ozx4rfo7ra5wq6\"\n  }, {\n    \"firstName\" : \"Leo\",\n    \"lastName\" : \"Nicolas\",\n    \"score\" : 85.64786500024418,\n    \"probabilityCalibrated\" : 0.030687687350411164,\n    \"subclassificationTop\" : [ \"1xfmblzk0somm1ks6he1nlhn9h3w14sh7dnxcj38zuw\" ],\n    \"probabilityAltCalibrated\" : -0.9685558331758848,\n    \"countryIso2\" : \"efljwh9zxezgxe4pn4cno43rgfe593i3okifc3ll668hfheicoq0v16z8s1l7v85i06uwwl0ku6d7nsl4tqwtyzecce96fgy5shywa1zn3v4sb7thcexe2mevzmbjxjyfno3qtoquo5xz7j2hg8s92zttgzhd7xxdq2rbrflzpkt0xk1rars63ul2jjztzt7r4zoybe\",\n    \"id\" : \"15v0\",\n    \"script\" : \"mafmiw11zxjina3ig5hmqxw5625lqmjjg3esnl2a9bj73ylkjjq5zqxltn8mf5i3da2upzwhu8102sbmyfuyph61ch\",\n    \"subClassification\" : \"nnecsks41l5hbfho8tgr\",\n    \"subClassificationAlt\" : \"m6m5gqn3zg8im2sodbf4s33d9ghxrlwlt55oazmp32cz0kgxg457jkoc6li0tanyyswwnuivmrm3s9aqnhy1axgtosqohgep928tlhc8v92k84m52w225x\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d77d96f6-3ea8-4dd1-bcb0-248815bbb944",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.370419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassificationBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country subclassification (regional names).",
            "properties" : {
              "personalNames" : {
                "description" : "Classified names at sub country level (region or state)",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGeoSubclassificationOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "66046fc7-e04f-4d71-86e1-81708745c8fc",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 403",
    "request" : {
      "urlPath" : "/api2/json/subclassification/hn7cwd2dfxv878nxsl5ot37ym781wxfl8rnjkyfgjw5zs7ulvcgmguthtusoymiekyn9rmasprj85fhj1w1ioxyeralyn1hh0zdkyazsxq11jnu2xkigyu7vaot47v51ujjvsx51zd4ct3dr5/Craig/Rohan",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "66046fc7-e04f-4d71-86e1-81708745c8fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.369978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    }
  }, {
    "id" : "c9402add-cbf8-4eba-831c-1d6949b87337",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). - 401",
    "request" : {
      "urlPath" : "/api2/json/subclassification/2y1e7kgf03lz6y2c6e9l9jp9h35jo23pegdcv6vqqbdbp3ey27q4j8g3abxk36avow0x0frkbr8bi4s0ipfjwvaedg1n3tsjs8p31k75w3b2tu4rrntevfy5wwfzeqv0if1gfh1ggjxsdgqkk376d5uilqrcoqxbikjvyt4m3zjxbmmegw/Ozell/Nicolas",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c9402add-cbf8-4eba-831c-1d6949b87337",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.369905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification"
        }
      }
    }
  }, {
    "id" : "5fded683-a9fc-4e23-8052-79b2637dfde5",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely origin of a name at a country subclassification level (state or regeion). Initially, this is only supported for India (ISO2 code 'IN'). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/subclassification/dms21z2xkwkro8vkueg437dm214d0qgf7nxz1gixl3zhgx2cpwqpw3ls53kixkp4a4p53ktajat1r69k81/Francesco/Kris",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Janel\",\n  \"lastName\" : \"Mayer\",\n  \"score\" : 63.258634650397106,\n  \"probabilityCalibrated\" : -0.09693192151257946,\n  \"subclassificationTop\" : [ \"fdw2mdrrmwa949bnwhwx4th1798zbmlnkactuwp4lqm5gjvufqrzaqz9ncii3vxa3gsniwgljvn05f7el6satfmbk0rr6ll76jrwe7vc3nlb3rm9fur1bk51hkuxgr\", \"zhpliamk9q8xo28ktyrx8i0cfcuqv46bhgps3vq90yulzny9t6mmp1da4mkzixcg7lth5t8af4q73w53ypk7cm4jfems4wyds0p\", \"mo8fztkutf3rwv244ime1xxxqi8c7hqgexs24m5jibev2kmqxkcryxelltahjog3t0mucizb3i0c\", \"3dezl5ncf6d0fjfvv96ctmfeon786e9jvmbbpb9ub3u9cn9tpc2j4mz5u3e7cl8eeku8jbk6hz0ksr\", \"qw3lu2o15wxi6g40l71gxa25i18cexiqzlzgnqkp25kj0o1j7tsltf0d4trntdmq0g4vy8za5nkpy5dlj2s7wz2o1uh279g24rpq7fljx0tdb690qlnktmh1xbvspqvpa8bxz4j6ba06oght\", \"1v9i2urn5rwlv1yzwai0fzxstpy2s1ondusv28911tox8ceemn5v8mozjj7gqxs5n3bohxevlrobkf7jdx\" ],\n  \"probabilityAltCalibrated\" : -0.9655824244782492,\n  \"countryIso2\" : \"t2cbt4ju2l3jnfgpisx2cj3waahgj693g74xz8qk7bnn66bcqrtw7dktiwzi6m9bnptwgi1127no4wabmzdk23xjetujrfg1w5pmy\",\n  \"id\" : \"yqx7\",\n  \"script\" : \"in2r5xgk5k2bmry40diep6sohz522rin3mxhcka7nc1yd75y8tctx3a07ukx2v48fwbdhgsg1vx1npofci38ly16yfpd4b1u080s80dhx68r5tci0e3j94tztw3nif17vq0\",\n  \"subClassification\" : \"jrx2h0izp61mozcd1op32f4s4xri8oh9c4r588mlbuq0e3el3k202tya1gqi7zgh0ogqv5fo9s249ur3mgk4pzo4c3ibpvfmv5c64py1ehzebb6gd3rmcpkddjsjjvj\",\n  \"subClassificationAlt\" : \"hep402fguqg3qnqskpdaeb4h28qorn6a6cc5ooztlvn9llg512d86n80573we6caji2o9jzma1exqayqzhi59b9kwwydtqse8bvgf9mn8zackq5g0tdlmzgf6w3vk7nkdf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fded683-a9fc-4e23-8052-79b2637dfde5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.369819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "subclassification",
          "schema" : {
            "description" : "Represents the geographic name origin at a country subclassification level (usually regional or state level).",
            "properties" : {
              "countryIso2" : {
                "description" : "The input country ISO2 code",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subClassification" : {
                "description" : "Most likely subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subClassificationAlt" : {
                "description" : "Second best alternative : subclassification ISO_3166-2 code",
                "type" : "string"
              },
              "subclassificationTop" : {
                "description" : "List subclassification ISO_3166-2 codes (top 10)",
                "items" : {
                  "description" : "List subclassification ISO_3166-2 codes (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGeoSubclassificationOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a14e17df-fb34-4f7d-8875-6cf6e057b0a0",
    "name" : "Get the current software version - 401",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a14e17df-fb34-4f7d-8875-6cf6e057b0a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.369436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion"
        }
      }
    }
  }, {
    "id" : "b332dea2-086f-4167-8747-2c7eef64e87d",
    "name" : "Get the current software version (application/json)",
    "request" : {
      "urlPath" : "/api2/json/softwareVersion",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"softwareNameAndVersion\" : \"4tkrg1j6wv370gte2igw0pn16axjkoeqg5whlpe6vmup5gaphqak8bolvqs3er38g6shcyi9bguayjgnzsos33gckhldqq4jouiqy4v21ukxi8ssbh3g0r3rkczrhh\",\n  \"softwareVersion\" : [ 1527106493, 1988453046, 233959352, 1376928349, 1571481283, 1346175285, 1334386195, 1453214385 ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b332dea2-086f-4167-8747-2c7eef64e87d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.36941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "softwareVersion",
          "schema" : {
            "description" : "The software version.",
            "properties" : {
              "softwareNameAndVersion" : {
                "description" : "The software version",
                "type" : "string"
              },
              "softwareVersion" : {
                "description" : "The software version major minor build",
                "items" : {
                  "description" : "The software version major minor build",
                  "format" : "int32",
                  "type" : "integer"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "SoftwareVersionOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e9aa720e-2f8f-4dfa-a3ed-bdcee5fa2a93",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e9aa720e-2f8f-4dfa-a3ed-bdcee5fa2a93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.369306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "e7a440ef-b5a7-4164-ae5d-bcc02b3a1293",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e7a440ef-b5a7-4164-ae5d-bcc02b3a1293",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.369291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "f0a4c68c-b5b6-4132-a79b-d61e8da2c64f",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). - 400",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f0a4c68c-b5b6-4132-a79b-d61e8da2c64f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.369275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "fd8b4394-c3a6-4d1c-a009-2737aefb1938",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full Indian names, provided the subclassification at State or Union territory level (NB/ can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"gnpw7s75ak174tj\",\n    \"score\" : 25.6800690318003,\n    \"probabilityCalibrated\" : 0.9571040672051643,\n    \"name\" : \"Dr. Armandina Smitham\",\n    \"probabilityAltCalibrated\" : -0.43927382482849664,\n    \"id\" : \"ukxw\",\n    \"religionsTop\" : [ \"96qwxni4vb51huuiik7xrg8cxmz47emhbl242ibmaqk2ft57dt0satq\", \"ify6wzjktvqejs7sbr3i82txdwodnxfo1b1ww1q0jhaxg2dkylrlshnuy93h20yl9c\", \"38uu308zi42kwkhdjpmbobo4nyds76xl6bqesti0a9benppvrbs2uuvek4wkbc7m4szacbf8y66xik1p4lycq0adg917me2u18va06q0ra9y5us3qjpo7giqq6zynzzs6qx8k6gy7av05xsily7buobzelr9j9uwlyhtbq\", \"6takwft552paly84rg4pm11q4qy8b1oa2cp1ivyn80k7wvh1agbqwh6av5wukfri6t2ntgs72l214mkx6noy11ye9do3h2affkrah4ncvlcijdlvry50tt2d0l2gbqivscuhnaxndn3887c704jilyl4o25kk2y0v94y6lb2575gfcqeq63ucy0av\" ],\n    \"script\" : \"8ypt8zbro0ykt9nf83zm1c31xrdinh1arzl2v0e7mgb81jrtojrlr02yfiiu1j8qas65sx5\",\n    \"religion\" : \"rzyaki34uwss3zh1k3bapvcpsb3phd2mkzqjvnis72ge72plsx0xrjl41scfgvpg4yhd1wfctk0mu0cxp3tqen31sbvth5acfklzreua796kasjq3hqq7dya5nvn1302q8gu4dlcwxpvbpyi7bkxt611kpk549luvailxd28m160gotfre2u\"\n  }, {\n    \"religionAlt\" : \"ioxr5t0w8npszbjzh1topxbiyra5y77paa8otmwt2ps5n5ej48th933d61dy56lvpvy6xdwng1rg567lcii1s4ynvgdora3hvc317yfy9zex2unlw8\",\n    \"score\" : 60.59538865163281,\n    \"probabilityCalibrated\" : -0.2333055586401862,\n    \"name\" : \"Nikia Zieme\",\n    \"probabilityAltCalibrated\" : -0.9829984082148355,\n    \"id\" : \"y788\",\n    \"religionsTop\" : [ \"c9wd6ukcso57is862zadsdu3qyftdumtf1c0gr4sfo775sh2ayhax4fdf95lwuwe5mch9sihrv3dqe593qn74lyyeh7y6qeqm90ovm\", \"k6gqhuiec8199io5se20hk3zcs3h0w517aglfpevc1l224g26u2xal2ayejorvih2621go8ut45trfe6z3je80guon05vfv2e2vok8bmc81bs4y1z7pqj2s9l73q2u7oe367n1np5\", \"f43mvy650aog9apy32zxkaxdyzpieiadcw1wc0gi7w86c4wv89ye5wcuozfo0xue4j6pv0zz6l2kimdu44pw77n42d7c7mdq0v1osauoawkm3awoyap7peg3an3lwjgtst6norq7resxgqwkldcfs9swduxt22j\", \"z3n34o1pzz9wttzmufr9s8uu8v60hrtr21eqrjk98k17cwjj8b22pqlftdj7nbecxki9qp87ubbzd29tdpkpjcvkt2rmnxj3ou3k52u\", \"fm2v84t7ua0bfjj2w89q4rmp5jbbuniqgq9ye525m5xbm9ag9fxfjfwb6goqkcwx690en1u5q6fqcq0twvnga0uurn8xjjoufif910gj3gyot7eqgmcpxad958rqro9bv5dhqu88k9uoq9r\", \"q26kp\", \"8k0xda2aydbw47tbupsvb8mkyzil0fvxsjn9u35z7jl0cqyk2iy7lv6wtr0774g516vjq1zopiwjc2jtkcm4wkjasejx1gr3eg9w\", \"u7ll3mtm2b5ri1re9l0n0upx17glho3aup1ws9e4t3qxnzie9fy32cael5s33gwb01u2s3x4ihx0\" ],\n    \"script\" : \"oqugl9vnfblj1i03z8u7jpkl81scsa1ksivumtzm0zn34pjodnvyjdp1v37zun2391yv3fyjybsv0bibpbklq5uziaz8l5sixvvb5yb5yiwaum8wr356gor13ujfjjzyfjh14y5wjxyt24\",\n    \"religion\" : \"bum85gmm48ao5t7bf44g2ns\"\n  }, {\n    \"religionAlt\" : \"owdi6icm4fmuupi0mpaz0t8xat7zrp5by00a7is623lz9z8j2ek0ld7pwbwphzpjcnqcmi1ju4nz06ockl3cczelehub9kmkfbqslrnrrm1uazqxsiuso05lnxdrv2bta\",\n    \"score\" : 31.536428195168742,\n    \"probabilityCalibrated\" : -0.6177400125014274,\n    \"name\" : \"Johnnie Ziemann MD\",\n    \"probabilityAltCalibrated\" : -0.10867142420043918,\n    \"id\" : \"f20n\",\n    \"religionsTop\" : [ \"1l94t133\", \"1ww29922ye55vso6b859hhozcleqys4dxawlh06evhel4juarxi98kjmgw4fyclypl3w0gydovdmonjejofssyf9ez3u894ajn04j0v70909i1ki8flai247vkjaxypj003o2eg4pmf68pdir2yq6uxhle8p1yrztr417tckyvctevi6ah8h7\", \"ha3u0yluq1gy2aaw8dmlbdb9v408if076th5wtq2gcbh9ty10jgq11db6dg9xs7jdf84hem15d7ou4yg8hcs2d4iv8tc0mh1vfjjbnthaykck7akl0r4mfo84gdaj6c7ztj5uuvp63k5hl68qixpd11n0ucmq86cqts66cd9pypq\", \"wf894hvhe6zichvgssjuiensy4d2ro3c5qbkunby8g82v5bda7ce83385ddewijy0ijnatspqd4vqxx5z6swnneke26leqchlg4pdn3jmov546qh9b8g79esrs72plq6krz8ednjhhk755ajy0ju\", \"a0hkexza4z6bpdff0mskr8tprrd29a9vo3pj5p0bt0fskwuaiuaz03j5t3d\", \"o48wap4zw53l3b7z87ptznojdpyj7od98ju80onk8e8yu4gd2nlg76ndfghxdrnv1w3sns08uqhv8inaaq2ymkpk1hqq8p81esxhvsoipt4xsinvuq9qcs1jnry3yzcmw1ilol1oeez1ybgwv6qc9i73cm9y9kscr\", \"79qfmj68ubgtdfmwza41b1rc1x4ylgn58alp1ghzgsysfzzabwu7137xiut9yf9497y4orunhy77tfwvoxrl5gvp9m2dtw8vn4hphhlsuhjp7a79yr8b5zrwdq1evzpippl0mtn6futqtd60o4cpjdndrcsom23g4\" ],\n    \"script\" : \"t9b1nhnkihgo9e7fw0jaczmw10yuzdbp89lc7r2cy946uk9glv8s5uluwenp5q1md9rpv395llufjy47bog3w0vk92iju47wkv83mc55we4ldyl9p1lnsyq2v8w2h7obj12nwnqybe3sq0wu10\",\n    \"religion\" : \"50384mpe28kwb9hkiju6s0z7zwrlqq5nsm7slq6g8wgeb1vy5436b8k5jpe8u1e19wyujakqchjjxoo8tu5bxeccp33g7zfg0gr2le3yceq\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd8b4394-c3a6-4d1c-a009-2737aefb1938",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.369248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8c3cfea4-91de-4450-bbee-814f7bed5711",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/9bd55ikx5kv2ny3w6xj9wwv164gwgrqbf07e9fn5d12ygy608nsanwaive36y3ocxb8ukffod9frlu4jvwldm1cscpnxioa3wr3dp9on6jfbcqe49dn1adpwbw13ffj1ql83d2ltlp7zs43gx1gaj6c6p1vjlqge89fw3gf7kptnea92qua8rka/xpbe6pv0g0uvoavfm7iakczzonzzusbsh6kc3jy1fv9resduenm2nf0hg0m4jteiljxq1j3s1rpdaqw04lvo1hfnpo7bcw21fv7hd90mp04rhfzhrx1o8kix9",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8c3cfea4-91de-4450-bbee-814f7bed5711",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.368614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    }
  }, {
    "id" : "e48201ed-82d6-460e-b446-96443d1ffa75",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/tw65kme1m5iozv58/9e6krtchdm3xdvvoimvjgw1m02mq2nhjslyss7nlpc77ur3elandkux8zhtain9jo7ro9e1fceh2y4vigcginfa2jbumhnu42pvem1yxih7w6b6x6k8985rv8znyw2kiab31k81ybsjfc3hzh1joo2tfdnar241wppo4",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e48201ed-82d6-460e-b446-96443d1ffa75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.368572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion"
        }
      }
    }
  }, {
    "id" : "237f5d4a-21d3-4686-a8f6-3d643080e9c8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal Indian full name, provided the Indian state or Union territory (NB/ this can be inferred using the subclassification endpoint). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionIndianFull/950j37m8udnfg6uoe5z4ksjl6p06zyt9xdqlbh0s/ekbx8hscxeg7fuxapvzknil77eg5a5mklr0weypu8r39itjlv25jg028nf3fdiz2eko1od",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"mjypppa1q1q5ort90c3\",\n  \"score\" : 87.20505895640765,\n  \"probabilityCalibrated\" : -0.23702689939371768,\n  \"name\" : \"Son Ratke\",\n  \"probabilityAltCalibrated\" : -0.8304791635112856,\n  \"id\" : \"mrio\",\n  \"religionsTop\" : [ \"66mzkmkrxkc5s3ujejlozx6xacd6mdndtl130xvkiv0ms4h7ay1czb5uyltmwdsl3uori3q6a2ln60d0amwdfi1p7atmb2ndvq3ztbk7aj4tacdj321g9d2qmhcj96o7pwf24r9d50wwr8kasfxw3h8xa1z0jbkg2s8gshdu75qzjzt2doc6323ifjlbpexgxq2ve6o\", \"iy2o1mjf3zfjzxitair3j33wt3b0vgcxs3ry0i1l3al1h4aj6wbqlo0lo3vjflxqesw2p5ymjtg2jwkogjd4au67a1y7jcf00ekckfuicrzur73ojfxf4t0orgj7pp2kyodwhg33\", \"zys96yn1tp2zk23ts48keb9kuzope1zrj7yfpzz5eawq5zsr16v1fthdr6hs7grnz4z8tds4jkqy0is2zrnn8j4kxvxddfg659v0rjfc8mgq55bartlrk7s02o3l3d90zjfo76x7imv6dvdrsao04lkvuc0ae3wkscaz\", \"wepdwrxo9cyv6h6w8rawq0wf5zf8exw1slvr11ca018wl\" ],\n  \"script\" : \"ckoefxvyv0y22fk1tenxq52dy0i2cen3prze\",\n  \"religion\" : \"v4fjl8j0q9gqv5qrhchkzczqdbbuwjnouxrdio98xx2pcy3yuwxy6azyv3q20greivkr5o5amzmc03b4byhhuhj3twkpq3r95fb1bg2jnspw89lxo1s2vn7ohpob9dx151zy3wip7f9s84rl96xxsizhtzvjmij68487207u1sxhb03s2bnxt8y2fdz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "237f5d4a-21d3-4686-a8f6-3d643080e9c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.368518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religion",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0afe481f-4519-43f9-bfe4-d49349cbaf98",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0afe481f-4519-43f9-bfe4-d49349cbaf98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.368222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "195b2cc8-de06-4580-88d3-a8fb56cca941",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "195b2cc8-de06-4580-88d3-a8fb56cca941",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.368207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "1b060e09-c382-4ddb-bc49-cf32f047b582",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. - 400",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1b060e09-c382-4ddb-bc49-cf32f047b582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.36819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch"
        }
      }
    }
  }, {
    "id" : "8622e871-53bd-4362-aec3-46514a3834b3",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of up to 100 personal full names. NB: only for India as of currently. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"religionAlt\" : \"73a0sfvk65bvp7etc6x83qnquxhl54q35z1dbefulopghnmbbujtal8zvrvm2rf21kjchlubzyrakxhsd2wpu2xwwatu9wlurq9gs4mp5emtknz48s1trolhikf9t0ocb2xjjgrudwkguaccualsk15idotyzfkihsm6oi39s10soez2x4gkav9w\",\n    \"score\" : 36.38800457185185,\n    \"probabilityCalibrated\" : -0.7091192411762717,\n    \"name\" : \"Edison Funk\",\n    \"probabilityAltCalibrated\" : -0.5437348595810039,\n    \"id\" : \"c262\",\n    \"religionsTop\" : [ \"iy2bjpodk8yo7vomyei8zrci060l6fouanflc5vv40xpvbcnqstwb654h19tfguno7l007yurklf0eifrbuu8cfrk790hi089ei24fqw3c2cxf16dw91nmlxkvl26cq611sv75ibawhbfbmtst35nw5j7k36lrnpfea7l0qxlp05wmtq3oy7x6nwvdw0uqgh\", \"etbpd0lp4e1i4289og2rxa2sqfq4vjat8fh11bxvt658nkqljbn02xidwacmbnonk3l0gyb05wfgurqle5v2b9qachqn1a0tn4uzkxyf4pjvk7mjs3i79cmws99b0p8lrnc1os3g3khwas4xfwd87oiqxxgt55au\", \"c5bi544xr4mmy4h4ovp31utd2n1rz83lfpxf81u3x9v0tb0eeez5qzdcp4cvfx60pndvsc0d7yxff2z9gp8dqld6h5vdzjvbtr9jajs4n29qms75fwcipsve7ciyvv6tnadu4j0\", \"e4oltvq42n2u2dvzn0tvfwnytrx6wg2omf4olkxc9su812gc4bmjwl2hxvbc4\", \"zd80ftp4abjaiwpwlowtpmo3jtzydcppco8fgu2frcllusb2g\" ],\n    \"script\" : \"54j26gyiiyes94g0ypi02dezpho8uoktlmi3lyswlja3klpp87a5sbo36d1w8wl2jxow2peq5n2npls2ltknw0fraapw5vaos6rcvxwe6qz4tl4v1bovvnh42rwfn22d75ph9sm8p0deafpjf8yua0dlhyq1dsxyhafnp1xxugb9h3v8jipm34rfsuef3qsulxx\",\n    \"religion\" : \"iogki0sbzatwlnbwk7aps4piaf3nu5jlvcjgtvhz3wzmc1dngy2v9sjrfczaegxaaz7oucaietrgy2oz8todhlz6pufsmcxnkwoznt5u45w3djyxhpcyk2kfdx7hu2jq4zyqp8gq\"\n  }, {\n    \"religionAlt\" : \"1az3optse3wb33js1m\",\n    \"score\" : 97.32381803842478,\n    \"probabilityCalibrated\" : 0.10946044433762125,\n    \"name\" : \"Carley Kulas\",\n    \"probabilityAltCalibrated\" : -0.8376803047176329,\n    \"id\" : \"efg1\",\n    \"religionsTop\" : [ \"mtsxwlz93tq2dx1neowehj45qy1qqczeq2kt6f8k1bfbpqo24wgba0z33i63y659bvk8mopshui48r6r5jyp6msnoaklx7n1qgdi3g82jbj0dod6dwqcex0n8x8ddhdcxa262z39n5sk9gez10w3ddguxrgqi1m8d97hft7tu17w85\", \"5qgn94mj0vz4kftsn9enb510tspudxm5e0hp6taw939rwpy1gr205u0i5ts1\", \"f87aaemoa9njcd5989x3qo1cz1hqo75javslv\", \"gyao7uum0b7\", \"suqm8tx5z6agygds0i7erqt5m5awq3btkbir0h5hsgc810lk305a50ccbaves0u1gzsbem3cb51kmdg\" ],\n    \"script\" : \"c3ad8fwiocebx3schbbj50frimdawczvmgxk9s8l0z23ledoyx864iwf5hpldfljq16h8rzo7f1meckdalae5ghidbtlny8fwit8aqcsug78zer4o4naa774v8hqrz0fla12gy30\",\n    \"religion\" : \"kyglxh3crh12phldkgqa4avm1nl86n5viuqa7v0l88l24hqqlyyb8fibybzvrool3ch0egnrme710hx8kodjmq\"\n  }, {\n    \"religionAlt\" : \"8gx4dl7zi8671ksdss03ks7ptum0ue71tntewwfvzw6qyzakw9mkyo4rx1hfag6shvnd22ab0wse7ts88wp6hglbr8sfpjfzbqn3fpigw6p4o2xf5kfx4wy2bp3hyk5mb5t66ote4gop6vhnijtjhd4bw14f5a9ca08gtgvwvbzib3wo\",\n    \"score\" : 49.725889084034236,\n    \"probabilityCalibrated\" : 0.3550614824770204,\n    \"name\" : \"Alan Gorczany\",\n    \"probabilityAltCalibrated\" : 0.618249574237878,\n    \"id\" : \"t2j3\",\n    \"religionsTop\" : [ \"7zo9eao3vdd1g5i4wg\" ],\n    \"script\" : \"qlysr7od8q6tkzxbdyrap99o2ic4hemoetzj2img1wiiefthyok2ynlwifmfbt7ucnoq68ctxgz5ny3gbap5mtkzkcarah0\",\n    \"religion\" : \"lc5azbohzfh1whmioedrxc5srrkfkr7dxen7u78ot6x10\"\n  }, {\n    \"religionAlt\" : \"pqgshnlhisncxfgeecb3f2lokd3z2w5ujrrm45g37r7to5o92fwyq4tz9fghwm8zq8oidoxktc7hygr8xrho65sud4vsg03sdxbzhvjetivjcmr1iagdfwull0kj\",\n    \"score\" : 59.62564283874382,\n    \"probabilityCalibrated\" : 0.091253606955769,\n    \"name\" : \"Rayna Kub\",\n    \"probabilityAltCalibrated\" : -0.7766708516268104,\n    \"id\" : \"827c\",\n    \"religionsTop\" : [ \"wll4w4p5w4aees2ogyf\", \"d73jc4l51biu6c8afy49m0o8g9l7uhes7j1df01w2f24fft40tcofuekqxw1rbhnogshjpzhi7afas311f6h6v6n0fbrkgm7y8qqz7tv81sduu08tyqqbiy6c989kcgnmw1fn44jqvjgbdwy64oqvjfcptpn8rwn870e7aj8vzzi66t3qblxeegteo99jyhx0erqos\", \"zilmwy58dbnx2gtlp25edfgyc2uh2qrr8p3d3jyrx0ffj26a20hvr58mhpue578gab48lzimthjlawvrusvulflj3bruayqiq5z7ghtm6smwl4prmaonr2z1p31mr1beafse5tv1peh0ywe30xvps0qe35dc96y3glwd8rwiven267f6b\", \"2nlm9xba3of7jz7hxlvtpel261s90y627bls8aidf2skzzhcfvgma4iyeofbf0x9up815te81210rti8hmm30wpdknkqoi6ogdicdklwyuzke8h\", \"ms8rbkt0bvg26by4m46rqp5yxbutb9m8hevb64wpzanh8p63t0344lus0x5tz0fh1y6mlex1mku03td2b0h59an4vji3qj6bib5vgd00i0ym7poo9vhjz59svad\", \"g67dqdzz\" ],\n    \"script\" : \"qsvkvkh28tun\",\n    \"religion\" : \"ghzgsrxwrnhn3s3i3wm08z9tud0zfji1ofdbrxs74y\"\n  }, {\n    \"religionAlt\" : \"3rfn5q10g6ogmpxa\",\n    \"score\" : 93.70329322468548,\n    \"probabilityCalibrated\" : 0.5731029822822391,\n    \"name\" : \"Mrs. Forrest Yost\",\n    \"probabilityAltCalibrated\" : 0.2553498269307326,\n    \"id\" : \"s88p\",\n    \"religionsTop\" : [ \"86wzdz\", \"w7gnn25noe1tm3l7h91gy54eltg0m7fm2p1axawbl6ajffz4dgr04z2rzb0otabflj17wkjhpf2v12at06hpp1\", \"d39vn6zzt2czbygnnvwwyo9a1op56tfw0kqd6f0s219brs7vx10p5zzs6e5mic4ebz66h3r3o1xrsy69hdxryd6davieteep965f4ry77klz2ct6v5z717qt4smwnufhjjzarpg9yx5jw7hdabav1bb2a97kfdbx4kv9r8ulmw90k2d7is9lshqqpqy\" ],\n    \"script\" : \"b7tcrnq8dg6qm9gkewkqvs5lh4820pfwnu46jkc0cdohmy3h8x6pi1d\",\n    \"religion\" : \"1lt6hkgfz4wce9gj6snc5vl2wqgnxhjbdwvcnurwzz3oihn2bah3j5ocemo\"\n  }, {\n    \"religionAlt\" : \"9r6j0o5wxfrlcdzzh8tqjwj0zilvku56v7erys4ugr5fc12ee14o2tuhu39p52b0zxl9c9cslej5xlcp9hgfcbt4upr34qy9s482mkz1k3mab7dwogzjn5g7eigoqjfv64fhk1fomaay6o6jbefrk2n8u872jhc8t61za0qrase6ivxupsc3vzjuzru923nav17wsogp\",\n    \"score\" : 35.747470711493314,\n    \"probabilityCalibrated\" : 0.8948606622935653,\n    \"name\" : \"Elana Deckow Jr.\",\n    \"probabilityAltCalibrated\" : -0.11514609934360198,\n    \"id\" : \"6n4o\",\n    \"religionsTop\" : [ \"yzbphwtgxe9taxa019ilqshf1v0papcfu0xu0qxxoxtjn9g3k6qn79ty1i4xow9bludmszde\", \"ok1e5lmci7mnm0kefrbhnu2weaaeramrof39e36sqdya1\", \"bqy66435nrvhosqlmk1uks5ybia9e5dwpc2zu6uk7qquz6ph7kd655enp7vi1ambvwm459z\", \"bee6ty0z3wuzjsv4j1645jqe1c4hbhowuqtz10me2rxnp0523flua28vu7o8uplj9z3r5xo224kf3cvj6oq9yinolaqidrx64hrmt5d\", \"25ovwja8v\", \"snn1f6xduygteuhdp0375bhg3ntppomsmaeb5k54yz5jc7bde9k7l8hf2ihjy6slpsd2p960wx06hfmmuwvb2wkcmnkmgku2z5lbj24f635cdp03l059qg6rmawcfj5lh8ysb9vmpggwc15109mv3z\", \"0s30cw138wq9kdfo1s2b2gezpf8fwxsnlpgxrebju9u1buhs9eqdc5wottdpphkkecrlga6flumy22p0b8ddm6ojjgslf3p8v5oxc55y59xzhqyh0pt5szjklk8zup87g43ne1p9evvcq1xu2r5f70hyep143\", \"8s9reb94ba1krbyonaysimt1odekqr2857zgyqao3tzmjpv88e46q9t\" ],\n    \"script\" : \"w6tpvl2svymkfbhk6j4syjq6avb4c11ccrtt7cj684kqx16uq72e8ptudq31kh290cof9lear01bnhx68mo4rd42ck2j628ft56qqi643xxmlz66ofaxf4anmxy0hquaabyayzfwsfpbjbu\",\n    \"religion\" : \"a18mny2rlya50c427pd6jkyae81tdh39m7ene\"\n  }, {\n    \"religionAlt\" : \"2b4sq45kl2r5m040bhdndow4qfzdykiucbnlu78h6f9f1l4ck937tptajqyi3jukpdosvigy5gmshvlf1n1q\",\n    \"score\" : 49.06669257624835,\n    \"probabilityCalibrated\" : -0.2438596983340382,\n    \"name\" : \"Darius Miller\",\n    \"probabilityAltCalibrated\" : -0.8931444473350734,\n    \"id\" : \"8t4k\",\n    \"religionsTop\" : [ \"3jw57itdodf1xa58otc33dx2vzh4bg4vv31dp60yprt75rd9oyov9o6o1o450oufhamm02jzhttsdmzl8b3qyf643vi2r0s64o349s1zrev6r7v3n6cokl9yqg4fmkvv80y0gobn8wyv1v9x6mh1ybct5z20fomnqwhoqsvj39bq9tiotm4q48d698zak5huqmxm1\", \"2rvf102jisgg8tqlbm2gz0v15h4oa1mud54xgzy\", \"qdh8w943raaxkxq33mnq53nyzfaq3hylfz7lnky8om8cfi04bpmptn8zyzysjzn3g4qv1uzvv88mwmsfncobr8b0qhbm9rr9by0ejqhrwmzxl6luar98ilstp8hgu3y9n\", \"4okoatqc31wp7bh7zo9u297ommexi65fhsgxxmz8jtq6jl7742dhcwmzvnoia8h5wx8zpkpfivg8s37n5cinu5czr5g2uxxgboopeuf9pl488fov3da6gsj8bwzq3pohyt4wso51u6g0y1iqcnr4o6xtzvlcblygqoj63bogty11y05t8wxk3jq368\", \"c79koj6o3q9g3o0uq2aw41bipitgvadsxwxqv9uwmgpl5zeh3n4vsb62ackyvxhzmmv78ng86ru994j1te00ijkv1l420ox1m8ab26s36rkqbts7ove9ty2yv1b91ummqpsqmixj\", \"inq0zry8l5yaells231o2l0bn4kmoac9ulfjadm440aavbsb46e8c97mrab73q14rv66hceom9luxndjxcoa90qsnbnbuvquqiiw4tzo6n8joprtut11cii3pkt\", \"4derma3z39sjlmrjwy2xy99df2uemxan9hkzdgy4xstu95edcpo82rghtvfbffkupwebvofknsb6smu19p8x0hyx03nu6lbq32pi9hw91oai8ys5eaeb77j1mkmkwj1j9bb4\" ],\n    \"script\" : \"gvpq4a9yr46x3b76zld1vancvozjmtw9q45zdh89en9gyfq4fbotk2ch3ckkkr0x1453f3gost0lwgnpvq45co8mk2in5kbq73yke99hykqebmiznmxh7f75nmxvenb5f964h3j9uyovj\",\n    \"religion\" : \"94vmngcmvzdqqj2wkuifsma0ognlnb3wz32eaoazt6lmwlq1luby7du5b9mb1scsl4j12r90t2hinclggsuunh7t87znyyfgu9g05p6c\"\n  }, {\n    \"religionAlt\" : \"67xmuzs28o5nzbfpwhmslwunc51elefjl6pxr80d9ls2kecw5b0ag7hmz4fh1ehwlga11y40031bgwrgmqh6rpguzh455mvv3xwzei66upo6ustoeew2qzy74lpsbnl9f4idsbpwurgz825tuv78twn3hi60u0gekveppmxy1cmm\",\n    \"score\" : 96.1719978072628,\n    \"probabilityCalibrated\" : -0.15388347717003636,\n    \"name\" : \"Santos Prosacco\",\n    \"probabilityAltCalibrated\" : -0.12862005464240345,\n    \"id\" : \"q78b\",\n    \"religionsTop\" : [ \"18i8m2seekb4d\", \"eoor27whtoz3dw64qlbfb2cedits9u0rw3cw5sdwgyvnbt5kirf10nlbckgaq925opcwpw47hgp822tynt5tkasdtv6qs6c3mllwuyv6jtgxzbl9wkuxitw28z31xozkrrz788dtfulrasd0a7aoo11pkt9j7osgzo9hqgy9v9cxjophwqkc4ynh\", \"lrs93r6cb59basirlou24r4ewzsqg1ngprfr12ed4fk6ei9jwqepqgf718mbve01ogwl3iavaidqkzym7ylvxg5i37sfczltk13bqjf48v9q6ect9d0u3\", \"g0b8xfgdtgrrh09w3wpylwrb31cs5don6qf3nccuzcgdrm40brbi5waazqlcn3j99rjxd0\" ],\n    \"script\" : \"32e29dw1es9iviun7dabl40h176shx\",\n    \"religion\" : \"b4o3rfcrrai37pe0lsdutp4qcez6w6zmjzpif2h7vao3tguxk5nv8m9yckfdxg2qa2pqjuyci0w8glw6m3xm6aw16qlyk5rlte3hv3wt3\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8622e871-53bd-4362-aec3-46514a3834b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.368155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "religious-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameReligionedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0f2a6281-d2bc-413c-96fb-d51678d33cc4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 403",
    "request" : {
      "urlPath" : "/api2/json/religionFull/59q9modsc9v1itm0v9mrbkmsv4a17nid2f19ribs0palbb9oueig3i081dpwrou3f5zrgpbx51rslsndz89den3z75/shjcp5d95ndtol72pxss8f1wonvkwj/isctlo8divkoapjmrxidjkrlv2eio2xkk9b81vhrz0xovepf4gdxpotgy35jtpegtwumr5xt3y0kyruiycy2zdjeht8w72hm45mbtaj7jy0tjpk530e13bbtq5n6s0a0qx3k45l9yybbpxi2icgd65ca1xtrhpiwuywd00jbhpu",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0f2a6281-d2bc-413c-96fb-d51678d33cc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.366458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    }
  }, {
    "id" : "9f2fe588-214f-44a2-87cf-9bcfbd181a05",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). - 401",
    "request" : {
      "urlPath" : "/api2/json/religionFull/607bplkvwvb3zgktxvu5zegxkuviw4d5tg5pzjggczglx6gu9zloxfcld4u40garx18xnkp0m4is8e6mkv8woekxjyd1xgoa080udl1ictf8xacefq7ufi0xyt5koqfv54pum7qp9vj8jv846k8ivxc9y1pmlvqp8tw2mwpkdg4tkl0ex/wfd8j749yyr0/xvt1usonxvgnhmdbv0gp5ml1e3yzqzxj6aa55dtc56nn9wjujjejv1f0gnpq8n7he2d73ffjybbut0v4u4oy2od06iaa3k2cs6j7z2espodo1muif4nzioi868oj8spx2vwkb260tko8wy2qiiupecmknlg37k",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9f2fe588-214f-44a2-87cf-9bcfbd181a05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.36641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull"
        }
      }
    }
  }, {
    "id" : "37d09ee7-b928-4258-b434-373dcfeb8381",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely religion of a personal full name. NB: only for INDIA (as of current version). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/religionFull/xsyf29av7/lbsepl7i9vx0/2wjzou0pu2fxft48ldw7r03fg0xeactruzm2rsi2nby7f8homub691c3itc3q42xhzd28i167panb6zskmic78o1xaecna1xigrah3fqndbhn16",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"religionAlt\" : \"4ic1fswv3rsy5oxxajiya37xeui2cqxw626me0z341zu8or7cjm0m36w3e0i3o3zl7ybo1wewxkeedvgy69obdqbyzxp152f762rg1nanzc8oiussikaw9pi2o4uc06k7bc3j6kxoche5tgvrgelqvo131qug7fewwjfl23hdf906ck5tmn2cuzslfls2\",\n  \"score\" : 37.83187681234747,\n  \"probabilityCalibrated\" : -0.21211963433916425,\n  \"name\" : \"Candyce Hyatt\",\n  \"probabilityAltCalibrated\" : -0.7565498079037121,\n  \"id\" : \"5fyk\",\n  \"religionsTop\" : [ \"arqb622979y3anss30l7mir27mcldt9v33t47984d30t0x7g4zvh4gvsy044mr1zk67pvc4iyayft4p5qgq1tm47bxiyvgxmoeotnkyks2h1wtpe1\", \"b9jru04q251kqbfp41975jyolpnntoymzlwa94qeohx7rv31b1ukvbwajvxshcl48g6h8oy7my976krjv05n0p7f2rxldzz3zybq35lqj3nq7ar4f47inp7k12pq7aiz8p9gi93rbpyvdamkuua4szvhi8sfdnmzjrj3mj3ttg2\", \"szjq37wfhxfxve3dskscvthxznac30ogi2ug5q7juzau66ue7qan8n1n7s4wox12c5chtl6sljdq3jbih7qmomw8ujamm5a0j57k6auaykiqabdoi3t6gey0aii\", \"19hfe1xu9lu0gwal8x535yst7j09nnsqi642ayo0lb56o12qgcju5srg59tr8ivkzdel5edvy5ghzrkt7deqi3ac7cornn6tl3jw0h7vyirw7o591ar\", \"hnev6rvpg5vri1hj7lumtwsotdlgmqs4kokfcwmolp6zelpestviz00pu08sfh03soo0t48h4rjxvjb5s53tm09qow89spnea6lq6i6jx1vlsu9ekqecidxvl19ajqaa5a3qfmcbwitkurkbreptsqic3r1npl3f8jrb4xy55u9hd98xgyvz8w2gtyy51q7\", \"3n1xphk7un2wtlsivbu8sqmdfgr80h1h83gvt2tzf9glm5zyt3btwmqgbnm80t66s9fktqd2jase9xakj\" ],\n  \"script\" : \"3s36fg7rnvh1ymyvip5yj3galwme6y9pi9d8via6sf8mmhf4ui7r3vynsnmn2qn3zkcpg8app59ammnfzskwxdc6cep2cc9jgp0r8vu1qbb0sscrllo40lpsnm8qm23g4n0v7lw5\",\n  \"religion\" : \"fqkews7rv3eqgt46ucbhcd0yjm1no1fzkr5z56mulonj1o103ed513rypnlpzk446wunj7qrpme06cvcrjy5tfwscgc52hltxunl3iz1ryy4grv7e2pehf16ag2um8yh5gojsw84jfr0euynoke4dw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37d09ee7-b928-4258-b434-373dcfeb8381",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.366346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "religionFull",
          "schema" : {
            "description" : "religious-coded names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "religion" : {
                "description" : "Most likely religion",
                "type" : "string"
              },
              "religionAlt" : {
                "description" : "Second best alternative : religion ",
                "type" : "string"
              },
              "religionsTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameReligionedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ab61355f-602c-42b3-a51e-a4dc335fa2c0",
    "name" : "Print basic source statistics. - 401",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ab61355f-602c-42b3-a51e-a4dc335fa2c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.365998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions"
        }
      }
    }
  }, {
    "id" : "99d9f493-e6fd-4ff3-b9ad-278845907870",
    "name" : "Print basic source statistics. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/regions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"countriesAndRegions\" : [ {\n    \"subregion\" : \"9d3rjgmnowx10prgo13igxlbdqkgwpaf9a5374fuh9trfi80ne15b8v53fedjdfq7s7i4mq0pputi2db564gemggplzpsakfqwdvo9rabe0njdg7i6pwwg2ss86xljbqv9ejlar63yiskyry3dbxcqcery9gomjn9jj1x\",\n    \"countryFIPS\" : \"fqlvkqef9otsvafstkb4ki331km5gcfn5ttpym40zay32s7drkh9kdk2zthe9mfxwfryw4di67ki213tr8337n9g9zsoe1w3nj6agzwibc5513yn2xs90s\",\n    \"countryISO2\" : \"b9zs5l345njy47dnrkg0zvjra6w5n06gs2ou1uu3ubho5motm0ak0ey8wyfqyv0r9gpt8ugrbtmev5myhexqf9xtxakqpkknpgc6geqxgswobl59rf1c0\",\n    \"countryName\" : \"Carie Simonis\",\n    \"countryNumCode\" : \"mawjq9walunh3c6gu1fj1l7m5udoha5l1yon9g5cnx13yiw8a8gi1ev00rsvbp3onum\",\n    \"countryISO3\" : \"0y217y88vwtvp66x5x503t0htv2xw\",\n    \"region\" : \"32tzdvdav54loes9erq9i2jc9fpg2meiyid6u8wuw8abtpz5ekqteqfpxm27f74vkkunrfvx14v4q5m4z7ysegtb3hjrwk11l301ai5f26uk8od3h\",\n    \"topregion\" : \"6ml45kcqqtaf32ezjsayhf6tyo5g13ozyu0\"\n  }, {\n    \"subregion\" : \"9a14wixnthey8xwtksq1sdsozzgxd91n8spt922wdfw1o99b5bx0bblp4uwr48h158x0af4d7sr3clplm1u4f5e6hlzqbsv0rh86c21\",\n    \"countryFIPS\" : \"gqp2k1rj8ed76evbkqsgj31v06ahy\",\n    \"countryISO2\" : \"vugxa5ruf2d3j1z89jfn1ksuioq2q4ol9b3qegk1yb7rf0rn63y7yv1\",\n    \"countryName\" : \"Emile Hauck\",\n    \"countryNumCode\" : \"lo3cnnt2nrro6s6svxzlqr74v4gkybau0h9h4e77vryuhob2kvew0zuviu62bmxj0of4otdlq0qlk4dodbvizlvri4lgu0cvnzgz62ux8nz7vxtrblyvqvalnpsa68xq5eh7vzg1hc0y6hhutfevyz882elo0nly4yt0876wyvq7sq2tz3fujsrdmzsm0nt5ej5l660b\",\n    \"countryISO3\" : \"l3c0sn4kr53wnurpvkvi7bl2f4j5g7x4e8arhj1dq2f80daz1co57kmbdnw97gwbh8fvtvb4nuno2sorh5uxsb3zmlc3hjb9gz4yoyc6iefaxot1tjio3r8ajhed\",\n    \"region\" : \"cnuoc6b8apb1xehkjcg84lfiuzsft6xb8g4hymb7c24msennj12l3pabrm89exvzf92qoji8pw1zrdeuve9bxtwher3axwh5t8kbph7b31go7asrk9qznk86vmihip3j23q2u68ogjjmqeyrh968mqjb93ce1x8mmxou5c9ixx4wz5fycirivh\",\n    \"topregion\" : \"i9hjnc2ggq4ayvtdbfyo5e9pihb8wlm1ub4cbj4f4jnrcsad2nfkch6b7dj8kvxdii9ohgxmfa8sh3c1z68slk02qsaa0dv502zl8pdy6v0jth3cwjkovhkamzetsfn0lu25g4at5ddybou2mcvg7aaa9hi8oxjfpsa6a\"\n  }, {\n    \"subregion\" : \"e225ccmce2e4gu4xlwwvwdr3aknywz55ctqtqzw185t7jgajfih0qillk1zgv2zzuj1n106u82zswwkim2rwzs86e9imeij47tc24bwnw6yg6csjzuz4e9x1if6d0iqlpeunowx5qvm\",\n    \"countryFIPS\" : \"8luvldip8yj5d85wrk05o6nx0l2p4s1dlnxsznscwzhc9i2odabq444akrr50ovbufxrr3l84rhpwxyrt1o3tfyb3n2xuinruuwf9ekfpwtqifid29jcijbdcldj9a84a37pyo2g\",\n    \"countryISO2\" : \"7kcmzhow62rgf4q75874k34rghvzswpm8kekv5i1gdq0lsetb60xq9r9o91dsd38g2umbuntirstk3nb6lsd\",\n    \"countryName\" : \"Lovetta Kris\",\n    \"countryNumCode\" : \"afyjsgs1jk23vvi4g4ck2xzw5gesimz2hof4b4pya1x60w5cxhzid26ohn39bi9c59\",\n    \"countryISO3\" : \"3kifbl4fsu38bp6tj1e4mjy74zmg8b\",\n    \"region\" : \"cpilbt\",\n    \"topregion\" : \"0q1xlisbo4dejman01y3kcr2j43navvsoe127v4b4yyw746ysj8di3m7m9sivlwt2a5e1bnlnysevcdxlcnzt05glew4khqre\"\n  }, {\n    \"subregion\" : \"u8tatuv9zeyo\",\n    \"countryFIPS\" : \"muf36c012vbcv8lv4i7xmj4sclfe\",\n    \"countryISO2\" : \"8eezet0w4b8m5mcl6jj7rd7cdfaavlq4i7qfveyfr1rhtefak784rafwsc9qd5mma2iert1q5efsafdm6aj1tvflvdmx6yjafaqrg27fy9rqrgqjbwc3mgromfz09fp518di4oysxbkgioa80qq1fdz\",\n    \"countryName\" : \"Danica Russel\",\n    \"countryNumCode\" : \"i4bj68sm5rt280f1edqvzjbb7ze0axunudymtybjoso\",\n    \"countryISO3\" : \"dd2buplwepvsc42wlf2whgbr51rohoae9kmkvdikxyqdqdgqj566uokn77f1nzs0iebgmbosuqnuxgw0b8qlm8ti7jrf1n8xnqmb\",\n    \"region\" : \"yz7yc807nq970h3zx1z01emb30g7v9z848sudis3vjw6f83denpag4qevwxv1rnsl00rpkvekk7b6p7ncd0ba5y3l53mrhcqli2ww8thwrui6guevkua0tfkh879eumqc6amrhenku7ebthofj1jtzxbfh7npcng\",\n    \"topregion\" : \"xgeu7mhhv325h6nfpvp5odkd647oukqu3w8ffen96wegogjk290qfl9983348e7hixdt73kffz4\"\n  }, {\n    \"subregion\" : \"0z9hcwwrkgqqe3kksuawwenqrg45trssz1r7d4lrra3l3jdnab7md1yca25e0r\",\n    \"countryFIPS\" : \"4m82ld6w3pya25czpls571ogcttw9blm2fz8rn2smvbixrjqvci18hn1mmo7k04eehoyzjw28sdht8gbuqkjo6tti89m3y8dpkp90xvlavmpvkcayjod3e2ozufhypk5zxsen\",\n    \"countryISO2\" : \"49ninp48rl3dig8mwg91u2asx67r60nnjxhx2sufhkbjyvcli5m22jun4705pkzz3we2vvgwu494c2yzvf84ow8z9am3j30t2mqljd0wbv0d3hu586ueo4afrj1m04494srvpip2vbll\",\n    \"countryName\" : \"Joesph Carroll\",\n    \"countryNumCode\" : \"h05sftvmywajfjzf175dpw7vu6oh4vawpwp9iao6w7n1iik1w9ribe8isp8tvw49cdzwkl4v267h2wck8hxgu4mun603k88j1hrdxvtdg7td1uodc3fyeip60fmaz1hw9uwgxftfd8f4tr3n535zfxz03usucj3dnafm8y\",\n    \"countryISO3\" : \"k1b1xj1nr6zd6qjjufegmrkbu6pdh4ma6ziwvrqp9x\",\n    \"region\" : \"4p7xco4d25pb9in2u7ag92figa6okijnhqhyezijwkzzxl7x4dyhbt17w2ooe5ll\",\n    \"topregion\" : \"lnrdzyn8bpvzhucaikfznz3u2zw67mw0e4ut\"\n  }, {\n    \"subregion\" : \"ri8vatz7yyuyqm27yk80alc4yu4d3bfgk96o7bicn3wt00zr5v6v33a8yimwlncqz6ha1zo70v1lfkvsmvw9ep5glne26gy2yib8i7l2pm\",\n    \"countryFIPS\" : \"km0gnpzdhnhe2k2x\",\n    \"countryISO2\" : \"ucybxrp9a37g513jibfl7d9llibxid9wf3847cmgordvm67\",\n    \"countryName\" : \"Stevie Osinski\",\n    \"countryNumCode\" : \"y1o4kf59nc2e003ynf8jtdsy68wjh255fiw1vqwupjioul4t0ysecqcq0446k04x88wjcuiq05u0bwi04g57etnr2hesntu7b104tutc9irphcmqij42\",\n    \"countryISO3\" : \"3vpbv9s5aiaqsc1b2vms\",\n    \"region\" : \"hq3imrm36a2v2ogwfkc42e4tzl1h8y8zt9c8izei0v2nq3iv5alv4vme\",\n    \"topregion\" : \"anwj38se\"\n  }, {\n    \"subregion\" : \"xyh534mhondjt7dhcsphihzjowx0xij8hq3sasyvxv730pt33gmsx4ip4mzk102g7ro8vqpuxidieh9y58479xmu8jn0j2lg6mw\",\n    \"countryFIPS\" : \"r1tccngl0ve7au68vqdzrblqc263fnyznsj1cm2a1wvtnugemt10tkifx0nykd9u181co134kyxho3a3c6md1aowkb7lnyaht3\",\n    \"countryISO2\" : \"exjaadce8hjty1vla8mmqa4y5ujmqrtm0pdah7s9tcd0qqb8u6qsp6m2tqw90jcanhcvl4y0caphqsqpx22ubdppkqhlhpdo37lj3cjrltd47bxau6i7pd9azmoxklvh32dv2hyqvqza3uswzm2kmf90h63mm4zltfq1i5cp3ihrdmazy4m8qahcoycj9ascb\",\n    \"countryName\" : \"Reena Sipes\",\n    \"countryNumCode\" : \"3ekmwcdhe8f8866cqejw5e6rpic9s0nw0xs4gorkxg2l2ide7mehzg704h93to03yyul1qnlhvbxzrma674vw9o2n2bnigr2baylf42822ii9bjxj8exjxdqkwdhfoay5lfblrubllsy656ir\",\n    \"countryISO3\" : \"5879n8d4oh66iwfy3mgtt7krpzyk4z8v6bfz1bx65w7sirvgn5r2nuphygu0t7mszfxwr64qzw3qcds51ba0mlzze5g1ct6q3wep5kqvuvc4usw9twyk4bylklspfao9zym4btga5v4zasx01g7wjhn61a9r1xdce\",\n    \"region\" : \"ligcdnolujpga0p2skfc40r6xy4fqv3\",\n    \"topregion\" : \"ehi8op0yxjenmano29d4v8zpdexgnh9safojoa7pia08vkidxbkfdrt4ft66425dd5zslgouq7izx3o0cmumig7ouszfs9nfajl2uatxa02v4capg7ig\"\n  }, {\n    \"subregion\" : \"2q0ws7iz1uy8tqgv7e1l1gext0btire81778gylwukjqxv4yoq06cq1u34zlofcwqiwbbfgipbyhdy9e5kbhhey61nvsxaei0pqyz88rv0wc74gwm5vtkmtj\",\n    \"countryFIPS\" : \"9kbqgjwh79isag7lhvjdk7gz2bk3jjwmtr63axvr1kkeq4im4b0\",\n    \"countryISO2\" : \"o75gya\",\n    \"countryName\" : \"Jessie Wunsch\",\n    \"countryNumCode\" : \"usvq8pmwathlyxhqbztug800tvkskc\",\n    \"countryISO3\" : \"45zllwyjy7dd4k4xrxvtayg6k3lc3vhra7r6exyx18b4g4bzjjcc3z10jgfekrg9syb7uqkwp2mxnu7jk0c88f6x1q5nugpfuhr09aavyfvrpi2tkk23lzh0n3ufu\",\n    \"region\" : \"7yscqxbwrkzulref2uqbubltftl9ofofla7a9o57zwp1zkk3lxd5nli3g5fmiunplonpq3r5ey4atdw7ze1tqgtmv9os13090y2gfg5zh13t2esg22491pybatb16dp7otwl6kbw3mvmgrax65f7h6uxzkxmp\",\n    \"topregion\" : \"s5nax56bs0dpcjhwndmpzfoisqhu614sb13yp7fh6xyo1pize3xnkuuna362s2oki2yafwcv1kk9xwdl4p6f30bho5l8p0bx2257lmybe6a2igdvvzs1hr2o548mnk14frwb8pfp132ltuy06pxpa2j8u8t2pc25oy3ghw1vpbmtip1pzjzb32a0m1hai83ry0lhmbr\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99d9f493-e6fd-4ff3-b9ad-278845907870",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.365964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "regions",
          "schema" : {
            "properties" : {
              "countriesAndRegions" : {
                "description" : "List of countries and regions",
                "items" : {
                  "$ref" : "#/components/schemas/RegionISO"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "RegionOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "06b0e46a-ba24-413c-a5c3-683373534e36",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "06b0e46a-ba24-413c-a5c3-683373534e36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.364905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "ac9bd6ae-20cf-4c4f-822c-bb98bef1c808",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ac9bd6ae-20cf-4c4f-822c-bb98bef1c808",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.364887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "87047dab-c5bb-461f-a7ab-695e29b81286",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "87047dab-c5bb-461f-a7ab-695e29b81286",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.364869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "d40af0f6-9419-466b-894f-296747ca87ff",
    "name" : "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 32.85072560979434,\n    \"firstLastName\" : {\n      \"firstName\" : \"Gabriella\",\n      \"lastName\" : \"Heathcote\",\n      \"id\" : \"6kvf\",\n      \"script\" : \"jbm7xu5of3b3iuvzy98vsd9avr63iox5c5qoxiatgsq561kt6zy5g44yd56mp037koch5zgd9icfxp4cgf6xbfszyp0o8uuw8qeto8ll2h0tevfkqtk6y4uvpct0cwera9wssivlsa78tv9o6ei88rdceq8awe7a8gtji4b02rrbo4mtj0zwv9wj5s6qtvd\"\n    },\n    \"name\" : \"Fidel Klein\",\n    \"id\" : \"68j1\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"otoziqhw7ajjnp22ahb3vezhfnn8ua259cogz0tnu2nsps2ev1clvuxsfit14ahwkqoonr6j8m8d4erd9e4c4a9794x39q6siwwv7sziqrtavi2fwxt1j9sm9k\",\n    \"nameParserType\" : \"LN2FNx\"\n  }, {\n    \"score\" : 95.99049018683547,\n    \"firstLastName\" : {\n      \"firstName\" : \"Stephan\",\n      \"lastName\" : \"Collins\",\n      \"id\" : \"9d7p\",\n      \"script\" : \"al3zspxyzm2f6y3k7xi78eyhwajri91hf2nmgrzx665di8lc1gq26llpgnv5qsyqgcvmsna6nrbprc68upag1au4ep4kwqksy9pwjfzshh9sr2d6m1n6xa7jttzo4g90crmfknptoxmx42urvy0oxkjruhc06arcb15gdx3pta4dsjaro675iainzcz4xg5l\"\n    },\n    \"name\" : \"Ayanna Kub\",\n    \"id\" : \"ku0m\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"zx9wudrlbru7tuxvy6iqatem1qm4o5cimhg81e6wtwfi0mcb5oumyqjio9yzscnz8tmdhwysn9aqea0mkmehvpyce55uc\",\n    \"nameParserType\" : \"FNxLN2\"\n  }, {\n    \"score\" : 41.216795952542164,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jordon\",\n      \"lastName\" : \"Ledner\",\n      \"id\" : \"o84q\",\n      \"script\" : \"xun8czansr465nbor6xvisjetg04b5i8hfrecdaikvlfocefh9mqsga8zkq0k2ggde6jtoczp8wsnt1p0f7a9ayq70lrfk1ot5nzudaqu8whoz99\"\n    },\n    \"name\" : \"Mitchell Turcotte I\",\n    \"id\" : \"926u\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"phak3ndcwjqtb\",\n    \"nameParserType\" : \"LNxFNx\"\n  }, {\n    \"score\" : 28.351779753023532,\n    \"firstLastName\" : {\n      \"firstName\" : \"Eura\",\n      \"lastName\" : \"Hammes\",\n      \"id\" : \"5y52\",\n      \"script\" : \"ckgshqre6zqkmst9lyz5e7ni3vie8trurok5cuk8l4i6xwdfnld2ag3k3slt7vlpsookf9fnzfyfhlygs39r033lcdosdotdi8po6hxvhu4i2k6sxerr1louf41wn1ipzc95m6qx9ej7549u2j7ulhmieyu789hmljm3muq1orbhu1ozn5pg\"\n    },\n    \"name\" : \"Marquis Aufderhar\",\n    \"id\" : \"e010\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"yuidnau\",\n    \"nameParserType\" : \"LN1FN2\"\n  }, {\n    \"score\" : 44.98370547004467,\n    \"firstLastName\" : {\n      \"firstName\" : \"Harley\",\n      \"lastName\" : \"Beer\",\n      \"id\" : \"acta\",\n      \"script\" : \"fp13fmzfjaifku1j9qhb1yuu3zr9nbukqoiyi8nfkr9y\"\n    },\n    \"name\" : \"Ms. Wiley Sanford\",\n    \"id\" : \"5ku6\",\n    \"nameParserTypeAlt\" : \"LN2FN1\",\n    \"script\" : \"tx9v680g7vdv7jq2rjbco86gctcs5xbty7wrglis0yc68qforxi2z3l5u7zehz0wqkuxs0m2xgzj0dki834gascufnwpeoexm4w9a7obzafsbkcmzlcyx9r7j0w4oi1rpmiafgte5w0rlbgeo81088a0dnfpjnua8nc5i5hrgdmlqmre3w05\",\n    \"nameParserType\" : \"FN2LNx\"\n  }, {\n    \"score\" : 53.92751661208538,\n    \"firstLastName\" : {\n      \"firstName\" : \"Rigoberto\",\n      \"lastName\" : \"Oberbrunner\",\n      \"id\" : \"stzf\",\n      \"script\" : \"qa4fn97vk73xul0pi7lh891e2tk1shpt2akrbytetfngicgu2lq8kqjlnpii1bll36oi09g1ok1weuqxthif89s2tdcpr7dcxro3n4zmljsz3xpivj8kn8rzio9pi9lc081zrh0w8f0yg36psrk851drkq6bl5ds8\"\n    },\n    \"name\" : \"Man Huels\",\n    \"id\" : \"x8z5\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"alrdrl0xxn93mk6a0zp31n9mj0skhtls3b3bjkiffag9wtr7e8t56hdld7u6i4yavl9bs9wsqv5l04l8pki05mmgl7omukae630h7v5752xgbpvoxndn5uxcje620n8gj796gbe8ryqngg\",\n    \"nameParserType\" : \"LN2FNx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d40af0f6-9419-466b-894f-296747ca87ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.364821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2813b197-d04e-4850-98b8-752e5cf58b24",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Dr.+Anita+Crist",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2813b197-d04e-4850-98b8-752e5cf58b24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.362968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    }
  }, {
    "id" : "40569857-e895-4b39-abc3-7b5f0ed68dcb",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Brandee+Bahringer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "40569857-e895-4b39-abc3-7b5f0ed68dcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.362907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName"
        }
      }
    }
  }, {
    "id" : "e67df507-de52-46f4-b07c-3f45cbe9efd7",
    "name" : "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/pinyinChineseName/Barney+Graham+Sr.",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 34.93419274096674,\n  \"firstLastName\" : {\n    \"firstName\" : \"Cliff\",\n    \"lastName\" : \"Nader\",\n    \"id\" : \"158i\",\n    \"script\" : \"22fbteefhc3lp2np5393z1k2r8dabsg29jo3b9jog25y16gcnbsp4zxul3yk6xqa2zi0rzxgugcq4dfj4g6uswtkz566y3o1k2texhp4ahyva2w7ou2q91h3modsz5yfokw9o6yk9vhjrecgsc6t1lo4i15mhb8nhx0d2r4r2h297c2dj4w0t\"\n  },\n  \"name\" : \"Ms. Myrtie Renner\",\n  \"id\" : \"165e\",\n  \"nameParserTypeAlt\" : \"FN2LNx\",\n  \"script\" : \"zlgco97s4xt535rjtueboj12qyt5cjph0hiapz92tjtblngltglgqwwu9f92n250fhzft4ryjdkn1g6j7703c1hzw3c1m3e5i5252n78ooqshp8018wwqzacv6jcu053rkce94j17vgtvg\",\n  \"nameParserType\" : \"LN1FN2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e67df507-de52-46f4-b07c-3f45cbe9efd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.362833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pinyinChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5acf74c9-6d2a-409b-9337-7b0de672840b",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Beatrice/Green/939.757.6512+x233/011xqozwic65d5lb4e5yg908cd572hadcp4tlta1m6x5aeq8yc4k2gm04ejpplyx1v1kp4oqjfavdhtdgpw3rner9m16sgl54xgs4jzvwwbh8fd0ph74us543y9al8z0prcbo8jd/pkkf3tdwvi0d4ypdocot8raz53vs4eig1vogx7dkl2gtrzef0cmznqk6e149r6ipu515ah58pbu9qiq12tnuzknueew0f1olrq6o2zceb0qo5eznb4iy8ofkillx2mx354hqpiqs6pgbk7d9fxo3",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5acf74c9-6d2a-409b-9337-7b0de672840b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.362408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "7d80bea8-3913-40df-9243-0ba53a899235",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Genny/Stracke/%28925%29+534-6968/9ixi956xyxg04ghygg9ezvw6mno3zn9fcmo0s57vt9jpt55fe5bpd0amt2picrxh2lhshcvu8loduc3f4fc3w14xxonjaojrq8k2qecerq0k4oakrcaawkrn2t6tri745b/wkoh2xfstafy3blkvbuwpyngy80ndh8rrd2lc5i0wsvo5p6j2ysi9202hprrc01d9c12ur9",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7d80bea8-3913-40df-9243-0ba53a899235",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.362309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "c2347e35-b920-427f-b72c-423bba2a4093",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoFeedbackLoop/Tama/Towne/356-832-3989+x9665/bglj9gb5503rgbs7hcve8xi139ytx72x35tp51kgjhucam0zch1if9vkpm5gkbax80y0kubpinm3gjkcwuqobtpf6yvbdr79xff3qq5va47maosnuxdlvkccy/9eejn7osh23d0gddjahl2z3ketvf8v423ka7z6dv4mho093g95693z6xmsiwd2dwd1c5infzlhmif830mll1w9xctlpur69yq4e42xrycxsxh5x4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Kirlin\",\n  \"originCountryIso2Alt\" : \"70umsjr0xpzmoof9yt4vt1pszvw5srzb05hteu8owo4o1t6jkl4br4i5w8e90x72743isyo3mcuh7lwoxgdzyrmzr9uy24tzzg1ei92p2jdnynue1msogurydjscnvvet92dc1uns1dbewfw9vxpb9nzg9u8rjbb4wbapnsb54t3jxfl9cz7c7gkzjyax8cyp0\",\n  \"phoneCountryIso2Verified\" : \"erddraa6d6c2t0zy5uuvvjd64s9nrjmej\",\n  \"verified\" : true,\n  \"script\" : \"ps9hj6qm75nsszrtr8ucupb4cd9a3hc7fabx7vcf2inettrb4d5f61aq9pdvvbku83trd7prb6wqlnakef2urimwhbs0kysdx37z2\",\n  \"firstName\" : \"German\",\n  \"score\" : 79.47702107018945,\n  \"phoneNumber\" : \"(724) 320-1420 x147\",\n  \"phoneCountryCode\" : 1730325707,\n  \"originCountryIso2\" : \"n3b1sw0od9xfkde66w9slmrybarzl4o403399b8dpera0fc9wosxy4rqcuruiwbcnd95chuokyypw9hfxfi88c7eeevr9iehk7\",\n  \"phoneCountryIso2\" : \"yla55lrvtycpgcvd90x0pw3kpclfguhn96b7l4eg3q2asbh66u8s0hdek1w7uf3ml9pvxzbw4equ1r9jrdkka81ohl7wcbdzw4rd1\",\n  \"phoneCountryIso2Alt\" : \"mwf\",\n  \"countryIso2\" : \"v02yayjajcdkgxvcmp9qpbx5hjkcqtrwa6jicco51ajk\",\n  \"id\" : \"fq53\",\n  \"internationalPhoneNumberVerified\" : \"sgowm8vmiqkg6k64sdc92rk0bm5ep51o7\",\n  \"phoneCountryCodeAlt\" : 1045595650\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2347e35-b920-427f-b72c-423bba2a4093",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.362197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoFeedbackLoop",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8623907d-fff2-4fef-9af9-ed7899621ced",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "8623907d-fff2-4fef-9af9-ed7899621ced",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.361748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "be04c8c0-da37-4b9d-9fd1-9d3050148178",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "be04c8c0-da37-4b9d-9fd1-9d3050148178",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.361733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "1fef7ede-e172-42d1-a6d6-3b82950d3b4d",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1fef7ede-e172-42d1-a6d6-3b82950d3b4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.361718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch"
        }
      }
    }
  }, {
    "id" : "d735e90c-0e3e-45c0-91fb-8bcacecbc1a8",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Hudson\",\n    \"originCountryIso2Alt\" : \"xrzrn1al3vfqr9ztdb5kthavgsfgld9pctl92saxpdk0lqf5fn\",\n    \"phoneCountryIso2Verified\" : \"qg5ja05zue3zcv6wfuo0n2bvm3eh9khby8lkjvn74o6vn5lmhbrb6xr3a8wviluwyfnv5z9cn696fqhqs9buf7w5sgldjv93uxanv5z8609od61\",\n    \"verified\" : false,\n    \"script\" : \"wskrhug4uflmgo4wpk6ah1glt02ymsc0ap9jsz8n2uk24arir4bf88mt8uk71ovmv2b6w9wk1ulpryrvfz3wfi18pdu5515zecqqiwjfxk1jct7zc5yld4p0wbknlu5dt7y5t9uhocy3gp8stmgy294\",\n    \"firstName\" : \"Daphne\",\n    \"score\" : 97.97538349870261,\n    \"phoneNumber\" : \"384.696.5882 x2064\",\n    \"phoneCountryCode\" : 1670641161,\n    \"originCountryIso2\" : \"vo4fk5aysn1kit5w72cxhdb18k8u2ogwznxp76d9viar7drknxhnpa85waxr0fcrc8jododj4kdzzgbomm9ca24ub62lmio9ql\",\n    \"phoneCountryIso2\" : \"eeik6mv4yz7y2pcpyx9a55u3bk41d5a9l5idm6pk5h5z992c22tl8xipsbsf339gni8soif537kowzkcpom5rfjatkiojxr3quxa1f8yds7p62za5ytxq0953eu9o749r7mubh1\",\n    \"phoneCountryIso2Alt\" : \"i48lo1p3nwawpbfod6k8qt18d3fb7pjcz4vu51ovcxramtijy8ksvkvd\",\n    \"countryIso2\" : \"0925ubsbyswdfy75cpi8cea6yo02l57fllze91xpqv7tycn6byn4b57yrmqa44gve\",\n    \"id\" : \"2si9\",\n    \"internationalPhoneNumberVerified\" : \"12e8jc6e3unphnl7r56ulwjpmyfoknrrzpbx\",\n    \"phoneCountryCodeAlt\" : 1126544642\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d735e90c-0e3e-45c0-91fb-8bcacecbc1a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.361693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d352a79e-9e3c-4bd2-b90b-9df6d5eb4d43",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Hoa/Lowe/076.177.1121/tyja7aieq7j822v8ntwcedskymgar9u02l6pfrdpfhk8ubfztxega49k0c0ufq1250effmcbv0bhy21tzv5lmjk808e5kszpbuqohi460nurec02ui2gw65fqi72c3lsone9vtsn4aak3pem6q5knctj2n05yf",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d352a79e-9e3c-4bd2-b90b-9df6d5eb4d43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.361374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    }
  }, {
    "id" : "dd0cecd9-019d-43c4-9605-61e5c446afbf",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Carlene/Rempel/944.680.3585+x4873/mebla6oa4o1483eqai0s7lcin7nbop7eblrz3ct8jf92xqe76e1n0r5a3yzx71ldrruecrb32odyh0caedbkgh591qojbqwlix8ujhezcspzyh53ooqfns9ctifprs4131t3jhbguudj9pkjyy6id249ezhzf705i3p45f1z875c3syoo4ebi4eep105fzcddusyjb",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dd0cecd9-019d-43c4-9605-61e5c446afbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.361288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo"
        }
      }
    }
  }, {
    "id" : "5e3565f1-8301-42ee-93bd-e9b87754f493",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeGeo/Arden/Satterfield/%28884%29+064-7310/e8bx2sh5rkrxomkoqt5jcxjck6fyud0gejy3lv2e93lti72mceklelb6ia2tfmut175qni11rk2fzobfbuyg17qz8e5myhwb9l6fw8e7j",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Kiehn\",\n  \"originCountryIso2Alt\" : \"pouw38lqq7azawgbwqy9eqjry0tltjgwgrhe2h2oiaskfskca3k7rvlv1j29ybhqeu2yc0izsapvtgnbcdl2ehoe1ag21j2ru\",\n  \"phoneCountryIso2Verified\" : \"c59zv15qcq3471056zc9lvk990g65wtbccgt64kwf3\",\n  \"verified\" : false,\n  \"script\" : \"n8qniempwj131\",\n  \"firstName\" : \"Cesar\",\n  \"score\" : 9.749223365698311,\n  \"phoneNumber\" : \"486.808.7078\",\n  \"phoneCountryCode\" : 1499729632,\n  \"originCountryIso2\" : \"ppgyiwlmmogjmcmn51a50t5eu6ctg3hjur97khverhvrolynj0prmkl3lq08iwjxp7u4mj64wxuqigbxljlntarrh4g15eppn3v87btcgxbqgdtrsgrktpnzfk\",\n  \"phoneCountryIso2\" : \"5uogb3lfzc04s8c8j6z3nx8xr2p45rz1btskucphrjqrufw52ayuht3fibrvx9ki0emqg4okbqac9pk7l6nqyxjnj4ht1ww6v1jdo262ezbdmb0ehi24arw5x3res12tdbiv1jw4g4ua5ksyt2\",\n  \"phoneCountryIso2Alt\" : \"lonuh75mhenpa1ev9vly8mnbctdkaednkrg1nvjm0dbcgomzpcafmahhmfz5yqkm2mqcuf73eevwv1yd5q16yc4v1zwmdlehppkpdoee7jdrz06qoirpd0kg5n7fcr5d\",\n  \"countryIso2\" : \"fn6hlmhmoxz3h0rn71x5zdonr9kc8zfrd33mlxibw940nyxmvpbux\",\n  \"id\" : \"qgn1\",\n  \"internationalPhoneNumberVerified\" : \"x0q3sy1vosd0b2c0psnu7d3ru17tmjaf1nd3jx3c7aowrhlrdbm9uscde7i324qingkbrdqdsx82hedy9sr356fym3kl45ynqhc4xjnisfj5fl6et5c9o02475rkyvaeysefe6tiftq\",\n  \"phoneCountryCodeAlt\" : 720120523\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e3565f1-8301-42ee-93bd-e9b87754f493",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.361184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "f252f391-e35d-427e-a20d-a33dac85b14c",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "f252f391-e35d-427e-a20d-a33dac85b14c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.36073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "f688be71-0f78-47ba-84ee-361614058fe2",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f688be71-0f78-47ba-84ee-361614058fe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.360715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "4cc9411e-13dc-4694-ac1a-bc4fd531c0a7",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. - 400",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4cc9411e-13dc-4694-ac1a-bc4fd531c0a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.360699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch"
        }
      }
    }
  }, {
    "id" : "92510a56-d0ce-43dd-a3e7-82022ddd8e73",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCodeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNamesWithPhoneNumbers\" : [ {\n    \"lastName\" : \"Gerhold\",\n    \"originCountryIso2Alt\" : \"cy205yye7a5oc2datgm7zgk2zz3827v5qh1mryqgi8ia4knd2yco5lxcttuekzol56w\",\n    \"phoneCountryIso2Verified\" : \"givz41h2j0y497yaqx0j6x6drjxn8htwrqbel8t1zg02dyqh7xuj8dv9ygk6pwrroob5l51va0bf4my4pp9rn92q7uzhk5vk7ibqsqt547tiz6cwby1tu30lguzwslzzxlafqqd2qz1yyeak93syvyrir3b3iautwcs9y5x7r4599u29fe86wm50bboaiy7620msp4p\",\n    \"verified\" : false,\n    \"script\" : \"0o02w4q4a0u2i0geizmidhz59iviyv3irbbge5337h4gj5c7v2whkk7sdz8n807ojwt13bcbcxp6fv857dopjp6un4fi70lzt62k6llk3tbi6yp5wlsc71569i8mcoaltbetv0p9pvcy4rrf80tk\",\n    \"firstName\" : \"Maria\",\n    \"score\" : 73.86713515840722,\n    \"phoneNumber\" : \"800.258.2422 x45783\",\n    \"phoneCountryCode\" : 920690792,\n    \"originCountryIso2\" : \"3lrivjg9mjn7acqbh6on2i687zks823bqt8ek14psufefk0rvxj1uzys7vugl7u9s4mjoh90gthww3so5xl3emh1wm9pygtei25utdo8vgd8osrx6a6\",\n    \"phoneCountryIso2\" : \"hkxcg6n3arw15olfxo54oe09bopr908qxobqdfvkxn8qr6ec5v7c6pu56iy04ur86m2109soavi1gh84kh7iqf2a5wtd3n5o7qgv7o028dngaynt97d22rcjco2d24m9ts2e83hfkyilrcjghtp1lptoagbg9svogno1liq29am3d\",\n    \"phoneCountryIso2Alt\" : \"1qnit5aik62j79phj9xw9i7ouiyyyb9afqdru7uxdu6e0cbleqqjc4wf5m2eqqdw0lny47mdvuqrnrjmv9tuqy85k4sidx5l6skrvxehn7rnj0ro21l9n\",\n    \"countryIso2\" : \"d5lgzo3aff7mc7q1vqssfznqvl1a1ru250w2rzqpmzcf4ax7z8z4ivkcah9c96gnlpz1zaxneuqiaqiq95n2wy2u5nd1mh8gusqfw\",\n    \"id\" : \"v281\",\n    \"internationalPhoneNumberVerified\" : \"kn48duvv7alw5zg7wyg65ek5dgn4cx5dzewghrn36le74n8mmk2tu2da624ym4c0a4h6gjimi4oaemj42rzkv3vvp2wqqhsto42m96rnuivv86y9by5qkpo9v0re6g6c63aswc6mfga7o58i61h0qoy30b4qgdyr3cbwxp8sc\",\n    \"phoneCountryCodeAlt\" : 804526589\n  }, {\n    \"lastName\" : \"McKenzie\",\n    \"originCountryIso2Alt\" : \"hfqdr10bpdhaw2sfghnp56ey5375yn32eopxxrdc2knnn2t5bhbltvmwbupr9cl9wtcmwyh3q7q5muq75sd4nh32uomoqle9sivcuhoox4m230zec8ee42d328z5oh4mj76vm8piflr5mvb0f6x3r1jferir\",\n    \"phoneCountryIso2Verified\" : \"vm76t04ti7eevlhyxkjflydw7qx7eavmfp6x932ty951ttvxc5rbw8fnjlnsilvuph4v9818orbh0fux2x71dhswk4egxbnsptf5ky582vwa03bfk7vodd3gaye6ntmuu6sj119wddgvtwthhfya\",\n    \"verified\" : true,\n    \"script\" : \"ur1v4sritbzd9ku2pv6sbptggbn9hivikik61pob1nygenp55dtmpw68xk7vu0uxn6vc6vyfsipjg1ol8vthdi7lbd7zab5e7b5wur7adfmlqa\",\n    \"firstName\" : \"Lesley\",\n    \"score\" : 62.40031719839531,\n    \"phoneNumber\" : \"(137) 975-2864 x15327\",\n    \"phoneCountryCode\" : 1338173230,\n    \"originCountryIso2\" : \"7xv5cb6mzphtmx9rtv4b0mmnos61x9h7c0dnrqg5owfbnje87rusotmsefdlzm4orm8thvu17vfv7g8xcwj14c9ijjr2uwnn3rrpg1q0w5kldchv4d\",\n    \"phoneCountryIso2\" : \"q3rn7tk5juqmzdaza45mc9335h2z8awuizkjbukb6xbri25gaivwvu50l6coqduk7polhbb3kc7ed1dvd96vx534uvgfa4px9tvdhhq09e7tmxq4kvymkys68a6wmmov2vywkfp9daco7r3736zqcztoqu69sks4ojfthjzgbylu3qx8mh923yh\",\n    \"phoneCountryIso2Alt\" : \"d2cwfl5zt66pycxmrse9px0bjyxbyok6tiiy60w0a2fvgi2lki5ojpe1khu1x6emrmwn0054619nrdenw3abb8k5pl6l855o2lmujr5k1awo345mr3lrl7ypyt8r6sltycn4t7z6y5nwz6bl9794hm1nb9pu6penw9bks2zsxzb3dqhkjqrgzwrlttpfimhjff4\",\n    \"countryIso2\" : \"ttxy655skw57ulbcwy0clw2mwpy0vv1o7kpinsbmra1lw3ek\",\n    \"id\" : \"4p7c\",\n    \"internationalPhoneNumberVerified\" : \"4h3jyar8byk9syh7hsptxe5r6esn1n7lfwmyn7x9jfcrak1ttinovpkxwskzp0lq1dju3hx9s8smh343m8dqjfbw7pdfo2g6q1znzfdc0g779cc5gizu0cvwle7y\",\n    \"phoneCountryCodeAlt\" : 1793729342\n  }, {\n    \"lastName\" : \"O'Reilly\",\n    \"originCountryIso2Alt\" : \"b084yqmd3cgla3857ej8fraytazisykn73cw6sy6fhaz8ius87e\",\n    \"phoneCountryIso2Verified\" : \"09x1rb4hshgc350\",\n    \"verified\" : true,\n    \"script\" : \"wd2waw0exl5gm1lmkht8k3fgimurfa0nfzpjfc27p170funk97yfe0bdj20ooxza3l\",\n    \"firstName\" : \"Helene\",\n    \"score\" : 45.87806352739429,\n    \"phoneNumber\" : \"(390) 908-5891\",\n    \"phoneCountryCode\" : 1557041863,\n    \"originCountryIso2\" : \"knw1thmht42edi18pfg95hni3r1rkoaibht84jpgjoe574uqezy9vi3dbgeha40bidwiqtfh9r13e45csdn53brki33l09jh\",\n    \"phoneCountryIso2\" : \"k5mhnodwg8wh6ikbgtdcaf6vx724tplfuk7tscf45l89g0ypnxv12xe8zfcoj3av3vzs0i3mdauaika1j7cs706c3qqirirdz9c38xbth2hiljoob62wmlb0sqeqa2rnxah5e6fflzoooxjnxmvuajfgcge9y2q6r2a78\",\n    \"phoneCountryIso2Alt\" : \"4hsqbhmrar55m2l4ps5l2ubhf4y708zv9h6gc8hdxq7dnsf9owg6udpgcbi1wwdve3jabz8u9gem67qtcod2cqx7gi1qbcjhkqpgebztex6k7k714sc4d9wb0yvrnfg42g2n67ifh6vwynhdi\",\n    \"countryIso2\" : \"49lmp3kltib1xvn0b7\",\n    \"id\" : \"84vy\",\n    \"internationalPhoneNumberVerified\" : \"b88ey3c62geaa15v88kff10hbsw65hoyg5gbqyddp6ibd1wazlonkn787do4y2j3ojizdw\",\n    \"phoneCountryCodeAlt\" : 490231586\n  }, {\n    \"lastName\" : \"Armstrong\",\n    \"originCountryIso2Alt\" : \"bpf158wmu0zhalemucba0lheagow7iu1ozge6lnodrxg5l4tr29l075n6jmy0\",\n    \"phoneCountryIso2Verified\" : \"pdqqodm97aj0tpjagtyutyg4c9qmu6mfkngrxjzi43qffshlo4clanyjk8m76i79d93c2kzobkdo6djajhw65r96sta5m9yvj2xb0nus5mi2bzwjegqbedh0l5t2hjrqgrsn2pbay90vmyid0ty7i5p23bb\",\n    \"verified\" : true,\n    \"script\" : \"ftx0brbk4tjlebkbx6kbn9u6sswhf1zrq8x7t8zik0h9r10wgl32l9lonwqtfjcov9rugoy\",\n    \"firstName\" : \"Noble\",\n    \"score\" : 89.4436905471108,\n    \"phoneNumber\" : \"724.925.8311\",\n    \"phoneCountryCode\" : 1125482676,\n    \"originCountryIso2\" : \"gw0elnr7ym8mmupd662zzvh7jc738c2s9ibmjstvjlzdbp2zy0lti6k89ue5oebjdn9ov71dkje2nsbpvyff1nf1mmjs1b1wxrvcxy3iilazqfrl28vlscaymv7vjtcewl916vgdkvjmw\",\n    \"phoneCountryIso2\" : \"3t31hwpit4o5nk452p4b6zj7j0wzws14xpyeil8f6ag082es2ajeedjaap0zwqow8y2timw1jv9ihpiuz9ox09twbzcwknu7pteevfx4pr88jtdw2ps8g82826vje35ule24vormfxd0e31\",\n    \"phoneCountryIso2Alt\" : \"zx5c8tzkfj5rbv6mtvkfqmdn4ax9mba2zzc2w7tjucta4isrg4d264ccl7kj3x1v6u8ucapcwqgwhtxusuahrbu01j3uu16gnhf\",\n    \"countryIso2\" : \"ugylfh5x3bk7tvvyn8x9zcr0von8t36y1x8o4f00qy0jacnqhs56dict4w1xignisxovvalm1ulj3bxfguvomfx1rei\",\n    \"id\" : \"w3e9\",\n    \"internationalPhoneNumberVerified\" : \"awz0osvftw7ulmvf3hrcrkpz2p440rt1z06ecgfevfwfptcai80752plf64drycqlr64a\",\n    \"phoneCountryCodeAlt\" : 1357668391\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92510a56-d0ce-43dd-a3e7-82022ddd8e73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.360664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCodeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code of personal names+phones.",
            "properties" : {
              "personalNamesWithPhoneNumbers" : {
                "description" : "Classified phone-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNamePhoneCodedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "efbdb1d0-9fae-4c21-921e-d45b456c4013",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 403",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Valencia/Pfeffer/077-221-0692+x01971",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "efbdb1d0-9fae-4c21-921e-d45b456c4013",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.35953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    }
  }, {
    "id" : "0d785ef2-8601-4a5a-800b-6950b5c2bb5d",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. - 401",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Jules/Jaskolski/%28340%29+769-6558",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0d785ef2-8601-4a5a-800b-6950b5c2bb5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.35945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode"
        }
      }
    }
  }, {
    "id" : "9f0a7cbf-7a5e-4f78-8127-36cbb54927ab",
    "name" : "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/phoneCode/Athena/Fisher/119.387.5864+x2361",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Schultz\",\n  \"originCountryIso2Alt\" : \"94w5jdasjb13d6mvqyyp8z0lmw0uqqb7x5lavhjyw3nkzm1qte8j6454xv4x94msgw06zw6n92b9rnse9ho3musd188dj4v0ixv2telt9lk2hrgj55no2hko6d41m1ek2pumkmb6pez0hjsiatozwohhl4nmglbuwni97aowcrjbm3rp\",\n  \"phoneCountryIso2Verified\" : \"7ygpycmbayuj8wbug9u4b7hhdurgfwzx3jsx2vadig0kvcjxkd0h6l9qw7k6d71kpcfjshb6pda32fco87p6jswgcr398c7wgzx86nhmgnnuov4c4l8fndajesjp50l36\",\n  \"verified\" : true,\n  \"script\" : \"p3yqbployal6q0ms52utc3a8o0rpijh2c9qpub4f1lzdj6ebpc6r77i10my9yka19tm2xqkezvwohsorlbk4bqocrctj29a\",\n  \"firstName\" : \"Pablo\",\n  \"score\" : 71.51630636405193,\n  \"phoneNumber\" : \"073.303.7187\",\n  \"phoneCountryCode\" : 313497158,\n  \"originCountryIso2\" : \"csaxsv6lbrg9rken220db3kidi9ym2w4en4m6ql4to0qzy5wl88k1f6y3qup4d13bh\",\n  \"phoneCountryIso2\" : \"zaovzkveg20dbewzlju13y5o2bna8pdgtgzeqfg9cstrrszyltb4nmdczx4gpw93wvzhcfwvv3v7xjuj19e6x1hf5uwvtsrru9ny7yax5bqlcr4nx7nz6qqysarh5qjz93u0rywpuoml91yh5ynbhyk0wclfwwowa5jfn6jzq1nufnn1cw8u3rnq5yyq6o7a\",\n  \"phoneCountryIso2Alt\" : \"u5hktyivyqbuyrumt6ijqxc434afcwnai5z3qis89t7r20ml1qb8mvprdbyu94yqb7feysy5x6yomo4d2zvhii2vpn8yw1g5nj5zc01qz9jpl4712vs4rssd8wvck497v8q8x35qd84azrwx87hzks6wf9nhxgv73job0n6xsd93c9nevm2o2r6h0kc3w1c6\",\n  \"countryIso2\" : \"cgxnga6sl44kid2y39km7dcsznno4tlt8xi1yg7htmpfwvtoji1wx63l25gkgl0cbvwdass4g95hcng15yunrizvn2wdd2x4t20jv2h6stve6dc6w9p109dqez5favsnx2x75waijc\",\n  \"id\" : \"b58s\",\n  \"internationalPhoneNumberVerified\" : \"ay22caoiitr9ao6xxugetkqk\",\n  \"phoneCountryCodeAlt\" : 802753374\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f0a7cbf-7a5e-4f78-8127-36cbb54927ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.359355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "phoneCode",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.",
            "properties" : {
              "countryIso2" : {
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "internationalPhoneNumberVerified" : {
                "description" : "The normalized phone number, verified using libphonenumber.",
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "originCountryIso2" : {
                "description" : "The likely country of origin of the name.",
                "type" : "string"
              },
              "originCountryIso2Alt" : {
                "description" : "The best alternative country of origin of the name.",
                "type" : "string"
              },
              "phoneCountryCode" : {
                "description" : "The phone country code of the phone number, verified using libphonenumber.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryCodeAlt" : {
                "description" : "The best alternative phone country code of the phone number.",
                "format" : "int32",
                "type" : "integer"
              },
              "phoneCountryIso2" : {
                "description" : "The likely country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Alt" : {
                "description" : "The best alternative country of the phone number.",
                "type" : "string"
              },
              "phoneCountryIso2Verified" : {
                "description" : "The phone ISO2 country code, verified using libphonenumber.",
                "type" : "string"
              },
              "phoneNumber" : {
                "description" : "The input phone number.",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "verified" : {
                "description" : "Indicates if the phone number could be positively verified using libphonenumber.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNamePhoneCodedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "be7c55c2-73a3-4908-9a46-7f1aaf97ebba",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "be7c55c2-73a3-4908-9a46-7f1aaf97ebba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.358863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "b1eb5086-7e13-4101-9358-92ec919d0bc2",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b1eb5086-7e13-4101-9358-92ec919d0bc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.358847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "5d7eb4d4-f5cc-4a48-a400-cf5fe82f70ec",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5d7eb4d4-f5cc-4a48-a400-cf5fe82f70ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.358831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch"
        }
      }
    }
  }, {
    "id" : "a99b8e2f-9c2a-4095-b729-97779cfbe22b",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 75.54524753767178,\n    \"firstLastName\" : {\n      \"firstName\" : \"Wade\",\n      \"lastName\" : \"Trantow\",\n      \"id\" : \"fz49\",\n      \"script\" : \"znkiqmqp4t7tzo\"\n    },\n    \"name\" : \"Emmy Kuhlman\",\n    \"id\" : \"zlwi\",\n    \"nameParserTypeAlt\" : \"LNxFN1\",\n    \"script\" : \"tz9v2pa5cjr9q5ahn94e3yq8doe470jdaxo\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 10.16228554216443,\n    \"firstLastName\" : {\n      \"firstName\" : \"Lenita\",\n      \"lastName\" : \"Quitzon\",\n      \"id\" : \"5r20\",\n      \"script\" : \"vltucxrege7ouoap0ktb3pgx8ztmcp43wkpjvin7o9cj077itnxd6jmf4voelzimzsmr3nba55m1lx93c9dfphtoxajba15n5wkdta3blormo1oc363t3bmjtpil8so9ne0dkvundgy9tr7hj1x3kf9x3v6o6zhgn0gmps9itinwlorkcrxu9f55y\"\n    },\n    \"name\" : \"Mandy Franecki\",\n    \"id\" : \"5c3p\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"n43uhlf6whdrkdzz08uf26fidmwhttqsutmfymwt6t7i8a0q24brj44dzeo6y23993y3t614xizgennkwhvkgfwb99csb88f6\",\n    \"nameParserType\" : \"FN1LN1\"\n  }, {\n    \"score\" : 41.855420798157596,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jimmy\",\n      \"lastName\" : \"Donnelly\",\n      \"id\" : \"2uj6\",\n      \"script\" : \"ejoow58di4hw45m02y61jaz7up6b6d4ntsr99ek5grobeqpp91v3dg0eimtbfg7jtdnwhfar3fhyw3wuyui5w1m15qpta9sh56f2ssw1r3ow6a1jf4x88opqg0w0gecyqudnqdu6148qcilk1jqwtwyoiozmwam98q\"\n    },\n    \"name\" : \"Kevin Bosco IV\",\n    \"id\" : \"re1m\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"tm12fid5jhpxy6kfcab1nbgh2lwzuusqkqdocqdxzqixspmp2vdy2r08noqnx3g7hiex73xb20dt5rxntk67aupviv0oo3ruewrgs590ytbws3d4w39occ4vru92koliamu82hcjhfyalmpddltpmm4fe0fs0t9k8h3rtprp82ou5vepqqvu4vv\",\n    \"nameParserType\" : \"FNxLN1\"\n  }, {\n    \"score\" : 43.792257920359255,\n    \"firstLastName\" : {\n      \"firstName\" : \"Truman\",\n      \"lastName\" : \"Sawayn\",\n      \"id\" : \"99e0\",\n      \"script\" : \"pqbwoi27nshjspmjiudd44mk2sd9s2k20kh4e66rciu0g6miu56ym7zqkwciwd5axcsvymklra9lusy92vd1a4wlax4lqbro0h9utalhx4v75ncfps8xt80od2wrywq\"\n    },\n    \"name\" : \"Steve Cole\",\n    \"id\" : \"44kr\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"2r0w3jseiva7vx0vcoefh9zdwb2z721559gj9v4xbo2uiyj0mjvune4iyxx2pdzh65zmxuxs\",\n    \"nameParserType\" : \"FN2LNx\"\n  }, {\n    \"score\" : 54.660369372035014,\n    \"firstLastName\" : {\n      \"firstName\" : \"Robbie\",\n      \"lastName\" : \"Lindgren\",\n      \"id\" : \"2sf5\",\n      \"script\" : \"myu53va0q8k6rbnnzk256oeovhxyjj10k124hpnz\"\n    },\n    \"name\" : \"Terrie Weimann\",\n    \"id\" : \"3xx8\",\n    \"nameParserTypeAlt\" : \"FNxLNx\",\n    \"script\" : \"d2u140v69xrqacomzwb62irjjpgi2s6hir5rkskkl1bvp6urpwz98pvkewys6\",\n    \"nameParserType\" : \"FN1LNx\"\n  }, {\n    \"score\" : 61.194888562115814,\n    \"firstLastName\" : {\n      \"firstName\" : \"Donnetta\",\n      \"lastName\" : \"Bednar\",\n      \"id\" : \"q9n7\",\n      \"script\" : \"luzx7qhgejthfhvk66a7y7vyv3tmftyuyg4o69qb7ts1usjjx\"\n    },\n    \"name\" : \"Ginny White MD\",\n    \"id\" : \"wa67\",\n    \"nameParserTypeAlt\" : \"FN2LN1\",\n    \"script\" : \"q11y30e8reymutogwg2pnr9l37xt6z04h1aurrunlpomynqc6ousvfzynjc4pibxibdc0cjarn5g0lbfrqenhg878983n8t89cb5tal3cate0s5f5oye2agxyem8d1g1j1v8vqsfgtlvxb56zz7ayej4dclqi4bniw1d1n0lnkcf0\",\n    \"nameParserType\" : \"LN1FN1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a99b8e2f-9c2a-4095-b729-97779cfbe22b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.358799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "648e951b-7ad0-4c04-aa02-2822b736a581",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "648e951b-7ad0-4c04-aa02-2822b736a581",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.357079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "934f773f-a266-41dd-ba50-d40752e6fec0",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "934f773f-a266-41dd-ba50-d40752e6fec0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.357064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "4a2e13b2-2bae-4c2f-b130-96203e168873",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. - 400",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4a2e13b2-2bae-4c2f-b130-96203e168873",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.35705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch"
        }
      }
    }
  }, {
    "id" : "7c2da245-2421-4eee-99a7-40617333b7ca",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 70.90541542258612,\n    \"firstLastName\" : {\n      \"firstName\" : \"Jeffrey\",\n      \"lastName\" : \"Treutel\",\n      \"id\" : \"77ls\",\n      \"script\" : \"laby3ll02dpp51q8ue58iil22167e1a5ji73p4ir4m1w4j5gji7mkyktf44f6rjx4vgk5qb8tg2lyhpk4dagsb4qxrs2w7zbv5rv5bgtx8r4sfetu6rg5xf0glodv4m8tz7mrod5851g1u4u8y232x4rljx4k5s\"\n    },\n    \"name\" : \"Ms. Charlie Greenfelder\",\n    \"id\" : \"9479\",\n    \"nameParserTypeAlt\" : \"LNxFN1\",\n    \"script\" : \"wuho5upyy6ja4ohufts7tivmqwvoj1grcv6eww7ovk8yw3r3an46iq042k4jg1zqvy6qi7cj0o193xjapk89mdvkge272lsm3wgpabejrkq4\",\n    \"nameParserType\" : \"LNxFNx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c2da245-2421-4eee-99a7-40617333b7ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.357026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0b47212e-d0ea-4a66-bf7e-5aa788abb79c",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/mfe4uuyeioya21qy21x5vr3aak4x27t479v3rxd30cks1k5560yhz2ysgweofnmrbq29ec9brtcc5vg0rpq78tgbxjxu/3v3ng2ffwx6ridhk3xr0boma9a1t8w3wcn8jsrnf4t84vbowsglgnqgf8tvfvmz52ex98e",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0b47212e-d0ea-4a66-bf7e-5aa788abb79c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.356714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    }
  }, {
    "id" : "6d25d9cd-c2d9-42f5-8d34-c13f377e673a",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/1fmqvtlv39cgd3d0iybt8ger0pyh9xw9e42d64edb6hqg63ibdb2b0xw04z3tokkcby9l7kxd3va1m2b6c8tobyi0vnl5q3x60d8aihowi6b9ra85cayhkhwkzuud0qglycczyrig0qpa2bdt/1nrpu99qu7lo10ppcrnswwnu3txquj75w53sg",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6d25d9cd-c2d9-42f5-8d34-c13f377e673a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.356679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo"
        }
      }
    }
  }, {
    "id" : "05f0cbdc-3385-48ca-a4f5-9b94df2d44df",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/sq89cgiebnx4lohpybdone0njih89yi24d/9ulb7oytwgxdrkm9nagamyvv9maq868jtn43o2iqb1spza3y3woe4a31m5nzbneeaxsfkpp2e8xbmb0d5y1se6fq6pz6ok6tn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 47.65602647889479,\n  \"firstLastName\" : {\n    \"firstName\" : \"Shanon\",\n    \"lastName\" : \"Schneider\",\n    \"id\" : \"q035\",\n    \"script\" : \"htddhacj308kqk1xwa8zbp6g7jn7hkl57gd80ql1jepnwv\"\n  },\n  \"name\" : \"Hester Bode IV\",\n  \"id\" : \"p494\",\n  \"nameParserTypeAlt\" : \"FN1LN2\",\n  \"script\" : \"fb44vkvn1qz25ege3ndkh2pw2ooq2bb4atwfoe15kds8eoo2bh7tvojtmegs0az9gpxakpwt6rnzaa29cnk72ow23pg4bpkfzhwsyb1kyshiu6vvkcxux6ubpww3sbaa5soqfy8o6zl21avc8c\",\n  \"nameParserType\" : \"LNxFNx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05f0cbdc-3385-48ca-a4f5-9b94df2d44df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.356633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseNameGeo",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b465c651-871a-4b80-96bd-fc4e5643dfe1",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseName/hg5pj629gpogahy03qdjplvc93wkkfp6kvoa8fpevma54et68qspqyc1fskm22gm1twbexyziu0x7sh8nygeki2n39tsa1h7lpf5",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b465c651-871a-4b80-96bd-fc4e5643dfe1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.356288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    }
  }, {
    "id" : "c938fc1d-4ab8-490b-af89-d71c49e23dd3",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseName/c7xgz4bnbm7hk6iurdfdwqe92fpxoa9n",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c938fc1d-4ab8-490b-af89-d71c49e23dd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.356262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName"
        }
      }
    }
  }, {
    "id" : "31f7ea61-8f0c-4423-88e4-f9a7c4a2bd02",
    "name" : "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseName/j0is7gax1aaveo34nlkoahxbyghvoeqbst9yfvzha5ypl989ntewifcjbtdjvdpq1imv88j7xjq3h72opkx3gl3j3zicdmnydfj389jic6e1mhcu9qgqsloamhtg2yraxe2qg1a33jx7orzuerdq2nm",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 4.1231758337743845,\n  \"firstLastName\" : {\n    \"firstName\" : \"Lashonda\",\n    \"lastName\" : \"Bashirian\",\n    \"id\" : \"w6fs\",\n    \"script\" : \"onh48yrwwqcfen2sj6iua4we6szqdgj0t4exch72xufwzuu\"\n  },\n  \"name\" : \"Ramiro Harvey\",\n  \"id\" : \"d145\",\n  \"nameParserTypeAlt\" : \"FN1LN1\",\n  \"script\" : \"poy906eyctzrcvuqcn9nj9xiw9hl12ao9f7wzw4700s96w8xk8fgjufs2vqiyq3owkv85epel6mujpt7sujtbc61uqin4s19\",\n  \"nameParserType\" : \"LN1FN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31f7ea61-8f0c-4423-88e4-f9a7c4a2bd02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.356225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d31563ff-0669-4c4d-a09f-95e5b872456d",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d31563ff-0669-4c4d-a09f-95e5b872456d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.355879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "df685056-457e-4039-b3de-cf27591b12bc",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "df685056-457e-4039-b3de-cf27591b12bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.355864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "daaebc7b-efbf-4c41-b77a-e072a43edb4a",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  - 400",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "daaebc7b-efbf-4c41-b77a-e072a43edb4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.355847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch"
        }
      }
    }
  }, {
    "id" : "52bd29c3-6962-44a6-a81d-29fc7d3f43fa",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 13.653906634667823,\n    \"firstLastName\" : {\n      \"firstName\" : \"Melodi\",\n      \"lastName\" : \"Friesen\",\n      \"id\" : \"o4d4\",\n      \"script\" : \"0spdny5qc3rpt34l02vik3fdwc5ks7eqo6potjrhz\"\n    },\n    \"name\" : \"Fredericka Rodriguez\",\n    \"id\" : \"csfg\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"tazxt81uar2pqtuuu9b30uvcu34em0qt1781o9o8g4lpuooxidvem03a6k4iopnka0b87phjbpjiewx9xnz4y0un62qe4xo3cri4p14it5u5rk03719vvkpymu2ob6apfxco\",\n    \"nameParserType\" : \"FN2LN1\"\n  }, {\n    \"score\" : 1.4486331583385859,\n    \"firstLastName\" : {\n      \"firstName\" : \"Judith\",\n      \"lastName\" : \"Gusikowski\",\n      \"id\" : \"4jsd\",\n      \"script\" : \"42384akcdddj905rgn9do15q8y2xqgn0hzdidmusevsd43vpbax52qrg1guxwdsoiqcx4e058dy16qjwr3ssvljp5ku1z0blz1l9da2j6k2a73vqs17dlak1vi0sq2hpe7fd8tw29mx1n8dabgipq9cwvqtzjbzy5pv\"\n    },\n    \"name\" : \"Alpha Greenholt\",\n    \"id\" : \"0770\",\n    \"nameParserTypeAlt\" : \"LN2FN2\",\n    \"script\" : \"immsc5gp33iurbeu26a72hu30cw0r48mv6ig0oyeqd2pzlreu7d6fyd3czurbx4d5gaysoyy8az5lhidwr3gzjr0crvj2q0q50ym4vw5s6xb2ll1ufl4w4yel7mp81ey2s9x\",\n    \"nameParserType\" : \"LN1FNx\"\n  }, {\n    \"score\" : 9.690535890393337,\n    \"firstLastName\" : {\n      \"firstName\" : \"Ruben\",\n      \"lastName\" : \"Wolff\",\n      \"id\" : \"1pq0\",\n      \"script\" : \"gsfvgk9mr07tsvr41320hs\"\n    },\n    \"name\" : \"Sari Pollich\",\n    \"id\" : \"6m42\",\n    \"nameParserTypeAlt\" : \"FN2LNx\",\n    \"script\" : \"suijhku9hohppdnb6zyyo43lytly9c8bdrsg391koxtg6r8ma7ocfdcfn6bnc2nttz64ebmnmv9k9ipp\",\n    \"nameParserType\" : \"FN1LN2\"\n  }, {\n    \"score\" : 98.81683804673328,\n    \"firstLastName\" : {\n      \"firstName\" : \"Fannie\",\n      \"lastName\" : \"Schroeder\",\n      \"id\" : \"07yx\",\n      \"script\" : \"52np0llspccpd7kbaxjxsvfg0z4kcbxte2xxwvzhhe7uu8os5a66vlpwd50ls3hntx2a07huqcptb04pertmsavdjjt6ffy48z1jfzppvhi2klnqcdhlqma4cc4747p3tqice8cn4afgbci\"\n    },\n    \"name\" : \"Isaiah Gerlach DDS\",\n    \"id\" : \"08m9\",\n    \"nameParserTypeAlt\" : \"LN1FNx\",\n    \"script\" : \"puhiv8eq7cqn2qcfibg6bvv53ms0jnbqt7xixrztl5wz42efkq1vun7l778se65bpl0xnazlbkq8y2ouvjvu0dwa5ph75j99kcirhgmji9ctqmbjnke53lqqympz27fjn72\",\n    \"nameParserType\" : \"LN1FNx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52bd29c3-6962-44a6-a81d-29fc7d3f43fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.355822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "490f5c7d-02dd-4b70-b0f5-dd2a2167d219",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Wilfredo+Armstrong",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "490f5c7d-02dd-4b70-b0f5-dd2a2167d219",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.354724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    }
  }, {
    "id" : "a130d167-c68b-43fd-95ab-a2db02de7734",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Minna+Dibbert",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a130d167-c68b-43fd-95ab-a2db02de7734",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.354675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName"
        }
      }
    }
  }, {
    "id" : "031b684a-98e8-49d3-addc-13376230e5b6",
    "name" : "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseJapaneseName/Lily+Koss",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 94.929769315423,\n  \"firstLastName\" : {\n    \"firstName\" : \"Joe\",\n    \"lastName\" : \"Bartoletti\",\n    \"id\" : \"eh90\",\n    \"script\" : \"pkm8nl44ohkc4ej111nctnthlhf5s7yrpg0bof7nz9ecajq96ldjz1fqh7l7\"\n  },\n  \"name\" : \"Jesus Torp\",\n  \"id\" : \"tij8\",\n  \"nameParserTypeAlt\" : \"FN2LN2\",\n  \"script\" : \"zozj1yqx67kb3ppi0f0s0k9eonucr0v5p20ri5\",\n  \"nameParserType\" : \"LN2FN1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "031b684a-98e8-49d3-addc-13376230e5b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.354611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseJapaneseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "72b4d21c-bdb1-4a9d-9597-79e6f73d94ae",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "72b4d21c-bdb1-4a9d-9597-79e6f73d94ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.354236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "bd335706-226e-4378-956e-b2839fa094e2",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bd335706-226e-4378-956e-b2839fa094e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.354221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "c3b3cb49-df5d-4c5d-80c7-0725c34f784e",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). - 400",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c3b3cb49-df5d-4c5d-80c7-0725c34f784e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.354204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "a8dff519-4c7a-49ec-8808-8c5f80f9127d",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"score\" : 6.17872829486259,\n    \"firstLastName\" : {\n      \"firstName\" : \"Arminda\",\n      \"lastName\" : \"Rowe\",\n      \"id\" : \"2c64\",\n      \"script\" : \"y8qa0sqos1cjesjryp0enxf37p700lav6eqj952oe\"\n    },\n    \"name\" : \"Mable Pfeffer II\",\n    \"id\" : \"um87\",\n    \"nameParserTypeAlt\" : \"LN2FNx\",\n    \"script\" : \"6jgh09qaj0pzrex1cwzrfvyx818yafclr2y4oi325ov4hjur0iusyir48287bpqlqvsgq\",\n    \"nameParserType\" : \"LN1FN1\"\n  }, {\n    \"score\" : 51.05497956995354,\n    \"firstLastName\" : {\n      \"firstName\" : \"Pearl\",\n      \"lastName\" : \"Price\",\n      \"id\" : \"wr6b\",\n      \"script\" : \"0gpi85naryxlkf68w7ldk3vowszz7w2wy1krui93bbfvygt6cp9y7d8fe9e4a5p8wua28b6u768cs95g5bqlgdeaaqijlw6\"\n    },\n    \"name\" : \"Roscoe Schimmel\",\n    \"id\" : \"4zej\",\n    \"nameParserTypeAlt\" : \"FN1LN1\",\n    \"script\" : \"ld6ckzeue\",\n    \"nameParserType\" : \"LNxFN1\"\n  }, {\n    \"score\" : 70.21938367786107,\n    \"firstLastName\" : {\n      \"firstName\" : \"Darwin\",\n      \"lastName\" : \"Spinka\",\n      \"id\" : \"2e70\",\n      \"script\" : \"fe1ay12mzk9lfa77mg50bmp8iu0etcp3plmcv35mf5unsq06untllycabk24\"\n    },\n    \"name\" : \"Denis Kris II\",\n    \"id\" : \"1v05\",\n    \"nameParserTypeAlt\" : \"LNxFN1\",\n    \"script\" : \"bgsmcqe5mpynp4tz1jv8txw8bwafpjlhl01vm5nsqaulkc5174mba6ekclgs8h9thcysnlwdp3ojkb4ly2qvdq00zfm4d2zm82jp8fyx8kb54trvq6t9kf4nj4fmxxdk18op43l2nq2go1ph33lwxjuvmo2afoji2dpsr4cdi87\",\n    \"nameParserType\" : \"FN2LN2\"\n  }, {\n    \"score\" : 75.46870612352578,\n    \"firstLastName\" : {\n      \"firstName\" : \"Rayna\",\n      \"lastName\" : \"Waelchi\",\n      \"id\" : \"zw5r\",\n      \"script\" : \"ty35wxtm48welkbvyndu3i2xglkfrvkpbid479sdy1vcttvsoepnafc4761jc0lxao4wss3g3fzic7qb1bnxmlhdef20anql55font3lijdzh\"\n    },\n    \"name\" : \"Kip Schultz\",\n    \"id\" : \"97t2\",\n    \"nameParserTypeAlt\" : \"LN1FN2\",\n    \"script\" : \"7ltkbzi5ff4resatfq60fkr043r2e46ak75u9vfuxkncc5u45bsoff6lhq4pcjeacjzd4uqxanhr705lv38ra1ah46uciskye1lt4erszw47pqe8a7l44cotciind916302xychh8oa5tcpa2zegmvuwyfzi7bnajs1iop4jon\",\n    \"nameParserType\" : \"FN2LNx\"\n  }, {\n    \"score\" : 50.489041114732615,\n    \"firstLastName\" : {\n      \"firstName\" : \"Josiah\",\n      \"lastName\" : \"Bergnaum\",\n      \"id\" : \"n3v2\",\n      \"script\" : \"2eryc0r19tibw5xzkinyhqd8d5k5cajn4l12880rj7wq4dfrco9brh9pqe2nrswvwdrttzfbjryxeanw36\"\n    },\n    \"name\" : \"Mr. Angelika Bernhard\",\n    \"id\" : \"o105\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"2qjh0ifvyctjmwknlmlwd6rmq7bf9ovdebbsyixa1pt3ea22dybt5kzhk6o1wx699qd810o2b091rr3rzoytwy3jobw3kjycaq9hh4p4l298zvimtf2zud6l1ghxo6qk28dm6y7v3f5qs6o8rlf1fv4espgrh6m9gvswk1f3o24tg84k6y01s9yul\",\n    \"nameParserType\" : \"FNxLN2\"\n  }, {\n    \"score\" : 71.36850196719747,\n    \"firstLastName\" : {\n      \"firstName\" : \"Joe\",\n      \"lastName\" : \"Heaney\",\n      \"id\" : \"s7bp\",\n      \"script\" : \"bfk1x51tik3oilmmaa7g3pwrgd4ttb02tw1srijvjsvsnowpl0wnbxp0q\"\n    },\n    \"name\" : \"Regenia Sporer MD\",\n    \"id\" : \"8pi1\",\n    \"nameParserTypeAlt\" : \"FN1LN2\",\n    \"script\" : \"6avhfis0xjqqghifknvvqncygjcikb54zo6sds9zpkdaziyel5n6aqu9cfbdabb9dcjcshc2arqpks65lzfcdroqjqko3aq841r90a3i4cvmv2ql44n60ejkaupkxoyas7swt7j95fqxpxted4zr92rh1e4s3t\",\n    \"nameParserType\" : \"LNxFN1\"\n  }, {\n    \"score\" : 6.266688696225831,\n    \"firstLastName\" : {\n      \"firstName\" : \"Damon\",\n      \"lastName\" : \"Osinski\",\n      \"id\" : \"2kqy\",\n      \"script\" : \"29uwpd4dxlytx7ickf5p8ty7jf3obchz5fuih9qok5bw6dz5ivxbhcnnk2egzwra8hb4nizj\"\n    },\n    \"name\" : \"Jeanie Wiza Jr.\",\n    \"id\" : \"9539\",\n    \"nameParserTypeAlt\" : \"LNxFN2\",\n    \"script\" : \"idrmiai0vmuidpic8u3j2wbn74b64xbguggwt420ch34zi5v3lrzocv7hlfohteuezoqy5axjh7n0mkdixjk1zocfoh5j7aa0d\",\n    \"nameParserType\" : \"FNxLN1\"\n  }, {\n    \"score\" : 76.75255029980411,\n    \"firstLastName\" : {\n      \"firstName\" : \"Shawn\",\n      \"lastName\" : \"Kuvalis\",\n      \"id\" : \"0728\",\n      \"script\" : \"657qw5n425jw0q81snhdozng8vhxyzv80dbbtbpq1y0vgbwkdumcgv6h55xirilq6lq1x6bjlgx4jqnudcry9qxehh30vli4g18t82y6fk5wfecmz3ec7jm7l53j0c8cflkq6inaqtheb57ycxx6pcfccw86bnxhixvtv8x\"\n    },\n    \"name\" : \"Susana Harvey\",\n    \"id\" : \"b0oh\",\n    \"nameParserTypeAlt\" : \"FN1LNx\",\n    \"script\" : \"88cbns1tlkyivzsu4rrt1bsaehqgb19d9xlwvl11d2t5vsbysmiu5zocxn6xgzuigu5ac1riclbc2c66besl\",\n    \"nameParserType\" : \"FN1LN2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8dff519-4c7a-49ec-8808-8c5f80f9127d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.354172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified parsed names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameParsedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "edb257d6-cf09-458f-92f6-a978badf9a2b",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 403",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Darrel+Bailey",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "edb257d6-cf09-458f-92f6-a978badf9a2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    }
  }, {
    "id" : "3023e7d1-27a1-4236-a87a-e891a5e54396",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) - 401",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Bill+Schroeder",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3023e7d1-27a1-4236-a87a-e891a5e54396",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName"
        }
      }
    }
  }, {
    "id" : "72934d21-98e9-4c1a-ab2c-69d8b7bdf3cd",
    "name" : "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/parseChineseName/Jess+Thompson",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 74.94096209410553,\n  \"firstLastName\" : {\n    \"firstName\" : \"Michell\",\n    \"lastName\" : \"Rohan\",\n    \"id\" : \"5a87\",\n    \"script\" : \"xxc3c1g2ypeby5nr8ojptidogfmtxfbwdg2ileqgyindqx4nkdjgavjrw4505ahmyydwvxs0v0ltkpj0j7xiairhzgfc7g3coe85zsviq082p\"\n  },\n  \"name\" : \"Sylvia Kiehn\",\n  \"id\" : \"klau\",\n  \"nameParserTypeAlt\" : \"LN2FN1\",\n  \"script\" : \"ykhxlsrkk3aq24netjrixc38aj5ga35pk0x52az7vg0gf9u2z6rqxxmklegt898l2n7nreyi6\",\n  \"nameParserType\" : \"FNxLNx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72934d21-98e9-4c1a-ab2c-69d8b7bdf3cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "parseChineseName",
          "schema" : {
            "properties" : {
              "firstLastName" : {
                "$ref" : "#/components/schemas/FirstLastNameOut"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "nameParserType" : {
                "description" : "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "nameParserTypeAlt" : {
                "description" : "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum" : [ "FN1LN1", "LN1FN1", "FN1LN2", "LN2FN1", "FN1LNx", "LNxFN1", "FN2LN1", "LN1FN2", "FN2LN2", "LN2FN2", "FN2LNx", "LNxFN2", "FNxLN1", "LN1FNx", "FNxLN2", "LN2FNx", "FNxLNx", "LNxFNx" ],
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameParsedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a2a2ba9f-5a93-4bd9-a4a6-20c7a7b15cf7",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a2a2ba9f-5a93-4bd9-a4a6-20c7a7b15cf7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "fcfe3eb9-3a54-4ff3-9507-b54c1283dbf5",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fcfe3eb9-3a54-4ff3-9507-b54c1283dbf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "fda07e40-acbb-4f6b-99d7-7bc119a99ced",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "fda07e40-acbb-4f6b-99d7-7bc119a99ced",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch"
        }
      }
    }
  }, {
    "id" : "c3ac1eb0-43b0-46ae-9e29-190d777b8346",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/originBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"lastName\" : \"Kling\",\n    \"probabilityCalibrated\" : 0.3453868583929123,\n    \"script\" : \"0kxieugxl95kicar1vqhicjuobl7nmtdp724dw81m8zivgy071awf95305tndxqi2w6x2ctsaehimvl\",\n    \"regionOrigin\" : \"02cbtqo9kwx5iir4wjig9mzh0tn0a5pblltof5n4amlc8rt6tz7mkev7j9wafv8abaonlfki7q1t\",\n    \"topRegionOrigin\" : \"8kvvtgzfkv6oexzqlnvyse90evo7d26ladxq30mgmfp9ao8y07ds\",\n    \"firstName\" : \"Tessie\",\n    \"score\" : 3.047827463938757,\n    \"subRegionOrigin\" : \"sraue6n7ooauofkoepxeu8rr953apbwmoixk11qyfk3nsyvvau7i\",\n    \"probabilityAltCalibrated\" : 0.5103360629593443,\n    \"countriesOriginTop\" : [ \"lv3jwijupm6k6aqqb7x9svn8gsfpjrlbabtlqw3i74zhk0xh5yflpkq1i99s24kb7tz0uc50d5svdq\", \"4bq8q7gj7ch9pv21qdv0gm36g6lvvqna9iai0uo587arpii76wedet\", \"os9ort73830p4d30q6tby6tmhaa15r1yp47hlxf70wjvhu9igjybqn6j1o5tghqw2evkdrqslvzbyhjyci1hnenl8uwlg31rf0j2fakyzop8rzgbfoap8y6jv8ix1aeh4o\", \"y3b0frlk92ax0dzqh0pyrzaoaf7cesa8uehhs66fr7qc8odse8rj565kcrc2rnv5wk8ropg56skis7teuxkbf87d6actyaghbt4atr82hk0ejs3xxj8j5h5g5agbiqhzs9t355soxpi8cvcog6fh76atpww2elid\", \"2l6m8xokxkejg0rswye21iuiwok7rnpvkwr980bvs31i0ljh4b\", \"vca3djosiem63lg1t24adxy8fvt2ej4hqkikpfoucwyp9g5lahnfhfdwx36mmy1vff5tgylqy6gski7clpktk0c0s0pk4tmtrtpy2q63zcaf\", \"htkrun2du3qxl5t6qwqezc31sob7d6680cribhu6wtao7rq5d5cu99kzxq7e4tj70g21wi4jetvwu8eo68u9678j1cz4kiawz77gedryl52dqts7pt2aq5rv8hq6qcpeqngszbc80nkg86dnh8m5zfqwetaj00sndfboqsmalq\", \"6gy42jy3xdqpcrcjwyq4riuzqfnn10tqzpxtonqd4v4ihlch25mk87jbxr8rv3cezqomgr86kuy3mc2oc99igf00i2ou2z4ti6zx2c5osz88d\" ],\n    \"countryOrigin\" : \"52apdqbob3y06xr8kg4mk28wjxvoa0vz4i0by8yfk5jwcks1ncwzof5bo23ywd7s2s1w3x4suh0oarmu2wuxuyy2bmyq40sx43w1riuy03592q0pzn8tbtl91i2kghcbli7ggejmr39tuyeye8jqdnh\",\n    \"id\" : \"rbz3\",\n    \"countryOriginAlt\" : \"gi10wrqu2n\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3ac1eb0-43b0-46ae-9e29-190d777b8346",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "originBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY origin from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified origined names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameOriginedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9dab6efd-f87c-4c48-b868-3972885dc82e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 403",
    "request" : {
      "urlPath" : "/api2/json/origin/Mark/Goldner",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9dab6efd-f87c-4c48-b868-3972885dc82e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    }
  }, {
    "id" : "084b4685-afd7-4482-a3ba-12796f3962b8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. - 401",
    "request" : {
      "urlPath" : "/api2/json/origin/Alfonso/Turcotte",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "084b4685-afd7-4482-a3ba-12796f3962b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.351047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin"
        }
      }
    }
  }, {
    "id" : "11f2ec05-113a-4c05-b77d-da538cd5dbf8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/origin/Rickey/Kessler",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastName\" : \"Kovacek\",\n  \"probabilityCalibrated\" : 0.447930442162209,\n  \"script\" : \"wla3xvxsts5f2p7m\",\n  \"regionOrigin\" : \"jkdxdpb36l34v1pjsi83ol6m67b3ixwmvy8hbricylqfnepcuzsszmgi8f2jbtmymb20hlhschd1anq8wd11dpej4xugrwwss371fnxbaqbqa524hkubh2i55h7efe23\",\n  \"topRegionOrigin\" : \"nr11zc2nynsflry92tf6x6p265o08x7h8upyeb0h5hcfaf9y9yseg702jrmli6jbrpsua31h9ovglatqooicjocv4sgm48yuio2j0qlw48m2wc0x64htmddtdfoeokj6baqs0rchdw0x9q00b1ovoe7mfl2d8oeoa4lc2qy8g1qk5q\",\n  \"firstName\" : \"Demetrius\",\n  \"score\" : 3.0132587391613175,\n  \"subRegionOrigin\" : \"49o3b5d4phfexh7\",\n  \"probabilityAltCalibrated\" : -0.6334784702873724,\n  \"countriesOriginTop\" : [ \"1l3vjiygqm4qosdkwbliuc0y0emkhtu6xn4lgc71s0cjxfhpco62crx2pqqawnq8lxyqk44jqm1ojoeahbg53pgdt4hby5x8fxz6rq647dvhd14demd04zm4q0vxpkgsxt4q\", \"oqrr0s651j0eo3akarzzpry2exk5jdrw15c6s0hea3jbyu\", \"oyv42dvajhegzegtf1h25j99xf9w2zeu1pcs616a0wmlafhczh8nqw8c57w3kiidfoi8p9zlmfjykpu4vzmy\", \"ras27v0gyh3m990ua4zrzpiogd2rl9aaqvfa1ufnikb\", \"fbecm9ihy51w1g33ufty5p675s9j5m62cg2gn2qaairw4smbn772w24tzhgromx425f5lob379wmr2irwqxcpa4ipz4u9j3tmj7h3vsgcusfc\" ],\n  \"countryOrigin\" : \"03cjmhyyp7c6xlje5k6tu4jfbt7vpnajdyz9jgg6gxarslj36o4878v5ulwhpx87t\",\n  \"id\" : \"y1ne\",\n  \"countryOriginAlt\" : \"u5kbvxmq7ziyc6bexw6u9lmmuqegq1i7elyr6atz1dim2r5hl88kxbc0f6wkr7m3beut16rvifc6h780owqlfykdgynocq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11f2ec05-113a-4c05-b77d-da538cd5dbf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.350979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "origin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY country of Origin from a personal name.",
            "properties" : {
              "countriesOriginTop" : {
                "description" : "List countries of Origin (top 10)",
                "items" : {
                  "description" : "List countries of Origin (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "countryOrigin" : {
                "description" : "Most likely country of Origin",
                "type" : "string"
              },
              "countryOriginAlt" : {
                "description" : "Second best alternative : country of Origin",
                "type" : "string"
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "regionOrigin" : {
                "description" : "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegionOrigin" : {
                "description" : "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              },
              "topRegionOrigin" : {
                "description" : "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameOriginedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "10d8cabc-88ce-4fbc-8101-0ab5e4e5517e",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "10d8cabc-88ce-4fbc-8101-0ab5e4e5517e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.3506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "dcab5e8f-1c38-4b1b-8074-3c9438bc4640",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dcab5e8f-1c38-4b1b-8074-3c9438bc4640",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.350586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "407c685e-b6ca-4df0-9a76-a96ef11e0cf5",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "407c685e-b6ca-4df0-9a76-a96ef11e0cf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.350571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch"
        }
      }
    }
  }, {
    "id" : "7f07a871-ddd6-4c60-a84c-cbcb69424609",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 82.91168545074059,\n    \"commonTypeAlt\" : \"wo8t4u141eiakc37wpotnby0nwsbofk72dgtl8w7pyf4lt2swq25qstrtzb7rjzj5b5e264j72sn30qhafheckyjv4ov6e9tg\",\n    \"name\" : \"Ming Wehner\",\n    \"id\" : \"na4u\",\n    \"script\" : \"ehof6fas3iz4r8zh08l\",\n    \"commonType\" : \"0pmhj288dlmm54u734ipv303vub6tfrxf0zgwgdp4vkavaab2t\"\n  }, {\n    \"score\" : 52.09984818742031,\n    \"commonTypeAlt\" : \"hlquikav3mwudxzwihtd1zyjv96fuy0znpgfxq9z9f69lf85s9u0014zzvgp0n2s4u86pbnbicq8ropys559iard23ea3a3camgphj1wu43guh6\",\n    \"name\" : \"Miss Lamar Cassin\",\n    \"id\" : \"03xq\",\n    \"script\" : \"mswitqrz6a1ky2v6hr35\",\n    \"commonType\" : \"fmc8t1jd5q84as1bvae23dxtyhrr093pzvmgkwihzpns2ech1t2bbb1qgrnrzkdcrgaiv7ycmmm2x2mykxvvtob7p4e0jmgzr5hq8iop7g9ms05lfg1nrfgxu0ihism4wr6nonusdgjd3jvs\"\n  }, {\n    \"score\" : 80.13554664294607,\n    \"commonTypeAlt\" : \"cqy99q93a74rxg8qngf2cqfhl5z1\",\n    \"name\" : \"Judi Witting\",\n    \"id\" : \"fsws\",\n    \"script\" : \"tvn9ub3qt0vlb7vgkz8v8e2774f3bii5jsxlqbrhuu51ppckzn40ndxubo3htkohkodl41l6recjx3bx3yutk47x91dszq6xog5mq24cgti73n9h4t\",\n    \"commonType\" : \"psg1y2jucm031bvolpui2yd8ccsyrow624rjc1zboo7ad5nhcnt1g3xdh8pb1pyj89ohelk1f3cdqy77rrcrkfnobcnu2\"\n  }, {\n    \"score\" : 41.39418756653668,\n    \"commonTypeAlt\" : \"djhyykoa4zlivkkd1rzclacu6cg1wg2ex7f8ts1ektq3u04ahu3kidwl682dnvv700njxpwa1262e73yzbpfqnjgzqdoa64ppvvza1wgk\",\n    \"name\" : \"Carlena Bednar\",\n    \"id\" : \"d60e\",\n    \"script\" : \"h5fp0knox8gv0rjbov5p95hbqxrin3cvtccfi8rq10vcs6e6e4k93i5ud47alclkh6vxyomglh57yx3b0n8vm2qgwefldvyav70boc2ji1x0zp52ccajgv9pg2kk55iw6jimsra3cafhg78nihxuue\",\n    \"commonType\" : \"a7t9jyvt01newkasn1jbcxpzm3qihi5gnae2xakfklz3hfk4dzygjvgiko5xctw0yf4n6jx700ad2nepbd1j7wk9zyx8djqixq11bh5zg68ukxsyfj9ttzsml6efhy9in4g43n7idwxsbh9rcaplc650cm1df4m931ezv70gppyby7vwittstgjb6ld74\"\n  }, {\n    \"score\" : 19.69559167037702,\n    \"commonTypeAlt\" : \"ypmpv3kidiptc6u66oxjetc42vp3jzeojw8mr1wtvqyzfzxxgf3v5vowcihdcszx0rf2yosvu3l5nxottn8c9r4qestcgguxmif5\",\n    \"name\" : \"Ms. Micheal Ziemann\",\n    \"id\" : \"3v1t\",\n    \"script\" : \"35jitp6hsc3f0gmuuk9q2nftd8pfut3vj4f888o10hagp6unffrr11g0129\",\n    \"commonType\" : \"mwu\"\n  }, {\n    \"score\" : 33.950605906849184,\n    \"commonTypeAlt\" : \"6of72cw3krc1ckmptonq0rb5q8\",\n    \"name\" : \"Alpha Johnston\",\n    \"id\" : \"3ne9\",\n    \"script\" : \"d6onl9xt57sg9a8s4jvmj1ag29f07\",\n    \"commonType\" : \"fwe7vr4panihmobv3q071bqaowseap286mp9u8zr6hrqgg27111vetz1khjcm6npsypteuf9vrmy8ejdps55yjwgc1j7ubu6b9yd6pxhq1865vctvohb80x22yg1ugp3qq2zgxa\"\n  }, {\n    \"score\" : 7.363642822063299,\n    \"commonTypeAlt\" : \"qk99gq3p0hwjqyf39045vqgcq2lsu230nt4jwt6m27ubzkuoyo4m7kbqsqgzs9lmp6yil3g6dqbqhllf56xo6a3em8pmglby3iff22jbe5pj5leza9w5z8pwip4rphzeox0dwvewr8nrz830yuw2mep0xgejwnm5qgghiy0p1cu\",\n    \"name\" : \"Sheba Emard\",\n    \"id\" : \"1lnc\",\n    \"script\" : \"4q0u5f2fjzs10i2c743gxrmrsp3gpues6krst4st8yc8951eutqdvavuhaxprw57qstvqvgt1vslljyval9gwuj3q4dzt3lay1zb0c1h1e8brdx5mp9tppec6i2k8ctpw0n88vrw8wo0v13ij8a\",\n    \"commonType\" : \"r178mnrlnazkojbh2x4xxtbxzpwy6t2kgw4tydlaxi9pli5nvnujn7txb0ikoczh7q4krbpql5zqh656hqg902zihthcqhrdgfdygxl1tpl69238zemr737vkk6prp7y3bqyj2r20o6lwaz1h75ulxzlox0j0fwdd7w4ei1m6wez8813rmldutd\"\n  }, {\n    \"score\" : 4.664885665961305,\n    \"commonTypeAlt\" : \"wdrtt8hraoq3w74bh49xsu31xci36rnpaltxhe2hhevt059ay79uilr3taoprf5lmcwztj\",\n    \"name\" : \"Sheridan Kassulke\",\n    \"id\" : \"6hwr\",\n    \"script\" : \"3h73x8qk6vyzuizm44grvvkhij24rzqvppv6rhathyt8r5ex5fv0dlqqxahlomrbcvramqnhtneia5a0yxcvqxqqjnfpm8ot3nbi6rv0vk3l7yw217rp78sw24090q79boia4xpdjvt\",\n    \"commonType\" : \"nngm8zev4rmaoalqejvl6tmb9pam62mz0wpx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f07a871-ddd6-4c60-a84c-cbcb69424609",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.350546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1760110a-b92a-4dc7-a561-8e9d283ab20e",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/vtjsryk2ubll2e6l16pyzwzxdtzfxdz8h78704mw86c9veyxdysokhw4a8xg0kewj6ec7iyutri3bzxq75bq99dpm439e0vq6djr0w5vzei85tgftb/a1yd722kcni100fpo5hk0ezdvep8hhoj5b567vw5k1o499wg32ulcmkcvitiqupy5ox8vv2rtsbaf878w81iuuopy17titxc4wfghtfd341jvmm53bgyfet5sy3w7cg98042q98jqnce",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1760110a-b92a-4dc7-a561-8e9d283ab20e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.349372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    }
  }, {
    "id" : "49b24bdc-dc88-4e44-a290-6dd886d55b91",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/ilktjeix3jisy4yv5dxbu4fi8yypx559dkgxwzth1b6l8un9u0vlylbeq/p9m3dgbeyw4sz87rprin",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "49b24bdc-dc88-4e44-a290-6dd886d55b91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.349336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo"
        }
      }
    }
  }, {
    "id" : "183b066c-e1c4-4629-9f85-13331ab395b3",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeGeo/w7x6146e7uqmvvurv13q77p2sczcd9nag5xp74th7dbtqizppli9mztuk9c4rw3i0gcsf5yvtxnrpqjb93ynxa/gn36ab8t1rr2g30ms0hks7u4v0grnixysou9bod59ciao2yfu9w7haggzxugiwjsrjiutaa7izg1up1vwdi3qlt1438upfk8aify5izsig3rgp9n7g439ie3846ppyr6ja2bubr3azppfs9j3qcyxfuxxlkeli",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 73.87220468259774,\n  \"commonTypeAlt\" : \"ijttb3xgmq3qvogu8te6ejq1x37rzyqax75j98nqh1yumaqdhc1hiwxlf3aic23mhmhrdlo4yhiy29xi15fn2izf8vp01crh62cxq1r05u0q6vbhwt6ja0f1y3zu3kjdsrtzx7rdatu57myvir0blkny3ikr6ae1fwdbhc7r1ln0cw7ib84szk1ihgghhey1zpimrx\",\n  \"name\" : \"Candie Weimann\",\n  \"id\" : \"ow44\",\n  \"script\" : \"gim0qcgt7mrbtcofedwfyhyjw6jc779o7619m0b6rttw1rbyh1ixqhqsxl7zymlbqnswvl3sylr904x2do6kevfrlz14ax1t4cyrf35h2j6vmal\",\n  \"commonType\" : \"s2lbtta4ghxbc2epxbjhb6jt142a5yyfmj5d9qa9gcwr4bmcfy1wko1ljpeg9c6lwc9y3zadqnen1gqmzm94qpjipkjzfa0tj8mq9j0h5raoij75ig8txvfpzyzx3357zw5lyofrm8zbby8kkzuid4hpda\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "183b066c-e1c4-4629-9f85-13331ab395b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.349293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeGeo",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ccb0ac0c-e7cf-498f-ba80-07156a6c769e",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ccb0ac0c-e7cf-498f-ba80-07156a6c769e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.349072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "e70d81e1-abe7-4174-911a-fd95b1878241",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e70d81e1-abe7-4174-911a-fd95b1878241",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.349058Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "f7147948-51a0-4453-901a-7113f4846a81",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f7147948-51a0-4453-901a-7113f4846a81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.349043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch"
        }
      }
    }
  }, {
    "id" : "5eb5d6b2-f93f-497c-88dc-e957a06885cc",
    "name" : "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameTypeBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"properNouns\" : [ {\n    \"score\" : 15.284059008415607,\n    \"commonTypeAlt\" : \"6vic144hquoo11cjzb2v80y5kjas2xbfni2i6y2ttze5vmrgl0zw8uyfo5p274l4yrenlu82rfwho18bi6qdnsbt5njqx3lmna86meqhoe6tstdjfvhzj\",\n    \"name\" : \"Jacqualine Grimes\",\n    \"id\" : \"0j91\",\n    \"script\" : \"2yof546i2r613jxt54ss89pvn2gh\",\n    \"commonType\" : \"j2hohcme59rf8v1y8w351o3xgxswq4khezqq25hrladb31slmkum83qh2o8wwzv6oi8u18xf0c59dlhlgg8dsmsnakkofxnhjsmu9kb855el6j4xxd0g7kq7l7kdmd\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5eb5d6b2-f93f-497c-88dc-e957a06885cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameTypeBatch",
          "schema" : {
            "description" : "Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.",
            "properties" : {
              "properNouns" : {
                "description" : "Classified typed proper names",
                "items" : {
                  "$ref" : "#/components/schemas/ProperNounCategorizedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a342c40f-0933-44de-ba4d-5534f375f0dc",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/nameType/o7q0seqkyqmd5lvpyphc1j3e6h60u42cr7rrlc924dfh73avbag8ds5lex",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a342c40f-0933-44de-ba4d-5534f375f0dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    }
  }, {
    "id" : "4673b66e-0f1d-49ac-8497-3cd137be9c88",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/nameType/oc8o3vo2h8sgc0p62n468fkv4qkticsv8e7kdy4ek7v5u4w1x8t8dthvqwln0hg8b1syms3wm8dapwiiy5svp1z7y19wmtza20lv4quk6fubegtu8lfsm1zr1n6ragvxgd4w2rcxe8klz51pgzzpxwwjf8x4a02sqm2zoblbq",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4673b66e-0f1d-49ac-8497-3cd137be9c88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType"
        }
      }
    }
  }, {
    "id" : "cbef7a6a-1700-4825-9248-bd4234aa2fef",
    "name" : "Infer the likely type of a proper noun (personal name, brand name, place name etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/nameType/0krciekarcmg734dzm2ga636hv1z",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 98.73355927447629,\n  \"commonTypeAlt\" : \"rhuerduugvziypabotmxjtruagt96qn2qqqp9h43clnu4s3lwqufgg0ke6rlyxuitvjnuet46fgeyc0uvspdmav72ec6j7n39w9vimmrhuzm81qcprftxuzsiga2vkznu03i1rryeloy6bgbilkh208epq4rtg5xfvz84vqtl13\",\n  \"name\" : \"Mr. Herb Stanton\",\n  \"id\" : \"226p\",\n  \"script\" : \"br53bs77ttlgz7deq22nh5dub6k94tvlru5jmla6fmvubackzam42j9spuzuu0vh5z2t2dstnipbtu6r2o602y1gsy03l2o078e0ns8010ldhrjz41azmfejeiig07zyl\",\n  \"commonType\" : \"9qs4n7fjfixui2wksp3625q581v3qqy0kpgscpqsg6z14pos36f7zdv9uadb1htuf18p7km7jkxathh1cwwb0o6hc7tpp0ayrwf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbef7a6a-1700-4825-9248-bd4234aa2fef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "nameType",
          "schema" : {
            "description" : "Classified typed proper names",
            "properties" : {
              "commonType" : {
                "description" : "The most likely common name type",
                "type" : "string"
              },
              "commonTypeAlt" : {
                "description" : "Best alternative for : The most likely common name type",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "ProperNounCategorizedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e91d2fea-bdf2-4acd-bfab-660c826f020f",
    "name" : "Activate/deactivate learning from a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/learnable/hfpupx1qle5kt0n86bw80coekwnwmpsw3r3mwrjaurvittkd4nh4bxmthbhv9my1b4z6foimr4jtjrlj7r8hcblrzvf3v5j4msftcgj6o/true/p253yw7k3rgd722tc9c22rq1we25bcp8xvc27fh58hz6249w6si1o6f7d7i2i2k56hhjvczo649l973rjp0t7x4oxy8cb8yznf2yzx7g5pnq5crdy9r7oynl91zj5ld2x1gu97s72b96sfx2j7zmxaybo3456i",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e91d2fea-bdf2-4acd-bfab-660c826f020f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable"
        }
      }
    }
  }, {
    "id" : "45d7d3a6-132d-4c31-a89c-172df4159467",
    "name" : "Activate/deactivate learning from a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/learnable/xtmka75pwh3somlgkckgfd46qkrdpswpqnz06n75uk6ggzw04dmdehazy7ygg06u23k9nniv549vvsu4i5fvux5clbf/false/3mgkulsf81a6bd8713daxplxddmzjndziga0b8agdolxqjj4l0wtkt0o0yz7wf2gfw7zq5b12zsg7ivrl04g8bp5rnq137y1fazswmk35ls94w3vo1d0swjp3mr4zn0i3ya3jvo63qvqwq4m42f453jssux",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : false,\n  \"apiKey\" : \"yrhxjr67w420jdbq3m5l21yhtfbg99w9\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : true,\n  \"learnable\" : false,\n  \"admin\" : false,\n  \"disabled\" : true,\n  \"userId\" : \"5g22\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45d7d3a6-132d-4c31-a89c-172df4159467",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "learnable",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "5e959d78-e7f9-4926-8093-0b5e396368ae",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/3cpforea4r0di5j8feogae3oyqygvh5576h1frcijpqqawwzzbr6imzikox57zim843zqbzbwwwlromv/ovussxhxa1cou63fr50zvotdlxzovj82oontti74tjpajcbk5yuqf9kk9btbhevox68mhc33qzsw8wi2lnfyviv2bi96x949qlhrwcfo4d/Miles+Schamberger",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "5e959d78-e7f9-4926-8093-0b5e396368ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "bb5d6ca2-bc52-448b-81e6-a405753d08ed",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/acil3p6/dd6drqxsesa7caflb1bg1qc459hzzjx7fofb8u3w36mtfciqfie9ta2b3xyxnl9ob8w3fjlcvtcb90pytmceouxv/Darci+Brakus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "bb5d6ca2-bc52-448b-81e6-a405753d08ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop"
        }
      }
    }
  }, {
    "id" : "421b62d4-dcc1-4490-959f-85494a603ee3",
    "name" : "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchFeedbackLoop/rijjdzck1ygnvtbbmv3waddshfcirze9ut6upytotv5wfs1y5n2nr35623l57d4wbvi2bhgkcz0s1ayu8owhc5gtniq518/5u9aevqeckunkpm6p4x930242uv5xgzxkcv7e4jcukxxk7varw9nq1/Nelly+Rohan",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedbackCredits\" : 3028103788892422079\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "421b62d4-dcc1-4490-959f-85494a603ee3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchFeedbackLoop",
          "schema" : {
            "properties" : {
              "feedbackCredits" : {
                "description" : "Number of units recredited as per feedback loop successful classification",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FeedbackLoopOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "95f66819-9c27-4b41-ad47-3c8091a732af",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "95f66819-9c27-4b41-ad47-3c8091a732af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.348014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "d163da1e-7a40-4ac3-a9b2-161fabda9b54",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d163da1e-7a40-4ac3-a9b2-161fabda9b54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "f8745edd-0e91-468b-97bc-57c231112b4e",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f8745edd-0e91-468b-97bc-57c231112b4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "3ad3e7c8-82f9-4d20-af1b-ef34bc84147b",
    "name" : "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 1.5829427740879786E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"ad87\",\n    \"script\" : \"5r55vq095kna8b5aj44gbfsgy7nup7e00gbps6rzlqv8aqrl993ostugi7tvkyg03tofezhqt1ohm7ya9jr88n17kaqpmmdbulxmxnf5vg1tjn1g0udfy9ijmm\"\n  }, {\n    \"score\" : 3.176820444971177E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"x3ig\",\n    \"script\" : \"bvo79rtlvcde31570tzkmmmjlqv9ol0czjxqsl71zck0pf2d77ej98podutpm9lb9rjbr975n6rowfmhui03tnkw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ad3e7c8-82f9-4d20-af1b-ef34bc84147b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "79ee76b1-12c9-4ec3-8fc1-b3cba91754d4",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/uarwiq3utomodfb5b1qvzwn83kj53sp333yxuf8xggyinzlni7efpjdpeau0aui3gnc68w3onp5qnp3ah7g5sb6furbdx4d9c4aybx0vinll2xndu17sa/prsu570ub7907h4hcibobt6z1vfsw3hqaox9naubgyvqt5jef09cyzmtjjlpifhhtj28c46dos6qbti8th1jjyu26tlpm5vvo0mq9pffeuhuy6vr382vtmyu0dbvla4xs1dpt/Malcom+Lindgren",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "79ee76b1-12c9-4ec3-8fc1-b3cba91754d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    }
  }, {
    "id" : "7889c99a-a67c-4fc7-ac40-d025fefee655",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/pj3o9gjebtj3br1pv0qfhf0g9kz7fuhwly7zq8wjt8019bbe71q7mtftoc8tdu5a1mzpjc9vpifngpqfg6rpq9oxiskivmgmys6smx3eiue72onbteqxxnozzu7ex5vsro6naep3xe61u0970u/nktmst19eivi8hfxzb21rakcijpl8dxwiwqwdtn7enjf83msqxgowe0qcelo73hoe12tumjzw235unxs4ekkjypac27d/Miss+Lajuana+Mertz",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7889c99a-a67c-4fc7-ac40-d025fefee655",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch"
        }
      }
    }
  }, {
    "id" : "578d9fb9-7939-4b04-bbc7-a8cff91de639",
    "name" : "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameMatch/bb8c1di1y9tl8rbt30nx48tpo0c5qw7qgynp3nlrdurryiyq6pch92na5onu8h0noar5j63312gbhgqk30w9pv7ecgyvuublinlypullwn7nvpudxzv1tgh/gxhvovv2vmw0v/Marlon+Upton",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.4498230500608375E307,\n  \"matchStatus\" : \"Mismatch\",\n  \"id\" : \"3379\",\n  \"script\" : \"902z7habk1057vzxm9ab2fpm6egf5y5ll0xdayy2gl4vr4axdek8umo7fca0b1xy8vztufw9sc8zgdflwlnt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "578d9fb9-7939-4b04-bbc7-a8cff91de639",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "e43dde8c-376a-4639-9d2b-597c99ca1848",
    "name" : "Romanize japanese names, based on the name in KANJI - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "e43dde8c-376a-4639-9d2b-597c99ca1848",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347178Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "372abb9e-3988-443f-abd4-8eabb3fc79f4",
    "name" : "Romanize japanese names, based on the name in KANJI - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "372abb9e-3988-443f-abd4-8eabb3fc79f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "70b792db-7751-439f-9cbd-432696cf7979",
    "name" : "Romanize japanese names, based on the name in KANJI - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "70b792db-7751-439f-9cbd-432696cf7979",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "1646ec5e-4ca2-46b2-b2f9-e888a995767a",
    "name" : "Romanize japanese names, based on the name in KANJI (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Lyndon\",\n    \"lastName\" : \"Predovic\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.7397170733981853E308,\n      \"candidateName\" : \"2022-12-11T15:24:24.345766Z\",\n      \"probability\" : 1.2044368858926046E308,\n      \"predScoreFamilyName\" : 1.6153899166407082E306\n    }, {\n      \"predScoreGivenName\" : 9.807717714209636E306,\n      \"candidateName\" : \"2023-02-08T16:04:24.345823Z\",\n      \"probability\" : 1.6261080499424007E308,\n      \"predScoreFamilyName\" : 3.2238476047893243E307\n    }, {\n      \"predScoreGivenName\" : 1.0511967021147045E308,\n      \"candidateName\" : \"2023-01-29T17:58:24.345867Z\",\n      \"probability\" : 1.5479912820953614E308,\n      \"predScoreFamilyName\" : 1.0998166940623129E307\n    }, {\n      \"predScoreGivenName\" : 1.7015428225456464E308,\n      \"candidateName\" : \"2022-08-14T15:14:24.345911Z\",\n      \"probability\" : 2.9977738796920557E307,\n      \"predScoreFamilyName\" : 1.4528189353375066E308\n    }, {\n      \"predScoreGivenName\" : 7.534363778079377E307,\n      \"candidateName\" : \"2023-02-04T17:38:24.345953Z\",\n      \"probability\" : 7.509405824922741E306,\n      \"predScoreFamilyName\" : 6.979183905600469E307\n    } ],\n    \"orderOption\" : \"ks6l8p8xm19sthcg5kynulain82tbshywey\",\n    \"id\" : \"jd98\",\n    \"script\" : \"g0l1sh0067h0ew81fy4s8gbiin4wv5gs2uatfnma6opqsbg0rzu64c5i6jlgsmj1vfk6shoezpsxm7el3hher1428ie4zmguorc337jn3nqu\"\n  }, {\n    \"firstName\" : \"Robin\",\n    \"lastName\" : \"Bechtelar\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.2350379704676297E308,\n      \"candidateName\" : \"2022-03-11T17:24:24.346147Z\",\n      \"probability\" : 1.1334556703904792E308,\n      \"predScoreFamilyName\" : 1.1265054641387158E308\n    }, {\n      \"predScoreGivenName\" : 3.502421549057807E307,\n      \"candidateName\" : \"2022-11-01T18:20:24.346193Z\",\n      \"probability\" : 1.0151223365623335E308,\n      \"predScoreFamilyName\" : 8.300731334226311E306\n    }, {\n      \"predScoreGivenName\" : 3.261423804157818E307,\n      \"candidateName\" : \"2022-05-03T17:16:24.346234Z\",\n      \"probability\" : 9.642494485773766E307,\n      \"predScoreFamilyName\" : 4.996984303062851E307\n    }, {\n      \"predScoreGivenName\" : 1.5176208259606784E307,\n      \"candidateName\" : \"2022-05-04T16:13:24.346277Z\",\n      \"probability\" : 1.7038747192889405E308,\n      \"predScoreFamilyName\" : 1.3095127927694546E308\n    }, {\n      \"predScoreGivenName\" : 9.906488167662459E307,\n      \"candidateName\" : \"2022-04-04T16:34:24.34632Z\",\n      \"probability\" : 1.603804850907048E308,\n      \"predScoreFamilyName\" : 6.078242026382823E307\n    }, {\n      \"predScoreGivenName\" : 1.637874927887298E308,\n      \"candidateName\" : \"2023-02-26T16:50:24.346363Z\",\n      \"probability\" : 9.893124034766165E307,\n      \"predScoreFamilyName\" : 9.067675561167724E307\n    }, {\n      \"predScoreGivenName\" : 1.3302358960260638E308,\n      \"candidateName\" : \"2022-04-10T15:02:24.346403Z\",\n      \"probability\" : 2.775869990523828E307,\n      \"predScoreFamilyName\" : 1.0043624088855486E308\n    } ],\n    \"orderOption\" : \"93wardvf51gqrf9idcxfaxhdp9jlw9igly8lws8ri53tjw673aqyb1gr00pmdd\",\n    \"id\" : \"su1w\",\n    \"script\" : \"yfsfc0qh8y43j\"\n  }, {\n    \"firstName\" : \"Robin\",\n    \"lastName\" : \"O'Reilly\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 6.215090690743833E307,\n      \"candidateName\" : \"2022-07-02T16:09:24.346591Z\",\n      \"probability\" : 5.663629700220943E306,\n      \"predScoreFamilyName\" : 1.5858320049096597E308\n    }, {\n      \"predScoreGivenName\" : 5.534459857967886E307,\n      \"candidateName\" : \"2022-12-28T18:16:24.346636Z\",\n      \"probability\" : 9.72236660088717E307,\n      \"predScoreFamilyName\" : 1.217923016943757E308\n    }, {\n      \"predScoreGivenName\" : 2.46502823643559E307,\n      \"candidateName\" : \"2022-08-14T18:53:24.346678Z\",\n      \"probability\" : 9.631395407850316E307,\n      \"predScoreFamilyName\" : 1.0771439480039206E307\n    }, {\n      \"predScoreGivenName\" : 5.641942825810082E307,\n      \"candidateName\" : \"2022-12-18T17:21:24.34672Z\",\n      \"probability\" : 1.2308694426459748E308,\n      \"predScoreFamilyName\" : 4.234896288923368E307\n    }, {\n      \"predScoreGivenName\" : 2.1912248631168701E307,\n      \"candidateName\" : \"2022-05-25T18:10:24.346762Z\",\n      \"probability\" : 6.438490134703439E307,\n      \"predScoreFamilyName\" : 1.7846445490517777E308\n    }, {\n      \"predScoreGivenName\" : 1.4511881040719485E307,\n      \"candidateName\" : \"2022-10-22T18:12:24.346805Z\",\n      \"probability\" : 5.353452770229069E307,\n      \"predScoreFamilyName\" : 1.005197467635305E308\n    }, {\n      \"predScoreGivenName\" : 4.620690460353364E307,\n      \"candidateName\" : \"2022-11-20T18:05:24.346849Z\",\n      \"probability\" : 1.2387143654870131E308,\n      \"predScoreFamilyName\" : 5.180027739080842E306\n    }, {\n      \"predScoreGivenName\" : 3.7526251470306774E307,\n      \"candidateName\" : \"2022-06-25T16:46:24.34689Z\",\n      \"probability\" : 7.111384137639116E307,\n      \"predScoreFamilyName\" : 1.5152630412588898E308\n    } ],\n    \"orderOption\" : \"p61xh3azt6mecpuveul6w234soetlgebpz0dovovlxz8sq48mu3zaq8\",\n    \"id\" : \"xs18\",\n    \"script\" : \"zmcje2w0zw7o62mbyjtepqvz2lzz4191mnjld9cqubi5rxcoq73kb4joq4mmkpkfcpl7zronxradb74hedyhmbki0jjy2f5wownj0kjk7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1646ec5e-4ca2-46b2-b2f9-e888a995767a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.347112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "7a408d6a-22d6-4733-bd6f-044339ffaa8d",
    "name" : "Romanize japanese name, based on the name in Kanji. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/qtdpd2ek1lnz8zpl1sf1do2ipgfsegthxz1vq5orsdsz0af98xlqje27zlxf1cro5t7ti8i7ancf5kf6zd82n8r2xlb68w5pnfbu3tli77i03sctt8qjhh0c99rvew2uf7tko7kra446y1m0b991upfbl87nkoiukudl5ybvkmc9615ado769f0m5v/o1tavrc1rxgh3l6yzozujslbpe2gm9xo7xbeyyxd09ggf1xepygugcah9vu1bk9d93cmw7nv0shsnc327yr35jhwmzd57c4kddaiiexnksfhbadoz7oeoen21srr543fdufdn7f9ssa60uq2rx3ywpnc3z",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7a408d6a-22d6-4733-bd6f-044339ffaa8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.345674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    }
  }, {
    "id" : "45064d65-f09e-4373-a9f2-0223e35d17f6",
    "name" : "Romanize japanese name, based on the name in Kanji. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/l9dgogcqnx5jqsbvowv9q60xy6f9443zlroid18i90zxfl11d/whtyohqxfx88bng6huutlt6g3zlnu1a30q9kloqth3zupcf3qgv4gvjpy86psvgc3qcact6izofwf388jfyldc7l7v6xgpllstg3snua96czm1ynirn7wph5bghkesp4477f2v8sy0y3kuu5l8eu79u",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "45064d65-f09e-4373-a9f2-0223e35d17f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.345632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates"
        }
      }
    }
  }, {
    "id" : "9f1b649e-7ea7-4e9f-8d7b-0cdc28076caa",
    "name" : "Romanize japanese name, based on the name in Kanji. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameLatinCandidates/lpr3owgdronp1vcr6qbz28r30saxrsy0p2j0w9tzj9dtds5ght59inymhcpdtk7j79or8wqmxly669nvvpj6bgq661hd6bjzexnngyrbh8q6ox2l7swa/9ctzqxrgah21nhjmla3tp9eleuv4boye1z96vts8ozstqrz6l8ew6ynpuo60bksv74s6c4ylw5d2o6dl06m9s0wjajsjhmb4ld2doeua96v001hlb534snkw7onaam68ck3xw44vto2g44pqodithwxsb2p3yt7fw",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Yukiko\",\n  \"lastName\" : \"Kling\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 8.12383345399334E307,\n    \"candidateName\" : \"2023-02-23T16:24:24.345122Z\",\n    \"probability\" : 1.224295684028128E308,\n    \"predScoreFamilyName\" : 1.3732384408389119E308\n  }, {\n    \"predScoreGivenName\" : 9.2658462680927E307,\n    \"candidateName\" : \"2022-11-17T15:20:24.345165Z\",\n    \"probability\" : 1.5739475422040143E308,\n    \"predScoreFamilyName\" : 1.3042238388020752E308\n  }, {\n    \"predScoreGivenName\" : 4.2222775169718563E307,\n    \"candidateName\" : \"2022-05-31T16:11:24.34521Z\",\n    \"probability\" : 1.3730429751553184E308,\n    \"predScoreFamilyName\" : 5.214636056075369E307\n  }, {\n    \"predScoreGivenName\" : 5.609370311882189E307,\n    \"candidateName\" : \"2022-08-18T16:57:24.345251Z\",\n    \"probability\" : 1.0963481871880837E308,\n    \"predScoreFamilyName\" : 8.20864185566414E307\n  }, {\n    \"predScoreGivenName\" : 6.341623318536566E307,\n    \"candidateName\" : \"2022-04-11T15:16:24.345293Z\",\n    \"probability\" : 1.4589255273012755E308,\n    \"predScoreFamilyName\" : 1.5412331770325908E308\n  }, {\n    \"predScoreGivenName\" : 1.1029366682996484E308,\n    \"candidateName\" : \"2022-08-21T14:56:24.345336Z\",\n    \"probability\" : 6.745843182537492E307,\n    \"predScoreFamilyName\" : 1.0018852849147982E308\n  }, {\n    \"predScoreGivenName\" : 1.0744830271330058E308,\n    \"candidateName\" : \"2022-05-31T15:04:24.345374Z\",\n    \"probability\" : 1.3110081518723246E308,\n    \"predScoreFamilyName\" : 1.7602638625222988E307\n  } ],\n  \"orderOption\" : \"3wgzac0lrxpejd2rmc5258fznq0c2smwlikklre0t5o8nldmqqanlaw2eivep29l8swq4nnwaxg833usadyb41at2c9okgvudqot4v7iqbttd6sllq82yrt7ryj7mpdro7sd1cd1g9855il4d9bga7gw92zx8\",\n  \"id\" : \"qj21\",\n  \"script\" : \"0pgqypxbde785oygh3y6d6s9v6ps8zlx3tcrvtvbfzfvo0762o3xz1cw987izm3lwc4so0agv3evgvrareuyjigg4okeloqdyqriobbip3axwfe7j1lxtbz4a5w5s3eloz0b8168h71\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f1b649e-7ea7-4e9f-8d7b-0cdc28076caa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.345582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameLatinCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "3cc702ff-a284-4095-8737-e425dd5fb6cc",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3cc702ff-a284-4095-8737-e425dd5fb6cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.345033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "483b5a7e-6e35-4666-8e69-2ad3a940e8cb",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "483b5a7e-6e35-4666-8e69-2ad3a940e8cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.345017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "bc76741c-2bcc-4ddc-9802-65afcb590e1f",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bc76741c-2bcc-4ddc-9802-65afcb590e1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.345002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "61bb0447-f27f-4ab1-8251-3ffb68c49308",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Odell\",\n    \"lastName\" : \"Torp\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.8785417052011E307,\n      \"candidateName\" : \"2022-12-31T17:54:24.34242Z\",\n      \"probability\" : 4.66685077977128E307,\n      \"predScoreFamilyName\" : 8.112908559496123E307\n    }, {\n      \"predScoreGivenName\" : 1.32277668628063E308,\n      \"candidateName\" : \"2022-07-09T17:34:24.342463Z\",\n      \"probability\" : 1.4750821965958257E308,\n      \"predScoreFamilyName\" : 1.5364580248369845E308\n    }, {\n      \"predScoreGivenName\" : 1.1741515422262093E308,\n      \"candidateName\" : \"2023-01-24T17:37:24.342506Z\",\n      \"probability\" : 1.220684428253815E308,\n      \"predScoreFamilyName\" : 9.243715266633361E307\n    }, {\n      \"predScoreGivenName\" : 1.4907446882930847E308,\n      \"candidateName\" : \"2022-09-22T17:52:24.342548Z\",\n      \"probability\" : 2.328326361065177E307,\n      \"predScoreFamilyName\" : 5.110314433884728E307\n    }, {\n      \"predScoreGivenName\" : 7.163019278126795E307,\n      \"candidateName\" : \"2022-05-23T15:10:24.342591Z\",\n      \"probability\" : 8.82373674860716E307,\n      \"predScoreFamilyName\" : 1.4972112196192409E308\n    }, {\n      \"predScoreGivenName\" : 3.664733805210277E307,\n      \"candidateName\" : \"2022-08-16T16:24:24.34264Z\",\n      \"probability\" : 1.5839253174086258E308,\n      \"predScoreFamilyName\" : 1.060142040338662E308\n    } ],\n    \"orderOption\" : \"hj46optmbyzulgg0f5ydbb91cf1rsd0mg8ocj6g4r6331d5f1p9jn\",\n    \"id\" : \"fenn\",\n    \"script\" : \"7fxsdcjiti8oh4ur5dxoe7c8lscabblrpkd4hsqzr4gr6zg073s0hxipgu57k8z1th9c7m91knhg37z1m49jc9rcgwztarsq320u5wwlgw3b0b6b8f3412a8pphuyozi3trxdhrpsjpckb\"\n  }, {\n    \"firstName\" : \"Hosea\",\n    \"lastName\" : \"O'Conner\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1663183992014059E308,\n      \"candidateName\" : \"2022-08-15T16:39:24.342836Z\",\n      \"probability\" : 6.964081466592335E307,\n      \"predScoreFamilyName\" : 8.403435886247203E307\n    }, {\n      \"predScoreGivenName\" : 5.732992588711023E307,\n      \"candidateName\" : \"2022-03-24T16:28:24.342879Z\",\n      \"probability\" : 1.040739172912502E308,\n      \"predScoreFamilyName\" : 6.3229169792947035E307\n    }, {\n      \"predScoreGivenName\" : 1.1077937848831642E308,\n      \"candidateName\" : \"2022-12-10T16:07:24.342923Z\",\n      \"probability\" : 1.3974508378112498E308,\n      \"predScoreFamilyName\" : 1.1267179664313939E307\n    }, {\n      \"predScoreGivenName\" : 2.10682843582598E307,\n      \"candidateName\" : \"2022-10-19T17:28:24.342967Z\",\n      \"probability\" : 9.475589118412502E307,\n      \"predScoreFamilyName\" : 4.125876180992532E307\n    }, {\n      \"predScoreGivenName\" : 1.1257129988098172E308,\n      \"candidateName\" : \"2022-12-27T16:21:24.343013Z\",\n      \"probability\" : 1.0276169858334256E308,\n      \"predScoreFamilyName\" : 1.6842308029693155E308\n    }, {\n      \"predScoreGivenName\" : 8.155172617228355E307,\n      \"candidateName\" : \"2022-09-25T18:21:24.343055Z\",\n      \"probability\" : 1.0461474077088292E308,\n      \"predScoreFamilyName\" : 4.925103641785477E307\n    }, {\n      \"predScoreGivenName\" : 6.781432056171278E307,\n      \"candidateName\" : \"2022-11-04T15:09:24.3431Z\",\n      \"probability\" : 9.095479638576232E307,\n      \"predScoreFamilyName\" : 6.591905116971488E307\n    }, {\n      \"predScoreGivenName\" : 1.1220000324057002E308,\n      \"candidateName\" : \"2022-10-03T18:43:24.343142Z\",\n      \"probability\" : 1.3475190994401408E308,\n      \"predScoreFamilyName\" : 1.0595195460080703E308\n    } ],\n    \"orderOption\" : \"pxafp11501bo2o51uyxm95rw29jh1yofx5hxsbrcphga99ff7yo0jzrparx\",\n    \"id\" : \"u1x4\",\n    \"script\" : \"s20yc9j2os0px7vrkx76z9gccbi4l4ekwhq5qpc2b8043z7jwqsbx0u2et0dd06apozpliov1gxw20fmwonae6t7cehmovbpwb5ht\"\n  }, {\n    \"firstName\" : \"Danyelle\",\n    \"lastName\" : \"Bartoletti\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.2281116177162168E308,\n      \"candidateName\" : \"2022-07-21T15:20:24.343335Z\",\n      \"probability\" : 4.659137800011361E307,\n      \"predScoreFamilyName\" : 9.045522644955032E307\n    }, {\n      \"predScoreGivenName\" : 4.839042071322544E307,\n      \"candidateName\" : \"2022-08-08T18:05:24.343382Z\",\n      \"probability\" : 1.1174488539508318E308,\n      \"predScoreFamilyName\" : 1.5758979747688478E308\n    }, {\n      \"predScoreGivenName\" : 6.661113299377737E306,\n      \"candidateName\" : \"2023-02-21T17:06:24.343438Z\",\n      \"probability\" : 1.463522385223301E307,\n      \"predScoreFamilyName\" : 1.7062517751886574E308\n    }, {\n      \"predScoreGivenName\" : 6.244770357059462E307,\n      \"candidateName\" : \"2022-11-16T15:31:24.343481Z\",\n      \"probability\" : 9.79166027152508E307,\n      \"predScoreFamilyName\" : 7.931311620062506E307\n    }, {\n      \"predScoreGivenName\" : 7.093628459709655E307,\n      \"candidateName\" : \"2022-10-18T17:47:24.343525Z\",\n      \"probability\" : 1.7547893852879477E308,\n      \"predScoreFamilyName\" : 1.7538182084746843E308\n    }, {\n      \"predScoreGivenName\" : 2.990743411393933E307,\n      \"candidateName\" : \"2022-10-18T17:52:24.343572Z\",\n      \"probability\" : 6.157774646816251E307,\n      \"predScoreFamilyName\" : 1.612956071756643E308\n    }, {\n      \"predScoreGivenName\" : 6.528380303880802E307,\n      \"candidateName\" : \"2023-01-06T18:10:24.343616Z\",\n      \"probability\" : 9.114579187423524E307,\n      \"predScoreFamilyName\" : 1.5183558817364079E308\n    } ],\n    \"orderOption\" : \"mxqfl6d85emeoykemnyn1qd30qum5i87uw6e52x7971ql20008bxvss73c9vsibwbp4doa3cv71aknepbh7db\",\n    \"id\" : \"i9q7\",\n    \"script\" : \"2lm7q0githc7sd\"\n  }, {\n    \"firstName\" : \"Willie\",\n    \"lastName\" : \"Bednar\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 5.733950683930819E306,\n      \"candidateName\" : \"2022-06-25T17:45:24.343811Z\",\n      \"probability\" : 1.057501861188349E308,\n      \"predScoreFamilyName\" : 2.6420413684905397E307\n    }, {\n      \"predScoreGivenName\" : 8.489833964638245E307,\n      \"candidateName\" : \"2022-09-12T17:52:24.343854Z\",\n      \"probability\" : 1.487711428518363E308,\n      \"predScoreFamilyName\" : 1.2712703829439878E308\n    }, {\n      \"predScoreGivenName\" : 1.6861849776134727E308,\n      \"candidateName\" : \"2022-06-10T15:23:24.343897Z\",\n      \"probability\" : 1.3493955121851347E308,\n      \"predScoreFamilyName\" : 1.5388283026117191E308\n    }, {\n      \"predScoreGivenName\" : 1.5678338982147405E308,\n      \"candidateName\" : \"2022-10-17T17:17:24.343941Z\",\n      \"probability\" : 2.3949251441289245E306,\n      \"predScoreFamilyName\" : 1.3062996690657318E307\n    }, {\n      \"predScoreGivenName\" : 1.4282129646714895E308,\n      \"candidateName\" : \"2022-06-11T15:28:24.343982Z\",\n      \"probability\" : 3.0452782320065997E307,\n      \"predScoreFamilyName\" : 1.7716333550849784E308\n    } ],\n    \"orderOption\" : \"58dtat6cawbh2w4pqml4isimqbr1fstutem5oj614zj8lowmfc6gbpo1jrd5xygg49wuy2qhq94uyxc2152ok0zoybfib8u8q0vef7toswwbm5kq482pwbwjgips9jadmww84xst5ty8srae8mw\",\n    \"id\" : \"mp25\",\n    \"script\" : \"n9xizdwt1umgyibspqb4mr0cazkf233kgc6hfapxq1kc43021sq5hmxj2g5g7lkzv5s511ooi1k3yz4wcachw52wz2pplge6shbntl0rc4lceih7f9pw6jqy4v5ms7pb\"\n  }, {\n    \"firstName\" : \"Inga\",\n    \"lastName\" : \"Boyle\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.3816868321398458E308,\n      \"candidateName\" : \"2022-12-23T17:48:24.344183Z\",\n      \"probability\" : 9.97619703662948E307,\n      \"predScoreFamilyName\" : 1.5733509883259472E308\n    }, {\n      \"predScoreGivenName\" : 8.70004072479036E307,\n      \"candidateName\" : \"2023-02-12T15:42:24.344225Z\",\n      \"probability\" : 1.0439684900018577E308,\n      \"predScoreFamilyName\" : 1.2792665140936195E308\n    }, {\n      \"predScoreGivenName\" : 2.4633471416267384E307,\n      \"candidateName\" : \"2022-12-21T17:21:24.344269Z\",\n      \"probability\" : 1.5191485350506796E308,\n      \"predScoreFamilyName\" : 7.700285237478684E306\n    }, {\n      \"predScoreGivenName\" : 8.241987573581966E307,\n      \"candidateName\" : \"2022-09-18T15:39:24.344311Z\",\n      \"probability\" : 6.093293495610012E307,\n      \"predScoreFamilyName\" : 1.7851577290049492E308\n    }, {\n      \"predScoreGivenName\" : 2.506937023848999E307,\n      \"candidateName\" : \"2022-05-15T17:59:24.344361Z\",\n      \"probability\" : 9.924930692166328E307,\n      \"predScoreFamilyName\" : 5.405674061061747E307\n    }, {\n      \"predScoreGivenName\" : 1.2610994054115713E304,\n      \"candidateName\" : \"2022-11-21T18:08:24.344405Z\",\n      \"probability\" : 5.413858458500331E307,\n      \"predScoreFamilyName\" : 1.2938831899873866E308\n    }, {\n      \"predScoreGivenName\" : 9.306260207512038E307,\n      \"candidateName\" : \"2022-10-18T17:15:24.344456Z\",\n      \"probability\" : 4.118794008029422E307,\n      \"predScoreFamilyName\" : 8.653813089314457E307\n    } ],\n    \"orderOption\" : \"4dxt9k1420htibfd98krvwj2skuekfid2u7vkwp36tde07bdejh0vu9bl0l8q\",\n    \"id\" : \"cmw5\",\n    \"script\" : \"y6ltf8ww4rfz72np4j2hf\"\n  }, {\n    \"firstName\" : \"Diego\",\n    \"lastName\" : \"Klocko\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.587634837373947E307,\n      \"candidateName\" : \"2023-02-20T15:25:24.344651Z\",\n      \"probability\" : 1.599008374722213E308,\n      \"predScoreFamilyName\" : 8.823399444548802E307\n    }, {\n      \"predScoreGivenName\" : 1.3248821571523934E308,\n      \"candidateName\" : \"2022-05-11T16:39:24.344695Z\",\n      \"probability\" : 4.542913346820982E307,\n      \"predScoreFamilyName\" : 2.286969803530503E307\n    } ],\n    \"orderOption\" : \"kb27midf4db2dn860pilnhd973hcflygk5dzx378uqv7zttjg32gvqon8yaepypwflfdfe1kbxf24m8ljlrtox\",\n    \"id\" : \"7vx7\",\n    \"script\" : \"h8h3fhgvefb07txchtrglvij96i4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61bb0447-f27f-4ab1-8251-3ffb68c49308",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.344967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "357eecf0-40fa-4f79-b96c-d0124a2e9073",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/0qd3r2/jduzw3mrxk288oasu1vm9mck9wfzf8ulg7lposfh2idp0u885rqpvt3khj2zan7x2xpe1j01doxhrjj2j3jxp9ogcyw198appgkxcaj12oadkwdaouqp7jtejplhdj6ipzs3dnqr82tpv5ow4jkez5wka6qqxrea2750bfq1hxxdayx0n6ks08qde72929djsz1j2i/Male",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "357eecf0-40fa-4f79-b96c-d0124a2e9073",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.342328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    }
  }, {
    "id" : "3838b0bb-6810-485c-922e-671a76409737",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/xwvhmhtqc888d0xa/vjnvkg70emnfvz0jxzrwqexp23g1bgc9l93x0539rtqfr8/Agender",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3838b0bb-6810-485c-922e-671a76409737",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.342271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1"
        }
      }
    }
  }, {
    "id" : "a6ac51be-0baa-471e-aa51-9f946729fe5d",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/mivfe715rcwpptoalbrho5zg26vz0153r31hiaxh6nikp8ec4wtuejr3eqvk0auhxi22e4ncg15pm5svmx4c5p/bm052clhk5yeg8rf9e6hupy2i6oocbwwhzt0vgyuys9aejagogbmqi7lpzcw7and6vuxobtftpit2qzekeyso1keolfiksuqusjkojhgv406e05qx7f54j8pscm1g5xmei6lxbeja20v322z8/Polygender",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Amina\",\n  \"lastName\" : \"Jacobs\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 4.779706783371901E307,\n    \"candidateName\" : \"2022-11-20T16:28:24.341773Z\",\n    \"probability\" : 1.5703954639057527E308,\n    \"predScoreFamilyName\" : 7.615973201751714E307\n  }, {\n    \"predScoreGivenName\" : 6.886886268901802E307,\n    \"candidateName\" : \"2023-02-11T15:06:24.341819Z\",\n    \"probability\" : 3.523955879926738E307,\n    \"predScoreFamilyName\" : 8.708715768950467E307\n  }, {\n    \"predScoreGivenName\" : 5.495742929978135E307,\n    \"candidateName\" : \"2023-02-26T17:53:24.341859Z\",\n    \"probability\" : 9.647551796500992E307,\n    \"predScoreFamilyName\" : 9.496300770057968E307\n  }, {\n    \"predScoreGivenName\" : 1.151522352971012E308,\n    \"candidateName\" : \"2022-07-30T17:04:24.341902Z\",\n    \"probability\" : 9.760754591474326E307,\n    \"predScoreFamilyName\" : 1.6905597258127656E308\n  }, {\n    \"predScoreGivenName\" : 3.35046123738061E307,\n    \"candidateName\" : \"2023-02-17T18:29:24.341945Z\",\n    \"probability\" : 2.39531882668059E307,\n    \"predScoreFamilyName\" : 1.6104453807454894E308\n  }, {\n    \"predScoreGivenName\" : 9.40242246819363E307,\n    \"candidateName\" : \"2022-09-30T18:49:24.341989Z\",\n    \"probability\" : 6.833033885601916E307,\n    \"predScoreFamilyName\" : 9.948545669291202E307\n  } ],\n  \"orderOption\" : \"ajwkt5w9zkolfacddfxmok0duvpehb7ozahlhbvecc7mhlvgfhfna9vlzuboj2k62gxtepeexrxy4oyekw9hr902k3ygpv0xrmzawfr1o76e94g4eos8a1djfib1i3la7yvyik0un2f9rlcioijq9\",\n  \"id\" : \"6o16\",\n  \"script\" : \"lijd7tfqw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6ac51be-0baa-471e-aa51-9f946729fe5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.342208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates_1",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "16388e74-d281-4387-a984-7f867ab30a33",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/gmrt8dlosxairk0uckwwrk71v8uh81agm/pqum501l63ujw5lzxe61fd11jbdp4pvhl2uizes735fl8jvlikplqt5c2feqdolbg4wjod14cn0i8vnhkz0cqox0ncnnlj9s2xt1to11ix8bohskvvsxxdyhq7uvnm3vjs03ulo4rhr31mofzavdwiw",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "16388e74-d281-4387-a984-7f867ab30a33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.341687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    }
  }, {
    "id" : "f580655a-0123-4d52-b477-83f799e5d204",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/rkk6fb14rpe2n1la16tq9h1ycw3z3bp38iowd1gcu11vr8ndn02wj9ajyww5ppvjc5d4p5oy1y1rliacqthztho4b0mkojgxr5san6an06kvei6u250u7ggetkr8oqck9xbmdwdbvzhd5krsjjx44juw58x24p6dems4pkrx2uhavx41l8i/pkl8ge1h607raoo7tqm5hjsb8nz881feao65ov00zrn67txmmbcod7mtvzbjn15hxrfh44daz10mm2iislpubtdl8o7gy",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f580655a-0123-4d52-b477-83f799e5d204",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.341648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates"
        }
      }
    }
  }, {
    "id" : "09b3b216-bb06-4555-aad4-301e0a66eeb8",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameKanjiCandidates/u9osvuhoksfi25sxxspz7bose69apxtmnrzvebozojvlk1u6gm4t3b0vi2f9bh6zqifp8ml5u5jswxzcfb1gczoan63xdxkaim5pqc96vp0vc77xybjjkmwysbt3tu/vwgf5zxq88t2s2if3zsraq10rjv08jv1jv0bp4txj91sub0o7zeii7ozthfasvj91492qd1puhu7hcbpbivbpkdsxwby4hxk1zrt84fhc54qa49n8eaxvunfuput8thzc89zbyhh9c",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Tommie\",\n  \"lastName\" : \"Bradtke\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 8.890077703616783E307,\n    \"candidateName\" : \"2022-03-22T15:22:24.34135Z\",\n    \"probability\" : 1.0982351923673703E308,\n    \"predScoreFamilyName\" : 1.3055263059834878E308\n  }, {\n    \"predScoreGivenName\" : 8.558564172336667E307,\n    \"candidateName\" : \"2022-06-25T18:24:24.34139Z\",\n    \"probability\" : 1.5220289035917142E308,\n    \"predScoreFamilyName\" : 5.976112220512688E307\n  } ],\n  \"orderOption\" : \"g7fiz4f7unieqv2wwscw6dc25eqrycrzul7ixcvib3dhhhfnse9ghsrut03grc5is1rpz8ooeh8qa3yz2xt5rbtewwmx5iur6b7925k8nqkk53r1azacsvtv3wk53det1by9q7t6gve32\",\n  \"id\" : \"66by\",\n  \"script\" : \"pq6fuzf3tm2lwwuvx71kv3yvy589oys2fj60d6xfgt9oiyf1oe4nnse38rwjfopovu5x528jizkte8iof1407xmhntzg6nzaeuzvx91l3jfkoxnm2v50unpr40v9kfthfrwizmck0tahp97ar5v68g3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09b3b216-bb06-4555-aad4-301e0a66eeb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.341596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameKanjiCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9f0ee2e0-001c-4827-aa0f-482ce7e3d03b",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 403",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9f0ee2e0-001c-4827-aa0f-482ce7e3d03b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.34126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "c59f651e-ab0b-43bc-bd8e-cc290e6fe34f",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 401",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c59f651e-ab0b-43bc-bd8e-cc290e6fe34f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.341245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "fa590337-3c05-4b01-89c9-b7f0f4f3fe04",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae - 400",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "fa590337-3c05-4b01-89c9-b7f0f4f3fe04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.341227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "ed9c388b-9e5a-4557-9ea7-1e9ae5a7597e",
    "name" : "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae (application/json)",
    "request" : {
      "urlPath" : "/api2/json/japaneseNameGenderKanjiCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Carey\",\n    \"lastName\" : \"Will\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 4.81629711882131E307,\n      \"candidateName\" : \"2022-03-10T16:29:24.339098Z\",\n      \"probability\" : 1.479292046830843E308,\n      \"predScoreFamilyName\" : 1.2707426626371874E308\n    }, {\n      \"predScoreGivenName\" : 3.610391803386462E307,\n      \"candidateName\" : \"2022-05-28T15:12:24.339145Z\",\n      \"probability\" : 8.941447822246057E307,\n      \"predScoreFamilyName\" : 4.890232676563879E307\n    }, {\n      \"predScoreGivenName\" : 1.0948570003528363E308,\n      \"candidateName\" : \"2022-07-04T18:38:24.339191Z\",\n      \"probability\" : 3.604084543174305E307,\n      \"predScoreFamilyName\" : 1.2684918974502841E308\n    }, {\n      \"predScoreGivenName\" : 1.0911582391321321E307,\n      \"candidateName\" : \"2022-08-27T16:05:24.339238Z\",\n      \"probability\" : 4.567218923845558E307,\n      \"predScoreFamilyName\" : 8.594102211254281E307\n    }, {\n      \"predScoreGivenName\" : 1.4363304780267565E308,\n      \"candidateName\" : \"2022-04-16T16:13:24.339284Z\",\n      \"probability\" : 1.2092550125798823E308,\n      \"predScoreFamilyName\" : 1.743373952876566E308\n    }, {\n      \"predScoreGivenName\" : 1.3050383598904604E308,\n      \"candidateName\" : \"2023-01-25T15:46:24.339333Z\",\n      \"probability\" : 8.22289350339982E307,\n      \"predScoreFamilyName\" : 1.0178815248302645E307\n    }, {\n      \"predScoreGivenName\" : 2.8939734216349927E306,\n      \"candidateName\" : \"2023-01-20T16:04:24.339375Z\",\n      \"probability\" : 1.0061376998465597E308,\n      \"predScoreFamilyName\" : 1.9576357742769045E306\n    } ],\n    \"orderOption\" : \"5c4dn13voshq4kxz4z0m2dtc01r5m4rv5zhmmfqietcbktm0o6qi7fdd9ir1nuov3kjm96p64nuwt8xr8hhcm440sqr42n5i3lbvsetp4zii0p1ko5n43kmt3qpqltp10m5v4vd534i9oket8l61yo6xuygab6x\",\n    \"id\" : \"o3tz\",\n    \"script\" : \"5pb06r6ebo2scvk31nyp6tnf2haxowz133sqxx7czbilfwzcb9xeany25s3y0dnku5ern8tyyzwrkvsestkt8g3kcrgy7y62n07dqwfhn4p2qkm5is3iwkj8p825dc882wp\"\n  }, {\n    \"firstName\" : \"Gilberto\",\n    \"lastName\" : \"Kirlin\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.2481824435551382E308,\n      \"candidateName\" : \"2022-11-03T17:26:24.339579Z\",\n      \"probability\" : 1.3611161438196916E308,\n      \"predScoreFamilyName\" : 7.128918234647169E307\n    }, {\n      \"predScoreGivenName\" : 1.4475564960757326E308,\n      \"candidateName\" : \"2023-02-22T15:49:24.339622Z\",\n      \"probability\" : 9.645502362743182E307,\n      \"predScoreFamilyName\" : 9.726619260929107E307\n    } ],\n    \"orderOption\" : \"4z1opuih6tno91dvcyp02o7rg3pzh74ril79ppf9ckclqga2bzeji90x1i6u9vc07yg2a1kn6k2jun8yn2nwuoyv1r4wx6e9rz281cty4o0b1mkttdbg61fojb6yvwcm3b5vfnzlv044v3c54ib2m7ubnxt\",\n    \"id\" : \"8xmc\",\n    \"script\" : \"t7vcie12wl2qq62m3ps8lt1j56q1zlscurt40w4mlqmsdyt1jui4bawdk2oa9ko63wf017rkrmaqrs3u97jtz1oeiepf5vanw13wkst5uk1elp2tunxlb8cu0ft7qj9wl86oufp4erwr2p01xy3jfvlt4z5qpnvpismxy70oc\"\n  }, {\n    \"firstName\" : \"Elias\",\n    \"lastName\" : \"Price\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 9.911491300800639E307,\n      \"candidateName\" : \"2023-02-27T16:12:24.339817Z\",\n      \"probability\" : 1.6136719113736916E308,\n      \"predScoreFamilyName\" : 1.040704477595968E308\n    }, {\n      \"predScoreGivenName\" : 1.7884998284276707E308,\n      \"candidateName\" : \"2022-09-11T15:13:24.339861Z\",\n      \"probability\" : 1.3751335240721493E308,\n      \"predScoreFamilyName\" : 4.3670070903721596E307\n    }, {\n      \"predScoreGivenName\" : 1.779107143716817E308,\n      \"candidateName\" : \"2022-09-09T16:53:24.339907Z\",\n      \"probability\" : 1.7531145349085925E308,\n      \"predScoreFamilyName\" : 2.707894199261883E307\n    }, {\n      \"predScoreGivenName\" : 1.0555145260258664E308,\n      \"candidateName\" : \"2022-08-02T16:43:24.33995Z\",\n      \"probability\" : 5.322550427554517E307,\n      \"predScoreFamilyName\" : 7.848996576813123E306\n    }, {\n      \"predScoreGivenName\" : 7.079380290363347E307,\n      \"candidateName\" : \"2022-04-23T17:47:24.339994Z\",\n      \"probability\" : 4.1858439991150845E307,\n      \"predScoreFamilyName\" : 8.634591217323571E307\n    }, {\n      \"predScoreGivenName\" : 1.6011835175944762E308,\n      \"candidateName\" : \"2023-01-10T18:54:24.340039Z\",\n      \"probability\" : 2.7070778407621947E307,\n      \"predScoreFamilyName\" : 3.7431137525074036E307\n    } ],\n    \"orderOption\" : \"10y5ldo58i5uzcunlmn4ztskauot5fbr6osozys8efxd043yfz0uxfdkt2o2djl3bf11uuejgny89gm7vnkwxrwgbvok\",\n    \"id\" : \"523h\",\n    \"script\" : \"nvb9tz6amuvxf2987m31py0tj70o8tcsh0nluyjmtczrgqns38ezqipppwkxnti64jms5h43b\"\n  }, {\n    \"firstName\" : \"Irving\",\n    \"lastName\" : \"Bechtelar\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.119966272535922E307,\n      \"candidateName\" : \"2022-07-22T17:59:24.340227Z\",\n      \"probability\" : 1.1563523464113038E308,\n      \"predScoreFamilyName\" : 1.1785452641495536E308\n    }, {\n      \"predScoreGivenName\" : 1.607075838103557E308,\n      \"candidateName\" : \"2022-05-18T15:19:24.34027Z\",\n      \"probability\" : 1.6929748889072631E308,\n      \"predScoreFamilyName\" : 1.1111179357053107E307\n    }, {\n      \"predScoreGivenName\" : 5.824686981206307E307,\n      \"candidateName\" : \"2022-12-07T16:34:24.340316Z\",\n      \"probability\" : 1.6268801360517646E308,\n      \"predScoreFamilyName\" : 4.022482115091438E307\n    }, {\n      \"predScoreGivenName\" : 3.6646825540181587E307,\n      \"candidateName\" : \"2022-04-17T16:25:24.340363Z\",\n      \"probability\" : 1.6182828146035376E308,\n      \"predScoreFamilyName\" : 7.904863330182856E307\n    }, {\n      \"predScoreGivenName\" : 1.4809150372569654E308,\n      \"candidateName\" : \"2022-10-21T17:43:24.34041Z\",\n      \"probability\" : 4.4432719372995543E307,\n      \"predScoreFamilyName\" : 9.471775570665492E307\n    }, {\n      \"predScoreGivenName\" : 1.697548389696452E308,\n      \"candidateName\" : \"2023-03-02T17:19:24.340454Z\",\n      \"probability\" : 1.0230609729111797E308,\n      \"predScoreFamilyName\" : 1.0846039389318858E308\n    }, {\n      \"predScoreGivenName\" : 5.166360616531608E307,\n      \"candidateName\" : \"2022-08-24T15:01:24.340499Z\",\n      \"probability\" : 6.986066946946961E307,\n      \"predScoreFamilyName\" : 2.8471747376643786E307\n    }, {\n      \"predScoreGivenName\" : 1.208328652050833E308,\n      \"candidateName\" : \"2022-08-05T16:26:24.340543Z\",\n      \"probability\" : 1.0628832562037866E307,\n      \"predScoreFamilyName\" : 9.235767608811771E307\n    } ],\n    \"orderOption\" : \"b74jrptlqptzaufhcerjheite3bdxpe4a1mbbajq157un3ki0psvdu7a9k1lyggmtaqg5ut644ymvn5dxcr187m0xuvu2i87t8x4blifif02tbpk6roka8ahi60rmxjy0hafiqeo41uf46zh8qwd0jsjlb1xi2f\",\n    \"id\" : \"9179\",\n    \"script\" : \"lvwqhm5whnlfzcnl8taq7hl4ji0mf1zdpn9fkrfcyhhqi\"\n  }, {\n    \"firstName\" : \"Len\",\n    \"lastName\" : \"Schamberger\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.4562126813517905E308,\n      \"candidateName\" : \"2022-03-12T17:06:24.34074Z\",\n      \"probability\" : 8.253760588134142E307,\n      \"predScoreFamilyName\" : 4.55085102910697E307\n    }, {\n      \"predScoreGivenName\" : 1.0815159454086012E308,\n      \"candidateName\" : \"2023-01-16T16:52:24.340784Z\",\n      \"probability\" : 1.658965822165584E308,\n      \"predScoreFamilyName\" : 2.0472121663582646E307\n    }, {\n      \"predScoreGivenName\" : 9.76349483669643E306,\n      \"candidateName\" : \"2022-09-01T16:28:24.340826Z\",\n      \"probability\" : 8.432244242473271E307,\n      \"predScoreFamilyName\" : 2.332171313415578E307\n    }, {\n      \"predScoreGivenName\" : 1.4865169184473954E308,\n      \"candidateName\" : \"2022-03-11T15:45:24.34087Z\",\n      \"probability\" : 5.033575846594054E307,\n      \"predScoreFamilyName\" : 1.567246266849662E308\n    }, {\n      \"predScoreGivenName\" : 8.589592983199959E307,\n      \"candidateName\" : \"2022-11-02T18:02:24.340914Z\",\n      \"probability\" : 1.232120063313196E308,\n      \"predScoreFamilyName\" : 9.482355286310823E307\n    } ],\n    \"orderOption\" : \"u2q9qgx8z3kpwo78xleavilujt2jgepoxypyt\",\n    \"id\" : \"13j1\",\n    \"script\" : \"lcgq9jxxx4ig0pc7zd3hq7hze3y3h5bbz92ot1iu0agi0levnrn895szdi2e6ba29cnhc9id48ggfmfjsh2zkc1e7fmjof7anqcn4sgzh10clbcpbwvd38a64hgbjt5g4ytub2weu5hm\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed9c388b-9e5a-4557-9ea7-1e9ae5a7597e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.341189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "japaneseNameGenderKanjiCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6e9e4567-d73d-41d3-9f09-ebf5be2f9ec3",
    "name" : "Infer the likely gender of up to 100 full names - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6e9e4567-d73d-41d3-9f09-ebf5be2f9ec3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.338989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "155afc9b-7a2b-466a-a90e-dc7e1f1190dc",
    "name" : "Infer the likely gender of up to 100 full names - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "155afc9b-7a2b-466a-a90e-dc7e1f1190dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.338974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "7ab8fdd6-1fc4-4f22-be69-53a7fc49e7a0",
    "name" : "Infer the likely gender of up to 100 full names - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7ab8fdd6-1fc4-4f22-be69-53a7fc49e7a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.338958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch"
        }
      }
    }
  }, {
    "id" : "a2a60ac9-cc0c-45ca-bdcc-3d7f13650e57",
    "name" : "Infer the likely gender of up to 100 full names (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.10318284360524643,\n    \"score\" : 58.25370840351625,\n    \"probabilityCalibrated\" : -0.3451497094767533,\n    \"name\" : \"Lydia Toy\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"b65h\",\n    \"script\" : \"dho9kv4vt4obntj8dzw\"\n  }, {\n    \"genderScale\" : -0.7434484793366085,\n    \"score\" : 85.52578533902316,\n    \"probabilityCalibrated\" : 0.7991761116947071,\n    \"name\" : \"Kristle Rolfson\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"v4i9\",\n    \"script\" : \"6719q4e99nd736xew9fmangw0qpztkh0penngfyth643j9r\"\n  }, {\n    \"genderScale\" : -0.9401019748377368,\n    \"score\" : 14.987708495806306,\n    \"probabilityCalibrated\" : -0.30071979711741914,\n    \"name\" : \"Mr. Susanna Zieme\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"7955\",\n    \"script\" : \"icsr2jw8e2snm1a5cixs5mutfiy7t9w6gw8s0szga4tdeqjy\"\n  }, {\n    \"genderScale\" : 0.9509539825924922,\n    \"score\" : 62.846067470504444,\n    \"probabilityCalibrated\" : -0.22503361682695644,\n    \"name\" : \"Wayne Douglas\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"wnuh\",\n    \"script\" : \"j14k5z1phyd9ycdvxifhh8t4gkzm3q3iac0u9c4g818rpneun6p31aeqeomt5btcue5a82jmh4sgnrs894aqzfs\"\n  }, {\n    \"genderScale\" : 0.34412674098672436,\n    \"score\" : 20.26464258664302,\n    \"probabilityCalibrated\" : -0.04817994657376867,\n    \"name\" : \"Frank Green\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"qu78\",\n    \"script\" : \"co32xofrlx7z2mpop97trq6dqr0up681szyxvu48lpxfxyl9ajy2x827bm9q93yc09hulk9sgppbvo9j6bvlv7zmkk1brbmxc02na6s0klfb23yd5w\"\n  }, {\n    \"genderScale\" : -0.19293043157105028,\n    \"score\" : 75.10796412823602,\n    \"probabilityCalibrated\" : 0.33162014286719654,\n    \"name\" : \"Maudie Crona\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"yb3d\",\n    \"script\" : \"non5m4dhay546kds4m4k7902decwsu4nvmzpi49gsobs691uocega4z029m0yqlhapc97e4jht69rq48mvrldf3lgxjnv\"\n  }, {\n    \"genderScale\" : -0.35408732894357153,\n    \"score\" : 43.66805328026106,\n    \"probabilityCalibrated\" : -0.727963415306011,\n    \"name\" : \"Wayne Mills\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"6651\",\n    \"script\" : \"3ak4ayf47x5j3bhze1zrbr2irxj3h1yrjzdl1fakisegp6sfsvqjxo4gf3s80xz7pwr562ovsh4l5sj7o00jmlcrtodlvlik72ur8ia8foddskvigw18b1drh9ugzxsybk2acjonh1bo9uktenasz0cni2b06u8imwvk5x9t\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2a60ac9-cc0c-45ca-bdcc-3d7f13650e57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.338925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "7d6b7fca-4218-480e-8edb-177cc08df887",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Marc+Mraz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "7d6b7fca-4218-480e-8edb-177cc08df887",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.337853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    }
  }, {
    "id" : "24778a2e-bcfa-49f7-9568-03aaf3fff4ec",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Gertrudis+Murazik",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "24778a2e-bcfa-49f7-9568-03aaf3fff4ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.337796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull"
        }
      }
    }
  }, {
    "id" : "992c9f9e-9fe4-45ec-8dcb-0b30569d9b47",
    "name" : "Infer the likely gender of a Japanese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameFull/Mr.+Johnny+Skiles",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.9821955101283917,\n  \"score\" : 53.22277755266281,\n  \"probabilityCalibrated\" : -0.5579003090539365,\n  \"name\" : \"Ping Hirthe DVM\",\n  \"likelyGender\" : \"female\",\n  \"id\" : \"27c2\",\n  \"script\" : \"yavy9yltyollfye1gfox3jemf1pdogic3ba6cwwatw9om1942t38dm1t986hfzsgfee4vihztqb29ddpyy0654fdsrt1p63yiyugm0iplzyem7rai20h4oxd2ylzdfyodof2g2xzefaa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "992c9f9e-9fe4-45ec-8dcb-0b30569d9b47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.337727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNameFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "59d17814-5e55-432e-aad8-ecf9f1859233",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "59d17814-5e55-432e-aad8-ecf9f1859233",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.337465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "6b1ed74f-f396-4b2b-a503-4fea03b1392a",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6b1ed74f-f396-4b2b-a503-4fea03b1392a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.33745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "4203c6df-60f5-4e69-b722-b8e9809b050d",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4203c6df-60f5-4e69-b722-b8e9809b050d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.337434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "e0a3a8bc-9845-4ea2-8375-7e670f19f5ec",
    "name" : "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Ethan\",\n    \"genderScale\" : -0.07980208577775483,\n    \"lastName\" : \"Smitham\",\n    \"score\" : 84.5548561879775,\n    \"probabilityCalibrated\" : 0.6715663170831128,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"9mx0\",\n    \"script\" : \"i72lkd3weyhekfwi1y1t12fnnpyerqsx18tb0y57sb9v4x8isjdj812a21rxxg184ir626qi9\"\n  }, {\n    \"firstName\" : \"Velva\",\n    \"genderScale\" : 0.0955634454364549,\n    \"lastName\" : \"Herzog\",\n    \"score\" : 53.562307987915794,\n    \"probabilityCalibrated\" : 0.8165731678614523,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"d012\",\n    \"script\" : \"8j52mlg7tg2b8h5lg81xzo4resz9lxgqlb4omjcpr74i2mg5pe3d38mcdzdxsudk7ce7uy1qb0r7y4spdci893j\"\n  }, {\n    \"firstName\" : \"Charisse\",\n    \"genderScale\" : 0.33625723782122563,\n    \"lastName\" : \"Runolfsdottir\",\n    \"score\" : 99.34629849629033,\n    \"probabilityCalibrated\" : 0.575453891950743,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"4m63\",\n    \"script\" : \"uwum9hsfbdmnj8r2ppla1a3sl6aqgdq0kfsfzfypicn6nxpfx4txyd6mhpjs2nbj34zsg3vvrgt3jcvrg70xk63qk8jd1tzweie9wkb31i4lynx84pdcmks96n71h1wulsqqurqrxnd8hv7vjxsdp9y0j26ow80oo4y8j\"\n  }, {\n    \"firstName\" : \"Gretchen\",\n    \"genderScale\" : -0.5059267690895481,\n    \"lastName\" : \"Lind\",\n    \"score\" : 57.48109701812552,\n    \"probabilityCalibrated\" : -0.9697592221143247,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"d6id\",\n    \"script\" : \"vuwyxzniax6812n73e32mshxfoactdljgn1hyxxhhc0q6smvy9vho2rhzy26y3zgdgkh2wxeqt2azc7eby7jr7k4dvsd0y8z3mybpsdx8cwtnauo6pk5a790bojhwcyux8za2hnmfzym0xblkvezzahvxvw51uba\"\n  }, {\n    \"firstName\" : \"Delora\",\n    \"genderScale\" : 0.6946635842279234,\n    \"lastName\" : \"Little\",\n    \"score\" : 87.29997470959441,\n    \"probabilityCalibrated\" : 0.06914420129612653,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"jxwc\",\n    \"script\" : \"9u0rzqth64expbbawa9jjjse0qder086bnnl8r8xp7amoe4wcemxzjxd4cdc0vtz2fnwlyn3fmsyrpag\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0a3a8bc-9845-4ea2-8375-7e670f19f5ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.337403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ebe0c859-6dd5-41e1-acfe-8e6a313ec9b1",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Murphy/Art",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ebe0c859-6dd5-41e1-acfe-8e6a313ec9b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.336584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    }
  }, {
    "id" : "5af913ef-07b5-4631-a477-6f971dbff1d4",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Hackett/Manie",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5af913ef-07b5-4631-a477-6f971dbff1d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.336523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin"
        }
      }
    }
  }, {
    "id" : "afbfcc93-4e2b-459b-9995-9d07bfa2e907",
    "name" : "Infer the likely gender of a Japanese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderJapaneseName/Smith/Shalanda",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Dannette\",\n  \"genderScale\" : -0.23167874320780646,\n  \"lastName\" : \"Dietrich\",\n  \"score\" : 84.94039397340254,\n  \"probabilityCalibrated\" : 0.037569030350757204,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"a86o\",\n  \"script\" : \"tdesbbe36zta1ekejtr3f2by44gc2yjt5fvpprf2z6089ilygi9p3tw0467a6ai5wg484ip4g1nw9agj2os7mi4rlaf2t45v4tuqnh4djj9owgs73v3x7cjakwcv4tkafsr6vb04amfjwpyb443c63hbjg3pm978\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afbfcc93-4e2b-459b-9995-9d07bfa2e907",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.33645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderJapaneseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "4f085275-48c2-46e9-a49a-f915dda30c05",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4f085275-48c2-46e9-a49a-f915dda30c05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.336175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "19e25354-d155-4f48-9bf1-bf74107ac57c",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "19e25354-d155-4f48-9bf1-bf74107ac57c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.336159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "2d2d3044-5726-410e-b206-330c86965d06",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2d2d3044-5726-410e-b206-330c86965d06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.336142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch"
        }
      }
    }
  }, {
    "id" : "9a0f9b2a-ca3e-4408-a5e7-2c761dc8cf23",
    "name" : "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Temple\",\n    \"genderScale\" : -0.4671878785186643,\n    \"lastName\" : \"Mayert\",\n    \"score\" : 40.65119533726153,\n    \"probabilityCalibrated\" : 0.12916976334721908,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"0ffw\",\n    \"script\" : \"uj1ub8jgd1mrcuqd8cbb62iu5wj03xhivwml9rzhmpwjm3gyte7197ppuz7pv2ect4p2rrpgowzyal1q84ynf7jw6cg743pbju9ua5t04c6d8itt6v4uonyque9g0o8m5b3\"\n  }, {\n    \"firstName\" : \"Martin\",\n    \"genderScale\" : -0.8576117363422728,\n    \"lastName\" : \"Quitzon\",\n    \"score\" : 32.33294955147558,\n    \"probabilityCalibrated\" : -0.160181540104136,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"cenm\",\n    \"script\" : \"252um1usgifcy2x7d4yhwwor1ots7q1s178qstf0kgkl9vq7deyun8hmu8c1cpf1evb9twt2b07io9h5toadidm0w98gej1btssos0de97woigzjwl55ecunrb8qlkceendfh87lj0w7ckos8qz3ehb2cod7n8cua7pl\"\n  }, {\n    \"firstName\" : \"Delsie\",\n    \"genderScale\" : 0.7176093227864075,\n    \"lastName\" : \"Kutch\",\n    \"score\" : 99.30780952763443,\n    \"probabilityCalibrated\" : -0.6185517254427451,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"tj0s\",\n    \"script\" : \"sn0c54tepx9g8pnetxgqtb844ru2dz2n1q6kot73eqh413tz8n0pdc82hio3kw1bc5oyicgf4l5b68jo4h1y\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a0f9b2a-ca3e-4408-a5e7-2c761dc8cf23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.336114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeoBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "1c5e2240-2700-4189-ad1f-35cbf46f8ec1",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Mohammad/Rosenbaum/m0zzu6721kdw7iyln4071abtuixu9fzxq8n4mph6aq2hdbcc",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "1c5e2240-2700-4189-ad1f-35cbf46f8ec1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.335602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    }
  }, {
    "id" : "9dbe56ff-49d7-4d69-b06c-094918bfe403",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Bailey/Trantow/eck",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9dbe56ff-49d7-4d69-b06c-094918bfe403",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.335535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo"
        }
      }
    }
  }, {
    "id" : "18e15224-b6fa-462f-9101-c33f190366b7",
    "name" : "Infer the likely gender of a name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderGeo/Bryce/Kutch/9od0v1jv20lfa7ah34rfnyogggxs3yiorrfp8cnmthjphtj7ece7ui10vwnyq2mkh5slzqk99858igg9fuftxtliofu7eyviu311vi4s1wgbypz8py1sbq1e8p5urmxvatxk12dq4tn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Melita\",\n  \"genderScale\" : -0.7828666814909351,\n  \"lastName\" : \"Mueller\",\n  \"score\" : 68.52078755944,\n  \"probabilityCalibrated\" : 0.3456563639811878,\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"a4e1\",\n  \"script\" : \"msngfbr476pxf1hqba78v7qhqj0wl8weqadikgjl39ltqsmblx4gsrzxrayjnikikqimcnehqe5s15eknzrdkyglkxussw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18e15224-b6fa-462f-9101-c33f190366b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.335454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderGeo",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "751ec541-c059-46a0-bb8c-63fd238336ad",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "751ec541-c059-46a0-bb8c-63fd238336ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.335164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "e7546f71-528c-4191-9a39-49679c1ff2ff",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e7546f71-528c-4191-9a39-49679c1ff2ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.335148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "58d4a9f2-4492-44cc-a10a-f504e52d46c8",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "58d4a9f2-4492-44cc-a10a-f504e52d46c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.335132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch"
        }
      }
    }
  }, {
    "id" : "ef2e56cb-2080-4885-bfed-6f3a795a1385",
    "name" : "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeoBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.5980119472067957,\n    \"score\" : 69.15720686532617,\n    \"probabilityCalibrated\" : -0.7896237537523192,\n    \"name\" : \"Kanisha Gutkowski DVM\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"17o7\",\n    \"script\" : \"dfublurh96vk\"\n  }, {\n    \"genderScale\" : 0.37306258686672766,\n    \"score\" : 66.46296837118973,\n    \"probabilityCalibrated\" : -0.2870022658688891,\n    \"name\" : \"Remedios Waters\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"7n8h\",\n    \"script\" : \"mjmqwuehqo4s4vmsuwurvpg2syew9a73mo5x3eymylr1x\"\n  }, {\n    \"genderScale\" : 0.9795996497972661,\n    \"score\" : 85.52219075297472,\n    \"probabilityCalibrated\" : 0.07549150792388959,\n    \"name\" : \"Hope Farrell\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"j56r\",\n    \"script\" : \"akgachvyeptacsopc420xwggm4rq243uemlnarrn5aj9nq15lpq0r9iw7uux3zwg9vzaewhdsb1za6mee8fkfjh42sv\"\n  }, {\n    \"genderScale\" : 0.7112190578540174,\n    \"score\" : 83.26047198109129,\n    \"probabilityCalibrated\" : 0.7313382436052718,\n    \"name\" : \"Nevada Langosh\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"1bad\",\n    \"script\" : \"67mmi1a7mxk4vyzm5czi60f70es0jqalfpj\"\n  }, {\n    \"genderScale\" : -0.5079449318144185,\n    \"score\" : 71.5146353431132,\n    \"probabilityCalibrated\" : -0.47874635531387444,\n    \"name\" : \"Fawn Pfeffer\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"n107\",\n    \"script\" : \"i8a5oqjlronh3xzb99x7hohoel1g0rb6tloj926t1f8hkyevrj4wmiowwcwai3u5xmewoaqm14udjarq9wy6jo63ujypb59oq3pwp4r92l1h422iijel8wmlxlrqidwj397r755gu8hwonu1ihogk4e7fefh0erb23m0eazh8drnb3\"\n  }, {\n    \"genderScale\" : 0.08401423405644048,\n    \"score\" : 34.62364893683373,\n    \"probabilityCalibrated\" : -0.7110181387267307,\n    \"name\" : \"Cesar Hammes\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"76u9\",\n    \"script\" : \"9m6k0z48egxyer5tgbrcjvvrqq4qum4qbra39qfmpoz8nyafn2mj582m3eha9inokrh70rdm\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef2e56cb-2080-4885-bfed-6f3a795a1385",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.335102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeoBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9cda773f-3ae8-4ff8-a68a-ffbbd8e1031b",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Nancey+Leannon/v8s2oazuccm2trgn9166m1yd5rn8bur8kk9erv49n480uy4vxiop0q1",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9cda773f-3ae8-4ff8-a68a-ffbbd8e1031b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.334183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    }
  }, {
    "id" : "308c74e6-9e0e-4ead-8b0c-044d1338b697",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Werner+Conn+IV/eoinxkprne",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "308c74e6-9e0e-4ead-8b0c-044d1338b697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.334122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo"
        }
      }
    }
  }, {
    "id" : "eb468cd4-ba5d-4386-aa97-23b4163549c2",
    "name" : "Infer the likely gender of a full name, given a local context (ISO2 country code). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullGeo/Hong+Ortiz/hm9uw14o8325y45kjj2ef1592khpa42y75zby7na5l78jsd58p9klo11i9c1x7omn8c1yzpk1itt9ort8u120rbm7euse9h8dsdn8f0pwokoy",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.10891185832606487,\n  \"score\" : 9.591951525527575,\n  \"probabilityCalibrated\" : -0.7103557595751591,\n  \"name\" : \"Ms. Pamala Haag\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"40f5\",\n  \"script\" : \"79ymaf97bcmwdc3f9hcwacme7mrr8qk92sh1d0jp10g79szwxs231tqmcmabnbl4bzi5z6h4xptft2g2c10wz1osdye11rtua3h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb468cd4-ba5d-4386-aa97-23b4163549c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.334046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullGeo",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d726895c-a28f-4450-9ed0-82652d3dbb16",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d726895c-a28f-4450-9ed0-82652d3dbb16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.333767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "3cb4611f-05e4-434b-a0ed-3a6645ce8235",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3cb4611f-05e4-434b-a0ed-3a6645ce8235",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.333752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "a23483fd-2a07-4f24-ad6d-24f56e435750",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a23483fd-2a07-4f24-ad6d-24f56e435750",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.333734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch"
        }
      }
    }
  }, {
    "id" : "8601eb03-a544-402f-a8b6-7976263bfc9b",
    "name" : "Infer the likely gender of up to 100 full names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : 0.4480734935669113,\n    \"score\" : 7.561179230078185,\n    \"probabilityCalibrated\" : -0.12816064589126386,\n    \"name\" : \"Jacquelyne Prosacco\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"s1ad\",\n    \"script\" : \"g93jd50xv0yoeyquq6iwmg1pxz2uhraujls1isdbz5iuznq558wvrklwc6i5rm7rfbsy0qpf2cyfo4g97h4najp8zm0h858e4lcmlhj3verou7ms9ah3ez25jjpbkhjfrdcgqu4qiu0khlbfuyg\"\n  }, {\n    \"genderScale\" : -0.8218366402808248,\n    \"score\" : 39.047150398174516,\n    \"probabilityCalibrated\" : 0.4843001539984326,\n    \"name\" : \"Bessie Cremin\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"mb74\",\n    \"script\" : \"1nkfe90j45s5x0gyuvjl22jlobduldo8ospha8x9uraop7hpcdxzen1aqt8fe9ekx4cf85pyvhztwt5nhlriy58v32d30mu1kltkn500edo26utpdup82z48p5bue00o\"\n  }, {\n    \"genderScale\" : 0.9619232061315439,\n    \"score\" : 83.12402173043948,\n    \"probabilityCalibrated\" : 0.4987460389661922,\n    \"name\" : \"Mr. Fermina Bartell\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"3j19\",\n    \"script\" : \"xcxhtt6ktext4jfi65jl1z4edxjy1f\"\n  }, {\n    \"genderScale\" : -0.3848661296961735,\n    \"score\" : 15.387404335633025,\n    \"probabilityCalibrated\" : -0.32156400178846667,\n    \"name\" : \"Karey Hand\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"5325\",\n    \"script\" : \"s5zel1no4y7nkp4l6zdn4w135x7nxvo2el3p5kjmim6pi0t23lrr3ohan54hf130bxo7468coijmkquxhc9zf0hxaw67zhbd2s7z2eszewfvnsal3deschmuna1\"\n  }, {\n    \"genderScale\" : 0.7406796083854634,\n    \"score\" : 75.68959450266969,\n    \"probabilityCalibrated\" : -0.6426880582349777,\n    \"name\" : \"Christian Kling\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"1700\",\n    \"script\" : \"l3sfvxw7sfjrjnl7end9e21d5btmcvl83rahz\"\n  }, {\n    \"genderScale\" : 0.751842296021145,\n    \"score\" : 46.877734951011895,\n    \"probabilityCalibrated\" : -0.28488257225816827,\n    \"name\" : \"Evonne Ullrich\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"0dn9\",\n    \"script\" : \"aqbiokar0sdjxfsgm5hcy1z54ovrt3tb268s4mtv6eqf4vavad90hmy8k5lxwfz2o8ljjx51wv57c02bstgky0sgu7y3i6yl6b3h7l2auvlpt20xbdmt99w4mavrbdg2zs9xlggch6jbbi3gkkatdg8h49\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8601eb03-a544-402f-a8b6-7976263bfc9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.333698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6e87a725-9313-4d50-ae43-a24570e7c899",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 403",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Alonso+Thompson",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "6e87a725-9313-4d50-ae43-a24570e7c899",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.332746Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    }
  }, {
    "id" : "9d66ea1f-eabf-4d5b-8926-0d8e41c831b7",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith - 401",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Merlene+Huels",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9d66ea1f-eabf-4d5b-8926-0d8e41c831b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.332695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull"
        }
      }
    }
  }, {
    "id" : "c916cc96-1262-4bdc-9c6d-aca7cbaeecef",
    "name" : "Infer the likely gender of a full name, ex. John H. Smith (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderFull/Louvenia+Raynor+PhD",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : -0.43078181705076557,\n  \"score\" : 45.080685826417735,\n  \"probabilityCalibrated\" : 0.6377249995363174,\n  \"name\" : \"Miss Kendra Greenholt\",\n  \"likelyGender\" : \"unknown\",\n  \"id\" : \"i92h\",\n  \"script\" : \"nguv1sf43dbo4i3wx2lc8utgz7kbzna693nk0i3659cn19d9pz464zo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c916cc96-1262-4bdc-9c6d-aca7cbaeecef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.33263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderFull",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "9839d424-1c4b-4cff-850d-dcd0926b3df1",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "9839d424-1c4b-4cff-850d-dcd0926b3df1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.332364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "6d041114-18d4-482a-87f2-2f5cdcb9e100",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6d041114-18d4-482a-87f2-2f5cdcb9e100",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.332349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "884c2ddd-34d1-496e-bffb-96229bc784b6",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "884c2ddd-34d1-496e-bffb-96229bc784b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.332333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch"
        }
      }
    }
  }, {
    "id" : "4fe095a9-67c9-467c-a603-9f90e779b746",
    "name" : "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyinBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Tad\",\n    \"genderScale\" : -0.5651986412383869,\n    \"lastName\" : \"Hahn\",\n    \"score\" : 85.8181385492337,\n    \"probabilityCalibrated\" : -0.7797297436944841,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"ui84\",\n    \"script\" : \"xmp8zbdbxg1l4kqofctads54f7bb7t318vqv0tku43ed25i82keffam6gb59vi456vbmvfdg37nxi3ghlqksgm713hd90\"\n  }, {\n    \"firstName\" : \"Ira\",\n    \"genderScale\" : 0.8583319661109119,\n    \"lastName\" : \"Nolan\",\n    \"score\" : 68.06693630481094,\n    \"probabilityCalibrated\" : 0.4293015658056494,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"5673\",\n    \"script\" : \"wc3pwy1k85t5rqibbchvl828r7bpd29u9a61kaydhovawe71db4lohqz9wxiyd3ocaiurfbn2tyhae2kc5939xx4eer49zc9ffmierdl793jcsbkc7tp3zfcd9c70h2mxijb530stgpogmu2xg4n8v1a2tcb5y4qffgn4w1zfal8cazls\"\n  }, {\n    \"firstName\" : \"Merlin\",\n    \"genderScale\" : -0.8928701608549687,\n    \"lastName\" : \"Graham\",\n    \"score\" : 7.661700390375259,\n    \"probabilityCalibrated\" : -0.6020413853372604,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"60j6\",\n    \"script\" : \"886uly3xb3k0wg8qudtm9f2nasmpgjqy51cpokb9u7k0rgbez8idnq2urngd99z33ses9h8enrh9b4vkw8htql1o4fh8w1l3zmz8q9retayfn5vgz1poyjdp5yvyur\"\n  }, {\n    \"firstName\" : \"Dana\",\n    \"genderScale\" : -0.9982685972748413,\n    \"lastName\" : \"Donnelly\",\n    \"score\" : 77.0509945876512,\n    \"probabilityCalibrated\" : 0.16674418184208295,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"4330\",\n    \"script\" : \"hk6ztrqbcrxjntk293oygynf1774h14fme1n2bnpu6i5yqtrxedwhnt6xk\"\n  }, {\n    \"firstName\" : \"Shavonda\",\n    \"genderScale\" : -0.861659792670092,\n    \"lastName\" : \"Stark\",\n    \"score\" : 25.35650853670993,\n    \"probabilityCalibrated\" : -0.19831381716603547,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"967q\",\n    \"script\" : \"8seudgbtaduyv8677zytqxj030hy2x7mn6npnqq5hrcayi1q235po8m487bvj4nr3acv2n8ria8q3ck1szlhcv0e9vw60lxhtm1nw1w818zxo8pcm13mm9akbkk3rijhgoemapil7ck0vvazs0rvx4xgmgi91\"\n  }, {\n    \"firstName\" : \"Treasa\",\n    \"genderScale\" : -0.12389319089452155,\n    \"lastName\" : \"Rogahn\",\n    \"score\" : 44.877462520173225,\n    \"probabilityCalibrated\" : 0.3765536473405151,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"8wlf\",\n    \"script\" : \"o297uhgdq5imlawb18kqxypjqz0c4nqluesilenp8k27hdvjhyx9lh7up61pmz1awzzv83lfu0\"\n  }, {\n    \"firstName\" : \"Ned\",\n    \"genderScale\" : 0.0694493241619285,\n    \"lastName\" : \"Cronin\",\n    \"score\" : 70.53143236378186,\n    \"probabilityCalibrated\" : -0.8302721061661482,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"2797\",\n    \"script\" : \"rwszz4bjzpslip\"\n  }, {\n    \"firstName\" : \"Mckinley\",\n    \"genderScale\" : 0.3309965017883625,\n    \"lastName\" : \"Wehner\",\n    \"score\" : 63.09644161298114,\n    \"probabilityCalibrated\" : 0.14405950043894555,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"02c4\",\n    \"script\" : \"q82h6n7zgzpwhy1zsip1zm8bu0ry4kt6aesjoh2wz4zdd6rowzswqx28zd37hs84c6doeitcuu46lnewmi313eivaqwiqqovva\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fe095a9-67c9-467c-a603-9f90e779b746",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.332297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyinBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "14c0b4ab-8a63-447f-8b69-7e4f8bb93787",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/h72tyk8rb1ll6c77l7hz07grsm5nn31mlqqszzezaxl6og/n44rk2tp0idv5jylhdsy83oj6pxgk42810ucfnml09xduc2dp9khgcuwx6febdzgaqtnw2itua6d3dn9ukxngfemo3rwfwg18omqg1qjkwbyfndmo2cotbjedzia9pw6lq4aj36hxc92vdcbhrd0rkrn8ws44hrtgqdvhgb7tto3vb",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "14c0b4ab-8a63-447f-8b69-7e4f8bb93787",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.330932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    }
  }, {
    "id" : "5f977f0f-aaa9-4577-a9bb-4754d45bc77d",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/etzb36c3763weu55o8khmla6d3znakpnx7zus5eacrn7m3knjdraypz5byyetpktq45inqu37x2nt8859nqwll8x5kb1dbmsjtyt8maeto/13eebbaqovqev6pzh4i5ou2pbx8f5i3y45dk50kt2ntzdyw0p3vhv6wjafe8s8oz94oursjyj8ixirnr",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5f977f0f-aaa9-4577-a9bb-4754d45bc77d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.330891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin"
        }
      }
    }
  }, {
    "id" : "731554a6-2ad1-474c-a286-a2c766c1a7ee",
    "name" : "Infer the likely gender of a Chinese name in LATIN (Pinyin). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNamePinyin/tsqeb47hltbcopwl1skcmbkj2c85ns12xg6ngqidr3y17z37yx2j5i4qaxqqch6fpm1pmqwexgto8kenera2epdd50vsh7piptr2s0121zd69c7ksev52711fenrl1w5x6o03c7jmpduxa0yvrufxuhnrj/e6eaa1w7xk612zw78mki62pgnx5enitkcoztv9u30mhphafgr8t7z7j",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Jason\",\n  \"genderScale\" : 0.2855717748684572,\n  \"lastName\" : \"Rogahn\",\n  \"score\" : 47.327351030022,\n  \"probabilityCalibrated\" : -0.10088568557629074,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"x333\",\n  \"script\" : \"vzb91h400ugx1walx0wx0u7xioyl44tysyqdfbha71h5tbmq1b8b1vuzgehlb9kcgvo2ft4w22amh7i6q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "731554a6-2ad1-474c-a286-a2c766c1a7ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.330836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNamePinyin",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a9e4d72f-e834-4608-a87d-40d9925fe61d",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a9e4d72f-e834-4608-a87d-40d9925fe61d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.33056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "cd49e316-c436-467c-8cd7-822b179e8318",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "cd49e316-c436-467c-8cd7-822b179e8318",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.330543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "ea2ccdb6-c2f3-4fe7-ac58-d72029e556d3",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 - 400",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ea2ccdb6-c2f3-4fe7-ac58-d72029e556d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.330526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch"
        }
      }
    }
  }, {
    "id" : "e0ce56af-4a71-4038-94bf-f29314aad81d",
    "name" : "Infer the likely gender of up to 100 full names ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseNameBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"genderScale\" : -0.10757228186405943,\n    \"score\" : 9.791929378328756,\n    \"probabilityCalibrated\" : 0.7484004711281558,\n    \"name\" : \"Miss Vivienne Willms\",\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"va6i\",\n    \"script\" : \"zxs1wppr81okvztu08l40lkl2wo24f66gjxfcysdonhz7ctatmays\"\n  }, {\n    \"genderScale\" : -0.8310754368443216,\n    \"score\" : 74.00352782339279,\n    \"probabilityCalibrated\" : 0.30725284141903253,\n    \"name\" : \"Jessi Rodriguez Jr.\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"ht50\",\n    \"script\" : \"npxvmrgusiy3jldi9e5ft6mt0sjlb63o1hs8r95ek2h6wd2s9mx0c3rh2acyr90hcj62x6n46g1nfvluon2b6eyukek3yzs08bt\"\n  }, {\n    \"genderScale\" : -0.8245426377882685,\n    \"score\" : 6.914194327098311,\n    \"probabilityCalibrated\" : 0.0494142638806403,\n    \"name\" : \"Damion Wintheiser\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"x9a6\",\n    \"script\" : \"4ygiakhgqo54hht93pdgdm22w6ef9tlp8wef0sbx526tca84fq4b236qyoqe6sps4y7lic6xtci0vgm3tqg2wjlyi1cq8ihrc5y5y9mivdyq2095xc04zzjiyhrvhdxkx0cy1j3aey6ikmbhgwgxnxpam44wb7uifj0lq2innh1pb1jp5n6uolhmhzfub\"\n  }, {\n    \"genderScale\" : 0.9756348848008425,\n    \"score\" : 84.73571849316349,\n    \"probabilityCalibrated\" : -0.5801100440466969,\n    \"name\" : \"Kelley Walsh MD\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"v39m\",\n    \"script\" : \"un4t0v3k4orvftdmqdta39074wxd66phau1czuxnlsed5lsqv6vu940r17156j9i8exam28o\"\n  }, {\n    \"genderScale\" : 0.25179773614522927,\n    \"score\" : 70.55178621622996,\n    \"probabilityCalibrated\" : 0.07047535132104832,\n    \"name\" : \"Mr. Genna Lesch\",\n    \"likelyGender\" : \"male\",\n    \"id\" : \"dfr4\",\n    \"script\" : \"lbb8n7vijw0qiuwgc90vovro2scxhwh\"\n  }, {\n    \"genderScale\" : -0.5493399301873909,\n    \"score\" : 22.556348018842854,\n    \"probabilityCalibrated\" : 0.5626541081326832,\n    \"name\" : \"Ward Mueller\",\n    \"likelyGender\" : \"female\",\n    \"id\" : \"alr0\",\n    \"script\" : \"lrtt7gxtfh4e33co9ru4ykku6unv7gq9kr97tvdkxnkvh5t1g4vgtmngw36opcwvw8u16l5tlff5t3hxz3gdo2berr9wpujqins65o0hcywbijsge71f08ycgwxmfcqyi8vzrmsrn2k\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0ce56af-4a71-4038-94bf-f29314aad81d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.330487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseNameBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b8fe84e5-43ed-4924-8c54-0dcfd6cf7772",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 403",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Ronald+King",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b8fe84e5-43ed-4924-8c54-0dcfd6cf7772",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.329541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    }
  }, {
    "id" : "1de57c97-ba20-47ad-99d7-4cb3e3092745",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 - 401",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Lannie+Rowe",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1de57c97-ba20-47ad-99d7-4cb3e3092745",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.329482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName"
        }
      }
    }
  }, {
    "id" : "4c298fcb-419b-4e68-b910-9fa5546c6dcc",
    "name" : "Infer the likely gender of a Chinese full name ex. 王晓明 (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderChineseName/Rick+Rodriguez",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"genderScale\" : 0.3695758166899721,\n  \"score\" : 96.08610196752039,\n  \"probabilityCalibrated\" : 0.08492370912550995,\n  \"name\" : \"Rochel O'Hara\",\n  \"likelyGender\" : \"male\",\n  \"id\" : \"x089\",\n  \"script\" : \"1twj5tkbjztapohlr3jnjoguajloxl94ino45eygqchatqh8xxajfqeoa6ludza3xj3cd7g0hn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c298fcb-419b-4e68-b910-9fa5546c6dcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.329404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderChineseName",
          "schema" : {
            "description" : "Classified genderized names",
            "properties" : {
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The input name",
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2b525070-0b83-41d7-9ad5-60bc3fafe07a",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 403",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2b525070-0b83-41d7-9ad5-60bc3fafe07a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.329133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "5c2eac01-fb9f-416b-b922-bc42a58ab468",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 401",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5c2eac01-fb9f-416b-b922-bc42a58ab468",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.329118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "5a3e9cb6-5548-4b87-b547-a00c34020694",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. - 400",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5a3e9cb6-5548-4b87-b547-a00c34020694",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.329101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch"
        }
      }
    }
  }, {
    "id" : "9ffc9022-18b4-4721-9403-2187820b9e87",
    "name" : "Infer the likely gender of up to 100 names, detecting automatically the cultural context. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/genderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Hunter\",\n    \"genderScale\" : 0.37839518964243646,\n    \"lastName\" : \"Wilkinson\",\n    \"score\" : 34.51855814544091,\n    \"probabilityCalibrated\" : -0.8354407536632695,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"650r\",\n    \"script\" : \"zcnthkltzwlri3deusr3jlnomukqd1fg84trlm1irvqnzi3dkl1da3twqvfbk2vqtmw7j6yi8axmc5tz86c8w3nlwpy1bond\"\n  }, {\n    \"firstName\" : \"Bryan\",\n    \"genderScale\" : -0.32918117241906075,\n    \"lastName\" : \"Bins\",\n    \"score\" : 3.4531081913899198,\n    \"probabilityCalibrated\" : -0.2939583474702143,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"0167\",\n    \"script\" : \"qnwi76tqhu7lq94h8rd9secsrly0xw5nlli2t2\"\n  }, {\n    \"firstName\" : \"Stephen\",\n    \"genderScale\" : -0.7624252064079282,\n    \"lastName\" : \"Leannon\",\n    \"score\" : 7.7443587481256575,\n    \"probabilityCalibrated\" : 0.8492147399541559,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"4918\",\n    \"script\" : \"ngwlfh9ysmadym98ce\"\n  }, {\n    \"firstName\" : \"Huey\",\n    \"genderScale\" : 0.029727859459232286,\n    \"lastName\" : \"Goyette\",\n    \"score\" : 40.26301433659286,\n    \"probabilityCalibrated\" : -0.3285189547659848,\n    \"likelyGender\" : \"male\",\n    \"id\" : \"vd5l\",\n    \"script\" : \"1z6dzxdkzliumh\"\n  }, {\n    \"firstName\" : \"Daphine\",\n    \"genderScale\" : -0.998245278362585,\n    \"lastName\" : \"Kulas\",\n    \"score\" : 32.897419329074765,\n    \"probabilityCalibrated\" : 0.06628273647344574,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"96r9\",\n    \"script\" : \"ubrkpjqz8pw9ojpdygu85msd5jo3bdy0sm4ek19m5jog9av210eqepubuey8k6hryjgdh63zr5obhmh5qkgwsd05ireavla43zg7xznvp6ek39mgsxsim67zopuov6wesldy2qq58ywdy1a3oidroh\"\n  }, {\n    \"firstName\" : \"Soledad\",\n    \"genderScale\" : -0.326402464146077,\n    \"lastName\" : \"Fahey\",\n    \"score\" : 40.20851543552235,\n    \"probabilityCalibrated\" : -0.6162598067487648,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"6rq6\",\n    \"script\" : \"2q0hbl81s33bs5srq9koww1ks375df8avlo68atzjp4ywrzoqgoqt14qj8qt8sbsruh7t90lbfp\"\n  }, {\n    \"firstName\" : \"Son\",\n    \"genderScale\" : -0.5458603062386118,\n    \"lastName\" : \"McKenzie\",\n    \"score\" : 60.282267575650906,\n    \"probabilityCalibrated\" : -0.8950859896192525,\n    \"likelyGender\" : \"female\",\n    \"id\" : \"h0jp\",\n    \"script\" : \"6irzolphjfl08k01bxof2h4hb38\"\n  }, {\n    \"firstName\" : \"Carroll\",\n    \"genderScale\" : -0.2756996559342202,\n    \"lastName\" : \"Stanton\",\n    \"score\" : 41.11208513488418,\n    \"probabilityCalibrated\" : -0.5811897159511428,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"71s4\",\n    \"script\" : \"gr8r2qhoblpcyuho8x59g8kx7hr6xc77qwokcor12fxm23oy5wf6nlbyi15bf7lcnfsbt9t6elu832h2f3rnnoax7x7agmigsv1nmzloitto5ihnqeqxq\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ffc9022-18b4-4721-9403-2187820b9e87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.329064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "genderBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a list of personal names.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified genderized names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b3530cc3-02bf-4240-a0a3-1548323884b4",
    "name" : "Infer the likely gender of a name. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Luvenia/Bradtke",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b3530cc3-02bf-4240-a0a3-1548323884b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.327727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    }
  }, {
    "id" : "d0eefb9b-c2af-4944-a31c-30ae464ea33f",
    "name" : "Infer the likely gender of a name. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Denise/Fisher",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d0eefb9b-c2af-4944-a31c-30ae464ea33f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.327666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1"
        }
      }
    }
  }, {
    "id" : "b9289fb0-c7f6-4781-9ff1-c109ede6d9d5",
    "name" : "Infer the likely gender of a name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Quinton/Tremblay",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Abraham\",\n  \"genderScale\" : -0.4068726589478122,\n  \"lastName\" : \"Koch\",\n  \"score\" : 47.21516258361325,\n  \"probabilityCalibrated\" : -0.17170708276731084,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"9jrk\",\n  \"script\" : \"hqt0pxtoz1nvo98b6f5jfvbxdvwy75rscxw3jr6tsti73i0w35ksd1nbuj9irq1vpgw4lduly9er5rodnd2nbcl23synxq9spaoga3y0uqw64uxnmauu7i0zrh2ax174\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9289fb0-c7f6-4781-9ff1-c109ede6d9d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.327595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender_1",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "4fb36d5f-fbe6-4f6f-8c2f-0535db1ed583",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 403",
    "request" : {
      "urlPath" : "/api2/json/gender/Elenora",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4fb36d5f-fbe6-4f6f-8c2f-0535db1ed583",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.32731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    }
  }, {
    "id" : "aca68878-3827-44d8-8512-bf0da667609b",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. - 401",
    "request" : {
      "urlPath" : "/api2/json/gender/Michel",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "aca68878-3827-44d8-8512-bf0da667609b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.327263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender"
        }
      }
    }
  }, {
    "id" : "4b2d99f3-3b8b-4db4-98fd-cc1d5161ba95",
    "name" : "Infer the likely gender of a just a fiven name, assuming default 'US' local context. Please use preferably full names and local geographic context for better accuracy. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/gender/Trula",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Jonelle\",\n  \"genderScale\" : -0.16448869107095843,\n  \"lastName\" : \"Murray\",\n  \"score\" : 62.097123076118564,\n  \"probabilityCalibrated\" : 0.44948307003216503,\n  \"likelyGender\" : \"female\",\n  \"id\" : \"eu3j\",\n  \"script\" : \"fiwy2zzpqzufpp2v2qt2pa7qw6arlej6xq0w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b2d99f3-3b8b-4db4-98fd-cc1d5161ba95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.327202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "gender",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY gender from a personal name.",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "genderScale" : {
                "description" : "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "likelyGender" : {
                "description" : "Most likely gender",
                "enum" : [ "male", "female", "unknown" ],
                "type" : "string"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameGenderedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "87bc6cd3-7de5-456e-97e5-e9f5ee096036",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "87bc6cd3-7de5-456e-97e5-e9f5ee096036",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.326917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "7dffcbe5-7bc4-48d5-98d9-e8fddacd9986",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7dffcbe5-7bc4-48d5-98d9-e8fddacd9986",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.326902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "31df3fba-4d7b-49c5-8a75-2dff05c36df5",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 400",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "31df3fba-4d7b-49c5-8a75-2dff05c36df5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.326886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch"
        }
      }
    }
  }, {
    "id" : "38840015-9a4e-4f0a-bf83-3b4cdcb1bd8f",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diasporaBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"firstName\" : \"Annemarie\",\n    \"lastName\" : \"Parisian\",\n    \"score\" : 92.89768335551966,\n    \"probabilityCalibrated\" : 0.13405709962458112,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : -0.3238857892749123,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"szh4xpvw5ot3wwegz66fg7eh9uj83prkkxxp2jh1fgdddw74f4ykzd5uwtrszl5u54jrbomyr7zxlt392hv4x6cwm94pvopfr93mudovtoo4r7kfgezf2kglo0znoezvpv1b7t2wsz0lf2ni4egey4szh0ip9y6yh1lxse\",\n    \"id\" : \"g4rn\",\n    \"ethnicitiesTop\" : [ \"akrovpmhai51n9k\", \"ns2z32czeu4iafy16v9vbm4cd4ny26twjiw2es36vlzt3h19a1sbcowmlzui7d2o1kwz964468mv9l9du83ukfqkl4un7uoldlvmyzh0db0sgc8hnw6ee\", \"slyyhbe5ocb4oka0y9tt32hqh24oglk6qiuigv9iiq33uprn18gx1n9m6bqbkj4du9ln77vy7bv3gy6risk84mx8fmxte8f0jrvw4imwdwbx3rn5z99o9io5zn6nencexjctmgn9ddfrmdktjq3uk4nl45avll14zr4\" ],\n    \"script\" : \"9vp0ggl72v745yptef4dinvm1qf661eanjlcpe632bxlnyrhdryvc9ilq5wntq4fgpp8xkey0mhbpy704cfuasjw7o1nzb45y1nnvevq2rw5nj3qrz3y9mhzqgjtlq0ovui6s8ad3edssh9zaiydpp365s4iq49ptcu\"\n  }, {\n    \"firstName\" : \"Neida\",\n    \"lastName\" : \"Purdy\",\n    \"score\" : 73.23937742115434,\n    \"probabilityCalibrated\" : 0.816120429304976,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.15913952205599657,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"wjsm10nttfkn6u1van3jj26dhzfyxkyjaoj3yaqz6l8hjhp2io4qbhim3h7mj8ij59o9uusp98msc7yft84zgbzvsnbmn1wf0ko3sr145mto4g6qt7if5soqw1uo1eoavgtd5mwwum9mo3r3cw3572f8vgge83qtux3z5f2xdv3x\",\n    \"id\" : \"9m92\",\n    \"ethnicitiesTop\" : [ \"joq26sp3d1dxdwp1v45aq5lfg6msuu3vzkm5kpyrhr1n9kurryk3623q2btrpd6zeo1hvv\", \"pgn4ble\", \"5blw5zv0tifiq1a7qzf5m8jt4oqa2jjzn9sakxd1qbgd03f64ajdnbozbbhzsmu\", \"i8xwpkl4hasn3amhp1gll7vhc71cne5aj27hqpdq2jtsjd61k0ji76fu8o4u0hbg1rwyigzrikihly3aq0mk9h4jwj8rmynoso77ohsa8qybfjc5vrekzhf5hc5bkzx8og4cb8c7kcym76sgr6yb4oabedoisa5\" ],\n    \"script\" : \"5mfpcwmde6xny31x4up1cvg433a6t81raosyjk718imm345pwj9rovvbhcyj4fzympj\"\n  }, {\n    \"firstName\" : \"Emeline\",\n    \"lastName\" : \"Johnston\",\n    \"score\" : 59.55775492905659,\n    \"probabilityCalibrated\" : -0.23978697662415804,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : -0.46861425076925256,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"t5ocemdq5uwbgv9mt96lwdg7wfptbhiyv98808qboi1draf953iu6pcoll690\",\n    \"id\" : \"nt95\",\n    \"ethnicitiesTop\" : [ \"an0apgjw41x42ghtrv0w8s2z87zwbcs7yo6lgci9tk4p0nvay1sx6r3u7apbvqrramzxmhvfjdfs6scekkv244zxyttrsbuvmoj7r70w2vli33jcsawukv7owzrovgq5zm5rbt7yki3\" ],\n    \"script\" : \"06yffn4ew28l5h5gj5kewnghli8b44a4afxrkp3zwdtivdl9f5rzfhkk30vvmx5v12xvbdhlobo13p9jbh46y5xh9fat0oi58ghi2la2zgdb9x0ak987zpvcyv1lj2yj4gi\"\n  }, {\n    \"firstName\" : \"Wesley\",\n    \"lastName\" : \"Parisian\",\n    \"score\" : 38.927212976625356,\n    \"probabilityCalibrated\" : -0.13227440491840414,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.8063064432131917,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"dn5hk6j2tzvie66qmrpne83t4x3gqpob72ap7mndtw67pyze4l75t7gciuigwhdvoc7jgthnttmvv7wku34j40c0iw4hwvfdlwczqr5m7q7i43kij7r9ghm15kdr8ba46v9g7t084ypj5wgbluzrr7jdfthha\",\n    \"id\" : \"2d07\",\n    \"ethnicitiesTop\" : [ \"2rnfr31jfhtrdtut479k87qdbcqkkkmolhev0jrvce23trh2i0mmgdgwjrmhovqeu\", \"wex4bedm0y75mxl\", \"b279xw7ra3jbmz5opswv5blc1y5gg0pko1x2bwmzyv1pmzgmkub2hhh383qnj1589f7fq9j6x39dw6d0mp5897wrgnuqaq1y90imzwtpn2bkxjtvcwm9xsyh0kzxugauaoqn20wjvaagqjnup56l0s35dn3ooenqheioslk91\", \"2zaywycilv1ps45xqdbvao756ok249bd4iwcn20kkpkpzsdjg09fd7eisheh86kynadbej6zhna3ddkbg9ljpc0ul26wac1cuuc8r1y9374g\" ],\n    \"script\" : \"7z7i1vlwd0d2opw16ollccjj4mqqycwxchc86anj9a0cjiv88c2\"\n  }, {\n    \"firstName\" : \"Connie\",\n    \"lastName\" : \"Wyman\",\n    \"score\" : 43.50290068972266,\n    \"probabilityCalibrated\" : -0.4963027439047716,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.8237854496613537,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"6716jjr5775l0ohbsuco051ko5y8d46ljyvomog39ijyy0ebto\",\n    \"id\" : \"412w\",\n    \"ethnicitiesTop\" : [ \"jys3pzh1c6h4u070bzdv971ylqw9tmy9dohcbc3lks7nh70h\", \"1i67jmf61a7hcusykg1m26mjbjp7i6fplw4s879ucjci45m\", \"97ruxt27an4zp53e410m33gx692j3rtfbhuhogsq3r6o7yloiyw5bdanup0h18eibu0ebeqtzg4syw2v1o8guc2nvrfh7bwqm6b9nk9au8mzciluw4cg0tqr57blk5lc65pivpeq4pueuxhs74ls4zkkd6pr9hanx426\", \"py9t5mipmmcetq601r7qzccqpfwck6fkguguox9mgskl0peoh74nba7y5jjbfis1mkcq60xamk29e0tmpjd337iqpk9pt5ei5vitje\", \"wwtv6d7colc94pwjlrvieipexyrylss7faobsfiryqdum1bj539qr73cw006zpb99omkas85vtuhc6j769g1112wcdn1ql9hlnndm1ebzy061egsa6xj0xkdlqhtarebv3kc5gtorcf9ybax36bnsy87oqtkljq000lzu\", \"0qoccjk8grvbx91so2ur01r2xbpd1v3tiq2m7q7nsygbxgoaemci91gdt8ozoir9hjqi3l6e570xq3m5zdvwt8xt51fuu\", \"l2650afm1fjcx0z88rrgzpkvp1q2gnvz3h\" ],\n    \"script\" : \"pmndnftb2qqy3m2ax5cyg80edwzojfqpd090ghfj1zw20368j7tgzd6lgpnz8b2fm77f9tf2h1r1urait5c0v1gx3qyssku6tgksai5r82qcda18yt5fp5bmrnzqzlo4lmlvzatkmoq7w3aiehnjx9un3dvyo8z7zd21bbf4aq7p9vrwatro7ssuwzpo1zn\"\n  }, {\n    \"firstName\" : \"Avery\",\n    \"lastName\" : \"Hilpert\",\n    \"score\" : 60.21364934595715,\n    \"probabilityCalibrated\" : 0.33455172277519707,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.8785579391211835,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"4aejm75z480a2yq\",\n    \"id\" : \"1qs0\",\n    \"ethnicitiesTop\" : [ \"v8dg9xca5xtals934nd7kwkgnpdln87k94jkt0dohx62j7a21ozzgx885eg9phud7plg48kaqy9zuofidhrk26weacn4praqpe\", \"cvfp40xja09pr8k3w19njzw2wjw1dk58jvp4hpi0azaxf8hor63zwmiwnco6vcfs2u40113n3mxv6xgq3wx8cg6lfq3q974lolas3tv60x2u42wvowqdgfpkan0lsks6iz8hyk53q8yfy1yhvt7r4kxnzilcgwbfbk5rfw6gc4phd44qr4g5w3kg\", \"wazlzxg9cc3pidjych7wj149tyjk3dvem17g76irwjo8sgio6e98hd0f9ngx5j7x3\", \"wa1ouba0o1r9jarzu1tgywvm0gqb2f1ye74z8y8p77obs3n5j9dnv770l98ql5ue5ya5q78cl4md2m1ytcqbjuca\", \"8kdekjhp845w75fcnts39n8dogugzsdylbhydvjasdzzapc6n8js2ee63wgv309i4n88d9trnxp3l75aufflt3t9fx481gkr\", \"qemm60wie4jsofxseuf812jas7ibda9vfpnls8gqfumquptsmvqo0ipe47vx9mj1bex695tnzrj81l70zow7d0ykevczga12uksd2p7kof55tdzvm4o7rwexvf93m98qxgju7yql59t8qn53hdr2bi5w1s1jabbuz5ulknr3ru2f\" ],\n    \"script\" : \"wdoxdy46in2fjet147lsepzv65y9noni\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38840015-9a4e-4f0a-bf83-3b4cdcb1bd8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.32685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diasporaBatch",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "personalNames" : {
                "description" : "Classified diaspora names",
                "items" : {
                  "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchFirstLastNameDiasporaedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ed0997fc-1546-4ce5-b481-bd0bddbee5e4",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 403",
    "request" : {
      "urlPath" : "/api2/json/diaspora/wszg75315ky06j5h3hdmehnxr4majrnm9z3nps77wwq36l16yfsc01m6yulv1jcsslm4hh0sw9v7uhz6y29fowgfbqka55w3ql511gc2bd9niprdjek3hwxkhdm83rk3rxx2t5i322cj7zgbp79x4fot2hf872swa1sinv0p1zsc887gj57og9mussbzamj/Kristal/Nicolas",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ed0997fc-1546-4ce5-b481-bd0bddbee5e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.325564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    }
  }, {
    "id" : "40072315-1dae-4573-a575-c3785d052267",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) - 401",
    "request" : {
      "urlPath" : "/api2/json/diaspora/sfl3wzokt5c9h584n5goawxt17bynitpanv641wg180hk9gtm72/Jesus/Medhurst",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "40072315-1dae-4573-a575-c3785d052267",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.325492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora"
        }
      }
    }
  }, {
    "id" : "983444b4-b808-4379-82d3-9f87339b611e",
    "name" : "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/diaspora/ymod5itvlvav1v21yuaw626u3kv0xnc8h7iyjcm6ytjoosmoxy7gax9wvuh84p7o1kjnpckmyzox4r7zgdwjre6fzvtwm3f0fpicbk22lwr8td/Leonarda/Gerlach",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Jessica\",\n  \"lastName\" : \"Wilkinson\",\n  \"score\" : 3.4413026471979635,\n  \"probabilityCalibrated\" : 0.6718820612762988,\n  \"ethnicity\" : \"Chinese\",\n  \"lifted\" : false,\n  \"probabilityAltCalibrated\" : 0.8389944558605182,\n  \"ethnicityAlt\" : \"Japanese\",\n  \"countryIso2\" : \"yr9fvy0z85ooz4lk7pw8wbmom1w8avkudigl49ezjgselylt50m5lrkc4f2bma3ngh5ecrpg\",\n  \"id\" : \"6u4c\",\n  \"ethnicitiesTop\" : [ \"tdvsyjotc2h5ek4fx5sh9f1fsd5kbq9rbnyk1yopv4lo1afi48mgi1luczdmq21ovl1kdf9wswlx4tn9uazbwnryc63rm1fzaz\", \"2rc2arzalb2l24bcqbtricizyqnrkn4as7c8if4ruowzt7vbk7f3qn0zk9f8dglqwfmq4f8vunvxvzqtb2x8fs6bjhzsao2ba9x89zppdtxb1bb3\", \"sf1luzqyhpizcvswjg4h27l9m9jg349c7elz8rcph7p6j9mmvwm9l34mr6hvszoson66scgq4w6ih04o6\", \"7r8qlk542roamqsg25jjbbi87qs47saqq9e4206ktul1be17vm4lkvcfaf1cqk3832e7jzzpa7wfpmb1cun6m2pci9bdvav24cbsj5o9pz9ckem177yja7ru2xd94dm9jw\", \"7q4ri5y57pv8mvzatii43mj7wt6v8790hosvzsdbzuvhcqfhn6a2ioma8irkwv2vn29ghhyfgkq3nozgqndbsuelevo47o8ncl7hndpytkjugm877w\", \"2hp82e1r74s2\" ],\n  \"script\" : \"0xa0hrrs4i4wnk821cn8vspxolba1irkdothcellp5di2tp80oqvb8lrz7feflm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "983444b4-b808-4379-82d3-9f87339b611e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.3254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "diaspora",
          "schema" : {
            "description" : "Represents the output of inferring the LIKELY ethnicity from a personal name, given an country of residence.",
            "properties" : {
              "countryIso2" : {
                "description" : "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicitiesTop" : {
                "description" : "List most likely ethnicities (top 10)",
                "items" : {
                  "description" : "List most likely ethnicities (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ethnicity" : {
                "description" : "The most likely ethnicity",
                "example" : "Chinese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "ethnicityAlt" : {
                "description" : "The second best alternative ethnicity",
                "example" : "Japanese",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "lifted" : {
                "description" : "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "type" : "boolean",
                "xml" : {
                  "attribute" : true
                }
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "FirstLastNameDiasporaedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "706d0a5a-d62a-45d7-ae4c-d7133eefb961",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "706d0a5a-d62a-45d7-ae4c-d7133eefb961",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.32498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "763e9c9f-be9e-43ae-84ff-05bc71545f8e",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "763e9c9f-be9e-43ae-84ff-05bc71545f8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.324965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "3492ee1c-3d8d-4302-90a4-e7b150d9ef13",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. - 400",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3492ee1c-3d8d-4302-90a4-e7b150d9ef13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.324948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch"
        }
      }
    }
  }, {
    "id" : "7fe01b15-fe5e-4276-b3b1-ce62ee392dac",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/countryBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"country\" : \"Dominican Republic\",\n    \"score\" : 42.82497338154505,\n    \"topRegion\" : \"kd00h4e5sn8jt1fwbcnrwfk75w546ug6lmb46ezpybvf5f4t3nj7yvf4e4i45vzyqgjtt6y6em\",\n    \"probabilityCalibrated\" : -0.7865704613865652,\n    \"subRegion\" : \"8drrustcgpcln8ckva51gdn9dfze5r5x334zxotfpc4e96v5u5t0k20hjkg7myp8x8jaikdlacv7lo1a4x50ux0tvvqpdwtpxsx76j\",\n    \"countriesTop\" : [ \"voimx97b6yo60v3pqzpjx7wnhgs\", \"i7o7oujbdj6tl6f6p48luv2cqjz4kwdyswank8snmvqjljmcot3wi3a805sr2y2b5piiq4w0y89\", \"pheibx4j70m1lr4l3u9o7l3qrugkyxpeyyg89psi5icwudrkudumzc8xlmjcmnzhwgtn3qy7pqyhygoh0z8473oheiw4wtsabaskfgxexfnp6ijhsf6pt9rgzl608vqbudiufe533tsfb\", \"tnp6gb7uzc0y9zlxty68skpuku99ls9sspwzjxf4zp6hlkoq0wx5lfy75ujm0teez9dezaqml0i9rmb0pa41h0fatqr03hhob6jasof3dtqxnoy2lvbux7mvyusm2bkpc0kb71rk7ltbq\" ],\n    \"name\" : \"Ofelia Weimann\",\n    \"countryAlt\" : \"cn54jaowwd19xccjs6hrllqp55v1fklipdf4rvdlfh4cw8s1kh8w2dvoajcogyp6f4ukiv45dvpsrtd7pqvnf7c4r6qeavevfti0z01m3rwcdm6tugmcx7951xvyxe3mh0b7ion6jmlpfly9j0jqj96tp5t5ud6dikq19\",\n    \"probabilityAltCalibrated\" : -0.5664530456948516,\n    \"id\" : \"r148\",\n    \"region\" : \"4zddusba5tszm3v668dmszx8zg0tymq5bu2c7fssv33ap9nejnsqigmekkqc21pjwv9yiqofgnmx8prf0bhik0cn5anfon3lyiwu4vcvkfxq6j3mlaf7am7r4od4bp4m3rack44fqxkkn20fqqawxn4qz0m7bzu8t27p\",\n    \"script\" : \"vs4guyqe5yxf1r0gao26tuo1idaw\"\n  }, {\n    \"country\" : \"Turkey\",\n    \"score\" : 80.94885132713755,\n    \"topRegion\" : \"5dzewcxsxu6wif0g410rbth11sog3139rqtc73gg40wjvenb8ybbppw820pk34317za24z404fbo3nxp4wtdaxfavepvow6jo3pmr8eok11vm3odwm1no95w5udvupfhnp9vwrg7hg01k9ihz65c9wuxww0fxe7tnip5zzdmem90teymhq78r2yfzcwn5j8slzyw4k\",\n    \"probabilityCalibrated\" : -0.676143761088398,\n    \"subRegion\" : \"acee9k23po3q0o5ldi4avgleh6rlwfbjwq01geyjj16f2qz8ge4ch0isbm\",\n    \"countriesTop\" : [ \"k5e8b4iks0pbi97z6tew7hinf1oglm9sd2btdkue23sq0zfs37n99dgjlv76n2g98e5ntqq4i6xzkz6usyrts95w17yk33wtspgizhh5xs833hzgg9e0jo9ms\", \"1ammn1s0582dyc0a9szbotrnwyo0afxja6kl2tevu78kql9amh7hlrsodddosd5fo54axaj40qlf0pt8tjfnsdptt9ufivmcm2lza1myzc4zr3chedmb3p29dywc4mbd76jmb8v5cutmkf5cegxvs9\" ],\n    \"name\" : \"Virgen Rolfson\",\n    \"countryAlt\" : \"vicytmwzczxftacnlyr6xof44lia6agcbmgpoaqg971wl6jrj8ckfuxnk3dug0r13uzc03ex7gtx0r5b5cn00qfvvw7luqu9daqyrw3td622qanolerx4tph1wwuo46gnv4rzy7d2lvwmrb622gfkvvk0eyhzofisfyjog82gl8qu56o0rbb4f1aicz2f19ygbyrjrjd\",\n    \"probabilityAltCalibrated\" : -0.2863939365486299,\n    \"id\" : \"140w\",\n    \"region\" : \"iyjev591ietoo8vcji0bil0o0lxblqwt42dw8l6r36pmbmfhkuyvqlw6h3ad47r3205r42a93kllzi4u73xakopd73dr2z9rztznk9xiwjras7n7ukc4faa1sl1963o6i3ojs0eq54xl53bgrmgkk3sumg2qpv13dtj07oyyutr560jl\",\n    \"script\" : \"u6mt1cg530zajt1etwlseobih72hkewurehfsf8gvj8vkwyrvc51kiv29q2qqhv546qf2xomgbeo1k88sdrqvakjdflsrz1aeqrm3ccnr739yqj2ko0gwgam1f4sdwl6k9dcvjmsw3apv4xsi1hzd8u90drp2xvbows5f1go7hu51\"\n  }, {\n    \"country\" : \"Tanzania, United Republic of\",\n    \"score\" : 37.879137461116684,\n    \"topRegion\" : \"hrd37opems95dms2rxbkrsim0qzbstek284jywtibvqvv8fvaj33cq23lbgmkhwzzxqy3cbec6ff93qcms0nq66ar6v69cbwsyb0ix\",\n    \"probabilityCalibrated\" : -0.32315272952277496,\n    \"subRegion\" : \"8hv0n8v01e66ytltdod05blat9cpb8myq29eo6hj7x8pcn406t7sx2qgz3\",\n    \"countriesTop\" : [ \"g0worlmzl79nny0b31k6z292vb8dk16dopr1gowqpr2g2y9t761wgvx4e5asb7e3w57g3b2szfd12w2rhalnv6u7stbs55pndtbfimvt6si6yvzuqbwanqcbd0xe8qy\", \"tz9v1fu6qmkfkljk2c6a5mypvj4f88tcppwiwdyng21cyun6qs30bdmzufwiuoaw2rztwxra9z0l24xddu2fakhfhjza5jeks6z1lk9lsao2k\" ],\n    \"name\" : \"Ricky Heaney\",\n    \"countryAlt\" : \"s5o90qgez0e2po9okzdnip603eeidrmnnzeb83u2r308p1to9pobfcrqfzk694npwr39w2q7dr3m2vniqcc82lfqwa4hkj4vtqnkv90ohiaen9thh028a27hc7vf0h2cski62zr67tx3kvoh8ps\",\n    \"probabilityAltCalibrated\" : 0.22970633800955076,\n    \"id\" : \"x652\",\n    \"region\" : \"8iziruvt89yd5r1fvko9ztne6wn63koogvxolqmtbfb8hmhbjeeupqes8sh22yskq2gdoheezbpqm1zx13mrtt89fllnlsx9o378a4874i93cxj1wgh4ratopz55zsqkh\",\n    \"script\" : \"6s2przdur632w4o92utt3vimja470rk95nzqhpwajtz215gbx7orkln3aws4r010q3s1f5oua7weubjdcrghf0kyifi392jxkwhwc6qokb9txddemi6owyh92x8oh93sfel8ua72kd48l6eo4tponvrufswado3i461rb7eue2q615vy\"\n  }, {\n    \"country\" : \"Slovenia\",\n    \"score\" : 19.42616766026256,\n    \"topRegion\" : \"ollwqefnxz3see42b9xk8olr7z\",\n    \"probabilityCalibrated\" : -0.17135628610802134,\n    \"subRegion\" : \"s3s1jo2vecil4wpk0606cc9uhmjk0gdgpnibu09\",\n    \"countriesTop\" : [ \"lowqf3mihts9kklhjzeieie3wpbminjuvhxvkwp9psitnzlwtrkae3bs15jbr9d2ul1yzukdoukwcd623zn6eb4weixtmm6i4r881p169s3a1\" ],\n    \"name\" : \"Ms. Percy Dickinson\",\n    \"countryAlt\" : \"75gck67dvab86i23clx6v9mpixug6ucmvrpvj6vl20gzcxplgiwznwjo2mqu97j9o1resapgjx4pmdh2nbq135zn\",\n    \"probabilityAltCalibrated\" : -0.2038566866416951,\n    \"id\" : \"7u62\",\n    \"region\" : \"w8sn6vuf1zmsotvw67io85sniem7p1m6ywkku45subg577t47cef0q6gq1pcjysr7zyq3u7hyy9fn0nra2zly6suom2wdj3ar0y1m9bhvxtfzaortog9xpocggz9toc37wg42de4s4d08yinheh8h7cgasa0v8zvpq90w60i9u8b9sfn3tmy\",\n    \"script\" : \"f1g63izt9jkods84he4o7n3t3dh95i3xyesuqpyfttzdidvl2wvqtfnw89xl4dufrnjztg9k0419xq0pnvyxedmbnfa6zpxie6gfl6hbnb38l4i5tzin2wccz394d5c8fw3qtkqmttoemqa0el6yo5p97edoj3vjuddy\"\n  }, {\n    \"country\" : \"Lebanon\",\n    \"score\" : 91.46848852718568,\n    \"topRegion\" : \"ejm8zmo7lcyuhdavvq0ghpmla5lrskk57bkmygjv5jzzqxrx3o6680815chci0d52y2l71mc0uw0f328y5x1g2gs1fwlm119fn7bb4kmqjpnf7wxtao0help9sggjtjsdey01n1dzoebqorwg4pfphgmfe7p104gpfpn5qakyob1wnv1ryn3qyx6lt\",\n    \"probabilityCalibrated\" : 0.48188168241946383,\n    \"subRegion\" : \"bnhpjnq6wjpwulhv4e9k3jiifv0vjp2megtvl6hptve8x1l49q0ipsyexwo1glgapobtebysm72e8re0m6aeq9po6blrnl4lqq7oqw9ef2th4filpjxljc6f8rs9o9tpnrl8y24f30s6w0yiwk87reo7t4fvth0vm2mo5dlv0lyh5gxnp2wvn7yk\",\n    \"countriesTop\" : [ \"xckhe7q251y137d6gfp2brsuqafo93oatdp1b8mlf4hury48csz4mgsebndzykhky30mo6e6kf2h8l4k4xwpa2x9o5fvprdvowgcdwdxe06euclzyuspckgd9ntjums3geasdktlbh8mo6uhos4ps7uozz\", \"3kbscpjl9u1mmpwgne4ndkyah8p02nm5anfbto0pitityjinu76lpnze9h7fgglsztsi2fw1dpx5sb37egbldyo\", \"wgw5apmq79nmfu7wqzwzqi53jqg\" ],\n    \"name\" : \"Leslie Turcotte\",\n    \"countryAlt\" : \"tx8h65668\",\n    \"probabilityAltCalibrated\" : 0.4931730242383401,\n    \"id\" : \"749i\",\n    \"region\" : \"bxb2h5r7ig2d6abz7ibastqnxallyf7jcngehjo0fvdgdytqljus60jai5cnkpvxxc3fgkqfszqeab0bd1h0v8r1xq0cutivtg\",\n    \"script\" : \"8yxngex718yxr5wnszxnlj1fhrbntbfj0jbn67ht9n4pfuv9zrncylkei1c9bukpmy0nrc5wjwlio8zxxhevpb2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fe01b15-fe5e-4276-b3b1-ce62ee392dac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.324903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "countryBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Classified geo names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameGeoOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameGeoOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ff22f9ec-ac7e-41b2-893e-2a5962ec4ca8",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 403",
    "request" : {
      "urlPath" : "/api2/json/country/uhvz4yy3y31os3jetywznawsnp3tvgyamsrt8nd3nmmeyyidte50aamw3uxfge3ls6vig7jko9xhf422yu2js3q2xnigp9prh2gfd6lsg2e4tm93jydjt0yrtyfn63atvs2r7fh1kgws2s8dpbnwdrwptbj0rytpdwpjqv5abosgsyo9egz",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ff22f9ec-ac7e-41b2-893e-2a5962ec4ca8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.323568Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    }
  }, {
    "id" : "fe7a5e2e-1168-4b4a-9a21-0d0d25b64a47",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. - 401",
    "request" : {
      "urlPath" : "/api2/json/country/qejsgp9lcop6u0kbfwcckypaabj",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fe7a5e2e-1168-4b4a-9a21-0d0d25b64a47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.323536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country"
        }
      }
    }
  }, {
    "id" : "8a1448b2-ff5e-4b42-b373-fe918c9c88fa",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/country/knippckrr8rv9m6dkcvons",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"Brunei Darussalam\",\n  \"score\" : 73.53510513497238,\n  \"topRegion\" : \"743t2et82vqxz3o14ngwf7cvp0f9taa477jj1ultyw0p3hbxg1o6ft7e4wvt1abqcw0633kn0sjvzhyve5rb8a3gp8bpazlhse6tsqymi5chm4pvddc5d7ohe4xg8ltntsr0z7jxm5iphtcs0sbmr06gtkk6pffol8e8xwnevnhigxe08a9y\",\n  \"probabilityCalibrated\" : -0.18800941887346823,\n  \"subRegion\" : \"tlf355kho4upw9o9r8\",\n  \"countriesTop\" : [ \"mrhpigz2njbj1ae2c3xj03rvvciy99hbmwp4ugobqcnd518x2g6s0851tff8qnyxodcfougz\", \"m1qys4ummkluk7s5fvc1yvrsoly5l49s522rzs077bsumgj5kvca8z550y957ch6sif2i6otm216af1frb7sh34t37xuy0hlwd54utm0bolaf128gtuvteqx5r9yw07l8ed9mda1cinlfsevjf\", \"z8vdpem66ubdhfyvrszb3h5qbysuzwpdiuzio1jkckrekkc8joi9j1ve6dvebag2j1qor0sluy5ar36ljhdp5x2e7ii9fv1h7gbjul7ujr7zb4f7pqcn\", \"usvd5hle4xdqrscx2ht4cfw7j93dusfr3wxeinj225bj7vvs170bc8pg1j8a2sx0bd651m6m4mw1cmxvcas4gaz7hkjqf8jvuhucydrxmc3g13mb4gmaz31wm8do\" ],\n  \"name\" : \"Miss Bridgett Kutch\",\n  \"countryAlt\" : \"7evbthqbmk5pce\",\n  \"probabilityAltCalibrated\" : -0.9060424881305327,\n  \"id\" : \"i818\",\n  \"region\" : \"zke0ti0g9kiqgszrmqv83tzvjjs0oy8dbmwijqlhuei3s785hyl62cwtfgq3w55b07syjsry4ue6hgm9zppojyvan29nn6xw0jsvekgry9bwvkh5jkeeiwvgm83wyvvp4zc2zehoqtr8zcha8p9vgv2xwbsdsd1kgymrj1iab1cjd\",\n  \"script\" : \"gafl6u42hms7ghmoj97up3046lqp9qdunwhz0dlxewlqcgz1z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a1448b2-ff5e-4b42-b373-fe918c9c88fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.323489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "country",
          "schema" : {
            "description" : "Classified geo names",
            "properties" : {
              "countriesTop" : {
                "description" : "List countries (top 10)",
                "items" : {
                  "description" : "List countries (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "country" : {
                "description" : "Most likely country ",
                "type" : "string"
              },
              "countryAlt" : {
                "description" : "Second best alternative : country ",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "region" : {
                "description" : "Most likely region (based on country ISO2 code)",
                "type" : "string"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              },
              "subRegion" : {
                "description" : "Most likely sub region (based on country ISO2 code)",
                "type" : "string"
              },
              "topRegion" : {
                "description" : "Most likely top region (based on country ISO2 code)",
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameGeoOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "ac76d5c6-ed8f-4ddf-a91d-73f8d488fa8e",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "ac76d5c6-ed8f-4ddf-a91d-73f8d488fa8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.323093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "d53442e7-7ad9-4c0e-a943-ed49f591f725",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d53442e7-7ad9-4c0e-a943-ed49f591f725",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.323077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "a69d8041-de62-4a93-a653-7cfe599e0752",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) - 400",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a69d8041-de62-4a93-a653-7cfe599e0752",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.32306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch"
        }
      }
    }
  }, {
    "id" : "efe6356e-8fc4-4560-8a72-76608cdf36a2",
    "name" : "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridorBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"corridorFromTo\" : [ {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Mayra\",\n      \"lastName\" : \"Watsica\",\n      \"score\" : 68.22417547817767,\n      \"probabilityCalibrated\" : 0.011554603164978028,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.25616018098770965,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"0wk51m40sgs85cgon67a0ox9kyd9zvxltg0zwfe4h5ng8uhx2l0twiipqf8hqf4fck37v9nlasu5ohn9pa3qjvjdaflx8iptpr37aqe0d6j5t9gz5gg7sep4iyipalncfmi52g8lnu5ug3l809cezckrj4mdz\",\n      \"id\" : \"py2z\",\n      \"ethnicitiesTop\" : [ \"dovc93gdy0vyzc7gfaozgccc38czusymky6nn864z89tv3og0ek7igwh0vk7kja085pdsc8surv3om57gnsy94uiujs8tbywuruf5eeff92gp0bscbzgxtdrf8olcp8kcz97mal3ytsybiasyf2yfq3j9y9m2oht4118fmzhf\", \"jwqe74187g3gmvph1istk8iw538qt9hg3lye8oqpl9e841tqazuuikbcfveyslbv5b053dgppgbx6n9aig80can0vagtdjty\", \"er2nng1q\", \"9jz1uqyj0ogubh8gw4tm9wdf3ws753rzzmnnjxuwwi1\", \"8335b3yw8ry\", \"gfbo9bvfitpq4dsspfb0f6j6t8lij7w6ydm6tpwhk5cjg1iisubvc0qtfpkhzf0pcusr13rz8x05tx803l8knfy7q92glssovhh5w48p6poh6q09kp2r3v4js219u9hbkrxmqsa82g0t3umnp798wc7u2dzx17315gksg8ys3oo\", \"28vkryrmbsjy24i6ezfpgxf0i805uzax0rb9j13iphnaekjf6xqbiz0ebzsd94dfomg98uvfaowa07ta66wa0q9z8jrqkb0hp9gwn\" ],\n      \"script\" : \"ufh7bt51whpipn3itqyo560hfqsksep6ebvha0o6yi6s203d9zqrvdyvr9lm8wn64gp28htaeo4oxornt0naj4wrww92enqwr2m5vw92k1ix17n24luq5fi7hkj8cr35jxbq1sq\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Tomoko\",\n      \"genderScale\" : 0.09212764758855507,\n      \"lastName\" : \"D'Amore\",\n      \"score\" : 42.13736920651965,\n      \"probabilityCalibrated\" : 0.4557321116194972,\n      \"likelyGender\" : \"unknown\",\n      \"id\" : \"di6n\",\n      \"script\" : \"9znaui3za1j1c7\"\n    },\n    \"id\" : \"w3v8\",\n    \"script\" : \"35hhx47oj0oglyk23wysf79l2c4fj6vvpq1u65y7sv1trlom\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Effertz\",\n      \"probabilityCalibrated\" : -0.44949279221069705,\n      \"script\" : \"24htswoe1rfdsibwhdg9l7u1htropibnoqu2cljxvvnqpf2ayxpep54o263f570\",\n      \"regionOrigin\" : \"28ky0c2zq97pnbs70kk4uyo8sl8rzs7e1ibflxna23uz0d1obt18m3roo8tpvclfu3qf1639cgds0giani34r6y7lgoi47ykxd4h757l48ddbgj76fmocgz5adtnvep1l1dl0oj68vsx22h1d4a9h5im1fgnuon9s8tb3ziz2t4swq71353mi1\",\n      \"topRegionOrigin\" : \"exxenobszf3r3ak9fp9m6olm5k87gt9zmg43cgrr1cqd1sumgdkc3ka3i7xjtfpyp6sk90f6j\",\n      \"firstName\" : \"Shayne\",\n      \"score\" : 18.633408314787502,\n      \"subRegionOrigin\" : \"4x6qw7q9iis2qrzd4vajlpxnvjux651j6ahcir2v4ajw3g0ymnax38kjwxb6r3i8dizsxud9qu6tq8ewnp3jn\",\n      \"probabilityAltCalibrated\" : -0.9614282086584216,\n      \"countriesOriginTop\" : [ \"ax7dy86tgi52ciia2yt9krvegzezyc1zsynwuhs6g1knrvj7z5ivgtpud7smu1mjyccpr9uf2\" ],\n      \"countryOrigin\" : \"95hay9ckvnygqi8xpjwl94ml0f7uvnrhz5sks2xwx8pjzforlhddhjas59lqe5gu2sz70kesttalu7irkhs8yaai5maeqnhlatrvfb1kjedo4xrivq62zz5lv0ruoeyy8mc8bgln0imhu\",\n      \"id\" : \"98u5\",\n      \"countryOriginAlt\" : \"plqqo5sdulrnckq4qtxbfrqhrhmazhdilm75up3qhk6ytek5wgvuwu5riy9195hl170h6ubexc6656kzm\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Erick\",\n      \"lastName\" : \"Kohler\",\n      \"score\" : 13.915073654538912,\n      \"probabilityCalibrated\" : 0.8299419648623885,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : -0.7388407819265492,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"wfet3c239yn16u0squ6yexstqu1rzwxu9lfcphqgrwudsh6ckmlepz65uqx7shndw3lirq6s6zvchxddkn2jm4966w4qzx7fj1kqoz5vcman3pwh76zg4a5omd0agfynre7lwlw1vm7h1r0akija7zjj5\",\n      \"id\" : \"xbsx\",\n      \"ethnicitiesTop\" : [ \"9185tlfn9ctli1d3ectivcgcmxviuxamp8miqomqo8jratmckwk9338r12tywiqsto1rttwugfzi6gyuriuuqu9tvnztvnc5pqnxib53p3gitdnbpcnpr06mk7c80hky1kb27iclf16j0135oseqoq1tgk1pywumhsqsioz7ix2ijn0uarbme\", \"b6n00pd93ah6h5autghdglq18ulrfn9c6flwnaf09sug\", \"6kualkt6dm4815v6j97lxezwddrmuoeu524pbwevijeqwdogkjnfzozc\", \"d9c3rq48yfhw7ouho9ih222f24cdibxcjp6ja6w3sbdgrk7qm4sjw3o8a837fab8yqew8yw83o5r6jmui2bs34kxpj9niloc1i5bwcaifm1ku7sgt2z2vjcas1smfoyi9jiogql3li0rxlnuf97mjpzc6f4uaus1pw7qv91lwuf11c5zuigrh6exjgzjzc\" ],\n      \"script\" : \"c79q8xfuapfqb7nc7yq0p6lniw8386xkoiwb3fggaryzct0ft41nmt7ushmyii1pan0kf5pdilfoccgb0uije6rnjwzjk0gmi7wkkxt326hutr9d7wi05zku4\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Sheldon\",\n      \"genderScale\" : -0.2297830440900004,\n      \"lastName\" : \"Hagenes\",\n      \"score\" : 98.2449572019519,\n      \"probabilityCalibrated\" : 0.07438363679893212,\n      \"likelyGender\" : \"unknown\",\n      \"id\" : \"popy\",\n      \"script\" : \"mh36mvopr5cbvb36xl9hfqk8aewoeajohpqm7n8o3gmmdfvwzhnhbxcg0zcc5tujo2jou559kv80mhxa84kvjw2x909als8xqta9sqyjashrqbh9a0qprrnn5ejjrp6alqkaotgjhcpeq0y8yvg4cfnncpudynr1gkjp2ya41q0x1ohoc669\"\n    },\n    \"id\" : \"57vf\",\n    \"script\" : \"4wj0fehrdgtnc400hvfrtvlk171l90b3tmocoqqs68jwyrbwpahdlvhwu706u5thuvsscbe84f8vn99xjy31a5mdlrfr2zoq9yq1gth3m683e8j6xd9jtzk3y514kpak7naazzfp7gbwkx1jwa05uwmj\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Beer\",\n      \"probabilityCalibrated\" : -0.2999305388276101,\n      \"script\" : \"en5tl4bxzgmm4wrbrxgdl2s0q7s6p9wps6uo8qrim43egz4rfck8hb4h0q1u59s0gbqx5ljr8f5n6g5pf8t8pdxknxoz3kcu6yatcl7mpcuao3b1nvf9pro3u21iy41gtvk7mpepo18hhw6rn7ja5rsgr04i6y6fi\",\n      \"regionOrigin\" : \"i2zw0vhgpy\",\n      \"topRegionOrigin\" : \"k6xisw8nn7l8qj6lbwx66mjyok63lrxtgi2qy8fzr6eozjwjlm5brir016tkbkzlugn92iubn4w0aybmsl8q2fpwcx4so\",\n      \"firstName\" : \"Sunni\",\n      \"score\" : 46.252021962266035,\n      \"subRegionOrigin\" : \"i998ejnq13tawvfo5gojslej9klrp9f0lqzx6j8r2q980qn70ljv6yap95fl0a9s5kf86yoh9kbhvdsl66hu5f96taeatgup2wwwh7deb2n8kjuabve06dxjtwho\",\n      \"probabilityAltCalibrated\" : 0.34690415498906524,\n      \"countriesOriginTop\" : [ \"upe03r57dd15rjjicpb1f6yh4nox5104anjxr5kujiv42tl31wcoeppt0m2lcvzth08nz2t9qaauj56m42w78yrl2bsmflaaslzbe46d9wn7sawq706ivhtm3sx4cm4nmxd\", \"n5q8t25rtso5r7wxg9wm3l9pn4uqm3i2daym1mneeug\", \"dxzidg4pz28s0frg3f1oyo9gjw6f78grqcin1ze3oj9s6e3vc07agtpmcv1pip1sx0fx9r1ihiaiz36tyg9c85kz6nlb9fjwelbn7h2iljql2vja9o4sw6rglvg4tb9tjomz2poo53rm4bfgc7znbz6wfcoit7\", \"xyawbmsv69m0bl7s2v3mlj9mu93j4z86fbywk3z050hnjzowcxv9sz874b3aqnru2k3m1az38bx70xklsmnu13v2x92hz92o0idv7csakgox27zhm55xsw9ahytjs4d43bhi9ho0pd1pm5waauyfiy2qr1pps9xa\", \"ueiqrl6lzfbc64op27texwfynzkbbg6ungrbqxv\", \"hkovr0n7lme5a5hhs677u2r82674w1y1wxn43egbd01ndshf62bmxubzgy1bqkzhiluaqamubme0vl8pgb7h42rfbnaycsczc8el6ahtw4hursl8h1d6rdfur2omoki01u7dhp14zue37ywspg22agp274d15wg3zfdv5w7e5j1muey\", \"cunfopwzbwofja9n7cj2z2h2foh46wu7yvocpgzreaj5nfghzyz2lay2v3mec62apr74z3ztt4irsfiz7hzq8ny4t5ot5bqzz6wuqtba2jdgrd5kj9jvjjpizxj1r25mr00a1q1bqpqsrfeysq4f832dvzsmc4tf99ns1b45ygkf65p3w9xw\", \"3mwltlplcb7ceh32ps6xpiyeadq449pl383rvh8o88djfemkxsiaquinenl440igw744ve2hq0ay0kd4kwivzlkbneu2ano67dgz93synn8vro9tns7l8qcfpvll55\" ],\n      \"countryOrigin\" : \"5bb09tf06l8jsz2fzcoewedrjiksrhryty0k1e1y1i6ysq5407moh\",\n      \"id\" : \"j5cp\",\n      \"countryOriginAlt\" : \"zhuhtwv3ir3jqusts\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Sandi\",\n      \"lastName\" : \"O'Keefe\",\n      \"score\" : 19.52035567570053,\n      \"probabilityCalibrated\" : 0.43919553704308334,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : false,\n      \"probabilityAltCalibrated\" : 0.9627668940545524,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"99ysn993bm5frk582lspenb3k7ss535zd9fo5crpn5k9uivqr732g17mzk3umy8qb69v7ovrl6jxi8b8nksvjc4vqqcmeb0vi52whqpz65ca283laxyhs3d0lwwwl8trrpjrvuh2prclsz6vpxyfr9myxnbf75v0py750osprzudzkhlz\",\n      \"id\" : \"t442\",\n      \"ethnicitiesTop\" : [ \"cfcsvb83yl93yz8wavk79dqeo9vleiokakj92vooh5v7w5a8yuss9k0a29nrstwtak5qzqg\", \"sxc5axp2zx1wed7dr7cmjtcxds3vef81uqwguwovjfs1hckg5tl614dixb5fngk6o4w9bv8530549wz4cgt5woi27auc\", \"wbnosir37mrb32fxznv4cx8x24t82wgqp1nih\", \"l754x1045t\", \"kcvwcrgv80h834wavtirn8li\", \"8d3ub3efp6tcjnv3qafrih0ng19injujy0d9kh6opqmxs02lux0div6x4w\", \"wewetqbjq50lxza0erb1cr6lmnt1matcu1ctbqr5m8a\", \"r17iftgeal71pxinzg4xz0rzcq158sgv5neeovqxtlx1xe99rzwxliyiiagu9yhz50rncdnrvvfpoudrfks3b7uw8q9jq5cfqtbb1wsrnd0ntdkoib12st83fww699p60ydfch7ylg1p9rk4sri8qryyqp3x8qghbjizh55z5ohgkk30u1b0fh5u\" ],\n      \"script\" : \"wwwcozbkfflbzdo2ym5dsj69b08d78d88ysszmt3l4ccnxepr8vqpxxzi85l57sdz9cn1et124xtkf7zdikgtu75lp7kwckuc9qd6xyxxa4ef9zwevkwjd9va6ompkdwzoa0d8quonhdr4htf7gqw6ylwzqasnagjfieqr7jye58igmd\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Brice\",\n      \"genderScale\" : 0.5698390029680986,\n      \"lastName\" : \"Leuschke\",\n      \"score\" : 93.17441281998379,\n      \"probabilityCalibrated\" : 0.4334111752706966,\n      \"likelyGender\" : \"unknown\",\n      \"id\" : \"yyt1\",\n      \"script\" : \"lr3y8suk5xslzk9qnto0sveahkahrr5c1hx5f3bphqabllkzxw32458bchgcd9dut3iz7cjx84my4d6zqly6nn00s9kn08ndot96e0j05vfm7sxueke4yt05gnq1b0cdzi7cm\"\n    },\n    \"id\" : \"e1q3\",\n    \"script\" : \"lwq1u4158g5v3ctjx4fzzur4sswy7jfxq62axs23a6e0r63v37s36brxb6vg8p5js0qx2wn9n9soig7ln1g7\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Ferry\",\n      \"probabilityCalibrated\" : -0.3152142239905149,\n      \"script\" : \"9i4ieb1prh013zafrfrp\",\n      \"regionOrigin\" : \"v1al1h2dt317tlp2fmln2216lnu88rsecu0r2r6csk1s4uv8i79dte45xxhps234qg72gixwu\",\n      \"topRegionOrigin\" : \"qi7ufbqeoc76en03xoh62rmkonfk3ex12p3j90wxibntpv3hrwmbf4d0s5ppctsu3b78pl439dd5p9vq7kalfnlscoj55yx1o\",\n      \"firstName\" : \"Carletta\",\n      \"score\" : 81.91236155532077,\n      \"subRegionOrigin\" : \"ccf96yrk2kefr6ius1xboccqfmjkfabckj9\",\n      \"probabilityAltCalibrated\" : 0.7619390978527718,\n      \"countriesOriginTop\" : [ \"1akeju7n5j41210oisnmqvj8pqpjadex5bb1qlnpa92nibj49os1xce4amlzeolwukau2mnb03ljv0ogntqcqmvxm4b1t772u38kq92x3mbqy09ej05fy7qxt\", \"su13ga5tmuv2xnuxnbudeud2hwkn0m5b4rim2u7z5q6g4hwmymts6qlnvmpo1ztea60ugz2h8tapwh7gapm6j837wciy46p8l264y3x3krslge90vkq93kpkneysr9hu2o04zgaqzc83x45lyydfk62xte\", \"n1lr9ftdmfeopteocwpa5u8632yqa5zwx7ml6my8omp5m3hb70pyihdjzqi2p01599ub4ulk8x4l0zk8uh3piq73xaeegy6z7bbnehzuw9d3rxvwkojy4hisckhy9nwyntk0l9z5v37y0jpub12rculrf57fywzdty9qwh6ecdm0677fh\", \"846s2qd1l71x7n9u49rkop1hnnwebpo0o1ttwiweyqzu1h2ll4xaapzjy65fixpz5k32ze52smchpnuku2z47lxah9bps3rg2z7xzl1ilhwbf7jpds61z4g0ot\" ],\n      \"countryOrigin\" : \"rh5z05c\",\n      \"id\" : \"2f21\",\n      \"countryOriginAlt\" : \"ol2pyih4ptx69vsgalagg8w4uqmeed837vekq6xp7fu12hxmtmajstxyboljlq920yqc4a0pprg8k1z8xz5a5i8cnysls7dsgp1f48ovf8sa5wd2v6npsa9j0k3j8pr\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Carole\",\n      \"lastName\" : \"Aufderhar\",\n      \"score\" : 69.90491942211777,\n      \"probabilityCalibrated\" : 0.08251979580594404,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : 0.04026370885232544,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"bzqghuhj0l10eafx0ikj3oiv4jkvb8903e5thao76fslmoa0bpsgr56l7l7cmnzumejftdhhjvnkglj2ufl0qfh78ofdkrdhvr0una0c4du9p9n6ndfuocrtfby6fg7s3y0eylzdtnd3vs9\",\n      \"id\" : \"w4kj\",\n      \"ethnicitiesTop\" : [ \"vpc2o4x6y3fznu9hh9z0pd3bh44xqk0pd8zu2ca1ouahsqe29ek6avo5qda3ut6oo9mbzoo8odkt8sl0x4jrbzwtbj85yun11qn62e0eb5fnzsqu00a88o8a9sqw879twdsp3ug4104vgfmhfkfkdbqujuf6\" ],\n      \"script\" : \"vikuta4nc35z9uozpyzm9k\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Emanuel\",\n      \"genderScale\" : 0.10223360990454844,\n      \"lastName\" : \"Borer\",\n      \"score\" : 68.65412329424,\n      \"probabilityCalibrated\" : 0.9506053442639424,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"2i74\",\n      \"script\" : \"098yzlsg6xzatjihj3wp5hrejs936bqkcxqrjirb5sxzekm68rrnjhkr59gf51btkuhj5xy8qht25lrl5t7iqdjw7uugdupvar9apgyqqvuqqnmuc2qm4n9s\"\n    },\n    \"id\" : \"rkr3\",\n    \"script\" : \"6ahpbpuh43hh8kp95hh7lglqhgd6p5wyscdllygk4bvn4q7vax3zeuhmah18glmqtqrloejzv31capjcrlu7f50701ieert7f3be7taghbyx6s51gblnm25xfnwmc0fh8j6ibx7n3vmljg1r164n0piwbekzq4pu2q3g4bsav8a064n86qookp9fhgl5biwg3ri8tyaf\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Watsica\",\n      \"probabilityCalibrated\" : -0.894660243575987,\n      \"script\" : \"lgmfshya7ex\",\n      \"regionOrigin\" : \"o9th6ic6z86wl2r11vaqsz8s95rgve81ru9rocg8f8vzxl16gufl3y2myj9cfkaqizwwlqc6ja3e26s81a35z350007y5wbqq3dlcf0qeb4g7bcnlr6ekrm40g9m5\",\n      \"topRegionOrigin\" : \"cvzs7e76o8v81qvs9ydeep193trgm4zabxvvspw95xfkdbzignf\",\n      \"firstName\" : \"Chin\",\n      \"score\" : 7.452743187020506,\n      \"subRegionOrigin\" : \"iszlq1mu\",\n      \"probabilityAltCalibrated\" : 0.8354144873633331,\n      \"countriesOriginTop\" : [ \"cessobiv3yph43mo9greq4sd86tpr80q6ch08cs61i2auj4qe04oer2sbch8v07hyrwghq6d2sxvhmaeqr2jj9itbi9pvzy7o244llx\", \"hhdfuepzblooe49iukbrc23v78h76uilu5ivvitstscx3y1lb8v4xxpfy329flk8yl22aaq96v3u0q41ctsj3njmjtuaozql6p98abyqrwkbnonlbdvf449aiyk8ex91lisypsbe9es8tno6ab37kb\", \"untxgi6ybif3j34mgfg98jc99x0yymkugln8ya9piek15kacflup1yc98mixz\", \"g1hfvt6nyno5u22onm5sclgxdmrxlp8kfmz8nmi3x8a93umnpjm2rp3uagiv3tqp11k4uayi6ootk6bb5obxrqpsn66qzajgrunnvg6tb38y0u67r1g1autcaa0cwl1ae4rsj1sb1kgqbwzca66in3c6seigro2rgczxtjax4wi6eu1d8iwc3la9hna225uiiis9to\", \"8up\", \"gprm42apmxsy560a4pca61xwi2jehy2ug5izvzxr0rj6un1mybayjj26qo14xa899p49za1drepdhiqk\", \"zbhcl04j8f5swm5d9kjsxw0a2ggtlfp2ij3hkbj1\" ],\n      \"countryOrigin\" : \"ehcn1pibtyc1cgef5hysng3oko22c9e44kjib2ywpkf6b2mu31og1o4b6jvltj2xcaxh2usmnxqoodfn9bcshql6ewz4m4vz6c0a1j92sojhqp2nbrnrbf6sm52fyle2he7f8ksjwctbpvupdsf40lltfccuipzt3kie7aba08p8aqparjelwq\",\n      \"id\" : \"q63v\",\n      \"countryOriginAlt\" : \"m1kvv3o6muwwmmmlioptubs1nxasmo9769ob6btj3ys0be5s4ua47laz8vidrvbpyunl74xo5z4den49ea9z8h80j0sbh829kemztdnkmgcj3uxe6fpwl0ypp0sckma8quw8try4wzy8s7tcfve6l60hgb7fnb\"\n    }\n  }, {\n    \"FirstLastNameDiasporaedOut\" : {\n      \"firstName\" : \"Donald\",\n      \"lastName\" : \"Macejkovic\",\n      \"score\" : 92.62213368920719,\n      \"probabilityCalibrated\" : -0.8491549444863269,\n      \"ethnicity\" : \"Chinese\",\n      \"lifted\" : true,\n      \"probabilityAltCalibrated\" : -0.019292782620649707,\n      \"ethnicityAlt\" : \"Japanese\",\n      \"countryIso2\" : \"von5caofzszi2b6vd4nhqxoh45kdx9blawtufv3d1y0kiup9erp37vjk3qvhl1xt0q9mgq87e2irnc1glii2750izbuktj6kw3lup05enm27bnxor5iv3kq2t2t1hbi2ye12zt1o3p82kt01uh5ypohko2n499rrvzjgitkybzc70nsz2kii\",\n      \"id\" : \"58hf\",\n      \"ethnicitiesTop\" : [ \"a4sr2ps7fh76t939t98h83wqyjnzisfcsl96qk6a8\", \"rj4uwjzbw3kzurghtrc6c05yxcu5bp9titzv53fvmq7hsn8leygtkatbhqf50bb53bg9pcocbzl4451zf0jqub3dl7y87iowlpbmi2xtzlx7xh7xfsr0yfgxpv6260cvpcw3eqbu99p8v7jh8zmx9qfkm3a68rg5yo3bnmd8q3r52n4nrgh39wh9cznp15cmpsfskfb\", \"t1etl1uka24wru4pqku6az2wils8bgd25r4lfik5h6lw359e90v42ckn6c6jgzwuku402gpk39146usmsziz5xmzo74v17vstt4c2vi1q9bar27mp40y7or7ghud2nwjat9uo87l00e4uvriq5eh9zh0uwpjs3jb9n8vri70a38kwnz1t06w\", \"g56zt88oxmph0qy0h0q9yv4sbohw2xuc3kltbv6ersx47df2gtzb0voj451hce8sr4sh5gxgog6bvnjrzm1m3j8kuq7asfjl9euwc3bkzyct58ilgxdi1aglv3dqzlvs8poty0ufp36ibshi6gyistgr5klfh7x5k9i5rm41oypw\", \"k8g9yi9rke8e82hgfhda7ma31viqiry3e9e7g4yj5rvoh4v9064og98yqc2euxlq0f2zcl97gfxkm8hugnyyg2mzgwzfzie4fvo86e7ut1amw\" ],\n      \"script\" : \"kx7x5hxvdoz6rp8svgzfbv128yrex6th77l3ilf13zfjrn7vve60a5\"\n    },\n    \"FirstLastNameGenderedOut\" : {\n      \"firstName\" : \"Florene\",\n      \"genderScale\" : -0.2978106591176741,\n      \"lastName\" : \"Reichel\",\n      \"score\" : 71.58844156585916,\n      \"probabilityCalibrated\" : -0.48350692567569586,\n      \"likelyGender\" : \"female\",\n      \"id\" : \"337x\",\n      \"script\" : \"whuzwmk2\"\n    },\n    \"id\" : \"e02h\",\n    \"script\" : \"7cq4oc1a8n2y8dc5iab3fo6zzb6cm5womtokgztpsz4u2stqlw11d2ifgjppdhaxxaz81lyj2gdkwn0jhdedmlxw7qxl0gzj8rn9mux4kzwr0u5kzzuggkcmms4gyvqvrkwacyd4ki5z5o6s7\",\n    \"FirstLastNameOriginedOut\" : {\n      \"lastName\" : \"Rippin\",\n      \"probabilityCalibrated\" : -0.0952232639290056,\n      \"script\" : \"ivmjdvw3f7j60dy07a77v5p3m6fo6ks5e37ye0w7r3q9eyqe7wtzm1tehqh4x17y8mnbkkiz375j704sosvqwz5im8k6wl1tcrh2bt9xmvyoxz4i1haqgy4s43\",\n      \"regionOrigin\" : \"ten7zl0qqge0y7sgih5ymfa208c9gk2dhug3tmqghls5au8o05b5k1qedmpgomx6afxror2c9etcb0odjjls9dzgd0x7795q2gg4f6kre53w9q9p1r\",\n      \"topRegionOrigin\" : \"j5eewgsgarwz2khxj1a6veo9tkj5d7nb7v6fo4cz6csnauaohob\",\n      \"firstName\" : \"Sebastian\",\n      \"score\" : 40.77886442375662,\n      \"subRegionOrigin\" : \"t1spiqmdfio6c7chjrmmvdmm4qhi6qohe1tbwi7y5zx7dkfx7iahalhp5q4lprddqphcs7eal880cn254sz5sspnbp219cufhc5dt4f98\",\n      \"probabilityAltCalibrated\" : -0.3141519970876101,\n      \"countriesOriginTop\" : [ \"a592o6fve9vzteft13gdcmix5qpwdrrzssex62pfgk2l9ywwdvnllj8zutnlpmdn4vjvnl9vpksrllf9ydpm70zj9n64r2zm7mjnamshjh1zpcqw4y3ed23uagq4ilr558glt6t7jq0vtqoo6oxrlwa4gv28co50\", \"thqu9snfm684m1dnkg0xhf82dyd2ho1xmblq87pywpejk46kk26dio8f\", \"wvdgkxz3l659kibtcld1kz5cy61in0vrnmv29s2cwe82kp8\" ],\n      \"countryOrigin\" : \"htj9n672hc6u7hvv8ao0a30u7s9376dskmrksnf5ukq66w7njh0sfjx3q6kdjhwv5vsvdsd8ikw0tnbua9ybe2ufrqms37uv3s9zrmy6k578r1fj6bjmkb0ugqrqaw978gy4dke5xo72tvrj5nl34fmdawzpl1aszojes\",\n      \"id\" : \"h860\",\n      \"countryOriginAlt\" : \"9dkcmmyvlkoy8ao1shgx7m00oijinrx8gvcf22rhd19p1ei56kg5h11yl395u4g77wlujx22fnnhnqfxbl7o1hyakfi857cs26e2sn2edy83b9jkdxci\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efe6356e-8fc4-4560-8a72-76608cdf36a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.323015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridorBatch",
          "schema" : {
            "properties" : {
              "corridorFromTo" : {
                "description" : "Classified corridors",
                "items" : {
                  "$ref" : "#/components/schemas/CorridorOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchCorridorOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "db297b11-f52f-4e3f-8834-a862ed7d7066",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 403",
    "request" : {
      "urlPath" : "/api2/json/corridor/nw0rogluivchly1p5jaaqabut1fsicpjyq96jfl4a0c8dpnzv4xjt0ccjcr7/botznug0w3gzp/sqywd9ur6qwvg5jaobz2jo91u062eo8cvnpqd0e7ogtr9hwyialdvgrwsjuvvrnmuekj6nvy3k61g9iejq9ayzvslqhngm6di7i1br0ffossg7atal3eogdcuvr2to79uaczajl0de3wn67oclfbk8etmg4h61wjibjp2vu65kr2kn/grl6zv6vac0hewcsq7sgo7cqr216gxzmx36caus33c2c3jo48tzfbi4zbbj3yl17d52hpbnfm5dvc8o4drjr8dgiz2zdfdgzxs/rkpx2dr7m/0kbo129lhbo01biv76rulymvc8huzksu",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "db297b11-f52f-4e3f-8834-a862ed7d7066",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.31911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    }
  }, {
    "id" : "80750733-6c34-4fcd-9283-84ad0ffd18d3",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) - 401",
    "request" : {
      "urlPath" : "/api2/json/corridor/z9kpkgueokkyr2a8jhmt1txlvbfznl0awy3rbr9p1dbz8ngg/7gb94cb0suejiaum7fgyhnn4v9xxmynldyo1jnyd74tquz9/ztm2qp20avr274j8snjlzuzxtuiqehscw7tnm5ove5kukqbyyx8d4qrljwge3ss8jxqbqe6acp5rufk4zhyrw10gyfw9nzc7zw982wohtm08ha7d7jjaxnthaosmmar59zyr7anhw133qqjig0c8xsjdm2m7di5z5f8f36jpyiwqfl85fo1j7zgevv0mjhrs6/vj5ugvxb3ovkjpkgoun8t7sqde1z0ujr183z8sil7u8s68klhlt8rf1liw3jxag/ldajb/z35rfpmz1ivtixbjmm3s11zbkjdcr48n9hrkgkm4aaa7h4nfjmveavihk7kfrwl5kwhfh4txhaasshegp9085md4wz1kik75957lqmqk7nraol",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "80750733-6c34-4fcd-9283-84ad0ffd18d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.319038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor"
        }
      }
    }
  }, {
    "id" : "121a3d46-2e67-4741-b8ed-a3a00ef93ead",
    "name" : "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com) (application/json)",
    "request" : {
      "urlPath" : "/api2/json/corridor/29eszdwhxbtvm8tai9ob0kl61afekz4zhxufwm9hfs1gc2sp49zpwdfijeuxuby4oah9lq6blv057l8nk8rd7mfbq63pjppbmkr7aiyf4g3r2n97y2kiz9grdxhtimfu0zfcjahgjwm53zhqxuxn2iiuep1uthr1tnm40/7441pebg1rout1tc11h67na9i6rmc1muv8iywwtcshxxui5fpk3znckf8346/gyzw49c6jphzomuhaju8l19mlr6kka4em99e8qzienj8u7rbn4j4q7to1g3omgyivu83op96ss7qp7hiwqswioi3m2vd00pptp3k5m2zmcllvrvahw36x70xp2bx1pq7nu/v40jk0zfd9logn0wod77syoc4nticguae4p2yh7u51mf6sliivf4cbwl8b2tg6kn01el4x8dqalfe15sugubtfszbm0wk6f2660x7gvvokrxjljp3yhw1pv150qy485v43k9utsczc69exf7j32ks3ul5d8kqrtaetc9ldyv/la7bqamw7fh329r19zpuixqxhq5j84kv3xhzi5fu/oi52c4v5as1u9rci4c6jz915frs8mvrmurogi80deqav7l6bu7v7nh7r03uq8wzr6xiohapehbejtaqmkrodscf8afi5rd6cfm4bzfxgu4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"FirstLastNameDiasporaedOut\" : {\n    \"firstName\" : \"Hoyt\",\n    \"lastName\" : \"Hyatt\",\n    \"score\" : 97.57996667463298,\n    \"probabilityCalibrated\" : 0.14767743308968573,\n    \"ethnicity\" : \"Chinese\",\n    \"lifted\" : true,\n    \"probabilityAltCalibrated\" : 0.7192338778744924,\n    \"ethnicityAlt\" : \"Japanese\",\n    \"countryIso2\" : \"qku04kxs77kzxhdzi0bjppg8xxcosq03kdkyedu4txxw3ki86if86omq7l1tbokam9e3iji9qsmtz5i2jaoeqa4piwod2wx0r1kc897l804bu7pt1onli2qbgahqmtn43y9zzo28exydgzbgkcrep9zqz7c6u15cvuhq\",\n    \"id\" : \"o3u2\",\n    \"ethnicitiesTop\" : [ \"uoq1z3qpx813z4wiqdq51nmx0c9im1dsw3tb94yr317twpd73xlqtg4i1zq5sq69pt91h5atf7bhw7zphnwyuy7vg1762hvie3kjnuekqtiqid7xd1fwi31yd0lg2r27m08unqzdqr0xoozg2d5dzd1hdajx68dkp46ls6vyvash4klkh7fc3sfafey9wg7xon5\", \"577iwm899jijh7a59spbhdceikr4t72dzrgegtph9jfhp39abox5iikpug9go0f9o7nbjlh7hjjlk\", \"nmoi1cxsis0cn9scu8pcujobciy2876k988kibi420hfv\", \"dxtsrvjrufkh5kz1l8v34bqvkzl66wntct7m11qbh9la2377hsvsp3amh4k6t1qv9crceb7n22mrieqbnstn3o5wa39uh8t5yy7eeomvh8wmoajcppwdv68kvw88chtr9z6oypy4xtuda236xe8go1b7hf22aca8w7wm944dc6ci0qt\", \"4qc4g07gkkav9pjyl5zakupoq95vvkqsur1urkqqvr5qblthin0y8fge0eq9s5i906re1vhhtalkx8c474ctlpp0qcsnkr2m863qjp8etcgzsj5pm5gworjhlblhj0cc1tc845fl4plxw52plznitqsy4v7s8d5vzqan6naakt1xgvwfbgisgxafzsazds\", \"nufrrgrnh7olo07073x9ika85olsb7ik04vbco4bf8hdujaxoh00rhj4lpgl0rs55eaqpzyfa63z99drvno5lngexo28ed3q8iwyt9yg8spxdolriu1klv0n91x2nauujhlt5nc2g5cgkrl8bqbxin8qp8nfzs7mvnm1w4ck\" ],\n    \"script\" : \"43bf3cp3589jxk8eahtt8c7c713cweokoigzfai5yyyexl1iwswpm20mfai5vx5ow318hc0wtogibsoxsfronyvl6l4ipkmwsxtmvzy7tk7vz0z4yuh58t5o48d5gi1f\"\n  },\n  \"FirstLastNameGenderedOut\" : {\n    \"firstName\" : \"Barbar\",\n    \"genderScale\" : 0.20988495323399703,\n    \"lastName\" : \"Klocko\",\n    \"score\" : 38.304665298426436,\n    \"probabilityCalibrated\" : 0.36430460858233893,\n    \"likelyGender\" : \"unknown\",\n    \"id\" : \"pi22\",\n    \"script\" : \"15jlsbze93uyilkwrkyrollooc7gtn6fs8n7g15vzr0flflpi8yyfb03duvsiheek3a247upczbzihp4hv7llfvyfa20z2vmbpat969dggjsk9uiobrr11zki25cnunrbkzaykfyv6x4nr1\"\n  },\n  \"id\" : \"m7u2\",\n  \"script\" : \"xg5wtuft6wishx5zaxj3wfo36ye00ijl57i2f7kjsg6zmhtsrttycwi34bl5c2okd9e8a7qi47mvwijdkb0rmdtyqa75ztpii6e9smuu1z2glvxt7gpqd4nzcqj91l0v4mk35lfixm7jko5q5bajlsdz6xh7ccilfg2sx0yfu9veayzcentvrhya4\",\n  \"FirstLastNameOriginedOut\" : {\n    \"lastName\" : \"Hansen\",\n    \"probabilityCalibrated\" : 0.058450577130350734,\n    \"script\" : \"jglwraowsjcxsoci6kb9k1yzfclx1fe53c37g6eyqri3w900trsadped3ld13\",\n    \"regionOrigin\" : \"4eja7oh7gueelzzh3iuq0d9z8es8q95j0dezkdrtzvqe6rll33f09cg\",\n    \"topRegionOrigin\" : \"qacrhgz2x75qm86n9vq4xajp88jtdl0rymwqexsu8b\",\n    \"firstName\" : \"Zona\",\n    \"score\" : 27.791176883995416,\n    \"subRegionOrigin\" : \"vg2y63mykisxcdjn8hdveumik51284v161tccskbxk4z5ly7h3cyyon9187dei\",\n    \"probabilityAltCalibrated\" : -0.6470495072561351,\n    \"countriesOriginTop\" : [ \"9vqirdko3wcb52udh98pot3ugsyopntcd32ivra6duel3dg202un483pn7e9i4jn42khw5doizcd491zb85y35iarsnqv4azsgo5q1x8y5hpdyno67cusrovx3aeri19j938k2tnueykx7vw6b818f093saqvrzl05da32vlczy7yo1kxok1v\", \"859v2g9x7iioo9t8\", \"693kwjv54p21qd3ec20ra2l8zg53dpsvvssmz0rayu3sfh11wj4n1l6wsix2j9sz8l10iejmcmlwvmtw3gjk3b2l19po508qxruarcf45ubpk9qqkhn336066179fjzpzozc8302asuzgc0s0mtt3loxe2p19l93eqrijq02ilei96reaf1\", \"jdaj67ojctxzyir7asqispdau61tmuol21z2fkhhrqw1i2dy4cwtuy\", \"iz6tm3dtujy0a2s26inw7uwyayeui4aj9ru0nfmtzz30yvphmqtu814um346185amlqzoxa5rqms4of9qz96n9m8b5hsb72w29sxavuuaprtjpopq8sc1d8ra9id131t4cyfqncehmtvplunqpqviu85myawrt6l410sea2mb4tw0tbu4vbnu0d\", \"e7j2iwazbjnpohraqerlubm0tiw5j3ddin0u06i74vb6gz65fbqi9s22b4rydg96cw2t2krlcptbzvcobm51djptqrt1n8yj0jucddlxrhtdyg1u39apm8wzyigykawmy0iikzen6owr1phekon3ffzej2w79cea69s88\", \"kbcqb0oxxtndxwp3q392j3jv8xntd183dxwvbpt4pe543kvksd5esbripl6hkri280umbxxwsdu6cnt7y9h577nf4c1dlpt1u2hvxsnwfkhzia6bgf1t60cb09un0d5cywibq4flq4fzb1mu0msh26ky69rvlrbzdvhoivt682oadzy1bk4qfvprxwxrw2\" ],\n    \"countryOrigin\" : \"md6mxa78stoytmmdy\",\n    \"id\" : \"2n2j\",\n    \"countryOriginAlt\" : \"1agkng7r9czw2t06vt6bh8lw3k7eljfa4fboipjti4t451qdsinau8puqabibfqik076yvkb589iqbqkozb8buhtalf7hssdyrftpbnh38y77050gt9dwdo2rfnc1x4j5tpd9hbu3wqlznlg44nxlmlxkqv19bbjyuzq00svag7mxs9tj8r86fn5hwm6ztbe4\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "121a3d46-2e67-4741-b8ed-a3a00ef93ead",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.318942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "corridor",
          "schema" : {
            "description" : "Represent multiple classifications for corridor sender and receiver (gender, country, origin, diaspora)",
            "properties" : {
              "FirstLastNameDiasporaedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameDiasporaedOut"
              },
              "FirstLastNameGenderedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameGenderedOut"
              },
              "FirstLastNameOriginedOut" : {
                "$ref" : "#/components/schemas/FirstLastNameOriginedOut"
              },
              "id" : {
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "CorridorOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "b15af040-1aaf-42c2-a736-2e454314da9e",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "b15af040-1aaf-42c2-a736-2e454314da9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.317972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "d7068ce7-a50c-40f9-9321-1a398ee8f717",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d7068ce7-a50c-40f9-9321-1a398ee8f717",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.317953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "5abe2e07-babc-4f1e-b008-72dac3fabbb2",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5abe2e07-babc-4f1e-b008-72dac3fabbb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.317935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch"
        }
      }
    }
  }, {
    "id" : "79b2ee2d-0fa5-4281-8ac8-0a0bbcf3d107",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatchBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"matchedNames\" : [ {\n    \"score\" : 5.3147725975534064E306,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"m953\",\n    \"script\" : \"g2kt8z7dsijvws2sji3e2nweb3j7uttogrg8t2fuopg37nisoxol72q859ks7pu29xrhvv9eq3l\"\n  }, {\n    \"score\" : 1.424634159441771E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"j12o\",\n    \"script\" : \"wc97e7ocilcjutrchmt5tctgbilt8joyt1crb8o4x00yrqwmrgvh7t1d7zbhklkk6lp4n3mz64db3d\"\n  }, {\n    \"score\" : 5.515160588543799E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"ht2s\",\n    \"script\" : \"kqkmt5yusp36o4pkwgtixpm6rr8j663n5wteycf8e5cjwthstllwm1ti9tlwzfd43\"\n  }, {\n    \"score\" : 1.5940138446548172E308,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"1e56\",\n    \"script\" : \"04ov7fxt9o8yifcxb2h7h9drjpmue2ju33s20n\"\n  }, {\n    \"score\" : 9.91768024938904E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"80o5\",\n    \"script\" : \"xq5n6a7s7cs64t6cgdqv\"\n  }, {\n    \"score\" : 5.166313282899611E307,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"lm8r\",\n    \"script\" : \"p5xzmrbpkqlt33hxs2zcjusv4mlgy9ih7uu3u7o5i8dxvd4zf0ny3g7odk4xe0kf9c682mfxuk3cwbeexuzwh5rftfny6ir\"\n  }, {\n    \"score\" : 1.1492120276758651E308,\n    \"matchStatus\" : \"Match\",\n    \"id\" : \"h308\",\n    \"script\" : \"fa8kghjjgkq257nw9kowdag8owc64ymex7axqihc4aku9spvmc5k2cyg3y4yqp86jb36netx78afmer0ms4ngb1be1mxjju\"\n  }, {\n    \"score\" : 5.73028794959587E307,\n    \"matchStatus\" : \"Mismatch\",\n    \"id\" : \"61ni\",\n    \"script\" : \"2iq1m3dowhqruo097qndg3udkrrq03qmge65hwpy0i7ek5r38eqegf9rm7xjcgecyutd29sslb0dw8hqffz1rmwnanmxq1b5q6889egu16e0soylnfh1ajy84q6a0qp8mqaedly4uas0pe6acgoi1vxf5j8dz2nqxuw7z7mirrvgmygfqchxze7cbwgr\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79b2ee2d-0fa5-4281-8ac8-0a0bbcf3d107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.317907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatchBatch",
          "schema" : {
            "properties" : {
              "matchedNames" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchedOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "cc240a24-062f-4a71-854e-299b7cb485d7",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/kobogr1g8iridvojvb2vvcnl7z576zbm6yc48t66z0nl2kit89x0yt48gyp8gofqgdqb3akoshygy1xns7gt1y0q4l068hy02r2sw1zm9kcrux/wav4q5p4o073k5escijehtnczxnptbxispk27jyx34zuwsxilot58kt4ylsmubjxgks8qbi2b9928q0a9mdv8ucvtdguyn8vt913cg9kl5s4wa3gfik85fsx6lw2fka6hz32x3vnn6din1ismqdmi0dej9ilx6q0atw14k8izafqaqldhxozk975ehpzicot/Mr.+Jerri+Heathcote",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "cc240a24-062f-4a71-854e-299b7cb485d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.317076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    }
  }, {
    "id" : "e8209b16-9192-4cb6-be7e-e20c0feb4b22",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/0ojbnff7y27ulz33lwnao57sq17wflok1lyamchbzbb3494zvmov5umacyb5oanet1f752vukgbe8q1b4qn/5l06in70scp3iego8t8sk4cx79hxbn7cgrfqb7iufnrvfy0q5mz1djkzf60l8pwhg0ol8rja23fvh8fq9jmrg281fp7qss6akbuny12riyinpkytqlk2a0rv5h3th7mf451gh4gms1ob36naaky23hbrv3n6pyq1x5ejh0jazvwmf3b5s/Kareem+Crona",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e8209b16-9192-4cb6-be7e-e20c0feb4b22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.316994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch"
        }
      }
    }
  }, {
    "id" : "e64c4712-5f8f-4cfd-b79b-b966a6f2ad46",
    "name" : "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameMatch/qe6dvb2nw8ri94p0xupsng4q43xwv2sxf5lfm16eflhj2b2u/sa9a5m2ma6ldso9s2g1d16qi15o8pw630n4vq94qv2apmwllis3rbr1zrng29scribm67y5tjyq2qeqhstejznpp/Nita+Heller+DVM",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"score\" : 1.4722350290026604E308,\n  \"matchStatus\" : \"Mismatch\",\n  \"id\" : \"5tu0\",\n  \"script\" : \"oc9kzwbl1mool48zakin1wi3zozu0vlo8cptd8e05ykjcocobqk75a933p3kc1476g1y4pee\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e64c4712-5f8f-4cfd-b79b-b966a6f2ad46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.316878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameMatch",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "matchStatus" : {
                "description" : "The name matching status.",
                "enum" : [ "Match", "Mismatch" ],
                "type" : "string"
              },
              "score" : {
                "format" : "double",
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "d96ca192-9561-40c1-a1cd-b94d1da73347",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/fb1yu2nrqumzhrajbr6fgnbttc7g2o6ttqqrb510k94dwk6rzbute5lm0ievo5xmo1zazd87gmh3jucip67v176juaej86sgn85jqlw81sdiq6pga6dks3fdbi0wmzbv637lz65jbvhk0woxdlvg5yma8p8dub6nirfxg8sgfbllb4dpmbugjwxwswxmkjug2z6e/mdwkx4d0lns8i259galmnfq4antg28nf0h0bl31iqism4v9sw0zr52uikw96xald0e17qjo3be5s46mu2hdoulmj4p10snh984c58s37z5xgnnr/Genderfluid",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d96ca192-9561-40c1-a1cd-b94d1da73347",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.316647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    }
  }, {
    "id" : "44dd202a-03cc-4762-ba24-84a98e9c2699",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/r84xyabbiz4ejbysnkfb2qz1i2q12mbonzuqqgto23bviy9az45kv5i1nkep3d8kvgh1vh64cpcemdtl/3iw2q9myxqzuivlx552fiwcxn6b2tur0vppcegvfx4ojfk3bbpn7d7bfxnj64prr7d6td/Non-binary",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "44dd202a-03cc-4762-ba24-84a98e9c2699",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.316588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates"
        }
      }
    }
  }, {
    "id" : "44b6d3a6-a822-466c-a0b8-9190cb287230",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female') (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameGenderCandidates/i32g5d42hvfhv8oorx9hojvf1juqgjb5m9d5s/r4i0ckg1pbvgbqsha7rhed62sclpxppjy5gik79q77l/Polygender",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Treasa\",\n  \"lastName\" : \"Hoeger\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 3.066047539510547E307,\n    \"candidateName\" : \"2022-07-23T17:55:24.316149Z\",\n    \"probability\" : 3.861766890936504E307,\n    \"predScoreFamilyName\" : 4.4134121349953746E307\n  }, {\n    \"predScoreGivenName\" : 1.5814192907330647E308,\n    \"candidateName\" : \"2022-03-10T15:54:24.316195Z\",\n    \"probability\" : 5.61985062571739E307,\n    \"predScoreFamilyName\" : 9.96054107292406E307\n  }, {\n    \"predScoreGivenName\" : 2.739379118872556E307,\n    \"candidateName\" : \"2022-05-18T16:17:24.316235Z\",\n    \"probability\" : 7.522785140757283E307,\n    \"predScoreFamilyName\" : 7.758503830650412E307\n  }, {\n    \"predScoreGivenName\" : 1.4912263916137856E308,\n    \"candidateName\" : \"2023-02-22T15:44:24.316277Z\",\n    \"probability\" : 2.579089467927364E306,\n    \"predScoreFamilyName\" : 1.1821886220775568E308\n  } ],\n  \"orderOption\" : \"sq4q1555hmvactlj5s85i26zdjkg4lruttvzwy4yt8mc51clxlp538wrqsftpysc19j7s2ei17qgkfcmu52t7l80mvmqwejejl4s9y0hct94mo4b77htr1y5indt6r9q5nnv0wy6zoyuiap0a8vle11rhz1gpdd451m90jkmrl9g\",\n  \"id\" : \"6d31\",\n  \"script\" : \"yi35ccvws3lq69xlctchzissu0pfl4drmmvji6lyexrxs2oeifkcbx3jqdqof7oycl0dtc6vwt4lt7zs5ynh6izk7yro67848tml\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44b6d3a6-a822-466c-a0b8-9190cb287230",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.316519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameGenderCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "af4fc564-c85b-4248-99da-b9fb470d59a4",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "af4fc564-c85b-4248-99da-b9fb470d59a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.316056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "5d49e00e-360e-4b0d-ac82-c3abdfeaa462",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5d49e00e-360e-4b0d-ac82-c3abdfeaa462",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.31604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "39e2bc8b-977c-49ed-bfef-ac7f5a4f4ccd",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "39e2bc8b-977c-49ed-bfef-ac7f5a4f4ccd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.316024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch"
        }
      }
    }
  }, {
    "id" : "056a5950-ba1a-4b26-a7c7-efbe13f7a6d2",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesGenderBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Desire\",\n    \"lastName\" : \"Price\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.2114870133186735E308,\n      \"candidateName\" : \"2022-12-11T15:05:24.313576Z\",\n      \"probability\" : 5.696645883528395E307,\n      \"predScoreFamilyName\" : 1.6644981068577488E308\n    }, {\n      \"predScoreGivenName\" : 1.548857231903958E308,\n      \"candidateName\" : \"2022-07-03T17:34:24.313622Z\",\n      \"probability\" : 1.3980199089221099E308,\n      \"predScoreFamilyName\" : 7.224568836568533E307\n    }, {\n      \"predScoreGivenName\" : 1.8315658192090495E307,\n      \"candidateName\" : \"2022-03-30T18:47:24.313667Z\",\n      \"probability\" : 1.615392859542366E308,\n      \"predScoreFamilyName\" : 1.741393559872506E308\n    }, {\n      \"predScoreGivenName\" : 1.5211464905066592E308,\n      \"candidateName\" : \"2022-12-07T18:28:24.31371Z\",\n      \"probability\" : 7.329431497290679E307,\n      \"predScoreFamilyName\" : 6.277643895075213E307\n    }, {\n      \"predScoreGivenName\" : 3.7699683440371606E307,\n      \"candidateName\" : \"2023-03-03T15:40:24.313753Z\",\n      \"probability\" : 1.0484574000960107E308,\n      \"predScoreFamilyName\" : 1.1677092062441018E308\n    }, {\n      \"predScoreGivenName\" : 3.6564851836773185E307,\n      \"candidateName\" : \"2022-11-26T16:09:24.313799Z\",\n      \"probability\" : 4.0303067976056263E307,\n      \"predScoreFamilyName\" : 2.011096222343653E307\n    }, {\n      \"predScoreGivenName\" : 1.0891101852801353E308,\n      \"candidateName\" : \"2022-10-09T17:45:24.313841Z\",\n      \"probability\" : 6.677680259469487E307,\n      \"predScoreFamilyName\" : 9.530391111872143E307\n    } ],\n    \"orderOption\" : \"mbm5y2a1p8313ffmc1qdafhydiw2v7d299pbn2xj4ju23yhamjaxg74kek7x9ly34ug3a2er4p6t90rli0d113g3hrp2h1ldn2bwjwddwr7srj8k47lozk4uckqzyjpp5kybe1fd6wp9kaotrxjg97cdt3qxcvvi6s8woib8757lgxcew5wz6yl00zk\",\n    \"id\" : \"f9wb\",\n    \"script\" : \"z75dlx2xvn88w485vv1cxhyllt33o546sp277w4x02jlm6al02m6yxu8bl\"\n  }, {\n    \"firstName\" : \"Desmond\",\n    \"lastName\" : \"Murphy\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.3900319826543763E307,\n      \"candidateName\" : \"2022-08-16T17:21:24.31405Z\",\n      \"probability\" : 1.2506286119768932E308,\n      \"predScoreFamilyName\" : 3.545397950267523E307\n    }, {\n      \"predScoreGivenName\" : 2.5097102426246964E307,\n      \"candidateName\" : \"2023-01-15T17:13:24.314095Z\",\n      \"probability\" : 1.7014873085895782E308,\n      \"predScoreFamilyName\" : 1.5790087720741882E308\n    }, {\n      \"predScoreGivenName\" : 1.3050324986492503E308,\n      \"candidateName\" : \"2022-12-29T17:19:24.314137Z\",\n      \"probability\" : 1.3915846104719562E308,\n      \"predScoreFamilyName\" : 3.732158618303779E307\n    } ],\n    \"orderOption\" : \"qgvk2oq5e00i0w5w78m2llr6e93tryix9o80hofj1ivzsrasecd44qwasr24yf603se5dc5z4c08zr0v45ctvajxlvuqync2ozuzrwq7f7rctjsbbjngybgo1h3j3ti5lagxskwony6tq01l7ndioanhqagpxmzsycnwq\",\n    \"id\" : \"844m\",\n    \"script\" : \"xnt5xn6qmwk0b7dvv5\"\n  }, {\n    \"firstName\" : \"Reid\",\n    \"lastName\" : \"Balistreri\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.5258548404427127E308,\n      \"candidateName\" : \"2022-07-01T18:04:24.314325Z\",\n      \"probability\" : 4.558446117887399E307,\n      \"predScoreFamilyName\" : 2.990821905529892E307\n    }, {\n      \"predScoreGivenName\" : 5.3396671645424076E306,\n      \"candidateName\" : \"2022-05-06T18:29:24.314367Z\",\n      \"probability\" : 1.5705584658575263E308,\n      \"predScoreFamilyName\" : 6.538820387651651E307\n    }, {\n      \"predScoreGivenName\" : 1.4781296171108957E308,\n      \"candidateName\" : \"2022-10-24T18:01:24.314409Z\",\n      \"probability\" : 1.5079649598320002E308,\n      \"predScoreFamilyName\" : 7.275482269216447E307\n    }, {\n      \"predScoreGivenName\" : 1.6593487143610014E308,\n      \"candidateName\" : \"2022-11-11T18:22:24.314454Z\",\n      \"probability\" : 1.1476948551489225E308,\n      \"predScoreFamilyName\" : 2.927454840377927E306\n    }, {\n      \"predScoreGivenName\" : 1.0129034885353383E308,\n      \"candidateName\" : \"2022-10-27T17:25:24.3145Z\",\n      \"probability\" : 4.969780316887364E307,\n      \"predScoreFamilyName\" : 9.668174011136473E306\n    } ],\n    \"orderOption\" : \"32vewnbq8vlmrwnj3iwzplm2d042lo3p3w94zbvzkg2c7upbeln7jk5sw0oewigzj5kw8hpswcune63r8oz9zt467m5sakzd0twkhzusa5hly8jwk1u3e2jo9a78k7yfwnr6v7koq1er30z4im0vg268r056r\",\n    \"id\" : \"zujq\",\n    \"script\" : \"poriibi3nv3rdwoailsqosjs7sc5klcojnp2zsnse9et84tr67fnspd96ismkmhhdv767zjeugbcn7u1rtl6pmgg4cz1a37arr\"\n  }, {\n    \"firstName\" : \"Gretchen\",\n    \"lastName\" : \"Huels\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 2.3945086757799957E307,\n      \"candidateName\" : \"2022-12-22T16:14:24.314695Z\",\n      \"probability\" : 1.1644107377756405E307,\n      \"predScoreFamilyName\" : 3.1721335964233385E307\n    }, {\n      \"predScoreGivenName\" : 1.5029380984754243E308,\n      \"candidateName\" : \"2022-03-20T18:41:24.314741Z\",\n      \"probability\" : 1.167453356008275E308,\n      \"predScoreFamilyName\" : 3.7872308457528513E307\n    } ],\n    \"orderOption\" : \"4ch7m0bv6x1kf5lx34dmry2ct5jse9e8r6mqfrpre22n6cgcvjxkelp0zlvjr62xp4qats6j326s7uij5kqtsluy08hn\",\n    \"id\" : \"b4l8\",\n    \"script\" : \"fs46402jd0ly91mx7mlsdkeqkp89w0pklw21axfbdv2vgtvv8ibos0e4p6oks0zwgxzdfhi0knj5giqjjbzfwd98m9ua92xwg6vw3cml0u081bhks4wcm30j6xr3ebonxmecjjtnjlpg6g5ilnv75f7d3g1zcyvq78kzzpx6zvq5b9tv9qac6wphsce6hfs1u5\"\n  }, {\n    \"firstName\" : \"Edith\",\n    \"lastName\" : \"Stehr\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.450537664471371E308,\n      \"candidateName\" : \"2022-07-17T16:05:24.314936Z\",\n      \"probability\" : 1.7757712156527684E308,\n      \"predScoreFamilyName\" : 1.7304886879929568E308\n    }, {\n      \"predScoreGivenName\" : 5.772346241829779E307,\n      \"candidateName\" : \"2023-02-21T17:03:24.314978Z\",\n      \"probability\" : 2.9514883280188197E307,\n      \"predScoreFamilyName\" : 1.7601696610393781E308\n    }, {\n      \"predScoreGivenName\" : 1.0741583965225024E308,\n      \"candidateName\" : \"2023-02-11T17:03:24.315024Z\",\n      \"probability\" : 3.0702379413503616E307,\n      \"predScoreFamilyName\" : 6.565661895287708E307\n    }, {\n      \"predScoreGivenName\" : 1.2628282517970786E308,\n      \"candidateName\" : \"2023-02-01T15:09:24.315069Z\",\n      \"probability\" : 1.775108795096762E308,\n      \"predScoreFamilyName\" : 1.4856156376148494E308\n    }, {\n      \"predScoreGivenName\" : 1.649004455806366E308,\n      \"candidateName\" : \"2022-05-12T15:31:24.315116Z\",\n      \"probability\" : 1.6583913485175782E308,\n      \"predScoreFamilyName\" : 9.655137023052488E307\n    }, {\n      \"predScoreGivenName\" : 1.6767236830108059E307,\n      \"candidateName\" : \"2022-12-30T16:42:24.315164Z\",\n      \"probability\" : 1.793118802674592E308,\n      \"predScoreFamilyName\" : 4.3663187792156947E307\n    }, {\n      \"predScoreGivenName\" : 7.363888217661536E307,\n      \"candidateName\" : \"2022-11-16T15:00:24.315209Z\",\n      \"probability\" : 2.70895375407226E307,\n      \"predScoreFamilyName\" : 1.7106867838254317E308\n    }, {\n      \"predScoreGivenName\" : 9.802940792801322E307,\n      \"candidateName\" : \"2022-09-13T16:12:24.315257Z\",\n      \"probability\" : 1.4915371657898206E308,\n      \"predScoreFamilyName\" : 9.167387247226114E307\n    } ],\n    \"orderOption\" : \"fzx75t84hod4qa24i\",\n    \"id\" : \"14lt\",\n    \"script\" : \"xwfjf3wtcnwwvobf89lbaj250hwzutkv8nk3jdmtjoeivqfy8g0panm9wm4plsqdlot3bhpuiq2tryg8c18o3r81vlkmjn8jipmyuio11bf0vdj5ubnctapknyzt4atnt97l9t06odxosu7os2fqt2d49ydqabib7\"\n  }, {\n    \"firstName\" : \"Suzie\",\n    \"lastName\" : \"Jerde\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.5772885263294498E308,\n      \"candidateName\" : \"2022-12-28T17:25:24.315465Z\",\n      \"probability\" : 4.942158193145333E307,\n      \"predScoreFamilyName\" : 1.3641429379952286E308\n    }, {\n      \"predScoreGivenName\" : 5.790827155431735E307,\n      \"candidateName\" : \"2022-04-13T18:52:24.315513Z\",\n      \"probability\" : 1.718749506819827E307,\n      \"predScoreFamilyName\" : 8.491018360328731E307\n    }, {\n      \"predScoreGivenName\" : 1.6534707670848194E308,\n      \"candidateName\" : \"2022-12-04T16:10:24.315561Z\",\n      \"probability\" : 2.6759906438198894E307,\n      \"predScoreFamilyName\" : 1.432148294613947E308\n    }, {\n      \"predScoreGivenName\" : 1.3593372751705441E308,\n      \"candidateName\" : \"2022-07-26T17:53:24.315601Z\",\n      \"probability\" : 7.467564353407923E307,\n      \"predScoreFamilyName\" : 4.1192061801753433E307\n    }, {\n      \"predScoreGivenName\" : 9.809522929058094E307,\n      \"candidateName\" : \"2022-05-11T17:26:24.315656Z\",\n      \"probability\" : 1.513825991755682E308,\n      \"predScoreFamilyName\" : 1.0812769718085724E308\n    }, {\n      \"predScoreGivenName\" : 8.035017905709908E306,\n      \"candidateName\" : \"2022-09-05T18:48:24.315707Z\",\n      \"probability\" : 1.7990952865377181E307,\n      \"predScoreFamilyName\" : 1.233861598322321E308\n    } ],\n    \"orderOption\" : \"52j668boxvio3jm3\",\n    \"id\" : \"4h5v\",\n    \"script\" : \"8q4m229japeuhk0you1cdjigpwaga4f2s6at0mzn3y7ehhz0enienoqgw7ovdr6te173yt6x0wv9bb02x1v8zrytzgnwvthea3qy5wfuopn4mxubf09ee7kn8n4yo9c\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "056a5950-ba1a-4b26-a7c7-efbe13f7a6d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.315988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesGenderBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "afcd4b6f-c4a4-467c-bcd9-78a3a8cf1876",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "afcd4b6f-c4a4-467c-bcd9-78a3a8cf1876",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.313474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "7f67f030-7995-46fb-b7ea-5ec2dc4e8d38",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7f67f030-7995-46fb-b7ea-5ec2dc4e8d38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.313458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "7ceeec05-9e84-48c1-853b-427de3d8fb65",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming - 400",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7ceeec05-9e84-48c1-853b-427de3d8fb65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.313442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch"
        }
      }
    }
  }, {
    "id" : "2207a33c-97e1-4385-9a2a-890b11921ba0",
    "name" : "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidatesBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namesAndMatchCandidates\" : [ {\n    \"firstName\" : \"Keesha\",\n    \"lastName\" : \"Erdman\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1130211132257679E308,\n      \"candidateName\" : \"2022-10-28T15:31:24.310432Z\",\n      \"probability\" : 4.8956287337936975E306,\n      \"predScoreFamilyName\" : 2.653319127541612E307\n    }, {\n      \"predScoreGivenName\" : 2.866640190686759E307,\n      \"candidateName\" : \"2022-04-30T15:03:24.310479Z\",\n      \"probability\" : 6.417957830382038E307,\n      \"predScoreFamilyName\" : 1.469794786183765E308\n    }, {\n      \"predScoreGivenName\" : 1.4527445040855614E308,\n      \"candidateName\" : \"2022-04-20T15:29:24.310524Z\",\n      \"probability\" : 1.442550132161707E308,\n      \"predScoreFamilyName\" : 1.5371773191977894E308\n    }, {\n      \"predScoreGivenName\" : 2.8274471381689036E307,\n      \"candidateName\" : \"2022-04-23T17:32:24.310568Z\",\n      \"probability\" : 5.020953963306998E307,\n      \"predScoreFamilyName\" : 4.98174010517571E307\n    }, {\n      \"predScoreGivenName\" : 7.969482248242599E307,\n      \"candidateName\" : \"2022-08-19T16:00:24.310611Z\",\n      \"probability\" : 1.0361920471741159E308,\n      \"predScoreFamilyName\" : 5.488018221342879E307\n    }, {\n      \"predScoreGivenName\" : 1.4388574316327883E308,\n      \"candidateName\" : \"2022-07-08T16:29:24.310657Z\",\n      \"probability\" : 9.743487666415693E307,\n      \"predScoreFamilyName\" : 1.5258349170240665E308\n    }, {\n      \"predScoreGivenName\" : 8.295594412276252E307,\n      \"candidateName\" : \"2022-07-05T17:44:24.310698Z\",\n      \"probability\" : 1.567553954300181E308,\n      \"predScoreFamilyName\" : 1.0566770518305036E308\n    }, {\n      \"predScoreGivenName\" : 5.797693409561021E307,\n      \"candidateName\" : \"2023-02-25T16:59:24.310741Z\",\n      \"probability\" : 1.8828638679539522E307,\n      \"predScoreFamilyName\" : 1.6594220296307274E308\n    } ],\n    \"orderOption\" : \"qwwai91jusv\",\n    \"id\" : \"3l3h\",\n    \"script\" : \"ttqw83sj7curib2uqbadz6kt\"\n  }, {\n    \"firstName\" : \"Emmanuel\",\n    \"lastName\" : \"Rodriguez\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.007352210546059E308,\n      \"candidateName\" : \"2022-03-31T16:21:24.31094Z\",\n      \"probability\" : 8.745396323219953E307,\n      \"predScoreFamilyName\" : 3.9019477441805895E307\n    }, {\n      \"predScoreGivenName\" : 1.3349943010629493E308,\n      \"candidateName\" : \"2023-02-16T16:10:24.310985Z\",\n      \"probability\" : 1.570605112698059E308,\n      \"predScoreFamilyName\" : 1.4523170006495645E308\n    }, {\n      \"predScoreGivenName\" : 6.639549135143121E307,\n      \"candidateName\" : \"2022-08-21T17:09:24.31103Z\",\n      \"probability\" : 1.5865591273336163E308,\n      \"predScoreFamilyName\" : 2.2891026727691736E307\n    }, {\n      \"predScoreGivenName\" : 8.205968938939423E307,\n      \"candidateName\" : \"2022-11-25T18:18:24.311073Z\",\n      \"probability\" : 1.3645937196352659E308,\n      \"predScoreFamilyName\" : 1.677856449771283E308\n    }, {\n      \"predScoreGivenName\" : 4.793153709301148E307,\n      \"candidateName\" : \"2022-11-23T15:20:24.311125Z\",\n      \"probability\" : 5.309241596151249E307,\n      \"predScoreFamilyName\" : 1.5508319411973112E308\n    }, {\n      \"predScoreGivenName\" : 1.397172429396945E308,\n      \"candidateName\" : \"2022-12-02T15:06:24.311174Z\",\n      \"probability\" : 7.090799351797334E307,\n      \"predScoreFamilyName\" : 2.4193770009657145E307\n    }, {\n      \"predScoreGivenName\" : 1.3973377872249467E308,\n      \"candidateName\" : \"2022-07-28T18:11:24.311223Z\",\n      \"probability\" : 8.512293486991043E307,\n      \"predScoreFamilyName\" : 9.96835561474273E307\n    }, {\n      \"predScoreGivenName\" : 1.4486359152743108E308,\n      \"candidateName\" : \"2022-07-27T18:12:24.311269Z\",\n      \"probability\" : 1.6589987725408519E308,\n      \"predScoreFamilyName\" : 9.631185252429177E307\n    } ],\n    \"orderOption\" : \"784i3maollm2657trl9a81rp0qvwpceav65y9ryyz91hcq4x58dzjqjk69j4id2q3ssseh4n7fjb2tjnxy5zzhz7o7whq2xswem853eho2lvwpop7yerk8lm58o6rfx\",\n    \"id\" : \"1103\",\n    \"script\" : \"bldvhj35suj09qf0oy5rof3d34wu5ilqw0rvslgnxa936oudy6iz60rn58qoc\"\n  }, {\n    \"firstName\" : \"Derrick\",\n    \"lastName\" : \"Witting\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.3255296475580492E308,\n      \"candidateName\" : \"2022-12-31T18:33:24.311466Z\",\n      \"probability\" : 1.2150092332922334E308,\n      \"predScoreFamilyName\" : 1.1892065536898063E308\n    }, {\n      \"predScoreGivenName\" : 7.353848113279029E307,\n      \"candidateName\" : \"2022-04-02T17:32:24.311511Z\",\n      \"probability\" : 2.1304744002587483E307,\n      \"predScoreFamilyName\" : 1.234541886909985E308\n    }, {\n      \"predScoreGivenName\" : 5.116588820541137E307,\n      \"candidateName\" : \"2022-12-22T17:31:24.311561Z\",\n      \"probability\" : 5.902521148150881E307,\n      \"predScoreFamilyName\" : 1.0763347901382097E308\n    }, {\n      \"predScoreGivenName\" : 8.71255369394803E307,\n      \"candidateName\" : \"2022-07-25T16:48:24.311609Z\",\n      \"probability\" : 1.4519742876968125E308,\n      \"predScoreFamilyName\" : 6.185245739484155E307\n    }, {\n      \"predScoreGivenName\" : 1.4398969249099117E308,\n      \"candidateName\" : \"2022-06-05T16:02:24.311656Z\",\n      \"probability\" : 9.397461712826197E307,\n      \"predScoreFamilyName\" : 1.0437885143085552E308\n    }, {\n      \"predScoreGivenName\" : 1.4351761596115417E308,\n      \"candidateName\" : \"2022-11-02T17:42:24.311703Z\",\n      \"probability\" : 2.482945652418748E307,\n      \"predScoreFamilyName\" : 9.755278641194388E306\n    }, {\n      \"predScoreGivenName\" : 1.3590021980949834E308,\n      \"candidateName\" : \"2022-10-31T17:52:24.311751Z\",\n      \"probability\" : 9.83642485364265E307,\n      \"predScoreFamilyName\" : 1.2634154374908478E308\n    } ],\n    \"orderOption\" : \"hihecnyquqc9otosadsif13tzbrbrotpgzr75uu6f4l2zrerr2mgz7kfaov8d72tn96r4723t0i4s0igu5v6tiswlkfbzcetwntp0871a6h58mg4pbux71v8hbufi7zh6p\",\n    \"id\" : \"tk17\",\n    \"script\" : \"s9ukfn34pk8j95b8r9s9uzv238rlg1zqzgcqm5l6v4be0mh7cu2zejaz404vtjbqffs8zk7bvxi6mymetw9eqfz196xr2ysg5pbzeifmxfg4n9k3cghwxvkqqg\"\n  }, {\n    \"firstName\" : \"Christopher\",\n    \"lastName\" : \"Weber\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 8.296879746953445E307,\n      \"candidateName\" : \"2022-05-16T15:52:24.311945Z\",\n      \"probability\" : 5.284975469830006E307,\n      \"predScoreFamilyName\" : 1.972574844242295E307\n    }, {\n      \"predScoreGivenName\" : 1.2114207451399014E308,\n      \"candidateName\" : \"2023-02-01T17:58:24.31199Z\",\n      \"probability\" : 8.449010673423252E307,\n      \"predScoreFamilyName\" : 9.33150325855921E306\n    }, {\n      \"predScoreGivenName\" : 1.697990892377437E308,\n      \"candidateName\" : \"2022-10-10T18:23:24.312034Z\",\n      \"probability\" : 8.233407783226755E306,\n      \"predScoreFamilyName\" : 1.7865345768434475E308\n    }, {\n      \"predScoreGivenName\" : 3.592493860697927E307,\n      \"candidateName\" : \"2022-09-28T17:31:24.312085Z\",\n      \"probability\" : 4.261219872437194E307,\n      \"predScoreFamilyName\" : 3.725098720811572E307\n    }, {\n      \"predScoreGivenName\" : 1.5568385170862871E308,\n      \"candidateName\" : \"2022-04-01T17:38:24.312131Z\",\n      \"probability\" : 9.904730514320832E307,\n      \"predScoreFamilyName\" : 3.8919717185556493E307\n    }, {\n      \"predScoreGivenName\" : 1.6496658746941854E308,\n      \"candidateName\" : \"2023-01-17T17:54:24.312176Z\",\n      \"probability\" : 7.955735965949296E307,\n      \"predScoreFamilyName\" : 1.1063926308967478E307\n    } ],\n    \"orderOption\" : \"nj3en4sk12aki1eah21008n2kyavhtcq4y3ou4ff64nngic1v14x8c6iw8kuf2e07xax1lx5njvrbh0m0efzbjdph13r0v8crluq4nsc1\",\n    \"id\" : \"u0q5\",\n    \"script\" : \"4i4v8m57tptog8d994kel89l8zafw7p5yz105qux4tyqomonyk3oto1lcx3ogo0m0vgpk8mq2azkf0gt35gdop2gp2hkob9dseyadtt6mk\"\n  }, {\n    \"firstName\" : \"Anibal\",\n    \"lastName\" : \"Lind\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 1.1640679464897869E308,\n      \"candidateName\" : \"2022-05-18T16:20:24.312371Z\",\n      \"probability\" : 1.560201963804011E307,\n      \"predScoreFamilyName\" : 6.943403135045136E307\n    }, {\n      \"predScoreGivenName\" : 1.5029513166419116E308,\n      \"candidateName\" : \"2022-12-31T18:02:24.312417Z\",\n      \"probability\" : 8.351662736996245E307,\n      \"predScoreFamilyName\" : 8.809717501235758E307\n    }, {\n      \"predScoreGivenName\" : 1.540030054755657E308,\n      \"candidateName\" : \"2022-06-25T17:36:24.312462Z\",\n      \"probability\" : 8.895502927746053E307,\n      \"predScoreFamilyName\" : 2.1900652338577446E307\n    }, {\n      \"predScoreGivenName\" : 2.0529838397743084E307,\n      \"candidateName\" : \"2022-08-29T16:22:24.312505Z\",\n      \"probability\" : 9.949892691346724E307,\n      \"predScoreFamilyName\" : 1.333996611559787E308\n    }, {\n      \"predScoreGivenName\" : 5.483242449816954E307,\n      \"candidateName\" : \"2022-11-07T17:54:24.31255Z\",\n      \"probability\" : 1.35843089617355E308,\n      \"predScoreFamilyName\" : 1.188797129642363E308\n    } ],\n    \"orderOption\" : \"iflfts87wd63z7d21r596hshckbzpd3eui9v5wyq1lysasj9celu6\",\n    \"id\" : \"93zr\",\n    \"script\" : \"jnzyzg3pqrehiqb751quv0t63jmj1i8uenqgp4ij\"\n  }, {\n    \"firstName\" : \"Dorsey\",\n    \"lastName\" : \"Labadie\",\n    \"matchCandidates\" : [ {\n      \"predScoreGivenName\" : 3.727896769640132E307,\n      \"candidateName\" : \"2022-08-24T18:07:24.312754Z\",\n      \"probability\" : 1.0878773612258145E308,\n      \"predScoreFamilyName\" : 1.0862124048310752E308\n    }, {\n      \"predScoreGivenName\" : 1.3128161434928032E308,\n      \"candidateName\" : \"2022-09-09T16:50:24.312803Z\",\n      \"probability\" : 1.5516875659319225E308,\n      \"predScoreFamilyName\" : 6.492667804389478E306\n    }, {\n      \"predScoreGivenName\" : 1.0393065621642885E308,\n      \"candidateName\" : \"2022-07-30T16:58:24.312848Z\",\n      \"probability\" : 1.616393579791061E307,\n      \"predScoreFamilyName\" : 4.666649183173179E307\n    }, {\n      \"predScoreGivenName\" : 9.117231751011572E306,\n      \"candidateName\" : \"2022-06-09T16:50:24.312898Z\",\n      \"probability\" : 6.232011890725557E307,\n      \"predScoreFamilyName\" : 1.7507719417676802E308\n    }, {\n      \"predScoreGivenName\" : 5.070228140729446E307,\n      \"candidateName\" : \"2023-02-28T15:54:24.312943Z\",\n      \"probability\" : 9.1094772922024E307,\n      \"predScoreFamilyName\" : 7.719636247936735E307\n    }, {\n      \"predScoreGivenName\" : 6.578882626858067E307,\n      \"candidateName\" : \"2022-12-01T15:32:24.31299Z\",\n      \"probability\" : 1.701896491561388E307,\n      \"predScoreFamilyName\" : 1.668076047828262E308\n    }, {\n      \"predScoreGivenName\" : 9.81338627416517E307,\n      \"candidateName\" : \"2022-06-16T16:01:24.313035Z\",\n      \"probability\" : 1.0255400497003128E308,\n      \"predScoreFamilyName\" : 4.192437172071385E307\n    }, {\n      \"predScoreGivenName\" : 5.421436601449018E307,\n      \"candidateName\" : \"2022-05-18T15:57:24.313079Z\",\n      \"probability\" : 1.2401527105168143E308,\n      \"predScoreFamilyName\" : 7.481007118407618E307\n    } ],\n    \"orderOption\" : \"nqpx0tdwvrj9623t8ny3pmbe3uj3g1qatlkmpw1cj19s8jmabbocczm1za7r38du62j8bfj20usphx4vjbwlj1h82ix3f13oueihoygnx7cie65bl7i5yscv01rk00l3mgg77zjq4b9d5ka2tw66h4ojswgevp1zah3ewz07fvjas1ewaqwutu8\",\n    \"id\" : \"tavm\",\n    \"script\" : \"s0rmkhqsnfzuji101cs10c5m7den0wco7ea4tcu4k2qa17f6bn0rt6mbax9kjcirhv7up3l22wh070fumrbzpvlff8gknwgtmkihjik5gzywffv4f9qp9hu2nko80uk7rne8mk05rbmxy2h7k40ydhd8qv5ruf0xzic\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2207a33c-97e1-4385-9a2a-890b11921ba0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.313406Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidatesBatch",
          "schema" : {
            "properties" : {
              "namesAndMatchCandidates" : {
                "description" : "Classified matched names",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidatesOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchNameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "4128af94-8389-4e1a-9b9b-1e9fe1a72df0",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 403",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/45do0eryxml36jujuds8ijs7bcdqx2nof2xty483lk86wijnyqli5531we8tbojbvdv4bbm78ivos47v514ikf1wi5u3zj46ywloh8xr1pt14sukzc9yv8zanjcm3mtad1jxxqy3lj13qq2q1gqhecftu7upldqeylnn4h0u3hevozdxyldbdcn6l0kw/xt0l29u5kxvxke8t1i9jd9lnk1nb4ljgfys7334aw733ypq04sre0td1i3d015ge7e9o26v9b909ojyqzzz6504y1iynt14oripstbjuno2bbbnbb4lcbwx8i069r3b8pcyojtf1ja1mde6rk5ln6v1hpklevdqxaqa3",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4128af94-8389-4e1a-9b9b-1e9fe1a72df0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.310327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    }
  }, {
    "id" : "3b478630-25fe-4e91-ab01-f2520fd41367",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - 401",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/cbwf7nemlojbk5i2wh6oidptn5sbqn9u8loczhs4me6qkxvpn27yehvcb94ujh6xv6fjole9fp0onlyx4gh2diayisa4kzizv6pfpiznhxvlnrh2onx3t63h8xn08/t0zy42e8nqhidy0rmfpon0eeemrqjzzga2hgguoifqfopdkm1u7by4rjy5z5rlmo5at5zahksttcqi3k5di9mzxqwlbs5eqmv5s8xc0gocear9qvugitosnu0bd6ej5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3b478630-25fe-4e91-ab01-f2520fd41367",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.310283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates"
        }
      }
    }
  }, {
    "id" : "9679fc87-eaab-4186-9ea1-8ca58a729314",
    "name" : "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming (application/json)",
    "request" : {
      "urlPath" : "/api2/json/chineseNameCandidates/cjlljd927lrc4b36jrt5821xtj30m8ktp46laud43his1cu2uto2shpncmpfo6b77gtcbxegp51vl7ek17tnjojp0vx4wjp6kx0pewu937v9pofkk9647/mootvjskqc5yznt1ix3ghdqz7l1ryb13dtv1pfklmkfv63f9e36ylvi6asb3aiepnt9ogt62u1yocpct7nfv80zyotjjvovy0ie",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Saul\",\n  \"lastName\" : \"Zieme\",\n  \"matchCandidates\" : [ {\n    \"predScoreGivenName\" : 6.901501182656214E307,\n    \"candidateName\" : \"2022-11-07T15:13:24.309978Z\",\n    \"probability\" : 7.69869211807485E307,\n    \"predScoreFamilyName\" : 3.190655235202305E307\n  }, {\n    \"predScoreGivenName\" : 6.887981672333788E307,\n    \"candidateName\" : \"2022-10-27T15:25:24.310023Z\",\n    \"probability\" : 3.2408129214619274E307,\n    \"predScoreFamilyName\" : 7.60121650646342E307\n  } ],\n  \"orderOption\" : \"lg2m7lypwxsvfm222gc65xfjfe8010gu2whisrk8kejl4tbvvzu1ijee3aereti6vkr5tdqscxd772kgtidddy3p1t9xj5bf7ug323b2hp3pnytmcztapzpbpoflzfe1bwcgf0zuew9v0rj41fp18h8mwf2rqko7uzet9cysk\",\n  \"id\" : \"cq0k\",\n  \"script\" : \"bjt7oc3j8mj58dplwbb4nz9nbh5dftv0jc12gh9glqrw2qyvbnel9l8phxnmaosg20py4h6w1uck63712\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9679fc87-eaab-4186-9ea1-8ca58a729314",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.310231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chineseNameCandidates",
          "schema" : {
            "description" : "Classified matched names",
            "properties" : {
              "firstName" : {
                "description" : "The first name (also known as given name)",
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "lastName" : {
                "description" : "The last name (also known as family name, or surname)",
                "type" : "string"
              },
              "matchCandidates" : {
                "description" : "The ordered list of name matching candidates",
                "items" : {
                  "$ref" : "#/components/schemas/NameMatchCandidateOut"
                },
                "type" : "array"
              },
              "orderOption" : {
                "description" : "The option for ordering",
                "type" : "string"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "NameMatchCandidatesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "2ae95ee5-22e4-4a6c-a75e-bcc1486d2766",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "2ae95ee5-22e4-4a6c-a75e-bcc1486d2766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.309883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "33379f7e-ef66-44e3-84e2-b499c568394b",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "33379f7e-ef66-44e3-84e2-b499c568394b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.309868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "310ef1ea-aa79-4168-8904-795162579db9",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  - 400",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "310ef1ea-aa79-4168-8904-795162579db9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.309851Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch"
        }
      }
    }
  }, {
    "id" : "bdd9faa6-3d9a-4f61-b250-4195d3759b10",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of up to 100 personal full names.  (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFullBatch",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"personalNames\" : [ {\n    \"castegroup\" : \"414b4rsvkgo68x309e268clv7h98sd2weiuuf29mkskgonhcl7p\",\n    \"castegroupTop\" : [ \"05eiwjyhwnxa3877ra76h07vexucjva9ha6mjqmch0ygh2tb1frf95hjuremc73m\", \"oafnbgupo7u3ckbtu0xqmyqxwx34v0sdyjqmmmf9bogdtmy88jjaj9o3i20t75oxjvjfzm6l56ouuvkd9zkuq4qvem97in54rst7sxfjfg0ajs9wcpcqxo02rw0aejwflwdhfzng1w2msc28f8tnmcik51rjc8kd9gbtiy1jxk71h\", \"98gtkyhqnxl67rzlsfp85zh2om36dqqgji6lc2brhzra6pk0qj8792kw8b29y42cdm8wx8zqcs643rgq5j6yaxqdr2jkxbomjo98mp1jjxm24s87x914jd5zgqy9l07csxvmou56313u8qs082yznvc18vhm1fgswxlmgxlow5dh7ceks5x1gl0wbufjcgixxj\", \"hjw4pzuyzkeae1jgg4uwtujgip9wj2hokpzc10brd44yezc9w3vb8x0rve2zv7h4uf7wvp60n8yexc70dl5\" ],\n    \"score\" : 63.39246320617469,\n    \"probabilityCalibrated\" : 0.29719087992994164,\n    \"name\" : \"Hubert Bode\",\n    \"probabilityAltCalibrated\" : -0.5804385960765441,\n    \"id\" : \"1536\",\n    \"castegroupAlt\" : \"5c1dr8p1m1xjqg4o01x8rtddd6t7seydksx79x5ljjsl68tqp2r1zuaso4cqayl1bsw8o0h1kmr6osb5v9w61o2q98pp063gen6674lqz8bm7296wdh6ah32e2tadfrvq9053fl2bgf0njxjf2ge6yikezy7ytap1j1aj4c7kbfxx0dikl0tsbbohzu8y\",\n    \"script\" : \"rsl1m8n4rieylyuj187de9gj4blz2na63hy1u7prh3kao2bogql0e4tpabp\"\n  }, {\n    \"castegroup\" : \"2zjctpoyetek2r3q5629hycf6scpitu5o0mt2amokrow9j1my6b7im9vkrwsxuzd9nd15883z0q7p1r7hrxt258a5xmsvvvb2m7q8hdiveo9j6y9uxkyp7cudc2o1pqhgdcsjfu5c13puqx80d0ze6zh0v0xuk8zlf9\",\n    \"castegroupTop\" : [ \"dia1si47rbrvhs108qp3tsvewu6nuwhndn44fuh2rb96qo55elfz11u3dp337ygyue\", \"wehgprdauwzgkgmulc2zfkq40tpdc8722gvo6ht601ybi4xpgdl093lub2pn8cia7glj2ewreb56ps5jt46bx0mzdzn4jmjjpoh5jf7ys87dy95rbumuz6wtl86fxqzgdpnnrn9icehk369ervo6k1vpcdwcbdlmxn5ncqmgfn3c94\", \"lhbb0yg1fc9lz7et4fib4swuzx2fuo54wtci1oj0eeno6s9lpmxjarv6qu5cgyaz3sa2ptazyb8okdy0r2grwgfac5ksffrim6mm6qpw31waher0r8m8y2q1g7pt2fylo0gr5rxyrge5\", \"wzo83jqavk0rohra8lthlv60bl2xb4l5ra96f408d31xphs9vcm7l8rgqrzelrtcc3zlxq0melnup04pntp9hwftuj5ng656ng61wahkebk8whaqh2ghqcqwudu48aeibzhrmfrpoeqxpse3ks5k2vhhrsie92zmod5x2lr60caga\" ],\n    \"score\" : 5.280480845117963,\n    \"probabilityCalibrated\" : -0.0520377700044532,\n    \"name\" : \"Charlyn Hilpert\",\n    \"probabilityAltCalibrated\" : 0.8293024059480334,\n    \"id\" : \"x9sr\",\n    \"castegroupAlt\" : \"pjtnecri0cbenve8xys9og12j092tkhwbgenn0sjt8g47ov1tdc7271dvolq5alh7tlci0wo8yololgjg739j85im1uhxz7efcq7ave9dird0esu6g2yb7qox5sx2e79wcl7frb\",\n    \"script\" : \"ahlwj4z4bpl9rdywpy45n798kz1nmyfgrvtfh6\"\n  }, {\n    \"castegroup\" : \"p4hlljwnrxu6ex3cogs33ulgjlsjth0v87bjn8reox9c5tui6vp7y1tahec8v8uss79\",\n    \"castegroupTop\" : [ \"f0lisrt3mpzdgz8o4c000ohdp2r3p75odb5gf383mmp5ea8ko6rogt5r76rlofl5pqpqu623mj0ezsct1h113nqqfoztvtumwe6kq8w3uih3prxqj89cdm90fuqwdpmatdf1610b9lkk59xth3toxmh0py5xcikgtp1io04j\", \"ucbwz0nq6itbxutakjaemoezu8ap1fpld2yu1e4lkox44ovjaojh0bts8kamh1d4dm8bs8u53yuqhr\" ],\n    \"score\" : 19.785635943093617,\n    \"probabilityCalibrated\" : -0.00456561578393444,\n    \"name\" : \"Samuel Schinner\",\n    \"probabilityAltCalibrated\" : 0.7092392613359495,\n    \"id\" : \"q6v7\",\n    \"castegroupAlt\" : \"cjr8l1j340veeeherfd8f6tjpkeuixpl\",\n    \"script\" : \"g2vlpytgw57xn818kt3qszj4jtuqn5y5tz6u9ms5c9rb7ykc0ffk23o9ri9uhxb0pl5qoysa1fxroh9mhquek5k\"\n  }, {\n    \"castegroup\" : \"c8gptmfdzqrt1n6pcdlihr3az3lq7t0xb40uxdh7dekc2cfjxiiu7xjk7ot98pxkl\",\n    \"castegroupTop\" : [ \"yzztb1ad5fdh1pw5fi52jwhbp0h9udtnrfkxn0jwgn4u3h34518qfzom2i3do8bfnneaz5evosht6g52wa2kt43l5vs4lwalu35nk9eccq5xyvlk5uwd58qxofi65at8qne8o8cc9h63g1kb0vcc3agn1mwctuwqlz3a\", \"67s1fsp3o8g7jm58cz89x4r08nct76xj70b9pe5bu63cde343jz3ait1b8t1vbhoh07nug3q5koxvo2g8xx681trx4a3kez1388gvm5gnyeh5mdpw0uyo3iqay7fs9crpgy86kji2putvuk6il6jse\", \"nzadhhgx2ao3e54a0rltd44g80c77h4b1klujyd2es8pynvwlu3209o9f4u4l9y3ejut00srl6lvj5hwndrw5g6ckkobqo47ej7xthftdprj11c5ro613q8h851ily23e54wifwjhwo2va13o67ef50xu65u0jct1hawz15yett0y1xf2cv\", \"o93r9rdtwady1xao6vxtpkabk1oirg6hni7l6kjuohfhxqx711t7dw2n261dgs29quskatun5kr5orqkk\", \"s4ywbc44y9yklqvuy5je6wous8sbbbgcfrbgxddqq4bt61yqq8060z6larrpj96h6itpcmqvx0qgm7cxrisyd8qgrqzj7v7n3rs0c5q2s6cjk2g7u63md1cshxbr31yjvcs2i56kziswwl85txp6lmj1izjso8006q5d\" ],\n    \"score\" : 10.263356936790203,\n    \"probabilityCalibrated\" : -0.03430318625862161,\n    \"name\" : \"Stephane Botsford\",\n    \"probabilityAltCalibrated\" : -0.6349910763273146,\n    \"id\" : \"6cns\",\n    \"castegroupAlt\" : \"vfa2liao5i1b43uhyrj9s6wxh24alkou3ln2ge5ap3jvd65k91jc1tknsuxf28m3u0a9utji1nlr3a595ao0pm29nypja4hdksdvwg9vm47r2hh0j1tljc5a3ma4tpjwq52k3ma6vbdji627qkssf\",\n    \"script\" : \"5lwu1yeobd9847dtg5i1vomn5v73e4qzb1qh8zclvm8mt1etpi6pahqbrwzyius0w6bfhp8avx7868i3zolyac7q6hyjf8jf4rvczj6r3wnqp1g1r0hdsjza4w77xta6cozdriqjk9j0q4isjzahnnk48jbxzyu33p719u3okavjvsqg\"\n  }, {\n    \"castegroup\" : \"v8rf7jkcc33mmmzrftsg420vg3imgof41byiaj9sd6y9l90tyqaj4ouwn\",\n    \"castegroupTop\" : [ \"4ubqhiu35ojgcpic5xseiiuzjdgjjuzzsdyu80g\", \"nkqozw6ucv0lfgvcch320tgwz36jwbtz4celqfo8qqskxqovhcypj2049nearc83xjam7irnlgsfux259f3ytlb4jkgfmti58768c2ta25y0w56ffaeanj718e5skq842d1yi7lml\", \"4n2sj4pbcg9pcj905bg85e8m26xajdtjlyg1pftbdlz7ake4oa2fihjuain0lqtdovznmfbnq5gfxc3d1mo8xyiykf7biyj17v9hjf02vskdx2bhannxdfmsd2hhp6bzc12cb48vgzbo4ezihsug72yrn6nbb2801d8wjyy84halxnzb8d1hy\", \"r3j2ujfasqo8ltm6t6a6vvigzkyvanrqedhxdwelk45d3niiysrasrgl5430reyzugb2hsntt3s2s5wgixa2oc447v4i9kwwgch\", \"hdgw7xye0xmngngeiqg\", \"dl2s\", \"vhic8uvmd8bhoax15g8l7j1mb7w40sdsrk2c6t7z0ntx2cz6h4frduyp5gwrwf7wwyi95t95an0e5tyatakom3r884z18a6ojkmj5teqf08my6gopx84hydr47x3rbw5xq\", \"gvo0ztrhc8bmz6ecpfwlir6zasx60heb15f6ypss6kzqi9hiqgb7diu8e7fyni6zi8aozr70gesv1qkh9zkjhs6wo6l5fgt7cwejmy1koari\" ],\n    \"score\" : 45.419305136023226,\n    \"probabilityCalibrated\" : -0.39151225414487234,\n    \"name\" : \"Malorie White\",\n    \"probabilityAltCalibrated\" : 0.9138536472172913,\n    \"id\" : \"f2i6\",\n    \"castegroupAlt\" : \"8vqywvzu2ips\",\n    \"script\" : \"ljfzewzuf729xv9zepe071apfhvhg3pvf2djo48n8ju605n0f3gdztxcl4ekvazm8w7qryx9sqcgh3eec5wwjms1o58iqn3srbitof16stjqzow9yzv4h45013x2xeplg9pwtr4nr3st42nt0iol6b71rur1o3xhspy5ju61x1zhqzay6c8k\"\n  }, {\n    \"castegroup\" : \"ai2zmm9pmfkqy2eb7f2le3bko9tghpdcqz70vqv4ml94f8q3hwwb2winb3erzk0p3xohupv8v1rmwo1a5c5n2dp4uubirzxmzwuehpb9knzecj4arb8aox61co70xm33gpkgqupqgzw0ksswkdune0n81j6doeozleiyqx\",\n    \"castegroupTop\" : [ \"zosaz67ve8b1vty7abt0pdvfst0ifzeog0se29bbmqr5suika9wfh03aduhp0g8kz5ywekc65m1wbsvsmdi6928do3ia6mxdmixcvib\", \"ou6fwlhj9ctfcrcwwf679gwi4bysftapdldpfzr4i7fw5p5owkf3n735pu3k8ywhlbxul0cuznj5nml6s6wiyaaanogdr4rezez1anjkkkakkb02d6odq66qzgysg4bq0kjaqogr8x07ajavj4chnq2dso1wzqhxjbtlu48jz0d1r6salgg826eej\", \"31g55s5b78d6udh5y6ykbt0rz1r3108tdicp0cvhr5i46z2ymyxmsnsjqcow5hbfl6npkuhgh0wql6dieluxs3jzlg93tvmdpwnnh0lh6xnrjdpb\", \"utf\", \"l79mzbkp8po4l98ovqu9gyo8b2leey1adct8nvub9ojmro7gogh2uyk125f5uh5o8wbstpbd\", \"q1d4sj0j8smnj5nrrp51digkovtqy65t5uh69l0ail4gvlaz5bqt6wzidsxwmosvb2cp6k2f42rgcadw06ggcte9w2iqkm4zwga8zc74l2k8hiwp8wupg5e0plxv5oeq9550rpb0fhhbrri9a4c\", \"7yh3omcq7e8m6e4jqjkkvzh55pj1ki4vq91ris5dlcihc2llo8aoao5v3cvnd00gt5fpnyc\" ],\n    \"score\" : 89.39450687314731,\n    \"probabilityCalibrated\" : 0.24209802681956094,\n    \"name\" : \"Lorine Ferry\",\n    \"probabilityAltCalibrated\" : 0.6775956283362423,\n    \"id\" : \"3qu2\",\n    \"castegroupAlt\" : \"uuweuqoa7ve7lyb6ps7oneyjviu3h8eq3212pqz88j1fsnpehrwrxw3trnl508fti17izifokhigj4xqx2otcv4k4fxiszg20hmdkaqqcll6ee1kwc33r81mf0096xjc36\",\n    \"script\" : \"ek3de7ggros6t40se781mintx1roa8m\"\n  }, {\n    \"castegroup\" : \"yjdro3smt3k9tikmpesjt1snot3r1kxqqbcn55faok4mhkmmjvr2lqktlr9lunp7jnxezi5f9mbzw1d9prreazqzrekykrv21qplrg2jglixm5bk9j8lesw2p1w77tv6h5cc5hfmagdxvlqu1i15ml7dfmy6f\",\n    \"castegroupTop\" : [ \"8yk5q7gfopoz6llfwwt5oo6k5kfaw8bzcsksw6grkxgfw5gwnxznsg85vb3i62jxqi9k6u1poppcg7jox1oxa0btmmeacrpky7ugt2m4bqzgth96kumqupy8x78m149fs4zis2p9s0iqv9b3mszqpl6\", \"wg9vwvqydzlaky2jd7gtch2vecsu6g4qprk\", \"2eqwz28v6mc0nsjw66u76j5mxi7belnn8p9tyzvphpkayzy1n1ccyjrw70zo60qawtovshljfrcnd3epfnc1id21mrcmsbjmmzt84wvjg0vovx26smkf\" ],\n    \"score\" : 6.503124690923734,\n    \"probabilityCalibrated\" : -0.16355360604361868,\n    \"name\" : \"Dane Marvin\",\n    \"probabilityAltCalibrated\" : -0.5641571763091489,\n    \"id\" : \"836s\",\n    \"castegroupAlt\" : \"32tk12vmk9ocx5tdrefyb0zh\",\n    \"script\" : \"c02ycg88k5utvy7b4vv9o42i\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdd9faa6-3d9a-4f61-b250-4195d3759b10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.30982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFullBatch",
          "schema" : {
            "properties" : {
              "personalNames" : {
                "description" : "Caste group-coded names",
                "items" : {
                  "$ref" : "#/components/schemas/PersonalNameCastegroupOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "BatchPersonalNameCastegroupOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "a5abad58-0ffc-41bf-8bad-7f093b5479eb",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 403",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/rufurwawe2xkp4nvsyo9kcty6pwgggsg3deg050ed5ninswibq7zacy6q61cqviaprfdk1ct6goqi9t4higkth2oycw0ilmggs8a74xkuzabdd4jd0ae5z5hxx1nxx9xo/4aqr8f1aa7thpa36n1zojr7rek5e0fyfr3lhz2urgqk0livrqesc73r",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "a5abad58-0ffc-41bf-8bad-7f093b5479eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.308403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    }
  }, {
    "id" : "d498f710-9b80-4f1f-a1ed-8a0cc8e7e0d4",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. - 401",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/i4rqzku6vdi5r1aghmh1xs407p0i6xzv4ayfworm60au5z9q3ie0bgpjrcmc9x7zj1abcquie83aacbi41m9kpemy7g7xcygns6xgz14xem2qla0kenu5r5jp8l9x52kvc2qiopj2tuec67wb1rj52fk0x/13t64ef3oa3s4hbrvm5tl04rsgf1hkmz5aitcd3dl08p3hc6nqobqyarc6t2c",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d498f710-9b80-4f1f-a1ed-8a0cc8e7e0d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.308362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull"
        }
      }
    }
  }, {
    "id" : "2037d65b-80e8-410f-9abc-6e917eeb1f67",
    "name" : "[USES 10 UNITS PER NAME] Infer the likely Indian name castegroup of a personal full name. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/castegroupIndianFull/9q3fd9pjoz24vpa1ekg47cw9ymydx4jjjrb5s4bmkjkzhmhsl3zit71jju0ey31gjw7s6io4zdvo3j4psovagm4mmixoljf46apj2gy56pmf5/hhjvh0ws0lb5gnqtsd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"castegroup\" : \"52x2qpw4p9pgjypomhie8a71s7nkpr7l0dy2hpcbd1ahoqekuinp8edng5bjpod4mis1yrpyfgbdslhkv7c9zv17rh0h2ea6g45bmf2cdxu9n3mlbkuysw9tqtzll6bjuo0coysa0pxxe90vo07kclusfyfj0vwy4e9bsum7s0vqwm848p9\",\n  \"castegroupTop\" : [ \"8swejp462zo29vy4gmosl1wu9ck7ukfmvu02ui9u6thogrergk1ji2wfgsifsakgyeoiqfqxkpmzltolzy4h2tyd2tzb5svcdrraft7yz4s8ksej50911mffgvnpr1qeu\", \"rqxk9rck1824v0zqibhnx2cbdkka1\", \"5ea3izaq0ttlbv6k5l76dr12a6wk3wb2vui3ymtju3yc87o1rzji4mvnpggm8ulkbra40popv2vhx7bm2orobas6x53ny9udh9hqif798vxom3q4dkiyjfr\", \"i5js1szjsv60okxhsqmugk89ohud5dogvqt7x1shb75nl7driefksa17e9jo066vauymigq7rw14rqrnijxxtle7fnnfikl1tdu9pzr624eq6lc955k4k9vpw34xmhlbu7upgqs5r0ihld7scntdsavix846sl1cb30k2zo967ud\" ],\n  \"score\" : 17.46986744789034,\n  \"probabilityCalibrated\" : -0.3478664763881827,\n  \"name\" : \"Lynwood Shields II\",\n  \"probabilityAltCalibrated\" : 0.08159102949199282,\n  \"id\" : \"lc35\",\n  \"castegroupAlt\" : \"9vjsftd966ndlmgd7vah7oxaa3lmlr3uy5hdcvnj8ixfrtenyevvp7udjhrgwn8alu2gd6bug8vlga4jxxhls2cydxnzguoaptaujt47seym1x7wg04rbj3ivh0by5zjr616zp84a6kvhdy43s4pqn92mv8h1s0fz57ce6f27aezw3ahlsphtxj4iquwdese1rrt8jq\",\n  \"script\" : \"gwojlfcb7v5dop\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2037d65b-80e8-410f-9abc-6e917eeb1f67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.308298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "castegroupIndianFull",
          "schema" : {
            "description" : "Caste group-coded names",
            "properties" : {
              "castegroup" : {
                "description" : "Most likely caste group",
                "type" : "string"
              },
              "castegroupAlt" : {
                "description" : "Second best alternative : caste group ",
                "type" : "string"
              },
              "castegroupTop" : {
                "description" : "List caste group (top 10)",
                "items" : {
                  "description" : "List caste group (top 10)",
                  "type" : "string"
                },
                "type" : "array"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "description" : "The input name.",
                "type" : "string"
              },
              "probabilityAltCalibrated" : {
                "description" : "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "probabilityCalibrated" : {
                "description" : "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format" : "double",
                "maximum" : 1,
                "minimum" : -1,
                "type" : "number"
              },
              "score" : {
                "description" : "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format" : "double",
                "maximum" : 100,
                "minimum" : 0,
                "type" : "number"
              },
              "script" : {
                "type" : "string"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "PersonalNameCastegroupOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "0bb9505d-20f6-47fd-b828-9e3b6ac358c1",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0bb9505d-20f6-47fd-b828-9e3b6ac358c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.307946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate"
        }
      }
    }
  }, {
    "id" : "5447681b-9e94-4522-aec4-aaab8b94ab06",
    "name" : "Print historical API usage (in an aggregated view, by service, by day/hour/min). (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistoryAggregate",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rowHeaders\" : [ \"vvrab7okygy71x4mh9b7or4d4jtogxavnwed4po0ofsgo5ud0n9915xpy4fuafrwy7o7ekkqzou5r5xqlsj808whruy3ofxi9vcso9yub7kawe4y77j5alj163rusxyd7nb96q8zqwdgdbrdmyjytnlxg5mvnqdc5dlowzh1v3rpgsbe0rkduznk4\", \"8b2kshhcm2nq954v6mco9epv7u7nx7fgyjutkti05f8k0lxm9mrmnjbe986l98l6elyw10wy77z0qs9o1slwx1zpygt43jxtfeulx2t2fbuzf4dqv1xdzoes5mi4l0amzxjcaw\", \"borg20thbcvvnl9crlu9g0x0jc8p03ilyqo21nf7oda8yh40k5yjonv6dbgmj37xit3djk7zfjxk5yperv6tl2\", \"pm4971lyadxw6xijfvlqg0jdzdudf93j5nsu7spreux2gcbi4eq6m5fjf4pbx20k70vm10rz7711cszuua9fksrv5l3kcjt4ld29g4uvgyugf2v2o41ha2jc96kiorveya48pokjphfjh9tc\", \"qa6jds74uqu78spiomj6fqqaww9endfrdc443mhk7muv99sf8quz043j8rprmysnq4w0pa9zy7fbjvg1b66urn4a3lbiogywol9amfw23k9mexajpyc801d9fotj4nx7vkxyojhnbez19ir96gbwjmu9sfp1o2ux485h9\", \"ik9np2ehhx1y4rj7phyi0nj1epdqz09xhh192f5zh56qaq04c0qitwc56rkxvjxsmeqsoswb19s4aaoy00wh4y5paze3zx7cdnzo1e5wrmz03r8wbew72cnxjrz67b6clzsywo5ztprehhrc2qnoujlc6d7w1vj8gz5wzavchv5qp\" ],\n  \"data\" : [ [ 456686821 ], [ 1177281266, 718396957 ], [ 1000376946 ], [ 1284772149 ] ],\n  \"historyTruncated\" : true,\n  \"colHeaders\" : [ \"w8tb5arn1kzq1bk7xhm8xzfvdh3zvgzjesbl6h8xns2hvcl5x0f0w9q16v0oigtdkuwk4eqgc7wq0w1xxutzy68ukna6olbwgpcsj9etxsvwuzbbi3sgz3ufhvqy8zib7x303an6icm0f5wsc8j44x4ryvw77u\", \"8esnyolurdxecqgd70iftg2ra6zdj3p7c4k3yjj259hfil4yml0rq39mgjdmg4r3cs5xe66jzneo1dyt6xksljoh3ozorch66625ttpsh41r9ep9k5rsemmadug2xbrtch8j0sidf4pea8ffnklsoenldt9919hbau2nfv0vabzzrwfm8w1k553u74tadj\", \"9tptruxwzsshf7fqfmhk984q7ug1102zmatfxvo8d3p\", \"352js2zzcck9c3722z9n3o22kml2g0js00gy8ify\", \"gie47n7ukmhsas5\", \"hplbajpwlzfm51h530847epv3zl\" ],\n  \"totalUsage\" : 2269775949151117636,\n  \"periodStart\" : 8211183821882525040,\n  \"periodEnd\" : 4421787370400000292,\n  \"timeUnit\" : \"2022-04-19T16:47:24.307801Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5447681b-9e94-4522-aec4-aaab8b94ab06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.307911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistoryAggregate",
          "schema" : {
            "properties" : {
              "colHeaders" : {
                "description" : "apiServices as column headers ",
                "items" : {
                  "description" : "apiServices as column headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "data" : {
                "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items" : {
                  "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                  "items" : {
                    "description" : "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "type" : "array"
                },
                "type" : "array"
              },
              "historyTruncated" : {
                "description" : "If the history was truncaded due to data limit",
                "type" : "boolean"
              },
              "periodEnd" : {
                "description" : "End datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "periodStart" : {
                "description" : "Start datetime of the reporting period",
                "format" : "int64",
                "type" : "integer"
              },
              "rowHeaders" : {
                "description" : "dates as row headers ",
                "items" : {
                  "description" : "dates as row headers ",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timeUnit" : {
                "description" : "Time unit is DAY, WEEK or MONTH depending on prior usage",
                "type" : "string"
              },
              "totalUsage" : {
                "description" : "Total usage in the current period",
                "format" : "int64",
                "type" : "integer"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageAggregatedOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "77b62e99-e9f9-49e7-aae4-259519f4fc1a",
    "name" : "Print historical API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "77b62e99-e9f9-49e7-aae4-259519f4fc1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.307624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory"
        }
      }
    }
  }, {
    "id" : "cf1c0090-04dc-4731-a456-514fd8cf7e54",
    "name" : "Print historical API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsageHistory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"detailedUsage\" : [ {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"mexqbk118resug05romkqlaqxheqw2mkb673gu47rqo8byyahwd6dv8523fwjig48r0xyebrz5z9m29e6hi5coo\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : true,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"976b\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"348w0ukdq6gqsyzgdtm06ewcbpdsaozpzgdgsfhkdeuxdsnw\",\n    \"createdDateTime\" : 1599142863287595255,\n    \"lastFlushedDateTime\" : 191590926779601892,\n    \"totalUsage\" : 7494099143972561401,\n    \"hostAddress\" : \"m78ftdln8wx8x5gw42b83q0st7o965ou3cym1vfm9r7nv256vpqo2y5eystqn1a112mcq14po4o2fqny26th95kfkx71mxlzik0dihnlu9sjksy75qn9x76n79pcx56gcnszrqt1alaoezfubdqdrfr8edl9fyr1fu68kwo9t6cel\",\n    \"lastUsedDateTime\" : 1195131404817364431\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"52xknd22qfwgnzmpzlmiy3khh4wr4bkdgmm83zuperzy0t8yt3t0g147vsj8eh4yn6teh6p6mmgu7hiboswemvt5b3uafk6880otkjoumaee9ne75n9c7zrw812p2rrz0yhjkkvpywnllkuzm5ab477cc8up42rsg5rnan2m2o3\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : true,\n      \"learnable\" : false,\n      \"admin\" : true,\n      \"disabled\" : true,\n      \"userId\" : \"nd73\",\n      \"vetted\" : false\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"5eehj8dni6bium8c637xfynj4v22kf5ugoh69fqx6yzonihausd47le6jcfod43amq6673475de7xwkeqpbiwnz33od8ps8q\",\n    \"createdDateTime\" : 5382490355212939300,\n    \"lastFlushedDateTime\" : 6479298636664945787,\n    \"totalUsage\" : 1272289778229443625,\n    \"hostAddress\" : \"6mt1om0dtlneamh880avydjflt0xkvrdrff886tffzq3rdp54voifwfzoqh6dslsddd0vd1ipkumcyxgjhv7c60a37aubuwken\",\n    \"lastUsedDateTime\" : 6059341731539200537\n  }, {\n    \"apiKey\" : {\n      \"striped\" : false,\n      \"apiKey\" : \"ohe4d2ufs81acjptm91qqzj912y2wmkg47czjb9troivum5bfebi7apef6zdicn134lp\",\n      \"partner\" : true,\n      \"corporate\" : true,\n      \"anonymized\" : false,\n      \"learnable\" : false,\n      \"admin\" : false,\n      \"disabled\" : true,\n      \"userId\" : \"u8e2\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"0zxwaual2j76sce6bbngz9suee3mctfmd19i5q2vutrqtuu2z85z60c014fy4zyu152phgx2srhdhwh8k9dv9whiabjq57ec9wq9ke9gqgjb8qoqvjj6g9nwar9ejs8r1avg0jdcgxf42lhw4p3pv2hv4pewvgv4\",\n    \"createdDateTime\" : 1248107428262094820,\n    \"lastFlushedDateTime\" : 3263330363237880101,\n    \"totalUsage\" : 7453544717194003561,\n    \"hostAddress\" : \"leef8svdvepxda9m0avp5pnwyfr9rdxxmglj8gj60kfxu16j2dmj4yvb8oxmvguj988cv440dmm9oh9m1n4l9m3lx3bc77scgphwigjq6mz3u7q7990nbghdkxgzy4udyktp9tas\",\n    \"lastUsedDateTime\" : 1085980776624553279\n  }, {\n    \"apiKey\" : {\n      \"striped\" : true,\n      \"apiKey\" : \"o3ypgrv9jab1ecbdy8pfpv3c3hyi4ncu1olvrdu1bd4pjegaaupphe625x7edimxg7gtcey3oudy7fyx6zzhzxkr5o1q9qaxq0hhphz981mldjbbfo50lda421ep2jpivut10ui13rn6qu3zxtg2qgj4pa0x35dinpgiosqqek4t8\",\n      \"partner\" : true,\n      \"corporate\" : false,\n      \"anonymized\" : false,\n      \"learnable\" : true,\n      \"admin\" : false,\n      \"disabled\" : false,\n      \"userId\" : \"73mr\",\n      \"vetted\" : true\n    },\n    \"serviceFeaturesUsage\" : { },\n    \"apiService\" : \"74tpj8ycxhj5xxirgpz3r9g08f1k871zbdyzqm1ty1lcejq8bp3wue1d06rs1jmjq2z9wscbbn4a1pu30tpn62b\",\n    \"createdDateTime\" : 4548853005649191746,\n    \"lastFlushedDateTime\" : 4652920919458851972,\n    \"totalUsage\" : 853431121140317343,\n    \"hostAddress\" : \"7kd079t2txa2mmhwb4rxsambe8t1onyhf0om149vuv0lmd09yevpx2eoz4ua74zypwl5v4xc8vehcu178vuehukz10lyshgzhq83qtim2sq5m07erq563hpgf7k0k3gyfsckojfgqq5fm52r13w\",\n    \"lastUsedDateTime\" : 4135264657460895254\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf1c0090-04dc-4731-a456-514fd8cf7e54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.307599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsageHistory",
          "schema" : {
            "properties" : {
              "detailedUsage" : {
                "description" : "Detailed usage as reported by the deduplicating API counter.",
                "items" : {
                  "$ref" : "#/components/schemas/APICounterV2Out"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIUsageHistoryOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "00753c67-e0ce-46c5-b6e1-660b09b3122c",
    "name" : "Print current API usage. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "00753c67-e0ce-46c5-b6e1-660b09b3122c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.306892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage"
        }
      }
    }
  }, {
    "id" : "227bb91f-9a5f-43e3-902a-6e3502f07e7c",
    "name" : "Print current API usage. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiUsage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"overageInclTax\" : 7.518036145417823E307,\n  \"overageQuantity\" : 8553728491001344076,\n  \"billingPeriod\" : {\n    \"apiKey\" : \"iisicdqvb\",\n    \"periodStarted\" : 4553642618991853016,\n    \"stripeCurrentPeriodEnd\" : 7844432717565078717,\n    \"usage\" : 5443952648314620659,\n    \"hardLimit\" : 6935957829909558215,\n    \"periodEnded\" : 6865067473070947890,\n    \"subscriptionStarted\" : 6738026848809529124,\n    \"billingStatus\" : \"urixheny0xtp898emfhz47rw9essqxhqtdiusbe1nigby9m3arjqrtw2ppry7q0v85l1onuvbh7ijg25hncyqs0i3uiqykf67m2rcqn90c45guszhuy4aa2qfb3hy4d8h1a5dykeyxd3hk827e4an6vtvpp5otr14mbt51qj5xxu11dlb5i6c1r1akkvv7og\",\n    \"softLimit\" : 5092590052460099856,\n    \"stripeCurrentPeriodStart\" : 2432770182541109035\n  },\n  \"overageCurrency\" : \"BIF\",\n  \"subscription\" : {\n    \"stripeStatus\" : \"0lyqrmptaxstf8bmc7e4qq77chdohvixpxu9e88\",\n    \"planBaseFeesKey\" : \"a8s0k601vd4kav5tubd3hrqfkqfcohgbch7zbyhneo85e3grr9h84fe8qo0hd8ef6hdfnkpthub3bxv\",\n    \"planQuota\" : 4206093841345655683,\n    \"apiKey\" : \"xifz8qnxo1va9io7xl424b8113t0dk8k1e8qe1qn1w7iyvmrw04bikof2axdvhw6a8lt189lv58vtlpnyeqyjfb1en8swijeb8xkd019722u2hdvfd2vf8tsaly\",\n    \"priceOverageUSD\" : 7.435952441104457E307,\n    \"priceUSD\" : 3.75357257420737E307,\n    \"planStarted\" : 657626311974829756,\n    \"planName\" : \"Will Von\",\n    \"planStatus\" : \"j9ah0rglv25174fqlv9h9dxezkl8ohe8rmacwyf9cdro8mnnkt8ww9kc0vyuhdel5bc4jwteldfb42t6i2qzcm9gala9zb06l8njex8v2qts16j654gmpvtz2ywq3r3nctpsf36ta0f1d6sgh1au095\",\n    \"priceOverage\" : 1.1593004496820444E307,\n    \"userId\" : \"sco9\",\n    \"planEnded\" : 6725513857992314866,\n    \"taxRate\" : 7.943468052998415E307,\n    \"price\" : 1.7562521524901287E308,\n    \"currency\" : \"DJF\",\n    \"currencyFactor\" : 1.5465316740567469E308,\n    \"stripeSubscription\" : \"pipkr5bil5chwtvefwq7ytbeme8lk98hkik54024xqpne67i8tc3eusgfxr6xog285hsdfac172trwshhmmypcwr5pf4ml81velube7bvknhdefsa5wirkv39cpce501sv7xpwd0h1bdssw7\",\n    \"stripeCustomerId\" : \"4v2p\",\n    \"priorPlanStarted\" : 989362946694086471\n  },\n  \"overageExclTax\" : 7.955428003020415E307\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "227bb91f-9a5f-43e3-902a-6e3502f07e7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.306866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiUsage",
          "schema" : {
            "properties" : {
              "billingPeriod" : {
                "$ref" : "#/components/schemas/APIBillingPeriodUsageOut"
              },
              "overageCurrency" : {
                "description" : "Currency of the overage amount.",
                "type" : "string"
              },
              "overageExclTax" : {
                "description" : "Overage amount including any tax.",
                "format" : "double",
                "type" : "number"
              },
              "overageInclTax" : {
                "description" : "Overage amount including tax (if applicable).",
                "format" : "double",
                "type" : "number"
              },
              "overageQuantity" : {
                "description" : "Quantity above monthly quota of the current subscritpion, in units.",
                "format" : "int64",
                "type" : "integer"
              },
              "subscription" : {
                "$ref" : "#/components/schemas/APIPlanSubscriptionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APICurrentUsageOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "6df9af05-bdf0-429b-9c2d-7d1ac3ee6d77",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6df9af05-bdf0-429b-9c2d-7d1ac3ee6d77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.306303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus"
        }
      }
    }
  }, {
    "id" : "597210d8-3ebd-44a1-bc30-8dae1ace5317",
    "name" : "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiStatus",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classifiers\" : [ {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : false,\n    \"learning\" : true,\n    \"classifierName\" : \"Jimmie Casper PhD\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Sherill Batz\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Kerri Altenwerth\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Elton Nienow\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Austin Gleason\",\n    \"serving\" : false\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : true,\n    \"classifierName\" : \"Bette Torphy\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : false,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Hermina Berge Jr.\",\n    \"serving\" : true\n  }, {\n    \"probabilityCalibrated\" : true,\n    \"shuttingDown\" : true,\n    \"learning\" : false,\n    \"classifierName\" : \"Keena Walker\",\n    \"serving\" : false\n  } ],\n  \"softwareVersion\" : {\n    \"softwareNameAndVersion\" : \"ix3ccgxye5o66ya2ekv0hf20gmlpt4u2rqe9vwu6c8kfrsrtxlsblwna5668pwpbggumlnn424bdbjqlxfhc5v6sp38yevbgxw84szpvc8shqz5k7zhstfnxb3qhkcp9dk0r5eua7c924o\",\n    \"softwareVersion\" : [ 884717234, 1448464085, 557405776, 1244286254 ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "597210d8-3ebd-44a1-bc30-8dae1ace5317",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.306277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiStatus",
          "schema" : {
            "properties" : {
              "classifiers" : {
                "description" : "The list of classifiers and versions.",
                "items" : {
                  "$ref" : "#/components/schemas/APIClassifierOut"
                },
                "type" : "array"
              },
              "softwareVersion" : {
                "$ref" : "#/components/schemas/SoftwareVersionOut"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIClassifiersStatusOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "8b03ed0f-1853-4f38-a343-9777e7284c4e",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8b03ed0f-1853-4f38-a343-9777e7284c4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.305733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices"
        }
      }
    }
  }, {
    "id" : "fd29fad7-ee83-41c0-b47f-291c34e54580",
    "name" : "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiServices",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiServices\" : [ {\n    \"costInUnits\" : 508669729,\n    \"serviceGroup\" : \"cvv9luqc69ul2wisw1xx35td6jmrlvven2skhmwul06v4jal61uyg8zk8z3h5a4fmlqg4lg20x02vtmamru57ctb5mf30cryooikkbcdo4g6wukfkwpv4kur9ow7r6tumrut8bvrxnvka38o0b80whjwcepg17s9wq7ugyj53o7k1ozlp8d3uvfip6p3mds9yalglk\",\n    \"serviceName\" : \"Miss Alva Schulist\"\n  }, {\n    \"costInUnits\" : 2049427623,\n    \"serviceGroup\" : \"szkq2ofhiwfwc1am7zkhecp5n6aj15s8lno07kyyjy92mdpyf4saii3akhw6m9yfsn5hzsghvmpsjrvt21382qxodwf\",\n    \"serviceName\" : \"Monty Koch MD\"\n  }, {\n    \"costInUnits\" : 1238099409,\n    \"serviceGroup\" : \"ckboipu6qf82lf0oghfwzajh4k3v3lj6vhaishf5198wyd27ig5ky2\",\n    \"serviceName\" : \"Cristin Considine DVM\"\n  }, {\n    \"costInUnits\" : 1132529081,\n    \"serviceGroup\" : \"41j29f8b3uyyqrz0mbbkpcej1bjyj7tsdz84vqh0z86veu96rfspz9j6fzpvrdks7yhp0rdm0w3mbfqp7ie4z64kc3jb0vewp2a3fpcwi66x7o0fc8s6jbdwk8wro6hgffghd8eot2emeyee4tb5v\",\n    \"serviceName\" : \"Sanford Smith\"\n  }, {\n    \"costInUnits\" : 2019725909,\n    \"serviceGroup\" : \"zxqaoz3tnd8ziyxbr8n8q9qs4ae5t3m36pjlgwmup09wkkk99yucri8vha97wvxpqu2xmewktdtcluizdfmo6lecteql31dxrgi69y4tq53pnp17fn5w9p179y4fyaa5lzpt13m6qb96c96f9z4j074f5y3yi5t3oke12bv0feic8l40ppb9t3cq9evyiz2sju\",\n    \"serviceName\" : \"Sandee Leuschke\"\n  }, {\n    \"costInUnits\" : 1552179297,\n    \"serviceGroup\" : \"nbbnne27hzjofnwpff6tn0xo79zjq4o42k7izu8xrtqxf49qqkg3e80zwp1iaejod19969655d8u\",\n    \"serviceName\" : \"Darron Homenick\"\n  }, {\n    \"costInUnits\" : 893607640,\n    \"serviceGroup\" : \"b3gxj1tiwk8k6pab1qhr8p6efq3s027ie0t9uq6hbhrdxq8hv1cub8ls6u3axihvuyvdtp4u0th0h3vaz0e9f0ut6mvc0ke18jvjf\",\n    \"serviceName\" : \"King Dicki PhD\"\n  }, {\n    \"costInUnits\" : 1396979439,\n    \"serviceGroup\" : \"hrlfhof8hrkww84ui8pukz9nqplezno87u0rweo3d01cvjqfjapdljc01vids1f4tkdktx2vg4v3ecf2ny9vbemdw8txu2mdgvp49h9q7wos5adx14ysivjf69x1evhnzyk8f19f9qsgwrysylfxy0g07x35kbommh6zt6m2n9kiu5lh\",\n    \"serviceName\" : \"Nerissa Collins V\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd29fad7-ee83-41c0-b47f-291c34e54580",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.305703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "availableServices",
          "schema" : {
            "properties" : {
              "apiServices" : {
                "description" : "List of API Services",
                "items" : {
                  "$ref" : "#/components/schemas/APIServiceOut"
                },
                "type" : "array"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIServicesOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "88fc609a-f4a2-48a9-8d9d-cda7a6eb542b",
    "name" : "Read API Key info. - 401",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "88fc609a-f4a2-48a9-8d9d-cda7a6eb542b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.305061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo"
        }
      }
    }
  }, {
    "id" : "98fbfebb-58e3-4ad5-b1e8-91d3ec813006",
    "name" : "Read API Key info. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/apiKeyInfo",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"zcxfzjb9swnhq131wl6wv35fyeqtmktvius484jpg0gdby9hgnbvnj4ojypwyimugjg943c3nda9rp0k5rej0ek59wrqcsmitbf2gjtcyu59soy6b4f931juyhcesbx3wem6y67udf1ux8gzprigf89fo7ohvqwhaly1suq6\",\n  \"partner\" : false,\n  \"corporate\" : false,\n  \"anonymized\" : false,\n  \"learnable\" : true,\n  \"admin\" : false,\n  \"disabled\" : true,\n  \"userId\" : \"j824\",\n  \"vetted\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98fbfebb-58e3-4ad5-b1e8-91d3ec813006",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.305028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apiKeyInfo",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  }, {
    "id" : "349b5520-aeb7-4a36-9af5-2b20f8f29a6c",
    "name" : "Activate/deactivate anonymization for a source. - 401",
    "request" : {
      "urlPath" : "/api2/json/anonymize/0dvo61fyl3zphi5i1mbvfi9xwo13ahzoas0q2p/false/mwov748b71l5ja0rhbty54hwenw",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "349b5520-aeb7-4a36-9af5-2b20f8f29a6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.304711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize"
        }
      }
    }
  }, {
    "id" : "0c915581-f3be-4624-8042-0cc7e1e73f94",
    "name" : "Activate/deactivate anonymization for a source. (application/json)",
    "request" : {
      "urlPath" : "/api2/json/anonymize/e3nbw0cmc89cs95rtyjozcpuc0egikqv4zde6znh1ib3ypv8sycqdgcqydgrjwloq4b4s2wsmfr8pio2huwo16ncvzun8f0g6j5gut1vvr004sq5f562ifgxado0r1r0a0whc84ygtvnlzry60bgtaxhr0xyxqqfev0c1ngqy6j9mclgar3yam96q/false/hxq8z1gktgq3rcun62sv7u3dih20w4rtltwcdbs5isbq3y2s5y2qftflrm8u0heybi7fz",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"striped\" : true,\n  \"apiKey\" : \"gfz45ilq8gqd9sanawvedxour1a98gjbv4ac3n2gc0fartukojeqq7nlyqswqsunl3zhn7x8ju2z1me0uylrjrv0mrmhp4ukhbtlakmvsvc1e5zb15rzxcqb3owt5ivbatgo4owota4cr\",\n  \"partner\" : true,\n  \"corporate\" : true,\n  \"anonymized\" : false,\n  \"learnable\" : true,\n  \"admin\" : true,\n  \"disabled\" : true,\n  \"userId\" : \"yk3s\",\n  \"vetted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c915581-f3be-4624-8042-0cc7e1e73f94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:24.304216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "anonymize",
          "schema" : {
            "properties" : {
              "admin" : {
                "description" : "The API Key has admin role.",
                "type" : "boolean"
              },
              "anonymized" : {
                "description" : "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "apiKey" : {
                "description" : "The user API Key.",
                "type" : "string",
                "xml" : {
                  "name" : "api_key"
                }
              },
              "corporate" : {
                "description" : "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "type" : "boolean"
              },
              "disabled" : {
                "description" : "The API Key is temporarily or permanently disabled.",
                "type" : "boolean"
              },
              "learnable" : {
                "description" : "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "type" : "boolean"
              },
              "partner" : {
                "description" : "The API Key has partner role.",
                "type" : "boolean"
              },
              "striped" : {
                "description" : "The API Key is associated to a valid Stripe account.",
                "type" : "boolean"
              },
              "userId" : {
                "description" : "The user identifier.",
                "type" : "string"
              },
              "vetted" : {
                "description" : "The API Key is vetted (assumed truthful) for machine learning.",
                "type" : "boolean"
              }
            },
            "type" : "object",
            "xml" : {
              "name" : "APIKeyOut"
            }
          }
        }
      }
    }
  } ]
}