{
  "mappings" : [ {
    "id" : "63cb6ce9-97a8-4a5f-bb7d-2206a5931c34",
    "name" : "Creates a Serverless VPC Access connector, returns an operation.",
    "request" : {
      "urlPath" : "/v1/r9ebshwk85urxihvj3jxebal1ca7udu7g2bgmpf26cp6ioa5w/connectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dave Greenfelder\",\n  \"error\" : {\n    \"code\" : 2137768595,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Tempore nihil in magnam recusandae accusantium ea. Amet quos necessitatibus neque. Expedita at iure. Itaque ut tempora illo. Et quasi enim id rem delectus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63cb6ce9-97a8-4a5f-bb7d-2206a5931c34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:42.456651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "5bf4be51-aa24-4cd8-a4aa-e6c1e20f4b6e",
    "name" : "Lists Serverless VPC Access connectors.",
    "request" : {
      "urlPath" : "/v1/fqbcmij4394fpsqtbvaqfgojlli23y3ya4pdpi449bvlgc6oc4rioa8dbnlppq2pq535qmbjvis6nx5rpp0g35r6iuhzdl2sh2j2yy0wg0o9xzj0a0cw5m67l9anye2llpk6wtirrlicu6klj0zlk9dhqguihnszcyathte4m8/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connectors\" : [ {\n    \"connectedProjects\" : [ \"af8ejv7j359ngxje8i10s5uez72l3yzx3eorcn6qdmu9w8cqz74210bsevkj83owlazbeatnetyh86mxtovzo85hxkja0vgwslqjfvc5wocfp3pe625sgc9e0ya1zzikc6klzbvqtn9wqwtvvfe0mc7ubx1g1qch1h6sfhtssk4jlgyamx7rid3j6pdol1xf4q2g\", \"ip154yoivklzeee3who1agcwkkg3lg6ulqmg5bh6tej83plzd7szhiyw8tyck2g04nf9qem5lf6vpam8rfu4qfmd0sn778ot7bqwxzupa1x2d7qq4cxl6p4tvydutwq9eyhgbiy2488yrig5\" ],\n    \"minInstances\" : 444388906,\n    \"subnet\" : {\n      \"name\" : \"Mr. Robert Streich\",\n      \"projectId\" : \"6629\"\n    },\n    \"minThroughput\" : 1537379812,\n    \"name\" : \"Lasonya Dietrich\",\n    \"state\" : \"UPDATING\",\n    \"maxInstances\" : 266831237,\n    \"ipCidrRange\" : \"6bs1xcn7zaaqt2j0xnqtgd9fhp9e5ib37hmd4t1khfyevw85ghqkcvsymdvv7j38ut4jixbtim21omnz8271ptm10wjw8u173p6djr593mfilvy44qyhq9hyg3ex\",\n    \"machineType\" : \"ze189rqcx2d47btwy2fb\",\n    \"maxThroughput\" : 479114464,\n    \"network\" : \"1ljecqjf97ugg4ijgakrempyw3z67kmwe12\"\n  }, {\n    \"connectedProjects\" : [ \"rokx22yc9qjdn1bowx7j9c9rkzneobbefygp6gos74dt7z7hutz4eoii45amaxy5fgaceytmi862zefux38ai95wasftvt4cbcvayb2ele8r59nti1u9g3x2feypr48kqk7rmv2z92doggn30dlmnfigqku46d2pp6xjnzdyps2\", \"y02fhu78x13bwp7f3nm38b5jlgcrprzv40rjmb8ioz2bvepjmsd6akscn57wu6zlew2dni9gd5btv9nwsuq4whocjxd9r39mg6pxpumyvcff5ju6nisybaat3nx7bcvfq4ke0w2k5r0isk66l3ogyfadugzyi6ee0ylubdmfdqxx9g3ucywx74sbb3gy9oh9yv62qzj\" ],\n    \"minInstances\" : 1312684852,\n    \"subnet\" : {\n      \"name\" : \"Evelyn Wolf\",\n      \"projectId\" : \"8v04\"\n    },\n    \"minThroughput\" : 1010549308,\n    \"name\" : \"Laurel Rolfson Sr.\",\n    \"state\" : \"READY\",\n    \"maxInstances\" : 1315758331,\n    \"ipCidrRange\" : \"eerrf8fxkl5mdzaygwq705cr4sldiy6fi96e93qv7gg656rd1klqfgkiw2kj2fedwjtiqb549uckz764pwzke602xafu84iijfyz81ewpxr4tqocgqzuts\",\n    \"machineType\" : \"iw7ce4n11lzn890y6g1lk09qvz85m1w8bsust564c4wixtx013qt9kn27a91cny7\",\n    \"maxThroughput\" : 1045263989,\n    \"network\" : \"ktcr2iubcbrvicpg43chpvi3bqz0epks2xa2sf8lwjqu3d4j44bqs920nyda6rryganzpduyau896l5et2axsew76qwjbiy3et5ow7inspx\"\n  }, {\n    \"connectedProjects\" : [ \"ckh5vzrip8gxdi08z663vhyaqo05xvt6q8vtlngpn78sn049z51uiegw02gnxud74e8lxut0ups34ux78f7vgz98x5lcs393yl28ry7q32zawqlug1y4o4d1d87aflwdsqypcldvgtp5j6hlp3\" ],\n    \"minInstances\" : 150216201,\n    \"subnet\" : {\n      \"name\" : \"Gino Beahan\",\n      \"projectId\" : \"5243\"\n    },\n    \"minThroughput\" : 1576002938,\n    \"name\" : \"Avery Herzog PhD\",\n    \"state\" : \"CREATING\",\n    \"maxInstances\" : 1114467616,\n    \"ipCidrRange\" : \"69ljir4izvkru6nwa3chd8qo4j2m1x36527fz0gi07six2vbiz0zhdbscbu4oiy64v50m3u69kijvwi1djyjlak6k3y0azndzq8hknw43nsgsyt0qdaai6rb6f9s5l9pndj3x8863ldfa9lp1\",\n    \"machineType\" : \"1rtd7jum5f8v50d0l2mbc2henojoy7252mm1bouxasafozaw0gmvn4w0feqm9t16rclaung75a18db1fw4k5de2mdke786x2bvcfjtwcchmqr92zq3duh5o6axmcewx7rq0hzyxknhlm24er17aen4lbttpkrg2i79avgxf60i30mexqii54zgm1w1tkc\",\n    \"maxThroughput\" : 1618342937,\n    \"network\" : \"op905br4laqthhyum4rtc7zxbjlsklhegp0kflrduw2fqmye5uwn0r6www9hvb1yn9oyhwt4\"\n  }, {\n    \"connectedProjects\" : [ \"m3tvvc1y49zl02wda4n7uzrtlvfhexjvwt5adyz7505vfqsrpgclk9eknr6ccn519pw8q0lhdyioen068taf9dvu6sf0whdz0ny4hfy9f84k4jczfp59i46b1naq2i71s7kqyufc85\", \"tjsds1vhdxqozvgjwdpcy7m2pnhkw9818w3khi3hnl98qz9megl0wlt399dmtrdpbxd2jces3y6s6zw18a3g7yl0ijfphtco8wj7p5r95ijkjur9e7uuovdnnhsefl4oj51623z\" ],\n    \"minInstances\" : 1889911035,\n    \"subnet\" : {\n      \"name\" : \"Van Armstrong III\",\n      \"projectId\" : \"48wl\"\n    },\n    \"minThroughput\" : 1357592898,\n    \"name\" : \"Lester Wilkinson\",\n    \"state\" : \"READY\",\n    \"maxInstances\" : 1578166760,\n    \"ipCidrRange\" : \"z2zakm94v8msjs21l6ifu4v4nt8sylhve4db8eurwhtarn7lq569d581jpy4ivojn15fzddutamvkonrp\",\n    \"machineType\" : \"ci1r3htnuadd6mf7tp9ainhpe219ixhh7y7onajtxjsot5q9uquhcznxyv3wx67rng03ki7qf6wmh6c7uq4adb23yxasbtymxs\",\n    \"maxThroughput\" : 1037344635,\n    \"network\" : \"8hy0ss8djsylq8aw2jwn2z8c4rxtiyjuz4q7314g3pi4962hglxusoslu118og2isskymzafctll2685y3n06\"\n  }, {\n    \"connectedProjects\" : [ \"thflr4ljltcbhmoje3t55up0u4ytt0fhj1cd4bu6buk0j5tn2ez8fva3pm6uum1my9dlejnv4s1i2za2\", \"dxxrre\", \"ekobt9pydwjsex5lfedwhdwfj9308dqux913kq4yc0h8gu1kinw5oo2597f3nbn1lq2c0kn2otcnka34c4c9ynig3fdfdy2bp2zodl968u6ttph93gyoeqwesq1oiyklxpupa7fna3teovr4p0oktlkijnktnv8xqwhbo\", \"qg6i59q6nzclszdkw6myjvffp33ey2nfhrgo4egeu9toksei91bg054uka1i4\", \"ogy0o8oh24hz03sf1kblq9ulb\" ],\n    \"minInstances\" : 1973151581,\n    \"subnet\" : {\n      \"name\" : \"Rufus Schumm\",\n      \"projectId\" : \"b56o\"\n    },\n    \"minThroughput\" : 554703907,\n    \"name\" : \"Robbie Kuhic DDS\",\n    \"state\" : \"CREATING\",\n    \"maxInstances\" : 339755884,\n    \"ipCidrRange\" : \"u4fxqu46920356v8w69umfjuson5dvykidnnms3q7yov8yg7o32x0pichwiaxj1u4iykitnw86jj5nip8gv44fs37h69cukp46niozso5a6q0xyjdztj4o53vh8tnwfni8jfezm0120\",\n    \"machineType\" : \"89xwtnmur8wpctykkrwuydbbrvbcm1srmtn5aqmpkmfbcuvt95ypcs3cge9jftm93jlxz6fihvew4mapad16k7e9fjjlfa7ordn8r4tsexrv0lex92fh4pfmfbn5cv3wlv9zqkvpzzpts20fwpu033zrxd7b45ji6zjl4ptf39\",\n    \"maxThroughput\" : 233230737,\n    \"network\" : \"uxws8qj21vndd0hg73lzjbcoy1fv3er351hwngeno3n0utud8l8hxtgrhtylw2mgu50j1r3c6cu7b6avi8gmjnwl4sidqrtcqp90hyvno20gku2q1lvczeol2mn1f720cofzp65eq5ohpl9c84i58x501ugv6fw\"\n  }, {\n    \"connectedProjects\" : [ \"38a7dxbvxdipmhg9ly3oucmaotn49eutj9gzfm3sp888ijjoi9a6lapgx9ujvwlin3t79a6mo2a0f62j9ruxfp9qc5k98tab1i9u06kxhpc8x6ak9cfl7mj8mxkogwy14e8wy1mayye8simgnswn5866vopqni8z2b9e5731np84gefiaemlhg6ze846pygjnph2\", \"1vbor1t385djck2ylws7thc5\", \"clhgq9bvnlub162oiiu48zrd64ordvirf7rnyjbt50m10f9apy4tg4gdz1b1fcd40alfvoi0y8gqtlsi1nnx2bm5ydsi01d96zcjoavt3kmxr8y5sflvjgos5b1ns0qjn56hxwrsaima2h0brw\" ],\n    \"minInstances\" : 234963167,\n    \"subnet\" : {\n      \"name\" : \"Frankie Schumm\",\n      \"projectId\" : \"9101\"\n    },\n    \"minThroughput\" : 211164409,\n    \"name\" : \"Heath Baumbach\",\n    \"state\" : \"DELETING\",\n    \"maxInstances\" : 1911683300,\n    \"ipCidrRange\" : \"iq3n6me4ms30o0ycxmhwascfqq34n0dsay4jpq9jwk56nyvccwikcu7i\",\n    \"machineType\" : \"hc6twylqa01vtal07mr2twla41c1loa88z9ufwincbwoun8i\",\n    \"maxThroughput\" : 329554880,\n    \"network\" : \"2omz5xcb2j88l8pevsccbvyzhu4mno1oa2zlo3r0gm7lkaxbt55iy4195npnq0qjqndt92gfguda1y3fdjhucx8y6yet99ovevgw553kilqnwwx8n95\"\n  } ],\n  \"nextPageToken\" : \"wbw717fg233axu57fua005nv9izu8kvvdakmbjc47x0ei5eqblmyzqj5dtsw2axe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bf4be51-aa24-4cd8-a4aa-e6c1e20f4b6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:42.456389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.list",
          "schema" : {
            "description" : "Response for listing Serverless VPC Access connectors.",
            "properties" : {
              "connectors" : {
                "description" : "List of Serverless VPC Access connectors.",
                "items" : {
                  "$ref" : "#/components/schemas/Connector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Continuation token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "3795a0e2-d9c8-477e-ae39-d3e997f72e81",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Herb+Lockman+PhD/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Awilda Kovacek Sr.\",\n    \"error\" : {\n      \"code\" : 846180788,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia veritatis laboriosam sint. Accusantium labore doloremque. Est quia sed quis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Halley Bosco MD\",\n    \"error\" : {\n      \"code\" : 1401262844,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Eligendi vel expedita culpa non. Quia ex itaque commodi quod eum nihil. Et corrupti repudiandae quia unde fugit nemo. Saepe impedit sint a hic. Qui qui minima facilis et.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Warner Lehner I\",\n    \"error\" : {\n      \"code\" : 505961017,\n      \"details\" : [ { } ],\n      \"message\" : \"Quibusdam nisi assumenda ut eum minus. Saepe consequatur laudantium quia qui tempora excepturi. Error doloribus in quam voluptatibus. A veritatis quis. Sint aut ut quae.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Alena Haag\",\n    \"error\" : {\n      \"code\" : 218358350,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Id accusamus facilis in quae expedita omnis officia. Enim quo non nihil ratione eos. Aut consequatur esse consectetur repellat delectus est repudiandae. Eum non qui similique voluptate cum.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Buford Kuhn\",\n    \"error\" : {\n      \"code\" : 1107988989,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolorem voluptas deleniti reprehenderit odit sed. Minima nulla dolorum adipisci fuga. Tempore ut aperiam blanditiis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Rick Shanahan\",\n    \"error\" : {\n      \"code\" : 904505398,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Consequuntur nihil quos esse et ducimus. Optio et soluta illo ab rerum nihil. Error natus rerum necessitatibus adipisci.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Marci Wilderman\",\n    \"error\" : {\n      \"code\" : 174281444,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ea ad reprehenderit qui eos veniam dolore. Molestiae saepe voluptatum. Voluptatem quam sint nisi. Est dolor qui voluptatem harum eum.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"cpjhvb7k7mo82c44xadkyrdix6a32wystwvrcy8263ngpnr0qzmjhdgkf3ca49f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3795a0e2-d9c8-477e-ae39-d3e997f72e81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:42.4547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "73444b91-3190-48f0-b177-e0c33fbfd4b1",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Ms.+Jean+Pfannerstill/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"1qgznb3uocs221barj7xx9ng5am5ud5ht9d61teje82yjzrj84tz0no405jsyodeimd4upd75zb1uptdsp32wqrtlx59zp11asv\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Wilton Goldner\",\n    \"locationId\" : \"gz6x\",\n    \"name\" : \"Carroll Windler\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Ricardo Labadie\",\n    \"locationId\" : \"cf15\",\n    \"name\" : \"Thanh Schroeder\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Alex Fadel V\",\n    \"locationId\" : \"3u7h\",\n    \"name\" : \"Jimmy White\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Hank Hackett\",\n    \"locationId\" : \"p8r2\",\n    \"name\" : \"Mrs. Marci Lind\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Allyn Cremin\",\n    \"locationId\" : \"6295\",\n    \"name\" : \"Tommie Daugherty\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Omar Jones\",\n    \"locationId\" : \"u14r\",\n    \"name\" : \"Gayla Mueller IV\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73444b91-3190-48f0-b177-e0c33fbfd4b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:42.453517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d774f641-d77b-4c82-8db7-d6a30f33fcf9",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Lacy+Lynch+PhD",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Sheryll Lang\",\n  \"error\" : {\n    \"code\" : 885243581,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Animi dicta nostrum quas asperiores dolorem recusandae id. Ab quam numquam adipisci nisi delectus. Tenetur voluptatum earum consequatur. Dicta inventore omnis voluptatem vero.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d774f641-d77b-4c82-8db7-d6a30f33fcf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:42.45225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "cf4f3b74-996d-42fd-bf94-ffbf2dc55284",
    "name" : "Deletes a Serverless VPC Access connector. Returns NOT_FOUND if the resource doe...",
    "request" : {
      "urlPath" : "/v1/Cletus+Smitham",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Thurman Rutherford\",\n  \"error\" : {\n    \"code\" : 266996973,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"A sed assumenda odio quam labore minus aut. Necessitatibus mollitia consectetur eos voluptates voluptas possimus. Id ea voluptate dolor quae. Quis similique saepe aspernatur voluptates minus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf4f3b74-996d-42fd-bf94-ffbf2dc55284",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:42.451943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}