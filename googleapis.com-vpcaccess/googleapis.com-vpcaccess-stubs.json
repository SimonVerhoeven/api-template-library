{
  "mappings" : [ {
    "id" : "3bba6203-09ff-4da6-acef-002945275de4",
    "name" : "Creates a Serverless VPC Access connector, returns an operation.",
    "request" : {
      "urlPath" : "/v1/5urrzr86fur4kowngbb3h5mfzurga4xrts6qn0x0ovxdg2ev71iej9hjutmwtz1o/connectors",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mariam Sawayn I\",\n  \"error\" : {\n    \"code\" : 1413892144,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Suscipit nisi numquam. Consequatur excepturi molestiae perspiciatis ea aspernatur sapiente. Distinctio ut est at ut laborum odio. Dolores cumque eum fuga aliquid dolores praesentium inventore. Distinc\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bba6203-09ff-4da6-acef-002945275de4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:20.613075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5ed1ff1c-5f7f-45a8-b251-33be1aff6331",
    "name" : "Lists Serverless VPC Access connectors.",
    "request" : {
      "urlPath" : "/v1/z3tlnzrbq7bjc83h15rdi67apxk379eo7yanhr2royqbthurud6vcklteivubmey940acp06hp6i/connectors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"connectors\" : [ {\n    \"connectedProjects\" : [ \"1pib6nf2\", \"20jjp2q2vdzcfg150dls5v6zrzk1re4pttq410fcu19kg\", \"zwckpktpjko80aaxghzq3xowf5\", \"c1rjztq8o41o47k8s7w9084qjlrbzvdmpf3zqbt7t9zx0ph\", \"td4plttri0mf57qiwvc54ogogutvenfl816pdn3x97vfjidjf7cu5j74dzapoxayb0\", \"djysu8q4sv6ryv4j40hdw\", \"9u88o32345u5lvrw828zkr0ysq6rz71j3jw9otb958xwuinc60ra8pypcnwzkkiy5aaphj38i5oj426z246zqsxb88kxwrxuvp3sxpmqt4yekqa9irqum0e8qxe27him8lfa2xhc7ootwfa51h7x5uo1iqih666nl6ysfejdav2090q4hj9ehe3i1vrard0h187cn5g\" ],\n    \"minInstances\" : 1570501629,\n    \"subnet\" : {\n      \"name\" : \"Jerald Schamberger\",\n      \"projectId\" : \"4hqi\"\n    },\n    \"minThroughput\" : 1359763310,\n    \"name\" : \"Rory Huels DDS\",\n    \"state\" : \"UPDATING\",\n    \"maxInstances\" : 2024486542,\n    \"ipCidrRange\" : \"ypkpz0hre0v9z39lzluvm7dtpgoed51p33cr3hmq1mbw7k0fhrliy9luoyh8c992w9np12u9dsyhq3nz5q0ovlbhupnt3jpvwijwhnmety0gf\",\n    \"machineType\" : \"nko11w1i5wnihn9w56nqx2pyrr2of2mlv1b4motw0rpt5bkvzz5601841d02oyo6wba5260u\",\n    \"maxThroughput\" : 343111263,\n    \"network\" : \"om5enmfn283i7kue7t6pj9qghy5x9kg0vdomyljz\"\n  }, {\n    \"connectedProjects\" : [ \"2wbn350qxn9t4syxo3rm03tgx3iytqzs6viutjym8gh7deo1oeilxircuf8o8ywcamp9i0lbd5t2mp96z5u9bik30pzx10yrczrtbcmp4doa7kw009rknch5ptwp888ai3gcnopfl2gq1rz0121ho\", \"gxz57ylhca7l8m3guyjggawcuwsg02f9k4rc6kduyuouow9j5btehonc55q8lxzfczz9ro55vnza2ho5ie1va\", \"ozcb9o6lf1eg5fa1koe12qf1avyqo03r6db0ctt15r4gikjwdrsvo3fnjxvttot6aaw3382hqphforcsdcl0clzb2p0tphd1srzx051yv8dpyjgqjum2wbbdusfm2bhzyszslpf7k0zewhvm97j4ae3e0amwyvghpdteo0f5kxoyu3xr85rfplgazbevb0vbka9\", \"pcy00846wh0twb8n3pfcleuh\" ],\n    \"minInstances\" : 2061554131,\n    \"subnet\" : {\n      \"name\" : \"Kristan Orn III\",\n      \"projectId\" : \"9y24\"\n    },\n    \"minThroughput\" : 55991700,\n    \"name\" : \"Delilah Ferry\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxInstances\" : 1211144506,\n    \"ipCidrRange\" : \"pbmkjq6lkuh69p0smd0nq3mk6yel5llz9yw8xmek6dja170x7x44khwst66497bfv02zv73pgmqql2mtwqlyqqonnnhuu6pwtddxz2xkmie2pplcaklimk8nmnny2t7ix2jng2y5nekb6qy5ls3ng0p2qdw8x9socm2075dkgvmk3ao\",\n    \"machineType\" : \"isu0ehixeh5j1zj2qtb5hqgytxd13b6xmhfvthozhyr9zfedpac4erj05xc20raamzyztzoaiistv4828qqybxuc5xk\",\n    \"maxThroughput\" : 1076072004,\n    \"network\" : \"k5oydl39ja91f027bojnu85woferp2m252v3eyl206dh3apmqoqrmlyt9vxzag3zzrmj38ryt63iuhlaz77wnshghlw1pl62t4vaedrhp346lt8xn642e91\"\n  }, {\n    \"connectedProjects\" : [ \"fyztnsgp5mptoqkhlwf1lwxawrmb1vw8a1yquck3m491y8eajrvqet0gihqsjvgqjk1gebfef32rpv8lsrha6w4h2v5k821opzwvyv1bygtn64pnxpm9\", \"gw4j5qqcae3sulp30aeatqkhdtesco3zm8er2plxxgiulvvh5yl71n2t6r8hx1igzwi4qh5p1f4a16sxows9xnmhud09c\" ],\n    \"minInstances\" : 264238415,\n    \"subnet\" : {\n      \"name\" : \"Keeley Hilpert\",\n      \"projectId\" : \"x4gu\"\n    },\n    \"minThroughput\" : 1834329603,\n    \"name\" : \"Fred Langosh\",\n    \"state\" : \"ERROR\",\n    \"maxInstances\" : 517295730,\n    \"ipCidrRange\" : \"pqz23c4yqeeb1sumckdk7uz054wp33ok71zuyexiyl69pryfogcrknm1zlj7b2kuk3oqrje4rx11n\",\n    \"machineType\" : \"suyizmguqgy6jsh3l4j3xngtq9v\",\n    \"maxThroughput\" : 1094635177,\n    \"network\" : \"wxk4uod6d9alnk5u53xl7nly6k9gxti5m7rm2comkzw5kyg4mj1r31sw8c07jgtjo3pdv53yfyh4i3f62xbh2bccxfd6jgqglfzpswmvftvpe7vu7s5efxe6av9e8x24ve3oiqkwx4\"\n  }, {\n    \"connectedProjects\" : [ \"w4ti7ixmjp4hzqocsyxruv9w0g86mxai9wvmwuwg964agl9k7cmx3zjz0ufvche2zg7buqheh9rt3ky95t6rcod9g4jpplt1ynxuxeab2fxu8cujet3k77c8\", \"4l7ryzbnknsccnnbb56eak4qlyvmfdc9vnoom97zy4nq8c2ervbqsfz3dwhvuvd10fjz3pqyux8zpppn22og46bkuzqo13cxixu3fot2wc76ixl0k4s7yd29jncxuw7n1tfgj25kxisbg13fxjfg91bpk0q3qj8d5fquyl04f7g268hdhdyoiyh6lvtd43skz\", \"zgs8j0mexbvveve75qnu15lnah\", \"bxx3jjeru8604bln5iw4moo51cycijtpiumxguuygfeqfzp6tw4x9qzzz8tpd5kyg2bfz053os7bn4ui9c6t9x42zzvua9jhwcj6lc0\", \"x70dxw87bb0qczpaqk2jozqj59cnqgn5nah14848hs\", \"vtyxwt97styxn2dbaougdv93zg0pm270x3maf52oxrdy3tm2hrexh311e90560qe9nv0vi1x1sn6tjdxfq5ig606kgsl07yvbrh0yhl64lrk3728hj71btmos8k57e9ru9\", \"lpikycrg9quc5hxrexij79ociou2qskjxx7viu76axn5g596r4ltxs64hbwidg0w\" ],\n    \"minInstances\" : 1965917265,\n    \"subnet\" : {\n      \"name\" : \"Kermit Hirthe\",\n      \"projectId\" : \"wqc6\"\n    },\n    \"minThroughput\" : 1458110900,\n    \"name\" : \"Mrs. Dexter Wiza\",\n    \"state\" : \"DELETING\",\n    \"maxInstances\" : 2078438294,\n    \"ipCidrRange\" : \"kor3modib24ebtcvm5wgblsdfji\",\n    \"machineType\" : \"8hrym5kl\",\n    \"maxThroughput\" : 1996671969,\n    \"network\" : \"84qsezu3hujgo29ptj7ug7bet\"\n  }, {\n    \"connectedProjects\" : [ \"zskocjpt8g0xd87ikueifko3szj10p\", \"ec6kwz9o3xr2f6q8mguo541z4kl5kwjwnmjqgrf6m8ibg2ji4tr3hd\", \"y92polnj9u6lweca9av7ibm4y3unrb6xn27dl92g6ng30hx0nnws3xzma4m9yx74aoh33jdvzlg7vriaxm51rrx8zlnlm7ed12pgnhombe9blu4fpsop3vhb3h39uxv4259205fen8at8cu01h3mfc3rlx8fu4noz53u7vh1jr0bug51uxl3yn6jpmwlzfaaaa2tn9\", \"n879cafujh6vl9gqm3kmiyek4ekl\", \"7r4w7vsad6fvkc4c9qyaw8o1gumrchnq00625mbjosq8rkwoemzez5h0cplo8cwk10j8xm2qq92qwtkka\", \"i49wjlztgsywr0vhr4juf07lcmt3uwje5r5rd04ofkr1jdmbshb7bnhtw0y8tttthaxdi\" ],\n    \"minInstances\" : 1319514499,\n    \"subnet\" : {\n      \"name\" : \"Antone Steuber\",\n      \"projectId\" : \"9li9\"\n    },\n    \"minThroughput\" : 1144175921,\n    \"name\" : \"Andrew Feeney\",\n    \"state\" : \"ERROR\",\n    \"maxInstances\" : 880476647,\n    \"ipCidrRange\" : \"kb67szngd8gx529fk0kql6mx2fif89j2uzji0x629rmgag0ni2xruntgyewiexvd0z1uo\",\n    \"machineType\" : \"uiwbyyrccxb\",\n    \"maxThroughput\" : 2094952762,\n    \"network\" : \"8bda9viwwr6s6jwgm8s3ak4sl40ctpovj23gby74ad7tl66wn1oswi81i7kqythrnuuwes3vdqf9z9zgrpwoly1o2qlwf0fm3kvimea7bt3rsxkytl8cajf5xt\"\n  }, {\n    \"connectedProjects\" : [ \"58zf3d771xmszzmfiztalewif9v7r2jag0ok2u3hdj39d7jefe489mlm0a9d79o80\", \"v0fgwune51sndhagoavgnhxwioollu4qnqmwj6fwq3dkbwr6112iy3hj1tiq2ydsym69ni4lb5pv01mh4jjkq75958b0ucv9pvqpq3j4s5yd7yjtghjald3w4id3gq81k63e9v22yjg23drzteyw59wz5q1bemyd1f86roy18x86vtc68b3mzfgn\", \"5inpje8k2x4764imo34jqg1s5in0qzbj205jzl3sx06t2y4kjxhovu5j9iju19sxsbanr2h0r65vj3my56k9a7xnlzuh8jrt4b3rfhp2ragt08613eo7r968mr76muuj1o48eevvtswqn6674h6qqaau7sikua3fjjt5\", \"44r67egfgpe4yzvnmn\", \"vz8ew7f4wj0eeuhzuk6vm3wirmj8w3gyjp6q7jnf5pz8b940k1ht17smypcus9o2wqmiydcc7mdaplm04azv2ng9da9t56hid5ogefojfjio5djubodqrllsnc67ig3b2rz9j7yjs0he32za4b6ee3le848y6peokbcdd8msikf0b92l7irf3slvwmyrq7qha6ac4\" ],\n    \"minInstances\" : 886324405,\n    \"subnet\" : {\n      \"name\" : \"Justina Weber\",\n      \"projectId\" : \"0z72\"\n    },\n    \"minThroughput\" : 1381180242,\n    \"name\" : \"Ms. Ellamae Medhurst\",\n    \"state\" : \"CREATING\",\n    \"maxInstances\" : 1737071428,\n    \"ipCidrRange\" : \"z0ub03nutbz3wk7slwoakw4clx5p170gj2j3cq45dna\",\n    \"machineType\" : \"xdp8zijabtvj192gwx9xxfvnydaamdkduyc349iavmtksfw2wfaacxjda8v5db2hs2qzks2v1sf6fu5eyjf9v54uqxf368etchvzo9wxsd1dbx8bruh34qo9e4hk9\",\n    \"maxThroughput\" : 1126751907,\n    \"network\" : \"hmyx7cmtpt7rdvr42eu2jyp88xqq3rsmigxko5vc3h3lqv1ex842ivla6egaxgf4y45cfxqxagcfejqk9wx0am90uklqk48nrgk7hbw1piqbdffh7gnf2pi61ouj4xijz5avdpkvhc5\"\n  } ],\n  \"nextPageToken\" : \"wd2l77ie1vxng1gt7t6vkkd0tmy1txncat6uu0isn5dmekx2hcp3dqhga9j1o08dw05rxrr7pu3986sprs6hv6rg1ri07m9wwe188bgtjc5srrfri1xxv38wyigl3mdbvgs01hxto3okmqt5ew6is3c05c58qiobhc4n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ed1ff1c-5f7f-45a8-b251-33be1aff6331",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:20.61282Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.list",
          "schema" : {
            "description" : "Response for listing Serverless VPC Access connectors.",
            "properties" : {
              "connectors" : {
                "description" : "List of Serverless VPC Access connectors.",
                "items" : {
                  "$ref" : "#/components/schemas/Connector"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Continuation token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5ef49c09-21d5-40f6-83e2-3a29eb999717",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Haydee+Kertzmann/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Arron Zulauf\",\n    \"error\" : {\n      \"code\" : 1637464823,\n      \"details\" : [ { } ],\n      \"message\" : \"Non sint dignissimos ut tempore rem sint fuga. Ut voluptatem accusantium est voluptatum. Porro ducimus explicabo autem ex. Vero vero fuga a magni. Voluptatem quam provident expedita.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Hong Crona PhD\",\n    \"error\" : {\n      \"code\" : 1456043395,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Asperiores sint illo dolor et occaecati sit expedita. Autem voluptatem esse suscipit et. Nihil labore quos modi praesentium dolores tempora rerum. Autem repellendus sint.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ahmed Ratke I\",\n    \"error\" : {\n      \"code\" : 877366086,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Perferendis et assumenda quo enim quaerat et. Laborum tempora id provident rerum quis voluptas maxime. Fugiat aliquam laudantium nemo quia velit voluptatem reprehenderit. Sunt sint rerum.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lorena Mann\",\n    \"error\" : {\n      \"code\" : 1602629326,\n      \"details\" : [ { } ],\n      \"message\" : \"Aliquid impedit ut dolorem accusamus et. Non dolores totam aut. Quasi maiores saepe et sapiente veniam iste.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Rocco McKenzie\",\n    \"error\" : {\n      \"code\" : 955286670,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Odio non delectus ut eos. Doloremque incidunt ea. Sed dolore deleniti unde minus quis porro corrupti.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Eddie Olson\",\n    \"error\" : {\n      \"code\" : 550959783,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"At tempore quas sit voluptatum iusto. Et quo consequuntur ut. Doloribus eum id eos laboriosam ut nostrum sit. Quo vel sunt modi fugit.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Shaneka Stoltenberg\",\n    \"error\" : {\n      \"code\" : 1760312936,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Eaque necessitatibus unde voluptatem nostrum. Vero fuga adipisci qui nesciunt voluptas accusantium. Sit voluptatem cum quia voluptas eos nihil inventore.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Carlene Orn\",\n    \"error\" : {\n      \"code\" : 922206707,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Dolore officiis velit. Ratione veritatis aperiam et accusantium eveniet. Consequatur beatae dolore et consequatur. Accusantium dolores corrupti.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"kiemudami8p77hkrjps64jiobjxpmcmwtbs1a881d7cdrvn89akuty8i0gfmnszuk1cv1f3rsvyryqmdu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ef49c09-21d5-40f6-83e2-3a29eb999717",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:20.61102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cacde324-f595-4b5b-b11c-69b67a475bcb",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Somer+Jakubowski/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"a7694513womdiulrh6r493da4kq5ofn8s7tt51na0nbgie0ldpfrh6ana7pkpj4nq32oq55kn9yr60sjehhyv8doez0k1zv99ufiut22f5mymi8trsajyb\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Piper Weissnat DVM\",\n    \"locationId\" : \"5w30\",\n    \"name\" : \"Sofia Stamm\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mathew Padberg\",\n    \"locationId\" : \"9124\",\n    \"name\" : \"Katia Block III\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cacde324-f595-4b5b-b11c-69b67a475bcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:20.609942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "02811ac0-adf9-49aa-9eb6-5384242c85d0",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Milan+Ebert",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dale Rogahn MD\",\n  \"error\" : {\n    \"code\" : 1668843831,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Animi distinctio culpa est. Accusantium mollitia et dolor a. Natus neque veritatis magni eum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02811ac0-adf9-49aa-9eb6-5384242c85d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:20.609451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ff501322-58bb-401a-a9e7-62c0a5881eac",
    "name" : "Deletes a Serverless VPC Access connector. Returns NOT_FOUND if the resource doe...",
    "request" : {
      "urlPath" : "/v1/Dr.+Yun+Dach",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jorge Schowalter MD\",\n  \"error\" : {\n    \"code\" : 80539611,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"In aliquam necessitatibus optio perspiciatis. Expedita aut et. Assumenda occaecati voluptatum nihil. Nemo fugiat cumque facere est.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff501322-58bb-401a-a9e7-62c0a5881eac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:20.609208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vpcaccess.projects.locations.connectors.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}