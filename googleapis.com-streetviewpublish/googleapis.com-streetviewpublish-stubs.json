{
  "mappings" : [ {
    "id" : "d79eb2a7-46bf-300d-a37b-b47a10d0b3c7",
    "name" : "Updates the metadata of Photos, such as pose, place association, connections, et...",
    "request" : {
      "urlPath" : "/v1/photos:batchUpdate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-09-24T16:17:34.06762Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-23T16:51:34.06766Z\",\n        \"altitude\" : 1.110277000589457E308,\n        \"accuracyMeters\" : 2.7137741738298046E38,\n        \"latLngPair\" : {\n          \"latitude\" : 7.660515549819277E307,\n          \"longitude\" : 7.777483509314924E307\n        },\n        \"heading\" : 5.029099796290025E306,\n        \"level\" : {\n          \"number\" : 7.521831319983646E307,\n          \"name\" : \"Quigley\"\n        },\n        \"roll\" : 1.912784303622171E307,\n        \"pitch\" : 4.711940746902917E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/909505\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/062304\"\n      },\n      \"photoId\" : {\n        \"id\" : \"54wb\"\n      },\n      \"shareLink\" : \"x2mste3m6o66y0hopkow7o5lfh3o8w1rj70enp34vvrimkwlxx364huzvvua6n\",\n      \"uploadTime\" : \"2022-06-07T16:22:34.067991Z\",\n      \"places\" : [ {\n        \"name\" : \"Refugia Gleichner\",\n        \"placeId\" : \"a176\",\n        \"languageCode\" : \"g3nrz5pvausg03ptix1nn5m3pcxdlncutys8okfi3w3fojfkb6r3kd4u2yzdtyikorx1a7iiub0uq6m\"\n      }, {\n        \"name\" : \"Selina Feeney II\",\n        \"placeId\" : \"3efu\",\n        \"languageCode\" : \"quavuibs92efsn9ylpwh0ea7e3u6x8n26hpoc5ko2z3yttkd05v6hgwzx55trbh55r8fggpp31zyppb24ytzpw9eymyw58rh4kqiuibvl2pk71s52k7tym8wlmnqdk4sa0l9ugsezcxr9lx29wcb26l5n7s75ajovgi5cmm6ebdw9b0h2dxian8xjnekf0uzczty4wk\"\n      }, {\n        \"name\" : \"Thad Reichel\",\n        \"placeId\" : \"y518\",\n        \"languageCode\" : \"hux9vzqxkwlod9te1gaalocpaq91xfyl5qe702v58zdrthw5ldxp7wq81z918xtsm5wg08bkunal0aztf37he2e4r3xztm9\"\n      } ],\n      \"viewCount\" : \"8khgfb4iyc6d\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/458742\"\n    },\n    \"status\" : {\n      \"code\" : 1201077006,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Architecto temporibus nesciunt quia. Consequatur odit corporis dignissimos eveniet illo. Consequuntur veniam quis laborum dolor. Quia maiores sed debitis in distinctio alias perspiciatis.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n      \"captureTime\" : \"2022-12-01T15:17:34.068621Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-05-24T13:53:34.068658Z\",\n        \"altitude\" : 4.952306783826639E307,\n        \"accuracyMeters\" : 1.7333059700847134E38,\n        \"latLngPair\" : {\n          \"latitude\" : 7.4274479285820225E307,\n          \"longitude\" : 9.386180459008692E306\n        },\n        \"heading\" : 8.242213930453399E307,\n        \"level\" : {\n          \"number\" : 9.087882094134331E307,\n          \"name\" : \"Kessler\"\n        },\n        \"roll\" : 2.1374638661548836E307,\n        \"pitch\" : 3.0477538845744137E306\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/404165\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/261968\"\n      },\n      \"photoId\" : {\n        \"id\" : \"hh85\"\n      },\n      \"shareLink\" : \"j10m102agtxjnfrdv1yorroej7dkh8tckgapw4a\",\n      \"uploadTime\" : \"2022-10-04T16:08:34.068966Z\",\n      \"places\" : [ {\n        \"name\" : \"Brady Kertzmann\",\n        \"placeId\" : \"e357\",\n        \"languageCode\" : \"d97cr24pfcnkydyzvur1kx6a2\"\n      }, {\n        \"name\" : \"Aline Howell\",\n        \"placeId\" : \"jch2\",\n        \"languageCode\" : \"wljyfncuzen41d18gkfehy9caycl3q61n\"\n      }, {\n        \"name\" : \"Harley Toy\",\n        \"placeId\" : \"iqz7\",\n        \"languageCode\" : \"v4fhmgb7wfedji7y0rai298wlgpjqmjgphhoa0mp46w3wqute1am7qza0k3qyjp3v57j9cf3yw0ks3o9npk7hywgur2r98l479n83ssbeze6dknhimq5ccyccjk5p8ownojogshfjburrnb58sygh7el9zqqwvxe3bp655l6y3z8snbigcyfu1vzrl0k55hi\"\n      }, {\n        \"name\" : \"Nada Erdman\",\n        \"placeId\" : \"j6o4\",\n        \"languageCode\" : \"vpdo9fzv3sx4o\"\n      } ],\n      \"viewCount\" : \"dy11tquuluhmwfg05ss3k8mmgtsgdm67ag6srhnbg5lqaai5ow00e708ym437\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/076246\"\n    },\n    \"status\" : {\n      \"code\" : 1984966269,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Sit est sunt veritatis et veritatis natus. Sapiente voluptatem autem tempora ipsum alias iure quae. Et quia dignissimos quod eos sunt sed. Quo ut tempora at.\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d79eb2a7-46bf-300d-a37b-b47a10d0b3c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchUpdate",
          "schema" : {
            "description" : "Response to batch update of metadata of one or more Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo updated, in the same order as the request.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "52e54714-4aa2-3811-b35a-8e653e36373b",
    "name" : "Gets the metadata of the specified Photo batch. Note that if BatchGetPhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-07-19T16:54:34.057043Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-07-31T14:38:34.057081Z\",\n        \"altitude\" : 9.878555812601852E307,\n        \"accuracyMeters\" : 8.132840258376008E37,\n        \"latLngPair\" : {\n          \"latitude\" : 8.986270474869573E307,\n          \"longitude\" : 7.478030835202743E307\n        },\n        \"heading\" : 7.587882132432695E307,\n        \"level\" : {\n          \"number\" : 8.774015548869367E307,\n          \"name\" : \"Stehr\"\n        },\n        \"roll\" : 1.7306668264029796E308,\n        \"pitch\" : 1.6457640058237644E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/595600\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/867828\"\n      },\n      \"photoId\" : {\n        \"id\" : \"1h3m\"\n      },\n      \"shareLink\" : \"yvz83un4eq2l8ulffo9q7uasofbelvpv3wcr1mlgkaa3ogkhyqu8il1a4ecymqeedcipp0phge51ngbykxcw8f8c5s20kmkz8wzrn1h5i3vo90izdfitm65n2tthrmxx1ondqnksfd9dmjd72u4tg5yqzxv9ed35m7hvgrldi4jyp1cb\",\n      \"uploadTime\" : \"2023-01-18T15:57:34.057396Z\",\n      \"places\" : [ {\n        \"name\" : \"Susana Reichel\",\n        \"placeId\" : \"e4r3\",\n        \"languageCode\" : \"69m1odc954yv3nf65j4ozssyuyqvympk620uu5\"\n      }, {\n        \"name\" : \"Maynard Fay\",\n        \"placeId\" : \"2f48\",\n        \"languageCode\" : \"nv6uf52b1g95vwrt6d4bunyeqlooo878ly6x0eu1kwdg70hsyz39ki1ew7y2fo2quf38ckat8dysnza9936qnsuh4tzg8snffw3r3scp2owxadbku\"\n      }, {\n        \"name\" : \"Brady Nikolaus\",\n        \"placeId\" : \"6up7\",\n        \"languageCode\" : \"185jy6o6isls5wkzcocc3vmr\"\n      }, {\n        \"name\" : \"Martha Glover\",\n        \"placeId\" : \"607u\",\n        \"languageCode\" : \"34u1gbmmtmnbijx8xfbz8e049ouvymv241p3ae8juvpi3ivfvknb9lsqse62yvqmr1z76p9dyo087upcc0kgtuccby037c0loftx8h2vd32lf03jm52d2l3pi3oqe1k12r9elev3v\"\n      }, {\n        \"name\" : \"Loura Beier\",\n        \"placeId\" : \"5k43\",\n        \"languageCode\" : \"npahcrgxbakxagrde1bnopcgwkb6829imdfzb822zwaex2953spguvuv2r4cxpd5rdouent5vcjm9zlvx39hgh01e2vxfiywvfblade9785bk8nogyic83tzj6f38jfnynaxowwynxuytbwrk\"\n      } ],\n      \"viewCount\" : \"a8krvo0b9kuz7gwpo8kt06jguwr4o3awt9ljm4l15g5a3bw6ol7zqrdmecfaieyuxbakouxrnmubshp28d1jkusaqpeqi303gfkpo18qe648wx6v91cx7af9pmo\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/664966\"\n    },\n    \"status\" : {\n      \"code\" : 1098534013,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Ad veritatis aspernatur excepturi. Tenetur similique error autem doloribus dolor. Adipisci animi totam autem. Illum vero eligendi rerum provident velit.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-10-30T14:38:34.05827Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-01-04T16:21:34.058308Z\",\n        \"altitude\" : 4.324166491210147E307,\n        \"accuracyMeters\" : 1.5625604718081336E38,\n        \"latLngPair\" : {\n          \"latitude\" : 4.38850425793686E307,\n          \"longitude\" : 6.608503297756558E307\n        },\n        \"heading\" : 1.266165364457853E308,\n        \"level\" : {\n          \"number\" : 8.046594732675649E307,\n          \"name\" : \"Schumm\"\n        },\n        \"roll\" : 1.6943673967991508E308,\n        \"pitch\" : 1.7795678397558343E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/499876\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/726664\"\n      },\n      \"photoId\" : {\n        \"id\" : \"37z5\"\n      },\n      \"shareLink\" : \"t5vbq8httafzjiox5ptl4rj4u1bm906dx6eqmdqg8x59fonrz1g84c1nni2s9gaiaqyr63d0sou403cw7meda0uikch404ejjt87fiyiyfsurtgrh74qbvkzvgp5b4rp8egfhv1ltxe8fs3sytysjemomtllnclr\",\n      \"uploadTime\" : \"2022-03-12T15:46:34.058624Z\",\n      \"places\" : [ {\n        \"name\" : \"Ms. Jackson Nolan\",\n        \"placeId\" : \"0ea2\",\n        \"languageCode\" : \"1xz3r4v3uvb0mrp21i8k2cbzvmvyk6nxtzal10osop624tgzdfx77naxeup8\"\n      }, {\n        \"name\" : \"Dr. Luvenia Zulauf\",\n        \"placeId\" : \"163c\",\n        \"languageCode\" : \"r6tkzlmhzlk1ya35m56\"\n      }, {\n        \"name\" : \"Odilia Buckridge\",\n        \"placeId\" : \"j9j6\",\n        \"languageCode\" : \"rqbxhdzj4gls5nnxpuov8bc44zaxg4zbipnhfqq3qgys699by9z1o0o0r0fvrb3x9us9bs5c1yw672yid3n42hi2g4zhny2vozdpigqxu\"\n      } ],\n      \"viewCount\" : \"xu5g9i4bx0sk5paf3z11l24a772451zj1at6auz38jj6uh3eezv1h4xmgfd0zgodhntu13ze8573jsl4klhpcw5\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/279798\"\n    },\n    \"status\" : {\n      \"code\" : 726039066,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Distinctio aspernatur ducimus ea quia veritatis voluptatem. Eos tempore eos. Quas doloremque provident. Distinctio quis nemo ut similique doloribus earum saepe. Quaerat rerum iure laboriosam modi quib\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-05-09T13:19:34.059219Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-08-30T15:10:34.059256Z\",\n        \"altitude\" : 1.4467374103767316E308,\n        \"accuracyMeters\" : 1.633938275545441E38,\n        \"latLngPair\" : {\n          \"latitude\" : 4.099773688754059E307,\n          \"longitude\" : 1.281329528288277E308\n        },\n        \"heading\" : 1.3730345444251159E308,\n        \"level\" : {\n          \"number\" : 9.721380627388754E306,\n          \"name\" : \"Casper\"\n        },\n        \"roll\" : 9.801883140082442E307,\n        \"pitch\" : 1.7968674301131455E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/087544\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/754010\"\n      },\n      \"photoId\" : {\n        \"id\" : \"g37c\"\n      },\n      \"shareLink\" : \"8gjag\",\n      \"uploadTime\" : \"2022-08-23T13:38:34.059562Z\",\n      \"places\" : [ {\n        \"name\" : \"Randolph Hintz Jr.\",\n        \"placeId\" : \"v31v\",\n        \"languageCode\" : \"8gygtwjkzftblwql5xlcpli14b0lowz7\"\n      }, {\n        \"name\" : \"Bernarda Feeney\",\n        \"placeId\" : \"144b\",\n        \"languageCode\" : \"98xr7y7r03nkr0bxbu8b930s1z36suda8k54k0nre4c64t9ur249bzmlzw69gxv02h6afbn5t67ffknn4y3i32uybg99\"\n      }, {\n        \"name\" : \"Fredricka O'Kon\",\n        \"placeId\" : \"z4pu\",\n        \"languageCode\" : \"cmim9ie0ltcs917nv2oflcuixp74grp6kzsn2htea4zzk297z5l0nhp672c3ir8x15u562rpn17n1arex7hjejsc9w1198e35ch6tc8oaw14z\"\n      } ],\n      \"viewCount\" : \"8d5ywsvsc6wkvgk8pngyc62t7k21kz2r98e92nyo7kxjykarha2cat6njyus1wb00sis203xh0p7zrvktwc949wwslgm22pmyqkwy7dbrnewet7jaq4dosi9k1stcl7c7p6hc4ond460fis5nko4s04lote\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/757890\"\n    },\n    \"status\" : {\n      \"code\" : 1488747348,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ea eligendi vel suscipit consequatur sunt est doloremque. Consequuntur tempore ab maxime quibusdam aut. Ut non maxime at. Ducimus veniam excepturi molestiae repudiandae explicabo dolores quibusdam.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"CANCELLED\",\n      \"captureTime\" : \"2022-08-24T14:08:34.060121Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-09-05T14:43:34.060157Z\",\n        \"altitude\" : 1.790708755086273E308,\n        \"accuracyMeters\" : 2.413634103816799E38,\n        \"latLngPair\" : {\n          \"latitude\" : 6.719558897226513E307,\n          \"longitude\" : 1.0459624862501889E308\n        },\n        \"heading\" : 1.5150785818741854E308,\n        \"level\" : {\n          \"number\" : 9.37504832457297E307,\n          \"name\" : \"Johns\"\n        },\n        \"roll\" : 3.079335390456319E307,\n        \"pitch\" : 5.4318212160899E306\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/598205\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/935867\"\n      },\n      \"photoId\" : {\n        \"id\" : \"hm55\"\n      },\n      \"shareLink\" : \"ntop2pxlozzxdlogu3nr0a5besprl9rtzu0jqeqyv2wt8bqs9jjlv5243ufva8rxc2ot139s0w9unpa64gs0vpvchlbjdi0h2xjewfxyf2ytfg4xiqq1p68un36tbq5w8bawiinpx8jkzmaxnwxgh4wjo2bae58jkvfe016cv609zp67y\",\n      \"uploadTime\" : \"2023-02-28T16:53:34.060462Z\",\n      \"places\" : [ {\n        \"name\" : \"Dwight West\",\n        \"placeId\" : \"16xc\",\n        \"languageCode\" : \"05gm1a531\"\n      }, {\n        \"name\" : \"Micheal Bartell\",\n        \"placeId\" : \"er67\",\n        \"languageCode\" : \"8mke53djyfxwmtfe6z2tjpvkuhfi8q1ky18fteu9j8kr03yx1eroj3gi636hocez6tsjawjr87wabma43mj2yi2qk256kcld4o4qc1jecbai142521x8c2dgnuvisy62dhlpr12kc1aasqd3e93cxr5kgcdswlme45zr3\"\n      }, {\n        \"name\" : \"Deidra Deckow\",\n        \"placeId\" : \"xk4m\",\n        \"languageCode\" : \"qxbkarctxi47yqshhz0g\"\n      }, {\n        \"name\" : \"Ricardo Predovic\",\n        \"placeId\" : \"bj71\",\n        \"languageCode\" : \"pq0xuw28j96svsspkncfp2rhypaxkq5d8lbdvd18ol9e6fo3u83jlhpmmiioyqlpxaisufbnljx50kzrbdxs0ynr87x31\"\n      } ],\n      \"viewCount\" : \"78gaoqj1tckd3jtgpgmxsippmdnpyyw1mbwfd368v3jkck01epgddq1i57i05ijti4t9qu0c8h3lehkmnit5f6fikedvi05ffy3sy9zyjie8wxh1y8acezvvby5riwi5ybv0al660ysdrpend9a33ctf3vxj5tx7amp2lp4v3l38vppzbrql6b9f3pxveowffrvp\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/970069\"\n    },\n    \"status\" : {\n      \"code\" : 1086686786,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Repellendus facilis vel sit a ipsa maiores. Quia nobis sapiente nostrum sint atque quia ut. Molestiae culpa molestiae ut culpa possimus. Aut quo et at quae pariatur quia.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-11-01T14:51:34.061178Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-04T16:51:34.061214Z\",\n        \"altitude\" : 5.336363267049609E307,\n        \"accuracyMeters\" : 6.813903729511696E37,\n        \"latLngPair\" : {\n          \"latitude\" : 1.314854715674011E308,\n          \"longitude\" : 1.7633379705435158E308\n        },\n        \"heading\" : 2.8450671408281123E307,\n        \"level\" : {\n          \"number\" : 1.5106909184219596E308,\n          \"name\" : \"Hahn\"\n        },\n        \"roll\" : 6.865502981775146E307,\n        \"pitch\" : 1.2856575871890965E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/129417\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/656673\"\n      },\n      \"photoId\" : {\n        \"id\" : \"wfnk\"\n      },\n      \"shareLink\" : \"6xfxyjj6ycbxxqym0x7yhcykpgalyrnrx86nkk83054nhoupzs5clnna5y0t4s1c4wwrsrqgmhoah5rgnkbk6766ndvb3iu72bfv6w89mw31k118pvd4rrd0lkbgr2bwlz5h3fngr5qkbde41lzml3yn60ty9r0x7t9uyxbska3v904d60p8nj\",\n      \"uploadTime\" : \"2022-09-19T16:23:34.061511Z\",\n      \"places\" : [ {\n        \"name\" : \"Chelsea Terry\",\n        \"placeId\" : \"20f7\",\n        \"languageCode\" : \"cidwxc6s2g20e4o8i8oot4wc7gayawxmsboqo44xj2lbnahuw71y7fd0slal81qf9doyue7wy87rcf7j5tl8fpbz6je4t4qdzlyesay9707me8qbhot9ghreg3r0h8hwqnl5dxocfrlzg4l2ozoxu4xd2384vhisi\"\n      }, {\n        \"name\" : \"Latia Orn\",\n        \"placeId\" : \"oclc\",\n        \"languageCode\" : \"397hp8n0crmgef042qs60sunpoqwi30ax6w9x3qhorky8revl9ftxdy6y9mwe7qcuuixlf4q3u9ty9z1ld2jgl255g\"\n      }, {\n        \"name\" : \"Dr. Bertie Fahey\",\n        \"placeId\" : \"j55k\",\n        \"languageCode\" : \"oxxfasve12mk4uafhvo1cyxe3wd26wlimtxre1mc9hdq755l4cn5zrnahr06sd8a3pd8c\"\n      }, {\n        \"name\" : \"Lavinia Nitzsche DVM\",\n        \"placeId\" : \"zfa4\",\n        \"languageCode\" : \"xpjm97em59kf74lbks8hybdqrmmuyhcdue9zy6skgg9vnav9de8mf\"\n      }, {\n        \"name\" : \"Faustino Rohan V\",\n        \"placeId\" : \"wt58\",\n        \"languageCode\" : \"inbtn2ampwu599nwt2ttwbzjs71rct6vetsdek83tczm0s05h1xgkn42h3t1epl93p70h291ngv7xh3tg8g8cdkhws2lfw6n0os29u38y4ano11jhkrt93dmzvjzkwnaiyefqrfxawvo5y7z0wp6uty8aotf1dh9ry5e72hs\"\n      } ],\n      \"viewCount\" : \"fgog5ydc6sc49gely0ev20e649bffieaiunhouu8jxm52itq0ypyxw9wxy5gse4kw5172zt28q6r4tg3y9pvlzpcn3xscud9knot85yw192bfurl\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/885083\"\n    },\n    \"status\" : {\n      \"code\" : 1821287295,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Officia esse veritatis. Omnis delectus modi saepe rerum est officia neque. Doloremque quia voluptatem velit sunt autem. Repellat deleniti soluta. Aliquam dolorem a soluta et consequatur asperiores.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2023-01-29T16:38:34.063073Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-22T14:43:34.06312Z\",\n        \"altitude\" : 1.3804047639552144E308,\n        \"accuracyMeters\" : 1.1614942917142749E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.5386304760190695E308,\n          \"longitude\" : 6.270754703457234E307\n        },\n        \"heading\" : 1.5884022104314685E307,\n        \"level\" : {\n          \"number\" : 4.540618221684033E307,\n          \"name\" : \"Lind\"\n        },\n        \"roll\" : 4.844942638143824E307,\n        \"pitch\" : 6.00089697745732E306\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/128552\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/538293\"\n      },\n      \"photoId\" : {\n        \"id\" : \"sb1w\"\n      },\n      \"shareLink\" : \"g7skfh5bgcc6cm22jlwvr3iv6mv2t8zkz3sdd4wdjtot9pua0glyst90g1qhw47pomkzld9f52iqcbz7u450s24ri504gxfmq5xbri64tk60uov0a9cx9m\",\n      \"uploadTime\" : \"2022-06-02T16:40:34.063719Z\",\n      \"places\" : [ {\n        \"name\" : \"Johnathon Robel\",\n        \"placeId\" : \"9752\",\n        \"languageCode\" : \"rhsm0qyiyjd0hk5bibl4z3dveuqgt64eby2phfa2gbr7379qlkgi48y596b2qa74qc708iw719h7no73x9solmafikedr6653k3cbzj1uai16kcbt5tcpc970d8bfjx839ypgvwtju49ycf5m1f30l\"\n      }, {\n        \"name\" : \"Bruno Beier\",\n        \"placeId\" : \"3ux3\",\n        \"languageCode\" : \"pcm9zvzmxll9ho8qmwc14fuf8bu5vyq7wfe5qolhsftuufsa1ctw2y2kfcswx99bkgzwmy9aphzvvrvcq4ewitbt2vycco2009p37hfcziv4reps\"\n      }, {\n        \"name\" : \"Domingo McKenzie\",\n        \"placeId\" : \"gi9d\",\n        \"languageCode\" : \"1xa0dvwvuhs8r21d7r3wgp3jrrf7s6gdr6gylun3dzqfy571p4yl5yge37aaxmhbn38rorw7rq70xogncm83zsigpma7ocjp\"\n      }, {\n        \"name\" : \"Lawerence Muller\",\n        \"placeId\" : \"0o5m\",\n        \"languageCode\" : \"q74fknqzt7rxu96m6c9qharw7mg41jmvxot248meiagcext7rl97udx1pq37puov2b6vwz9j636qq0407ab\"\n      }, {\n        \"name\" : \"Mr. Jimmy Emmerich\",\n        \"placeId\" : \"fg8u\",\n        \"languageCode\" : \"w7w779pndj666qjm2jb3gw4tkye6ez2ypcr3k3ic4qf5jr0w5h4ryy968jcejpuw649005f2derqwvr0elvr5icnrowuxqds4ltnbtamng4mhwoz6o66l1joh7d3hc1832wk91ewvvfp1vjac9qdif1gz6kszx1ths26mlzksr3e2z1fh0u7jkux01hi3u\"\n      }, {\n        \"name\" : \"Zena Hahn\",\n        \"placeId\" : \"58l7\",\n        \"languageCode\" : \"fu38k2nqysdpieelrx75dq45n98ijghcyqfyl6tviyvptxwisdlg9jj63o29jgilmq740k6tkv77jbydrfxydb3xz34z4h22hwsqywxvi1gq5r8d0h72yrswp69kgmjf5\"\n      }, {\n        \"name\" : \"Hedy Jakubowski\",\n        \"placeId\" : \"29io\",\n        \"languageCode\" : \"xbmd0n54928e3d3hs26cs21wlo34108o5vqcvwj2cka5h7zlr3p4tib7uvmi0q7mhd8dw46k8dvphp9xkb8s3zb0dvu98lx2wpp5\"\n      }, {\n        \"name\" : \"Mr. Clarisa Rippin\",\n        \"placeId\" : \"4g58\",\n        \"languageCode\" : \"mbz4zmympoj0tqapjfas3rog6qtmo5m\"\n      } ],\n      \"viewCount\" : \"e11fsd3opqaaaoo7fprxhnqvj767qs5kgchosflzp59z5ybvwyb6yszchgw8wcam64my76jby1m5jfzwo6lpbj6cr51wo65s81vz53vvlcw45uqr2l2uq3p6rulcajp6vn4p9\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/520902\"\n    },\n    \"status\" : {\n      \"code\" : 2119908317,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quos id quia a enim. Aspernatur nostrum rerum porro sed sunt in cum. Nam sunt reiciendis. Corrupti et est rerum nemo assumenda provident.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-10-19T16:52:34.065069Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-09-17T16:00:34.065117Z\",\n        \"altitude\" : 7.210539049545247E307,\n        \"accuracyMeters\" : 2.993346292240473E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.986295774852149E307,\n          \"longitude\" : 4.37651014110326E307\n        },\n        \"heading\" : 5.816106400253451E307,\n        \"level\" : {\n          \"number\" : 1.526848250256635E308,\n          \"name\" : \"Lang\"\n        },\n        \"roll\" : 1.3215946917837607E308,\n        \"pitch\" : 5.280026527379856E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/033010\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/105135\"\n      },\n      \"photoId\" : {\n        \"id\" : \"1z43\"\n      },\n      \"shareLink\" : \"1pmyu2ybk0t182epfha26ibrav3vb4v50xyww4u3glpj959hroen1rqykboq1s2je1wl09468n8k6v02cqugwoxrvl1eat1gi5j7sshrg6xgf12wdduldq13sy37g4v1pxccb108vmljk2j5e7t6m08um2muds9m2pb7cp2d\",\n      \"uploadTime\" : \"2022-12-03T15:34:34.065459Z\",\n      \"places\" : [ {\n        \"name\" : \"Eldridge Hand II\",\n        \"placeId\" : \"97gw\",\n        \"languageCode\" : \"c39gm8r0onsdwxx60nc09yj9w93mai58m6fyvfdhhnqaqvj5i4sb6rrhzzy82av92d63qakpj1z23vbzflvmh192tstgllkhdv2epkx04mdas3i1zxxr4pj800b9y0bwysf9e7ia9omxekmgdqu8dj4oua2sy594nypuzaikpbo1ovyk6kq\"\n      }, {\n        \"name\" : \"Ronny Hartmann\",\n        \"placeId\" : \"7xw9\",\n        \"languageCode\" : \"qozbuxrhekavesa3pj7vn1rmn4vnsa3pyu7ak5em9axnn4xz7zpqv3zu75mxchzo65gy1jx57a2j5vqu\"\n      }, {\n        \"name\" : \"Tennille Fay DDS\",\n        \"placeId\" : \"ojhf\",\n        \"languageCode\" : \"t5m2h9vb9h6zjo3poumbd7ytpaj0bi\"\n      }, {\n        \"name\" : \"Ms. Latrice Dooley\",\n        \"placeId\" : \"22d6\",\n        \"languageCode\" : \"lfg9v2ao36bs5mbelahcw3mh3q5gafsf0moogp7a6jy7koblu9hka8fvsv0vj6r8te82kkzdeo513cjv4w64kc98uo4u0oxq7df6xlz9\"\n      } ],\n      \"viewCount\" : \"4p06v0oryfqtr7iwd9srkdfs8q28wlx0vqk3ehzt2baaf8wgq1otgqnzhitjd0iqxat4th5z9fsvqtio9p2xfx4pcbrke4efp4edlre5caclmx0uz2rv1wa\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/125943\"\n    },\n    \"status\" : {\n      \"code\" : 1687031244,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatem rerum molestiae qui in. Mollitia enim dolor est quo. Qui sunt quisquam eos nulla ad. Et consectetur voluptatem maiores qui odit.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"REJECTED\",\n      \"captureTime\" : \"2022-07-29T14:47:34.066222Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-03-03T15:18:34.066259Z\",\n        \"altitude\" : 5.306162349202433E305,\n        \"accuracyMeters\" : 9.284220625865615E37,\n        \"latLngPair\" : {\n          \"latitude\" : 1.4900136632188765E308,\n          \"longitude\" : 1.169662606588784E308\n        },\n        \"heading\" : 1.0812468479327895E308,\n        \"level\" : {\n          \"number\" : 5.63088545636502E307,\n          \"name\" : \"Lueilwitz\"\n        },\n        \"roll\" : 1.1741568046038217E308,\n        \"pitch\" : 1.2361033713376856E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/386287\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/613659\"\n      },\n      \"photoId\" : {\n        \"id\" : \"6466\"\n      },\n      \"shareLink\" : \"0fjvbc06em95edm7gey6w0jxm2jkip3hvoqn40yoffvytpdbqtpb\",\n      \"uploadTime\" : \"2022-11-07T15:36:34.066573Z\",\n      \"places\" : [ {\n        \"name\" : \"Ollie Moen\",\n        \"placeId\" : \"29t3\",\n        \"languageCode\" : \"cocqwvdsabf22ari8fb07ak467dwzlfvwzhxomjcumw8o7ttj\"\n      }, {\n        \"name\" : \"Fanny Stroman DDS\",\n        \"placeId\" : \"m2c1\",\n        \"languageCode\" : \"ioqw5pcwkerv9m6mcdgt61s5im5fd055alwf1na9p0t4pfazsafudjauewlchsd0249osi8ty1fuir6shsf6y8w7lfyhc0y4xts1be09rqtvgw5tymqpscnhhjwmxg1vat\"\n      }, {\n        \"name\" : \"Danille Grant\",\n        \"placeId\" : \"0s1a\",\n        \"languageCode\" : \"dm209y75hocecb621z63huav1bs5w7bmvoxuynojn5hs9jy77fv33bctmdryfku5s3h7uo9lh90dz782pmvezatpe7q0p1tsdo2ur9forfclqs06lxuxp\"\n      }, {\n        \"name\" : \"Boris Zieme\",\n        \"placeId\" : \"x2kv\",\n        \"languageCode\" : \"d18cjlbedywva7632fusele4p6oco95d4bmrd050i2dchhjw1p1r6dphfpzndzg0w27o4j2m2dmjq4gmfvoaacstgoa3z4wyl6tyoapsy2h11gx9snnlgoc6xgzcdb2rfwmme0z2x14p7k1c07\"\n      } ],\n      \"viewCount\" : \"n24p0h5oqh0p4cvxq8i044gbhxr1y83xj7s6i7vxa\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/674571\"\n    },\n    \"status\" : {\n      \"code\" : 34612984,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Non quisquam suscipit quibusdam eveniet qui. Libero placeat odit. Reprehenderit blanditiis suscipit delectus neque incidunt incidunt. Recusandae sint et voluptates autem laboriosam eveniet nam. Corrup\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52e54714-4aa2-3811-b35a-8e653e36373b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchGet",
          "schema" : {
            "description" : "Response to batch get of Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo requested, in the same order as the requests in BatchGetPhotos.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "f94d9392-b193-3a78-ac7e-290c07d616de",
    "name" : "Deletes a list of Photos and their metadata. Note that if BatchDeletePhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchDelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : [ {\n    \"code\" : 661023098,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Molestiae quas est qui ea et provident aut. Autem error numquam velit laudantium. Voluptatibus inventore rem. Similique totam qui aut modi quas iusto iure. Accusamus consequatur sequi.\"\n  }, {\n    \"code\" : 714406210,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Cumque voluptates quia expedita sit dignissimos repudiandae. Omnis odit debitis vero in dolore saepe et. Ut molestiae at adipisci et.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f94d9392-b193-3a78-ac7e-290c07d616de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchDelete",
          "schema" : {
            "description" : "Response to batch delete of one or more Photos.",
            "properties" : {
              "status" : {
                "description" : "The status for the operation to delete a single Photo in the batch request.",
                "items" : {
                  "$ref" : "#/components/schemas/Status"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "36c852af-205c-3a1e-955e-3a1111b6e81c",
    "name" : "Lists all the Photos that belong to the user. > Note: Recently created photos th...",
    "request" : {
      "urlPath" : "/v1/photos",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"8f4g5q14xgwvi42an0bkxsp76gfr01z0oosn6uruiuacliqs2ym92zsczuqweppmmz8wexcft6dlw7gms0n8ain6155\",\n  \"photos\" : [ {\n    \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n    \"captureTime\" : \"2022-11-19T13:39:34.053509Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-12-21T15:21:34.053548Z\",\n      \"altitude\" : 3.1427081903969266E307,\n      \"accuracyMeters\" : 2.9101928943778185E38,\n      \"latLngPair\" : {\n        \"latitude\" : 6.600734522516008E307,\n        \"longitude\" : 5.124881551894543E307\n      },\n      \"heading\" : 7.795837499810112E307,\n      \"level\" : {\n        \"number\" : 3.6466079654279697E307,\n        \"name\" : \"Bednar\"\n      },\n      \"roll\" : 1.011317242937458E308,\n      \"pitch\" : 9.25451887732995E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/061620\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/268544\"\n    },\n    \"photoId\" : {\n      \"id\" : \"v18c\"\n    },\n    \"shareLink\" : \"7g0iocyvh0jmha6qncnyi3zcax63ori1uxh63v5iyorhnhd5432cq6k5a726no8sak7r82e9q362jp7x7i86pem72s2y5wreun3yf0tj3g1h1px6anz3fgcwaanqwq4r\",\n    \"uploadTime\" : \"2022-07-20T16:08:34.053882Z\",\n    \"places\" : [ {\n      \"name\" : \"Long Pfeffer\",\n      \"placeId\" : \"4ykj\",\n      \"languageCode\" : \"gtq7hlpo3z4dmutczunvmzfuppe74bqbo1kbegra7dk26r9zbvwf25sgnof9l7h08fg9mulj3emz6v7awb0ly4o5z0dxrorfpr63kz8nh6os02uqkb5bz3jaios0rekwhkzrx9cz7055zxfjazez4utq8e8kta69dk53wy8uaep2cbuotzbna1hqqs\"\n    }, {\n      \"name\" : \"Randolph Jones\",\n      \"placeId\" : \"46ad\",\n      \"languageCode\" : \"vayv11jos1eulbhgbjfs38qspffv9ugpdz5jfz4efdii1sqmprg34l8jc9ugtx2yzohisxjiy2daaabswbubr4r5enbw1jbxxitdym6v3qgixs8s91s14drzetpmbrefa146kj86vnjfceyyk\"\n    }, {\n      \"name\" : \"Scott Huel\",\n      \"placeId\" : \"9bsv\",\n      \"languageCode\" : \"ienv59du3dwpbm2u5cuzu4qivgf4vqkhayi9ptd68i172o0w7in7is4nqd3z8el7q\"\n    }, {\n      \"name\" : \"Miss Paola Brekke\",\n      \"placeId\" : \"f8f8\",\n      \"languageCode\" : \"bh77nbwde4969j578d02xvi84etrxcotaezs30ftv4\"\n    }, {\n      \"name\" : \"Un Bartell\",\n      \"placeId\" : \"05h4\",\n      \"languageCode\" : \"jrjykk5y5sdikty57i87lejs1baei703feowmj247sd6216v6ojgyhynvdlgstqnq1n1o2z9dahydqrrr6wie1uu7rifueichlh5x507gl1qq8sxoyxlnf8o2il9qdsenfm87ur3k7oevdp3wpv9uafqrkqoxbhkwhq340uo8ufupfyz5bxr\"\n    }, {\n      \"name\" : \"Laurel O'Hara\",\n      \"placeId\" : \"uui0\",\n      \"languageCode\" : \"vqwj7ypyabstfz6wj4v6q6pxk4meg3nkdip8dqwbw2h3371km1qcfzbblxg5psf65z9rf0tj5noknqz\"\n    }, {\n      \"name\" : \"Ivan Lynch\",\n      \"placeId\" : \"i109\",\n      \"languageCode\" : \"12loutbs3gey61qazwck\"\n    }, {\n      \"name\" : \"Mrs. Phylis D'Amore\",\n      \"placeId\" : \"r619\",\n      \"languageCode\" : \"3lgh6zn8tmfr49h0l3pqfzz8yh4bi79kckwvs0lw82pwpipvxi9pmnjov2rt1tyf0odlscwszsnko07ozzeeklix6hxetuzybw\"\n    } ],\n    \"viewCount\" : \"vsc0hulp67ucdsq\",\n    \"mapsPublishStatus\" : \"PUBLISHED\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"971j\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"t719\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"g0x0\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"663y\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"6564\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"s398\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/231511\"\n  }, {\n    \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n    \"captureTime\" : \"2023-02-26T16:33:34.055537Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2023-02-25T16:17:34.055574Z\",\n      \"altitude\" : 7.802875730843078E307,\n      \"accuracyMeters\" : 2.2440881224091567E38,\n      \"latLngPair\" : {\n        \"latitude\" : 2.205058216134867E307,\n        \"longitude\" : 7.829641263009912E306\n      },\n      \"heading\" : 1.059943021368296E308,\n      \"level\" : {\n        \"number\" : 3.405145085064431E307,\n        \"name\" : \"Kuhic\"\n      },\n      \"roll\" : 8.268009570593037E307,\n      \"pitch\" : 6.799950836483575E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/561033\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/590977\"\n    },\n    \"photoId\" : {\n      \"id\" : \"92d8\"\n    },\n    \"shareLink\" : \"bo8r525mrqt7ngku2rjvtltnfc2bmnx9i0djay9i6\",\n    \"uploadTime\" : \"2022-09-06T16:37:34.055886Z\",\n    \"places\" : [ {\n      \"name\" : \"Alyse Nolan\",\n      \"placeId\" : \"3r7z\",\n      \"languageCode\" : \"i7vga2yreigmem\"\n    } ],\n    \"viewCount\" : \"jp6c30eyegad0rcnwdjkb7hzzdwggg8rvs0952acemy6jhbf3up8djflnrl6ueene935i0o06m1bldxb6rjxnlp03aqzi3lja78syirr4pthzpuusrfotgbrh13mjog9lua88odjaxoztu5grfzpk21yb\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"br8w\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"16h0\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"gni9\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"i743\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"oh3x\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"6sko\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"0pq2\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/957807\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36c852af-205c-3a1e-955e-3a1111b6e81c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photos.list",
          "schema" : {
            "description" : "Response to list all photos that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photos" : {
                "description" : "List of photos. The pageSize field in the request determines the number of items returned.",
                "items" : {
                  "$ref" : "#/components/schemas/Photo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "63867944-f9e1-3fa6-ba54-9cca9b211fe7",
    "name" : "Lists all the PhotoSequences that belong to the user, in descending CreatePhotoS...",
    "request" : {
      "urlPath" : "/v1/photoSequences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"photoSequences\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Avril Jones\",\n    \"error\" : {\n      \"code\" : 1744275725,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Id dicta harum ut cupiditate non. Dolores qui illo. Velit est ab velit voluptas corporis ipsa harum.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Josefa Gusikowski IV\",\n    \"error\" : {\n      \"code\" : 1157529102,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"At soluta voluptatem consequatur ut doloribus doloribus. Maiores doloribus est nemo facere. Incidunt placeat libero.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Joe Upton\",\n    \"error\" : {\n      \"code\" : 725758026,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sed quis laborum sint harum voluptatum doloremque. Assumenda mollitia ea quisquam tempora. Fuga ab distinctio iure. Ullam assumenda quia omnis. Quia repellat fugiat.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ema Wuckert\",\n    \"error\" : {\n      \"code\" : 2039690845,\n      \"details\" : [ { } ],\n      \"message\" : \"Corporis beatae reiciendis ut. Necessitatibus eius suscipit qui et aut. Enim quis quos temporibus corporis eligendi culpa quaerat. Voluptas distinctio et alias ipsam temporibus est voluptatibus.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Carry Thompson\",\n    \"error\" : {\n      \"code\" : 1559738266,\n      \"details\" : [ { } ],\n      \"message\" : \"Nihil vel et non. Velit quo minima dicta ad. Dolores reprehenderit nesciunt et non dolores at reiciendis. Cumque fugiat accusantium quos nisi nesciunt laborum a. Similique labore nihil excepturi non s\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Brent O'Keefe\",\n    \"error\" : {\n      \"code\" : 1845383280,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Cupiditate facere commodi temporibus in minus reprehenderit aliquid. At rerum sed officiis repudiandae aut molestiae sequi. Illum aut labore.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Osvaldo Gislason\",\n    \"error\" : {\n      \"code\" : 1252437154,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Repellat quo atque. Quo provident a. Minus nulla error perferendis. Modi harum omnis sit.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tory Shanahan\",\n    \"error\" : {\n      \"code\" : 1303130794,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ratione et ipsam. Illum alias aspernatur sit qui similique quaerat. Aut dolores qui. Aut autem quia et maiores ea sed dignissimos. Ipsam libero sit minima amet et neque.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"ns8lc9pz3c0rdqvh8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63867944-f9e1-3fa6-ba54-9cca9b211fe7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photoSequences.list",
          "schema" : {
            "description" : "Response to list all photo sequences that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photoSequences" : {
                "description" : "List of photo sequences via Operation interface. The maximum number of items returned is based on the pageSize field in the request. Each item in the list can have three possible states, * `Operation.done` = false, if the processing of PhotoSequence is not finished yet. * `Operation.done` = true and `Operation.error` is populated, if there was an error in processing. * `Operation.done` = true and `Operation.response` contains a PhotoSequence message, In each sequence, only Id is populated.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "14d7c05f-5435-3d11-a9ec-f1f4b31938f9",
    "name" : "Creates an upload session to start uploading photo sequence data. The upload URL...",
    "request" : {
      "urlPath" : "/v1/photoSequence:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/928074\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14d7c05f-5435-3d11-a9ec-f1f4b31938f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "d1c42c7f-2a3b-3f81-8550-c46d9e0ce6d9",
    "name" : "Gets the metadata of the specified PhotoSequence via the Operation interface. Th...",
    "request" : {
      "urlPath" : "/v1/photoSequence/z810",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Hugh Heaney\",\n  \"error\" : {\n    \"code\" : 173113034,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Sed rerum accusantium vitae. Minima nostrum vitae tempore et molestias voluptas aliquid. Est ut voluptas dolore ut iusto unde quia.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1c42c7f-2a3b-3f81-8550-c46d9e0ce6d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "bb6ddea3-13ca-3e99-87b7-7caaf78654d1",
    "name" : "Deletes a PhotoSequence and its metadata. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photoSequence/li7w",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb6ddea3-13ca-3e99-87b7-7caaf78654d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "5ddf1e98-fb21-30af-b5a7-175a9902af52",
    "name" : "After the client finishes uploading the PhotoSequence with the returned UploadRe...",
    "request" : {
      "urlPath" : "/v1/photoSequence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Steven Satterfield II\",\n  \"error\" : {\n    \"code\" : 1988792675,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Velit consequatur autem voluptatem iusto. Perspiciatis qui vitae. Suscipit perspiciatis autem ad explicabo. Quia quae odio. Et non saepe.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ddf1e98-fb21-30af-b5a7-175a9902af52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "ca40a9f2-1cfe-30c2-869c-60fd71cee366",
    "name" : "Creates an upload session to start uploading photo bytes. The method uses the up...",
    "request" : {
      "urlPath" : "/v1/photo:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/959385\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca40a9f2-1cfe-30c2-869c-60fd71cee366",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photo.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "6b9b5b58-3fda-36db-8767-efc1aac9fa6c",
    "name" : "Gets the metadata of the specified Photo. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photo/f9r4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"NEVER_TRANSFERRED\",\n  \"captureTime\" : \"2022-12-16T16:06:34.050812Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-11-26T14:42:34.050848Z\",\n    \"altitude\" : 1.3273457615043267E308,\n    \"accuracyMeters\" : 2.0695499834429872E38,\n    \"latLngPair\" : {\n      \"latitude\" : 7.438801466213644E307,\n      \"longitude\" : 1.0209455885452992E307\n    },\n    \"heading\" : 1.9921225917972643E307,\n    \"level\" : {\n      \"number\" : 2.870918752969675E306,\n      \"name\" : \"Effertz\"\n    },\n    \"roll\" : 4.863476803122981E307,\n    \"pitch\" : 5.996001200056126E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/651149\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/635829\"\n  },\n  \"photoId\" : {\n    \"id\" : \"kyf0\"\n  },\n  \"shareLink\" : \"ymru\",\n  \"uploadTime\" : \"2022-10-30T16:32:34.05117Z\",\n  \"places\" : [ {\n    \"name\" : \"David Schiller\",\n    \"placeId\" : \"aqp0\",\n    \"languageCode\" : \"xzol17i14nju24cscuboflnt0h0akh0fiulcg34g7mu8ozny7lp1uljffvjvn8ii93q0bo6bzei35durdnmtphkh2aiy4l5938kksjqshgc0utcttxhep0d5fdslaqnz5uawvo6hblze28ahrlfuh3nkgstn5v7iwu0tl2wnzz41yxs\"\n  } ],\n  \"viewCount\" : \"ih6jcq3z1apo7mlunebfqags9ljws1nelrwb7uaqi3zkibjkd06flvra371s5bs4v25gzg6veq92rfg9vh7yvnpf31s0b6xxwf5qgw3evbyhjymwnac0cn7v0bqkp6mfjd4kqqahf8kfk0\",\n  \"mapsPublishStatus\" : \"PUBLISHED\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"0r90\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/985471\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b9b5b58-3fda-36db-8767-efc1aac9fa6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photo.get",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "ddb344ba-fa30-3622-b08e-fbf2217ba671",
    "name" : "Deletes a Photo and its metadata. This method returns the following error codes:...",
    "request" : {
      "urlPath" : "/v1/photo/1bgm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddb344ba-fa30-3622-b08e-fbf2217ba671",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photo.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d09911c2-7586-346c-9255-c3936aa01101",
    "name" : "Updates the metadata of a Photo, such as pose, place association, connections, e...",
    "request" : {
      "urlPath" : "/v1/photo/6s4s",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"NEVER_TRANSFERRED\",\n  \"captureTime\" : \"2022-05-21T16:04:34.048539Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2023-01-28T13:59:34.048574Z\",\n    \"altitude\" : 1.3026134676639719E308,\n    \"accuracyMeters\" : 3.223612715956925E37,\n    \"latLngPair\" : {\n      \"latitude\" : 4.137809560515792E307,\n      \"longitude\" : 1.2708306404316056E307\n    },\n    \"heading\" : 7.78154247223764E307,\n    \"level\" : {\n      \"number\" : 8.996992971325008E307,\n      \"name\" : \"Hartmann\"\n    },\n    \"roll\" : 1.1804541934564214E308,\n    \"pitch\" : 8.44309667012841E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/654150\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/540747\"\n  },\n  \"photoId\" : {\n    \"id\" : \"c3w3\"\n  },\n  \"shareLink\" : \"9cj6ga3jmuidew84l\",\n  \"uploadTime\" : \"2023-02-09T15:16:34.048875Z\",\n  \"places\" : [ {\n    \"name\" : \"Mrs. Sabrina Pollich\",\n    \"placeId\" : \"i12u\",\n    \"languageCode\" : \"tfwoiberp4hwaxlxpay5gdf040gdhflb87kncan49z06ynd1pu86xcsojrfhjdw0ek1b5madh5n91\"\n  }, {\n    \"name\" : \"Terrence Rutherford\",\n    \"placeId\" : \"rvj8\",\n    \"languageCode\" : \"snumxyq6w6gvbbp43kbku6yv6scgc46l30ow9dwjxpf2iv3pbcod05ulurwvz91xd8l1p1yog1k2m6e0zad8\"\n  }, {\n    \"name\" : \"Britt Kirlin\",\n    \"placeId\" : \"egqv\",\n    \"languageCode\" : \"4vs8c626h6pslefhp8ct9bclk95x2kz2bx101864bc60yw44oh12r\"\n  }, {\n    \"name\" : \"Mrs. Hien Luettgen\",\n    \"placeId\" : \"77q0\",\n    \"languageCode\" : \"zbethzkp6ixpe56ztzn7cpvml5r0r41luyy35e6y9zlcvrh43zvi88b27dh7w\"\n  }, {\n    \"name\" : \"Arlene Dietrich\",\n    \"placeId\" : \"n94q\",\n    \"languageCode\" : \"uv907aeepd5z9nemr392c7dpedt9e7ay3n0sp4nbg4a16f3tcprudc\"\n  } ],\n  \"viewCount\" : \"8g39o9nljsjrm11v6w74fq56mj1tw23j\",\n  \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"2cr3\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"ljwa\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"w9cz\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"5h3m\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"1kvh\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"e69t\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"2hx0\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"734q\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/168987\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d09911c2-7586-346c-9255-c3936aa01101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photo.update",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "4982f8f0-163b-3c40-a36c-907cb58ad9df",
    "name" : "After the client finishes uploading the photo with the returned UploadRef, Creat...",
    "request" : {
      "urlPath" : "/v1/photo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"PENDING\",\n  \"captureTime\" : \"2022-10-26T14:48:34.046577Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-12-25T13:45:34.046621Z\",\n    \"altitude\" : 1.4774875386414142E308,\n    \"accuracyMeters\" : 3.3523515905980998E38,\n    \"latLngPair\" : {\n      \"latitude\" : 2.5025006570842844E307,\n      \"longitude\" : 1.6226458530287104E308\n    },\n    \"heading\" : 2.570637572424916E307,\n    \"level\" : {\n      \"number\" : 1.7058493247860868E308,\n      \"name\" : \"Treutel\"\n    },\n    \"roll\" : 6.201509467437569E307,\n    \"pitch\" : 1.4174294141111824E308\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/869704\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/141831\"\n  },\n  \"photoId\" : {\n    \"id\" : \"7ile\"\n  },\n  \"shareLink\" : \"9f8e2rq4etdy63tkhwod59bexo284gn6jx7kvvd5a20vgfkw9ukrypbiylkf4pt9ngdvxwqo1sqfsrp3rbdoj1hw1rw5tgaoek27do0sg2t4qa8sprurzpkf9pfr5g9k8adb6l39vmg8i7mvsgh6ydt4\",\n  \"uploadTime\" : \"2022-04-25T15:54:34.046984Z\",\n  \"places\" : [ {\n    \"name\" : \"Dr. King Leuschke\",\n    \"placeId\" : \"13l4\",\n    \"languageCode\" : \"6xmmccxnskn2pjfqa5m8lcf8wj4mcyp739jg1ptp7f3slohxjvifzjn8x4elrl05c1nrxnt54gvgtv66mbozi1zn2m3bkhl2er8jre3ltkmhg5zxfj52xzotd8rwfu0gbxyi9sxu4t1jj19mud4ntkzyku78fbot99j61u1j\"\n  }, {\n    \"name\" : \"Sherice Baumbach\",\n    \"placeId\" : \"64yi\",\n    \"languageCode\" : \"n2dzj669a47bijbenfmjdgita2gu8v1673mxcxpqn2703ls14aunw93mq0dadx3dq1ige5uo78br6f439xvqe67fkuot20y5w5lsqwb80jfwes2q83xcgv7j0p9o8v0ik37hbkuxsimymzv075ck10nadwhba4s2va7243zjfz66j\"\n  }, {\n    \"name\" : \"Ashley Rice\",\n    \"placeId\" : \"9l68\",\n    \"languageCode\" : \"tn2k7j2x3j7ouj5p6q56cp0eajcql4x2e5a7cl6xf6eoc4ndijdyf5ao755o7z2ou5wd2jaey1jxzlcte04kl1gfmd2hp31x4gmfuv02xyxnp1yzupufyqcla62kb925kp4guy2ufodwkxnqofv3y415v4nlhwt0bko1jgfms4eb215y10ihp2rrq8\"\n  }, {\n    \"name\" : \"Cuc Armstrong\",\n    \"placeId\" : \"1oc6\",\n    \"languageCode\" : \"iz7dzfe11\"\n  }, {\n    \"name\" : \"Ms. Dewey Lind\",\n    \"placeId\" : \"5f05\",\n    \"languageCode\" : \"698f980pmu3me653d21o1bibp14bi274vwzi24jcczfkunxgftb39rr38h5vaqduuhqfshn2dndwsbujcak62i35vrl84j0eq6a4kc0kc71matj6kvgg\"\n  } ],\n  \"viewCount\" : \"47yw24ttp3tba83bfey09dtj3odgpscnh42pmvm6dwjjlltx8o3l4tyfcgvrq0orfjg736y2s4nu26f8707xtst1t9jnozl1d6hvu9siw63cybx35j8tqgshdlrr79n78rf4qj\",\n  \"mapsPublishStatus\" : \"PUBLISHED\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"8185\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"sd89\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"53m6\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"4u27\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"59du\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"vt8b\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"0n62\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"dc2i\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/225127\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4982f8f0-163b-3c40-a36c-907cb58ad9df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "streetviewpublish.photo.create",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}