{
  "mappings" : [ {
    "id" : "faffda46-6baa-4e87-990c-d8d162f10dcd",
    "name" : "Updates the metadata of Photos, such as pose, place association, connections, et...",
    "request" : {
      "urlPath" : "/v1/photos:batchUpdate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-08-28T10:07:13.246898Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-06-25T12:07:13.246936Z\",\n        \"altitude\" : 1.0990763092186404E308,\n        \"accuracyMeters\" : 1.9746998631450668E38,\n        \"latLngPair\" : {\n          \"latitude\" : 9.103771540578813E307,\n          \"longitude\" : 6.285084429813627E307\n        },\n        \"heading\" : 4.264285983887739E307,\n        \"level\" : {\n          \"number\" : 1.5259220441242764E308,\n          \"name\" : \"Cartwright\"\n        },\n        \"roll\" : 1.411815611767576E307,\n        \"pitch\" : 6.538282082460214E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/982048\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/915064\"\n      },\n      \"photoId\" : {\n        \"id\" : \"20p5\"\n      },\n      \"shareLink\" : \"0aav02zx7qbvjx5jrfk95zr0kjga01d3273iurjkde3ikr2yn0u1nwrg7otl29il1w2spq4xvxu9czuj6mn2057i2by1syletn619tkr3wjseh9q3s0cfh7hgrljmz5x4t4hlmxylzf\",\n      \"uploadTime\" : \"2023-03-08T11:43:13.247273Z\",\n      \"places\" : [ {\n        \"name\" : \"Willy Hammes\",\n        \"placeId\" : \"4yfn\",\n        \"languageCode\" : \"au7sqv0jzmba0m6f3qf48l3vsp\"\n      }, {\n        \"name\" : \"Sanora Gaylord\",\n        \"placeId\" : \"mw06\",\n        \"languageCode\" : \"tlv0ritv0jkg1pf9vmych9vwv02l69j17\"\n      }, {\n        \"name\" : \"Gerardo Wuckert\",\n        \"placeId\" : \"be09\",\n        \"languageCode\" : \"opiwpjfjdzzdbt4bv6lso14szr1xv616481dp2tjpwz1r91utbwwvq9lioqknuu0uzk142txp3q77lqsgr2izxqq2e8xwwnrmg25d1kyn47wna5trmrdnlfnbsawz2popvo0hsz0cs3361r\"\n      }, {\n        \"name\" : \"Katherina Daniel\",\n        \"placeId\" : \"5l6d\",\n        \"languageCode\" : \"qv1w6jqehlsluhnhm2s301iakkmancy5beobtwi2fpkchy653xs8t8p1rai18rk33xl873h2lm6d4z4nqpoai8jg07gemvwlp4kcd1h7qgz668umo7ns4l3kzj6ci4p39y59d1o5r2rip3zz4o2m85qw75grw3bxg9859chcruqysj0qk2pc0fq\"\n      } ],\n      \"viewCount\" : \"98x34oxvhu3m5tcdufcche59bzur5w99d1dxxmjkfpkpq47upndcqbz7z2zlh683g10l8nzkt0qz7fq3ig41b5ylpab862c3r4r38om1wnlcutgz0t4ddcxzewv7p0doatavvf61\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/639634\"\n    },\n    \"status\" : {\n      \"code\" : 343513098,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dignissimos sit totam id tempore odio. Enim sequi autem inventore. Ad praesentium rerum maxime quasi rerum animi non. Iste iure magnam recusandae inventore.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n      \"captureTime\" : \"2022-08-03T12:20:13.248027Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-04T09:44:13.248065Z\",\n        \"altitude\" : 1.1166938086249695E308,\n        \"accuracyMeters\" : 1.0948464868387592E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.05214862907333E308,\n          \"longitude\" : 1.5810766784787067E307\n        },\n        \"heading\" : 2.6456486130371304E307,\n        \"level\" : {\n          \"number\" : 1.0128722671457987E308,\n          \"name\" : \"Roberts\"\n        },\n        \"roll\" : 6.563877634750287E307,\n        \"pitch\" : 3.269237884160307E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/113356\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/507027\"\n      },\n      \"photoId\" : {\n        \"id\" : \"7hs7\"\n      },\n      \"shareLink\" : \"ye3smlic6frf1d7p03zvrn45h5zg0ccv9zp2om14hbyhjiceil\",\n      \"uploadTime\" : \"2022-03-31T11:00:13.248419Z\",\n      \"places\" : [ {\n        \"name\" : \"Wilmer Harris\",\n        \"placeId\" : \"td09\",\n        \"languageCode\" : \"3uhwkt1s3pv4dutb77vh9knu818ddqj1eimxo10m3ibo95oehepycyhtso23ttdgdxq0wnrx7femeuv2m6hf2xyr2ltnpyrb03\"\n      }, {\n        \"name\" : \"Margret Conn II\",\n        \"placeId\" : \"p879\",\n        \"languageCode\" : \"tf1pu2qqi0krfk7x0tkacnyxgwzrybmml74paala58xeorxgkwxpe7zb5t5ag67re0t\"\n      }, {\n        \"name\" : \"Princess Pfeffer\",\n        \"placeId\" : \"50s6\",\n        \"languageCode\" : \"4g12vemypd5243b1ll40s1rkwg1lveeh1pg3ihgtln3dera3cpyeekz618ol8p92fllx0w3mbwb2ar18y9rq2zd3mi75via42\"\n      }, {\n        \"name\" : \"Enedina Brakus\",\n        \"placeId\" : \"njo8\",\n        \"languageCode\" : \"rxoggc13ahe044xiy3cm4941gkcemfwljppzm2yx4729scx3fmxu\"\n      }, {\n        \"name\" : \"Otto Ward\",\n        \"placeId\" : \"961w\",\n        \"languageCode\" : \"ssgezs95rdwswbicf3zlurgjvupdlixntyvw54vqb0u6prm5kauyz3rfeupu07x7b83jb1j5634v75ed1r3xb2qaqu7erym07tmk9ay20v412omwdq3btnalb7xfsp9pdaut8g4w94phvkede749x627gsfgmoi3p333f5gz01svaxh82541s3357w75adohv8r7\"\n      }, {\n        \"name\" : \"Jamie Carroll\",\n        \"placeId\" : \"x4b1\",\n        \"languageCode\" : \"uw0p8ihc3lfr2lx500sgw6yo0o2okjh8z2up0ps8n8qa0gec1odwf40b23x7lkj4a1vmo7r0vtdghn\"\n      }, {\n        \"name\" : \"Abraham VonRueden\",\n        \"placeId\" : \"ezbm\",\n        \"languageCode\" : \"vre0sw4cxi8do9hip2str\"\n      }, {\n        \"name\" : \"Parker Stiedemann I\",\n        \"placeId\" : \"2d0l\",\n        \"languageCode\" : \"1srsb03cccegh3gtaauowtj3dx8gxyg2im27ut2o44kwb9cdj93idlpmmv0bcxlla8bx629jgy1v7i0hc3khul9qimo76wl6qzx54do88axt9p4xq4gnqs3xbsf0lo0xkv8rr9mz8se\"\n      } ],\n      \"viewCount\" : \"hmu80vw7j9o7ay7wozjyupn9v2k9hf932j7x1zb0zqmc3l4nug07vrf337g715dn2lp73pa4ok99uv\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/547915\"\n    },\n    \"status\" : {\n      \"code\" : 864246880,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Quisquam rem reprehenderit commodi veritatis voluptates reiciendis cum. Earum eius tempora qui magnam. In ut qui ut in rerum. Iste eaque quas quisquam.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-11-13T10:32:13.251613Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-04-13T10:02:13.251663Z\",\n        \"altitude\" : 1.6489192575860244E307,\n        \"accuracyMeters\" : 5.764972746905672E37,\n        \"latLngPair\" : {\n          \"latitude\" : 7.425253922802843E307,\n          \"longitude\" : 6.595179739975945E307\n        },\n        \"heading\" : 1.756629388821429E307,\n        \"level\" : {\n          \"number\" : 1.5757212771124716E308,\n          \"name\" : \"Shields\"\n        },\n        \"roll\" : 6.869001098818856E307,\n        \"pitch\" : 3.554255551660943E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/069277\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/993511\"\n      },\n      \"photoId\" : {\n        \"id\" : \"2v83\"\n      },\n      \"shareLink\" : \"j89ykrtlv7qbw41ljhod1pnf8n822tlayh9lh9i98tm737nmbndy1hz7n9lpk58i0ul5ektihg67eda2s74svldbr91vxeo4sx43ei3emev7m6exlzxsjlpfejg3xgmtkscpq0\",\n      \"uploadTime\" : \"2022-04-05T11:13:13.252035Z\",\n      \"places\" : [ {\n        \"name\" : \"Mr. Jacob Bechtelar\",\n        \"placeId\" : \"9ub9\",\n        \"languageCode\" : \"mebxynfrm7ayd1olu19toy7vfk7uh0fvgayn1eckhmeg1s2b7j8pxojp60bk3pt5tf6l4guc6b7ciui2uf1v0jbrlvre57kd7srkw49ar5n1wdw4feebyi7f2dv3dqnn8dcf8jiktp53kq1ba2iut6u3h6cjhof7qybahll8cp0v1coh3h9j7rlxs3\"\n      }, {\n        \"name\" : \"Avery Lakin\",\n        \"placeId\" : \"a296\",\n        \"languageCode\" : \"kqfijlmajz52s187o8rzs11drvs8d81sccbdvquh7yhwebmmcq7ma7qrv1q1uq0ptwhhwzerx7x8ni3i30g8j74awrxuni0179s66nb0wywr6l8f59su45j0kkt35h206fm1x\"\n      }, {\n        \"name\" : \"Meredith Farrell\",\n        \"placeId\" : \"9i80\",\n        \"languageCode\" : \"7fybojmc1pzl869a25wk8ta00snxipt4k8a6ges5gc3l4gumdmfuhq50s458ealvr6a4o2cp6loo5gdlgjwd5bfhpzq5tf\"\n      }, {\n        \"name\" : \"Nelda Franecki\",\n        \"placeId\" : \"9r44\",\n        \"languageCode\" : \"q7lu83gb5hx82h4gnu23dnkd7jmcdtbrl3eizawn07wye8s6yhlxaqf6n7kak3jgem5mn2uei16tkeoklh5kak24fx7qnukbo96ikk7f5wgh1fkcr3lhq7ea89g6iejr3n6d01kugzp5wvzdwf2wuvggxx35rn1gj9dddr\"\n      }, {\n        \"name\" : \"Steve Krajcik\",\n        \"placeId\" : \"8s2c\",\n        \"languageCode\" : \"y67xzitw2ozzq2i4b4n4q8krec6bexi0djxgd9y6pn8ma36rk26mq4dezfcdtkt2wfagtyoz1lxad9ii3kvbm1c1sl9x8yoao0bbm2e73qekddc81h1utmais5xtromsdjourvohei5bk2na13qbygabrurkvpf3uwpiqw7q\"\n      }, {\n        \"name\" : \"Brendan Cummerata\",\n        \"placeId\" : \"1xbz\",\n        \"languageCode\" : \"a1yukd2yamkv671y27tc8usp8w3sy4g7srjfzwz8u4xn943q928yv5wtb14eqqoc52pfjpaiptm30wdure5lo1jtai3p1pdj2q65uwzqmpsv8f6a18fojcbrys9usxu9lc39hd2qtyvi202e6m37znjtqyhcdh\"\n      }, {\n        \"name\" : \"Kisha Quitzon Jr.\",\n        \"placeId\" : \"pa46\",\n        \"languageCode\" : \"k4scxc9rlprckerq59u55qtfhlystxboj7cmop9ql6yhoa8ly010z4vyqslrbmn76n9cx0dqeeufg5020ipyxt1j9yn92gl6dsrv10bjc0g\"\n      } ],\n      \"viewCount\" : \"49osljaw3zqkuff0y2eluocfys59udepwcqjy09bmxd96nn0c7v0vcc3d0ykhi1qdgy3d9yo5pxeii1bkfoj5our7wlnfvr46o6lycoz3pgteep6fgqd0qgf8m9jybygzcsx3nvxlbfq1rkrw\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/814266\"\n    },\n    \"status\" : {\n      \"code\" : 635407384,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Nam modi voluptatem in necessitatibus aut. Qui quos voluptate dolorem vel. Qui omnis ipsum. Non qui tenetur. Eum dolores quisquam est commodi necessitatibus quia enim.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n      \"captureTime\" : \"2022-12-28T09:07:13.253223Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-01-13T12:18:13.253262Z\",\n        \"altitude\" : 2.4803326542037195E307,\n        \"accuracyMeters\" : 2.1474750889672648E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.6491658273458028E308,\n          \"longitude\" : 1.581706119167357E308\n        },\n        \"heading\" : 1.131530372842904E308,\n        \"level\" : {\n          \"number\" : 2.684948486573876E307,\n          \"name\" : \"Schaefer\"\n        },\n        \"roll\" : 1.4195802553410367E308,\n        \"pitch\" : 1.4120183193197956E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/150813\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/678477\"\n      },\n      \"photoId\" : {\n        \"id\" : \"7091\"\n      },\n      \"shareLink\" : \"98vvnlo1tck6fd4f5o3bch9s5yx47gf654559ugqktw31v0wxihzlofflwuiqmmwai00r0xqsk92dmixkptdupn8kqh2sk8k8eu2iy9kjfnuoim1l3bmh6lxq1yezgx1qb09jhulq06qkcysxtv8co1rglfxyl2ckfughgrp0g11vk8ob70ce5sl6j6vx\",\n      \"uploadTime\" : \"2022-04-17T09:00:13.253616Z\",\n      \"places\" : [ {\n        \"name\" : \"Mr. Jay Bosco\",\n        \"placeId\" : \"f1q0\",\n        \"languageCode\" : \"tdd04x9tiuqoyebe63j9v09ixu7seys60a0hyxvwophzn0txoftmmceozyicgv259en6sm5qaoi2\"\n      } ],\n      \"viewCount\" : \"18rmh2r50jdy\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/472034\"\n    },\n    \"status\" : {\n      \"code\" : 668375676,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Quas et voluptatem deserunt eaque. Fugit mollitia ipsam nam qui consequatur eius minima. Autem quas dolores esse iste eaque consequatur. Consequatur aliquam fugiat nulla provident.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"COMPLETED\",\n      \"captureTime\" : \"2022-06-03T12:00:13.253984Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-04-29T10:33:13.254024Z\",\n        \"altitude\" : 3.501251065928315E307,\n        \"accuracyMeters\" : 1.3187764153781555E38,\n        \"latLngPair\" : {\n          \"latitude\" : 4.3536886619555906E307,\n          \"longitude\" : 7.868378263387861E307\n        },\n        \"heading\" : 1.4249850634385486E308,\n        \"level\" : {\n          \"number\" : 1.2326132901937097E308,\n          \"name\" : \"Prosacco\"\n        },\n        \"roll\" : 3.949988303218614E307,\n        \"pitch\" : 2.1668274584659929E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/816819\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/888673\"\n      },\n      \"photoId\" : {\n        \"id\" : \"57y3\"\n      },\n      \"shareLink\" : \"kvzl6cdtxlipa6dtth2zx969haxm72khkiulfzv9e0c836udpn4e70lruq3bq4mqrkl13rrqgr6sc8t4hrt7ibt9xd7afnnkmdscya6i6e64m9py2rn5ead\",\n      \"uploadTime\" : \"2022-12-13T11:48:13.254352Z\",\n      \"places\" : [ {\n        \"name\" : \"Steven Schowalter Jr.\",\n        \"placeId\" : \"igq8\",\n        \"languageCode\" : \"sx8cuw5ll0lzt270vrv7hs3rcv3nzt7e4c1ir8ekz6tatgbl0\"\n      }, {\n        \"name\" : \"Wiley Jacobi\",\n        \"placeId\" : \"6lpz\",\n        \"languageCode\" : \"lptkhkvesy048ztnds97k8zd0ma6w5h0we5aevo5l5c6ptplptwjryhfi1rvylwxfcgewk704mc4ka4qxdgovbnn7dbiijklwcm99yddaeghjyi8wdidecpni966pehirhpe2n4\"\n      }, {\n        \"name\" : \"Amber Welch\",\n        \"placeId\" : \"6go3\",\n        \"languageCode\" : \"zhtj1w0y7dueh64bvhdgphpjgjo74d88cca8snwzqkd2xi5uut3f4ycgjku5lsrfeghyjus\"\n      }, {\n        \"name\" : \"Dr. Stanley Sawayn\",\n        \"placeId\" : \"1y7s\",\n        \"languageCode\" : \"ujn8sssxwe8htw2opydc\"\n      }, {\n        \"name\" : \"Debi Hudson\",\n        \"placeId\" : \"3b6y\",\n        \"languageCode\" : \"femhc5u5khs8dxdjpptlxupl0cz2rek73cyin14gw50or6c1uq02rj7vu7ciulq9o5d89pwwloc58v5514s1qal9808dwhwzedwpikqcdnsryk913q6mmmnxmiy3vkrk9khvum1ouq9jdqwwwywxkfhv0ya162et5pmxm3y2m8dvcchcoa4m3u\"\n      } ],\n      \"viewCount\" : \"otmtaksvsy6o8h88ds1d5sa9qkx6dbhmzh0a6b3hsrxhjmscuxh2rccdy3x45ru9uf1wfoww9g40l4j8wmgjlcmlk706iogy0t652t0mfdwzeiiz7o8gfmpmyhi28gs4zs73wheyx15cu0o5pfj5ddon28rinl\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/182015\"\n    },\n    \"status\" : {\n      \"code\" : 341909296,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ducimus quas tenetur ut error fugit. Voluptates dolores deserunt ducimus aperiam eaque quisquam. Eum maiores enim sint recusandae vel et. Nisi asperiores id fugiat. Autem repellat voluptatibus neque.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"NEVER_TRANSFERRED\",\n      \"captureTime\" : \"2022-12-03T10:44:13.255248Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-08-31T11:01:13.255286Z\",\n        \"altitude\" : 1.0199994647873224E308,\n        \"accuracyMeters\" : 8.119376893054545E36,\n        \"latLngPair\" : {\n          \"latitude\" : 1.484023073636506E308,\n          \"longitude\" : 9.14349690156494E307\n        },\n        \"heading\" : 5.046312885432546E307,\n        \"level\" : {\n          \"number\" : 1.7887982902164377E308,\n          \"name\" : \"Zulauf\"\n        },\n        \"roll\" : 1.3708996190766343E308,\n        \"pitch\" : 1.592343362470988E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/711875\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/898965\"\n      },\n      \"photoId\" : {\n        \"id\" : \"0pd6\"\n      },\n      \"shareLink\" : \"wmywssh9b1c917u88nri0humfmgpvnpqc0zkxsyzjbkrhkqe4qc4bn42\",\n      \"uploadTime\" : \"2022-11-22T11:36:13.255629Z\",\n      \"places\" : [ {\n        \"name\" : \"Zona Schneider\",\n        \"placeId\" : \"k0n2\",\n        \"languageCode\" : \"e3alcduu3q6g98ag5\"\n      }, {\n        \"name\" : \"Fabian Feeney\",\n        \"placeId\" : \"4su8\",\n        \"languageCode\" : \"6gpq8da0x3us4b2mpvpwfwluh15cuke0b4pnvfg0na5kdkwa4o7zdqtiz549wi0o9i54lud9fs51lregtg70bjhttpens3bwil7ueitnwo2vmko3cbmfr42zilrv52dkk9s3lcw9y29360xle1j4bwk7z68rttc836umbcu9qetfxb7k9an43k2zau5leo10lg0kjl31\"\n      } ],\n      \"viewCount\" : \"vq0xeerwz0nj30mkfa3iofe2tb6rzqnox4cyioxykm01yd7369mapekc8e5wuseows1x55nx2v7rt7p17gldjmb18ltyulg55v7ej0klju5mhjcefvscjeour6i06ulbukjgqeesuxxo1rwifaqm\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/822955\"\n    },\n    \"status\" : {\n      \"code\" : 745113051,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Pariatur et repellat quae aspernatur temporibus. Veniam nam ullam natus odit possimus omnis. Quae asperiores harum nam recusandae eveniet. Deserunt ab et saepe nobis amet quis ut.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"NEVER_TRANSFERRED\",\n      \"captureTime\" : \"2022-05-29T09:39:13.256136Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-09-02T09:33:13.256172Z\",\n        \"altitude\" : 1.2167508273944E307,\n        \"accuracyMeters\" : 2.0738180558843187E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.7642787021794185E308,\n          \"longitude\" : 1.5365700609536641E308\n        },\n        \"heading\" : 1.6590207432411449E308,\n        \"level\" : {\n          \"number\" : 6.941326009691902E307,\n          \"name\" : \"Hoppe\"\n        },\n        \"roll\" : 5.491953140552473E307,\n        \"pitch\" : 1.6404647850971718E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/437145\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/265376\"\n      },\n      \"photoId\" : {\n        \"id\" : \"1bfw\"\n      },\n      \"shareLink\" : \"17o4dhd9v48ukjslv0bcfrr3lj1dwluy2gf\",\n      \"uploadTime\" : \"2023-02-28T11:55:13.256489Z\",\n      \"places\" : [ {\n        \"name\" : \"Ms. Dudley Von\",\n        \"placeId\" : \"je4j\",\n        \"languageCode\" : \"xzg6q7x4jvzgzi2gxm2f3smo26exfguagn81wt1d3itqbcyodngcgzfl16cx4zlrupdtkacywrdhrxiqb6wzaip4s6ugrme7xrq9s868duy6y8l2n47p8ovamhwrb2is8e3xq3bf8fdot9xot68dnuv7\"\n      }, {\n        \"name\" : \"Inga Ankunding\",\n        \"placeId\" : \"75qu\",\n        \"languageCode\" : \"bf0m9dlg84sq2d46uvchla3a1v\"\n      }, {\n        \"name\" : \"Claudio Hills\",\n        \"placeId\" : \"23b1\",\n        \"languageCode\" : \"ol7y5kehbt2aeuuxzsaiuw7mi6cevc9xzujhdvwjup94x92luk0v0pfk5lsibva909p9ioimx23jvv4qnr4i9rilxv1dfaf5kqv1c3fqc7hwa8wvwacx544d02x1n2we\"\n      }, {\n        \"name\" : \"Dewitt Barton\",\n        \"placeId\" : \"367q\",\n        \"languageCode\" : \"wmxgxyg5xtnx8ye9llsrhrw3d5vj3a12ckla0v9slhjplm2wgn5fzqfdgtf9ucmkgechttkizegjfn9ntf7ee85by4ho76ro05516w7xnkgkc31sl95phw7x4rcvu0d0w817qvvmk8s3ysk8wq88q83yph9jzuu65w7rsbdaqh7wfjh40l767ufwh60rdnwcz\"\n      }, {\n        \"name\" : \"Lorrie Powlowski IV\",\n        \"placeId\" : \"c5y0\",\n        \"languageCode\" : \"49gcxr5vrqrro2qehyl0pzl1v8ndryptxdqbranstltdl2pr8zsgwxpkqo5qdudgk4i\"\n      }, {\n        \"name\" : \"Maudie Langosh\",\n        \"placeId\" : \"0ag1\",\n        \"languageCode\" : \"lbcr8xrn0c04c1uejn2c8j9fcogwx9cxpd5alfavsmae8pajjxbn775egdbt4cq1agrmwpszyjmzuo61eis16sawgiqijh5b70kbfysjdhamnpq03ex7gabv8fv4rd249xa6hbj3y653iax4zlyg5nkxvkce6gwwcc3ajg4f5t\"\n      }, {\n        \"name\" : \"Mirian Steuber II\",\n        \"placeId\" : \"4roj\",\n        \"languageCode\" : \"7gf8u7busszzclgpb3nsko\"\n      } ],\n      \"viewCount\" : \"j75720mazc8e1yt54tkja59ps9f2v4mys63nw6lrqazxzv84rcbb16zu5u\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/913185\"\n    },\n    \"status\" : {\n      \"code\" : 527018183,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia et perspiciatis omnis numquam. Sed in reiciendis. Dolor eos provident asperiores. Molestiae incidunt est unde quidem suscipit laboriosam dolores. Et tempora et quasi dolorem pariatur unde commodi\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faffda46-6baa-4e87-990c-d8d162f10dcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.257834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchUpdate",
          "schema" : {
            "description" : "Response to batch update of metadata of one or more Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo updated, in the same order as the request.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "e89fe71a-d835-4de6-8e74-9ad8808903d9",
    "name" : "Gets the metadata of the specified Photo batch. Note that if BatchGetPhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"COMPLETED\",\n      \"captureTime\" : \"2022-05-02T11:03:13.24052Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-03-16T12:19:13.240586Z\",\n        \"altitude\" : 3.8984717742561143E307,\n        \"accuracyMeters\" : 2.1132571534749343E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.8165642052910464E306,\n          \"longitude\" : 7.527286894464855E307\n        },\n        \"heading\" : 1.3921970072620397E308,\n        \"level\" : {\n          \"number\" : 1.5099691270679061E308,\n          \"name\" : \"Renner\"\n        },\n        \"roll\" : 9.14195830337145E307,\n        \"pitch\" : 2.4368535304123E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/731998\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/354550\"\n      },\n      \"photoId\" : {\n        \"id\" : \"nk15\"\n      },\n      \"shareLink\" : \"kj407ofvg06zmh8ikz2e7bavbru80lx0on26csxip5r\",\n      \"uploadTime\" : \"2022-09-01T11:23:13.240933Z\",\n      \"places\" : [ {\n        \"name\" : \"Sandie Stamm\",\n        \"placeId\" : \"1081\",\n        \"languageCode\" : \"ep0nup4n47kzrultx94lgga\"\n      }, {\n        \"name\" : \"Patience McKenzie\",\n        \"placeId\" : \"z108\",\n        \"languageCode\" : \"8da5sb914815qtiz778vbhyn6z2xmwimgt8ph9bghs5aj2tnv82pao7whfv9p1tjzlgo2yk8itsccs5ymspfax65ub6\"\n      }, {\n        \"name\" : \"Darrick Bergnaum\",\n        \"placeId\" : \"7kr3\",\n        \"languageCode\" : \"rbbso358jl419z46o1cbu9apors5vof847hz3yo9mfxijavz967xlphq4l736ja39efpkorz3imngljvhix8wmzmcyg4eo9j0jteil4m3y5rv4xgvgwfnk3p0b5tumw7b3vhq15604xvdftspc6vxnqk4fld2fuog4q3jwfgknbr9afqt7j4i\"\n      } ],\n      \"viewCount\" : \"3g3ufa8yk171ka9eqcfhk2votj2kx5ikcqmy08omsbhaxa1ox2zvvvx\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/561031\"\n    },\n    \"status\" : {\n      \"code\" : 1909607170,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nisi a dolores quam. Ipsam omnis iure dolore adipisci assumenda est pariatur. Dolores omnis iste necessitatibus aliquam. Animi impedit animi.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"NEVER_TRANSFERRED\",\n      \"captureTime\" : \"2022-05-27T09:19:13.241575Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-11T08:44:13.241615Z\",\n        \"altitude\" : 9.327817521147323E307,\n        \"accuracyMeters\" : 1.020704129470458E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.026569434967428E308,\n          \"longitude\" : 6.307294677601856E307\n        },\n        \"heading\" : 1.10345395311257E308,\n        \"level\" : {\n          \"number\" : 4.3387866401492897E307,\n          \"name\" : \"Fahey\"\n        },\n        \"roll\" : 1.1891801871714557E308,\n        \"pitch\" : 1.6196383846457964E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/188578\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/597264\"\n      },\n      \"photoId\" : {\n        \"id\" : \"0a43\"\n      },\n      \"shareLink\" : \"2qxo7zotcyozc0i0o2rrotisi9ew8tyf8j7u7k7ksqrl0allz7fo88si9vlaquf8h6dscj1jo280pg0k241j3xbb62kj45y5lnwh6h2qjifwgtr4qeijle4\",\n      \"uploadTime\" : \"2022-04-27T11:15:13.241952Z\",\n      \"places\" : [ {\n        \"name\" : \"Marica Christiansen\",\n        \"placeId\" : \"kgx7\",\n        \"languageCode\" : \"vu13icp38wzd4cgtjolachihxjhhjnib7z22ngetvlu9bluyibrz1j7e06gmuyg37c312r1xt23d3vsngf9g4iufdfrdvdhqwgi2hboh40dsif3wtwtmnz26v2v6yy\"\n      } ],\n      \"viewCount\" : \"fhflooghzf26jkewp0c29a6h8tcte3coim5sefx865freg\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/580019\"\n    },\n    \"status\" : {\n      \"code\" : 896176756,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Consequatur adipisci rem rerum quam aspernatur qui. Quis laudantium atque aliquam numquam ipsam. Aliquid tenetur quod sapiente ratione cumque.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-03-19T10:18:13.242287Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-07-11T11:29:13.242323Z\",\n        \"altitude\" : 8.948533674993752E307,\n        \"accuracyMeters\" : 3.2550491320337584E38,\n        \"latLngPair\" : {\n          \"latitude\" : 6.000002360167397E307,\n          \"longitude\" : 1.342559718587846E307\n        },\n        \"heading\" : 1.525599579636648E308,\n        \"level\" : {\n          \"number\" : 1.082431632655705E308,\n          \"name\" : \"Rippin\"\n        },\n        \"roll\" : 1.4472966191558842E308,\n        \"pitch\" : 1.0582888405860593E306\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/572873\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/165943\"\n      },\n      \"photoId\" : {\n        \"id\" : \"44jt\"\n      },\n      \"shareLink\" : \"rvgdyqbv7s4o7vm0uks4tei16j5pm9qm2novuptf5bi7jqec6tqjkb6bu\",\n      \"uploadTime\" : \"2022-09-12T11:12:13.242635Z\",\n      \"places\" : [ {\n        \"name\" : \"Renaldo Becker\",\n        \"placeId\" : \"q91j\",\n        \"languageCode\" : \"4zh0c05x2j33l5diky3zu0th3bxixiuivz4v3y6hju2zjhtshmgf1crs0hpnx6xnf24hrbzgt8g5h1kox1teqqj3p4pnbzn5kb2nh67lplcak\"\n      } ],\n      \"viewCount\" : \"xyzrgtu9mxj65x1201b7btdcp3bm3w0z9nhv6vyslsud62e\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/468246\"\n    },\n    \"status\" : {\n      \"code\" : 938662522,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Assumenda esse illum consectetur molestiae exercitationem dolorem atque. Iure quis ut doloribus provident. Tenetur ipsa quia aut ipsum nihil eaque sunt. Rerum ipsam qui cupiditate.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-05-12T11:43:13.242998Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-07-22T11:45:13.243035Z\",\n        \"altitude\" : 5.699374293150978E307,\n        \"accuracyMeters\" : 1.8111324541579196E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.2414326411517833E308,\n          \"longitude\" : 1.2148777487653017E308\n        },\n        \"heading\" : 1.3167041668333626E308,\n        \"level\" : {\n          \"number\" : 9.064005359966377E307,\n          \"name\" : \"Gerhold\"\n        },\n        \"roll\" : 1.6254400475929574E308,\n        \"pitch\" : 1.423521194455984E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/796637\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/614018\"\n      },\n      \"photoId\" : {\n        \"id\" : \"f58b\"\n      },\n      \"shareLink\" : \"hazkk9h1pz4xdkr7rnrqe7o5uubp0ls4rz3ax7ov348jy3rizb01iak700f1m18j6hzrln2lecm6jhcsi3gqb49n13n8mqqf538dnpq0mx5zr98iy2yhc66expm7sfiegn1n84q8z1plv85f5grvezl4kv0pj1b6vonygo8h1r3ge\",\n      \"uploadTime\" : \"2023-02-20T08:55:13.24335Z\",\n      \"places\" : [ {\n        \"name\" : \"Melda Turcotte\",\n        \"placeId\" : \"52bh\",\n        \"languageCode\" : \"3k9ejm0c99ithv7s16vg7d86w1of9dw64go5pyxpc6hz2z7njxyy9b0wo88zfn4m4z1ehwloywb5fbva9u1vxu8w1x8gge\"\n      }, {\n        \"name\" : \"Carman Jakubowski\",\n        \"placeId\" : \"uf4n\",\n        \"languageCode\" : \"v0qc47x0d2ch7pec44n7hxmu5ufnz90qp2yxr8xd7owtvfgc275fwqm8gc9dg63gzobdkbusgn6aapc6qlpbrxh8nds5putbb6\"\n      } ],\n      \"viewCount\" : \"qob99\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/719839\"\n    },\n    \"status\" : {\n      \"code\" : 643878605,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Similique ut dolor voluptates magnam saepe omnis. Perferendis deserunt magni odio sequi qui esse nihil. Non qui quidem ab. Praesentium non blanditiis suscipit quia quia repudiandae dolor.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2023-01-10T10:13:13.243835Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-09-01T10:28:13.243871Z\",\n        \"altitude\" : 1.294901221780001E308,\n        \"accuracyMeters\" : 5.576670604456191E37,\n        \"latLngPair\" : {\n          \"latitude\" : 4.1007264852481156E307,\n          \"longitude\" : 1.5131991953067651E308\n        },\n        \"heading\" : 5.077968404400356E307,\n        \"level\" : {\n          \"number\" : 1.7330510676715142E308,\n          \"name\" : \"Dooley\"\n        },\n        \"roll\" : 3.3570676116362005E307,\n        \"pitch\" : 1.6557922346936956E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/769296\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/206571\"\n      },\n      \"photoId\" : {\n        \"id\" : \"xre5\"\n      },\n      \"shareLink\" : \"ermm3uoorxxpif01h786j6da18plkh0\",\n      \"uploadTime\" : \"2022-07-03T09:35:13.244189Z\",\n      \"places\" : [ {\n        \"name\" : \"Seth Robel\",\n        \"placeId\" : \"0757\",\n        \"languageCode\" : \"ftcyrfmfc8vsogxg24v40wkf9ohyye3cz26yvybqgzt9hw8r6eb76h3ddfp5mfp886ydwmual2mu4e2dw8bfjprpk8f5dwop14z7tzncr11n0fr5hzvwbcmlfadbf5otms680h9b3wvkjljokzyqdf50dibfu2dnzoesfcqb8ib4z2epprks28576nylg07\"\n      } ],\n      \"viewCount\" : \"kqo1l0to2iyjht\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/291056\"\n    },\n    \"status\" : {\n      \"code\" : 309327902,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Ut molestias ut veniam. Est vero praesentium sit amet. Et ut dolor.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"CANCELLED\",\n      \"captureTime\" : \"2022-07-24T08:53:13.244529Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-20T08:55:13.244563Z\",\n        \"altitude\" : 1.1255729944112402E308,\n        \"accuracyMeters\" : 2.1973931593126002E38,\n        \"latLngPair\" : {\n          \"latitude\" : 5.816780348438929E307,\n          \"longitude\" : 5.135115881355441E307\n        },\n        \"heading\" : 9.130140247876605E307,\n        \"level\" : {\n          \"number\" : 1.823543642164574E307,\n          \"name\" : \"Sanford\"\n        },\n        \"roll\" : 2.0261262994777343E307,\n        \"pitch\" : 2.9314669539509623E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/384134\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/282852\"\n      },\n      \"photoId\" : {\n        \"id\" : \"6oe5\"\n      },\n      \"shareLink\" : \"kzighzyk9897rrtjfam79bjje2wnjxe03fa1ewe9o76qyulad49aevkkbp0l1stsp0b7xlt4nug81aggxvlpj0adv9w809l94to39cy9ntvmmdr1buzj1azv9rbcxkjcpf49syh88\",\n      \"uploadTime\" : \"2022-12-18T11:25:13.244875Z\",\n      \"places\" : [ {\n        \"name\" : \"Elayne Parisian\",\n        \"placeId\" : \"ze0k\",\n        \"languageCode\" : \"eyqrad91\"\n      } ],\n      \"viewCount\" : \"gg7ujwdu51d7b4avv7pqe8xfo7c3rwa60nzuvfaubhldd32si3zm7q9z2kubf9sdk3k8je9j1sr58nn7z4rbqf0d15ole5bpnw18qtxgbxlp4gb40ka3z1iy7j1vgt9f4sjq90applqrpilx7jvwe2uhzui7wvf5e9h20fojkvskimow8ijoutyvh1qfw\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/179328\"\n    },\n    \"status\" : {\n      \"code\" : 327873232,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptas asperiores et sint quia voluptatum neque et. Mollitia possimus quas quod voluptas. Sequi sint commodi quas est et expedita et.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"REJECTED\",\n      \"captureTime\" : \"2022-06-08T11:31:13.245217Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-27T12:00:13.245251Z\",\n        \"altitude\" : 3.734877700895489E307,\n        \"accuracyMeters\" : 2.9476958364961844E38,\n        \"latLngPair\" : {\n          \"latitude\" : 9.400887699104075E307,\n          \"longitude\" : 2.218250442981319E307\n        },\n        \"heading\" : 1.7780098234135709E308,\n        \"level\" : {\n          \"number\" : 9.594449728037693E306,\n          \"name\" : \"Lindgren\"\n        },\n        \"roll\" : 8.255889051725107E307,\n        \"pitch\" : 1.494436172495255E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/719861\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/877528\"\n      },\n      \"photoId\" : {\n        \"id\" : \"d3o7\"\n      },\n      \"shareLink\" : \"ww9kb1fn5bvm3je6wtfcjj3gw0tyia8mhxq9h2plkcoul3rjf31m3rgb1cscmolpjlersz2twxqf1km7kplpqq7aehahm95zi6i9kgo4yjt1bnx3wz66gflmq7rxbi9e5pi3tq6imh4kvnaznwl6ljkjuiehjbw7smx5jokvbuchl0wq4a6gltmsyhc7cmqi8lt8u3ne\",\n      \"uploadTime\" : \"2023-01-16T10:49:13.245572Z\",\n      \"places\" : [ {\n        \"name\" : \"Audrey Dicki\",\n        \"placeId\" : \"so7h\",\n        \"languageCode\" : \"x2ij4jjo783jb1uy7etrevqyl0i4xazfe1mqo7v3vu48uit86e9wede\"\n      }, {\n        \"name\" : \"Lloyd McDermott\",\n        \"placeId\" : \"x1h0\",\n        \"languageCode\" : \"ppc33nm0ax4fe1sv1jhmd98fkbd606bjp6vvvi4p2d9dt7wkel23by\"\n      }, {\n        \"name\" : \"Mariah Rogahn MD\",\n        \"placeId\" : \"c250\",\n        \"languageCode\" : \"unzc3nhwxsdnga7htwck8sbtj8pqnalhdbbeegiygdxkvvfysazq1wfujq56istsabeubonkucyc3gg0vuwv7dy9ozc5z\"\n      }, {\n        \"name\" : \"Warren Klein\",\n        \"placeId\" : \"2uh9\",\n        \"languageCode\" : \"ggfi1ksurwm6qomvj8urpm0oj3aev1pw89jbzbjn4k7njsg4x87ecm1b0t1g2c957ri50h6k0tti80g2gspncfzqty3h6\"\n      }, {\n        \"name\" : \"Dr. Sydney Mraz\",\n        \"placeId\" : \"d446\",\n        \"languageCode\" : \"k5qbr87t6dz8v8o6lh4641xsa0teqc9g0grif4zzj5amk03554s01xdh75865z88rr7szp0g94v9t7gmdwy0ghkuyt3g1fzh5t4michm2ogbeoef19alclx6qe0xgn1vi753stbqr9f7kl6nf053q4dvxe4keozxp7\"\n      }, {\n        \"name\" : \"Ned Effertz\",\n        \"placeId\" : \"028w\",\n        \"languageCode\" : \"zufbpwumjqf06uj81p832idy7b41s\"\n      } ],\n      \"viewCount\" : \"o18p9phznx253m4hpq1docttgsxdwuh7yrblgta6hlqv0e9eh76b9huw1hk3ovrdqt7ykxglx833kc8k1i2pumizucqtp3knfdv173kr4nz9fsxus9g9fba1gof\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/336692\"\n    },\n    \"status\" : {\n      \"code\" : 1277654724,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Rerum modi est et consequatur. Nostrum perspiciatis corrupti quisquam voluptas. Dolores officia suscipit dicta quos voluptatum ea voluptas. Et reprehenderit voluptates nam. Qui neque ut.\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e89fe71a-d835-4de6-8e74-9ad8808903d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.246804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchGet",
          "schema" : {
            "description" : "Response to batch get of Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo requested, in the same order as the requests in BatchGetPhotos.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "ff9eaaab-5eee-4291-9027-2bd937ee8a09",
    "name" : "Deletes a list of Photos and their metadata. Note that if BatchDeletePhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchDelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : [ {\n    \"code\" : 530826098,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Qui consequuntur accusantium atque in. Voluptatum dolore explicabo saepe. Esse omnis quidem nostrum est.\"\n  }, {\n    \"code\" : 1397892733,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Veritatis facere aut quam qui cum vitae delectus. Ut aliquam a dolor sunt accusamus ea. Ab earum quia natus similique quod.\"\n  }, {\n    \"code\" : 881931619,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sit eaque in sed a explicabo vitae. Aut est quisquam beatae quo. Velit sed rerum et voluptatem deserunt exercitationem quisquam.\"\n  }, {\n    \"code\" : 2036584694,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quia soluta sit. Aut qui perspiciatis. A voluptatum tenetur. Vitae error qui explicabo ut.\"\n  }, {\n    \"code\" : 482182508,\n    \"details\" : [ { } ],\n    \"message\" : \"Consectetur quas autem non ducimus. Nemo quisquam laudantium. Nobis iste est ut non minus.\"\n  }, {\n    \"code\" : 1151114768,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quia voluptas enim. Voluptas voluptatibus sint omnis in. Maiores labore reprehenderit totam quam sint quae in. Qui fuga nihil. Facilis maiores amet aliquam dolores.\"\n  }, {\n    \"code\" : 1878029949,\n    \"details\" : [ { } ],\n    \"message\" : \"Et qui mollitia corporis. Consequatur nam sint quod. Beatae nemo consequatur et magnam est deleniti laboriosam. In aperiam doloribus est. Temporibus dolorum omnis.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff9eaaab-5eee-4291-9027-2bd937ee8a09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.240444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchDelete",
          "schema" : {
            "description" : "Response to batch delete of one or more Photos.",
            "properties" : {
              "status" : {
                "description" : "The status for the operation to delete a single Photo in the batch request.",
                "items" : {
                  "$ref" : "#/components/schemas/Status"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "025add5e-975e-4d2b-9e28-f3882d105732",
    "name" : "Lists all the Photos that belong to the user. > Note: Recently created photos th...",
    "request" : {
      "urlPath" : "/v1/photos",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"8a9iq6ygmk8edlv4qesziuimsu4s3fslng0v0fxv3z1dc1yhxndg4td3obzq\",\n  \"photos\" : [ {\n    \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n    \"captureTime\" : \"2023-02-27T11:49:13.229579Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-04-23T08:48:13.229621Z\",\n      \"altitude\" : 1.7042263759384588E308,\n      \"accuracyMeters\" : 2.0384445193799246E38,\n      \"latLngPair\" : {\n        \"latitude\" : 1.5206490620904697E308,\n        \"longitude\" : 1.4022032418800793E308\n      },\n      \"heading\" : 1.2612269147276166E308,\n      \"level\" : {\n        \"number\" : 1.181284600141922E308,\n        \"name\" : \"Dach\"\n      },\n      \"roll\" : 8.361534875575148E307,\n      \"pitch\" : 8.562127457572221E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/678639\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/089405\"\n    },\n    \"photoId\" : {\n      \"id\" : \"e281\"\n    },\n    \"shareLink\" : \"mn1cex3apxin6yfhsql5v1s7asdiyxm1htqcda46rwr7ro9ai9iicjy7hpc0yuazlggy828tc9ohzy4k4unenfpkw70f2m3t995p1u21mw4p191idzlli08fb4xyzhmezn3djib9nxb4t1eawbik9bkc2iiu0n\",\n    \"uploadTime\" : \"2022-06-05T10:14:13.229969Z\",\n    \"places\" : [ {\n      \"name\" : \"Mallory Aufderhar\",\n      \"placeId\" : \"z96d\",\n      \"languageCode\" : \"8ybsvojm7tn716hmmyodq52347iccdb63dop2woeiqeoc2p173tdvad9ht6v75mw7y3q34rdzi76ues007yzlxleckmkvgmf23j6nsba0cvcskuthzm7oak40ryc4ebgj\"\n    }, {\n      \"name\" : \"Ms. Fermin Heidenreich\",\n      \"placeId\" : \"7p5p\",\n      \"languageCode\" : \"9ukmi9xju5900rmmp2zdowm6laugmvgr0s1akjas6a5eacq4i7abo9w284csk0gu8xficfthhrenbzwpq5kf98l8g46ruedch5xwi7a6ekea48wgigsju7xgw7n3x02c4s8n32je2knwz7y718jaey51d3t3umbjx6wnxleddxiz\"\n    }, {\n      \"name\" : \"Charlene Veum\",\n      \"placeId\" : \"an7w\",\n      \"languageCode\" : \"ow8yz7lgf2ncfrahq82hnlacvshjerc42q3flkecdcognd59u7h1ip0fp7oi2k285majafmve0un0\"\n    } ],\n    \"viewCount\" : \"awlj8sr2klsdbgsewfxtxjkqa33mxlpmdwtqbshdquv6mhq0m2k4\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"us6s\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"m8v7\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"coqg\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"b9v2\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/964261\"\n  }, {\n    \"transferStatus\" : \"EXPIRED\",\n    \"captureTime\" : \"2023-01-19T08:36:13.230838Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-06-24T10:52:13.230877Z\",\n      \"altitude\" : 6.55080547430413E307,\n      \"accuracyMeters\" : 2.901609369826938E37,\n      \"latLngPair\" : {\n        \"latitude\" : 2.0914776621803256E307,\n        \"longitude\" : 7.059671162167301E307\n      },\n      \"heading\" : 4.2113537479551805E307,\n      \"level\" : {\n        \"number\" : 9.153386911878202E307,\n        \"name\" : \"Langosh\"\n      },\n      \"roll\" : 1.7341017375137068E308,\n      \"pitch\" : 6.405777356779084E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/372413\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/739881\"\n    },\n    \"photoId\" : {\n      \"id\" : \"i71c\"\n    },\n    \"shareLink\" : \"hxkb\",\n    \"uploadTime\" : \"2022-04-26T12:04:13.231198Z\",\n    \"places\" : [ {\n      \"name\" : \"Mr. Adam Pfeffer\",\n      \"placeId\" : \"76qr\",\n      \"languageCode\" : \"ogzak4qv88di5410n5uiu0l3qcj3vrqzvcqfxkm1wsr7kvui69h2twah9isiewokeilghci889jkgbafu8c3bt1ek4ivkjldckmnpvcsph8ud3zmfz8mv7wjk622x5brefjudqe62rdn7o1w\"\n    }, {\n      \"name\" : \"Seth Reinger\",\n      \"placeId\" : \"7oif\",\n      \"languageCode\" : \"dnbzsc450xk8j17ew94wgqk2u39gjij7m\"\n    } ],\n    \"viewCount\" : \"gmunq4je8vfychr0bo53houi2g0b6zjwlzew1tjj7ljzk7to4v33wpuotenhyk5rg9fjug42309nq15a59f7bcps48t8kcs5v0v5sqq9hhlj0wvqc1t4dvrw75uu2\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"4b13\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"i46e\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"6k2m\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"5n46\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"enhq\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/789068\"\n  }, {\n    \"transferStatus\" : \"CANCELLED\",\n    \"captureTime\" : \"2022-06-17T12:20:13.232017Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-05-02T10:27:13.232053Z\",\n      \"altitude\" : 8.130067359743127E307,\n      \"accuracyMeters\" : 1.9173090216324248E38,\n      \"latLngPair\" : {\n        \"latitude\" : 1.2244271009336874E308,\n        \"longitude\" : 1.1348933773837617E308\n      },\n      \"heading\" : 4.532064736663066E307,\n      \"level\" : {\n        \"number\" : 1.2962964762028618E308,\n        \"name\" : \"Lueilwitz\"\n      },\n      \"roll\" : 1.2292842929273786E308,\n      \"pitch\" : 1.2581882663537864E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/149473\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/840006\"\n    },\n    \"photoId\" : {\n      \"id\" : \"5u14\"\n    },\n    \"shareLink\" : \"nvuurany6od5\",\n    \"uploadTime\" : \"2022-10-26T11:32:13.232378Z\",\n    \"places\" : [ {\n      \"name\" : \"Donte Deckow\",\n      \"placeId\" : \"6kxs\",\n      \"languageCode\" : \"0levtexsvq6ptjt3yto90pyfm3a0le5a52j1k75l8st36j1q4glv2pn6dtk0hctjdgx5uae1xog6u8x2q1s5x110p4ho7gvfjb6prxj0p6r830bb4qcthfh2quktmfxxjam6rnszxa7sbt18jx\"\n    }, {\n      \"name\" : \"Mrs. Terrell Mayer\",\n      \"placeId\" : \"ad3v\",\n      \"languageCode\" : \"z1k50xlmnl07uwfra1ghqqy89ao21zx29vodoq8w8qtoimlyo1yml7hzd7s2p1hlb25rvhd6srw82hw62s4mludl7uoby86g35l3orw15abzum1cxg1bmg06ydpteltatby29k64ch8l2zi04t6szjhtv23os3cse5w2hux03igu3oi5k9wp\"\n    }, {\n      \"name\" : \"Thanh Leffler\",\n      \"placeId\" : \"6t22\",\n      \"languageCode\" : \"yiiwzi78gryt0d9mlbn6rvojpi1jc6bx8yrhb6n8nxvzdsilfg6wujbpn7011c3aep32vrleealya9zlatg1z1ylw5lrwli53yxbqwuo9rpr7kg1iyr\"\n    }, {\n      \"name\" : \"Lucienne Prohaska\",\n      \"placeId\" : \"dv49\",\n      \"languageCode\" : \"mdh9r2wgjfq42mm5mes5hcchl7jz60vl8iil5zg07h6kzwvippie0rrc69br1h8vtx23uony3wxhd2xiu3pvxfv9abupntjqvo094llxkar1g1u5gcgyslg35lyt1bwhfku9ixuelpa69goas85qt0fcavcz5ofeksmxzgbsvmx3qvu2mfav9dz519obsvhu3a9wpj3c\"\n    }, {\n      \"name\" : \"Mauricio Jones\",\n      \"placeId\" : \"euj1\",\n      \"languageCode\" : \"4otswf48bv5pldk8lx9t0uinzov9llmw27rxe4nvh4cmjkcnxw8g0ub0ybqwr7f1w1hu0tjnxhj8qrffrh0tl4wctb2mv0oi05545p5rnmezpmsuxm6k4jkubd93anyjdk0h6wosveent29l6\"\n    }, {\n      \"name\" : \"Mechelle Boyer\",\n      \"placeId\" : \"883t\",\n      \"languageCode\" : \"l1deujeurc1oy0s5k1nll5xvvuj4abop1tlaiq0pstd1i495lgrofjdemsch784nw8q9m\"\n    }, {\n      \"name\" : \"Glen Considine\",\n      \"placeId\" : \"838r\",\n      \"languageCode\" : \"65rak8ijlh5vetf1wdzwu6zts2xxaiv1bnemoyvd5ghlqz44shjny76ib9ex2d1dqto6xvktrg9rco56eespa0hryyarshmnmqc61t7scodilcq4wgpcateg\"\n    } ],\n    \"viewCount\" : \"yc8j9hx51uyui48e5hudkgptjk3m90e2rq0dgo5mu0sxh0337mv8sqpwvy0exfrnaae\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"l19u\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/564857\"\n  }, {\n    \"transferStatus\" : \"NEVER_TRANSFERRED\",\n    \"captureTime\" : \"2022-09-19T11:28:13.23351Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-07-14T09:34:13.233549Z\",\n      \"altitude\" : 3.982808582274195E307,\n      \"accuracyMeters\" : 3.2456134641881444E38,\n      \"latLngPair\" : {\n        \"latitude\" : 1.3866630300713725E307,\n        \"longitude\" : 1.4875765279286011E308\n      },\n      \"heading\" : 4.173868331548136E307,\n      \"level\" : {\n        \"number\" : 3.046456483463026E307,\n        \"name\" : \"Hand\"\n      },\n      \"roll\" : 7.036912816813023E307,\n      \"pitch\" : 1.5572967890523824E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/703399\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/132830\"\n    },\n    \"photoId\" : {\n      \"id\" : \"y110\"\n    },\n    \"shareLink\" : \"rwgcolnadps99yf7404e0k4cbmat14cwbm51qkvuuzm1y8vhxmj3kjswuaq2tg0meqiupjnj4vox2kwmokjlmgalhopz1g3trozr9j0co7wm89yfqqyasvuuraaq6c6lbj8dqbpbmd0dgn6kr4yt5xxwl1qp22845p\",\n    \"uploadTime\" : \"2022-08-13T11:40:13.233865Z\",\n    \"places\" : [ {\n      \"name\" : \"Mrs. Eufemia Rohan\",\n      \"placeId\" : \"97v9\",\n      \"languageCode\" : \"v3ooe5otr22gguz83l\"\n    }, {\n      \"name\" : \"Danial Prosacco\",\n      \"placeId\" : \"1m2b\",\n      \"languageCode\" : \"9m53x2x1gjtg1nkwzuz02sot03hkne6rpglmbc1tsanfdm5dfckjdgg08sbtqxsjlnguxuidhybrod9vx5dp09oacdzq5afpbv8zh3zdh0rq5icqrlybmzth8yfg4f8ed8bu\"\n    }, {\n      \"name\" : \"Han Schumm\",\n      \"placeId\" : \"8g9q\",\n      \"languageCode\" : \"u2dwmzhdjyv0fxst1fj0oarwpq1tq4d1x4ynn36u2419jllcaz6qg8gsr22b9tf2e40cz0sqcicoe44nfw47la8mxj2992h9wn7nxzsics66ota78qgrt64ps6q7u8jzf0ai1311id9extdnwxoeyz3iv3t5wm53lpeyfsbpofyzpnvln4qlmqdw33xvn\"\n    }, {\n      \"name\" : \"Norman Lind\",\n      \"placeId\" : \"11f7\",\n      \"languageCode\" : \"rzozk6zwgy9t0pu0r5hf5rmpj2yq6iye651jmkyqqdf9talc4y4ubky0j8rkqmo0oijpqmnblzlrl6nw4wwh6yx8q3bnvcnzutsexaved5hlsrggleb4ptub0gj0dwcz8rd8d1x8qidtqgxu05cy\"\n    }, {\n      \"name\" : \"Velia Wisozk\",\n      \"placeId\" : \"n9y2\",\n      \"languageCode\" : \"nqlzu18ag10uvyh7dt9n2nqj6ytevzyy5y4a1720wxofo4bt9znwxlv3ufs0k7vo8fpb51a23vmfn34w79kx34ns\"\n    }, {\n      \"name\" : \"Ms. Brittany Batz\",\n      \"placeId\" : \"572s\",\n      \"languageCode\" : \"531yizs1wc49zb8igun3dnb9qh98sn6dwjfjria8he091fmyxsob7id8oaycw3uuo77trqklge7n57q1pgt4mgmj\"\n    } ],\n    \"viewCount\" : \"6mxrkg23k1ufb22mwlzwa1snzahpql241nnlcj\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"iq9g\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/665122\"\n  }, {\n    \"transferStatus\" : \"CANCELLED\",\n    \"captureTime\" : \"2022-06-26T11:58:13.234847Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-07-19T11:13:13.234887Z\",\n      \"altitude\" : 1.1884006330344534E308,\n      \"accuracyMeters\" : 1.3610542213836328E38,\n      \"latLngPair\" : {\n        \"latitude\" : 4.422197098874677E307,\n        \"longitude\" : 1.525190448709765E308\n      },\n      \"heading\" : 1.5027160371103206E308,\n      \"level\" : {\n        \"number\" : 8.397215993771561E307,\n        \"name\" : \"Kerluke\"\n      },\n      \"roll\" : 6.836186081083758E307,\n      \"pitch\" : 1.6469878296196806E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/262452\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/276551\"\n    },\n    \"photoId\" : {\n      \"id\" : \"wy47\"\n    },\n    \"shareLink\" : \"m5njpb8p33fp0kyy0qae48ltnr2mgcdq3nrr8j7a7mvq71q8ywwcv4tif7mqge554yoguglk0ytlq8jtyp8oqoqheeys7o389691jf26ntg1g20bhdfn5ycb0ppuaqkzajmeb7epme9qz25vu4c4ixzce583s5qxb5cwtxllb9309kp1ha776z6sbou8bhmvlg\",\n    \"uploadTime\" : \"2022-04-23T09:39:13.23521Z\",\n    \"places\" : [ {\n      \"name\" : \"Rosario Crist\",\n      \"placeId\" : \"9wzi\",\n      \"languageCode\" : \"dp81z9cca81rypvrjvssd8alhuhgradm4b1xbgf4ftocs4sfn0zbxnvx8yae9dwzm1z4wh38lc8qwovit3p\"\n    }, {\n      \"name\" : \"Mathew Schoen\",\n      \"placeId\" : \"vr7k\",\n      \"languageCode\" : \"c10etabccmdrw5tw1jbbgh1txdq3i36gmmtz6d6ybk4vnvgpapqrn16xl600kubxbijmvwv1oet20bp82whrclslsx2ylcej2df4tplaq3u5nhm1ogbkos9kua97qnqtk655k7utxp0zg92lk4tymaeyfxs5bqjn\"\n    }, {\n      \"name\" : \"Marybeth Hauck III\",\n      \"placeId\" : \"o967\",\n      \"languageCode\" : \"sjyin0a2en3c8cy9spac73qld7qmfgy10hfs4cfzn8vrnkwhywodmpjc6nyxea77s3vxbg6513lzk9ui9qkbhlsdp5xym86wb17ejhmynyzzwj2\"\n    }, {\n      \"name\" : \"Jerri Rodriguez\",\n      \"placeId\" : \"x4g8\",\n      \"languageCode\" : \"1oeflflvnvhbz0hr1e46fb3d9ibklncmxx0wzarfwuff5t77m24uanbvgzsa4wdsh6ohzk6pmq7cxbr7dtg1fbj2xr5wivqb4nl3y0fe4j6veomnu2j6yk6q5bmdrf354su1qj5undur44zr\"\n    }, {\n      \"name\" : \"Shea Wehner\",\n      \"placeId\" : \"r737\",\n      \"languageCode\" : \"tifsu3qjgg07ymy179ka2fpdnpkqrfzak10np6po8kwl0mcnjckrq12ydgxl7ks2p0qnnoqin2n2vy2er9940oc60pv1p2ih1n26sopgac93pwm3srpt62a8s9mahma5viva4a3rhziiom2958t711c1yoq578zjwtbp83v73fuhnoptjudo5tb9x\"\n    }, {\n      \"name\" : \"Mr. Nery Crooks\",\n      \"placeId\" : \"420n\",\n      \"languageCode\" : \"g6by4k3dk8kfu87u2ekkmssgufgpkd7oyg7wwz8v185r6wiemg50q99ocmum4xrong4voe1plsflnpk46yvnn3kq1zmzuci87xq70qvkuib70gzmg88aq0f27rzacjqjn0rqjx7zcmt7q3wvbp467b0h89vpo8i9qpyrfljyll4vdg0cjmixagp6\"\n    }, {\n      \"name\" : \"Garland Gerlach IV\",\n      \"placeId\" : \"39r8\",\n      \"languageCode\" : \"990wm1pim01tkoiunk7ndqx7f7os8sbul69jhs2i1ocexczpjg59iygik8ydkmqaysc1t5zg83g1mlsavvfn\"\n    } ],\n    \"viewCount\" : \"amtt3um\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"w3or\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/004377\"\n  }, {\n    \"transferStatus\" : \"EXPIRED\",\n    \"captureTime\" : \"2022-07-23T09:12:13.236317Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-03-21T08:50:13.236356Z\",\n      \"altitude\" : 7.267388309842467E306,\n      \"accuracyMeters\" : 1.7887914844854892E37,\n      \"latLngPair\" : {\n        \"latitude\" : 1.2497554905475541E308,\n        \"longitude\" : 1.1354814764362429E308\n      },\n      \"heading\" : 8.227422712258878E307,\n      \"level\" : {\n        \"number\" : 7.710573498571194E307,\n        \"name\" : \"Carter\"\n      },\n      \"roll\" : 8.366475898242293E307,\n      \"pitch\" : 5.963412310046546E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/001098\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/144718\"\n    },\n    \"photoId\" : {\n      \"id\" : \"4dc4\"\n    },\n    \"shareLink\" : \"q9zrw2kktmrdqwgmat2n1x06gnxbgyc0tgmkd4vvp0wj0qdwsz2fu2c1vkx4gkg8b2xnsp5f712ks9dunuoqkl0t0yhyah240f7gxetms2h4s05z89gt2gx47e4xpjtb26yfth7zzz5vo\",\n    \"uploadTime\" : \"2022-09-09T12:06:13.236678Z\",\n    \"places\" : [ {\n      \"name\" : \"Gaylene Kautzer PhD\",\n      \"placeId\" : \"s3bs\",\n      \"languageCode\" : \"kfkxikom34yq4hvzyyvuha9ulse3ywwrnkkmjo5oq1n6jdd4vvba5ltys4h2jts972g94v5tdqemifrsu6y2yuzieidkdwmun7ao\"\n    }, {\n      \"name\" : \"Allen Frami\",\n      \"placeId\" : \"sfoh\",\n      \"languageCode\" : \"pescg49qxjj8mxyx0lqb604rhf2mcfb6urei2oyygyuesyylns666c540m4o13pf1nd2z5kmm6gke6zo0c6sw5r4k4i7l5k87s6o7l6a0jodsaicke2f7lxf1hprj410wsplpz\"\n    }, {\n      \"name\" : \"Leeanna Terry\",\n      \"placeId\" : \"27dr\",\n      \"languageCode\" : \"9e5ts97on0i0yoe3a7d1mdcn4v86a8vymzm7nbtgh2z9hlgjihwv0mt585qpmk0rvjl30733ser6suwncyg6un686okpdegzw8q2ouazc562zp\"\n    }, {\n      \"name\" : \"Newton Baumbach\",\n      \"placeId\" : \"xkep\",\n      \"languageCode\" : \"qvkr6488iro0\"\n    }, {\n      \"name\" : \"Miss Emmitt Schowalter\",\n      \"placeId\" : \"82vd\",\n      \"languageCode\" : \"2fby54eegw39l46dnak4zbu2o4h253lnhwsbagm179uswcg89kz\"\n    }, {\n      \"name\" : \"Scott Klein III\",\n      \"placeId\" : \"y32f\",\n      \"languageCode\" : \"ucp1vlirkzydoda3tcq3sh15i2biala9e5lnu6y5s08kyrh9rj1jkzqqsf1u6bftv6py5du3ha6a2l0cbren74hydjo7uy6t7f0nkixpv0ob3qoltc8\"\n    }, {\n      \"name\" : \"Melita Hayes\",\n      \"placeId\" : \"95fl\",\n      \"languageCode\" : \"ga0xq6vz0ews281ggbmvb2tbg5angwe74mid82p6f8og6jux\"\n    }, {\n      \"name\" : \"Miss Chadwick Russel\",\n      \"placeId\" : \"3y6g\",\n      \"languageCode\" : \"9ivjjam7jlaqpgu5jn3qc7xqyo5abx128o0irvkd7hi4ez5bfqojihy8pcw7s\"\n    } ],\n    \"viewCount\" : \"7p75vpvp689hft493ijcxvu02pgq3np018gho9e7se7s0453gdjfeoq210csksi7ytwnq4t7hshz47wphtrai6qyu2503z8h5\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"7m07\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"2aae\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"98j5\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"69h3\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"v7nh\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"7o27\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/023419\"\n  }, {\n    \"transferStatus\" : \"NEVER_TRANSFERRED\",\n    \"captureTime\" : \"2022-04-29T10:40:13.238296Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-09-16T09:29:13.238336Z\",\n      \"altitude\" : 2.475701693226953E307,\n      \"accuracyMeters\" : 1.5798453754082995E38,\n      \"latLngPair\" : {\n        \"latitude\" : 6.317926674423578E307,\n        \"longitude\" : 1.236232300932637E308\n      },\n      \"heading\" : 1.7804566256885384E308,\n      \"level\" : {\n        \"number\" : 1.0394957801677195E308,\n        \"name\" : \"Thiel\"\n      },\n      \"roll\" : 7.834828344680834E307,\n      \"pitch\" : 1.2542851697134792E306\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/268906\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/331339\"\n    },\n    \"photoId\" : {\n      \"id\" : \"da9v\"\n    },\n    \"shareLink\" : \"lks2ws619efy26r8i4f802kj91pvzcrvh1og52i7u4mtz2a9rcfoz3f16q2da80n5lpwp4hbwxo3bj9cbh2h4jo5fes920jh2lj7gtc40kvq4mheyxzjrg6a3kea1mtx3cx8yz23e\",\n    \"uploadTime\" : \"2022-05-13T11:14:13.238666Z\",\n    \"places\" : [ {\n      \"name\" : \"Alva Heller\",\n      \"placeId\" : \"jse1\",\n      \"languageCode\" : \"crjw2bhc4poyogkazfpc63l5exfbfcw5mr5k75b5e6ff33uxrt6ze7ctniwhi3rd29s22w79nisvtcj884509f1z8qantrudw2ckzxolvaro2nq978ewlyyfannlhzhrzu5zisy986vwihb9atngdlughbkoe0djn5mgsvpdxu5qyiazhr\"\n    }, {\n      \"name\" : \"Zack Williamson\",\n      \"placeId\" : \"ikv7\",\n      \"languageCode\" : \"84np54urfo9kb4rj3uzfg0mps2t575lcwpr7saanq9omdhi3fsz3zewiz6tig7s62d4rrc90tsnvhwtdswl7wq5k6\"\n    }, {\n      \"name\" : \"Freeda Russel\",\n      \"placeId\" : \"z5y5\",\n      \"languageCode\" : \"kvlq7bebnumfsohoahzizau8s7cjrauyn2ztnxkv8kgrmcvw7anoxw876gflyuylwqib8kdh5owuzy9bxm7e6mr2ac59dn4arr3qjljmq5lbu7tmot90bbfh1wo21x29ic8crzgtaliwsq1p8mv\"\n    }, {\n      \"name\" : \"Janessa Lakin DVM\",\n      \"placeId\" : \"3d97\",\n      \"languageCode\" : \"q0d2wq48ymf4l2a93m1mk9ktkgkxs79alxj5cj0g4k07r8gazjplaqojg1j213rmkn9gac8rgxtc77ffeceqf8yltn4juz0k7wv8k9pd2twd\"\n    } ],\n    \"viewCount\" : \"utede9ilu2m4pnxp4vsa7byaarsu3p9iafettych5cvp12wxys300jvalsa2g3lnuutm199y9k4wbwu\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"t882\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"9s8d\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"2025\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"88g0\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"g682\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"nynz\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/390843\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "025add5e-975e-4d2b-9e28-f3882d105732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.239982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.list",
          "schema" : {
            "description" : "Response to list all photos that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photos" : {
                "description" : "List of photos. The pageSize field in the request determines the number of items returned.",
                "items" : {
                  "$ref" : "#/components/schemas/Photo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "5f658ec2-e8ce-4ef6-b056-243aecc356d9",
    "name" : "Lists all the PhotoSequences that belong to the user, in descending CreatePhotoS...",
    "request" : {
      "urlPath" : "/v1/photoSequences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"photoSequences\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Loree Ebert\",\n    \"error\" : {\n      \"code\" : 482089618,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Quia nemo iure enim id. Molestiae sed magni beatae. Amet omnis voluptas fuga blanditiis ipsa itaque.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mirtha Wiza\",\n    \"error\" : {\n      \"code\" : 2147290703,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Architecto possimus fugit fugiat quae voluptatem doloribus et. Alias odio quos neque minus voluptatibus maiores sequi. Libero vitae reiciendis voluptate nam ut. Odit voluptas dolores.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Estell Bradtke\",\n    \"error\" : {\n      \"code\" : 113248437,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Nisi voluptates nostrum. Reprehenderit odio et repellat eaque sint. Hic architecto facilis autem. Non similique qui voluptatem est odio. Qui itaque voluptas quis id magnam enim consequatur.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Contessa Miller\",\n    \"error\" : {\n      \"code\" : 1992197612,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Provident nisi architecto repudiandae qui dolores unde. Non officiis repellat deleniti sit. Aut expedita ut omnis aut omnis similique. Quod harum occaecati accusamus.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Osvaldo Altenwerth\",\n    \"error\" : {\n      \"code\" : 340133077,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Provident enim iste delectus iusto. Sit et temporibus et. Omnis culpa itaque ad qui laboriosam in adipisci. Maiores in in illo enim. Vitae autem soluta aut quaerat.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Levi Bartoletti\",\n    \"error\" : {\n      \"code\" : 1150440653,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sunt accusantium voluptate consequatur tempore eveniet. Qui labore atque voluptatem at. Porro ut mollitia consequuntur tenetur officiis. Error aut libero.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Florance Champlin\",\n    \"error\" : {\n      \"code\" : 996779757,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Rerum voluptatum libero nemo voluptas. Quia et excepturi aut est molestias. Consequatur nihil vel id numquam. Error ullam saepe consequuntur. Voluptatem et non est.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Colin Dibbert\",\n    \"error\" : {\n      \"code\" : 1389401597,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptate vero dolor. Optio quia consequatur. Cumque beatae corporis et magnam asperiores impedit. Facere ab fugit et.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"8cpn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f658ec2-e8ce-4ef6-b056-243aecc356d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.229491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequences.list",
          "schema" : {
            "description" : "Response to list all photo sequences that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photoSequences" : {
                "description" : "List of photo sequences via Operation interface. The maximum number of items returned is based on the pageSize field in the request. Each item in the list can have three possible states, * `Operation.done` = false, if the processing of PhotoSequence is not finished yet. * `Operation.done` = true and `Operation.error` is populated, if there was an error in processing. * `Operation.done` = true and `Operation.response` contains a PhotoSequence message, In each sequence, only Id is populated.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "4b8fc3f6-cfbf-4cee-94d8-bdf935016a66",
    "name" : "Creates an upload session to start uploading photo sequence data. The upload URL...",
    "request" : {
      "urlPath" : "/v1/photoSequence:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/943138\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b8fc3f6-cfbf-4cee-94d8-bdf935016a66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.228567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "af81c938-b90e-40b7-a4f2-42ef57d768da",
    "name" : "Gets the metadata of the specified PhotoSequence via the Operation interface. Th...",
    "request" : {
      "urlPath" : "/v1/photoSequence/0w1y",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. David Schuppe\",\n  \"error\" : {\n    \"code\" : 1228831513,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et atque sit libero ut sunt voluptas aliquam. Ratione in animi est reiciendis reprehenderit atque ut. Culpa labore quia.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af81c938-b90e-40b7-a4f2-42ef57d768da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.22846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "cacfbf5e-9ca0-4904-9f5e-7713391427ba",
    "name" : "Deletes a PhotoSequence and its metadata. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photoSequence/1w2t",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cacfbf5e-9ca0-4904-9f5e-7713391427ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.228217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "5420b42b-c86e-47e8-b654-bbbf25d69e6f",
    "name" : "After the client finishes uploading the PhotoSequence with the returned UploadRe...",
    "request" : {
      "urlPath" : "/v1/photoSequence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ty Kris\",\n  \"error\" : {\n    \"code\" : 287844553,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Recusandae natus maxime nihil totam. Nisi nulla officiis soluta aut quis. Consequatur labore culpa iusto inventore saepe rerum voluptates.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5420b42b-c86e-47e8-b654-bbbf25d69e6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.228108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "4c8ea49d-78a7-4fc3-b611-880e96ccac8e",
    "name" : "Creates an upload session to start uploading photo bytes. The method uses the up...",
    "request" : {
      "urlPath" : "/v1/photo:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/717490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c8ea49d-78a7-4fc3-b611-880e96ccac8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.227836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "3f47b78a-5180-4bbf-803b-60e5729499ce",
    "name" : "Gets the metadata of the specified Photo. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photo/91ia",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"COMPLETED\",\n  \"captureTime\" : \"2022-07-11T09:38:13.226269Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2023-01-01T08:41:13.226307Z\",\n    \"altitude\" : 1.7592098051905698E308,\n    \"accuracyMeters\" : 4.337246658871842E37,\n    \"latLngPair\" : {\n      \"latitude\" : 1.2646803253569579E308,\n      \"longitude\" : 1.3824110321241057E308\n    },\n    \"heading\" : 2.7492115874699503E307,\n    \"level\" : {\n      \"number\" : 1.733656680320919E308,\n      \"name\" : \"Trantow\"\n    },\n    \"roll\" : 1.0652381733514527E308,\n    \"pitch\" : 1.685644495266325E308\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/615157\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/858061\"\n  },\n  \"photoId\" : {\n    \"id\" : \"4g9f\"\n  },\n  \"shareLink\" : \"vl1b2lzz2ga9sdorbbjb7cnslu5k6cz8svlw10p1nqvx58b7phf0w3iayfbvigkeqeaq\",\n  \"uploadTime\" : \"2022-08-17T08:41:13.22663Z\",\n  \"places\" : [ {\n    \"name\" : \"Marilyn Tremblay\",\n    \"placeId\" : \"274r\",\n    \"languageCode\" : \"ygpg1dsklvn4xep8d09bku2yf56dp7d20lfqe2dg2fzppnuum35l2unbwbn7h0xkk3ntqk0i05acqlau1sqngyvv5x5djcdgzxem8efvov5umtgma800s4f\"\n  }, {\n    \"name\" : \"Cecil Stroman\",\n    \"placeId\" : \"27c8\",\n    \"languageCode\" : \"45t2882w8quwas3jtypbcgg6xmpkfefhla934uu2hbo1xqh1vg06s2xmdulbs05lgnw9xw01hyejq1r6oxtgyeq69sfmelwi5cs8a3968peoh1pw6jgp3cbxvuxhix1g45ob45kghq37hmm6jjp0b06ou2ukutsqd5k4yde0u2p36x3u\"\n  }, {\n    \"name\" : \"Carey Armstrong\",\n    \"placeId\" : \"9bk0\",\n    \"languageCode\" : \"b1nzf7adbcrneo469ap6vtlz3m6xu7lhi6j9bpd1bevxdplj45q1n0b4ma9sudz7i4u6eau82qyap0d0vfl18jl16racqjys4329u4e5glrz568ddl25a17sqsaihmmrrkt3lb36bh0jbrea2uwd3fx\"\n  }, {\n    \"name\" : \"Felton Dooley\",\n    \"placeId\" : \"qzk4\",\n    \"languageCode\" : \"q38a13srrg5veo74eh24ex6aifobzjtctodi5845uchmmnkkbqadpm87g95t2ucodhyxn8ddganslpz5olx3b316qbwtdo0tfjjmycft3diarj3p321t19l47cfetondhxcyz6i205mc75mrha88iobydtpm6lyhss6hi719bfvuhvqfj01rbwh3nlrmng8y5z0qaf6\"\n  } ],\n  \"viewCount\" : \"efv20zysb05wkf7xg486w51pidrsn1rckyps1uyuibtfteg2d9hazss7mb0jt5i1s2xfft9otlfekvmurplrhys9ol0ybowb4aylj37knsjom2t22fk37cegge5nmcgavnctoh66ydyd37cql0y7s8d\",\n  \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"32gl\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"4050\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"6bkz\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/360027\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f47b78a-5180-4bbf-803b-60e5729499ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.227692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.get",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "6c5ec339-59bb-4a88-ad95-b4410e6c997d",
    "name" : "Deletes a Photo and its metadata. This method returns the following error codes:...",
    "request" : {
      "urlPath" : "/v1/photo/jmfw",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c5ec339-59bb-4a88-ad95-b4410e6c997d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.226218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d3f9ee4c-b640-4152-9c59-512805393824",
    "name" : "Updates the metadata of a Photo, such as pose, place association, connections, e...",
    "request" : {
      "urlPath" : "/v1/photo/fy96",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n  \"captureTime\" : \"2022-12-29T12:19:13.224045Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-10-26T08:21:13.224082Z\",\n    \"altitude\" : 1.2952264068532715E308,\n    \"accuracyMeters\" : 2.170645710051993E38,\n    \"latLngPair\" : {\n      \"latitude\" : 1.2015534588765067E308,\n      \"longitude\" : 1.6672338451406633E308\n    },\n    \"heading\" : 9.269868288766522E307,\n    \"level\" : {\n      \"number\" : 1.1396665303798208E308,\n      \"name\" : \"Cremin\"\n    },\n    \"roll\" : 1.6513331114003736E308,\n    \"pitch\" : 1.5811726124455285E308\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/656204\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/162657\"\n  },\n  \"photoId\" : {\n    \"id\" : \"i6s8\"\n  },\n  \"shareLink\" : \"cbu7afi9fv4c0j3jjpimmnlkufe714vxdd6rzs2dntmdmwp162oprcjif36a7cg426vjkvcj37q8ydx8mdgn5yhd7x2p9upeq8pg953gk30obepu8u8rydmpqrjb2mfhjew969z42cvt96ej7tzilobq4cbpj0efrvses0d31q9gg2a1p71zngbk01vt2rtu\",\n  \"uploadTime\" : \"2022-03-22T11:11:13.224407Z\",\n  \"places\" : [ {\n    \"name\" : \"Gearldine Kassulke\",\n    \"placeId\" : \"tru8\",\n    \"languageCode\" : \"55mykbda616yx46eoz5k6ba9zf7qtaeztxfgg6y5dku4t6byv69rmutv8lhxd48kwxsluql7pkf6l2r7jkj7m44z0fyzhiz3rxc91ftm680p3z6uxfixaojxywc8lgbx0pr5i0jw26p\"\n  }, {\n    \"name\" : \"Julio Ruecker\",\n    \"placeId\" : \"x29x\",\n    \"languageCode\" : \"7ij2ugjdp8o0gg2sdnm627tnrkc6aapx8ot127w8s55bjvxn1zr1w8qffkz5tc5bsi7s5794\"\n  }, {\n    \"name\" : \"Fausto King\",\n    \"placeId\" : \"9eji\",\n    \"languageCode\" : \"s8o3r5f9dwuz2z9w8tympmkbwsb5w5fe6rw2r8jlx2uk1658r6h8ehflikavqujq04eutbp5rv5c12d2pzn4qx6d9w2qyqct7ud40mfd3zfu0n8oivlw1n2iffjpt87bzxz0g0qxlgo39c3ji60ob2jplztk11784xn8ui01\"\n  }, {\n    \"name\" : \"Young Beier\",\n    \"placeId\" : \"552v\",\n    \"languageCode\" : \"8qoiuznm85gnjth6zj7w59l3tww531btdp59szl4wzsc7l8k2zq57wvnvav7kv5rz9763zq62ss4pqeb4r9m8q981to21gske9oo0zek92zvq08k5qgyhlbk3c9t20m0dgiwp2ga7egcl3alo8ne5maxx3\"\n  }, {\n    \"name\" : \"Mr. Moises Bradtke\",\n    \"placeId\" : \"vw50\",\n    \"languageCode\" : \"9twdh2xvp13hottsccqqyjg81693saonyb7ag3q6qcza\"\n  }, {\n    \"name\" : \"Marilou Bode\",\n    \"placeId\" : \"8i2i\",\n    \"languageCode\" : \"bah2fmzp0eeza9oupjqt4rzzqwlvcqi9f0t9vakm73hic0pxnn53y31b3l3zgllm4v3ic7rb64wsjqupollp6v0a63cz8wymp8xp97zkjicgcr4yq8mu17xbxlvonk6q25jtmw7l0cfnm7okfgomyeo9as9u\"\n  }, {\n    \"name\" : \"Leigh Kemmer\",\n    \"placeId\" : \"idb4\",\n    \"languageCode\" : \"vktum32de0t0psqpjgbk274ttjdyp5iwa25h9laojvz4p6sq4axvp2bbx81xajvf1d6wg5c5mvfqv5\"\n  } ],\n  \"viewCount\" : \"7c6bbiyky7l\",\n  \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"0l62\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"1io3\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"deh3\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"5282\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"a2z0\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/610348\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3f9ee4c-b640-4152-9c59-512805393824",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.226084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.update",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "105788cc-3657-4702-88e8-7c1982d17fa0",
    "name" : "After the client finishes uploading the photo with the returned UploadRef, Creat...",
    "request" : {
      "urlPath" : "/v1/photo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n  \"captureTime\" : \"2022-11-29T09:03:13.222125Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-06-30T08:48:13.222186Z\",\n    \"altitude\" : 9.707075577933074E307,\n    \"accuracyMeters\" : 3.0934100990588315E38,\n    \"latLngPair\" : {\n      \"latitude\" : 1.3318572123903295E308,\n      \"longitude\" : 8.665086628173689E307\n    },\n    \"heading\" : 1.0192664739651194E308,\n    \"level\" : {\n      \"number\" : 4.510191617969313E307,\n      \"name\" : \"Block\"\n    },\n    \"roll\" : 9.287640142315665E307,\n    \"pitch\" : 1.0851211297598498E308\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/703240\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/326369\"\n  },\n  \"photoId\" : {\n    \"id\" : \"lf2m\"\n  },\n  \"shareLink\" : \"mev20rvliawkivm2ia0fk8g8le04eemshc6tqjitq1bcdiqr0gzwibdvskos9whdrkjlob3pdo5ioeubn7nzp9cod8ahadvlgneddc0rgbb6wl6\",\n  \"uploadTime\" : \"2023-01-13T09:16:13.22259Z\",\n  \"places\" : [ {\n    \"name\" : \"Reid Kozey\",\n    \"placeId\" : \"o7by\",\n    \"languageCode\" : \"nrnzdspfl58j3toxqwm6w6lhhpehx9o0bh7bzhkr2ruitoc7wvfkqm0u7t32dbuegvqod4jsuqruh656eawcmpwsa49it9ccfzq4bsy1pjb3xhwbj3d5si75dvwd0rhski0wehqumtmgnj81cmmdgzdnxynmxd\"\n  }, {\n    \"name\" : \"Elliott Cronin DDS\",\n    \"placeId\" : \"su6g\",\n    \"languageCode\" : \"attbxttnq0bb6migkdrv77epwurmij42fak246hs89txmyy1pmxvhfes\"\n  }, {\n    \"name\" : \"Emerson Jacobi\",\n    \"placeId\" : \"x132\",\n    \"languageCode\" : \"ggxum9xg8rxnxgqfrdr9o9lbrtdypks29n694q6ldph5x12ln77t0zzdxjs6qazj0hzmihje2rgnr2a4ulyiipj19hbomjl6xw1c2funq8wubmr9\"\n  }, {\n    \"name\" : \"Daryl McCullough\",\n    \"placeId\" : \"8f67\",\n    \"languageCode\" : \"15rcnpciqsmcbx\"\n  }, {\n    \"name\" : \"Cathryn Block IV\",\n    \"placeId\" : \"4034\",\n    \"languageCode\" : \"ykalw0psvn2m3jdpt745tqeswj4ap8iu2r6zrz7wv41n\"\n  } ],\n  \"viewCount\" : \"90x58\",\n  \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"p9oq\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"v76l\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"dzbt\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"fwn7\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/327416\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "105788cc-3657-4702-88e8-7c1982d17fa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:13.223958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.create",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}