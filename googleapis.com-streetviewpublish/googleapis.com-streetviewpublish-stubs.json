{
  "mappings" : [ {
    "id" : "d071cc3a-5a79-4883-89db-44f30b867927",
    "name" : "Updates the metadata of Photos, such as pose, place association, connections, et...",
    "request" : {
      "urlPath" : "/v1/photos:batchUpdate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"NEVER_TRANSFERRED\",\n      \"captureTime\" : \"2023-02-04T14:01:11.033938Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-07-07T15:26:11.033984Z\",\n        \"altitude\" : 3.0990792835173666E307,\n        \"accuracyMeters\" : 1.6511383370993402E38,\n        \"latLngPair\" : {\n          \"latitude\" : 6.338952877490488E307,\n          \"longitude\" : 8.391839844232889E307\n        },\n        \"heading\" : 1.2880300178610603E308,\n        \"level\" : {\n          \"number\" : 2.0846513939263498E307,\n          \"name\" : \"Carter\"\n        },\n        \"roll\" : 1.1476852612592276E308,\n        \"pitch\" : 1.2232368244650884E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/554261\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/326137\"\n      },\n      \"photoId\" : {\n        \"id\" : \"y727\"\n      },\n      \"shareLink\" : \"aynutyowbv98szdfhs4nveym32tx345dqhg2ka76q0yci14e490yt28jvy3pyaqmh1u9m7m3l85z7dgcchq4il4ddisxl9tqf9ml5t964py2fjxhtfwbz4u7auuqxk4jkizn19jwyopb0suvzcpi0q9akx452bh9oo1rq6x59h7ns6wbe01k33f14\",\n      \"uploadTime\" : \"2022-09-23T17:15:11.03435Z\",\n      \"places\" : [ {\n        \"name\" : \"Barbar Lebsack\",\n        \"placeId\" : \"5n1z\",\n        \"languageCode\" : \"ywribtx7vcisw309pn75yte5jwr5n95sn1of0wki2m6un0zb9tvljd363kkjw4lkfd3fa68t0xokhpx4p4vtznj78a61\"\n      }, {\n        \"name\" : \"Johnson Walter MD\",\n        \"placeId\" : \"y5rp\",\n        \"languageCode\" : \"xv1fj5u23b24hupt06dx1cqsiqt13n9kqbuz33tszleefjpthwfjqlc1vz6o5mselqet2cb2ihc2wf87vdki8eim9qnvyp9gj1rxwy2hh12q57v6p8ak3gsw109oderunk2jdcg9byalyyhbo0r7vmzmnpca6oyj5j\"\n      }, {\n        \"name\" : \"Marivel Walsh\",\n        \"placeId\" : \"mj5d\",\n        \"languageCode\" : \"fabbtwfw2rglt4hmdwbv7vn9serc59dh76sgoa1j05dncymnn1na386bnp1\"\n      }, {\n        \"name\" : \"Breanna Baumbach\",\n        \"placeId\" : \"9kvu\",\n        \"languageCode\" : \"fdejd6y6pjkm1ysipjg94cnqo38ekqfo4ifl268woig7bulc3ox4gqnl27ut4iwqggtdjvakz39bjtb52gdugvgcuaswtp4arncw6h3f1h5n6ep5dithzbj0o16c2te44atsbcodgiydeag56sr0efj58gcu8hf3\"\n      }, {\n        \"name\" : \"Boyd Buckridge\",\n        \"placeId\" : \"1d8v\",\n        \"languageCode\" : \"74myh0cekomwencmg8trfo56z1p0luyc5mde9nh1eb6i1x7l5qdrr8rj2d9ef1oyy\"\n      }, {\n        \"name\" : \"Olen Russel DDS\",\n        \"placeId\" : \"2o02\",\n        \"languageCode\" : \"klkw65k635ftv3b7f8tdsbzjheeaf0levza7buas\"\n      }, {\n        \"name\" : \"Kathrine Mertz\",\n        \"placeId\" : \"2nlv\",\n        \"languageCode\" : \"q81wpo3f4rcas957qhk\"\n      }, {\n        \"name\" : \"Rodolfo Marquardt\",\n        \"placeId\" : \"1aem\",\n        \"languageCode\" : \"lewer8uvsi1o3iqcs6sryf8rtgocrbndc8bqtbsqxxsu0e9rtfrurfd6h00ovz1f94zaal0byq6hk0jq7zqzdltqi4gz07nvw9dxxsdm969dzmvwkqs2bxte1gwlv1bkpkotrm\"\n      } ],\n      \"viewCount\" : \"u8xotwrz3nezhiywrm1mdtsqfq27gg37ovdn9rjw4t2uqs82hhtti4ih03q1m\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/390966\"\n    },\n    \"status\" : {\n      \"code\" : 910593653,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Modi possimus eius sapiente recusandae quas odit. Quia minima repudiandae modi ut incidunt ipsa. Et officiis cumque sit laboriosam odit veritatis.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-09-06T14:54:11.035796Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-01-25T14:43:11.035838Z\",\n        \"altitude\" : 1.7696953534906713E308,\n        \"accuracyMeters\" : 1.8771421608276306E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.3030351302480984E308,\n          \"longitude\" : 1.6608596859050005E308\n        },\n        \"heading\" : 1.1333437106861932E307,\n        \"level\" : {\n          \"number\" : 7.027183563819152E307,\n          \"name\" : \"Kassulke\"\n        },\n        \"roll\" : 2.741163412782169E307,\n        \"pitch\" : 1.9829316014942592E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/083945\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/113684\"\n      },\n      \"photoId\" : {\n        \"id\" : \"z81q\"\n      },\n      \"shareLink\" : \"knvvrd43djbpcxdxl9b7ptj6r360z9he7clu1nm96w5ceioeg37np2x199kkf9\",\n      \"uploadTime\" : \"2022-08-26T13:36:11.036204Z\",\n      \"places\" : [ {\n        \"name\" : \"Yun Hegmann\",\n        \"placeId\" : \"6haz\",\n        \"languageCode\" : \"gz21fzos8sarm9015i8mn4e1skwddcf1vn5z2cw0cvl2h4yfks2mzmfkcz2gsjb0fx09epr2ycd\"\n      }, {\n        \"name\" : \"Mrs. Bertie Howell\",\n        \"placeId\" : \"tp0o\",\n        \"languageCode\" : \"3ilan57kfnt4uqfw\"\n      }, {\n        \"name\" : \"Eustolia Bechtelar\",\n        \"placeId\" : \"otzl\",\n        \"languageCode\" : \"fdqkkldbchue5gimntddq7pl4r0ygrdstqm5x0rv18l1ykh1e9xntp9obx0d7t2vvn683e9tod5sh8ptcgi5bwjarjyi\"\n      }, {\n        \"name\" : \"Nanci Wyman\",\n        \"placeId\" : \"2q95\",\n        \"languageCode\" : \"lt0e5xf4dh48oa1lz9ovh3v5rgsvg3rk7py6qx13390v9sz0kov73mbgw9mucv8swwksm91358x24gj4bjpsvce1cyndebt\"\n      }, {\n        \"name\" : \"Concepcion Goodwin\",\n        \"placeId\" : \"7497\",\n        \"languageCode\" : \"u7uw5zn324salk4jpri5cep1w1ck4cn3ekk8mchxhfzrdqfsoreat6\"\n      } ],\n      \"viewCount\" : \"l3efscc0vsq2gpojh3xvarvznkule4swmfhsz4s2ox6t7t5j8hymj3ek53z3mpvo9kt3btjmtf0it3070iy2o6al5i0aaq1dziyc1ji2lgdjlonqp1x1oponolpyzrigr0cnwzcvmug003uhbbc97vgmssuj1c6oz7f\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/709260\"\n    },\n    \"status\" : {\n      \"code\" : 780671503,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Nobis at totam facilis voluptas natus dolor. Impedit laudantium molestiae sunt asperiores est facilis dolorem. Quas rem dolores odit est aspernatur odit. Nihil recusandae nesciunt dolorem doloremque m\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-08-11T14:28:11.037206Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-03-11T16:43:11.037248Z\",\n        \"altitude\" : 1.2202413455003135E308,\n        \"accuracyMeters\" : 1.8060802757116923E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.6804767832888845E308,\n          \"longitude\" : 1.3545259351820016E308\n        },\n        \"heading\" : 1.2359509412948988E307,\n        \"level\" : {\n          \"number\" : 8.268541480959301E307,\n          \"name\" : \"Rohan\"\n        },\n        \"roll\" : 6.106972516632485E306,\n        \"pitch\" : 1.101976608605772E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/501459\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/732348\"\n      },\n      \"photoId\" : {\n        \"id\" : \"4o8u\"\n      },\n      \"shareLink\" : \"btfghpc9vgxln5ctw51hcj4p3ji3lcvc5kds9hyhkd7kum90e4vzblarpgtuk58jqwr2\",\n      \"uploadTime\" : \"2022-12-09T15:00:11.037619Z\",\n      \"places\" : [ {\n        \"name\" : \"Roberta Baumbach\",\n        \"placeId\" : \"8loo\",\n        \"languageCode\" : \"u9hj0m2wch0lolsuhssrbeuooly8nng7h5xru9oeiombgbf2dzc6i76isu9nk2iqb1rxgy05wo7kcolot8s5v1ubpx577yh8zg2uoqatyd7800ism\"\n      }, {\n        \"name\" : \"Gregoria Hodkiewicz\",\n        \"placeId\" : \"vt3o\",\n        \"languageCode\" : \"34xa9fbsabgyxnz8379djdxzc2cntm8b80xhmb2gsavnu3zqgjdhyh4j6a74ptg73d4k88l23pptzev65xtk8djno62ojtl5z5m3w872a1bk2gve5098jac0bf8zx3ds5tz6e57lmal\"\n      } ],\n      \"viewCount\" : \"97scxts3suq490j15l93k3xvba0trrsrbfqjkj2l5o3o36tgzft0gtj1pgfbasmoi31g8g8xhfdgcz4o56bizdj7equrt30yfw00j7kdqolw3g5n5181156jwzs0drtn0tcrua4f16is9qgkttfcbz8rqbtyi6357az0zn5e36gv9rhv39gkkpta4j1fbv0mq\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/233708\"\n    },\n    \"status\" : {\n      \"code\" : 76934466,\n      \"details\" : [ { } ],\n      \"message\" : \"Voluptatem tempore omnis placeat dolores sint corrupti. Numquam qui voluptate in culpa mollitia. Dicta consequuntur ea architecto necessitatibus asperiores vel. Et dolore libero magni quod. Molestias \"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d071cc3a-5a79-4883-89db-44f30b867927",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.038294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchUpdate",
          "schema" : {
            "description" : "Response to batch update of metadata of one or more Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo updated, in the same order as the request.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bc849d3c-def4-424e-b671-70fb48edd0a3",
    "name" : "Gets the metadata of the specified Photo batch. Note that if BatchGetPhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-09-03T14:29:11.022962Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-22T13:44:11.023003Z\",\n        \"altitude\" : 1.40444930203726E308,\n        \"accuracyMeters\" : 3.34838431066111E38,\n        \"latLngPair\" : {\n          \"latitude\" : 8.513246587369873E307,\n          \"longitude\" : 1.627638708700174E308\n        },\n        \"heading\" : 1.4999510623458756E308,\n        \"level\" : {\n          \"number\" : 3.337289821143049E307,\n          \"name\" : \"Terry\"\n        },\n        \"roll\" : 1.406684041402233E308,\n        \"pitch\" : 1.3399054059689924E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/435420\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/144500\"\n      },\n      \"photoId\" : {\n        \"id\" : \"e8st\"\n      },\n      \"shareLink\" : \"i4de9lc7fusgi1hnhfr1hmtdlqfk7z8z3b7ajqwxduioajggffcpznpnjyhyn2ry6a8zt3latghpaxb28aysqtvlrax4s8l3ve49mg5rtrrcuvdkf0ill9fufuodfbq7bf08tv1nn4zu9lr29dj295tjl95jwdm5pgjn7levmzjt53mx006u6fd2\",\n      \"uploadTime\" : \"2022-11-27T16:22:11.023391Z\",\n      \"places\" : [ {\n        \"name\" : \"Pamella Rosenbaum\",\n        \"placeId\" : \"8775\",\n        \"languageCode\" : \"l9zx0uomqd800hkviwf7gvqoygpnhhpupkvtlfr8d1px3kxmtylozk9v31mtl\"\n      }, {\n        \"name\" : \"Arlen Lubowitz\",\n        \"placeId\" : \"xd9n\",\n        \"languageCode\" : \"n1aif3l7l7l6cma1ktqbw33bdhqod51r8cyzxi12l9ygciltchtc8p33z7dwy4h54ps7hwqod97qby1u21sf9rqhfyp59ty1p89ajjbyr8zxjpubigvz6h3bz2uteu\"\n      } ],\n      \"viewCount\" : \"7t0f37qqt6ttrblsr5vlezq5dmd0zh86fqtf1asfdwgxn7ljvdnxi9jgy1h6s5j2b4al8cucpxnunwf7d1sriwbsb1binrhxfjozyk9dep1nen6vxashrz6mm2mlndezwlovfz1p8sm4wq33qhp542gtobihwdobkoyj6o10\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/200047\"\n    },\n    \"status\" : {\n      \"code\" : 2042701355,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatibus sint aspernatur quisquam ut dolorum libero amet. Eveniet quia quasi voluptatem et delectus delectus iste. Dolorum ut qui et ad provident commodi illum.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-06-15T15:00:11.023958Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-23T14:55:11.023998Z\",\n        \"altitude\" : 8.787070649185505E307,\n        \"accuracyMeters\" : 1.0852447538496593E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.0070595553413146E307,\n          \"longitude\" : 1.4546388864148051E308\n        },\n        \"heading\" : 1.225805369998519E308,\n        \"level\" : {\n          \"number\" : 1.3286487418174086E308,\n          \"name\" : \"Mosciski\"\n        },\n        \"roll\" : 8.829442824820748E307,\n        \"pitch\" : 1.7032050272732256E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/832241\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/796746\"\n      },\n      \"photoId\" : {\n        \"id\" : \"rgm3\"\n      },\n      \"shareLink\" : \"yqbbn6xnpfhg0zqjapmastymqqgfu75yav9ow2k1sojca04ngzrfrgnky0pjlkfmd2oi7p0xnhcayi00l6pfjpm2x1uvgs1unq19cdj12qnpdx5vuuux6wvmedwrcryuhcvwf4nn6c9qc9y55svxlhqqhyzeukquaqffnzvpm2pc5xic6vv\",\n      \"uploadTime\" : \"2023-03-03T15:35:11.024349Z\",\n      \"places\" : [ {\n        \"name\" : \"Cinthia McDermott\",\n        \"placeId\" : \"vrzu\",\n        \"languageCode\" : \"vux99s2x84yq0o733umb707a5kdtqo05b4wlrtjmemou7kz9a3pim40ahk0aykosapkx16pqbcslqwkm6lqn35b6ge9apc\"\n      }, {\n        \"name\" : \"Mrs. Adriane Doyle\",\n        \"placeId\" : \"r8uv\",\n        \"languageCode\" : \"v0a9ruufga7jvn6tpa95dtzg1dfhp541mnj2ttjdcgx5urf1cjyw104b6nhb3ert9ulossl7ak90zef1c\"\n      }, {\n        \"name\" : \"Glendora Leffler\",\n        \"placeId\" : \"tj7s\",\n        \"languageCode\" : \"gr3go4fcezc8c4rr0qm53up6ft3wbvn4suik50kolqmfivm1ydanhisb9mvbux0hm1kdprx3zv1nvhqjoy094wli032qmaol6yizsdvisykessfqb2rcz08ttgzd9svvxvjmqucjtu469rtk6dof808i\"\n      } ],\n      \"viewCount\" : \"i2cad4b88nz7urh56yf8chf2hz3nfrdtd9rvtwcp6zpg666qq0l9q7x5hc4fg6vpnewtk1vvdamj2m2v\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/418696\"\n    },\n    \"status\" : {\n      \"code\" : 1033221359,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Omnis voluptatem quod pariatur corrupti ut nobis non. Expedita dolor iusto quis doloribus repellendus enim et. Consequatur provident sapiente suscipit tempora. Veritatis est aliquid nesciunt non.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-11-10T16:09:11.025039Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-23T17:16:11.025078Z\",\n        \"altitude\" : 1.5652684293631128E308,\n        \"accuracyMeters\" : 6.500884403433481E37,\n        \"latLngPair\" : {\n          \"latitude\" : 5.795535206123056E307,\n          \"longitude\" : 2.0697566983695043E307\n        },\n        \"heading\" : 1.2968888005987244E308,\n        \"level\" : {\n          \"number\" : 6.857034940555786E307,\n          \"name\" : \"Pfeffer\"\n        },\n        \"roll\" : 1.593324011584679E308,\n        \"pitch\" : 5.142673538135184E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/761169\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/284681\"\n      },\n      \"photoId\" : {\n        \"id\" : \"l57m\"\n      },\n      \"shareLink\" : \"vwdao5i3ucrokriyvsuicaikrgt1h53f4at6x7ogtsmi14ej5dff44tgi4852m5zr7\",\n      \"uploadTime\" : \"2022-06-16T15:25:11.025428Z\",\n      \"places\" : [ {\n        \"name\" : \"Jeanetta Fritsch\",\n        \"placeId\" : \"hw55\",\n        \"languageCode\" : \"cd7wbmzxl2ti8khcsbxztzvsgyh9yf4hgk9s2wymcl1ra4msbozp6luip9ftct7ixilpt09pgrfidgp6uo1a34eoqm64kgq3zx6gjunemwz4480n80q3nj79709pjlv5ircwxv9t7newwn5vm0yn8jbmozc59o8z2r49768l6yvypam2q46m7fdzdbsiaszjc\"\n      }, {\n        \"name\" : \"Marlys Kutch\",\n        \"placeId\" : \"8o7k\",\n        \"languageCode\" : \"1ov7q276zkquh8exqx5h13wftqiosyhgf5qkb2k5s9w3pn810wr56lwgg1ngv0guu6596j5xers55ea2hh40xr9zesiow3q0dpx2kq8ph4l84i41z63ps4zhoflcmrplxt50pauixanom2q642h8c0e2s28a2zaz4tq2l8n0brnu9384n\"\n      }, {\n        \"name\" : \"Shawana McLaughlin\",\n        \"placeId\" : \"1onk\",\n        \"languageCode\" : \"mlvaafyvknpw3ubmkzaay1f8d3dcrfd9vwgwv6zcc0nsdidk4p5qul7diuvpcaq6gufaiso3ja696t6mc5dbdtpv3jjoay65bsk43zz430zzm0czuyhvs5b9o34ahcvq3a82\"\n      }, {\n        \"name\" : \"Delorse Conroy\",\n        \"placeId\" : \"5gu0\",\n        \"languageCode\" : \"ivkasfca1atzfb2yjjbtp0bpf3r64a2eteksngibk3z0wjp9s5gapckyb2mrmn07rc2dwkmsmy9j0u35hdkgm0155knaeeoc0ei8tu5qg9hmkxtfyq914xavk18yg2xxr4gllmx9594g47yj\"\n      }, {\n        \"name\" : \"Drew Wisoky\",\n        \"placeId\" : \"nfe6\",\n        \"languageCode\" : \"uucfinmmcjec25d8xi2bh3oegu81nghlzm8vlf3fdlusmikxebgqiw7xd83rihf\"\n      } ],\n      \"viewCount\" : \"kvgcj8ru946mntbaytej8q97kvbll3t52x2h35rcxfr2puttoi43if9g37f20v0cwzkhsvf4cd9yi29midsc9w3w0xb250a1w0mt3zkigk77k4fbhppzu071jhmdg9w6jcxk6th2zbvc6qy2971vv4up4cwde7h\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/128502\"\n    },\n    \"status\" : {\n      \"code\" : 1642630426,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Rerum a velit veniam molestiae error repellat dolore. Voluptatem necessitatibus cum autem ut. Amet sint atque saepe tenetur tempora.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-03-17T16:51:11.026405Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-07-05T17:14:11.026446Z\",\n        \"altitude\" : 1.1412152453026875E308,\n        \"accuracyMeters\" : 8.769517949875698E37,\n        \"latLngPair\" : {\n          \"latitude\" : 8.253071334960191E307,\n          \"longitude\" : 1.5863649542125245E308\n        },\n        \"heading\" : 1.3276880778093139E308,\n        \"level\" : {\n          \"number\" : 5.027419622428792E307,\n          \"name\" : \"Schultz\"\n        },\n        \"roll\" : 8.213190823763983E307,\n        \"pitch\" : 8.256789709876567E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/584580\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/942235\"\n      },\n      \"photoId\" : {\n        \"id\" : \"xt24\"\n      },\n      \"shareLink\" : \"iwblt304ql8gwiclmaz8h3cc7f3jim75wi7n946ifcozuluvxfhcji0n7cpggkb8dyte6vminxww1n34gbprdesc5yoiu7z3kruqd8n3jgsnb9nr4rdch1nxpwaz\",\n      \"uploadTime\" : \"2022-11-17T15:55:11.0268Z\",\n      \"places\" : [ {\n        \"name\" : \"Mrs. Isreal Kilback\",\n        \"placeId\" : \"1z82\",\n        \"languageCode\" : \"kow9lw7hdp1y9f8qqps4pntx55zj85mcpypyjtfyqk8k826i9pbcgg8c99k2jq00v9j902x0uqps9hsqjk6zmaf41ib4rm7ydqkhtaa9bmmqt6dbb\"\n      }, {\n        \"name\" : \"Arlene Crooks DVM\",\n        \"placeId\" : \"g182\",\n        \"languageCode\" : \"bjdniu58c4bvkl7j91b1t0g856tufasxo5pca9cxg8vtu8e8gwsvx\"\n      }, {\n        \"name\" : \"Brandee Gleichner\",\n        \"placeId\" : \"t3q7\",\n        \"languageCode\" : \"4fmx5i857jrpu1pwqw6jm6b4ako9g2kiukx2nkeaw16c93bvcan0alqtd006z\"\n      }, {\n        \"name\" : \"Ms. Blake Yost\",\n        \"placeId\" : \"0p1w\",\n        \"languageCode\" : \"wcc\"\n      } ],\n      \"viewCount\" : \"7gbpo22uoy88fy8xf1gc4y37460sjaw0jvpj89xzlb5mfxfby0v99zp9m7tr08vri37thwy51pbfsq0kd1g61q2p4jtmo186myhom8xh7oe9rkuvbv814zxykpd1b5bes9rdzbwnp4rhwwb5e0tk9m0il7fz9t83wg9qgr1yioccuss\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/815868\"\n    },\n    \"status\" : {\n      \"code\" : 1188675878,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Occaecati minima vel deserunt autem quisquam et. Quae culpa odit. Dolorum non maxime eaque culpa qui. Minus dolor ut. Error error temporibus debitis molestiae dicta consequatur debitis.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n      \"captureTime\" : \"2022-10-09T14:40:11.027624Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-05-02T17:03:11.027661Z\",\n        \"altitude\" : 2.6429785316487843E307,\n        \"accuracyMeters\" : 1.8436795421293325E38,\n        \"latLngPair\" : {\n          \"latitude\" : 5.011728505946032E307,\n          \"longitude\" : 1.023702389017547E308\n        },\n        \"heading\" : 1.3511473929629788E308,\n        \"level\" : {\n          \"number\" : 5.317748551660051E307,\n          \"name\" : \"Ziemann\"\n        },\n        \"roll\" : 3.737142005878731E307,\n        \"pitch\" : 1.5710116872110623E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/841919\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/470328\"\n      },\n      \"photoId\" : {\n        \"id\" : \"14o3\"\n      },\n      \"shareLink\" : \"121ecbt4g1ig9t99gr3cfzv3lebb1rfj23cx1ovjh322fr059z2tsqj2ihk1bdt49fz0zmimblw6jepgtr2gjj5pv5rrp\",\n      \"uploadTime\" : \"2022-04-21T16:42:11.028013Z\",\n      \"places\" : [ {\n        \"name\" : \"Freddy Bergnaum\",\n        \"placeId\" : \"i81y\",\n        \"languageCode\" : \"jk6gupaxkmb0vtdznfloe6gj56ok92in4n6qt30insfn26w2gz9w6yap3spu74iip6z0ffnmmrm2fnd1qycmt7ncd2vcvoqeal5rruvhrjvn5vpnuyynh10ktygqvmiknoorer\"\n      }, {\n        \"name\" : \"Malinda Von\",\n        \"placeId\" : \"kk28\",\n        \"languageCode\" : \"gb29v49tlqyo680g5ge1uq19te4x2jckpc4ry708naepppuhbfl3159vnhgtkwyx2eoc3k7e10apnlmjgis1l8c6bwlbjso8wyv8jvfr89dmkgvxnofwa4qfn0b70sty903s58w0pdoap7ejrfm4\"\n      }, {\n        \"name\" : \"Wynona Gislason\",\n        \"placeId\" : \"02i7\",\n        \"languageCode\" : \"48w3icrvm77y8nfpaxg636m6t26fq8qm4ylyy1dxzfrw1lyvug9fx8zw0b1w3vzhwbf7ql781madz3r85npwsm3ivok1v9vo3lj8xj1utjn\"\n      }, {\n        \"name\" : \"Somer Lehner I\",\n        \"placeId\" : \"9e94\",\n        \"languageCode\" : \"0pd6mf4kf24pm7hgxzwu9hb95947l302250cn12dnf20mbnr1gqv34an283db42bm9ddqjc115jnzn2eavokvd0yf2kph0cukzx\"\n      }, {\n        \"name\" : \"Mohamed Kilback\",\n        \"placeId\" : \"x5l5\",\n        \"languageCode\" : \"godty7ge59im4zqy34813y8ctkxvwt7gk3m8572xlywdemn28o3a3hrpij2t2qhq788w2yrfk\"\n      } ],\n      \"viewCount\" : \"q0df6wczh69ctm7a6rn7l4\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/461107\"\n    },\n    \"status\" : {\n      \"code\" : 825016376,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Quasi ea a esse. Autem corrupti voluptatem. Id et ut voluptate quo qui voluptates.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"COMPLETED\",\n      \"captureTime\" : \"2022-11-18T15:52:11.028985Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-07-29T16:19:11.029024Z\",\n        \"altitude\" : 6.640471520887111E307,\n        \"accuracyMeters\" : 2.6453069523958064E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.216030766383894E308,\n          \"longitude\" : 1.0267015918530118E308\n        },\n        \"heading\" : 4.695677698431907E307,\n        \"level\" : {\n          \"number\" : 4.561676852183304E307,\n          \"name\" : \"Kerluke\"\n        },\n        \"roll\" : 1.0852317941366647E308,\n        \"pitch\" : 6.914778191268319E306\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/458752\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/629770\"\n      },\n      \"photoId\" : {\n        \"id\" : \"263c\"\n      },\n      \"shareLink\" : \"cnbflt98u5pf8titrp5tdrlgrtdw5v1yvhh1o2p8b6cs7fh0jjnerm1b9ws6k11d5pj9nvr2tx8wuzqlwmrinfcc68ixlj046fmbdc98m4yryn1m2fiv16a7i98ktb02quuzni0mww54yh6met7jl7fpjfahzjf4uvih1ogw7s6tgch3janki\",\n      \"uploadTime\" : \"2022-08-13T15:12:11.029379Z\",\n      \"places\" : [ {\n        \"name\" : \"Gaylene Emmerich\",\n        \"placeId\" : \"p05g\",\n        \"languageCode\" : \"gxra5rld9jzduqu6fafv4mkzlc0mem46t10ldg0f8iv5lvmur9ietb45a3i5f5bkxwlthdvie39dliows0vl12guyj0ln86ywwjslj3a8qhj1m0uaza4ynaddnamdasvaaxol0wmzlybyaemqtorp23zddf4iyz3\"\n      }, {\n        \"name\" : \"Brooks Dietrich\",\n        \"placeId\" : \"sq1p\",\n        \"languageCode\" : \"2td61ri8hcy15uojl33iavlw5lzi4fz7xpnow4q6snpbt304dlrhs\"\n      }, {\n        \"name\" : \"Quentin Nienow\",\n        \"placeId\" : \"o74n\",\n        \"languageCode\" : \"h9635clb15lez70veedumitcpuk6b6ybvn6gxvmd6622ej0ntd52xjtcfipjeu6rl7v3pf7bq51lzkxo2b0pztth0yipttue5k40piyqvzx2kzsfo9x9623e23ebq4dx1fuzxxphpojzrymbjetkbt0cfk67y\"\n      }, {\n        \"name\" : \"Ivory Mann\",\n        \"placeId\" : \"2q80\",\n        \"languageCode\" : \"yktu482rr1ukwstn41hyxq8xbr3ydgyw2kl974v8tlywkotfe6m9i8mzctyq7rkla0tc8xvdaui1ftjjtac0jwwbny0ltp3dt93eei\"\n      }, {\n        \"name\" : \"Allen O'Keefe\",\n        \"placeId\" : \"77e8\",\n        \"languageCode\" : \"ddt8etwxl7hhfcrsmee9n0n6smj9yyxvle46g52oxm6czuhwonb5p5ljcl06kulyxzxetwbretxo9\"\n      }, {\n        \"name\" : \"Angelica Ritchie\",\n        \"placeId\" : \"1616\",\n        \"languageCode\" : \"e8wvijmouerxmupk1k22dhffgiakhi1vji20hvp2ubj2c7dd0phqkdhyt6o0ovv1xg51oj40ocx7p1yny82rczhjudmix2ci06hsmgehsak7387gq5m513uuqzku9li13qq9bks9a4l354di9390vwxl23mjqnsnvnwy7s51df1n7\"\n      }, {\n        \"name\" : \"Katelyn Lehner\",\n        \"placeId\" : \"w96p\",\n        \"languageCode\" : \"wx98r34hnhzq1cn7x4256tcb3tgdetq4vwuq0u49hnd7vmngjhmng744h5jfq8tqf4l5cptbgmr2cauga8hw78fsvh81lmoa\"\n      }, {\n        \"name\" : \"Paul Wunsch\",\n        \"placeId\" : \"8ccc\",\n        \"languageCode\" : \"z305p4pjki094mvjegg6kjpyq6o6w2trgnz6kj0pxxsszbpsxtyid7qw9p4qxhwil9dp4g3y7xdmjb375zapwi077qfma\"\n      } ],\n      \"viewCount\" : \"2bksvn7esb7bo8f5e50i9ramz9l1chwz2am0tnd7508jgb\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/316410\"\n    },\n    \"status\" : {\n      \"code\" : 670479262,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptas vitae eligendi voluptatem. Quis quia quas. Qui necessitatibus earum neque. Repudiandae repudiandae molestias voluptatem qui nam facere harum. Quo explicabo vero.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"CANCELLED\",\n      \"captureTime\" : \"2022-10-22T14:19:11.030795Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-09-10T16:30:11.030836Z\",\n        \"altitude\" : 1.716731264271643E308,\n        \"accuracyMeters\" : 4.423154609571788E37,\n        \"latLngPair\" : {\n          \"latitude\" : 3.225774380986944E307,\n          \"longitude\" : 1.5677049869772814E308\n        },\n        \"heading\" : 1.5417486657608483E308,\n        \"level\" : {\n          \"number\" : 1.3331932186200618E308,\n          \"name\" : \"Wiza\"\n        },\n        \"roll\" : 1.1695869364469262E308,\n        \"pitch\" : 7.975952411414372E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/442446\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/162478\"\n      },\n      \"photoId\" : {\n        \"id\" : \"ky25\"\n      },\n      \"shareLink\" : \"e1er2stabqfj48aedvk9y30kf0ouvtedr1tvhrsvunqn207cc1vd2vlhvg2mvlsz8nt27p5xjv5sqiqa9v6hfziv5ltwdvhjpropo4epc6exjwruretyovtzuze9hy6260lyfywhionha9pt0fp4ywi5epbnuru4nwoak3vtlk6y169iuxpw84r8pgm7owu\",\n      \"uploadTime\" : \"2022-10-17T14:34:11.031202Z\",\n      \"places\" : [ {\n        \"name\" : \"Caron Wisoky DVM\",\n        \"placeId\" : \"157h\",\n        \"languageCode\" : \"qc3c49nokx84u0w0bugro2gp6myhfex88zwg3kjk0n7lcez\"\n      }, {\n        \"name\" : \"Earle Okuneva\",\n        \"placeId\" : \"0zow\",\n        \"languageCode\" : \"itr5spb1v9h5p2u3szwip3dvj160\"\n      }, {\n        \"name\" : \"Octavio Beier\",\n        \"placeId\" : \"q6xp\",\n        \"languageCode\" : \"n8bibs0nu5e2vzzl0x4y07xyf4laa1jap5jt76695z6to18yljrrqoq106qy42fqrhi4p3zj2blgkpj1x1uhuld3c2wcrwecd6mx2qisrj\"\n      }, {\n        \"name\" : \"Denver Miller\",\n        \"placeId\" : \"iu76\",\n        \"languageCode\" : \"6kr1pozyuu0aspuog1ztg7adqrotdameuw5mm1c8kc07zo96r\"\n      }, {\n        \"name\" : \"Maryland Braun\",\n        \"placeId\" : \"e44h\",\n        \"languageCode\" : \"gilultqq6f9y8timq52wzrx3d5dxzbbu0d357qa9kjwhx1osizj5f10ujqf4ex5fpgwwmhllc2alwzrh1ck33q91aymanpym06g3smfdunw27lmu0djbyoi95c73wigqnk6erdlev4dggagryl52adoic1qvisskg6al4bd69\"\n      }, {\n        \"name\" : \"Dr. Rivka Boyer\",\n        \"placeId\" : \"shr3\",\n        \"languageCode\" : \"1gdz0i1b96zrps287umiwnd2ym4og1p6gpov2zrah55fxzn4wmuilzl73p08icpc1xjks3db4sjdxi03h2mxc7fkk1kxaw1\"\n      }, {\n        \"name\" : \"Brent Dach\",\n        \"placeId\" : \"08gn\",\n        \"languageCode\" : \"rbkm91ukcl5suoibdp6fp73ck8dsffe94o05180usktge1mysy2hf8p580bz78pkqa0b5gwayhiv7m6evuv8ml8ecnck65udq9srpq696ske95oypy9rvd2odrjes78kn23upaesdd2w8vuq6la332tcrnh5p27ya3hgk8l125d2jsj9r30jg2og446a9an92vs\"\n      } ],\n      \"viewCount\" : \"nha5z0k\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/114025\"\n    },\n    \"status\" : {\n      \"code\" : 1512970284,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Magnam nesciunt maiores quam nihil harum dolorem. Iure necessitatibus officiis consectetur. Veniam commodi expedita placeat velit voluptas. Odio distinctio et. Distinctio architecto adipisci sed ratio\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-08-07T15:28:11.032507Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-19T14:38:11.032551Z\",\n        \"altitude\" : 1.2342808552171173E308,\n        \"accuracyMeters\" : 3.2707912421457367E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.733864555268473E308,\n          \"longitude\" : 4.961867470646103E307\n        },\n        \"heading\" : 1.4053587371290632E308,\n        \"level\" : {\n          \"number\" : 4.0211648060625835E307,\n          \"name\" : \"Maggio\"\n        },\n        \"roll\" : 1.6910917673838476E308,\n        \"pitch\" : 1.3387325902235364E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/848721\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/311653\"\n      },\n      \"photoId\" : {\n        \"id\" : \"3dis\"\n      },\n      \"shareLink\" : \"m68ydavlg2wuvfhluuejnit7w0vhbmxjzdwnc87hparm0sxnfpnlfq9ll2bg0jtcfscvgsbucb99hvyih9evkfnm2ju4k63lo2js0h7j3k96gdzuu2uk5bqohe7s3995xs1zd1f4ku8rt25vo9bpbfjd4ba9a5tle1ub76q9es8qw6wtthdy5a2z5fn352w\",\n      \"uploadTime\" : \"2022-06-23T14:22:11.032917Z\",\n      \"places\" : [ {\n        \"name\" : \"Dr. Lara Grady\",\n        \"placeId\" : \"67b7\",\n        \"languageCode\" : \"02qua5t2vj2iv8g8tgj4\"\n      }, {\n        \"name\" : \"Brian Schamberger\",\n        \"placeId\" : \"b718\",\n        \"languageCode\" : \"fsv5eig8pk3a0laejsp8lly0arqwlikoz1o66cnx7oul3bx4pj9olrpa05ikk4qvfmh8177z2o9frqvpowetzs0vtalp92k7vg7f67xcv34vaga5q\"\n      }, {\n        \"name\" : \"Shantell Kutch\",\n        \"placeId\" : \"js4x\",\n        \"languageCode\" : \"oqwl36nv78llu2ckts9vowb9ta46bqotqj45r06gxmty2tf2d4jj2cc219cvvzskqg55zzozzuh0b9hnpmvxhmvbpqv4i3iwjct3bl8z3h3cqmbyeap7wiuw\"\n      } ],\n      \"viewCount\" : \"pap4v9thbf0wjn9elmcfine76z1s59wdyciu3wtva41rjr65jqkixpbufxkqk5cz93347uricaf0pk334bb0epg62jrwyhhqmd4cbtdj1de4hnvk2382q3ahygwtc7lh1qhsfkllk075yrqbnka2\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/533785\"\n    },\n    \"status\" : {\n      \"code\" : 1427007690,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut et ea eaque et consequatur eaque sit. Perspiciatis rerum sed earum. Maxime autem non. Alias distinctio quae unde. Cupiditate pariatur perferendis rerum.\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc849d3c-def4-424e-b671-70fb48edd0a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.033845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchGet",
          "schema" : {
            "description" : "Response to batch get of Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo requested, in the same order as the requests in BatchGetPhotos.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "26522b40-1667-4fe9-bd54-db6c897d20dd",
    "name" : "Deletes a list of Photos and their metadata. Note that if BatchDeletePhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchDelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : [ {\n    \"code\" : 1223740614,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Iusto ex qui nemo assumenda. Cum repudiandae assumenda distinctio animi. Qui est hic cupiditate rerum. Et sunt odio ex vero quis ut vitae. Et nostrum perferendis ut voluptatem occaecati beatae ratione\"\n  }, {\n    \"code\" : 310169082,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Illum consequatur molestias vel est. Quia beatae consequatur distinctio at eum vero. Sunt ex et cumque eaque ut magni.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26522b40-1667-4fe9-bd54-db6c897d20dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.022888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchDelete",
          "schema" : {
            "description" : "Response to batch delete of one or more Photos.",
            "properties" : {
              "status" : {
                "description" : "The status for the operation to delete a single Photo in the batch request.",
                "items" : {
                  "$ref" : "#/components/schemas/Status"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7bc7b036-3bb9-43eb-8960-a2bcecd449d8",
    "name" : "Lists all the Photos that belong to the user. > Note: Recently created photos th...",
    "request" : {
      "urlPath" : "/v1/photos",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"zef0q9hz5gok3k63ts4eiuudj2q2vhkv3q15t9te29k3mw0ooipa36dyhxn4fdfmerts9agavz2x0uqkojh1wqdzyk83z6ikk9q9bpftwof6s6pvxewo4kst0vxfwzia5nt0ul2blaxufpgifc74z6080p68egyqt20liukbpaa9gq\",\n  \"photos\" : [ {\n    \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n    \"captureTime\" : \"2022-12-08T13:55:11.019537Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-08-27T16:12:11.019577Z\",\n      \"altitude\" : 1.5303245940466233E308,\n      \"accuracyMeters\" : 2.5157754766426414E38,\n      \"latLngPair\" : {\n        \"latitude\" : 1.4795777212350134E308,\n        \"longitude\" : 5.61109603965569E307\n      },\n      \"heading\" : 1.5153451703704397E308,\n      \"level\" : {\n        \"number\" : 1.238377312773516E308,\n        \"name\" : \"Krajcik\"\n      },\n      \"roll\" : 1.559638655761398E308,\n      \"pitch\" : 9.324637420003264E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/666977\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/628526\"\n    },\n    \"photoId\" : {\n      \"id\" : \"4a76\"\n    },\n    \"shareLink\" : \"j9q5cn08byui06s4tp7jzug2c8ixh7tita2ol9g6k554qub1sebz2pgcl5iderhqpzc17iu826bnes9fxdw6pu9vqzj1j6ikl230n7iymxsxxubuxoo5agm96c8egch\",\n    \"uploadTime\" : \"2022-10-14T16:45:11.01994Z\",\n    \"places\" : [ {\n      \"name\" : \"Ezekiel Grady\",\n      \"placeId\" : \"40k8\",\n      \"languageCode\" : \"ktzxnqa2c6jc7xy3t66kwat0smaw442hkhd2pur0wtmsw22lqzz5rusi1mt4sd4toc6q708rwpxinq6d1610xytl176dr21hf7anq3hdly9eslktmex82uv8sclim0cgjt925wagbvdairqfezhv15bcfyjkkyuyvica14ymfchstol2jtze6\"\n    } ],\n    \"viewCount\" : \"mmyhkscx2wmalffac8acx7zjqtzlsy8tzzzmoy8rantxodas1p1awzdh04o8vl8e2mtnj2xzziths1\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"1dl5\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/724181\"\n  }, {\n    \"transferStatus\" : \"REJECTED\",\n    \"captureTime\" : \"2022-08-12T14:57:11.020338Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-11-01T16:05:11.020376Z\",\n      \"altitude\" : 1.2903162127964395E308,\n      \"accuracyMeters\" : 1.880709926208915E38,\n      \"latLngPair\" : {\n        \"latitude\" : 1.4223296672580029E308,\n        \"longitude\" : 1.7080578949793571E308\n      },\n      \"heading\" : 2.942116686433958E307,\n      \"level\" : {\n        \"number\" : 1.3357278968702967E308,\n        \"name\" : \"Crona\"\n      },\n      \"roll\" : 8.128130926946562E307,\n      \"pitch\" : 1.6430636362682029E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/760950\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/769005\"\n    },\n    \"photoId\" : {\n      \"id\" : \"ikt7\"\n    },\n    \"shareLink\" : \"4qq0mddynts\",\n    \"uploadTime\" : \"2022-08-31T17:00:11.020711Z\",\n    \"places\" : [ {\n      \"name\" : \"Pete Murazik\",\n      \"placeId\" : \"dtyd\",\n      \"languageCode\" : \"ia56k1zerabsakqx4z4ol3m0l2nneqs7tirewbbmtz74lygwvxtr9qe52kl2bge9htwbbypb6o0i562a240s6mjfcya5gmpsb9\"\n    }, {\n      \"name\" : \"Mauricio Spencer\",\n      \"placeId\" : \"g37k\",\n      \"languageCode\" : \"q92ueqapha6wdlfncgalavx4vl5oelr6keelujnidddx4y4gx6s771qp0lialuxme3brwrubrmdm6nnj2sw1ywn0w4eyag7e9pojja16g06iu4kg1fvcp8mzlyivqk8p68xm\"\n    }, {\n      \"name\" : \"Mickey Jacobi\",\n      \"placeId\" : \"54m7\",\n      \"languageCode\" : \"vb61qq5suv41mj39ijllg79sdm3n7hudcyeer1n1ldaxlg2id8m5b4qipklzitrm60j48kckqcgyt3m9k821cm77u1mjx0u\"\n    }, {\n      \"name\" : \"Ms. Burt Champlin\",\n      \"placeId\" : \"k1r1\",\n      \"languageCode\" : \"bo0djr8d282uyl4q845nf955mw8m1yq5u8jgi2tt61rzrfs3awtlpq0dkq4m7uuh28dlvdywbwaz82ae7tuqn9iomfp20yr2h4qj75xxucitdj2tixku2n7j3707ipkgx1m7\"\n    }, {\n      \"name\" : \"Trenton Weber\",\n      \"placeId\" : \"67hv\",\n      \"languageCode\" : \"5s5avi\"\n    }, {\n      \"name\" : \"Owen O'Keefe\",\n      \"placeId\" : \"hgaz\",\n      \"languageCode\" : \"xa09fd\"\n    }, {\n      \"name\" : \"Hillary Gottlieb\",\n      \"placeId\" : \"5077\",\n      \"languageCode\" : \"ux2sch21h8l0ti9v5licdu5k9rzyyh266bj6k98377g5bai8najzxjpzrq8p2kvhe9d6yam7egit758huivx9wmmrm6czjrplfghpgbi1j1hl6q5y5qocd1mpll8g3dyzb051jw0nr7jqqx9qa17zk9m9nvyan2e\"\n    } ],\n    \"viewCount\" : \"yvb26ib0g0h5nywl01tx7flfahs1ue424hgh5gk7pxywblrhiboip3lord7qhaqe2quuyr370x5nxniz5repdml88vr4gei20leefnpt05ji1jrvs7s8csl8pe0p6qb7r77p94g5ep31bcky4ou4m698cn5n5n8l67ivwnqx8wqvfg0fnl7k3mln3ye\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"1rr2\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"7nsl\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"756c\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"p854\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"i8ft\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"32e2\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"px8s\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"7843\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/792006\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bc7b036-3bb9-43eb-8960-a2bcecd449d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.022671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.list",
          "schema" : {
            "description" : "Response to list all photos that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photos" : {
                "description" : "List of photos. The pageSize field in the request determines the number of items returned.",
                "items" : {
                  "$ref" : "#/components/schemas/Photo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "77420c7f-966d-4b2c-a0ff-f1bca7fd6466",
    "name" : "Lists all the PhotoSequences that belong to the user, in descending CreatePhotoS...",
    "request" : {
      "urlPath" : "/v1/photoSequences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"photoSequences\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lourie Emard\",\n    \"error\" : {\n      \"code\" : 1361367394,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nam non ea accusantium molestiae. Inventore facere dolore voluptatem nihil repellat excepturi. Architecto et nihil qui sunt alias. Neque assumenda qui.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"beo6diuz0xyeitfhqspbaxt5nqm3frx6ep475b0ror9ulenzie4eohyx762l7sidwj3dunwg3rwobrqbb0s0yllok714k9nslt10lscnjizwnfjq85xhe58jylt6sgdvwueng0ynugx152fbmd74ul6dbr739c7ea0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77420c7f-966d-4b2c-a0ff-f1bca7fd6466",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.01945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequences.list",
          "schema" : {
            "description" : "Response to list all photo sequences that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photoSequences" : {
                "description" : "List of photo sequences via Operation interface. The maximum number of items returned is based on the pageSize field in the request. Each item in the list can have three possible states, * `Operation.done` = false, if the processing of PhotoSequence is not finished yet. * `Operation.done` = true and `Operation.error` is populated, if there was an error in processing. * `Operation.done` = true and `Operation.response` contains a PhotoSequence message, In each sequence, only Id is populated.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "202306fd-7e20-4a67-a97c-976c93c55136",
    "name" : "Creates an upload session to start uploading photo sequence data. The upload URL...",
    "request" : {
      "urlPath" : "/v1/photoSequence:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/284357\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "202306fd-7e20-4a67-a97c-976c93c55136",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.01922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c2ee8047-97e3-49d1-bba4-d19ec68bdaa1",
    "name" : "Gets the metadata of the specified PhotoSequence via the Operation interface. Th...",
    "request" : {
      "urlPath" : "/v1/photoSequence/4pi5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jeni Kutch\",\n  \"error\" : {\n    \"code\" : 1935948741,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Aut ratione magnam provident delectus. Id velit ut iusto eos debitis tempora dolor. Est mollitia libero enim non repellendus reprehenderit dicta. Qui qui molestias est molestiae in harum quam.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2ee8047-97e3-49d1-bba4-d19ec68bdaa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.019102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "92c27aa2-c518-4a37-8f92-a22201ce37ac",
    "name" : "Deletes a PhotoSequence and its metadata. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photoSequence/s7df",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92c27aa2-c518-4a37-8f92-a22201ce37ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.01882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1f15a758-3ef2-4a25-b192-21f5727cfd91",
    "name" : "After the client finishes uploading the PhotoSequence with the returned UploadRe...",
    "request" : {
      "urlPath" : "/v1/photoSequence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Carmen Gleichner\",\n  \"error\" : {\n    \"code\" : 1208437324,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Suscipit ab magnam libero adipisci non vel. Ut eum exercitationem. Non cumque consectetur dolore minima ut ratione.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f15a758-3ef2-4a25-b192-21f5727cfd91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.018691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae24bb5c-a5da-4ee2-9a8b-55498b2bb64c",
    "name" : "Creates an upload session to start uploading photo bytes. The method uses the up...",
    "request" : {
      "urlPath" : "/v1/photo:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/001933\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae24bb5c-a5da-4ee2-9a8b-55498b2bb64c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.018436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d6b70793-f669-41f8-8368-cd0f8503c723",
    "name" : "Gets the metadata of the specified Photo. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photo/y75b",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n  \"captureTime\" : \"2022-08-23T14:39:11.016838Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2023-02-05T14:03:11.016878Z\",\n    \"altitude\" : 5.58503357856272E307,\n    \"accuracyMeters\" : 1.0926153893384802E38,\n    \"latLngPair\" : {\n      \"latitude\" : 2.606609024105529E307,\n      \"longitude\" : 9.964879135898692E307\n    },\n    \"heading\" : 1.6838889909955078E308,\n    \"level\" : {\n      \"number\" : 7.697907899028714E307,\n      \"name\" : \"Hackett\"\n    },\n    \"roll\" : 1.3716278685277889E308,\n    \"pitch\" : 7.677212178084985E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/955901\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/467047\"\n  },\n  \"photoId\" : {\n    \"id\" : \"2v81\"\n  },\n  \"shareLink\" : \"6o0ul1wtqv785r1qvgbqjw6m9sf\",\n  \"uploadTime\" : \"2022-07-13T16:41:11.017249Z\",\n  \"places\" : [ {\n    \"name\" : \"Faith Greenfelder II\",\n    \"placeId\" : \"xj60\",\n    \"languageCode\" : \"kfkfm40i0dm4ckmtdb7p7vrpdauowj3h52b48g0togr8f\"\n  }, {\n    \"name\" : \"Albertha Lehner\",\n    \"placeId\" : \"vkc8\",\n    \"languageCode\" : \"sjklzm7opnwpiu0mcbc18w902kk9tla61yxfijmhetl7g9rmw1zmbslhvgddfyzmthk8i3z6g5bln1q6x7n00d5x6gz3h556d5d1lyw2u2ks459og7wgrvw00883ljqvc22s1kgjx25ilq1t569kwv78w4y50bqgr0lztywqcfhtrblc\"\n  }, {\n    \"name\" : \"Mari Doyle Sr.\",\n    \"placeId\" : \"12i9\",\n    \"languageCode\" : \"waicifg07itmlkfgg2nb5opxwqcpivkucp3ztc32qnzqkkgoil3qqr5hzwogaqcx5y9ucj8a3utaxz90kbec16\"\n  }, {\n    \"name\" : \"Letha Skiles\",\n    \"placeId\" : \"z8sj\",\n    \"languageCode\" : \"mdhc3gza\"\n  } ],\n  \"viewCount\" : \"2bjh1hnllpfjl1s1bg6ljeg9wt1epyynq9soyrwv5oo2j21jcmvabhsxmmpy03k5h9a4vhpiyd9cuxpbuwrv5rc3q85rtv6jjuhnfww9qtt5rkaclad3duz08fdplactxdknk2csfw6h7deb2rycr8grhaoob9ihiysxkcs055kgxusr8odtywt1km\",\n  \"mapsPublishStatus\" : \"PUBLISHED\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"05f2\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/787333\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6b70793-f669-41f8-8368-cd0f8503c723",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.018288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.get",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "31e679c6-530e-4ae8-85ac-a84e0f49498c",
    "name" : "Deletes a Photo and its metadata. This method returns the following error codes:...",
    "request" : {
      "urlPath" : "/v1/photo/i8zf",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31e679c6-530e-4ae8-85ac-a84e0f49498c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.016784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "58d939a9-b287-4987-ab1b-f21f849c2c8d",
    "name" : "Updates the metadata of a Photo, such as pose, place association, connections, e...",
    "request" : {
      "urlPath" : "/v1/photo/f275",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"PENDING\",\n  \"captureTime\" : \"2022-04-13T15:06:11.014918Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-06-07T17:28:11.014961Z\",\n    \"altitude\" : 1.7621491673846623E307,\n    \"accuracyMeters\" : 8.090653444575921E37,\n    \"latLngPair\" : {\n      \"latitude\" : 1.2620303804818308E308,\n      \"longitude\" : 2.6762336836686445E306\n    },\n    \"heading\" : 4.721103549072908E307,\n    \"level\" : {\n      \"number\" : 1.611500147221107E308,\n      \"name\" : \"Mueller\"\n    },\n    \"roll\" : 4.384658651436214E307,\n    \"pitch\" : 4.882074838919621E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/685431\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/132323\"\n  },\n  \"photoId\" : {\n    \"id\" : \"3dfx\"\n  },\n  \"shareLink\" : \"6tljbjz6twpkarne8lp06u0kv1eduun7nmpatvsf5h3a38ftov9dv2s8ex1s\",\n  \"uploadTime\" : \"2022-06-02T15:48:11.015322Z\",\n  \"places\" : [ {\n    \"name\" : \"Vincenzo Kutch\",\n    \"placeId\" : \"4y6u\",\n    \"languageCode\" : \"cmlsu44hr1cwg0ky7cbu93\"\n  }, {\n    \"name\" : \"Bob Swaniawski\",\n    \"placeId\" : \"e9r0\",\n    \"languageCode\" : \"etdoxm083jyi2zgv88vhlh0efxf95syfg869d5c5ilx358gvpnd8gsbnqj46vo1ow15v053aivj9wa3vub3udfzhwqdrsz6co4jqfrgu2gh\"\n  }, {\n    \"name\" : \"Ms. Mariella Brakus\",\n    \"placeId\" : \"1c03\",\n    \"languageCode\" : \"5bqy1m36b51g44akx\"\n  } ],\n  \"viewCount\" : \"977s4601gxuy84rqftf2166870yod9jv1u8hej042nrb4l4di5g2sa98jcx0h15lkxiam2vrpj5w05si7lssb1lgy17ciaheg9db571rxa5f0wplqnatz8x10mdnhj\",\n  \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"ivza\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"wn57\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"2dfx\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"3e9i\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"lvt4\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"q3s3\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/221506\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58d939a9-b287-4987-ab1b-f21f849c2c8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.016636Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.update",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ca2c13da-934e-4b5c-a250-cab78e787057",
    "name" : "After the client finishes uploading the photo with the returned UploadRef, Creat...",
    "request" : {
      "urlPath" : "/v1/photo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n  \"captureTime\" : \"2022-04-13T15:58:11.013421Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-08-25T13:32:11.013467Z\",\n    \"altitude\" : 1.3865588525533531E308,\n    \"accuracyMeters\" : 3.3340381768670756E38,\n    \"latLngPair\" : {\n      \"latitude\" : 1.1595975453837795E306,\n      \"longitude\" : 1.9263260304487309E307\n    },\n    \"heading\" : 1.3169815386737207E308,\n    \"level\" : {\n      \"number\" : 1.146487397763043E308,\n      \"name\" : \"Murphy\"\n    },\n    \"roll\" : 1.4669794877390683E307,\n    \"pitch\" : 6.622334216722839E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/406311\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/668583\"\n  },\n  \"photoId\" : {\n    \"id\" : \"3826\"\n  },\n  \"shareLink\" : \"umbnmro4bbc8tfb7j5pa7t335i2w6zz6kbahuupjwmd59rnpvf0iyumfqx84x2mzbg6e4dc4pb0v\",\n  \"uploadTime\" : \"2022-06-29T13:33:11.013865Z\",\n  \"places\" : [ {\n    \"name\" : \"Raymundo Ullrich\",\n    \"placeId\" : \"240c\",\n    \"languageCode\" : \"2svcnipv6mxwrumu9opazidh2v7v3rsqtegv808cte1zah23anrp2svmf618x11itytaafja6lpv32sbi6vq4tszodpcy3t8a56tlrugcyql6tb3\"\n  }, {\n    \"name\" : \"Ernesto Volkman\",\n    \"placeId\" : \"238w\",\n    \"languageCode\" : \"rjdr3r0yj7emdx9k0nmb54ve7ak8\"\n  } ],\n  \"viewCount\" : \"xhahdcqhxevkokbb54osckqtu7l1e9m61y4p6\",\n  \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"3b29\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"29mk\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"vf8z\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/709701\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca2c13da-934e-4b5c-a250-cab78e787057",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:11.014823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.create",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}