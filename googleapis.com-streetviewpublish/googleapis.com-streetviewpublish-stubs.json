{
  "mappings" : [ {
    "id" : "62a25956-4b3d-4a5b-8800-4366b3fd8f29",
    "name" : "Updates the metadata of Photos, such as pose, place association, connections, et...",
    "request" : {
      "urlPath" : "/v1/photos:batchUpdate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-05-09T09:20:32.882559Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-11-08T09:17:32.882597Z\",\n        \"altitude\" : 1.4728194783054457E308,\n        \"accuracyMeters\" : 1.9060454374579496E38,\n        \"latLngPair\" : {\n          \"latitude\" : 4.552828521972507E307,\n          \"longitude\" : 1.5516950432673098E308\n        },\n        \"heading\" : 1.6846683978415866E308,\n        \"level\" : {\n          \"number\" : 1.6837946450707207E308,\n          \"name\" : \"Gorczany\"\n        },\n        \"roll\" : 1.1518689900726207E308,\n        \"pitch\" : 1.1110468521572274E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/045219\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/128892\"\n      },\n      \"photoId\" : {\n        \"id\" : \"c81c\"\n      },\n      \"shareLink\" : \"8jycktyner6rg97t80v3w6dxhc8plkdcq\",\n      \"uploadTime\" : \"2023-01-01T10:30:32.88291Z\",\n      \"places\" : [ {\n        \"name\" : \"Thomasine Sporer\",\n        \"placeId\" : \"6f99\",\n        \"languageCode\" : \"bqzl85jveu7m4cs0l8r9ym27p6hrxvsfnezx\"\n      }, {\n        \"name\" : \"Rowena Harvey\",\n        \"placeId\" : \"z41a\",\n        \"languageCode\" : \"8gkgqm40iskei7szp21am8vkdm1lin1gvv83tz692f7ha867np77n0hmzxtp3eeednyitvtpfw9ogvz4fz\"\n      } ],\n      \"viewCount\" : \"wa401uciv31u4d23caqybp6jldh50x2n8znwqknq6zi7a2ypwem59p775jj0r2p02wwqevgjs4zgchpl9wmbsq19j7u4txi8agn3k2f0axu0ik47uodusrjjejmlopso58spu31uj8s00ba24x4y48a6a17jivrw3p6yvypx47gejhnbipztuuclo38\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/982744\"\n    },\n    \"status\" : {\n      \"code\" : 1313376315,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Non excepturi magnam molestiae excepturi natus. Voluptas voluptatem vel. Laboriosam praesentium ipsa quam.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-11-10T11:54:32.883417Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-16T10:57:32.883453Z\",\n        \"altitude\" : 9.824646284184553E307,\n        \"accuracyMeters\" : 2.075319020797628E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.751246474096568E308,\n          \"longitude\" : 1.4558140060846034E308\n        },\n        \"heading\" : 2.5193899975693784E307,\n        \"level\" : {\n          \"number\" : 8.412684983688988E307,\n          \"name\" : \"West\"\n        },\n        \"roll\" : 6.199408553952625E307,\n        \"pitch\" : 1.7697018607123152E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/137997\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/463346\"\n      },\n      \"photoId\" : {\n        \"id\" : \"g4h7\"\n      },\n      \"shareLink\" : \"pi0rvtxp2dl9d5m462aso0h5g43g8vvgcko47t\",\n      \"uploadTime\" : \"2022-08-28T08:21:32.883749Z\",\n      \"places\" : [ {\n        \"name\" : \"Terrell Kilback\",\n        \"placeId\" : \"u432\",\n        \"languageCode\" : \"2kon91soy2kubw3mane3ja\"\n      }, {\n        \"name\" : \"Yasmin Turner Jr.\",\n        \"placeId\" : \"2y37\",\n        \"languageCode\" : \"ztxrv6hie02oj1t5c3njkkqb3ypk5hjp22gh9awyt5sn0p4rgrfoskiwsc4c9ocb7qtutvmub552sj37on7qdr0thz1me2y9afthk5sjsov48b7kv3kj2s48bvgp1gwv730z0ze9k785ntzwmnytvoou99lh52wxl526fm30zs61pwbp5\"\n      } ],\n      \"viewCount\" : \"2g3tyqvj33gdsnwg72jrf00hmn7dbxr0or1tv23heipwqxdxx3y55ps4xnf5y65beaen\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/398923\"\n    },\n    \"status\" : {\n      \"code\" : 1957244546,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Et rerum harum. Eos suscipit ea. Quaerat necessitatibus recusandae rerum alias pariatur quidem id. Esse et laudantium optio inventore libero vitae. Tempora quasi nesciunt ab quisquam quod consequatur \"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2023-02-14T10:04:32.884285Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-11-30T10:35:32.88432Z\",\n        \"altitude\" : 1.0357196874672211E308,\n        \"accuracyMeters\" : 2.2421871807473786E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.491511950694028E308,\n          \"longitude\" : 4.39575085460778E307\n        },\n        \"heading\" : 1.5962111907795505E308,\n        \"level\" : {\n          \"number\" : 3.3410238717706235E307,\n          \"name\" : \"Quigley\"\n        },\n        \"roll\" : 8.464329832107575E307,\n        \"pitch\" : 5.002849127501744E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/481884\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/382714\"\n      },\n      \"photoId\" : {\n        \"id\" : \"t0vw\"\n      },\n      \"shareLink\" : \"bka1pwg0jlr2qozi1dlhdpyxtz3cxl6ieiy061m93pcrj8dnz7fzhgi9f7gkj33qk8ipzy9gv6djzloojr5kr158gm3l\",\n      \"uploadTime\" : \"2022-04-11T08:29:32.884617Z\",\n      \"places\" : [ {\n        \"name\" : \"Dr. Hye Larson\",\n        \"placeId\" : \"58c1\",\n        \"languageCode\" : \"vois7wxylahk5tzwcvvgbbsvcodc0r29kse7ea8k0dligm0m3q9hwjstig3niojiir422xliqweum9o\"\n      } ],\n      \"viewCount\" : \"nrqn6zkz1nj4ibk3mzpxgcjk84p9k272hhtyvhkca54x5vh7p54qvoeprkfn44s8h0mgv5ve7oo9jjugo1koup1hvvdqjnmp8rdn3z0wbkn02ujbwvrjqe9zohpi3z56ud1\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/568668\"\n    },\n    \"status\" : {\n      \"code\" : 1078350857,\n      \"details\" : [ { } ],\n      \"message\" : \"Soluta dicta voluptatum esse. Debitis illum soluta reiciendis ea. Quia autem quia vero ex. Ut ipsam quam incidunt repellat sunt dolor.\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62a25956-4b3d-4a5b-8800-4366b3fd8f29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.885047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchUpdate",
          "schema" : {
            "description" : "Response to batch update of metadata of one or more Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo updated, in the same order as the request.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "e965f16b-4185-403e-8dad-5ae7963fb494",
    "name" : "Gets the metadata of the specified Photo batch. Note that if BatchGetPhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"CANCELLED\",\n      \"captureTime\" : \"2022-10-20T08:02:32.872906Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-11-11T08:07:32.872947Z\",\n        \"altitude\" : 6.696042839247683E307,\n        \"accuracyMeters\" : 7.557395030224282E37,\n        \"latLngPair\" : {\n          \"latitude\" : 4.616221715125796E307,\n          \"longitude\" : 1.1259998244024526E308\n        },\n        \"heading\" : 6.060974581630067E307,\n        \"level\" : {\n          \"number\" : 1.1661157914674048E308,\n          \"name\" : \"Koepp\"\n        },\n        \"roll\" : 7.854383343487236E307,\n        \"pitch\" : 8.372306495454882E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/038325\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/388420\"\n      },\n      \"photoId\" : {\n        \"id\" : \"508x\"\n      },\n      \"shareLink\" : \"eay1qbdadzopguhqh0i6gefsmqqkznxxvtxtb748e6h9zn8x6ui2v6y129a\",\n      \"uploadTime\" : \"2023-03-07T08:12:32.87329Z\",\n      \"places\" : [ {\n        \"name\" : \"Stacy Ondricka\",\n        \"placeId\" : \"fj42\",\n        \"languageCode\" : \"p9shvspdnyw990z1o3s87ad2gd5rfhmdnr25cj3v99hjk2uc99cg82j7vtxlgkgn4e0exwbjyelq5r4eyzlzkx5ncdjvuw7ln70ccjzbzmm89zoacw2wapmiv6blchewpm8iowe20s67qmr0bx0xxsqczbtmmnt2i121\"\n      }, {\n        \"name\" : \"Mason Ritchie\",\n        \"placeId\" : \"8if0\",\n        \"languageCode\" : \"twvm8zkx911wxnndalc60mwjsksw1b67dthjka9k5dj9yjis6uop2fz0knhycsgfuspe1ms8m8rioprisd057v3prr2q3dzjveqknzhywj3ile86xgv2iym12l8p2yjowvh4dlkl0l4fbh91c3yschik8h31xfs6hzt84shx5gd871w2\"\n      }, {\n        \"name\" : \"Lashunda O'Connell\",\n        \"placeId\" : \"s2j4\",\n        \"languageCode\" : \"jqbixvt6v49n2mbbma5wyfj8g5cjyt0xc6lroii8wf6hmq7e56rt4jzw513i0fm46c4\"\n      }, {\n        \"name\" : \"Mr. Jacob Emard\",\n        \"placeId\" : \"8f19\",\n        \"languageCode\" : \"r3y2rte1cdv7cvynisy9g3xsn2segxwzda9qqdl69ia01tu7j6otsz0ck0jlnqo8d8j6869wijmyuy7x4h8etv9vitpb4wghs9ai1t5xfskxkuue2m2443xuizqnwezre5l8m2lk3dyve07z13i8n2r\"\n      }, {\n        \"name\" : \"Lino Stiedemann Sr.\",\n        \"placeId\" : \"mait\",\n        \"languageCode\" : \"bvkx085b26aj74rbs52lnlx61ugaam20c3gl7k9uu2ajjr9upuyi3daemdo1gsmvzhx6kxl81l7evtai2g01vdy33eg1abrlrbmp0g7mqder1lofyyikbgiy19bclqh6tjgclgiz9g\"\n      } ],\n      \"viewCount\" : \"0zd0nbpnyn3a2l6150nk4kbvfvwsbzh0fc7ik7sl8qfv2qo45uy5bqznccggsnalhe5zu41butj4h6qvenfftya9og2rpj5o7vmn65ghoy06z3i8x2p7sx5wim3xkaozj46rsrknngh0zyp5t24vurg5acm0jpskrxip3x3kefzm6unf1ppp33rsc9ru2\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/158570\"\n    },\n    \"status\" : {\n      \"code\" : 1494559033,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Officiis omnis officiis dolorum in error molestiae. Quos voluptate laborum in minima. Numquam modi eum eaque eum sequi voluptas et. Facilis eum optio in quaerat vel debitis enim.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"COMPLETED\",\n      \"captureTime\" : \"2022-12-11T11:43:32.874303Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-12-21T10:26:32.874343Z\",\n        \"altitude\" : 1.234439719120559E307,\n        \"accuracyMeters\" : 2.0354257996262453E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.7095847063126768E308,\n          \"longitude\" : 1.30150330142781E308\n        },\n        \"heading\" : 3.147643075965191E307,\n        \"level\" : {\n          \"number\" : 1.5467899317270374E307,\n          \"name\" : \"Schuster\"\n        },\n        \"roll\" : 2.1857469625033434E306,\n        \"pitch\" : 1.7139155697972716E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/398287\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/241252\"\n      },\n      \"photoId\" : {\n        \"id\" : \"4512\"\n      },\n      \"shareLink\" : \"qftpjak8qjprqdr\",\n      \"uploadTime\" : \"2023-03-01T08:37:32.874665Z\",\n      \"places\" : [ {\n        \"name\" : \"Elvis Corwin\",\n        \"placeId\" : \"705r\",\n        \"languageCode\" : \"a6mk8yd5vvjm8ohw0iq0xuwr4go67p41zfjbuh6feqjymne5ymbwbldliwcplbf24wdilh1y7lhpltnlzfbmsfev32ltfpbihec7h2hb97hknhzrypfg4oz076q8dfwvb4hzhxcpwiwfmvykw3m7al50ec453ya49sknqk58xkaufj4znqx0j\"\n      }, {\n        \"name\" : \"Giovanni Robel\",\n        \"placeId\" : \"5f54\",\n        \"languageCode\" : \"2uzhqrd6de9xcrbjr5mh9bf1ps5otgp6dvligsfhs0bmw2fljsftfk6o4cg60zk1ogp3cer78bl6nr2rio8xakswyrcck7gq3adak576tzmcuqs7\"\n      }, {\n        \"name\" : \"Emmett Price\",\n        \"placeId\" : \"f1c8\",\n        \"languageCode\" : \"umm929wqwj39ncww4wmo6eixsk7zpixkr1etuarnh3h04mb7xqpq4nsfdn5ilq4x9mpikhdql0rv\"\n      }, {\n        \"name\" : \"Mr. Kazuko Leannon\",\n        \"placeId\" : \"1vyl\",\n        \"languageCode\" : \"f5cpyse97qpnilw5htotiuw8ao0b2jc8h\"\n      } ],\n      \"viewCount\" : \"y9qtvz5bed5nj1s4nhwx6xm2q4xemkdih4hr1awhkuwjqmnwne7xg3prmonwc8kh3nx1b1xkcptly76rfwg0089ab6sasoscqt4dycxdbkm18y8w\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/943851\"\n    },\n    \"status\" : {\n      \"code\" : 951996371,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Unde quas earum qui nihil eius pariatur. Enim culpa sit eveniet. Illum placeat amet beatae sint ipsa velit.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"NEVER_TRANSFERRED\",\n      \"captureTime\" : \"2022-12-22T10:41:32.875467Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-06-21T08:09:32.875502Z\",\n        \"altitude\" : 9.450856182343934E307,\n        \"accuracyMeters\" : 2.0754409667825706E38,\n        \"latLngPair\" : {\n          \"latitude\" : 7.927853351683917E307,\n          \"longitude\" : 1.2992550187398213E308\n        },\n        \"heading\" : 1.0425389701739255E308,\n        \"level\" : {\n          \"number\" : 7.500146121655111E307,\n          \"name\" : \"Thiel\"\n        },\n        \"roll\" : 1.1328654828137027E308,\n        \"pitch\" : 1.2205383817804875E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/926740\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/914389\"\n      },\n      \"photoId\" : {\n        \"id\" : \"1ep3\"\n      },\n      \"shareLink\" : \"196rnc3ntihyhwj88wwbfj3oxwlbpa2anma\",\n      \"uploadTime\" : \"2022-11-20T09:59:32.875826Z\",\n      \"places\" : [ {\n        \"name\" : \"Tameka Wehner\",\n        \"placeId\" : \"8f2d\",\n        \"languageCode\" : \"vciw06\"\n      }, {\n        \"name\" : \"Noble Bechtelar\",\n        \"placeId\" : \"2ab0\",\n        \"languageCode\" : \"fykn0abb7l416tls1bcfq4ivd0fxkc4y5vt44vxmrv7rn1759t6uvkjpinilxhv6kkxpv05q5ln3levo4op29mrtf0kgt7ydk78dpguz52rjrzyhu41g5l2r8bz3f\"\n      }, {\n        \"name\" : \"Nicholas D'Amore\",\n        \"placeId\" : \"3077\",\n        \"languageCode\" : \"62tfumx0jsew80y6hmmkxnvx\"\n      }, {\n        \"name\" : \"Carma Bergnaum\",\n        \"placeId\" : \"x3vn\",\n        \"languageCode\" : \"09iza2cj7qxtuczi6tb8zntj05rxrxbtp7ztwawsr9rft017py5tqvg73bsveuiyevj90sygnko14nkdxrjjcch11r22is8mnuc5ic84c91fqhu0vn11vw5siny43vd4sx8\"\n      }, {\n        \"name\" : \"Dr. Caren West\",\n        \"placeId\" : \"99a1\",\n        \"languageCode\" : \"zuzu\"\n      }, {\n        \"name\" : \"Porsche Schuppe\",\n        \"placeId\" : \"251n\",\n        \"languageCode\" : \"smpwdss22810agpotq1mufw3nwwjlv51sy17w3hzlh99yu3a02iv3rmkxrpxqcdvas4u2pd2zztgxkedydp78liroyhatg0fytvfv7a1tjld0r6sx3x1h7s4llzsyimq8g6wn0qwu5\"\n      } ],\n      \"viewCount\" : \"14npxy057f986z5q3sd1f6cd6gx4blxps2d9ihs3mfp9jvdd8146hva\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/090612\"\n    },\n    \"status\" : {\n      \"code\" : 235501143,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Error dignissimos aut quaerat laborum at libero. Quae est quasi. Ea suscipit quia. Temporibus deleniti eum laboriosam.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"RECEIVED_VIA_TRANSFER\",\n      \"captureTime\" : \"2022-07-08T10:18:32.876885Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-07-13T09:13:32.876924Z\",\n        \"altitude\" : 9.015751239384218E307,\n        \"accuracyMeters\" : 1.7320344860275023E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.26334197060341E308,\n          \"longitude\" : 1.1083078902285895E308\n        },\n        \"heading\" : 4.608790457634384E307,\n        \"level\" : {\n          \"number\" : 1.139243586813963E308,\n          \"name\" : \"Johns\"\n        },\n        \"roll\" : 1.5269491957258283E308,\n        \"pitch\" : 8.806904896916215E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/033073\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/318033\"\n      },\n      \"photoId\" : {\n        \"id\" : \"3h05\"\n      },\n      \"shareLink\" : \"ejuw4o0b73itwd2mz\",\n      \"uploadTime\" : \"2023-01-02T09:27:32.877251Z\",\n      \"places\" : [ {\n        \"name\" : \"Elia Wilkinson\",\n        \"placeId\" : \"gh54\",\n        \"languageCode\" : \"qyhfb2u3v\"\n      }, {\n        \"name\" : \"Theron Bartoletti\",\n        \"placeId\" : \"42hf\",\n        \"languageCode\" : \"q4rsjjguazkxj5p0we896z0wp5bk0gmoty32m99k8hzz6qv\"\n      }, {\n        \"name\" : \"Joseph Carroll\",\n        \"placeId\" : \"k2af\",\n        \"languageCode\" : \"wfrm2x0f42rkhjktp1omzt7ar1ek\"\n      }, {\n        \"name\" : \"Mr. Amina Nolan\",\n        \"placeId\" : \"tmst\",\n        \"languageCode\" : \"e3pwwx5hnpae53h48av5s0o4qdy24hexpza6o7ys98asm504ursfodfj4722ej836h7z17loiaalv93yj4ljg0k1pighehl212rx13gkecb5vinpchoacybx8m34zed05pirnbfhh831qhbj1i8eda3kkwh118fqwx0abx1ky87oxhcn6c966lg\"\n      }, {\n        \"name\" : \"Yanira Zulauf V\",\n        \"placeId\" : \"9i34\",\n        \"languageCode\" : \"whlc7tfo6j3hhlhjm5ernixc3oop4u6lqa7qwtcyj1m0n5io2hmnasuq0npwyb97pemo2u3o\"\n      }, {\n        \"name\" : \"Verline Volkman Sr.\",\n        \"placeId\" : \"i7u7\",\n        \"languageCode\" : \"wio7m3y74mhptqjq0g5bvu3cp2jwwv9v1yh3ig9vqa28lhnt7c9trx9symseu2oysfl6ct717psm58yjjpyygewv42f5c8ho574sdfd3fn6fsaqaa50smap9azkdwqx6r5vfcy6e\"\n      }, {\n        \"name\" : \"Ms. Doreen Corwin\",\n        \"placeId\" : \"c99s\",\n        \"languageCode\" : \"7sr4mex4d30vv83jz3arutjxcbd48u7ybijtqddakyiq5pax6milvj09b2ojo\"\n      }, {\n        \"name\" : \"Dong Maggio\",\n        \"placeId\" : \"0x7d\",\n        \"languageCode\" : \"69o62rpyqkg8aq9o8ellon3uxeylx33\"\n      } ],\n      \"viewCount\" : \"51rzvpfanmcbf2uhhgnn6hfogr3hunq8sthl6acoiumm24c9orf4s6mowofion1k10z64c9ukhgd47h77y4hr6n2tbor7riskk89gjae8v7jhk8zqp5rtxxjjyoqrqul038rq2yqstt8x3q89dsxwu4sdnqvddhlq47aneujiazthjqcct\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/826107\"\n    },\n    \"status\" : {\n      \"code\" : 901760872,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Eum exercitationem porro. Reiciendis aut velit. Totam fugit quia officia corrupti facere. Qui tempore eos aspernatur veniam aspernatur. Dolorem animi aspernatur eligendi est sunt quis ad.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-06-10T11:34:32.878629Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-09-18T11:11:32.878668Z\",\n        \"altitude\" : 2.5311593127734795E307,\n        \"accuracyMeters\" : 2.3522772151725047E38,\n        \"latLngPair\" : {\n          \"latitude\" : 9.647447565393264E307,\n          \"longitude\" : 1.2198094718551502E308\n        },\n        \"heading\" : 1.2109572421313836E308,\n        \"level\" : {\n          \"number\" : 7.14579156163851E307,\n          \"name\" : \"Botsford\"\n        },\n        \"roll\" : 4.990264704126015E307,\n        \"pitch\" : 4.92116714104852E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/000181\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/059245\"\n      },\n      \"photoId\" : {\n        \"id\" : \"64ly\"\n      },\n      \"shareLink\" : \"qockvrnr7cy53vpwqne7j6jpjyvup2xiva5t3p1dayo3o2bdzb4pm1k3ea06kil4wmdl7quxc1yhmnxaejo8n4avh7sfhyehzjhfywplpzdrxcavy6hzyf40gjfmik7c4hlcud70o79k4b14kw03nmheckx26img61grpzuq\",\n      \"uploadTime\" : \"2022-11-16T10:08:32.87899Z\",\n      \"places\" : [ {\n        \"name\" : \"Mrs. Erin Nikolaus\",\n        \"placeId\" : \"lk88\",\n        \"languageCode\" : \"anambjc0nkt0m0s2daasj4nktysbf02rbypfg0g9k5yx71r98cxlj2pulweuj93ayfaso4d18eevw6o84t4ws96ky3gwecuynlgl30gmf8kup5gvnd7w57cyozvhq2x4eg42jgp6iltax478rp4yzzpgkqa\"\n      }, {\n        \"name\" : \"Agustin McClure\",\n        \"placeId\" : \"9pvj\",\n        \"languageCode\" : \"k3yfdrdu3n2\"\n      }, {\n        \"name\" : \"Kathe West\",\n        \"placeId\" : \"imzp\",\n        \"languageCode\" : \"ayhkfdv2m99rzcbbyegu9w3odh5htemon4mmbav9tblf3lumd4jx62bc07v7jhjlfqp0hzso5p0stb1ah2e76mlwpqggzgqujytbp04lpvur\"\n      }, {\n        \"name\" : \"Mr. Gerard Jaskolski\",\n        \"placeId\" : \"r5q5\",\n        \"languageCode\" : \"6aje8gmzcsyahszbi5w2x8l2nkis8l5ekt6b05xlzhx7h69lt0gtjojowyhemc7b1ginoda4ia7vdn3h8watxwh46vildky3s318fnynd8v297kv0zd1dsvgqz3xzyyfm25wwrs4fbatdjou1z86dda2nqh3y1\"\n      }, {\n        \"name\" : \"Chantelle Hermann III\",\n        \"placeId\" : \"48ze\",\n        \"languageCode\" : \"ss04v6i1bgr113y6ubupl9vnl87isoksiti82mhkcixmf5brxziue6vue2t146c48alknkjvyl9s10wdfn1zwek3i47bdw7ty5g1jbcne3ifjvppnudtfhijie11\"\n      } ],\n      \"viewCount\" : \"pqxyopdl0z6aewlov2a00i9qmqv2notm4acj87ky90qxblid6\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/375263\"\n    },\n    \"status\" : {\n      \"code\" : 184564400,\n      \"details\" : [ { } ],\n      \"message\" : \"Quibusdam voluptatem ut animi culpa quasi rerum sapiente. Nemo et consequuntur maiores amet voluptatem. Natus eos beatae aperiam odit quis delectus asperiores.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-04-07T11:40:32.879928Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-04-09T08:38:32.879965Z\",\n        \"altitude\" : 5.282879071631361E307,\n        \"accuracyMeters\" : 1.7077569735701068E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.2549360438772358E308,\n          \"longitude\" : 1.4326641136406248E308\n        },\n        \"heading\" : 1.3082950690558632E308,\n        \"level\" : {\n          \"number\" : 1.2160739185725106E308,\n          \"name\" : \"Kautzer\"\n        },\n        \"roll\" : 1.1767818163110463E308,\n        \"pitch\" : 1.4746957887543054E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/736112\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/238079\"\n      },\n      \"photoId\" : {\n        \"id\" : \"afov\"\n      },\n      \"shareLink\" : \"gkfx6wq8825utsjoj8q1qudmwds3u22ytleuh07q3kc56mt21jwwr41bcd1orz94tsf0hmlg3nzhws1d4zi673n4kevckx7qo43rjqd02mj2147vnddnzppgbv84d0z05yu71kvlln9qw3grzndq147nrlycnlmv8iszhx5\",\n      \"uploadTime\" : \"2022-07-09T08:03:32.880267Z\",\n      \"places\" : [ {\n        \"name\" : \"Allen Beatty Jr.\",\n        \"placeId\" : \"bvsq\",\n        \"languageCode\" : \"puq569x1go85xwqlwilyyg1r9658z23m9cpa8hwdp02sob1er4eb8v80yboaumm7xaskjk34av4ipxwcczjg\"\n      }, {\n        \"name\" : \"Carolynn Mertz\",\n        \"placeId\" : \"1450\",\n        \"languageCode\" : \"h58i3p97h2rmons4uux7fm9wzd\"\n      }, {\n        \"name\" : \"Mohammed Borer\",\n        \"placeId\" : \"f2u3\",\n        \"languageCode\" : \"tot8x5ac9\"\n      }, {\n        \"name\" : \"Magdalena VonRueden\",\n        \"placeId\" : \"l94d\",\n        \"languageCode\" : \"lckgnbcewx1z6xz0crqa46z820snplzfoy36dl3x0dnxkf420k4qgn471b0ebmxxexhqxxrecjpcgsk618j2j38iyi961sfs7npilfcwnpq1hom0ubfoykcgxek57j22mpdzvzzveksg176ggarlzwvahr1tqz1pvawdhxvco35wc9teztx849m7jc48h5pc\"\n      } ],\n      \"viewCount\" : \"cmwww453dph8zajx57ppf0kowp8blz0yaecg31bj7pcp1jh7nm1cstk5j18dmq8op16rfr9jkwm51efext3vt0x2ur3k8euyfpsjepf\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/286219\"\n    },\n    \"status\" : {\n      \"code\" : 238461190,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Laboriosam quo et aspernatur unde tempora officiis rerum. Veritatis maiores qui enim voluptatem consequatur accusantium beatae. Ab dolor atque repellat quae. Soluta at dolorem voluptates nulla. Ea qui\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-03-30T09:37:32.881051Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-01-15T11:13:32.881085Z\",\n        \"altitude\" : 6.958176935170077E307,\n        \"accuracyMeters\" : 3.151379502770007E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.6273896450877178E308,\n          \"longitude\" : 9.240795653493975E307\n        },\n        \"heading\" : 5.038513798366675E306,\n        \"level\" : {\n          \"number\" : 1.491076726939312E308,\n          \"name\" : \"Wuckert\"\n        },\n        \"roll\" : 6.959768408397088E307,\n        \"pitch\" : 1.1282546890396627E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/369831\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/515167\"\n      },\n      \"photoId\" : {\n        \"id\" : \"yl58\"\n      },\n      \"shareLink\" : \"kek43wm7ewvjj7bq7nmzrllm5jvehh6bv9q18b1n9k69z73jk7puv4hlks9qvaqhjdoe3brf1nd7nqoerpfimflzm9vpq7kyfrvb02zr27uwqb52dj82vpr8zeo3v1kzz12l5hj5w5xxh\",\n      \"uploadTime\" : \"2022-10-01T09:10:32.881392Z\",\n      \"places\" : [ {\n        \"name\" : \"William Volkman\",\n        \"placeId\" : \"o6x9\",\n        \"languageCode\" : \"rnz6qfqzisyyby695ea80zca5b5q62tkptpfob7\"\n      }, {\n        \"name\" : \"May Crist\",\n        \"placeId\" : \"y8pe\",\n        \"languageCode\" : \"e1ebjdvq53fp2rl7xa0j8li4aqgefyzfpjxzvfystienim0oapu001kylnbvv5uz97ftcxorfwuoca\"\n      }, {\n        \"name\" : \"Misti Beahan\",\n        \"placeId\" : \"dc4r\",\n        \"languageCode\" : \"kxfk098nvc1r4pyuhfl9c7bay4vifk4w59rtcdrersg30lcq2wtlo399j7nt\"\n      }, {\n        \"name\" : \"Ms. Raleigh Olson\",\n        \"placeId\" : \"43jw\",\n        \"languageCode\" : \"dwl2vbp7o87xzj7dtrjen\"\n      }, {\n        \"name\" : \"Mrs. Betty Fay\",\n        \"placeId\" : \"d5j5\",\n        \"languageCode\" : \"py8e22m1txzzayfcrfxls3tjd0gq3p31z26vw9vdc9vivig88nvww86y1cesgwjpfv7mf5589zo5gwh1suul6d3u5xbgzzkfwlw0ljqp9jdbju45jk262xljd22y1k7vjl5x3\"\n      } ],\n      \"viewCount\" : \"jxvarvnkvc8\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/423614\"\n    },\n    \"status\" : {\n      \"code\" : 210585764,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia odit ut nostrum facilis earum. Iusto excepturi fugiat corrupti nobis consequatur. Aut explicabo corporis nihil facere minus et facilis. Maxime nam cumque. Adipisci voluptas maxime est id.\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e965f16b-4185-403e-8dad-5ae7963fb494",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.882484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchGet",
          "schema" : {
            "description" : "Response to batch get of Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo requested, in the same order as the requests in BatchGetPhotos.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "58c39fd6-0747-40c8-8826-04a8b5b017a5",
    "name" : "Deletes a list of Photos and their metadata. Note that if BatchDeletePhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchDelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : [ {\n    \"code\" : 40359959,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Nihil omnis totam. Soluta fugit nemo dolore iusto est. Quia officia quia aliquid ea enim ea doloribus. Ut voluptatem veniam molestiae atque.\"\n  }, {\n    \"code\" : 461345548,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ad odit dignissimos possimus perspiciatis et quos ipsam. Et aut ut molestiae quas quaerat sint. Consectetur at fugiat. Ut saepe voluptatibus aliquam sint.\"\n  }, {\n    \"code\" : 1893320653,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Omnis quaerat et animi illo et corporis. Quo perferendis sunt quo possimus est. Consequatur et harum dicta omnis ut modi impedit. Exercitationem saepe consectetur. Eius qui facere.\"\n  }, {\n    \"code\" : 971176430,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Facere debitis laboriosam voluptatem deserunt. Cumque adipisci non et nisi ipsum ipsum. Libero adipisci excepturi perspiciatis sequi iste. Consequatur perferendis dolorem eligendi autem illo. Eum modi\"\n  }, {\n    \"code\" : 466730406,\n    \"details\" : [ { } ],\n    \"message\" : \"Quod porro et architecto repellendus. Qui cupiditate excepturi molestias earum laborum porro. Aut neque repellendus velit veniam quasi. Sit iure natus.\"\n  }, {\n    \"code\" : 607433118,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Voluptatem tempore nihil quaerat voluptates esse nobis autem. Est soluta nisi. Itaque enim quia dolores. Quae aut non consequatur.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58c39fd6-0747-40c8-8826-04a8b5b017a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.872834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchDelete",
          "schema" : {
            "description" : "Response to batch delete of one or more Photos.",
            "properties" : {
              "status" : {
                "description" : "The status for the operation to delete a single Photo in the batch request.",
                "items" : {
                  "$ref" : "#/components/schemas/Status"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d8a19890-9dfc-448a-88d6-d0423945661a",
    "name" : "Lists all the Photos that belong to the user. > Note: Recently created photos th...",
    "request" : {
      "urlPath" : "/v1/photos",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"0m21yy0w4zur9x094uvisdkd06i28axtonqml11537hmvtgr6kb3eloov3buzrelo2aw32kzrvpkjlrc1e8hgpcjxyn6\",\n  \"photos\" : [ {\n    \"transferStatus\" : \"COMPLETED\",\n    \"captureTime\" : \"2022-06-13T10:53:32.863731Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-05-01T09:13:32.863774Z\",\n      \"altitude\" : 4.258175083905773E307,\n      \"accuracyMeters\" : 9.899989564450369E37,\n      \"latLngPair\" : {\n        \"latitude\" : 3.267924530545438E307,\n        \"longitude\" : 7.619832092188176E306\n      },\n      \"heading\" : 3.314854249265749E307,\n      \"level\" : {\n        \"number\" : 1.2412784715079878E308,\n        \"name\" : \"Padberg\"\n      },\n      \"roll\" : 1.65935428902732E308,\n      \"pitch\" : 1.3621023533181227E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/865320\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/645121\"\n    },\n    \"photoId\" : {\n      \"id\" : \"0c65\"\n    },\n    \"shareLink\" : \"kseab7cp7w1inaa9xssqcyo550ysqw8poaaavse2gkm226ximunjeswsect5qh4kfm24p3m1p2wm12bxpmwghi90livbsot92de9x1sbr5z4r10wx5kwcpq8zmwqnlfjxrlmv7yumuyhod1eva1ovqcpwfwmj9vabn1akzhoygngwd9n72gs2feqb9ibla1ypt\",\n    \"uploadTime\" : \"2023-03-01T08:22:32.864115Z\",\n    \"places\" : [ {\n      \"name\" : \"Ms. Norris Wunsch\",\n      \"placeId\" : \"ee1k\",\n      \"languageCode\" : \"1zn9yas1dct58ipuojcxanpi84lqz1qu5lzl6wsbdcehdy5m5omzl74anjjknjwpr7o6rak6hoq75wiv73o8d4elwt5q0o6zqobw2bkjt88yfm5rqrdztryrcp1kmse13kkmfdlwqh1jx5spn8q40g8wbnw5c720xcqoy6hmzqll20p12j2ponco4khlc\"\n    }, {\n      \"name\" : \"Libbie Reichert MD\",\n      \"placeId\" : \"7510\",\n      \"languageCode\" : \"ddsdzubvxw5bpg7amogvdjlzvb12kpx3wybihkgi4f3ftqbmi1kgv4hh58ftaya\"\n    }, {\n      \"name\" : \"Nelia Haley\",\n      \"placeId\" : \"j201\",\n      \"languageCode\" : \"n7aedx77u8jimbyod0r059sq3dgypal1nms426pm9nfcl90ds\"\n    }, {\n      \"name\" : \"Cira Klocko\",\n      \"placeId\" : \"9719\",\n      \"languageCode\" : \"iil1fgcrrqmzq3t8qrfg4kg1ulk99wzgkwt5qz0c6cukx9wmmgjc2vb297uy2q8raqy9dq0oizbmsz3zobqgxbc2kwcdsawstfor29vfpvbgw37dl341paimbgmupy1r9f\"\n    }, {\n      \"name\" : \"Dr. Garfield Schuster\",\n      \"placeId\" : \"2mmm\",\n      \"languageCode\" : \"u2n05qptrivy61kxgbdq46zaeji3bqhi5vve1370mjcz53f1e41kn8i1uj071g6o5s01q7onymzfv2i6s8d5\"\n    }, {\n      \"name\" : \"Shakita Gutkowski Sr.\",\n      \"placeId\" : \"0x5f\",\n      \"languageCode\" : \"3t3ujoqa\"\n    }, {\n      \"name\" : \"Sade Hahn\",\n      \"placeId\" : \"7v1k\",\n      \"languageCode\" : \"lzwmqhio1j8gz8fg7tmozwuy206tgzsr4hr4v7hrzh8g8gcvfccp1aasyamqb9v7juh01jbpvbd6ua6r61n1q8wwqax3xddr6nfxr1por66r6v5bu7osm2rvcpdtzhe6crz41svrxxzerc49\"\n    }, {\n      \"name\" : \"Dick Mayert\",\n      \"placeId\" : \"5x0t\",\n      \"languageCode\" : \"geobhlfdtymf7chv8pqjfu7gqj95hm6q8daotcugslmrts2gcnwyqfgi75kdknzm9oq2tj7ill6a6ttt6ky4falokrxhddtwujs2vvohzql8rkisbf2mskoadk8tku2qrfe75g7e3coco0tj2oqgjxnnt14mgz825fe2hezm0jz7a7mksrv5a41t4s6gvw2rj7\"\n    } ],\n    \"viewCount\" : \"r4m7gbgea8ar3xthmu6rhwifzw789upbkeqh7lf0r5r1bcp6xz2s3mwi0x3mv1f9nsr38ch12zufb4hqkak2he46i0v1n3rluip3ku3ha130o\",\n    \"mapsPublishStatus\" : \"PUBLISHED\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"45nx\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"n0q4\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"8342\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"nmmq\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"0uvb\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"d6es\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"gh37\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"5c7m\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/233517\"\n  }, {\n    \"transferStatus\" : \"NEVER_TRANSFERRED\",\n    \"captureTime\" : \"2022-12-03T09:11:32.86597Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-09-12T08:07:32.866009Z\",\n      \"altitude\" : 1.3049365289360726E308,\n      \"accuracyMeters\" : 1.9821685112132988E38,\n      \"latLngPair\" : {\n        \"latitude\" : 4.417753284291086E306,\n        \"longitude\" : 1.4758450197410746E307\n      },\n      \"heading\" : 1.6875092035468511E308,\n      \"level\" : {\n        \"number\" : 1.0301588542792055E308,\n        \"name\" : \"Will\"\n      },\n      \"roll\" : 1.2583103811687259E308,\n      \"pitch\" : 9.912603757314231E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/075350\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/736185\"\n    },\n    \"photoId\" : {\n      \"id\" : \"kt9t\"\n    },\n    \"shareLink\" : \"kqo9cipkufsxkmgff4w72hqd2deqpdipk4vl16ecf7kjyt8q\",\n    \"uploadTime\" : \"2023-02-05T09:42:32.866335Z\",\n    \"places\" : [ {\n      \"name\" : \"Cleo Wolf\",\n      \"placeId\" : \"56on\",\n      \"languageCode\" : \"8fgxfndi5x0ifab2ve6azix54w5xxfu1ov5ola8aflj5gmi\"\n    } ],\n    \"viewCount\" : \"i3mgktev3ejz5wlzy8eqonn7rl0jldwntl7l4uxjlp20mdxephr19tfea1boz6uw5ulzizxqh462if6eazqaoayqkztg0b3v1p6o4wknadb0zrclzgzprhzex92u6n77\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"80tl\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"536n\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/967356\"\n  }, {\n    \"transferStatus\" : \"PENDING\",\n    \"captureTime\" : \"2023-03-12T11:13:32.866778Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-08-28T10:17:32.866814Z\",\n      \"altitude\" : 1.9031652752987413E307,\n      \"accuracyMeters\" : 1.8432262904907257E38,\n      \"latLngPair\" : {\n        \"latitude\" : 8.867304592102177E307,\n        \"longitude\" : 1.3782887206327722E308\n      },\n      \"heading\" : 4.548572745994569E307,\n      \"level\" : {\n        \"number\" : 4.2520704294690183E307,\n        \"name\" : \"Balistreri\"\n      },\n      \"roll\" : 4.560908061202514E307,\n      \"pitch\" : 1.7154456058112336E308\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/395951\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/719007\"\n    },\n    \"photoId\" : {\n      \"id\" : \"6grv\"\n    },\n    \"shareLink\" : \"f2q6q6qcyjd21whkgykhsixa1acgbmmo2bauzwtsohdtqduypfanytpzi2dfdzoev9eouhjn2opqiqvojz8pkyne4qd6pl\",\n    \"uploadTime\" : \"2023-03-05T11:50:32.867141Z\",\n    \"places\" : [ {\n      \"name\" : \"Miss Aurelia Cummings\",\n      \"placeId\" : \"82r6\",\n      \"languageCode\" : \"xgllenuwu2j861zz6ywu2vv1451z4ev9w82einanj90irql1faifvvn6a4llbs1y2ay9\"\n    }, {\n      \"name\" : \"Luigi Armstrong IV\",\n      \"placeId\" : \"77ai\",\n      \"languageCode\" : \"2gz7wsvwrvwaajvge7e7j4sjktgs6jz8iujqe7pmzehkxxd87ggrxtm3osadh3vzifki26fusapx80caia9ecjdyml81t6a6drfd0ldid\"\n    }, {\n      \"name\" : \"Ms. Maurice Brakus\",\n      \"placeId\" : \"7vnp\",\n      \"languageCode\" : \"8vkd13ti5li6agpaphj1\"\n    }, {\n      \"name\" : \"Faustino O'Connell\",\n      \"placeId\" : \"0dxm\",\n      \"languageCode\" : \"i9941ww8ohzws\"\n    }, {\n      \"name\" : \"Miss Roscoe Haag\",\n      \"placeId\" : \"gaaq\",\n      \"languageCode\" : \"toguqfuc7h39w\"\n    }, {\n      \"name\" : \"Soila Kshlerin V\",\n      \"placeId\" : \"54x2\",\n      \"languageCode\" : \"1sepntmndonft3r4tp4ws3nhwwllzz0zyq7rhxv2sfeo8dpj2eup131p3dpjhb8j4mz\"\n    }, {\n      \"name\" : \"Winston Casper Jr.\",\n      \"placeId\" : \"3pov\",\n      \"languageCode\" : \"se5qurk9aijwd3g\"\n    } ],\n    \"viewCount\" : \"em5mozxf5scjpkt4qopfcyli2nw0zwlhontrrb3j0gl44jppvvh6hhwj5kttdxpql9zw6tnhxm1el\",\n    \"mapsPublishStatus\" : \"PUBLISHED\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"0hzm\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"rk2k\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"j0ta\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"2v35\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"9108\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"co0u\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"qun2\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"mlpb\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/137039\"\n  }, {\n    \"transferStatus\" : \"COMPLETED\",\n    \"captureTime\" : \"2022-12-24T11:50:32.868875Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2023-02-11T08:43:32.868916Z\",\n      \"altitude\" : 1.4489242651772365E308,\n      \"accuracyMeters\" : 1.5630630914912333E38,\n      \"latLngPair\" : {\n        \"latitude\" : 1.62941848987582E306,\n        \"longitude\" : 6.413233450684982E307\n      },\n      \"heading\" : 2.3479438511530675E307,\n      \"level\" : {\n        \"number\" : 4.814978460783982E307,\n        \"name\" : \"Kutch\"\n      },\n      \"roll\" : 1.4435168135251588E308,\n      \"pitch\" : 8.528819949826747E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/694230\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/239900\"\n    },\n    \"photoId\" : {\n      \"id\" : \"edp7\"\n    },\n    \"shareLink\" : \"prv96zyuzxz5z6l1qdoa4m5gqx8hom8m4loq79qf9ihfjncwu7lent4973lmcoxappm1rddate2cwgbm4altbsoa0mjry8kibvyxrgous51bd8feak5v4bbn9j1wvdvfirnqn5ksc3z4jv5i4rp873sze0jiv8wp65xxj1nkr1nvhffkoywdc467vim85o\",\n    \"uploadTime\" : \"2022-09-19T09:19:32.869242Z\",\n    \"places\" : [ {\n      \"name\" : \"Hyo Thompson\",\n      \"placeId\" : \"v6m5\",\n      \"languageCode\" : \"wkq2715kg7mn171ipmfnmmwfwi5m6rli7u40y2tujj90m52irfgohr81nq2n1yljz8e5lw1y346es1cuf5si9vd1idzta7qnwh1onyge95cqi5au\"\n    }, {\n      \"name\" : \"Hipolito Shanahan\",\n      \"placeId\" : \"94la\",\n      \"languageCode\" : \"h2myytz8wntruxofn0iwefy9gfv1czft2nhbv71ws2ugq6ufhjq0xrkn\"\n    }, {\n      \"name\" : \"Hobert McCullough\",\n      \"placeId\" : \"u6d5\",\n      \"languageCode\" : \"5mvexvpvgj2cv03ky0vc6i109qqcq1h7m3b1j96hj7xhgqrykcld5spksuuzqlanvbwhuuv0m37vhx3q01ro7d4blce2\"\n    }, {\n      \"name\" : \"Andy Macejkovic\",\n      \"placeId\" : \"v607\",\n      \"languageCode\" : \"2g37v5gtp2shvb1xzw2rrrjx81t8kw5zyq7cwqcd1slxdvn6urxac6x6y48ng6vhxfmr2v5k8pyw40fear9y9dug8hwrc7ul27ws17b27biqlq12topebftro4lhbuk6di0opapzhcig8w5m9q629x8y\"\n    }, {\n      \"name\" : \"Andre Schimmel\",\n      \"placeId\" : \"8kf7\",\n      \"languageCode\" : \"t0h8twbxu93f6ez3x63kn98ahe847qeqp0c8pvvo1uczcatnkzqkcw1tphqav51x99p691pk3kf9xmedny2w4\"\n    }, {\n      \"name\" : \"Eduardo Herman PhD\",\n      \"placeId\" : \"40aa\",\n      \"languageCode\" : \"6zflb5du8pibdhbv6p5r03xkxvifvehxm\"\n    }, {\n      \"name\" : \"Anjelica Watsica\",\n      \"placeId\" : \"114q\",\n      \"languageCode\" : \"vluul5asqqc6dn93ezzayo6cqyd7jq2zr5fd99mufk6hdkoiz70gbn0m12b308scpeau0og5cqavctbqscyahevjkg2k70wki6fmbhh8othocswo1sv096e2u5m24hk862684gvobtfxcsljwd4nxitop5n6bn2\"\n    }, {\n      \"name\" : \"Kris Hodkiewicz\",\n      \"placeId\" : \"2kb7\",\n      \"languageCode\" : \"zp45qq4cuutrenzx8e4hkymfst3ksehkdu8l3rlnmosb1yatv65ugnu86fyshuhmw93b860us18teo029tgzy421pkoy2zempt318jmjo0scgx1n2n1li1qoku4ay41dojm459233\"\n    } ],\n    \"viewCount\" : \"wss3d74g61dblnit0gb5xq52oboq2wcfbdk50z5z6e0orubaem2vrw8edkilrsjxqpf3cgs7wsea7rb63ks5r9k2cbwy7wkn93fb168wnwyv875z9vz\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"e3zs\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/182448\"\n  }, {\n    \"transferStatus\" : \"EXPIRED\",\n    \"captureTime\" : \"2022-08-14T08:43:32.870556Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-06-26T10:43:32.870597Z\",\n      \"altitude\" : 1.1785603343628849E308,\n      \"accuracyMeters\" : 3.322259254186737E37,\n      \"latLngPair\" : {\n        \"latitude\" : 4.1621974506236914E307,\n        \"longitude\" : 1.361269257294283E308\n      },\n      \"heading\" : 6.77627141645911E307,\n      \"level\" : {\n        \"number\" : 1.5814151541688116E308,\n        \"name\" : \"Huel\"\n      },\n      \"roll\" : 5.051739850675137E307,\n      \"pitch\" : 7.703483521098828E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/419531\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/889903\"\n    },\n    \"photoId\" : {\n      \"id\" : \"c9o1\"\n    },\n    \"shareLink\" : \"u4xww2jp02l5tt5yn3mib308bh7iofiwcj83oeppzej1e53z8dalx8gxf5ivx6pv59rb5udchn6zfbgo9gd7u8dq8kjjt4mqffb5ej086wfjn29by2ao5m7e2pogk54y4l2rojatm79l4294j1htiumitxgtzqcumfaeu4usp676ewxswm64ut5d9hexutlvu\",\n    \"uploadTime\" : \"2022-05-12T09:32:32.870922Z\",\n    \"places\" : [ {\n      \"name\" : \"Henry Huels\",\n      \"placeId\" : \"u2o1\",\n      \"languageCode\" : \"zvxqsvi2d2aqe81vbos8arpcla7pbpo5en8ymba9n8im9e9o1hqp7g2d63a9xi6uwulw415p82hibj9mb4f1p9j54gqxx483sqwksyhhwuu52j0aalkq4zsswfq3n0c3jxsm7poa9mfb4ra7a05\"\n    }, {\n      \"name\" : \"Leena Ziemann Sr.\",\n      \"placeId\" : \"6q75\",\n      \"languageCode\" : \"uiimff1pftvx3rgomvfvh2a1r9u5\"\n    }, {\n      \"name\" : \"Sydney Ledner\",\n      \"placeId\" : \"6e82\",\n      \"languageCode\" : \"x2dzap2v9876ibug89nt9\"\n    }, {\n      \"name\" : \"Wyatt Goldner\",\n      \"placeId\" : \"0k15\",\n      \"languageCode\" : \"89ddy1iay91h97oooais3oh0lzq39dqaorht4uhgmu4ot1pkqddhnujh8lj7ildd5b448nuxf73d4km2a4duwdwuvxibgvcdpuf0empgcjv2iyqh\"\n    }, {\n      \"name\" : \"Winford Simonis\",\n      \"placeId\" : \"4wi2\",\n      \"languageCode\" : \"wggman6rgfsi23gexbogk2ng7atk1na4jdqszoombq5iqwc2gr5b3x3ve8zvuz7x30zap37p6wpc50vdflqilhqlu63q4kk2zcuu1cw6o0u8insiwkpb7gtyzp1c9am0t65alrppu36ih5vhla5z3sjbe1\"\n    } ],\n    \"viewCount\" : \"z8ommnavxezl4wxkgi6wwrhh9x9e6yekwq99i5445t703elw2if6w1wwliik4hhwrn7mnwc65ojak2tfnfaiami6lxv6d7qrs9kj8wuivoh9q30pcaby7pecun\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"5m01\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"o83m\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"98go\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"7du9\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/597485\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8a19890-9dfc-448a-88d6-d0423945661a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.872192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.list",
          "schema" : {
            "description" : "Response to list all photos that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photos" : {
                "description" : "List of photos. The pageSize field in the request determines the number of items returned.",
                "items" : {
                  "$ref" : "#/components/schemas/Photo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "94b3b748-4f51-4f95-a107-7b71ca497881",
    "name" : "Lists all the PhotoSequences that belong to the user, in descending CreatePhotoS...",
    "request" : {
      "urlPath" : "/v1/photoSequences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"photoSequences\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Joane Kozey III\",\n    \"error\" : {\n      \"code\" : 1384636633,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Officia praesentium necessitatibus cumque quibusdam laboriosam ipsa minima. Maxime in veniam. Quod dolor et quam minus quod a dolores. Aut sint saepe et veniam fugiat. Esse est beatae molestiae offici\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Brian Smith\",\n    \"error\" : {\n      \"code\" : 1393781341,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Consectetur a assumenda. Iure nam aut id et quas ad voluptatibus. Ad fugiat id. Dignissimos quod non recusandae aut exercitationem. Cupiditate doloribus pariatur molestiae qui.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Rogelio Huels\",\n    \"error\" : {\n      \"code\" : 1602553838,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Aut necessitatibus soluta est. Quae maiores iusto voluptas ipsa. Unde esse soluta beatae eius.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"92dcrqvpkihrd1fphpkqs1pksavk0ef61ihkxuxuuvin748nmmslyvv8tetrrq2m5p77lzumvwixwqp9bo5awlntrlt8r8fa43bauf50yti70ofl7o64e00p4vi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94b3b748-4f51-4f95-a107-7b71ca497881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.863648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequences.list",
          "schema" : {
            "description" : "Response to list all photo sequences that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photoSequences" : {
                "description" : "List of photo sequences via Operation interface. The maximum number of items returned is based on the pageSize field in the request. Each item in the list can have three possible states, * `Operation.done` = false, if the processing of PhotoSequence is not finished yet. * `Operation.done` = true and `Operation.error` is populated, if there was an error in processing. * `Operation.done` = true and `Operation.response` contains a PhotoSequence message, In each sequence, only Id is populated.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "99ea59a4-30e1-49c1-ab18-d22c3b71f00e",
    "name" : "Creates an upload session to start uploading photo sequence data. The upload URL...",
    "request" : {
      "urlPath" : "/v1/photoSequence:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/139479\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99ea59a4-30e1-49c1-ab18-d22c3b71f00e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.863072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "1881c928-2f8c-49cb-b55c-b357c84eb734",
    "name" : "Gets the metadata of the specified PhotoSequence via the Operation interface. Th...",
    "request" : {
      "urlPath" : "/v1/photoSequence/2c61",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Eduardo Satterfield\",\n  \"error\" : {\n    \"code\" : 1192164437,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Qui enim id nam dolorem commodi. At dolor dolore error aut quia expedita. Magnam ratione tempora voluptas cupiditate et consequatur. Voluptatum ex in.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1881c928-2f8c-49cb-b55c-b357c84eb734",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.862963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "108e47e1-5033-482c-be4f-00d0ec83e2fd",
    "name" : "Deletes a PhotoSequence and its metadata. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photoSequence/7mpo",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "108e47e1-5033-482c-be4f-00d0ec83e2fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.862664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "053ce082-49e0-48fa-83dd-cf5bc56e0ecb",
    "name" : "After the client finishes uploading the PhotoSequence with the returned UploadRe...",
    "request" : {
      "urlPath" : "/v1/photoSequence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Hilma Predovic\",\n  \"error\" : {\n    \"code\" : 1705599991,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Dolorem et suscipit dolores est animi magnam numquam. Tempora eos esse sed. Et temporibus eos et laboriosam corrupti veniam at.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "053ce082-49e0-48fa-83dd-cf5bc56e0ecb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.862552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "faf8f140-8e35-4df9-8236-75b0f3551801",
    "name" : "Creates an upload session to start uploading photo bytes. The method uses the up...",
    "request" : {
      "urlPath" : "/v1/photo:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/777949\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faf8f140-8e35-4df9-8236-75b0f3551801",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.862271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "b6016e64-a63b-4bc9-82d1-d295541028ae",
    "name" : "Gets the metadata of the specified Photo. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photo/p7hg",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"COMPLETED\",\n  \"captureTime\" : \"2022-06-20T09:25:32.860412Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2023-02-06T10:53:32.86045Z\",\n    \"altitude\" : 1.4697725585357276E308,\n    \"accuracyMeters\" : 8.980912650662963E37,\n    \"latLngPair\" : {\n      \"latitude\" : 8.637974019067086E307,\n      \"longitude\" : 6.081058123616578E307\n    },\n    \"heading\" : 3.3047693227622145E307,\n    \"level\" : {\n      \"number\" : 5.408340984659366E307,\n      \"name\" : \"Volkman\"\n    },\n    \"roll\" : 1.6758929498739688E308,\n    \"pitch\" : 2.693363487151716E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/954363\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/884728\"\n  },\n  \"photoId\" : {\n    \"id\" : \"i55d\"\n  },\n  \"shareLink\" : \"t4tk0tz5xy85wufhhbgu3djo6a5j84ambbimb0q8av0fqvsx1r74s9mwty7sjf6q91vl\",\n  \"uploadTime\" : \"2022-05-16T11:24:32.860762Z\",\n  \"places\" : [ {\n    \"name\" : \"Mindy Hoeger\",\n    \"placeId\" : \"bt82\",\n    \"languageCode\" : \"w8flamzcyvlvq30jhbi5erfg9stctahptuspqbrv97tpjo6l99h86jkgw60wq1o2dtrorbu0\"\n  }, {\n    \"name\" : \"Erick Weimann\",\n    \"placeId\" : \"6kz2\",\n    \"languageCode\" : \"dtf08472j26nrcx5qoj90k3leb3kn6vxs\"\n  }, {\n    \"name\" : \"Sammie Stokes V\",\n    \"placeId\" : \"1q33\",\n    \"languageCode\" : \"2d4aaw7s0fka2v8tlgw4d99vq8jeasymgzvs09f0zju0ysd35et5thstf6vidfrb0wq2wp6svloz8njt4t8p9st872mucvs2wetc4nyqszgoxge2204qf997jbf0z9b2s18qms6zrbsxj6rzyayyhwub2srdqf6l5vz1o22j8b5wn5lvxwe8dmqvx3ie\"\n  }, {\n    \"name\" : \"Douglas Murazik DVM\",\n    \"placeId\" : \"rh3d\",\n    \"languageCode\" : \"i0bafxcmtzaijmg8nkmcrh9veum0309g3f9rrq7vjhf5mmaj629zz3uzcjf6twkchoe69l6g26ksskmvnbs8ntyhldw752ue33th9j7ky6nja\"\n  } ],\n  \"viewCount\" : \"4yvhh1fy9nhs5voqqrp4etpeajdjraqwevxhgp96fkssdnbmbeejpexq5hlypwadbsxjc9nwgd6ay0du8tn2m6b89mz620u1lbkw8lelsec4s\",\n  \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"982k\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"ly87\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"03sg\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"1tb5\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"7yv2\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"0byd\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"b6a2\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/326819\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6016e64-a63b-4bc9-82d1-d295541028ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.862138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.get",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "dcf81042-1470-4140-97e1-3b9c0ac7cb02",
    "name" : "Deletes a Photo and its metadata. This method returns the following error codes:...",
    "request" : {
      "urlPath" : "/v1/photo/rdfp",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcf81042-1470-4140-97e1-3b9c0ac7cb02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.860365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "3dfaf8fd-62a5-4607-9978-faa03140452e",
    "name" : "Updates the metadata of a Photo, such as pose, place association, connections, e...",
    "request" : {
      "urlPath" : "/v1/photo/2td0",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n  \"captureTime\" : \"2022-05-25T10:14:32.858828Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-12-22T11:24:32.858866Z\",\n    \"altitude\" : 1.256584954524431E308,\n    \"accuracyMeters\" : 1.2385962224490571E38,\n    \"latLngPair\" : {\n      \"latitude\" : 5.6085713242913755E306,\n      \"longitude\" : 8.788752260193856E307\n    },\n    \"heading\" : 1.7521474726828766E308,\n    \"level\" : {\n      \"number\" : 1.0947884256227972E308,\n      \"name\" : \"Lockman\"\n    },\n    \"roll\" : 8.916964182012687E306,\n    \"pitch\" : 3.2235213784937045E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/476575\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/087246\"\n  },\n  \"photoId\" : {\n    \"id\" : \"4u8a\"\n  },\n  \"shareLink\" : \"1u1xm92tuj07c9jlxjc9uacvon5if6gm4puzxvjzzi4yuot7627b5hcyyim7wrxab81sh5bm5pk67o1icmetfv2ltz8vur8i2itybvkpkka07smsvnh1qqfzru3w0hni3wzxbk9iawarx9ggk1b3kf58bfaf8axissn0h2mg1g\",\n  \"uploadTime\" : \"2023-02-09T09:02:32.859189Z\",\n  \"places\" : [ {\n    \"name\" : \"Dalia Gutkowski\",\n    \"placeId\" : \"rizr\",\n    \"languageCode\" : \"35svbt0tvj5zfadgsh5hs8fti6e7c1q40ukak5mciiobwpi7huug75e8s8r6cr50t4zu6hjk2rveldjjg2zjicilrah615psjnwsy8vj46hzb\"\n  }, {\n    \"name\" : \"Marylyn Goldner\",\n    \"placeId\" : \"m5oo\",\n    \"languageCode\" : \"gyb5gzg8g849q93v3of5zahsbpsgo1n51lnx9xoff35ebqsli75fn76gorrb8s3i6yfgw0x5j4mdyh6jbf0g9ck10loyv3fpg9bnzf7yh55k0h1cvqdnue5mcdsbv2ymztyrgm8lk0btzvtl59vsv0ssotj0n4p42slvpyqvp6\"\n  }, {\n    \"name\" : \"Leif Bartell\",\n    \"placeId\" : \"4903\",\n    \"languageCode\" : \"r369z0nkltkqow0kot0w4330cw6g5p2m2qlh474n4025ezjx63cmewq1quyvz7b8w6420qpmytppvqfn95hz0y7bxvpmkwn3cyi43oj58jxs\"\n  } ],\n  \"viewCount\" : \"bq2udbng2uqbdp6zift8zctj39cx5lfbgr6c09iblx94wmkmlj31g8w5tai33ydjmefsp9r52c70dprtgb4l5c74bh3qywfiagutf5tiq71n6mxcaggjrnlxux1l6a6jchk7s8w35q672yddga\",\n  \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"k6a7\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"0e3p\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"53t0\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"tae4\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/318232\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dfaf8fd-62a5-4607-9978-faa03140452e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.860238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.update",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "e2a9772e-372c-4e5c-a5fd-f76d4f4e8d46",
    "name" : "After the client finishes uploading the photo with the returned UploadRef, Creat...",
    "request" : {
      "urlPath" : "/v1/photo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"EXPIRED\",\n  \"captureTime\" : \"2022-11-08T08:46:32.857284Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-09-25T10:39:32.857331Z\",\n    \"altitude\" : 1.4251873574989868E308,\n    \"accuracyMeters\" : 3.3871531305201128E38,\n    \"latLngPair\" : {\n      \"latitude\" : 1.4539329779090805E308,\n      \"longitude\" : 1.0784488945440532E308\n    },\n    \"heading\" : 1.011054786306691E308,\n    \"level\" : {\n      \"number\" : 1.129768892826988E308,\n      \"name\" : \"Murphy\"\n    },\n    \"roll\" : 3.4253599430847756E307,\n    \"pitch\" : 8.232878914576437E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/744924\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/104105\"\n  },\n  \"photoId\" : {\n    \"id\" : \"ygl7\"\n  },\n  \"shareLink\" : \"u5td7859c5ta0qaeenoub8ymottng07kc7tkxv2z8xaop33s9e41t8ga4d7ne07t801k10z1igmn1yeijuy7wqyrtq131wrlmgj526a7rg7hkfo0xbfty9ve3ly3m0znx2hsqxag64612zsc3x39c6zn1qwgrdski4ovgm7d7z7jrui7cz6xjcf9z9dclqdgwh\",\n  \"uploadTime\" : \"2022-06-06T09:03:32.857728Z\",\n  \"places\" : [ {\n    \"name\" : \"Jerrold Anderson\",\n    \"placeId\" : \"8em2\",\n    \"languageCode\" : \"1a1n5h2vaixlnp9a53bo332txef50y6lzafk9svk7m62lvyv19vvtujxb8gp2w9eb0efq584zztuhqgpbreraiehf6myhnb4y6qk0gd27mrdsxz1df8ma4qeg04s090ctd7jjzubona4ddf10adamhkg4xa0go3palto8cmq4m0\"\n  }, {\n    \"name\" : \"Gretchen Volkman\",\n    \"placeId\" : \"i2m1\",\n    \"languageCode\" : \"iic27rhc9uh9r3up4y9apnd4tlvnp92p4qjv8z3lsx\"\n  }, {\n    \"name\" : \"Celsa Lebsack\",\n    \"placeId\" : \"go86\",\n    \"languageCode\" : \"ojxfaalp7vcykwvpk72yzpbz3bytvgl7\"\n  } ],\n  \"viewCount\" : \"2m371nehq9dxjs7knrfaquepwpqcijeegr9dyn6oermhw9970av0q6kf0cai5u2rdtwtks\",\n  \"mapsPublishStatus\" : \"PUBLISHED\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"t891\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"g343\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"g24i\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"o42z\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/100460\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2a9772e-372c-4e5c-a5fd-f76d4f4e8d46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:32.858762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.create",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}