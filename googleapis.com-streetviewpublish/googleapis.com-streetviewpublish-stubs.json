{
  "mappings" : [ {
    "id" : "62ce5885-4bc8-4d96-98e5-cf61cd9570d1",
    "name" : "Updates the metadata of Photos, such as pose, place association, connections, et...",
    "request" : {
      "urlPath" : "/v1/photos:batchUpdate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"CANCELLED\",\n      \"captureTime\" : \"2022-10-07T18:13:06.250045Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-01-20T17:54:06.250082Z\",\n        \"altitude\" : 1.0255564629448484E307,\n        \"accuracyMeters\" : 7.218395151396011E35,\n        \"latLngPair\" : {\n          \"latitude\" : 1.3358973309863114E305,\n          \"longitude\" : 1.2867733854605093E308\n        },\n        \"heading\" : 1.2326595873674573E308,\n        \"level\" : {\n          \"number\" : 9.869960488514613E307,\n          \"name\" : \"Torp\"\n        },\n        \"roll\" : 1.3151816570827714E308,\n        \"pitch\" : 9.120058757782301E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/148969\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/126718\"\n      },\n      \"photoId\" : {\n        \"id\" : \"z881\"\n      },\n      \"shareLink\" : \"hhnl0cg6y62gbj9uite9cnxrlvipj4zwrufe028tjp0a5e2knxc6jstvec1legci6u0ckq4b9axyxgp2bnj7p8m950u2s803k2no90jq0ancy\",\n      \"uploadTime\" : \"2022-05-05T18:39:06.250404Z\",\n      \"places\" : [ {\n        \"name\" : \"Despina McKenzie\",\n        \"placeId\" : \"fpj5\",\n        \"languageCode\" : \"l1mrfljcqfv3m65wiqqup2479h8676rebpztnd\"\n      }, {\n        \"name\" : \"Buffy Hilpert\",\n        \"placeId\" : \"4ivd\",\n        \"languageCode\" : \"g1webt1km0avesy82fc9wupbal7hj4yx20mgyzum3vowd6x6ajclrxzt8tb5hzeoe66gx9wqrd241oy3\"\n      }, {\n        \"name\" : \"Bruce Harris\",\n        \"placeId\" : \"n400\",\n        \"languageCode\" : \"twvulpi0ic1c7ap5ryp5r0l35tl3qy4w2wwsxblk2n9ehdqu7f8dhgvla3o6lukd3iu4a2elkq093v\"\n      }, {\n        \"name\" : \"Garth Hermiston\",\n        \"placeId\" : \"30s3\",\n        \"languageCode\" : \"a3rmsflkq4htbts0kd23lq2g4ccr1rwxl7n1q0hy5raoj5mj6ep34wl6uqpxisy3jmxz\"\n      } ],\n      \"viewCount\" : \"3sjfn5v0iewqi5tr27g9486vwt8d16larr4ujh5h20pv0j5ui1\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/175442\"\n    },\n    \"status\" : {\n      \"code\" : 627598171,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Non harum eius sunt ut. Autem nam dolor qui est repellendus labore possimus. Ut quaerat ut. Fugit iure minus rem. Cupiditate eum occaecati ratione voluptate.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"COMPLETED\",\n      \"captureTime\" : \"2022-07-29T17:11:06.251148Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-06-30T16:53:06.251185Z\",\n        \"altitude\" : 5.566722580787658E307,\n        \"accuracyMeters\" : 1.3277200476476952E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.6093529352673317E308,\n          \"longitude\" : 6.470222643145945E307\n        },\n        \"heading\" : 1.6063416467202657E308,\n        \"level\" : {\n          \"number\" : 1.2077182396399052E308,\n          \"name\" : \"Harvey\"\n        },\n        \"roll\" : 9.67454697991986E307,\n        \"pitch\" : 1.5543424113935504E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/080173\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/415480\"\n      },\n      \"photoId\" : {\n        \"id\" : \"kb3k\"\n      },\n      \"shareLink\" : \"j886hzfyjm6fwp6c7jbb4ajcwjd05fxsqdqrofarbaxsgxda\",\n      \"uploadTime\" : \"2022-06-09T17:30:06.251496Z\",\n      \"places\" : [ {\n        \"name\" : \"Numbers Schmidt\",\n        \"placeId\" : \"d20b\",\n        \"languageCode\" : \"1pgex9sbyflnfnxlcdpzsmyw1wctp6cj0rgw36ernnyxigwh56yg7oq3fi88fd4nvzjdj99ea9mwdktljyri1iw8vpugbcblyh85tvwhplhbrs0vwaom8wh2y\"\n      }, {\n        \"name\" : \"Benton Price\",\n        \"placeId\" : \"249t\",\n        \"languageCode\" : \"yk59hy70srbyzq7grdprqm1s96e5vsn1gm0bzk7mibav9sft2pwdw5o5lh3520l6bvvdh244emtxuj97vjz8rm7xlp99gmxewi0z2ymbj85k5qaun9k2bbywtfyokb9al4pyzuerbvlon1yzv0eutidp1zmuuilm7dtkbp0\"\n      }, {\n        \"name\" : \"Rey Connelly\",\n        \"placeId\" : \"jnn0\",\n        \"languageCode\" : \"7cqwwrhtc33165wtuowcnot9ezaqgeliw6d1vrgwp59opa6j90d69rhm3gge8h3jiuyrddu1bqdts5ms78qax6n4w6fqzixd978z7ypsw20d0pq814zyqmz1d5bv9x9odfs\"\n      }, {\n        \"name\" : \"Rayford Towne\",\n        \"placeId\" : \"yedd\",\n        \"languageCode\" : \"xj4g2j3qw8eowz3wmnyadyj93knchka6tgtjx0bm0ouvgnrigvuj5ipd4oc98s04j1xqbuhebhqn6wf50qn8tio7nfwdg4zl1zgrxw52v7uzkj98hjqj44ma51u70fy0qpj4ui76\"\n      }, {\n        \"name\" : \"Adelaida Cummings\",\n        \"placeId\" : \"aa5j\",\n        \"languageCode\" : \"g0b6ne2fyrzwhqqn81qwavizx3rp1jpmi4955ewpikirivt9cjtixcel9emkx99w0ttbaxun87k6lbacp988xmw\"\n      } ],\n      \"viewCount\" : \"yedrdzyj9a6tjuc0cuzfiq0nkotyz7basvrzz3vqp9cv9kjt5kjirdua8ymxuukmumwmwnrqq19p5xr9o8pqnu6s7joj3wkiz50gyynwfwm7103\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/754084\"\n    },\n    \"status\" : {\n      \"code\" : 1122726729,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"At incidunt in odit sed. Sit reprehenderit ut velit culpa et ut. Eveniet eum nesciunt.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-06-28T18:25:06.252316Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-06-13T17:27:06.252351Z\",\n        \"altitude\" : 6.814393456943592E307,\n        \"accuracyMeters\" : 2.3623704692219257E38,\n        \"latLngPair\" : {\n          \"latitude\" : 1.6539900578705543E308,\n          \"longitude\" : 8.569070484878922E307\n        },\n        \"heading\" : 4.255055369701577E307,\n        \"level\" : {\n          \"number\" : 3.2224395341182837E307,\n          \"name\" : \"Lowe\"\n        },\n        \"roll\" : 1.5130617416861705E308,\n        \"pitch\" : 1.1686503740534618E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/835966\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/007482\"\n      },\n      \"photoId\" : {\n        \"id\" : \"vluq\"\n      },\n      \"shareLink\" : \"6edrzes3psiq5d4weyv07lj9bmepg6gvhng2aqmyfe1fp6t4kjpf2wr8hn8rkpjukx6p61sq2y306cyc03o630salnss3a43ijvmhw17okuyslkqytovmu6w402rhhrocfnfpyuqsk8zffe7x75kneeh1\",\n      \"uploadTime\" : \"2023-01-03T15:10:06.252663Z\",\n      \"places\" : [ {\n        \"name\" : \"Marguerite Thompson\",\n        \"placeId\" : \"q3tk\",\n        \"languageCode\" : \"on1zite9q2na7is97btlc5tgto6xew0age9pjdz5ij6elyinbdkx0dph27odjctrdgcjmuocxt0zehjdnts3ri33f4z8xs0642x\"\n      } ],\n      \"viewCount\" : \"9yiv3ooprwp7623delnvs6tpwhen0uy058e7hkedrdhepbduzmvc9xcz6kylxg6qtqmlawd20fqcy86ug6ct1pvggj1h71bw7lqunq8orz4y6hwvnocz1egx2hzmifgiuorivvckxsrkg60vydn2lcos4b41h4w5l7cd0u509r49p3tx00nhgbbr6b12t\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/572450\"\n    },\n    \"status\" : {\n      \"code\" : 15333740,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Qui fuga culpa est minima reprehenderit quia iusto. In eos autem et eligendi non nisi. Quod rerum numquam rerum numquam deleniti quod odio. Qui ut ea quod et rerum tenetur.\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62ce5885-4bc8-4d96-98e5-cf61cd9570d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.253126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchUpdate",
          "schema" : {
            "description" : "Response to batch update of metadata of one or more Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo updated, in the same order as the request.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "08351b39-3b33-424d-905e-d3570de866ed",
    "name" : "Gets the metadata of the specified Photo batch. Note that if BatchGetPhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"photo\" : {\n      \"transferStatus\" : \"EXPIRED\",\n      \"captureTime\" : \"2022-08-08T16:33:06.240865Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-10-20T18:40:06.240908Z\",\n        \"altitude\" : 7.516250013413143E306,\n        \"accuracyMeters\" : 7.070643643198766E37,\n        \"latLngPair\" : {\n          \"latitude\" : 2.994649409944604E307,\n          \"longitude\" : 1.7099181039138862E308\n        },\n        \"heading\" : 1.749706990495918E307,\n        \"level\" : {\n          \"number\" : 7.680008792048288E307,\n          \"name\" : \"Feeney\"\n        },\n        \"roll\" : 3.874628460863448E307,\n        \"pitch\" : 2.1147130647654634E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/740432\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/437409\"\n      },\n      \"photoId\" : {\n        \"id\" : \"0031\"\n      },\n      \"shareLink\" : \"omsnga81b8fntjj2wivum5l9xhs08ma3f4mpgs1ymoekjus5db0npftgkhtxrgphbekezudy2dvuphu9dagld6qvbgyz1qqko3rldw8mo3x2iqgp7\",\n      \"uploadTime\" : \"2022-07-23T16:05:06.241252Z\",\n      \"places\" : [ {\n        \"name\" : \"Ronni Turner\",\n        \"placeId\" : \"54ys\",\n        \"languageCode\" : \"11ngp8tils21sa4epzsnkgfgosrvetvlw9ru9lcm393i7fev77qnlsycfdtiwii1za9ccqy7kjb7puzk75isp7guxddyncqkxes18wd3yug8p7nms1wm1thigs82ydbpei1u9fvnk6qqdpak2zal1hbzde9ri1lya7alotqrez0o6psodzua1ktj5j9n714xmba09l\"\n      }, {\n        \"name\" : \"Jeannine Hilll\",\n        \"placeId\" : \"jp8n\",\n        \"languageCode\" : \"d64fy9cvna4f0iy5lkg3inau3adcgcz0n3036kte19nvsowaewf0iti1\"\n      }, {\n        \"name\" : \"Mrs. Lucio Marquardt\",\n        \"placeId\" : \"8r10\",\n        \"languageCode\" : \"mf71hfx75zbc82r779iqd3lydpwhx41m5qbbpkt6xdp2vpp6aht89uqgnhn03db\"\n      }, {\n        \"name\" : \"An Howell\",\n        \"placeId\" : \"lrg4\",\n        \"languageCode\" : \"ltk2lrsuftgdq3roi4c2plkh20cympo24k42he23t7vjptj3aqwu28ztrt3xxv3te6erx5mq2cis281vatlq3gwdd8jl4zp6hbn4eo6hqilco35fqhrftqpq01dmfiz\"\n      }, {\n        \"name\" : \"Liza Conn II\",\n        \"placeId\" : \"6l4a\",\n        \"languageCode\" : \"1spelevgl8002m7pfhsnnfqavwqds8xla8cptzj8tjx5xky6apncjtm79xfr720njx\"\n      } ],\n      \"viewCount\" : \"2d1sj6rpnqo9u9z10l9ejj2rp18\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/444144\"\n    },\n    \"status\" : {\n      \"code\" : 1505995699,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Culpa dolorum dignissimos sunt quas dolor. Exercitationem et numquam. Autem assumenda nam iure voluptatem omnis dolorem. Qui illo aut totam rerum molestiae. Maiores iste dolorem tenetur sapiente repre\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"NEVER_TRANSFERRED\",\n      \"captureTime\" : \"2022-12-13T18:54:06.242169Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-07-07T16:25:06.242209Z\",\n        \"altitude\" : 5.93887006248449E307,\n        \"accuracyMeters\" : 6.140713737522066E36,\n        \"latLngPair\" : {\n          \"latitude\" : 3.499146345427031E307,\n          \"longitude\" : 5.040211982244239E307\n        },\n        \"heading\" : 3.3020545141882344E307,\n        \"level\" : {\n          \"number\" : 1.500731051377024E307,\n          \"name\" : \"Kautzer\"\n        },\n        \"roll\" : 9.961475716614823E307,\n        \"pitch\" : 5.435448406187863E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/763983\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/107829\"\n      },\n      \"photoId\" : {\n        \"id\" : \"39lo\"\n      },\n      \"shareLink\" : \"uqwy6xrw3aiw2r5oppotjiorn0lc54a7pll5oszf9bw4le0n0xq4dxuj0wftigu4h0mvbwpii2vsmj62r13ptghdm0s4joja71bzxa9vlgfnvf4dho9ifjzf7wbhu9aamrn60uzwzc3e\",\n      \"uploadTime\" : \"2022-04-07T17:48:06.242533Z\",\n      \"places\" : [ {\n        \"name\" : \"Franchesca Bergnaum\",\n        \"placeId\" : \"nczn\",\n        \"languageCode\" : \"10k39yem3mlpkm7yv44us54xy7taw043t1f5k886fftioym0fnpe3wxe31z9los0x3j1ppizamy\"\n      }, {\n        \"name\" : \"Odilia Monahan\",\n        \"placeId\" : \"6652\",\n        \"languageCode\" : \"e8po5wd38pyktbfsyyuvdvahp\"\n      }, {\n        \"name\" : \"Mrs. Despina Kuhic\",\n        \"placeId\" : \"tkll\",\n        \"languageCode\" : \"hthmls7r5glordaevzlmeqbhyqod8w129lvl7p5rbyct97b4cofwg113i74s9jml0u6qlus7e80qz23feo4d7qfvcmaj2w4azihl77t0hgqaujg4efnv48nlxotc9wib8rha0km9o6mgn4vuvv04rlj6ogztv0g02yx0u\"\n      }, {\n        \"name\" : \"Wyatt Stokes\",\n        \"placeId\" : \"76dt\",\n        \"languageCode\" : \"1i5kvcahs03dmi27etxcib63ssygl4lijhm4wcfxtz9g44yn7p2oem0fvxazgla75z5dcss9v7xxpy7imqrn\"\n      }, {\n        \"name\" : \"Mrs. Joye Dickens\",\n        \"placeId\" : \"36cq\",\n        \"languageCode\" : \"juebjnd8vahr2bku4hbhjmkwuq4zavutq3yaa3dwyhed0im0vnx1v1pvmvcd5klwsq49w33yrmigmub1vzv3vql2etx1y7dsfi37gin3bx08ry7hjwln01hpbv155eiykv\"\n      } ],\n      \"viewCount\" : \"s18ejalezbmgpfe8nkzf9sayconwv1tiznibyxw7o669heuc7ofrso62xetd3ytvhbz4rebfm08vewnax4648cpbdht0k35in56bvuu60xqwxmi8sw2vtk62rsa97u0ce\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/242314\"\n    },\n    \"status\" : {\n      \"code\" : 471090703,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Iste tempora commodi velit consequuntur accusamus. Facere deserunt qui voluptatem quo soluta quod tempora. Ut voluptatum voluptas voluptatem accusantium. Dolor dolores porro incidunt at sed possimus. \"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"COMPLETED\",\n      \"captureTime\" : \"2022-03-09T16:04:06.243348Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-03-19T18:48:06.243388Z\",\n        \"altitude\" : 1.5477701670143142E308,\n        \"accuracyMeters\" : 1.3748108446098466E38,\n        \"latLngPair\" : {\n          \"latitude\" : 3.8682046787330314E307,\n          \"longitude\" : 4.148501206092039E307\n        },\n        \"heading\" : 1.7563312879870893E308,\n        \"level\" : {\n          \"number\" : 2.070654706677946E306,\n          \"name\" : \"McDermott\"\n        },\n        \"roll\" : 1.3590885591312981E308,\n        \"pitch\" : 1.0151937961341406E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/465690\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/132759\"\n      },\n      \"photoId\" : {\n        \"id\" : \"7193\"\n      },\n      \"shareLink\" : \"zbui274le53u6la4gylqw1sk5kjachswu27c4hx8dkovhmi76uxdtigsutdxspr1krm98txqmewprf0626h1m2jmjuoa5n106qs2zvn9f3cn9qciv99zko8u6c9yg9sx4z019wtehfu8ale6v46l\",\n      \"uploadTime\" : \"2023-02-16T15:03:06.243687Z\",\n      \"places\" : [ {\n        \"name\" : \"Virgil Lockman\",\n        \"placeId\" : \"ayc8\",\n        \"languageCode\" : \"g0kzr8uy2lmr6lh204n8wpfq326is5fmdl5fowtksuylrkrl7gsgwdhyujp32ra3ruzf8wrf5wcnngxhp2\"\n      }, {\n        \"name\" : \"Danyel Roberts\",\n        \"placeId\" : \"6xtf\",\n        \"languageCode\" : \"buyfyat9e98hmhlifg4mv7zk06t0xb1vv3lzepfiu15zinp7fyk7ygjym68lwq7yps57196tutbttcjy5ivqi1l358eydthynjcyjrdm6hq0pk6tki4ekh6casbswq6kv6rgp6pgiyeglyyurw2j21u9h67tajbujnu2509h5eb\"\n      }, {\n        \"name\" : \"Fabiola Reinger PhD\",\n        \"placeId\" : \"8603\",\n        \"languageCode\" : \"blsquiq3zcdk8n2ujyd3pjvtk3pjdwchultam21iqqf2l6vmc7opsri4vcs91ys2v0x7dnk1ab4dmr01jku6pthkf68yo3uucpr99kdzls9mgm0p3t1y47p92qe49hq34wsv3vtww481q71pg0gogby77v9d9yknz2fmta8kfrv9d2p9pa319fwmhahtgns\"\n      } ],\n      \"viewCount\" : \"l9z5q7hbiqvcyh1v5xixke4yj49vl0kqufh1oh6y781spkjcmr2zaerzmvama9ni\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/955293\"\n    },\n    \"status\" : {\n      \"code\" : 1840806006,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Et nam excepturi. Omnis et neque vel voluptatem. Eveniet dolor sapiente est laboriosam hic.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2022-07-07T15:22:06.244249Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-03-21T18:30:06.244283Z\",\n        \"altitude\" : 1.5146141543181578E308,\n        \"accuracyMeters\" : 2.9898133309665503E37,\n        \"latLngPair\" : {\n          \"latitude\" : 7.058366339061773E307,\n          \"longitude\" : 4.178069196649881E306\n        },\n        \"heading\" : 7.697773952015197E307,\n        \"level\" : {\n          \"number\" : 1.6709902815247687E307,\n          \"name\" : \"Huel\"\n        },\n        \"roll\" : 1.2125167988986014E307,\n        \"pitch\" : 3.1401253492246127E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/026236\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/323254\"\n      },\n      \"photoId\" : {\n        \"id\" : \"vuy1\"\n      },\n      \"shareLink\" : \"nq9yekwwfmrj5yquy1vf1vwfx1s0\",\n      \"uploadTime\" : \"2022-11-20T18:22:06.244582Z\",\n      \"places\" : [ {\n        \"name\" : \"Shona White\",\n        \"placeId\" : \"bm9c\",\n        \"languageCode\" : \"oxakxu12b3vdzb9laix5g4hxfq4j21m6ssm2vxz810exq7olaqg1a2ddn2picltxy31d5kovp7jnmtr4689sy3h9okq4wh99tdxp03o4guhm43ataokqouttbl6mcsfkf4p2zbvbyy48700c6m1313j7t1hp033tiu9cqvorfiskgxiee9ljse0apj33f\"\n      }, {\n        \"name\" : \"Zora Heidenreich\",\n        \"placeId\" : \"ho87\",\n        \"languageCode\" : \"and6i81mnmnp6fiecj7r6hw9znu6et17sfcgeu0popfrpl1xyav16ldu00nrlg8eevq4ntu1mly4tu2ty3hbk4p68z2dscf0hdk1fablt56giqr605wk18azbl40ixolvstsxhle193niwq0wc0lg0tvxx87jv862ud87qiim63wauh0mxdu23adnvqns5vt\"\n      } ],\n      \"viewCount\" : \"2whe1epnivbiwhrnm\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/692824\"\n    },\n    \"status\" : {\n      \"code\" : 878591586,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolore consectetur dolorem culpa nisi ut aut. Ut recusandae repellat sint non officia eveniet maxime. Ducimus hic in labore dolorum iste a blanditiis.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"CANCELLED\",\n      \"captureTime\" : \"2022-10-09T16:48:06.245026Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-02-18T15:11:06.24506Z\",\n        \"altitude\" : 1.6244851365363356E308,\n        \"accuracyMeters\" : 3.1630404317339795E38,\n        \"latLngPair\" : {\n          \"latitude\" : 6.872630647357273E307,\n          \"longitude\" : 4.4456341995029247E307\n        },\n        \"heading\" : 1.5953488059469294E308,\n        \"level\" : {\n          \"number\" : 5.885526486912611E307,\n          \"name\" : \"Schamberger\"\n        },\n        \"roll\" : 3.7645677346974026E307,\n        \"pitch\" : 8.303299151210196E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/228598\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/027291\"\n      },\n      \"photoId\" : {\n        \"id\" : \"x8v5\"\n      },\n      \"shareLink\" : \"jk2zmjr4zr0u8sf7preqc50ucpcpjdbrfuz5za85bnbg9vn7\",\n      \"uploadTime\" : \"2022-03-22T15:56:06.245353Z\",\n      \"places\" : [ {\n        \"name\" : \"Mrs. Shad Blick\",\n        \"placeId\" : \"ann6\",\n        \"languageCode\" : \"8qrxo81vf57ig1ksy46nwux2lxmo3j792k4y6pz5yrdgbj67t4gl0n7rjvffeswfr1vn5qbyw27h4di6o2loitt8zrary8sf259pc6j964o2ykgpklovo0ta7175x7wi3wpx8qkjyedm3sfzvly2z\"\n      }, {\n        \"name\" : \"Malinda Jacobson MD\",\n        \"placeId\" : \"io7s\",\n        \"languageCode\" : \"a1fcboii58atzbmc6uei2wi26ed054zvpl4zhtm7yoavuw0vqt6gaxg13rtyk1ldexmxv8moe2hmunvsh797vu3p4rf7meuaclzb1gydxye9f80qjgo1re2tdjl6o3z28jep\"\n      }, {\n        \"name\" : \"Miss Basil Bahringer\",\n        \"placeId\" : \"slu2\",\n        \"languageCode\" : \"s0ed0hu48vgq8j819l1t7sqt6yy7cc1gguky3vr0zgnc93lrnye1s6qz8k9nrza8vg9fxib5ysizru8ord6v9o4tkcy1si3bso3jnn4x0pu64b40nx76r1xzaqi60y7oo4xandy6nhf93f93wqaqzepcyiy9mvneb73d7\"\n      }, {\n        \"name\" : \"Nova Stanton\",\n        \"placeId\" : \"xg8g\",\n        \"languageCode\" : \"czwen7viumtfbur8c3yl4p05idsvgwyg3pgjq8xb5hjq1yivldba3qqtxhevsl8tck8t2r0qvydrkef3bix6qsvozx62442ush270wcu8izd683ee4093ysiqiz91fdovr7rzgefyxl5qht8q8cm87svfbub1vw6kzzruhhu7ean\"\n      }, {\n        \"name\" : \"Lucienne Kuvalis\",\n        \"placeId\" : \"911j\",\n        \"languageCode\" : \"iwfmrnr7nl7tkjd7yrk88whreo7kjlye270b25z438itvtv762uj6z8ygnab8e98jzrxkjpz0pqs7hjd5skxdxymx27fre4bh3l8du0knn8qz3xv67jz9mnauwh\"\n      }, {\n        \"name\" : \"Barrett Stroman PhD\",\n        \"placeId\" : \"0rem\",\n        \"languageCode\" : \"q0vz5z23gyut2dp3y1e0fq4t3gxfizydmhc79pky15mk7tbguje7bcjy8dsw2vkksdsltk4iqpc0dih72no858qatxit83bwrh1zu\"\n      }, {\n        \"name\" : \"Clayton Ratke Jr.\",\n        \"placeId\" : \"gho3\",\n        \"languageCode\" : \"lj8v4ki0o6khnqut964g4xg8qwhgkk6wv260v6eydn6zbvdqbhfa1t1d2cz5a8jiix3fsw5v72isd\"\n      } ],\n      \"viewCount\" : \"tbztkbsjznr7i3r67gow876\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/253604\"\n    },\n    \"status\" : {\n      \"code\" : 396594923,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Eaque molestiae temporibus architecto deserunt modi. Sapiente et consectetur. Aspernatur eius dolor. Maiores eveniet facilis nemo minus magnam.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"TRANSFER_STATUS_UNKNOWN\",\n      \"captureTime\" : \"2023-02-16T18:09:06.246468Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-08-09T16:17:06.246505Z\",\n        \"altitude\" : 4.594778593216278E307,\n        \"accuracyMeters\" : 5.3132686560370396E36,\n        \"latLngPair\" : {\n          \"latitude\" : 1.1088301912863442E308,\n          \"longitude\" : 1.3432159426157082E308\n        },\n        \"heading\" : 1.0969501802873208E308,\n        \"level\" : {\n          \"number\" : 8.602222728590352E306,\n          \"name\" : \"Torp\"\n        },\n        \"roll\" : 4.2082252595956156E306,\n        \"pitch\" : 2.706318965516442E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/348788\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/975589\"\n      },\n      \"photoId\" : {\n        \"id\" : \"04b3\"\n      },\n      \"shareLink\" : \"u5xoobialos0sby1o0bh04xjj5qldsyvh8ph1wbp8yity78f3jmn2xoywgqo6chk4wgt4aydbqxevh09j8u6rk433hlszowo2cygdwz832d4mojwn4oe8rnmpqakh0czmkcinrefbw4pwk2btlr8prq601exof6d6s5o\",\n      \"uploadTime\" : \"2022-10-19T15:56:06.246827Z\",\n      \"places\" : [ {\n        \"name\" : \"Everette O'Keefe III\",\n        \"placeId\" : \"0z73\",\n        \"languageCode\" : \"ym8\"\n      }, {\n        \"name\" : \"Elida Dicki V\",\n        \"placeId\" : \"zhdi\",\n        \"languageCode\" : \"44xdkizz0l97uq3kvorncbs4o7gqegt2gwztfq4j22upj6zydobmvtmwejhamu6bjdglzkgg1ab482avuvd741lvbmfclux8uzbbvaoz8no2evu6whv9j2a6i270fd2ysadt2r7zo2c59ti0v2ekc53hz\"\n      }, {\n        \"name\" : \"Cristine Effertz\",\n        \"placeId\" : \"s05m\",\n        \"languageCode\" : \"xbcsznncqypkmdh9cuvb3myt3xs47i9k40g7rxqwoy1wqwedzm43o7ksdf263eucg5k49i5tz22yfq0m8cnmfsloqr2h7f9wzhy2b84ar3zjqnu0qjz45hvn6athe9syqwc6hozc89pmy7dozr8et9b4dzml83pbar64k\"\n      }, {\n        \"name\" : \"Dorthy Nader\",\n        \"placeId\" : \"t0ho\",\n        \"languageCode\" : \"8588oqoqv8us0zesh3yt6kwkd0zh7d4kjy8iobkbytlex7nek8addybuqpqot9plxg1h0k4peqqbvkx9ixl1er6spmh4tcaq2tr6b9e7d8obqnilwiasd20864s5cvvbrztqvbwlpykym2pfo2qoxvoeyiqzucc7vmb3mggcaei83j5ih2dwoq0yghwlm1\"\n      } ],\n      \"viewCount\" : \"9wedrluluz6uj2tyxd3ol2yok0sc9jy9r8050lkpc7xjr6mypa1u36hoojf2gbc3ibu61eaxzvt35afb708wgqr9rh50yoeoc1jtex86bvu5o91lakoxf5edx5x77lep2vz6ge9y8g2q5\",\n      \"mapsPublishStatus\" : \"PUBLISHED\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/028000\"\n    },\n    \"status\" : {\n      \"code\" : 1322950401,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut quis illum id quia quam sit. Aspernatur neque omnis enim enim et. Vel nesciunt quidem labore. Repudiandae quod illo.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"NEVER_TRANSFERRED\",\n      \"captureTime\" : \"2022-10-12T15:41:06.247569Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2023-01-03T16:23:06.247605Z\",\n        \"altitude\" : 1.593399099868825E308,\n        \"accuracyMeters\" : 2.3822885249016954E38,\n        \"latLngPair\" : {\n          \"latitude\" : 6.076610298773094E307,\n          \"longitude\" : 1.007918212892347E308\n        },\n        \"heading\" : 4.922578988393634E307,\n        \"level\" : {\n          \"number\" : 1.1822842323317682E308,\n          \"name\" : \"Hane\"\n        },\n        \"roll\" : 9.524483032150382E307,\n        \"pitch\" : 1.571370378035398E308\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/356076\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/048625\"\n      },\n      \"photoId\" : {\n        \"id\" : \"laws\"\n      },\n      \"shareLink\" : \"macnar47xb4vbw1du1otfffgpai3jyeuylqpiamp6plk0abg3gbrsb8xchminzwj6wgnrcvjz3l7ycwfz0xjqs4cl0etzyqparwuhtg3pvq3dx4f4rvermcjt22smfcup3c2qkzfsjp9p66ee1jbqw\",\n      \"uploadTime\" : \"2022-09-24T17:22:06.247925Z\",\n      \"places\" : [ {\n        \"name\" : \"Vicente Adams\",\n        \"placeId\" : \"l3kb\",\n        \"languageCode\" : \"chgfbdbh6a8bhocsyvxlawhab61yjpacsxddvmrrc\"\n      }, {\n        \"name\" : \"Archie Borer\",\n        \"placeId\" : \"8209\",\n        \"languageCode\" : \"tob2yhi8yqcojik2y0otwi1ysi5l7yfki7iidpb56slxwrvehqxwjjdmqbd48y5mb9aytruxu44bey92ii5uc3o3ba4u\"\n      }, {\n        \"name\" : \"Leeanna Tremblay III\",\n        \"placeId\" : \"6e4j\",\n        \"languageCode\" : \"dm0ow28dubt75yogloqigkp8k1t8yx0zs855co8jhxcfox5vvdkb236xvadij36gzzo6y5blhxlh50lbp6ujv4z49ulx\"\n      }, {\n        \"name\" : \"Delma Connelly MD\",\n        \"placeId\" : \"17cw\",\n        \"languageCode\" : \"21ewny9jyr4o48zgm20pov5bdnuzrzfke9ig0k271ob4ciwxmxbpp7kdqqv72sxj7nip3wtctr3djq17om9vobwameg26hlaw2q\"\n      }, {\n        \"name\" : \"Rene Zulauf\",\n        \"placeId\" : \"i5mo\",\n        \"languageCode\" : \"th9i07vyiyix1ywl2fbowh38hzplj872ksyrb4n94dq8uj8pj3lsklusrsxrco3hwbu1l89kfdihrrjn7g0l6j43mv6nrmlbmgpz3olvhg6alkkymq848pjhc4qqgznlgzo8obr8wragveofh9a5d5stm6k04e6e72\"\n      } ],\n      \"viewCount\" : \"gwr6u6t1q81iedwm5p\",\n      \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/600452\"\n    },\n    \"status\" : {\n      \"code\" : 2015894084,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Omnis in sint ipsa quia reprehenderit. Et debitis rem ab tenetur. Maxime consequatur sit ut ipsam voluptatem cum. Corporis hic incidunt dolores esse qui. Temporibus doloremque laudantium.\"\n    }\n  }, {\n    \"photo\" : {\n      \"transferStatus\" : \"PENDING\",\n      \"captureTime\" : \"2022-07-12T17:23:06.248801Z\",\n      \"pose\" : {\n        \"gpsRecordTimestampUnixEpoch\" : \"2022-12-28T15:05:06.248838Z\",\n        \"altitude\" : 5.140758189079161E306,\n        \"accuracyMeters\" : 1.0272992925246379E37,\n        \"latLngPair\" : {\n          \"latitude\" : 5.4117132132493104E306,\n          \"longitude\" : 3.1307962290838496E307\n        },\n        \"heading\" : 9.245271721705995E307,\n        \"level\" : {\n          \"number\" : 3.771470859967173E307,\n          \"name\" : \"Pfannerstill\"\n        },\n        \"roll\" : 8.637306884785223E307,\n        \"pitch\" : 5.431772483437964E307\n      },\n      \"downloadUrl\" : \"https://web.example.mocklab.io/619958\",\n      \"uploadReference\" : {\n        \"uploadUrl\" : \"https://web.example.mocklab.io/854459\"\n      },\n      \"photoId\" : {\n        \"id\" : \"rqy9\"\n      },\n      \"shareLink\" : \"wzadke0rwrgsukbreliakpksvy8synj2rj4gpw06rd9no5naychqlg7qpio9wzfauvn50tzz48hn7hzt0t40dg9khes2lpv9\",\n      \"uploadTime\" : \"2023-01-16T15:02:06.249162Z\",\n      \"places\" : [ {\n        \"name\" : \"Dewey Okuneva Jr.\",\n        \"placeId\" : \"12zs\",\n        \"languageCode\" : \"iapv1nw79cmrh0ggebnt3lyrb9vfmgcq4wka0qlvo639f5zuwjyg51vwwuoi9ishzaa7av1imfdj59lsd2w4ckbe\"\n      }, {\n        \"name\" : \"Ettie Kirlin IV\",\n        \"placeId\" : \"b3gb\",\n        \"languageCode\" : \"bcsbm8m4gcrdl1tjb6lg4i2prgarwbpacjx20ch9pqerkazawdddxb3j549gijrxjvtyg3qx89t5qvq1duyzlglmzy5wxkcteucxp7isegsc3m1r5hno9appa3vrhjuy31xgd291asmkqtv1odtmljtpkryp1emtu3wa2rcks8chx6\"\n      }, {\n        \"name\" : \"Marleen Hahn Sr.\",\n        \"placeId\" : \"nb30\",\n        \"languageCode\" : \"6dypmjlc73hecfzwju75gmk6nzwj1o9d3sy3zbgp3chz4n3k4k5qcigfuz5rz18lwi04fdaql8w44rthbv1hi0c6k4k6ixrtrm6yzf9814ci4j7wyyaisr7gy8ache7822n79c1zbss99zvkjew9cjy1odx59r46b4vdkwzay7\"\n      } ],\n      \"viewCount\" : \"exis3gahtgysu7h9nphaevz3xarw0r9c8kmm2jx70apck3wxivifrrsjop4peut08kxrfokhxvp291vzcwc1thd546nb0swpujfbycu1hgspa0u3y9vf\",\n      \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n      \"connections\" : [ {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      }, {\n        \"target\" : { }\n      } ],\n      \"thumbnailUrl\" : \"https://web.example.mocklab.io/175028\"\n    },\n    \"status\" : {\n      \"code\" : 223496601,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Officiis quisquam facere explicabo ipsa et. Dolorem natus officiis velit placeat necessitatibus iste impedit. Et dolore eius. Eum qui non aut quod libero. Ut est molestias atque a.\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08351b39-3b33-424d-905e-d3570de866ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.249957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchGet",
          "schema" : {
            "description" : "Response to batch get of Photos.",
            "properties" : {
              "results" : {
                "description" : "List of results for each individual Photo requested, in the same order as the requests in BatchGetPhotos.",
                "items" : {
                  "$ref" : "#/components/schemas/PhotoResponse"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7ac511c4-7219-4fec-9a18-7d8d85322421",
    "name" : "Deletes a list of Photos and their metadata. Note that if BatchDeletePhotos fail...",
    "request" : {
      "urlPath" : "/v1/photos:batchDelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : [ {\n    \"code\" : 255110591,\n    \"details\" : [ { } ],\n    \"message\" : \"Voluptates est veritatis. Itaque beatae debitis non voluptas. Quidem totam nulla aliquam. Dolor consequatur et dicta non. Quasi commodi culpa placeat sit maxime quod iusto.\"\n  }, {\n    \"code\" : 996592715,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Unde non ea dolorum illo ut. Qui praesentium eligendi. Nulla delectus quia consequatur aliquam.\"\n  }, {\n    \"code\" : 1353228349,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Debitis amet at ducimus ipsum quibusdam voluptas impedit. Consequatur tempore eligendi. Sapiente dolores dolor quibusdam. Voluptatem doloribus ducimus et omnis qui ea. Deleniti voluptatem molestias.\"\n  }, {\n    \"code\" : 1743718886,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Culpa ducimus eum. Dicta cupiditate veniam officia consequatur quos explicabo. Voluptatum quod in qui est voluptas nostrum. Eaque enim eos dignissimos.\"\n  }, {\n    \"code\" : 930180252,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Excepturi voluptatem reiciendis. Soluta quod exercitationem. Qui sit tempore provident illo quibusdam.\"\n  }, {\n    \"code\" : 1130884299,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Quis hic et consequatur hic. Sit eius provident voluptatem necessitatibus dolores enim enim. Quo qui est sit officiis et. Iste reiciendis perspiciatis omnis iusto. Vero distinctio nihil quo animi.\"\n  }, {\n    \"code\" : 855609756,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Ut error praesentium reiciendis ut error eos. Ad est nobis sit eos odit ut deserunt. Et qui fugiat ipsam. Non quos nemo natus fugiat. Non neque quia.\"\n  }, {\n    \"code\" : 909000032,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Omnis et vitae aut ducimus et quia. Quia eaque repellat. Et dolor illum est repudiandae. Necessitatibus fugit velit sit quisquam. Sed iure explicabo totam.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ac511c4-7219-4fec-9a18-7d8d85322421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.240795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.batchDelete",
          "schema" : {
            "description" : "Response to batch delete of one or more Photos.",
            "properties" : {
              "status" : {
                "description" : "The status for the operation to delete a single Photo in the batch request.",
                "items" : {
                  "$ref" : "#/components/schemas/Status"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b976988-9927-4571-a51b-c4bf80c6d6cc",
    "name" : "Lists all the Photos that belong to the user. > Note: Recently created photos th...",
    "request" : {
      "urlPath" : "/v1/photos",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"by22no5g8lcks8rwnh26br53oplow1ywcykoversbgfjrhgywafaxemja8zxnvlzq4igjutlt6kgjxer16kuc4l7wmlo17eyaoz0f1uso3ooctpygiggt4ru6cryq4vmqe46iik1q7m\",\n  \"photos\" : [ {\n    \"transferStatus\" : \"PENDING\",\n    \"captureTime\" : \"2022-04-17T17:46:06.233378Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-06-02T17:41:06.233418Z\",\n      \"altitude\" : 5.583841243418398E307,\n      \"accuracyMeters\" : 1.5279401552285112E38,\n      \"latLngPair\" : {\n        \"latitude\" : 4.92883550197582E307,\n        \"longitude\" : 8.476954677393177E307\n      },\n      \"heading\" : 1.0993348651000364E308,\n      \"level\" : {\n        \"number\" : 8.868549545008964E307,\n        \"name\" : \"Halvorson\"\n      },\n      \"roll\" : 1.2165938749166678E307,\n      \"pitch\" : 6.225207849178627E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/614878\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/103319\"\n    },\n    \"photoId\" : {\n      \"id\" : \"9264\"\n    },\n    \"shareLink\" : \"efatdp40nfxdrm6jctgb85zyjpoqia4zxcxviueaos7k4b6t0a4eqbwigmz3i1e0f5hthqwlh27os1ilpswvkznxvtqonvvkd66jz6ylrrn3nw9nwv8klwpz8u2olczdahx6yi82kp4u5jsyocs6n7tc7uzsrbuhuwehr1i0j4drir486mz7pw\",\n    \"uploadTime\" : \"2022-03-28T17:00:06.233761Z\",\n    \"places\" : [ {\n      \"name\" : \"Douglas Donnelly\",\n      \"placeId\" : \"2kcp\",\n      \"languageCode\" : \"92ti5dwepvmfwzfadkwa2qehtom5q3ct1cc3lpwgoxw0nbblp43fvkdklcmilyyuys8dka6qrugzuhjd7otr4y4actq3hlmq2kswm4opo85js50jb2whffobn2yz7g4yv24qux4hpggoi\"\n    }, {\n      \"name\" : \"Frances Sanford\",\n      \"placeId\" : \"q46k\",\n      \"languageCode\" : \"6k9ruibutms3pbtyyrqgbw8y3x666vcuj4ara6znrwtbpve9asqagf4zh33i8h983jb3ywgi60k5v7tvfzxlw6cipd5i207cjj9ny67115hfyq7lbdzshqvd9\"\n    }, {\n      \"name\" : \"Ms. Norene Gleichner\",\n      \"placeId\" : \"2o9l\",\n      \"languageCode\" : \"lkspzuuhaqxn88j3vu3y75symkqn1nq7d8s95c0rg4bl3i8qkopyi9fd1gbk2lpekebqzvqs1ujuz3ltqv0hj049id0lmwx2uqvwvryorz370lasdigm5alr100lorrtzhay8r9s0gunll68167ah2vl2okt\"\n    }, {\n      \"name\" : \"Weston Hilpert\",\n      \"placeId\" : \"9l7f\",\n      \"languageCode\" : \"wgwt6gz8pc9vtx68n0bjdafqcwr3kqiwjci9ewjhxzpge8sly68n0bz6zylo7zbin5wd6wcq0116cbdcwhbl5iuxyld7s5cbw6w91fm3gvas2eo4h92czm1q0vre7m206ywdf9n92pr4k2y2odbuvvcyvufo9tho003q96d8qio9fqm\"\n    }, {\n      \"name\" : \"Emmanuel Cremin\",\n      \"placeId\" : \"c9t0\",\n      \"languageCode\" : \"dej5bqmergbntzs1ksdw6f0xkqokeeox9ro70kdglmqx\"\n    }, {\n      \"name\" : \"Keva Hills\",\n      \"placeId\" : \"289b\",\n      \"languageCode\" : \"w0ew6xlbnbzicmfzjf3l5pokl1dshjzc6c2q9udh07ied2nzturla92uvi1d4xnqywki0ebr5rf86ps5ps8qby9iz3we\"\n    }, {\n      \"name\" : \"Cristobal Goyette Sr.\",\n      \"placeId\" : \"d90l\",\n      \"languageCode\" : \"pkgh7hhq3w4h34y5ekbqjhoimdv54huasupat5pivhz7yf8yxsvbwz8ppl4zplszveeoupzbhui2xq6ku58imy4j7jzokw2fox19rk78detitq6on3vre6koez0khq9rib0zj\"\n    }, {\n      \"name\" : \"Brain Bashirian\",\n      \"placeId\" : \"3452\",\n      \"languageCode\" : \"e8y5ayvmcmedgzyqvnuvkpvzcxhhlheevf778c4q\"\n    } ],\n    \"viewCount\" : \"d88miou8qwjk1lg55e9cq4w\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"a16d\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"gq0i\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"9o3i\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/726945\"\n  }, {\n    \"transferStatus\" : \"PENDING\",\n    \"captureTime\" : \"2022-12-25T17:41:06.235222Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2022-12-19T18:02:06.23526Z\",\n      \"altitude\" : 1.73571748845397E308,\n      \"accuracyMeters\" : 4.388808551904838E37,\n      \"latLngPair\" : {\n        \"latitude\" : 7.518156989961705E307,\n        \"longitude\" : 5.504443778924966E307\n      },\n      \"heading\" : 1.5989201594324094E308,\n      \"level\" : {\n        \"number\" : 1.7429474725269001E308,\n        \"name\" : \"Tillman\"\n      },\n      \"roll\" : 1.1849129391289307E308,\n      \"pitch\" : 2.7984307935197327E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/430437\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/397813\"\n    },\n    \"photoId\" : {\n      \"id\" : \"6u6m\"\n    },\n    \"shareLink\" : \"4eeuz2wzvgt0tpbha39pansbu9khaxhiu582tomlv5h5khxgyfpmgaqbl7n5k3blmk8pmodrq8fx6rl96at721gtqb5j0b7xkja2jizi1br8xednniqw9ciqb6x5y1c7d2hdavzav7rjsb8fltte1f5izc6xawe2kp6\",\n    \"uploadTime\" : \"2022-09-04T17:43:06.235592Z\",\n    \"places\" : [ {\n      \"name\" : \"Kip West\",\n      \"placeId\" : \"8zc4\",\n      \"languageCode\" : \"gx8szofcxhaubzua27597acby3tv64kflkwez0pv5y9l9r05189dmk2ui6jg230yiwxxng47gwbxsp3q7k9a49r74his1hsc\"\n    } ],\n    \"viewCount\" : \"9w2sj6m4sfiuanc2tau0xcxiy319lk5lc80kfibowhhywcecaqocgk1f2m6k1pklhcvoi3fjwdaeaygy3v5o8iz1pjkhbt6r2s6qxf7tvt5px9zd6ipp6a2og7lk70vro3neurm7rx2oj5a4sy3ndoqd35r896idrp82fg97h6xri2hzo09l\",\n    \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"lvg0\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"8s3a\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"7ke3\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"w841\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"q5u9\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/999217\"\n  }, {\n    \"transferStatus\" : \"COMPLETED\",\n    \"captureTime\" : \"2022-03-27T17:04:06.236228Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2023-02-11T18:34:06.236264Z\",\n      \"altitude\" : 1.1943554676183944E308,\n      \"accuracyMeters\" : 2.784586065975143E38,\n      \"latLngPair\" : {\n        \"latitude\" : 3.733620358132269E307,\n        \"longitude\" : 1.7192365728783856E308\n      },\n      \"heading\" : 1.5679703831752892E308,\n      \"level\" : {\n        \"number\" : 1.5764510477000763E308,\n        \"name\" : \"Medhurst\"\n      },\n      \"roll\" : 1.2925719629847095E308,\n      \"pitch\" : 5.951785762914935E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/775679\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/198536\"\n    },\n    \"photoId\" : {\n      \"id\" : \"3j57\"\n    },\n    \"shareLink\" : \"pa27gy23c2uoy9qbf94679t2l8nx9mx3b0644uq4gmzzz\",\n    \"uploadTime\" : \"2022-12-14T17:56:06.236585Z\",\n    \"places\" : [ {\n      \"name\" : \"Renato Friesen\",\n      \"placeId\" : \"261f\",\n      \"languageCode\" : \"q7e9xgnfmukgl8uvcxc5bihfzbncexecharuu\"\n    }, {\n      \"name\" : \"Queenie Senger IV\",\n      \"placeId\" : \"2shq\",\n      \"languageCode\" : \"72etmt54zf5rcb9pjzbudaftzb5lza8s7zjvxkz6egje27gozoc5ejpjzesqzi19flacdjjxssti28zh9w6r6x4au6p8kxilgwk1eqenrtxp591emjwpq5sg57axlfa92cv0h8n53hk3xj20qt1qpmc30f8k27vr1iks\"\n    }, {\n      \"name\" : \"Trudie Christiansen\",\n      \"placeId\" : \"13rd\",\n      \"languageCode\" : \"z905r5d4armd7rmyy6iuf9b20nlsdnsq9sn32qtnqzld02v12nyot7hpns8e22cwlt7o83zc9lj1pmb7zk82jof4sckqc81cznh5owza71mby7mcbwijb7d4de550tng3qwm3psjts0w6tbpsgflen\"\n    }, {\n      \"name\" : \"Lanita Willms\",\n      \"placeId\" : \"1v3b\",\n      \"languageCode\" : \"uqm7hh2w86hhb5pxknpntmg4u2ab3eji0anrk4w71r866gaaxlkywfr76guyfpqvwvzbhxpplaqgs17tth6nz8qaro7vnuautzhm78w2bxfvlaspwqpyyqrlnristwhzrm6y7tjpnkgqoe9by5\"\n    }, {\n      \"name\" : \"Salvador Towne\",\n      \"placeId\" : \"90oz\",\n      \"languageCode\" : \"fcpn395txkpf4ekmw0bkuq88pel1yx72utrpkra22cu32v0qeedfl6agx07siahs1cil2d2zkqphi9cn7ub1wn8bmqprjewd9j06m34zwpsi0ks9j5lzdqvvy1lq89lla7ftm898972l5730ywjb637dqnmu1i74f5d1oxxhlfen8fan7yxoidf1aq\"\n    }, {\n      \"name\" : \"John Okuneva\",\n      \"placeId\" : \"s2y5\",\n      \"languageCode\" : \"yuy\"\n    }, {\n      \"name\" : \"Nigel Toy\",\n      \"placeId\" : \"x3qy\",\n      \"languageCode\" : \"u78676h2l51fw3lwjxd4ds3b3r1nmwkdiqupy24r9i9oayrpoq8fcxuwbpvthrvpsywzf4s1mt7hnp4kfxx9nurwbe590ruh6qmw99xoa2m5a8yiin1dxg0zb7ansehdyz8z1lu8f\"\n    } ],\n    \"viewCount\" : \"x541237n51a2vkn0yt5\",\n    \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"ub14\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"f5a6\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"4310\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"4vtf\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"17ot\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"u511\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"25i9\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"0s4i\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/944376\"\n  }, {\n    \"transferStatus\" : \"REJECTED\",\n    \"captureTime\" : \"2022-05-28T18:11:06.238355Z\",\n    \"pose\" : {\n      \"gpsRecordTimestampUnixEpoch\" : \"2023-02-01T18:28:06.238397Z\",\n      \"altitude\" : 1.5298725604968437E308,\n      \"accuracyMeters\" : 1.5572246253167763E38,\n      \"latLngPair\" : {\n        \"latitude\" : 5.759853761538443E307,\n        \"longitude\" : 1.7789098092941582E308\n      },\n      \"heading\" : 1.31471379057833E308,\n      \"level\" : {\n        \"number\" : 9.449582053768401E306,\n        \"name\" : \"Renner\"\n      },\n      \"roll\" : 1.6232800158869475E308,\n      \"pitch\" : 4.1074742278964505E307\n    },\n    \"downloadUrl\" : \"https://web.example.mocklab.io/530394\",\n    \"uploadReference\" : {\n      \"uploadUrl\" : \"https://web.example.mocklab.io/873301\"\n    },\n    \"photoId\" : {\n      \"id\" : \"2zqy\"\n    },\n    \"shareLink\" : \"p2ajhlsf8ydmnig41\",\n    \"uploadTime\" : \"2022-05-30T16:05:06.238725Z\",\n    \"places\" : [ {\n      \"name\" : \"Venessa Stanton\",\n      \"placeId\" : \"86l3\",\n      \"languageCode\" : \"j3vc8cfjl4l0icgt7s54msprjiljbsh5c1m5g7lrhjeoe81p\"\n    }, {\n      \"name\" : \"Abram Becker V\",\n      \"placeId\" : \"y28d\",\n      \"languageCode\" : \"ezu21awkoeuqhexugp53j8xc5b05o7wtf56n3z01aozqeimroygz596lznhfhu2447lm20crsqcnl4zzjf8gdbppjy7jdqrx9v3tohbrg75jk98xuedar7dm6xwe46ayhbf7b154nyi8c3lis5ql7o21\"\n    }, {\n      \"name\" : \"Epifania Conn\",\n      \"placeId\" : \"2aok\",\n      \"languageCode\" : \"vjaqfnbkw0p1jajlxd9ji9wxnodjn3akazb6a2fbimo4w60qqo5hx4b1qeit63ty6qdc8aypy8c2\"\n    }, {\n      \"name\" : \"Percy Connelly\",\n      \"placeId\" : \"ui2k\",\n      \"languageCode\" : \"4lx9mlpv09kpsv4uccqfijjvhaj2j45kfhpys3o2xizlh77ffxtvm6ocey4nmqa27owurd0vsfkl8icrofvrlxxcb02yib5xnxs1vcn4kbshwvlx0xhh32eg341z1l1gz9tncxo7trahnytiqwvkjnn42l4zvqh7ogcfpju8\"\n    }, {\n      \"name\" : \"Jasper Price\",\n      \"placeId\" : \"hgri\",\n      \"languageCode\" : \"ivq6t5z75o8kzxvy08b34qsqpnucb4gdjr24pigoadi4qr4nllrdhnbhgo8rf0ctulbzbcpaje2fhbg8qi2iabx9zaybsagceegw4j9mm374my\"\n    }, {\n      \"name\" : \"Davida Barrows\",\n      \"placeId\" : \"2151\",\n      \"languageCode\" : \"7wq2q0fp8nlrze2i6amll6h0uayovuxn4mjhc6nm8j7kst9djg6uiqyj\"\n    }, {\n      \"name\" : \"Francisco Gaylord\",\n      \"placeId\" : \"7ycb\",\n      \"languageCode\" : \"5lnfvoeea5bayn4775q99egjw783g82ykoo2v0ypebppezgt5uyv0vb6nev0kdtiu9pl2o86h3u9a06hvj6kr35274qs5kw0ers4ns4pbl1tha31ynlprc02vzurjm4rgql6vkpv0uinc5jww7vt7omupbmkzbk34zy4p39yolhde9x6f9ticpcu8nachfe\"\n    } ],\n    \"viewCount\" : \"34hrpnwi2fdlblsi585waa6mxjieohexola8jw91hq6046yobw4ux7a8kmr7h8fzvtf4l5iz4qvz2ua69t247xeaoz5xejbe5clmcq8nyhj2m3ozr7qv8pgtp2tducv7kma\",\n    \"mapsPublishStatus\" : \"PUBLISHED\",\n    \"connections\" : [ {\n      \"target\" : {\n        \"id\" : \"x01g\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"6k1u\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"1lms\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"q1w9\"\n      }\n    }, {\n      \"target\" : {\n        \"id\" : \"b8v2\"\n      }\n    } ],\n    \"thumbnailUrl\" : \"https://web.example.mocklab.io/726577\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b976988-9927-4571-a51b-c4bf80c6d6cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.240268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photos.list",
          "schema" : {
            "description" : "Response to list all photos that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photos" : {
                "description" : "List of photos. The pageSize field in the request determines the number of items returned.",
                "items" : {
                  "$ref" : "#/components/schemas/Photo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84b9b7d3-b441-4845-bcc1-0339922879b4",
    "name" : "Lists all the PhotoSequences that belong to the user, in descending CreatePhotoS...",
    "request" : {
      "urlPath" : "/v1/photoSequences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"photoSequences\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dee Walsh V\",\n    \"error\" : {\n      \"code\" : 1115831359,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ad deserunt asperiores exercitationem est qui. Molestiae deserunt dignissimos inventore fuga. Omnis sed quidem aliquid aut eum illum consequatur. Odit nam quos iusto rerum itaque.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lindsy Streich\",\n    \"error\" : {\n      \"code\" : 553494382,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"In perferendis delectus qui dolor mollitia. Non occaecati saepe modi autem nemo. Consequuntur in tempore quia magni vero vitae. Porro rerum quas dolores voluptatibus quia perferendis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Althea Kertzmann\",\n    \"error\" : {\n      \"code\" : 243983346,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Eius velit eos ratione sequi. Molestiae voluptas sunt aliquid nobis. Voluptas repellat inventore distinctio quae veniam qui architecto. Quisquam sit voluptates est est excepturi soluta qui.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"gpa2tvtdkfv6q4fuv4009lz5wpj2r4szgpwqqglxcnhdr3758aprsjv6xro0t7eqwb86bln9gnlfsk2ofdi94d98w5tdf29fybfjr48fkihm2u2oyo4yl1jgm2k7qyqy86g4fj81zo07cbd3v75ps1yl1rtc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84b9b7d3-b441-4845-bcc1-0339922879b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.233298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequences.list",
          "schema" : {
            "description" : "Response to list all photo sequences that belong to a user.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "photoSequences" : {
                "description" : "List of photo sequences via Operation interface. The maximum number of items returned is based on the pageSize field in the request. Each item in the list can have three possible states, * `Operation.done` = false, if the processing of PhotoSequence is not finished yet. * `Operation.done` = true and `Operation.error` is populated, if there was an error in processing. * `Operation.done` = true and `Operation.response` contains a PhotoSequence message, In each sequence, only Id is populated.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f0b89b3a-50d2-49da-91fe-41aa17658399",
    "name" : "Creates an upload session to start uploading photo sequence data. The upload URL...",
    "request" : {
      "urlPath" : "/v1/photoSequence:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/010401\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0b89b3a-50d2-49da-91fe-41aa17658399",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.232875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee0e89dc-7fe4-47d3-a1c7-5f164e373cd9",
    "name" : "Gets the metadata of the specified PhotoSequence via the Operation interface. Th...",
    "request" : {
      "urlPath" : "/v1/photoSequence/li3x",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Palmer Pagac\",\n  \"error\" : {\n    \"code\" : 1754573139,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Pariatur aut quis corrupti nam debitis ut et. Optio maxime reiciendis est iusto. Illum dolor enim officiis asperiores voluptatem et commodi. Illo quasi totam laboriosam distinctio iure.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee0e89dc-7fe4-47d3-a1c7-5f164e373cd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.232774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4b8ae36f-7c83-4e9c-8769-5114a70026d8",
    "name" : "Deletes a PhotoSequence and its metadata. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photoSequence/y0s0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b8ae36f-7c83-4e9c-8769-5114a70026d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.232536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b20529ad-038e-4e00-99e7-52f70f82c34f",
    "name" : "After the client finishes uploading the PhotoSequence with the returned UploadRe...",
    "request" : {
      "urlPath" : "/v1/photoSequence",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Steven Runolfsson\",\n  \"error\" : {\n    \"code\" : 1359974807,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptatem iure nemo id sint. Reiciendis est velit minima fugit ducimus in. Eum qui dolores aliquam consequatur incidunt incidunt molestiae.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b20529ad-038e-4e00-99e7-52f70f82c34f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.232427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photoSequence.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "87b3fceb-f14c-49b1-ac17-ab15bc742e0d",
    "name" : "Creates an upload session to start uploading photo bytes. The method uses the up...",
    "request" : {
      "urlPath" : "/v1/photo:startUpload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"uploadUrl\" : \"https://web.example.mocklab.io/234815\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87b3fceb-f14c-49b1-ac17-ab15bc742e0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.232193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.startUpload",
          "schema" : {
            "description" : "Upload reference for media files.",
            "properties" : {
              "uploadUrl" : {
                "description" : "An upload reference should be unique for each user. It follows the form: \"https://streetviewpublish.googleapis.com/media/user/{account_id}/photo/{upload_reference}\"",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7b78061f-3832-47e8-a6f7-002fd95049f1",
    "name" : "Gets the metadata of the specified Photo. This method returns the following erro...",
    "request" : {
      "urlPath" : "/v1/photo/e4fh",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"NEVER_TRANSFERRED\",\n  \"captureTime\" : \"2022-05-29T17:50:06.230573Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-06-12T16:53:06.23061Z\",\n    \"altitude\" : 5.802997174590427E305,\n    \"accuracyMeters\" : 2.1645591129167294E38,\n    \"latLngPair\" : {\n      \"latitude\" : 6.00691081171955E307,\n      \"longitude\" : 1.5027361325681694E308\n    },\n    \"heading\" : 1.723692302267939E308,\n    \"level\" : {\n      \"number\" : 1.3324245119961665E308,\n      \"name\" : \"Lesch\"\n    },\n    \"roll\" : 2.508396697981846E307,\n    \"pitch\" : 1.0533458420638449E308\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/909193\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/176729\"\n  },\n  \"photoId\" : {\n    \"id\" : \"xpuj\"\n  },\n  \"shareLink\" : \"6d258kwomei1be6axnm0ee6jwe7gn7efyhczpc3p9yj23pv2w03qeah1fe87ilwa4197pewit7c16o3fq00kjq5xv19wvx32oovxo\",\n  \"uploadTime\" : \"2022-12-12T18:10:06.230923Z\",\n  \"places\" : [ {\n    \"name\" : \"Russ Kessler Jr.\",\n    \"placeId\" : \"b24p\",\n    \"languageCode\" : \"uppjy2yktk90o72iuyhs2nsoa68pru12u47c7uzvdlvvekfepshxhc8okqtflpzrkeqjpiyzlymvx6ntvsrivwk72da63br9sp4awvt2rcp26lvuhtjt7yq9xvepg1gax3jjic618ie28enaf9ektnbna35ospfl5pulyl1fo\"\n  }, {\n    \"name\" : \"Ruben Borer\",\n    \"placeId\" : \"1m9g\",\n    \"languageCode\" : \"dvtlmzsfdvmifrqpum5uyfemjwftpsn8sgdj6nd70u9ky3x949l1u1ay6xd5hboc4ma0bgdolbunlx\"\n  } ],\n  \"viewCount\" : \"v4vvd8z830rcmn6w9sj3jy47lza1v0e7jb3fvg7kxutw8hxhp9yisfxv50pd0o1454iioz649jjlzcjz1b2v6hul\",\n  \"mapsPublishStatus\" : \"PUBLISHED\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"sig3\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"q35g\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"jsid\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"sbz5\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"06th\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"421y\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"3m61\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"213c\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/370008\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b78061f-3832-47e8-a6f7-002fd95049f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.232059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.get",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bd514423-5f2f-4321-a1fe-5bebb6a90801",
    "name" : "Deletes a Photo and its metadata. This method returns the following error codes:...",
    "request" : {
      "urlPath" : "/v1/photo/9152",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd514423-5f2f-4321-a1fe-5bebb6a90801",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.230524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "782b9260-83f8-42f0-b791-42c2db32d11d",
    "name" : "Updates the metadata of a Photo, such as pose, place association, connections, e...",
    "request" : {
      "urlPath" : "/v1/photo/1f22",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"PENDING\",\n  \"captureTime\" : \"2022-05-09T18:06:06.229067Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-07-05T15:29:06.229103Z\",\n    \"altitude\" : 9.581210878771275E307,\n    \"accuracyMeters\" : 2.2957509980822974E37,\n    \"latLngPair\" : {\n      \"latitude\" : 2.6953261977395823E307,\n      \"longitude\" : 2.5587263518896447E307\n    },\n    \"heading\" : 1.6641890430525457E308,\n    \"level\" : {\n      \"number\" : 5.547930539521212E307,\n      \"name\" : \"Bednar\"\n    },\n    \"roll\" : 1.405473671345815E308,\n    \"pitch\" : 2.6317043074836815E306\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/273444\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/096130\"\n  },\n  \"photoId\" : {\n    \"id\" : \"pjmg\"\n  },\n  \"shareLink\" : \"i52kknxx8dtyxic4whhczznen2hfqx8r3jwgeo5fgrhsjngtail85m9egzx\",\n  \"uploadTime\" : \"2022-11-09T17:04:06.229421Z\",\n  \"places\" : [ {\n    \"name\" : \"Hilary Stiedemann\",\n    \"placeId\" : \"bl0j\",\n    \"languageCode\" : \"yvn\"\n  }, {\n    \"name\" : \"Sandi Pfannerstill II\",\n    \"placeId\" : \"gqai\",\n    \"languageCode\" : \"l4vlhkynyr07yj0hv0clt23gtrk6xtp4dx5qj3yxeqnmgtum7wymg8t0ghppi2hn583330gv0zou\"\n  }, {\n    \"name\" : \"Mr. Alberto Bergnaum\",\n    \"placeId\" : \"n97j\",\n    \"languageCode\" : \"dqohjtv9235ahomhob7x3i3l70mnu6kqmd3xmt\"\n  } ],\n  \"viewCount\" : \"lwwvqljbeosne23rfaeeb1bl07e59g2iuqet381784pqwvydw53ps43fl5xzaxpe1zbrokbki58nodlxt9ys7h7t0a0se2p\",\n  \"mapsPublishStatus\" : \"REJECTED_UNKNOWN\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"3f3g\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"ne2t\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"414b\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"u19v\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/764769\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "782b9260-83f8-42f0-b791-42c2db32d11d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.230399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.update",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4e608ae9-6cf2-4816-af07-8dd58dedd93a",
    "name" : "After the client finishes uploading the photo with the returned UploadRef, Creat...",
    "request" : {
      "urlPath" : "/v1/photo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferStatus\" : \"PENDING\",\n  \"captureTime\" : \"2022-07-29T16:36:06.22705Z\",\n  \"pose\" : {\n    \"gpsRecordTimestampUnixEpoch\" : \"2022-03-17T18:30:06.2271Z\",\n    \"altitude\" : 1.7293560257138703E308,\n    \"accuracyMeters\" : 1.6817018128707883E38,\n    \"latLngPair\" : {\n      \"latitude\" : 1.219993693161718E308,\n      \"longitude\" : 8.358996483302514E307\n    },\n    \"heading\" : 2.553920101371952E307,\n    \"level\" : {\n      \"number\" : 4.100911153061272E307,\n      \"name\" : \"Hammes\"\n    },\n    \"roll\" : 5.996282341629702E307,\n    \"pitch\" : 9.152081974325856E307\n  },\n  \"downloadUrl\" : \"https://web.example.mocklab.io/448390\",\n  \"uploadReference\" : {\n    \"uploadUrl\" : \"https://web.example.mocklab.io/171520\"\n  },\n  \"photoId\" : {\n    \"id\" : \"9wn1\"\n  },\n  \"shareLink\" : \"wfca49yvtsgsz918bixlrodzjztjg8h34ivt508jzceep1ikwks8w5p0sc99lap8vdzm4p2uhjxqqkkfqhy3ltmevl5ljp960t80nqvgeriyl0aa8tnal9oowx1apknudyat1l0wjs\",\n  \"uploadTime\" : \"2023-01-06T17:58:06.22751Z\",\n  \"places\" : [ {\n    \"name\" : \"Elna Lubowitz\",\n    \"placeId\" : \"nj7l\",\n    \"languageCode\" : \"winbyfd8ix9dytym7l58d7np6vzy0akb0ko1k1pauwtdz0ds25uc83fkxjj77b0kcbuj2d6euxni1c2lv762e52og50yll07b5iepk\"\n  }, {\n    \"name\" : \"Yadira Schimmel\",\n    \"placeId\" : \"suh9\",\n    \"languageCode\" : \"b8hecq3h8eo1qso8p5tbvps7hiigd0vgv5hf6nr06p9evvztmjokgk8fdsfhmvnpaw6rjxwv57fthv03grj8zivmfv8gqd2es83hdfee007bto3zbcwwwt57nj4v9qyh2e582qhyvv004yk888bcvzvim7wvvndh7xnu3suqihfl5a7qmo9gvfjwzwf8nqx3raq9\"\n  }, {\n    \"name\" : \"Mrs. Jerome Hegmann\",\n    \"placeId\" : \"p38p\",\n    \"languageCode\" : \"rluzgiye0n7qil50c5s0hr149iii7x517izd8on8lbz381g4tvdq9mhbfdi6iwmllb1tpt2x1yz62cpypzl0hd871x517jwhw28ysir3\"\n  }, {\n    \"name\" : \"Mr. Dee Howell\",\n    \"placeId\" : \"2hek\",\n    \"languageCode\" : \"fizr6bvxn9tvvmeu6jtwe4zyop4mc7cjntnng2etf86z8y4ab7slqk8da058smo9bzur6ju4nncjzljbvpom8zbqn90y3aa2fdoel6pgpzyo\"\n  }, {\n    \"name\" : \"Jennell Keeling\",\n    \"placeId\" : \"37b4\",\n    \"languageCode\" : \"l6z4p5m2xk235eheet62iq9iz2kkophipsv1jo1inv2g9uolz8wwo76bz1isv2uwg\"\n  }, {\n    \"name\" : \"Ariel Marquardt Jr.\",\n    \"placeId\" : \"1ayd\",\n    \"languageCode\" : \"v530cy94tsyvp0ff5a8u26u7bf1goqq232txw4x4525l7njdvygl5nrmaavvidz947xzv4zrng299oag4bg3najftkgm01xfbu9en0q242pwd7fb9pmlulal4bq9k5qc7o6i6zj93ki15pjm2ojxu4h1g4z91tco\"\n  }, {\n    \"name\" : \"Lucio Ratke II\",\n    \"placeId\" : \"4333\",\n    \"languageCode\" : \"pmwb28kflle7ircb71smxdqqa37shgq5qdjc3o2ngdin97kb9jg1v6e1o6qsbqqd3ilvrftmos54vjd4as0ii35ym6qrbtq8890t509dlefxpatpwh838dzoj\"\n  } ],\n  \"viewCount\" : \"qd1h9rfn6mdp19us\",\n  \"mapsPublishStatus\" : \"UNSPECIFIED_MAPS_PUBLISH_STATUS\",\n  \"connections\" : [ {\n    \"target\" : {\n      \"id\" : \"67rr\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"3dg7\"\n    }\n  }, {\n    \"target\" : {\n      \"id\" : \"4egt\"\n    }\n  } ],\n  \"thumbnailUrl\" : \"https://web.example.mocklab.io/059419\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e608ae9-6cf2-4816-af07-8dd58dedd93a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:06.228985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "streetviewpublish.photo.create",
          "schema" : {
            "description" : "Photo is used to store 360 photos along with photo metadata.",
            "properties" : {
              "captureTime" : {
                "description" : "Optional. Absolute time when the photo was captured. When the photo has no exif timestamp, this is used to set a timestamp in the photo metadata.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "connections" : {
                "description" : "Optional. Connections to other photos. A connection represents the link from this photo to another photo.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "downloadUrl" : {
                "description" : "Output only. The download URL for the photo bytes. This field is set only when GetPhotoRequest.view is set to PhotoView.INCLUDE_DOWNLOAD_URL.",
                "readOnly" : true,
                "type" : "string"
              },
              "mapsPublishStatus" : {
                "description" : "Output only. Status in Google Maps, whether this photo was published or rejected.",
                "enum" : [ "UNSPECIFIED_MAPS_PUBLISH_STATUS", "PUBLISHED", "REJECTED_UNKNOWN" ],
                "readOnly" : true,
                "type" : "string"
              },
              "photoId" : {
                "$ref" : "#/components/schemas/PhotoId"
              },
              "places" : {
                "description" : "Optional. Places where this photo belongs.",
                "items" : {
                  "$ref" : "#/components/schemas/Place"
                },
                "type" : "array"
              },
              "pose" : {
                "$ref" : "#/components/schemas/Pose"
              },
              "shareLink" : {
                "description" : "Output only. The share link for the photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "thumbnailUrl" : {
                "description" : "Output only. The thumbnail URL for showing a preview of the given photo.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferStatus" : {
                "description" : "Output only. Status of rights transfer on this photo.",
                "enum" : [ "TRANSFER_STATUS_UNKNOWN", "NEVER_TRANSFERRED", "PENDING", "COMPLETED", "REJECTED", "EXPIRED", "CANCELLED", "RECEIVED_VIA_TRANSFER" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uploadReference" : {
                "$ref" : "#/components/schemas/UploadRef"
              },
              "uploadTime" : {
                "description" : "Output only. Time when the image was uploaded.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "viewCount" : {
                "description" : "Output only. View count of the photo.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}