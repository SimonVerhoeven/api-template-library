{
  "mappings" : [ {
    "id" : "1a12193c-d4d6-4512-94fd-dcf70d3cb759",
    "name" : "Start manual transfer runs to be executed now with schedule_time equal to curren...",
    "request" : {
      "urlPath" : "/v1/33s7lx6sbqpcz7lauh5ggb87vkkuy95t5tyboi5h:startManualRuns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"runs\" : [ {\n    \"scheduleTime\" : \"2023-02-14T12:45:35.046864Z\",\n    \"destinationDatasetId\" : \"31ym\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-08-13T13:37:35.047049Z\",\n    \"params\" : { },\n    \"userId\" : \"54lf\",\n    \"schedule\" : \"89g1wezve5dfhwuzb9lpx56ycdsgth6m8yvnvwmq4xalhuivfjpw195ty1pe3svhkjgkvsbvaegfi7x3k0oes2o1akqv1o5jjcxazrhvt1pk8zrfj39d2kn61bb7tafiy60dz196xsf5soauvwe79r5gi0oj96qbhjkozp7ba5sc58hiurm\",\n    \"dataSourceId\" : \"r1l7\",\n    \"name\" : \"Mellisa Thompson\",\n    \"errorStatus\" : {\n      \"code\" : 206812120,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Reiciendis sint et quibusdam suscipit aut distinctio. Molestias labore vel molestias magni dolorum. Distinctio officia fugit exercitationem. Est veritatis nesciunt sapiente dolores assumenda. Quod eos\"\n    },\n    \"startTime\" : \"2022-03-25T12:11:35.047527Z\",\n    \"endTime\" : \"2022-12-02T11:58:35.047564Z\",\n    \"runTime\" : \"2022-11-01T10:53:35.047664Z\",\n    \"state\" : \"SUCCEEDED\",\n    \"notificationPubsubTopic\" : \"lk2gu24ftlo8pefpr4il7tuz55tu6yskihwa7j5\"\n  }, {\n    \"scheduleTime\" : \"2022-06-23T10:35:35.047747Z\",\n    \"destinationDatasetId\" : \"ou39\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-11-10T13:32:35.04788Z\",\n    \"params\" : { },\n    \"userId\" : \"5t4u\",\n    \"schedule\" : \"plbjh2z72h22qe16t21o90wgcjegyghyr0lotcc13tu28i3rj9i7gui47f3sw1wuvg50em98e61bjtbihzi5ou6nab2zp6vwc5uwzumcjajkjtpq2biwuuxj7ft0t34uqqmf0nffbigjwk8n76yd3cjfwmt48014zrvz5g5bapw2r4kl8bho6mq8i42zn\",\n    \"dataSourceId\" : \"lm4q\",\n    \"name\" : \"Tammie Cormier\",\n    \"errorStatus\" : {\n      \"code\" : 1484544475,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ab quaerat mollitia. Atque dolorem aperiam dicta ipsam vel. Autem quaerat molestiae et et quo voluptatem omnis. Ut atque eaque consectetur nostrum cumque non. Facilis perferendis vel vero aut eligendi\"\n    },\n    \"startTime\" : \"2023-02-10T13:41:35.048253Z\",\n    \"endTime\" : \"2022-08-16T11:21:35.048289Z\",\n    \"runTime\" : \"2022-03-08T11:41:35.048317Z\",\n    \"state\" : \"CANCELLED\",\n    \"notificationPubsubTopic\" : \"k9nrctq0o8qbfr7l7wtohox4whntqwiv5afn28k2l5zlkr4r23hz4v1pvisgung42y7xv5tonet93axzii9dte62l5kvpzhsnia8qvrni0vof5rklz32xdlsm652z5lelhodx8kaea6lpme\"\n  }, {\n    \"scheduleTime\" : \"2023-01-18T12:18:35.048385Z\",\n    \"destinationDatasetId\" : \"v8d6\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-04-22T12:17:35.04851Z\",\n    \"params\" : { },\n    \"userId\" : \"btui\",\n    \"schedule\" : \"heponqwbtvslq0uzreqkpiv592iy6wl6xdxxyn7k6qxfpaxmwa0xha9tmef0re5izyqmjj64714thlke8akrvzsf408ksio4zan3kyv9bbwd0zr7drj3gphrf\",\n    \"dataSourceId\" : \"2hf1\",\n    \"name\" : \"Helen Medhurst\",\n    \"errorStatus\" : {\n      \"code\" : 1206493369,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Aperiam error mollitia error suscipit repellat maiores labore. Molestiae vel quis deleniti quos iure illum. Culpa est et fugiat placeat.\"\n    },\n    \"startTime\" : \"2022-08-15T13:21:35.049068Z\",\n    \"endTime\" : \"2023-01-08T12:04:35.049109Z\",\n    \"runTime\" : \"2022-09-21T12:25:35.049148Z\",\n    \"state\" : \"PENDING\",\n    \"notificationPubsubTopic\" : \"c7l9qbrd08pyo\"\n  }, {\n    \"scheduleTime\" : \"2022-10-24T13:50:35.049279Z\",\n    \"destinationDatasetId\" : \"xr0i\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-07-02T12:46:35.049414Z\",\n    \"params\" : { },\n    \"userId\" : \"uag3\",\n    \"schedule\" : \"ednjsoqmkblw7653tu2hllwlfzb8sum6masblmku57ox1eicdum9dgu9r7rgcsebmip7db4rcn7yjz13c6fijkkk3s2be4iscgwf5cac57rpisnrdg2p9em5ivbi6njsa6iqk85u0ae8ht7peex7q5olxwqb9cokeq0qevdd95md0zjw59eizdlzc\",\n    \"dataSourceId\" : \"2n16\",\n    \"name\" : \"Vinita Lindgren Jr.\",\n    \"errorStatus\" : {\n      \"code\" : 1728118550,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Itaque adipisci labore mollitia. Voluptas occaecati fuga beatae praesentium architecto laborum dolor. Aut et vitae deserunt. Hic molestiae quia quia temporibus molestias illo.\"\n    },\n    \"startTime\" : \"2022-05-06T10:39:35.049774Z\",\n    \"endTime\" : \"2023-02-16T13:55:35.049808Z\",\n    \"runTime\" : \"2023-01-02T13:04:35.049841Z\",\n    \"state\" : \"PENDING\",\n    \"notificationPubsubTopic\" : \"ghyiqy1aecx0k6eewk4b4f1r5goln890z52h8dxfu3vaogeqswushjjfsnuhlqptxeypx9446onec4y5ab6kn98vjjsp7yy60w\"\n  }, {\n    \"scheduleTime\" : \"2022-09-21T13:51:35.049911Z\",\n    \"destinationDatasetId\" : \"2h9t\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-12-12T11:13:35.050034Z\",\n    \"params\" : { },\n    \"userId\" : \"0o74\",\n    \"schedule\" : \"gx3tx9\",\n    \"dataSourceId\" : \"5d1s\",\n    \"name\" : \"Veronika Gorczany\",\n    \"errorStatus\" : {\n      \"code\" : 1700644296,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Eligendi molestias quas ad blanditiis molestiae vel labore. Earum veniam ea exercitationem. Dolores magnam impedit sunt placeat. Molestiae non quo optio veritatis porro et non. Omnis ea asperiores ull\"\n    },\n    \"startTime\" : \"2022-07-30T13:51:35.050375Z\",\n    \"endTime\" : \"2022-07-14T12:54:35.050409Z\",\n    \"runTime\" : \"2022-05-02T11:07:35.050441Z\",\n    \"state\" : \"CANCELLED\",\n    \"notificationPubsubTopic\" : \"rnxrasoib77ijntzm5bzfhc8ogt5t\"\n  }, {\n    \"scheduleTime\" : \"2023-01-03T14:17:35.05051Z\",\n    \"destinationDatasetId\" : \"yb02\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-11-26T13:57:35.050671Z\",\n    \"params\" : { },\n    \"userId\" : \"ti63\",\n    \"schedule\" : \"8gtcyxiylh96oxazosdosj67s4fuuphlmhv3hjhp9znxoto0e9mq44rw3e90mtnhyj068dhskqbs9fjo8086fs3zn7o5huw\",\n    \"dataSourceId\" : \"ykn0\",\n    \"name\" : \"Mr. Mirian Hermann\",\n    \"errorStatus\" : {\n      \"code\" : 2095060728,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Praesentium natus aut itaque ut beatae consequatur officia. Sapiente occaecati et unde tempore. Aut enim explicabo consequatur temporibus.\"\n    },\n    \"startTime\" : \"2022-10-17T12:52:35.051018Z\",\n    \"endTime\" : \"2022-12-04T13:18:35.05105Z\",\n    \"runTime\" : \"2022-06-25T12:58:35.051086Z\",\n    \"state\" : \"RUNNING\",\n    \"notificationPubsubTopic\" : \"1cjxcrnlm3d\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a12193c-d4d6-4512-94fd-dcf70d3cb759",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.051307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.startManualRuns",
          "schema" : {
            "description" : "A response to start manual transfer runs.",
            "properties" : {
              "runs" : {
                "description" : "The transfer runs that were created.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "521c6534-2219-4020-ab28-c3d139df7045",
    "name" : "Creates transfer runs for a time range [start_time, end_time]. For each date - o...",
    "request" : {
      "urlPath" : "/v1/qidhfwvyg5iynhzvuw48jrhu1imdcdtt1k08udc9tw5ekfmbcshkr84lx678z164cno58j512tdyqqe18vkrl0yunq4hxo3idjkkm9odvyf0li18pmurhhaiozky27oni9o1pncl08fatsyx30raexm43pk9iolgjhis7mdiuuc:scheduleRuns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"runs\" : [ {\n    \"scheduleTime\" : \"2022-09-07T14:15:35.04239Z\",\n    \"destinationDatasetId\" : \"3rxn\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-08-25T10:26:35.042528Z\",\n    \"params\" : { },\n    \"userId\" : \"599g\",\n    \"schedule\" : \"z3scrx2af11if8sa\",\n    \"dataSourceId\" : \"2hb1\",\n    \"name\" : \"Ocie Weissnat\",\n    \"errorStatus\" : {\n      \"code\" : 829673994,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Quae perspiciatis nulla distinctio perspiciatis. Aspernatur mollitia magni mollitia. Qui voluptas omnis expedita quia quod sequi enim. Sed quo tenetur.\"\n    },\n    \"startTime\" : \"2022-03-14T13:27:35.042909Z\",\n    \"endTime\" : \"2022-12-06T10:35:35.042943Z\",\n    \"runTime\" : \"2022-04-21T12:41:35.042979Z\",\n    \"state\" : \"RUNNING\",\n    \"notificationPubsubTopic\" : \"i4wxmfoi55peywadkoq4aj575lyz3kpx7jmzf1bplplq7da5l03z80n0q04b1ryub0afabe94k7jeyxwf6nzun5dw8ei4l8lka4co0o4nmv1y5r6lpqphwve44hnsie43tm0dq7w8ixzk5bkzeowgj940l4\"\n  }, {\n    \"scheduleTime\" : \"2022-03-16T11:00:35.043056Z\",\n    \"destinationDatasetId\" : \"n3t2\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-04-20T11:46:35.043256Z\",\n    \"params\" : { },\n    \"userId\" : \"ox2o\",\n    \"schedule\" : \"zmgl1lzctvksfcjbdtcwxkc83xwxq7lpog\",\n    \"dataSourceId\" : \"a43n\",\n    \"name\" : \"Rozanne Yost\",\n    \"errorStatus\" : {\n      \"code\" : 915179025,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Tenetur omnis ab enim exercitationem quae sint. Officiis eos et modi cum cupiditate aut consectetur. Voluptas molestiae iusto ut magni qui velit. Natus quia at non magnam.\"\n    },\n    \"startTime\" : \"2022-04-23T12:31:35.044304Z\",\n    \"endTime\" : \"2022-04-20T13:29:35.044348Z\",\n    \"runTime\" : \"2022-07-07T13:39:35.044379Z\",\n    \"state\" : \"SUCCEEDED\",\n    \"notificationPubsubTopic\" : \"w55jj81wazz2ks0oym1vv6qj9gma8m\"\n  }, {\n    \"scheduleTime\" : \"2022-12-14T10:57:35.04449Z\",\n    \"destinationDatasetId\" : \"92g8\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-04-19T10:39:35.04462Z\",\n    \"params\" : { },\n    \"userId\" : \"852r\",\n    \"schedule\" : \"irafibbfluoaetw1z48bnjcxbkyejn4veqzl6udci2f9efdo9lg8r6pzzds60f3izq6yz2x19w5voh9c6hbli3a06iz6wttc4f7odkgippe3hc85\",\n    \"dataSourceId\" : \"13ld\",\n    \"name\" : \"Reed Reichert\",\n    \"errorStatus\" : {\n      \"code\" : 212731996,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Vel est tempore. Commodi dolor cupiditate. Aut aliquid ipsa libero est illum.\"\n    },\n    \"startTime\" : \"2023-01-07T13:27:35.044989Z\",\n    \"endTime\" : \"2022-03-20T11:10:35.045023Z\",\n    \"runTime\" : \"2022-10-12T14:17:35.045062Z\",\n    \"state\" : \"RUNNING\",\n    \"notificationPubsubTopic\" : \"2gfk0leyyx9vavegdaeec43qrdz03dzyk7hykl7awldndipo6elwop14m6rco112wkqguzmnhohwpp2b31x43y2qevsz\"\n  }, {\n    \"scheduleTime\" : \"2023-02-07T10:34:35.04518Z\",\n    \"destinationDatasetId\" : \"2r1z\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-06-25T13:53:35.045377Z\",\n    \"params\" : { },\n    \"userId\" : \"24tv\",\n    \"schedule\" : \"la7fsx5jpl99wlgqg5r6pe7pzfw71rj1xwrm56w23tajmfxl8avokv4qp8beaw952pdr0fnencj43onfvfhqg1ee0bju157dc8v3xhuru7kkwelyi1oggrix4q2sodelxlo5dvwpjg5kn58b9ufngv0vw7e31td4scz6fueg\",\n    \"dataSourceId\" : \"ua8o\",\n    \"name\" : \"Ronnie Cronin\",\n    \"errorStatus\" : {\n      \"code\" : 590247564,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Molestiae rem id. Possimus possimus quam nostrum. Occaecati molestiae corrupti tempore fuga nisi. Deserunt voluptas et doloribus cumque. Veritatis deserunt et.\"\n    },\n    \"startTime\" : \"2022-07-14T12:49:35.045801Z\",\n    \"endTime\" : \"2022-07-27T12:23:35.045838Z\",\n    \"runTime\" : \"2022-08-29T12:07:35.045872Z\",\n    \"state\" : \"PENDING\",\n    \"notificationPubsubTopic\" : \"uy9ll7ar6qvvdhk6721bu5mfz3pzovhlodj3ymybuw9xfit6wo5jyhmmmq8dphv28i7aea6zdhswcylj0jdb3i53mgsw7817h7z34gkyqjxi983kvublrm7q2zji2q0mkj4cwm8he5wugwv6qrwz4hca6onl\"\n  }, {\n    \"scheduleTime\" : \"2022-11-16T12:29:35.045946Z\",\n    \"destinationDatasetId\" : \"5lms\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-08-22T10:51:35.046112Z\",\n    \"params\" : { },\n    \"userId\" : \"r30c\",\n    \"schedule\" : \"danu9c0pvdwqhxub8ysnnu8hfnqivkfk0kfl45fbmbfyaoawnfhltdsysh1tx937fie377yjptm4q4w74vf6dk8bw1drw9rwrkox4j7ij5gwiegykllbpdq4nq33a6g5wfotpi4e5vinaiy3mxcc2okhytaviytc1ajj47b1l9olrnykeokgx7dm8cbbrqy\",\n    \"dataSourceId\" : \"foo2\",\n    \"name\" : \"Miss Margaretta Sporer\",\n    \"errorStatus\" : {\n      \"code\" : 1245462845,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Magnam fugit non ipsa et commodi harum sequi. Sunt consequuntur vel. Eveniet dolorum doloremque id dolore fuga dolores cumque. Ducimus blanditiis molestiae beatae voluptatem aspernatur a facere.\"\n    },\n    \"startTime\" : \"2022-05-04T11:25:35.046545Z\",\n    \"endTime\" : \"2022-12-06T11:45:35.046582Z\",\n    \"runTime\" : \"2022-05-12T11:39:35.046612Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"vm7oi1rirc654pyfk8um2opcbpcizavhxdkxt6jfz6qtg880ci918zd09kyr6dmo4vukqso7lr7s6ds14p3vt54ig5cklmthsj531bzvyteg0xrzakrx3mburoaeyu8pe38jzg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "521c6534-2219-4020-ab28-c3d139df7045",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.046793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.scheduleRuns",
          "schema" : {
            "description" : "A response to schedule transfer runs for a time range.",
            "properties" : {
              "runs" : {
                "description" : "The transfer runs that were scheduled.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "04e8db56-a71a-4cb8-93e2-2f4e5363c87a",
    "name" : "Returns log messages for the transfer run.",
    "request" : {
      "urlPath" : "/v1/xflhmc905cd63dexucm0d9pkg1uashkv57aj8ilko806homwoqhqm6mis0eycfgonps2qb81uvegb/transferLogs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferMessages\" : [ {\n    \"severity\" : \"INFO\",\n    \"messageText\" : \"2ebkylpjfto1a2pyuk3awr0bqp0ewle\",\n    \"messageTime\" : \"2022-10-09T11:24:35.04131Z\"\n  }, {\n    \"severity\" : \"ERROR\",\n    \"messageText\" : \"83yi2g5a5\",\n    \"messageTime\" : \"2022-12-15T14:12:35.041425Z\"\n  }, {\n    \"severity\" : \"ERROR\",\n    \"messageText\" : \"szfm5w5kd4wnty7d67yyt462y732fkjzxfr73gk08k6zv6puef53wwi90ha8nrxl227o8m8vegqkma1q0bvkowfkw0nol3ropcfc8lhnhkeh1wa92gi0xw07eygbt4l8zu33wqe1b0kigkt3g3k4wj7t12s88m\",\n    \"messageTime\" : \"2022-10-15T13:34:35.041501Z\"\n  }, {\n    \"severity\" : \"WARNING\",\n    \"messageText\" : \"lqntsbkf5dn7g08vuwved3tqhjsbeguey4vkvk7nifw83zy3x7qgzplixottwue0shq60wf8x99swt5kqgiybb44340415cq5yopcdxwsb\",\n    \"messageTime\" : \"2022-05-10T10:54:35.041894Z\"\n  }, {\n    \"severity\" : \"INFO\",\n    \"messageText\" : \"5n6dq6psvc23399j8ztdsni5553frt6o4m7ziqeodtx7v36eil6kasbq5dswfwv1ykct7pmr3libt\",\n    \"messageTime\" : \"2022-07-23T11:17:35.041968Z\"\n  }, {\n    \"severity\" : \"INFO\",\n    \"messageText\" : \"vujc6joa9028g4ymba32r0uh9qk50thfsluwevkhcoatdfglq0lr43kmyk9hgqamm4tzeiwdht8q5po1cxis5f8a0xl78wfp9blhkg9bwjvirgmgl8pel3ri5qwix03hlz0h88b1gf8aje25pti5pphomezofebcyzsf1oi57sdq3\",\n    \"messageTime\" : \"2022-11-15T12:34:35.04203Z\"\n  }, {\n    \"severity\" : \"MESSAGE_SEVERITY_UNSPECIFIED\",\n    \"messageText\" : \"pf6gh1bl0hbek96vjx09hyytbn2ksetnhweadvahipvyn132fixwj8xvsj5xw6sp7l1n1g2n\",\n    \"messageTime\" : \"2022-12-12T13:58:35.042092Z\"\n  }, {\n    \"severity\" : \"WARNING\",\n    \"messageText\" : \"msn57idzscehiltada3ox3sh156kpegcrxb32tp1x9n4b6xwj5qgqde89ol66qorzz3v7v\",\n    \"messageTime\" : \"2022-04-19T11:40:35.042157Z\"\n  } ],\n  \"nextPageToken\" : \"4ptmuk6xaqmggpc1jfimzn2ymuq3a1yjow0o3c8m7i2ggkem25mhv5zuu79uraljkjmb7pgthg6uo8easanxd9mt8rbofn38orr3qisupoiisbwxcihnehxlqb5skgey1rq9gpmmicp1rnsorjva5nz18tqfvkh2vj4d901b56n7nculc32vt4sson\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04e8db56-a71a-4cb8-93e2-2f4e5363c87a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.042318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
          "schema" : {
            "description" : "The returned list transfer run messages.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferMessages" : {
                "description" : "Output only. The stored pipeline transfer messages.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferMessage"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1ccbcc39-7f28-42b8-965e-cc7fa3f08136",
    "name" : "Creates a new data transfer configuration.",
    "request" : {
      "urlPath" : "/v1/nh44y5gy6k434t4d31wpkmeoeqqbet05k42906nq31gip6ui0354c5vknywlfdn0b1zrjx0n45tosymym0q5rho3ams3ly665nihv2299b5np20o5gwmd9temwq8v15xm78s0hq9mo5kls1hdokx28kzo1da1gx41dxsienxy/transferConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"destinationDatasetId\" : \"oh74\",\n  \"displayName\" : \"Verda Senger\",\n  \"scheduleOptions\" : {\n    \"disableAutoScheduling\" : false,\n    \"startTime\" : \"2022-03-24T12:55:35.04031Z\",\n    \"endTime\" : \"2023-01-09T13:16:35.04035Z\"\n  },\n  \"ownerInfo\" : {\n    \"email\" : \"tpgk57bv39c2cxxwdwrdkuwh9zi7yp2i1475jux7atxl5qtpcha3znq7wv1v92zik7725bvjqmpq6mwxhbg4pdvpyjrly6t43mk7r\"\n  },\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : false\n  },\n  \"updateTime\" : \"2022-06-09T10:23:35.040425Z\",\n  \"datasetRegion\" : \"sghn36mmlmdd6\",\n  \"params\" : { },\n  \"userId\" : \"7701\",\n  \"dataRefreshWindowDays\" : 553134519,\n  \"schedule\" : \"76g6jck0ouiecggjul574w3r879ztm28ve4zniaxc45qgxtxi74230fnb3ehajz20b3dpppmsk7c62v93sn4ocmmkkgbiwkpx2l0z7ahnni052g8pqkht01pjuchqzalkf533bgdmhl9\",\n  \"dataSourceId\" : \"5nyq\",\n  \"nextRunTime\" : \"2022-10-11T13:54:35.040749Z\",\n  \"name\" : \"Joel Nicolas\",\n  \"disabled\" : false,\n  \"state\" : \"SUCCEEDED\",\n  \"notificationPubsubTopic\" : \"i1dbv0hgccyz41wqvlycxnuyyb8hzp2rpmtp6krvh1e8cz96tryq6v15d73ugabvm7i84oxb7jmab1rgfm6a082ze4nyirj03ah6zwfs9hjmh96cb3ete0agas4mha3sv9yy8cy2n44vehbl9xtind4cgax5x89sj31qnjsxma\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ccbcc39-7f28-42b8-965e-cc7fa3f08136",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.041205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.create",
          "schema" : {
            "description" : "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
            "properties" : {
              "dataRefreshWindowDays" : {
                "description" : "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                "format" : "int32",
                "type" : "integer"
              },
              "dataSourceId" : {
                "description" : "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
                "type" : "string"
              },
              "datasetRegion" : {
                "description" : "Output only. Region in which BigQuery dataset is located.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "The BigQuery target dataset id.",
                "type" : "string"
              },
              "disabled" : {
                "description" : "Is this config disabled. When set to true, no runs are scheduled for a given transfer.",
                "type" : "boolean"
              },
              "displayName" : {
                "description" : "User specified display name for the data transfer.",
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "name" : {
                "description" : "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                "type" : "string"
              },
              "nextRunTime" : {
                "description" : "Output only. Next time when data transfer will run.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "type" : "string"
              },
              "ownerInfo" : {
                "$ref" : "#/components/schemas/UserInfo"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "type" : "object"
              },
              "schedule" : {
                "description" : "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
                "type" : "string"
              },
              "scheduleOptions" : {
                "$ref" : "#/components/schemas/ScheduleOptions"
              },
              "state" : {
                "description" : "Output only. State of the most recently updated transfer run.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Data transfer modification time. Ignored by server on input.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd7f5d1c-8b6d-4352-8a8d-cc42a4cd5e84",
    "name" : "Returns information about all transfer configs owned by a project in the specifi...",
    "request" : {
      "urlPath" : "/v1/ptlhynjzh75kfzvmnxf27glm9urmggseywbt1bsf9ffwqkmox07v55yqwedc166wygl03lrfq8z1wk1v115e0pd8v63mrkmxb1ww3deo0ssfe7bczihnf911i2kymgg3omn/transferConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"miv99qekx6ir9563ql64lsb80dqk9nnnymek9sdjgce7ev1ngr9vydfe16ny7yrxnyw33xbxxqak9kbyhat72a8ofh64hr1balf67nptko1jbcex6\",\n  \"transferConfigs\" : [ {\n    \"destinationDatasetId\" : \"hjd5\",\n    \"displayName\" : \"Gregorio Huels\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : false,\n      \"startTime\" : \"2023-01-02T13:50:35.038572Z\",\n      \"endTime\" : \"2022-12-13T10:29:35.038618Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"ccgl1uw9q1mdbd2nsg6l32xnsawu3003xwr2g7lcogj0enj5r6q6ha71e8ee0tpck9ugn4m9vb\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-07-15T11:23:35.03869Z\",\n    \"datasetRegion\" : \"j1bnbo48bsictcq8sszv\",\n    \"params\" : { },\n    \"userId\" : \"s9uj\",\n    \"dataRefreshWindowDays\" : 304790246,\n    \"schedule\" : \"jq9dffrx91uk6dx33tkwyl0phxckhh07dg35o6mrequtyn7h1pz7r072vumv533k0nw47j11xc4vso413roikok3h6so62esl2ixnat56by0leij7ckn\",\n    \"dataSourceId\" : \"o720\",\n    \"nextRunTime\" : \"2022-10-09T11:33:35.038987Z\",\n    \"name\" : \"Houston Tremblay\",\n    \"disabled\" : false,\n    \"state\" : \"PENDING\",\n    \"notificationPubsubTopic\" : \"yvpgmfo01jx4uqo7f1xpicae9qbpfgszojpdz7tho1xkhyiri60b0dpkb0qlcbopqu1rduavt39f9hgcb9hymqh73bcztfuywpc7vujh2aikr7vunkzg5z3lbyg9587yubyk9xvo9pvsucnxgmr\"\n  }, {\n    \"destinationDatasetId\" : \"jd3l\",\n    \"displayName\" : \"Miss Exie Hegmann\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : true,\n      \"startTime\" : \"2023-01-15T14:01:35.039351Z\",\n      \"endTime\" : \"2022-12-01T13:22:35.039388Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"n4hkhmpbntsmruw5he7gfw95lzh9rk3amu0hdw6lcbawwy79vchsrajjmsshs6wtgcf5eueweklryu\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-10-13T10:48:35.039443Z\",\n    \"datasetRegion\" : \"c7gw0ysgvutv6at5xqlx17c9qpsd1ow0fllemuz9gp2vrfnukwdbtn2tp3zepurk2rcqnnree18jrmrowji3fybs6hgumzas8dcuplebgpyrume\",\n    \"params\" : { },\n    \"userId\" : \"797l\",\n    \"dataRefreshWindowDays\" : 341191408,\n    \"schedule\" : \"l7rrkd\",\n    \"dataSourceId\" : \"m636\",\n    \"nextRunTime\" : \"2023-02-16T12:05:35.039704Z\",\n    \"name\" : \"Dr. Carroll Goldner\",\n    \"disabled\" : true,\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"2h19t9jf8xuik6jjhr8v26o11lzp0f0y0e8gwk0l6izpehglcln81d6ey0i2hmw7wmjsw041iceu6d0ayhcgyi92bupwtwl9einlswbi6fmhk33plj74y2l1i\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd7f5d1c-8b6d-4352-8a8d-cc42a4cd5e84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.039998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.list",
          "schema" : {
            "description" : "The returned list of pipelines in the project.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferConfigs" : {
                "description" : "Output only. The stored pipeline transfer configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferConfig"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "52ee1a1f-0f5b-49dc-9118-f8482c45f4e2",
    "name" : "Returns information about running and completed transfer runs.",
    "request" : {
      "urlPath" : "/v1/yoaabzzc24cj1946v/runs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"44s4asjiwgf8649m0kcbp8bqlfna6g3iiihqtc6473pr0k8ogag6qup80bbdudcv5yliafnhz9ww6739qhu4v8v93xitec5de5u81\",\n  \"transferRuns\" : [ {\n    \"scheduleTime\" : \"2022-08-09T12:11:35.036831Z\",\n    \"destinationDatasetId\" : \"k275\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-10-12T13:19:35.036976Z\",\n    \"params\" : { },\n    \"userId\" : \"5363\",\n    \"schedule\" : \"6o65ohnfs5qpe5rdlebbuqop4b8vh4dsxor2ek5ixl2r0b8tm1wznwqm1vau42w9lc4fwvfxnig2nla15hb5ahp85q492ael5\",\n    \"dataSourceId\" : \"1k3j\",\n    \"name\" : \"Duane Davis\",\n    \"errorStatus\" : {\n      \"code\" : 1253112192,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Et quasi enim. Aut ut voluptate nostrum fugit qui. Excepturi repudiandae porro fugiat non assumenda laudantium. Aperiam cum doloribus eveniet ex delectus excepturi. Voluptas quaerat voluptas.\"\n    },\n    \"startTime\" : \"2023-01-29T11:48:35.037376Z\",\n    \"endTime\" : \"2022-06-21T13:04:35.037414Z\",\n    \"runTime\" : \"2022-06-13T12:38:35.03745Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"5iv7udr1bb68b326j5b1qh0ld4kpmhz6lernjkc8ja8ic2ldk7o7mb75qvvvbtsb0y3bgaldvlex5s9rxpg9o44ohg53tegi1cnivxjoide0217b7ht2ju0gu3vy2j8h5mj0nme1606vjkuiee8rfjuf1wnbad89wrvuxwpc18\"\n  }, {\n    \"scheduleTime\" : \"2022-08-27T10:24:35.037525Z\",\n    \"destinationDatasetId\" : \"g3nq\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-12-04T12:19:35.037712Z\",\n    \"params\" : { },\n    \"userId\" : \"etja\",\n    \"schedule\" : \"nl895zz086fw12t\",\n    \"dataSourceId\" : \"l40n\",\n    \"name\" : \"Erin Brown\",\n    \"errorStatus\" : {\n      \"code\" : 1687499211,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Voluptas quo deserunt in repellat. Quaerat similique aliquam laborum qui. Voluptatem perferendis sint aut sapiente quaerat amet non. Culpa molestiae atque eaque.\"\n    },\n    \"startTime\" : \"2022-08-05T10:54:35.038073Z\",\n    \"endTime\" : \"2022-09-10T11:50:35.038107Z\",\n    \"runTime\" : \"2022-10-18T11:58:35.03814Z\",\n    \"state\" : \"RUNNING\",\n    \"notificationPubsubTopic\" : \"14s04d5qu8weduyobn4wyhxzr9gvdq0e43mvng0165du05x0g98v72raw6yockcz9m9jefydorw8w27\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52ee1a1f-0f5b-49dc-9118-f8482c45f4e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.03832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.list",
          "schema" : {
            "description" : "The returned list of pipelines in the project.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferRuns" : {
                "description" : "Output only. The stored pipeline transfer runs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b9429ec5-e862-4b48-8b98-7b0643a8f4fb",
    "name" : "Lists supported data sources and returns their settings.",
    "request" : {
      "urlPath" : "/v1/72zeoer7wro9jki3th8uu9zo41upct0c4n485pbe5n6icymlh6w0lvr47ihjiin4sp8k/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"1gkc7jmtm03qp217rb56kavsxc409qr76ofyva35w470\",\n  \"dataSources\" : [ {\n    \"clientId\" : \"f8o3\",\n    \"minimumScheduleInterval\" : \"jhwltjkyoiwm1s5xnp9etqm4sm7k2i2rkj88qt0ygrfs2e6ad7nehepjqpp5jexxc5do3qn9uwt0c3d7oojfka7i\",\n    \"defaultSchedule\" : \"b1mzcbfox0ftua2sj5npwngf6l57kz0n9na8lski7ykal6lfsv6gszn1c1pprxolyfs364d2295quefont5xvgjw5tf1u8mjvbh6vzxc93xrfmhdn\",\n    \"displayName\" : \"Abdul Klocko\",\n    \"description\" : \"Dolores omnis pariatur. Laborum dolor et dolor voluptatem placeat. A id qui tenetur doloribus ipsum facilis minus.\",\n    \"helpUrl\" : \"https://web.example.mocklab.io/119668\",\n    \"dataRefreshType\" : \"DATA_REFRESH_TYPE_UNSPECIFIED\",\n    \"dataSourceId\" : \"4wko\",\n    \"manualRunsDisabled\" : true,\n    \"supportsCustomSchedule\" : false,\n    \"name\" : \"Maura Denesik\",\n    \"supportsMultipleTransfers\" : true,\n    \"authorizationType\" : \"FIRST_PARTY_OAUTH\",\n    \"transferType\" : \"BATCH\",\n    \"defaultDataRefreshWindowDays\" : 1954114300,\n    \"scopes\" : [ \"befhjww08eix0wyp6tf1lf1pvgpk85f5jhwrvcz2cyonawvanuw6oufq8lrghvsjptpuq0lj8dbmbph3oeajcjj4ztnf47cwammhg6g3zd6q4awlhka6kth0756a4uj3t7qlksin1a5d931fatb95cppshf26ed925lrsm\", \"l9bgji82o6l2myarhghbnnpu4nunr1nkl4igg6fw\", \"53ryh0afhj7rxiufnxuc0s8eu4ipqoeor0mpsx6e91hmtyvhhefutdd3x65r21\", \"a7x3xxqvcddji646q9mghfwib6be2s1kc47jnn4js33ji4qmtt9nfyn9jjk6xz3wtzza872ydololxmeugzb\" ],\n    \"parameters\" : [ {\n      \"allowedValues\" : [ \"7mys0vm32yvy7zchimno520yn6b5zn9lzxaawth5qg5q4armvdho7xmxc2l5a2wphdwohhnmlejo78mhvecdp8wd\", \"tcz93auze3psx4kehxde7x0w1s65d0abvwh34a0jgx06wnmn0opmp2d6remy7terc4gmg6e45fmauu5z\", \"fb8lonqipviekjjma10c8e0kebvcy35r6y99gwmduca06ojd0yuzng4z8g5r50d1m22\", \"g4i3ohrb8iym8lly7lvge89bxhkyp4zw2raatanofj20c5dge4l3rizvy8rm63igwm0lumckahdfycvingfvxo8d5yeqebxd1hfdccnned1w1fkc2zkbuv93r7l59uo134yhehbtj9cyeq3ev8vsy3a68k0n42cqovjp\", \"mhe5piq6eunh3ysvdv29h7ru5xhenhwp9fsr091i\", \"hldlk59qlim84h5k6z0ahledh9znhy28a1miri9d7ac9jbg1ku1o596r2t0xhb4fu8txer6nc3e91tt9eajio8de4rrd5g61zeim2vgvk73hsk9ccr5wi7rtbff95i8svj5m3z37nvfwl72wmx76fcoxch9gc3ph1vv0kbr1ucfqgv5bh1q9arb\" ],\n      \"displayName\" : \"Judson Hansen\",\n      \"maxValue\" : 6.827054750268934E306,\n      \"deprecated\" : true,\n      \"description\" : \"Id facere exercitationem atque. Voluptatem voluptates et voluptas a illo omnis voluptas. Voluptas et dolorem qui libero at molestiae magni. Deleniti molestias ratione soluta est. Et explicabo nostrum \",\n      \"type\" : \"INTEGER\",\n      \"repeated\" : true,\n      \"required\" : false,\n      \"validationDescription\" : \"Qui autem ut nobis. Ut libero vel. Rerum consequatur quod animi magni ipsum dicta. Rerum inventore nulla et eligendi.\",\n      \"immutable\" : false,\n      \"minValue\" : 7.161774689968927E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/295160\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"paramId\" : \"vd3e\",\n      \"validationRegex\" : \"d8y9di818vx2wm8h8q4soup8xmmt9zjzf93e0a98zjto\"\n    }, {\n      \"allowedValues\" : [ \"dirmpk1ncpiar905zf1okssj7b\", \"d34zp4ga0fbnddd176ugdlop036oqwep0qrybypehzhnsm8ftw5xjq0rtmzkmxn\", \"2p3izd1z5v\", \"artn4uzrto9qfuvpp7y14qbfzo10bw0srhanf4d7svcd3tzb63mv05x7ij25gzo1hsstn0010zk9ucgsyxnuqoebpxu7hwk2x7redfwf6s5v3zkn5ejm48y5z6lrzuw8h2hihdkz6jvmayxc82q7qp8bq7zp9m4ammgsyi5ckrewc1cfh7mozb5kl09l4g3z5z3hoy\", \"11vx09abwlsboolng3enmi866z3kywmwz3z3a9zyb14ajofiqqbbfmk89edncibcpw26vyuoe9ory9lh11892p4bhf8ap0qby439kgpihws9p86wkp2qff5fg10xgqbodlyw9nd60qmp660ola8e04v\", \"63ll67y68h0xndol49s2iwr6xef4c9bahzx3ovvfrf78p1t3h0e0el2463mjrk116r2m76b6m2olly9we96hxkv5jwdim5415jmquqdnvxdwbhp8vl\" ],\n      \"displayName\" : \"Boris Langworth II\",\n      \"maxValue\" : 8.807518207750288E307,\n      \"deprecated\" : false,\n      \"description\" : \"Ullam ut officiis necessitatibus numquam cumque. Omnis quam voluptatem. Aut sunt asperiores enim. Illum aut ab amet similique.\",\n      \"type\" : \"DOUBLE\",\n      \"repeated\" : true,\n      \"required\" : true,\n      \"validationDescription\" : \"Excepturi iure pariatur ducimus fuga sit. Provident adipisci iusto quis molestiae. Sed aperiam quae molestias vero quam nisi occaecati. Quisquam maxime ullam.\",\n      \"immutable\" : false,\n      \"minValue\" : 1.3064400854614677E308,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/597744\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { } ],\n      \"paramId\" : \"4024\",\n      \"validationRegex\" : \"feth4btkz3z96wpvs1jkg0rturgyzacy9gkdswvvcri7sbv81qa4t95iq876rtzdt1z\"\n    }, {\n      \"allowedValues\" : [ \"810rrpcoccgsnavgtl9jjejzuuu9nyr9vqd3we6zcozw00ov8ftwi83584q\" ],\n      \"displayName\" : \"Hayden Dare\",\n      \"maxValue\" : 9.106983192694081E307,\n      \"deprecated\" : false,\n      \"description\" : \"Sit cumque quis quam sit quidem. Alias quia esse atque maxime est. Voluptate molestias placeat. Magni non odit ut. Pariatur veniam minus exercitationem molestiae.\",\n      \"type\" : \"BOOLEAN\",\n      \"repeated\" : false,\n      \"required\" : true,\n      \"validationDescription\" : \"Eius libero et. Sit suscipit nisi molestiae distinctio. Ipsa omnis dolorem. Ut explicabo ipsa facere veritatis quasi quis.\",\n      \"immutable\" : false,\n      \"minValue\" : 1.7866615488698703E308,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/257016\",\n      \"recurse\" : false,\n      \"fields\" : [ { } ],\n      \"paramId\" : \"0047\",\n      \"validationRegex\" : \"hp2gby2encx37bp9tiydug8eza\"\n    } ],\n    \"updateDeadlineSeconds\" : 1611546849\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9429ec5-e862-4b48-8b98-7b0643a8f4fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.03668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.dataSources.list",
          "schema" : {
            "description" : "Returns list of supported data sources and their metadata.",
            "properties" : {
              "dataSources" : {
                "description" : "List of supported data sources and their transfer settings.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c4b53c33-68b4-4e46-8dbd-4b1cc88a78f8",
    "name" : "Enroll data sources in a user project. This allows users to create transfer conf...",
    "request" : {
      "urlPath" : "/v1/Latia+Nikolaus+Sr.:enrollDataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4b53c33-68b4-4e46-8dbd-4b1cc88a78f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.034135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.enrollDataSources",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c4208b68-5458-4060-8efe-0c9b4170ff41",
    "name" : "Returns true if valid credentials exist for the given data source and requesting...",
    "request" : {
      "urlPath" : "/v1/Miss+Ignacia+Waelchi:checkValidCreds",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"hasValidCreds\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4208b68-5458-4060-8efe-0c9b4170ff41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.034021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
          "schema" : {
            "description" : "A response indicating whether the credentials exist and are valid.",
            "properties" : {
              "hasValidCreds" : {
                "description" : "If set to `true`, the credentials exist and are valid.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "501750a5-8b6c-4bf7-8412-7ee20be0445d",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Christy+Langworth/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"mwzmp0db3udn01q0if5arkjx97lzir7ujoyl1sn9jvks2fpnu91l3hkv405agh5crl3s\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Jan Stamm\",\n    \"locationId\" : \"d6rc\",\n    \"name\" : \"Winona Fahey\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Kennith Gorczany V\",\n    \"locationId\" : \"fad5\",\n    \"name\" : \"Carey Willms\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dean Bayer MD\",\n    \"locationId\" : \"4kch\",\n    \"name\" : \"Tierra Skiles DDS\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Shena Doyle\",\n    \"locationId\" : \"93ew\",\n    \"name\" : \"Cordell Harber\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Andrew Mohr\",\n    \"locationId\" : \"z2k5\",\n    \"name\" : \"Genaro Ruecker\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Kelley Daugherty\",\n    \"locationId\" : \"65sa\",\n    \"name\" : \"Stepanie Daugherty\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Tawna Rice\",\n    \"locationId\" : \"0058\",\n    \"name\" : \"Jospeh Towne\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Renetta Schoen\",\n    \"locationId\" : \"847z\",\n    \"name\" : \"Marylee Osinski IV\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "501750a5-8b6c-4bf7-8412-7ee20be0445d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.033864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8fb31919-b6c0-4dd7-9585-81e0a583b696",
    "name" : "Updates a data transfer configuration. All fields must be set, even if they are ...",
    "request" : {
      "urlPath" : "/v1/Mr.+Lucas+Ratke",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"destinationDatasetId\" : \"q82s\",\n  \"displayName\" : \"Ms. Drew Hudson\",\n  \"scheduleOptions\" : {\n    \"disableAutoScheduling\" : true,\n    \"startTime\" : \"2023-02-10T13:21:35.029685Z\",\n    \"endTime\" : \"2022-12-31T12:14:35.029788Z\"\n  },\n  \"ownerInfo\" : {\n    \"email\" : \"ji1vtdz8tanjmezmdw9sahfkgattjn5w9x30mevk19okm5jy5ehspa2qd7jtsjfnhe2z5crq\"\n  },\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : false\n  },\n  \"updateTime\" : \"2023-02-27T10:58:35.029982Z\",\n  \"datasetRegion\" : \"xkx3jm88n00p0p3bb88ve66t658658ria2v39b8qra0ruibc9t4fotstbqospkjqcbpob25h90qnpq4oj9ubnl4ekxpzkm6jf1pn9k5b1x7dpufro65xcuhhtoei25kgv2fnfclaskduh2u0ozafz39ty546ma920c2gkjhr\",\n  \"params\" : { },\n  \"userId\" : \"8119\",\n  \"dataRefreshWindowDays\" : 966108222,\n  \"schedule\" : \"0pe4p5rux279ek0u4vllk2bva4zirxkfx7cnpajynhu8g5jxnt61a3t57mqtcfhn6eh5b7krr2as6t4j0lxpdtiiwr\",\n  \"dataSourceId\" : \"tuy4\",\n  \"nextRunTime\" : \"2022-05-06T12:43:35.030881Z\",\n  \"name\" : \"Ms. Jerri Murray\",\n  \"disabled\" : true,\n  \"state\" : \"SUCCEEDED\",\n  \"notificationPubsubTopic\" : \"3c1lq0v35wko4zd56jtofumcwsr0vntvanfuv2fm2s3az9qoa8gshcrhpj5192ny9nce7ibfk31jt2hs817h77c89iskpr0zsey55wohzd6w7fpjpaebqiq1cf8has\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fb31919-b6c0-4dd7-9585-81e0a583b696",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.031776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.patch",
          "schema" : {
            "description" : "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
            "properties" : {
              "dataRefreshWindowDays" : {
                "description" : "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                "format" : "int32",
                "type" : "integer"
              },
              "dataSourceId" : {
                "description" : "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
                "type" : "string"
              },
              "datasetRegion" : {
                "description" : "Output only. Region in which BigQuery dataset is located.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "The BigQuery target dataset id.",
                "type" : "string"
              },
              "disabled" : {
                "description" : "Is this config disabled. When set to true, no runs are scheduled for a given transfer.",
                "type" : "boolean"
              },
              "displayName" : {
                "description" : "User specified display name for the data transfer.",
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "name" : {
                "description" : "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                "type" : "string"
              },
              "nextRunTime" : {
                "description" : "Output only. Next time when data transfer will run.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "type" : "string"
              },
              "ownerInfo" : {
                "$ref" : "#/components/schemas/UserInfo"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "type" : "object"
              },
              "schedule" : {
                "description" : "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
                "type" : "string"
              },
              "scheduleOptions" : {
                "$ref" : "#/components/schemas/ScheduleOptions"
              },
              "state" : {
                "description" : "Output only. State of the most recently updated transfer run.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Data transfer modification time. Ignored by server on input.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0882298e-1567-43bd-8362-8e463a5348b7",
    "name" : "Returns information about the particular transfer run.",
    "request" : {
      "urlPath" : "/v1/Rickey+Kuhn",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scheduleTime\" : \"2023-01-20T10:49:35.024913Z\",\n  \"destinationDatasetId\" : \"23x1\",\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : false\n  },\n  \"updateTime\" : \"2022-11-11T13:13:35.025607Z\",\n  \"params\" : { },\n  \"userId\" : \"434y\",\n  \"schedule\" : \"xo9965qu1jluj05f2tbn8bnd09wiz0vshznhv1jgoqtyw3qwl\",\n  \"dataSourceId\" : \"d5su\",\n  \"name\" : \"Dennis Weimann\",\n  \"errorStatus\" : {\n    \"code\" : 745757058,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Nostrum voluptas voluptatum voluptatem et alias laudantium facere. Tenetur possimus sunt tenetur voluptatem id qui sit. Tempore provident consequatur laboriosam sed ut voluptates maiores.\"\n  },\n  \"startTime\" : \"2022-12-13T11:59:35.026788Z\",\n  \"endTime\" : \"2023-01-19T12:24:35.026886Z\",\n  \"runTime\" : \"2022-10-12T14:03:35.026981Z\",\n  \"state\" : \"PENDING\",\n  \"notificationPubsubTopic\" : \"yrryceepw7bsj4htupjupmmas8yb289bk7iyzor6qhcuexp5zbyngfdlgaoi1juma1pvgtz8tauy2gozntj1xrqvz3ezukhkkk1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0882298e-1567-43bd-8362-8e463a5348b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.02803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.get",
          "schema" : {
            "description" : "Represents a data transfer run.",
            "properties" : {
              "dataSourceId" : {
                "description" : "Output only. Data source id.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "Output only. The BigQuery target dataset id.",
                "readOnly" : true,
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "endTime" : {
                "description" : "Output only. Time when transfer run ended. Parameter ignored by server for input requests.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "errorStatus" : {
                "$ref" : "#/components/schemas/Status"
              },
              "name" : {
                "description" : "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run.",
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "readOnly" : true,
                "type" : "string"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "readOnly" : true,
                "type" : "object"
              },
              "runTime" : {
                "description" : "For batch transfer runs, specifies the date and time of the data should be ingested.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "schedule" : {
                "description" : "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this.",
                "readOnly" : true,
                "type" : "string"
              },
              "scheduleTime" : {
                "description" : "Minimum time after which a transfer run can be started.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Output only. Time when transfer run was started. Parameter ignored by server for input requests.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Data transfer run state. Ignored for input requests.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last time the data transfer run state was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0dcb0d2-1a5f-43a1-92dc-6d8277064e5f",
    "name" : "Deletes the specified transfer run.",
    "request" : {
      "urlPath" : "/v1/Eusebio+Beatty",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0dcb0d2-1a5f-43a1-92dc-6d8277064e5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.024842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}