{
  "mappings" : [ {
    "id" : "4d961cbb-6e18-335e-b02f-888f59a9aef5",
    "name" : "Start manual transfer runs to be executed now with schedule_time equal to curren...",
    "request" : {
      "urlPath" : "/v1/qs7cy59qo0baz32kok0jl1hgbnhdonro1jgpf84ynhyv0err03wuv8tzziitejygiffn70pt4bvssxrx42jy5lwzfxg59mxs2ps8pnvjtxeibxyyc89x8oz3p9q3a5ci741w2i4mo80lybgywpnl746bg14jc6l5fxkpplyzj6b459wxwe4zz:startManualRuns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"runs\" : [ {\n    \"scheduleTime\" : \"2022-06-21T13:10:06.742424Z\",\n    \"destinationDatasetId\" : \"965z\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-12-31T14:14:06.742523Z\",\n    \"params\" : { },\n    \"userId\" : \"4ihl\",\n    \"schedule\" : \"u12ekxv6didwj400tgtstduilp8g6ulr61tq5v8z2jskzpacn1o9\",\n    \"dataSourceId\" : \"w7x0\",\n    \"name\" : \"Ms. Mike Ritchie\",\n    \"errorStatus\" : {\n      \"code\" : 1205593033,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nam fuga quibusdam nobis beatae omnis quis odio. Sit et ut consectetur omnis. Voluptas hic aut.\"\n    },\n    \"startTime\" : \"2022-12-13T15:49:06.742792Z\",\n    \"endTime\" : \"2023-02-02T15:12:06.74282Z\",\n    \"runTime\" : \"2022-06-06T14:38:06.742846Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"2oomd73sd3us0e1ks7l9jaka6xlnr5z9e\"\n  }, {\n    \"scheduleTime\" : \"2022-12-22T13:06:06.742897Z\",\n    \"destinationDatasetId\" : \"bhzz\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2023-01-27T16:01:06.742995Z\",\n    \"params\" : { },\n    \"userId\" : \"68j1\",\n    \"schedule\" : \"ddyquna95kfaqqnzmqcmu3mwzw0u0gvty7f62x9pyn28ku5za60kbg5l80opk5qg7asypiawzwj8nuhzkk342mkzfukjsz55jcefth8yxuixkp0fsgav30yets0wnch5wzqxpz7jc5wgpfumafronncdm5bp5mh6s2iua48fopvkl26a27bv12\",\n    \"dataSourceId\" : \"116m\",\n    \"name\" : \"Marhta Beatty\",\n    \"errorStatus\" : {\n      \"code\" : 1817824229,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Mollitia et sit dolorem vitae amet. Ut dolorum fugiat nihil. Ea ducimus optio repudiandae itaque. Natus minima suscipit et quod hic repudiandae dolorem. Et nihil amet et ipsam tempora fugit voluptatem\"\n    },\n    \"startTime\" : \"2022-06-14T15:56:06.743262Z\",\n    \"endTime\" : \"2022-04-19T16:26:06.743288Z\",\n    \"runTime\" : \"2022-06-04T16:14:06.743313Z\",\n    \"state\" : \"CANCELLED\",\n    \"notificationPubsubTopic\" : \"zrib5skcq88sc1m4lfwvsb90jxi\"\n  }, {\n    \"scheduleTime\" : \"2023-02-12T14:24:06.74337Z\",\n    \"destinationDatasetId\" : \"331f\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-07-09T14:19:06.743467Z\",\n    \"params\" : { },\n    \"userId\" : \"pp59\",\n    \"schedule\" : \"ravv8f2dzb5hdmukeeg4z4y38am3qbu27kkhj4a8zz49db39qgjrcl9mp8k05jpes6b\",\n    \"dataSourceId\" : \"8od4\",\n    \"name\" : \"Ardell Corwin\",\n    \"errorStatus\" : {\n      \"code\" : 1486255936,\n      \"details\" : [ { } ],\n      \"message\" : \"Odio odio magni. Doloremque nihil quo. Facere neque quia hic. Occaecati ad officia qui.\"\n    },\n    \"startTime\" : \"2022-09-30T14:41:06.743722Z\",\n    \"endTime\" : \"2023-01-28T13:51:06.743749Z\",\n    \"runTime\" : \"2022-10-18T15:48:06.743775Z\",\n    \"state\" : \"CANCELLED\",\n    \"notificationPubsubTopic\" : \"76at8td4oauycrmojn8uknxftxq4rtou4df30sk5rvgju0uxklm3su1993hm8gdfvqic3n5exn2obrmzqa4wzbeiipmuefxswdh7sf30i9kvj0fs7gkyfnxzr92bemc9za6oo04o2vt3fixjsed0vhdmu6ntv\"\n  }, {\n    \"scheduleTime\" : \"2023-01-04T16:40:06.743823Z\",\n    \"destinationDatasetId\" : \"f587\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-05-26T13:07:06.743921Z\",\n    \"params\" : { },\n    \"userId\" : \"65ro\",\n    \"schedule\" : \"d81hovxthntpvbam5ktjrnrcq2z2o50hnld3cfcakcv1buu9xv1h6h9p9losumyoq6jsc5qg9ysiguz9gk2qkf6c2bxlvuvrbsf5sf21y5fwu8t6vwa07vhpft84jfow5rtdg3pnpnmyhol9umbdly2hhane7g4p9lhqhnhumpjdm7q59yzyhtir3bgvyxztbh3y5t\",\n    \"dataSourceId\" : \"444a\",\n    \"name\" : \"Mr. Guy Kassulke\",\n    \"errorStatus\" : {\n      \"code\" : 493779375,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Consequatur amet eligendi debitis libero est aut ipsum. Aut soluta voluptatem quidem et corrupti. Et quia voluptatibus veritatis accusantium sint soluta. Numquam culpa cum perspiciatis molestias.\"\n    },\n    \"startTime\" : \"2022-05-19T13:39:06.744186Z\",\n    \"endTime\" : \"2023-01-09T15:27:06.744213Z\",\n    \"runTime\" : \"2022-10-19T14:14:06.74424Z\",\n    \"state\" : \"PENDING\",\n    \"notificationPubsubTopic\" : \"b2q6io1fx61wxw8auci5g2cqm26yiu26ld7tsrtw2epxxytk7annhfe8yn7xyjuc2y9oduu4mkgvhox2cn37uywbbo52j7i6d4lug9ii95apc7bad3n8cbmdodredbge2n1g9cfmf0p\"\n  }, {\n    \"scheduleTime\" : \"2022-05-26T15:22:06.74429Z\",\n    \"destinationDatasetId\" : \"dcew\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-11-15T15:05:06.744388Z\",\n    \"params\" : { },\n    \"userId\" : \"w934\",\n    \"schedule\" : \"530vxnjhdbobmzpclptq6fu3hw670eu997u0w9p\",\n    \"dataSourceId\" : \"odb9\",\n    \"name\" : \"Tammie Rodriguez\",\n    \"errorStatus\" : {\n      \"code\" : 1461761635,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Suscipit laudantium odio omnis ad tempore. Reiciendis necessitatibus et veniam. Omnis quas dolor voluptatem dolor. Harum dolor autem corrupti non amet occaecati.\"\n    },\n    \"startTime\" : \"2022-07-03T15:26:06.744645Z\",\n    \"endTime\" : \"2022-06-14T15:12:06.744672Z\",\n    \"runTime\" : \"2022-12-19T15:42:06.744696Z\",\n    \"state\" : \"SUCCEEDED\",\n    \"notificationPubsubTopic\" : \"2q3rc4daheuntcszsny6hske3ywwmnhm1ab4wolrlmrksb0drj5vxbx0b00jh433z8h5k4k6t3ctv3teja007t3p522o7fr0am3043jfy7hiofi5wdtrq3fm5\"\n  }, {\n    \"scheduleTime\" : \"2022-06-26T15:38:06.744747Z\",\n    \"destinationDatasetId\" : \"0rmw\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-07-15T15:55:06.744846Z\",\n    \"params\" : { },\n    \"userId\" : \"3g8f\",\n    \"schedule\" : \"xg4t453nr6insh\",\n    \"dataSourceId\" : \"b974\",\n    \"name\" : \"Mr. Eddie Olson\",\n    \"errorStatus\" : {\n      \"code\" : 1856097616,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Consequatur eos aut assumenda quis non sed. Qui ut nulla ut porro nostrum accusantium. Odio et pariatur consequatur aut et.\"\n    },\n    \"startTime\" : \"2022-08-27T15:25:06.745104Z\",\n    \"endTime\" : \"2023-02-01T16:40:06.74513Z\",\n    \"runTime\" : \"2022-07-14T13:34:06.745157Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"b9d2r3q384xmhlgcx4fw1sg06l8udggiq52pykck5k5ngz0l5onxdqnbfghdbzr2wwd8jp3umkxpi12tuomwo6je5a7n95te9718\"\n  }, {\n    \"scheduleTime\" : \"2022-11-21T16:13:06.745206Z\",\n    \"destinationDatasetId\" : \"4h0q\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-03-28T16:03:06.745305Z\",\n    \"params\" : { },\n    \"userId\" : \"m85x\",\n    \"schedule\" : \"3p6j22u6v8dpbhx2tmsee06astsf6h5bzzfcuz7kly76tt4ft7gjkeq12ph0oro4bc743vz81k4\",\n    \"dataSourceId\" : \"u069\",\n    \"name\" : \"Ira MacGyver\",\n    \"errorStatus\" : {\n      \"code\" : 401890180,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatum nobis similique ipsa sed. Mollitia necessitatibus blanditiis eum mollitia. Voluptatem ea molestiae eveniet ducimus dolores autem. Provident accusamus ea facere enim voluptatum adipisci volu\"\n    },\n    \"startTime\" : \"2022-10-04T14:44:06.745573Z\",\n    \"endTime\" : \"2022-11-28T15:13:06.7456Z\",\n    \"runTime\" : \"2023-01-09T14:50:06.745625Z\",\n    \"state\" : \"SUCCEEDED\",\n    \"notificationPubsubTopic\" : \"0bwi8dbmb9j6o0oy27kzh93gwfnohmen8l47vyjdb04xnn7ftso8b8a10o7q5ixoor69q9y59cuf8avsrbe5jbz4sfg5kc2c8c0pt91dv4kvyj7o2opxn61mzhgcm2br4lp7tsb9jxr72b90k919wh1x0xi8ktutwtdiqcqhj6ah\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d961cbb-6e18-335e-b02f-888f59a9aef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.startManualRuns",
          "schema" : {
            "description" : "A response to start manual transfer runs.",
            "properties" : {
              "runs" : {
                "description" : "The transfer runs that were created.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "84afcbff-3cc5-3aff-b44d-a3bd847ee8be",
    "name" : "Creates transfer runs for a time range [start_time, end_time]. For each date - o...",
    "request" : {
      "urlPath" : "/v1/2d3weyyf5r14ekxwknw4sp01o8hzt2z5hp3jeton0:scheduleRuns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"runs\" : [ {\n    \"scheduleTime\" : \"2023-01-27T15:33:06.741357Z\",\n    \"destinationDatasetId\" : \"f796\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-11-03T16:52:06.74146Z\",\n    \"params\" : { },\n    \"userId\" : \"3g93\",\n    \"schedule\" : \"l5p6j69jwa33rxvtku7tb91aljmtz6qpj8qruvsq8btph7rypei34etfc0qae8yqzegb32uevwdjg5egx\",\n    \"dataSourceId\" : \"l7nn\",\n    \"name\" : \"Tristan Considine\",\n    \"errorStatus\" : {\n      \"code\" : 1689053197,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatem et praesentium blanditiis. Excepturi consectetur quas. Consequatur illo quaerat omnis autem ut suscipit. Iusto est recusandae autem non voluptates.\"\n    },\n    \"startTime\" : \"2023-03-05T16:43:06.741751Z\",\n    \"endTime\" : \"2022-10-04T15:47:06.74178Z\",\n    \"runTime\" : \"2023-02-10T16:48:06.741807Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"st83mag9u176ywp8jxmodwx7q\"\n  }, {\n    \"scheduleTime\" : \"2022-05-18T16:54:06.741863Z\",\n    \"destinationDatasetId\" : \"ur37\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2023-02-28T14:56:06.74196Z\",\n    \"params\" : { },\n    \"userId\" : \"6fa6\",\n    \"schedule\" : \"bu0ccpi8s987mkyb5d3d70hty9ylmlb5a3tdpwjkdunmy00p5vls9ot3ljnw8828kopq5akmahmxzf4xblcrtm3q14p0pxvbm3bqq049nydc\",\n    \"dataSourceId\" : \"vdfl\",\n    \"name\" : \"Kendra Dooley\",\n    \"errorStatus\" : {\n      \"code\" : 345614796,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Hic sint ipsa itaque cumque. Beatae rerum sequi. Possimus nam doloremque.\"\n    },\n    \"startTime\" : \"2022-04-13T13:25:06.742217Z\",\n    \"endTime\" : \"2022-08-03T15:52:06.742242Z\",\n    \"runTime\" : \"2022-04-05T13:28:06.742268Z\",\n    \"state\" : \"RUNNING\",\n    \"notificationPubsubTopic\" : \"ethcfbfjtqh5rz990xgt\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84afcbff-3cc5-3aff-b44d-a3bd847ee8be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.scheduleRuns",
          "schema" : {
            "description" : "A response to schedule transfer runs for a time range.",
            "properties" : {
              "runs" : {
                "description" : "The transfer runs that were scheduled.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "115dfc41-0175-35d3-87b2-b4d535be5240",
    "name" : "Returns log messages for the transfer run.",
    "request" : {
      "urlPath" : "/v1/zw9vyt8okcfarry4xd2wmv7f49wmrszbzbo1p7mj4wzdulecqlnw8kmp3eo7rajk8zkvzdg60y05ctreibv2mxyqaaf7lq94x1xh31g/transferLogs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"transferMessages\" : [ {\n    \"severity\" : \"ERROR\",\n    \"messageText\" : \"cyt7p9wsnneep5wrat5ywv2dtd23ebyh13xvej4g60hx1bdge806tolbapgfh4xsa8h41mvdyv9v4w6bl6ugwvh4mccux11zvrycn3hybwnlfrjbxz2hjjarx7g1nvz6cfqhs6e\",\n    \"messageTime\" : \"2022-05-09T15:43:06.741019Z\"\n  }, {\n    \"severity\" : \"ERROR\",\n    \"messageText\" : \"d22j8afw2tg3o5n7dgdfldiyzt4ppofm6m3cktd1zvfb3msay40t2uah65wbjfntrgxjbdbgyy4wig\",\n    \"messageTime\" : \"2022-06-14T15:39:06.741065Z\"\n  }, {\n    \"severity\" : \"WARNING\",\n    \"messageText\" : \"sfuf8i7whnmt2buzyprqb3nj2bnmx7hl71d2ufpfmvsseefrfxnq9n3g7izmrudvfgs8zbbfduuivdwuvqrloz1pdqrr0y9vxi\",\n    \"messageTime\" : \"2022-08-11T14:17:06.741113Z\"\n  }, {\n    \"severity\" : \"INFO\",\n    \"messageText\" : \"t8yr3x6vkxeqd157kejdgb26lo814dvci20fa6e0s0uo3ye0rbn66i0ym9c8lyn0jb2h8heg610ka6nclsh5pebab413cvfpa5y3x6iq2ahzum\",\n    \"messageTime\" : \"2022-11-19T14:35:06.741162Z\"\n  }, {\n    \"severity\" : \"INFO\",\n    \"messageText\" : \"mhm7l6hap1tpzdzvyf880a9lug3cnnp25emv6beevp5wzyfjvbj2hpzajvw56zvg1uot8kce993w6xgkdnpgyduzrxxuq58i3x0fhhe00toqowus9avnvv4m61ja7ugo1\",\n    \"messageTime\" : \"2023-03-02T13:32:06.741209Z\"\n  } ],\n  \"nextPageToken\" : \"zkgcoq9zis106vk0yd4dabj7sqckks3c63xagfmbxaq9sy8vbye0w9r19we9c3z8aoc40f64hmwmjt4tev94nt4fxi3zz4l14lfw1nd3xghj7lhd6qk65aeg3td48f5y7rg7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "115dfc41-0175-35d3-87b2-b4d535be5240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.transferLogs.list",
          "schema" : {
            "description" : "The returned list transfer run messages.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `GetTransferRunLogRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferMessages" : {
                "description" : "Output only. The stored pipeline transfer messages.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferMessage"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "0f1a6cac-e990-39d9-b33c-04652bb0e824",
    "name" : "Creates a new data transfer configuration.",
    "request" : {
      "urlPath" : "/v1/ovtvusai9l8d0i7pofqglhyx81sklvw461xov6nguap9uk/transferConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"destinationDatasetId\" : \"tae5\",\n  \"displayName\" : \"Dannie Spinka\",\n  \"scheduleOptions\" : {\n    \"disableAutoScheduling\" : false,\n    \"startTime\" : \"2022-06-19T14:58:06.74041Z\",\n    \"endTime\" : \"2023-02-16T13:23:06.740442Z\"\n  },\n  \"ownerInfo\" : {\n    \"email\" : \"lkf5c2ng6cc9rtdvv52v0y33cost83j2yjdfvc620qxq0kv8cg8ewmjmuacgnd\"\n  },\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : false\n  },\n  \"updateTime\" : \"2022-12-02T16:36:06.740487Z\",\n  \"datasetRegion\" : \"01l70tvd9xhu0c6f5meicyl6jlv8uyylr769a11yhkiljlpzil1k7nbrarjeio4sf3igjtb8cy3wowkmjc2vyfub5ueiy097iuxj161fyn5upg4mo7gq1ive66rvot9lumrzmz6jqnyb86pkoibt44p4f8qxblrw8dgq9um4dbwc0du81y8\",\n  \"params\" : { },\n  \"userId\" : \"u9v2\",\n  \"dataRefreshWindowDays\" : 160130140,\n  \"schedule\" : \"3dbpstfoyxccfmno99xbkyfgh15k915agqvlrsixk2275diztn2lql9gcxckmff6ri6e57o0jj057zgxxir\",\n  \"dataSourceId\" : \"1bp8\",\n  \"nextRunTime\" : \"2022-11-20T15:54:06.740686Z\",\n  \"name\" : \"Elizebeth Kautzer\",\n  \"disabled\" : true,\n  \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n  \"notificationPubsubTopic\" : \"l4ohpz4zzuykv6ba31vigfovbjpjxr7q2lhslaky5txhx2r7k17ejbfn5kzsyainhx4vf4mo5x4355n8lnn56ve00jj0ryz95166c3o0v56283rseabttvf92dgbtbb8fdm9hdhzflry2dr79rs7f89mlhntsa5wp4tcpp0waz1nrdz6gqm4dofot84ese87x7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f1a6cac-e990-39d9-b33c-04652bb0e824",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.create",
          "schema" : {
            "description" : "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
            "properties" : {
              "dataRefreshWindowDays" : {
                "description" : "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                "format" : "int32",
                "type" : "integer"
              },
              "dataSourceId" : {
                "description" : "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
                "type" : "string"
              },
              "datasetRegion" : {
                "description" : "Output only. Region in which BigQuery dataset is located.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "The BigQuery target dataset id.",
                "type" : "string"
              },
              "disabled" : {
                "description" : "Is this config disabled. When set to true, no runs are scheduled for a given transfer.",
                "type" : "boolean"
              },
              "displayName" : {
                "description" : "User specified display name for the data transfer.",
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "name" : {
                "description" : "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                "type" : "string"
              },
              "nextRunTime" : {
                "description" : "Output only. Next time when data transfer will run.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "type" : "string"
              },
              "ownerInfo" : {
                "$ref" : "#/components/schemas/UserInfo"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "type" : "object"
              },
              "schedule" : {
                "description" : "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
                "type" : "string"
              },
              "scheduleOptions" : {
                "$ref" : "#/components/schemas/ScheduleOptions"
              },
              "state" : {
                "description" : "Output only. State of the most recently updated transfer run.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Data transfer modification time. Ignored by server on input.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "68789f19-1f4c-3908-99e7-77ceea83bdb6",
    "name" : "Returns information about all transfer configs owned by a project in the specifi...",
    "request" : {
      "urlPath" : "/v1/b64z4njr7pu1fckeuojahj8ydkej6j29n1ujie1n4n6my/transferConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"2z1g9tmaf0jthvoc7ssj946uzu90fzcxeu5g8updtde3kmma0f0fi2u5dis\",\n  \"transferConfigs\" : [ {\n    \"destinationDatasetId\" : \"1m28\",\n    \"displayName\" : \"Darryl Doyle III\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : false,\n      \"startTime\" : \"2022-06-13T14:03:06.73834Z\",\n      \"endTime\" : \"2022-08-19T14:26:06.738373Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"4o3hzfhx7322qyqkmxei8ndu0mib9hp7pub06sy3xl6lrzpp2l1auhni5w9tuq5xtw66doxmycc21ovw\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-05-28T13:06:06.738431Z\",\n    \"datasetRegion\" : \"5d27nmb2i8v8rhal5tnnzc98lqb33qt25qoy3e80ef2td8k6955yzld8c26x73jzwyu9hs541eumnhnp4vordpgtg1k2h90yu18c7zzaltqfh9nct5isw41hz21hh0dtn4ua0kx9o94lww9h34ejxg1h7xtanf95\",\n    \"params\" : { },\n    \"userId\" : \"8rwg\",\n    \"dataRefreshWindowDays\" : 980546660,\n    \"schedule\" : \"2g26t4l6l2t\",\n    \"dataSourceId\" : \"f7h3\",\n    \"nextRunTime\" : \"2023-01-22T15:44:06.738642Z\",\n    \"name\" : \"Crystle Powlowski Sr.\",\n    \"disabled\" : true,\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"4x4oe668dsfb29pg64\"\n  }, {\n    \"destinationDatasetId\" : \"1y7q\",\n    \"displayName\" : \"Patrick Gusikowski\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : false,\n      \"startTime\" : \"2022-03-15T16:48:06.738867Z\",\n      \"endTime\" : \"2022-07-16T15:49:06.738897Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"76rrqwx4p6lceann\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-10-16T14:06:06.738943Z\",\n    \"datasetRegion\" : \"i8xgpwv0ofyndjtcv065f2k37svxxs9n946akznn1w96dws68kbg04m4ij7fo7jmwwofsxwgnixltmhffaerpnfhttdn88sp5g27q2y1wibfr4sy6iwklnj0cbb1twl1r1o\",\n    \"params\" : { },\n    \"userId\" : \"7wf9\",\n    \"dataRefreshWindowDays\" : 396348939,\n    \"schedule\" : \"pq752d6m2bti7eadlxc0y92wrfjxnzlev16j9edv7men89tn3c79ojw03t5n0kkqcmaaj94vffare6nmp4b47jspl4gxjpkp1py2w41a8dl08pmpognhc2ovt51rle6ewnzbic1sgq8nidsg4tbqy9xnz2eglsqo20zkmp4h5eu328u85abhm2ajny5xogf9vj9\",\n    \"dataSourceId\" : \"2csd\",\n    \"nextRunTime\" : \"2022-06-04T14:00:06.739129Z\",\n    \"name\" : \"Derrick Hauck\",\n    \"disabled\" : false,\n    \"state\" : \"CANCELLED\",\n    \"notificationPubsubTopic\" : \"6k2e5amr289vuj9ifs0opay9k8o0nvws6llmmrno6i1imhvgn5nchhg2so1ezakxn8qw5ozhjhog585kptiwchn\"\n  }, {\n    \"destinationDatasetId\" : \"1b91\",\n    \"displayName\" : \"Patrick King\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : true,\n      \"startTime\" : \"2022-12-31T13:29:06.739338Z\",\n      \"endTime\" : \"2022-10-20T15:44:06.739366Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"uqv\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-09-22T15:37:06.739413Z\",\n    \"datasetRegion\" : \"5kzjzafn160862zvarejeinf9q0hz27jtn38p9nn4f71b0ml4yxd57jnbbuysdmfr8ika9nd6cxqf95ov2hw4602aht0jjbv3zs3gq2r7cv6mnhmluizst\",\n    \"params\" : { },\n    \"userId\" : \"xdz7\",\n    \"dataRefreshWindowDays\" : 864996871,\n    \"schedule\" : \"d267dzw02ou31c8bb98z94ssxf2syrll63zgju86yyr0xlaohg08cfb\",\n    \"dataSourceId\" : \"4r90\",\n    \"nextRunTime\" : \"2022-07-18T15:53:06.739606Z\",\n    \"name\" : \"Mariam Roob\",\n    \"disabled\" : false,\n    \"state\" : \"PENDING\",\n    \"notificationPubsubTopic\" : \"4ueevcy8\"\n  }, {\n    \"destinationDatasetId\" : \"5454\",\n    \"displayName\" : \"Tonja Baumbach\",\n    \"scheduleOptions\" : {\n      \"disableAutoScheduling\" : true,\n      \"startTime\" : \"2023-01-25T16:45:06.739806Z\",\n      \"endTime\" : \"2022-11-19T13:41:06.739835Z\"\n    },\n    \"ownerInfo\" : {\n      \"email\" : \"jpstn111w933o0oizps9au6xeubv9npm0cbdgcii7uv0vy4nvo1q2b1cjgfj7qv3jot8fuckgs489filpuybpivypjn1a7xgmk4pk76vnfjoat5aveopsq3vf8l5uqnhflb126uclou81q65rshwuqy01lza\"\n    },\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : false\n    },\n    \"updateTime\" : \"2022-12-28T13:15:06.739881Z\",\n    \"datasetRegion\" : \"bshx79zocwiocitog5j90vp7382j6\",\n    \"params\" : { },\n    \"userId\" : \"126o\",\n    \"dataRefreshWindowDays\" : 1498299285,\n    \"schedule\" : \"xjzd80xl6zpgifno74m42xpocjlsijxr5n7b93n453l2s23rbdp6zkx7sattw4f6rr46jf1x3neygaqfnz8vom0ctcxigl7cm5\",\n    \"dataSourceId\" : \"t1bs\",\n    \"nextRunTime\" : \"2022-08-01T13:42:06.740065Z\",\n    \"name\" : \"Mariano Simonis\",\n    \"disabled\" : true,\n    \"state\" : \"PENDING\",\n    \"notificationPubsubTopic\" : \"4zdvghapp8kpqv5zhm2rar89h3rr0ntf8i4d75t56q4slqtpcqagv9n5qckyaftkr8o1qy5cwt2ku0ruxsoelfq72\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68789f19-1f4c-3908-99e7-77ceea83bdb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.list",
          "schema" : {
            "description" : "The returned list of pipelines in the project.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferConfigsRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferConfigs" : {
                "description" : "Output only. The stored pipeline transfer configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferConfig"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "3cffc71d-5afa-39f9-bfc0-228dc181fe6b",
    "name" : "Returns information about running and completed transfer runs.",
    "request" : {
      "urlPath" : "/v1/2yrelx51zm3h4ry0dmmb65fioswicm4xp30273c8tt2tmjh7wpn729j7d531i0pv6w06iuefy9p1y8705pm8qvfp453rpmsnfdrtotlyol01pbk/runs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"9h0ljmjpdykakfltk3fyrl9mqsobkfnpgrau\",\n  \"transferRuns\" : [ {\n    \"scheduleTime\" : \"2022-10-12T15:37:06.736603Z\",\n    \"destinationDatasetId\" : \"dk08\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2023-01-31T15:52:06.736716Z\",\n    \"params\" : { },\n    \"userId\" : \"q12k\",\n    \"schedule\" : \"ez8ce0cw86jp24m9lfe75o7x6x0vg7sn5rqfjtmjdft5z3fk22gsttwon1w6m7v4m7h43a85nskp0k5gmzleqfvm0k8zv20rnexgqrp24xqo99jfd95xh4jcdds6ez4pc8ynowtv6v1w3kdn3lop0q1ctdw630egnek5yhtvhq6row4gzq\",\n    \"dataSourceId\" : \"np2v\",\n    \"name\" : \"Francoise Hane\",\n    \"errorStatus\" : {\n      \"code\" : 976088519,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Minus eaque earum assumenda. In est quam. Eum at aperiam. Consequatur voluptas aut totam labore delectus.\"\n    },\n    \"startTime\" : \"2022-11-15T13:19:06.737012Z\",\n    \"endTime\" : \"2022-11-15T15:48:06.737041Z\",\n    \"runTime\" : \"2022-09-14T13:19:06.737069Z\",\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"xvz9p2omss750a0cu7em4f11eyyqykr55adra2cze1jc6fehqk1qu627iay7jscrdnbz2h7ydu4hvnnxv3ay0e7h605e11r35jlk7rwf9eiqrrodiqyqa3xff876k9r8tqb4784726h9ukhkrtn6strts5vy0ngi8zo\"\n  }, {\n    \"scheduleTime\" : \"2023-01-12T15:27:06.737127Z\",\n    \"destinationDatasetId\" : \"i616\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-07-27T14:46:06.737225Z\",\n    \"params\" : { },\n    \"userId\" : \"jt08\",\n    \"schedule\" : \"nooclk8pv0n8nb38h26w28tk4i8g8sv0q5g1an0y83sw50wyii3oeb27rmjdeoq308zxqu31hlm\",\n    \"dataSourceId\" : \"k91z\",\n    \"name\" : \"Sandy Gaylord\",\n    \"errorStatus\" : {\n      \"code\" : 383960207,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Quasi aut voluptatem non voluptas incidunt vero corrupti. Accusamus error consequatur non. Necessitatibus non libero sit provident eum distinctio. Consequatur laboriosam explicabo et consequatur cum. \"\n    },\n    \"startTime\" : \"2022-10-31T13:22:06.737487Z\",\n    \"endTime\" : \"2022-03-24T15:35:06.737514Z\",\n    \"runTime\" : \"2022-11-23T13:56:06.73754Z\",\n    \"state\" : \"TRANSFER_STATE_UNSPECIFIED\",\n    \"notificationPubsubTopic\" : \"addtfnhuyqkkutnhfd6mzfl3izd1hhcsknyos9nmhdqp37zogx1z2ddxrocd7gualmglb4odk5mhvv3umkz1dfklhh3mufmtptb4mlle6s9c9isbta06jj8lxiu40a0l0y4xnz56hku6i3u49aw40fitgiy\"\n  }, {\n    \"scheduleTime\" : \"2022-04-09T14:21:06.737591Z\",\n    \"destinationDatasetId\" : \"68u5\",\n    \"emailPreferences\" : {\n      \"enableFailureEmail\" : true\n    },\n    \"updateTime\" : \"2022-06-04T15:20:06.737688Z\",\n    \"params\" : { },\n    \"userId\" : \"c69g\",\n    \"schedule\" : \"8h2j6uuoatzoprzqairk519on\",\n    \"dataSourceId\" : \"7vh3\",\n    \"name\" : \"Emmitt Cole\",\n    \"errorStatus\" : {\n      \"code\" : 1925990990,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Ullam voluptatem et vero optio tempore. Reprehenderit consectetur labore. Sint dolorem minus.\"\n    },\n    \"startTime\" : \"2022-10-12T14:45:06.737942Z\",\n    \"endTime\" : \"2023-01-24T13:33:06.737968Z\",\n    \"runTime\" : \"2022-11-12T16:46:06.737994Z\",\n    \"state\" : \"FAILED\",\n    \"notificationPubsubTopic\" : \"ysrmwc9vboln9kncjzaef2ykxh8p4k835mq1tij1xur38p0bk6r6hjy0j4ak3cmxd658xmmbdsmx7mcxw9php91q9dnycjgfm64v\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cffc71d-5afa-39f9-bfc0-228dc181fe6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.list",
          "schema" : {
            "description" : "The returned list of pipelines in the project.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListTransferRunsRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              },
              "transferRuns" : {
                "description" : "Output only. The stored pipeline transfer runs.",
                "items" : {
                  "$ref" : "#/components/schemas/TransferRun"
                },
                "readOnly" : true,
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "0c36881d-ca0c-3956-bc65-920182b2d6ed",
    "name" : "Lists supported data sources and returns their settings.",
    "request" : {
      "urlPath" : "/v1/x2fty/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"r2okuxg87rhp1\",\n  \"dataSources\" : [ {\n    \"clientId\" : \"o6du\",\n    \"minimumScheduleInterval\" : \"q8yda8tpulamnep6444prn9r2um4608v8itgwds2wuw69js916qep8mbt2u2vskxtksbg30yanyqbkyw7xysj4ylbaoeh456lue2qib7gmyve0rcmjbc12b9zddp4s7uxgrbhdfn6698\",\n    \"defaultSchedule\" : \"w40vio765np65bwn6cyuq0f0zgbbajowvjund7ikv5ladwh5gi2g8x2i4s7ghl1k4ph0ig6yn3csjkwg\",\n    \"displayName\" : \"Dorothea Gottlieb Jr.\",\n    \"description\" : \"Beatae perspiciatis eligendi omnis consequatur laborum consequatur aut. Earum velit quo natus nihil tenetur tenetur reiciendis. Suscipit labore fuga laudantium perspiciatis. Dolores non assumenda id. \",\n    \"helpUrl\" : \"https://web.example.mocklab.io/284431\",\n    \"dataRefreshType\" : \"CUSTOM_SLIDING_WINDOW\",\n    \"dataSourceId\" : \"wkt8\",\n    \"manualRunsDisabled\" : true,\n    \"supportsCustomSchedule\" : false,\n    \"name\" : \"Zofia O'Hara III\",\n    \"supportsMultipleTransfers\" : false,\n    \"authorizationType\" : \"AUTHORIZATION_TYPE_UNSPECIFIED\",\n    \"transferType\" : \"TRANSFER_TYPE_UNSPECIFIED\",\n    \"defaultDataRefreshWindowDays\" : 979414225,\n    \"scopes\" : [ \"paj8fmss25k4p112rwnq8fz8zbgpv4a1kygi9214ppwqrxuy\", \"7k5zp54upvj93b0hbtiidhw9x33647jbh1ag6u33u4z8wni93oany8scr68y7nd6on5a0pt5are5nwi77btzpc63hv1dql3qhbquhn42vazw24jx5dfbuli2vkmpjg\" ],\n    \"parameters\" : [ {\n      \"allowedValues\" : [ \"xr5m6msx1ci64uoxo63rsnl9wktjfmx8s5lgy35yfisjnw9779830g9pu9\", \"mfkwopv1mei35snn9h2su03asif7arv7jzx2i1gulbj4uyrnhd2gsof582a1i8kfsn5bia0hs0ik9s5nqmz0mra3324u6l1xb31f8bsl3ngtb4z9p526o41mows87uw21j8jfpnlrijr3en7ovy9yopj3y3d0d3mree670k\" ],\n      \"displayName\" : \"Dorsey Gleason\",\n      \"maxValue\" : 1.4943628068296974E308,\n      \"deprecated\" : false,\n      \"description\" : \"Error in ullam adipisci in voluptate. Dolorem soluta et voluptatem. Est nihil dolores reiciendis facilis maiores. Aut consequatur quo et quia aliquid voluptate.\",\n      \"type\" : \"DOUBLE\",\n      \"repeated\" : true,\n      \"required\" : true,\n      \"validationDescription\" : \"Repudiandae cumque facilis eos odit eos. Aperiam autem quidem amet beatae eveniet. Totam perferendis sint soluta. Qui ullam delectus.\",\n      \"immutable\" : true,\n      \"minValue\" : 7.596881189985335E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/418450\",\n      \"recurse\" : true,\n      \"fields\" : [ { }, { } ],\n      \"paramId\" : \"06y2\",\n      \"validationRegex\" : \"q9mqwwsnb0x7jktajrs4gjz2mvlnp8e8u2lcu3jbcukmn3u3eq4i75s1f2et76ljuw5vrvbjyj4gg70pq0o0k68nuqes\"\n    }, {\n      \"allowedValues\" : [ \"wwn7mkvltamrty47e57guf3ofj4bxq8ldy6h7bzuy1zu2pwfl2stncpjgseuw8g0cn23sortlaj03r9i3bwy1u8fab02igr0bhwn0gf5y3l7ahbwto8u4lxybnvvi9odsijs8i2gdfd9xjysm9fpysgh5bmrxox6q4zyk7ukilkhl0p3mb23hghvnli8iw\" ],\n      \"displayName\" : \"Lon Dare\",\n      \"maxValue\" : 1.0925788516226915E308,\n      \"deprecated\" : true,\n      \"description\" : \"Ut voluptas dolorem ut. Tempore expedita nihil nobis. Delectus sed reiciendis mollitia fugiat et.\",\n      \"type\" : \"RECORD\",\n      \"repeated\" : false,\n      \"required\" : true,\n      \"validationDescription\" : \"Ex neque fuga alias et rem. Aliquam veniam ipsum dolorum ab eos. Ut iste ut et ea. Ex vero odit doloribus perferendis vel et.\",\n      \"immutable\" : true,\n      \"minValue\" : 2.738902023268917E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/331622\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { } ],\n      \"paramId\" : \"zt34\",\n      \"validationRegex\" : \"caxl88fmua8a20ltew1rhwg7niq0jsy8qw2hzmcwptm\"\n    }, {\n      \"allowedValues\" : [ \"86x3q844cc70i1h82m0xshzkvms24pjp2vl8amr8c7x1nme9q1mk76qku753n3g3qj6682b8jyunaxki2eiulyo9\", \"wsurjq7n0opgom3xln4lziawxa54bqx681kvnqejrd49nzwkhfrhbl4tc8t0pkpm4yt1b59fmxycev596h75ws1huojgf3cwoy947xjfzaleoyn2yw0d1zizabvghnmdg299cra3gw0mnoqwv5f47dqry8umywz6corke7c\", \"45n5gtlbsq1fywi1qyvr1l0m20doslvctv4rk3n2px5xf8brphvz2z2j2bo3lf4mutbum14y05nxu53heou6aysqpm7a6z52w1let7w9t8d0i2bcq6qspaqq12cdkvo6ntgbtouggm5hucqltqmmfp1d0edl1l58n7tzj8jrttd8jzx2ammf9\", \"6hy9dzfjunsqh2mdwxhbi2sz2o7edxdrtvovytxk05iorzeavr\", \"by436t3cve78nrcgk18ixqujmwr711b4xqh8ltmijbnwzmr3m4rgs1t3uzoiy963oht7pblkvcfe94ijjoqtufxxckbxmp457ntj2rorx5v7w0rc5qnpiaohmfhltjg3y5wxmd6dbzvv9kcr5xl2gkon6x19shnclr2p4lccn2w1b2y\", \"i1xpwv8xcou6ggxpzpqqjft4vftlhuoj4xbziuirt6geovmbdau7p2il33v170muwgaodl4k1hnzp267v41x21hg90dw916ziat1paoup2kc0ljnq6u921tigbi9ef4njpepia8\", \"s8vkwr3o4w083xvq3gay0984npapylq595i1k0bj8w0qhwzqozk1zl202kbhhzjhwf0z270vbjkyhrqfepnr1ooue8qysn8dqm9y5d\", \"rmo7qtb9u1rwjmwqq2obkjgfjizok7nyjh3y8f5ti9khdoi240haigsjk51hc89d0aciy77oorc04xt\" ],\n      \"displayName\" : \"Jerald Hettinger\",\n      \"maxValue\" : 2.1648960104930697E307,\n      \"deprecated\" : true,\n      \"description\" : \"Id aut natus atque pariatur sequi. Porro et suscipit ut qui. Architecto fuga recusandae.\",\n      \"type\" : \"DOUBLE\",\n      \"repeated\" : true,\n      \"required\" : true,\n      \"validationDescription\" : \"Est ut ratione facilis est vero velit dolorem. Assumenda consequuntur provident. Dicta expedita odio facere vel itaque voluptas. Id quo voluptatem.\",\n      \"immutable\" : true,\n      \"minValue\" : 7.338313028072355E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/829162\",\n      \"recurse\" : false,\n      \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"paramId\" : \"29r6\",\n      \"validationRegex\" : \"fdgmrb8kgcluhs1hsrow81dmr0864asx9oa2c7k6fne57iaeisz6iu55q4oennagjjr\"\n    }, {\n      \"allowedValues\" : [ \"bsk4te1b4tcgsspm2kfkx5smb6zl7qwtpxjesnhgwzcp90hk02tj5bde9akvvc8nfmrnrz8wy721qyae\", \"tynbqtuexijpcnht2pzz8bl4spy7ol6pplt8wz7xmjf1lj6fqp5s2xcnymjdqoamrn4izjl7ac120xvda2u90fqh4w7zkbbaiccad0soctlufax\" ],\n      \"displayName\" : \"Emmy Donnelly\",\n      \"maxValue\" : 4.084174584097971E306,\n      \"deprecated\" : false,\n      \"description\" : \"Mollitia maxime qui sed. Dolor qui sequi optio voluptates doloribus consectetur vero. Asperiores dolorum sunt sunt.\",\n      \"type\" : \"RECORD\",\n      \"repeated\" : false,\n      \"required\" : true,\n      \"validationDescription\" : \"Doloremque aut in ab omnis. Maxime velit distinctio. Repellendus quia ut quia officia magnam ut. Et quis natus similique quos sunt quaerat. Minima eius eum doloremque sed repellat.\",\n      \"immutable\" : false,\n      \"minValue\" : 3.806162534296843E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/807464\",\n      \"recurse\" : true,\n      \"fields\" : [ { }, { }, { }, { } ],\n      \"paramId\" : \"53a8\",\n      \"validationRegex\" : \"zxbz9wjy2z5iy0iypn3brw6fexhgeg9z99ewqvkf0h6pvzpxzzx0m3r84hlmbnaxws48cghiscnk8ubvo4jgxv1ef3zcweecgg0cp6tzu3bknnpcga6ucmb8axf4m3cdu6iwrkgv7zvd60jtcj95yyjbxwwnh18fdlrk672q27izewa9rslfop\"\n    }, {\n      \"allowedValues\" : [ \"iclkpvghm64vrfltcqp58rb8vmyep\", \"2vehj27uj6g2skvryycbceca8zwutyyknr7yss1nvf4q2fofseto5q4o2hmumco9g3dhe7k2yex5fhrycsildpiej708nm4fbslaekqz1k5uqwih4h2ilot4qcbv507ntzysqiznw\", \"0afgwebvmdsj1s48peg1s46q6nhdxcm9tqraeot8k9n6r6vqfvddvjbt2ztsx\", \"yuwj986jzwsulddr3e847bonlw23ekf7cm9vh1cw1varndw2tx13jdqay4c6pr579ayfv9fin11hpso0fqskpf2ltyx3bvkkdxna995fg4pb4ymd6kpvgs14l2hjb3iuw7tl301h1jiija5t5foih5qa0t8l6g35qo2rzo956e0oyo\", \"1qvfy26wdvt7hhm5tzahv0hqdpruesgg0ooy6z3lx98vpu9ch7ohppxin4nls8q4izbw2z0p\", \"c6tiv2iavyz9ku8bct3xgmhl4dz2nvu740jutrfnpxyod4v7vvgejjg4v84ajqqbazdl51lee26ylodku8vlau724y3s0rjhsim7fndyobi53tilzqjcg421nkxhtgdeh0q5nm856luoczijxihd\", \"umym1g8fa9ep56cga3nev8x16dxxit6x1c8mb0vznygxl32ngxqbt1wf42bycz3af3xn3u3cw5mf6zu0ryeezp6cskuup\" ],\n      \"displayName\" : \"Kimberli Hermann PhD\",\n      \"maxValue\" : 1.438722310527871E308,\n      \"deprecated\" : true,\n      \"description\" : \"Et et omnis aliquam nihil. Eum tempora expedita qui aliquid ut eaque qui. Aut debitis adipisci pariatur quidem. Amet et eos officiis repellendus laborum.\",\n      \"type\" : \"BOOLEAN\",\n      \"repeated\" : false,\n      \"required\" : false,\n      \"validationDescription\" : \"Est repudiandae rem quibusdam. Ut quia aut molestiae dolore. Dolor voluptas totam quos cupiditate iure.\",\n      \"immutable\" : true,\n      \"minValue\" : 2.679007939003017E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/872649\",\n      \"recurse\" : true,\n      \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"paramId\" : \"v8ro\",\n      \"validationRegex\" : \"7ss3ozo64v3oj4qkhr7k1koje3r9enq7n059qrrim428twhxe99uffp2rcqidoehbwdjx1icqq84mzo1zskhx5mlgk7b0es0x3fxnqflps199dn5n8b3vd9ga6mqd9pdwusja8k\"\n    }, {\n      \"allowedValues\" : [ \"owr8y6p31b3v06w1j7qum197140dp4a0u8c0apg300fmjnw2td53ug6ny3cieu0m8dtj5zcta3gxbgff2yxlzkrp0jv8ix6f1wit1xn3x4a4ommg3unjevw03fw4d5iuqvn8ty0b7gk6xogdiu3\", \"ww4063sl1i17sseyixgz2dgyn0oxew8kdeihej62puer7r9mg2qtoxqtmk8xhja7ljpdmz0dl3q2g2ypyo57gi7ynqy41g003bjr8vkvff2kiuxt\", \"cq9dx76qtljhwwujhz61f9mxzyjucimyn5x4sr410w8hxs0q9hctl6bd9kocqjhu1z1dshxs69ycy8ho0ufpu6cifuo3fuxw75xhvdzdipovw2x773cepudwq8e3v0fcztoseb8xw7suz21ehzmbxumc9eblew1z82ro5qrgh3f\", \"b4kepga64j5tvmarg51mrwidasfmnwu14p9palhlmtkh9n9oi5ryhgx7f197tijifqtnguds37zowx994by7nibv5txtstwo5ufreqe1ztdeac8yiyxkjtk3ki2gtkobho89494xff709zoyod0ttug4dit1zh5p32zqogb75ljpt66yfukuylfpvjdj\", \"ffg6sel31qhx8dp5mpe5pm4ijwi22g4va1wx731z32vuwtdpbtbg5phwgf85mma8vkadlecofuj3uo8osjpphofjddw7vs5n4db4oeb1qfgazngjom\" ],\n      \"displayName\" : \"Ms. Oren Thiel\",\n      \"maxValue\" : 1.5856020616982844E308,\n      \"deprecated\" : false,\n      \"description\" : \"Expedita voluptatem maiores et autem sequi facilis eos. Cupiditate architecto est impedit soluta quia. Non vel molestias id. Incidunt et atque in illum. Accusamus explicabo et.\",\n      \"type\" : \"PLUS_PAGE\",\n      \"repeated\" : false,\n      \"required\" : false,\n      \"validationDescription\" : \"Autem dolorem animi id et quaerat repellendus. Numquam illo nulla itaque aspernatur culpa aut est. Quas quis et et.\",\n      \"immutable\" : true,\n      \"minValue\" : 5.14130535170157E307,\n      \"validationHelpUrl\" : \"https://web.example.mocklab.io/627108\",\n      \"recurse\" : true,\n      \"fields\" : [ { }, { } ],\n      \"paramId\" : \"z0sx\",\n      \"validationRegex\" : \"w6oqjubuqlmucmz9y167nfyvlm5fxvzv3ysn53s2u49jquw7dsctdox2211uabh1dtrzsxz1pjc0yot1gm98bk4vlm4nnbx9rxlu4koo9w366js8xpasomjqq7xapb9zct30by6cw9j4sg6s\"\n    } ],\n    \"updateDeadlineSeconds\" : 743093640\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c36881d-ca0c-3956-bc65-920182b2d6ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.dataSources.list",
          "schema" : {
            "description" : "Returns list of supported data sources and their metadata.",
            "properties" : {
              "dataSources" : {
                "description" : "List of supported data sources and their transfer settings.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Output only. The next-pagination token. For multiple-page list results, this token can be used as the `ListDataSourcesRequest.page_token` to request the next page of list results.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "72f869ca-c294-36e2-9b3e-7d9ccb274867",
    "name" : "Enroll data sources in a user project. This allows users to create transfer conf...",
    "request" : {
      "urlPath" : "/v1/Mrs.+Elisha+Kerluke:enrollDataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72f869ca-c294-36e2-9b3e-7d9ccb274867",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.enrollDataSources",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "d85e8e2f-e68d-327f-926d-31f21c80e397",
    "name" : "Returns true if valid credentials exist for the given data source and requesting...",
    "request" : {
      "urlPath" : "/v1/Venice+Schroeder:checkValidCreds",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"hasValidCreds\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d85e8e2f-e68d-327f-926d-31f21c80e397",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.dataSources.checkValidCreds",
          "schema" : {
            "description" : "A response indicating whether the credentials exist and are valid.",
            "properties" : {
              "hasValidCreds" : {
                "description" : "If set to `true`, the credentials exist and are valid.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "1492344c-bb3d-3538-82a7-a9cb35a411d6",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Lizabeth+Gerhold/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"fvjs84iz2vnv42bnj2lydh7wgymrli29euorgyvnbd1qc2300ftq3sg2803up9wjrmnoaud8frz1017nuiotibq3isldyt3salcz0hqabbnacna8sqk1zqnqhww2xznxp03s\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Prince Dibbert\",\n    \"locationId\" : \"l1ea\",\n    \"name\" : \"Benedict Pouros\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Scottie Davis\",\n    \"locationId\" : \"2mxc\",\n    \"name\" : \"Wilbur Berge\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Elmer Smitham\",\n    \"locationId\" : \"0v0j\",\n    \"name\" : \"Gaylord Jaskolski\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Son Lehner II\",\n    \"locationId\" : \"0v51\",\n    \"name\" : \"Leoma McKenzie\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mrs. Phillis Ortiz\",\n    \"locationId\" : \"2gjo\",\n    \"name\" : \"Dr. Roger Jerde\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ms. Lory Toy\",\n    \"locationId\" : \"06wd\",\n    \"name\" : \"Sidney Reichel\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jesse Kilback\",\n    \"locationId\" : \"3r84\",\n    \"name\" : \"Antonia Rempel\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1492344c-bb3d-3538-82a7-a9cb35a411d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "9837df9f-a4cb-3886-a5a1-d95106ff4391",
    "name" : "Updates a data transfer configuration. All fields must be set, even if they are ...",
    "request" : {
      "urlPath" : "/v1/Gia+Murphy",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"destinationDatasetId\" : \"bcpz\",\n  \"displayName\" : \"Many Lakin\",\n  \"scheduleOptions\" : {\n    \"disableAutoScheduling\" : true,\n    \"startTime\" : \"2022-06-14T14:04:06.731802Z\",\n    \"endTime\" : \"2022-12-07T15:29:06.731833Z\"\n  },\n  \"ownerInfo\" : {\n    \"email\" : \"zghj9s\"\n  },\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : true\n  },\n  \"updateTime\" : \"2022-10-22T14:45:06.731888Z\",\n  \"datasetRegion\" : \"6z5r1nzgz31wjtqn8n3tc06ei6mucwpdr3b2pfsnezxebfrfolqpjai8mo1hmk9qvwckdz9xgoc8gyf1fx5zxfho39hfgck9whiay9q49rmi7o37b843liyrkq2rst7kaji4uckjwbbi3j5j61v\",\n  \"params\" : { },\n  \"userId\" : \"2946\",\n  \"dataRefreshWindowDays\" : 1319637825,\n  \"schedule\" : \"vmdshi4\",\n  \"dataSourceId\" : \"t930\",\n  \"nextRunTime\" : \"2022-07-19T14:54:06.732095Z\",\n  \"name\" : \"Justin Baumbach V\",\n  \"disabled\" : true,\n  \"state\" : \"RUNNING\",\n  \"notificationPubsubTopic\" : \"zgn8do6ug\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9837df9f-a4cb-3886-a5a1-d95106ff4391",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.patch",
          "schema" : {
            "description" : "Represents a data transfer configuration. A transfer configuration contains all metadata needed to perform a data transfer. For example, `destination_dataset_id` specifies where data should be stored. When a new transfer configuration is created, the specified `destination_dataset_id` is created when needed and shared with the appropriate data source service account.",
            "properties" : {
              "dataRefreshWindowDays" : {
                "description" : "The number of days to look back to automatically refresh the data. For example, if `data_refresh_window_days = 10`, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                "format" : "int32",
                "type" : "integer"
              },
              "dataSourceId" : {
                "description" : "Data source ID. This cannot be changed once data transfer is created. The full list of available data source IDs can be returned through an API call: https://cloud.google.com/bigquery-transfer/docs/reference/datatransfer/rest/v1/projects.locations.dataSources/list",
                "type" : "string"
              },
              "datasetRegion" : {
                "description" : "Output only. Region in which BigQuery dataset is located.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "The BigQuery target dataset id.",
                "type" : "string"
              },
              "disabled" : {
                "description" : "Is this config disabled. When set to true, no runs are scheduled for a given transfer.",
                "type" : "boolean"
              },
              "displayName" : {
                "description" : "User specified display name for the data transfer.",
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "name" : {
                "description" : "The resource name of the transfer config. Transfer config names have the form `projects/{project_id}/locations/{region}/transferConfigs/{config_id}`. Where `config_id` is usually a uuid, even though it is not guaranteed or required. The name is ignored when creating a transfer config.",
                "type" : "string"
              },
              "nextRunTime" : {
                "description" : "Output only. Next time when data transfer will run.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "type" : "string"
              },
              "ownerInfo" : {
                "$ref" : "#/components/schemas/UserInfo"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "type" : "object"
              },
              "schedule" : {
                "description" : "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: `1st,3rd monday of month 15:30`, `every wed,fri of jan,jun 13:15`, and `first sunday of quarter 00:00`. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: The minimum interval time between recurring transfers depends on the data source; refer to the documentation for your data source.",
                "type" : "string"
              },
              "scheduleOptions" : {
                "$ref" : "#/components/schemas/ScheduleOptions"
              },
              "state" : {
                "description" : "Output only. State of the most recently updated transfer run.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Data transfer modification time. Ignored by server on input.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "097c1315-3c17-3b48-ad6c-9eec5ec9aa7d",
    "name" : "Returns information about the particular transfer run.",
    "request" : {
      "urlPath" : "/v1/Catheryn+Sauer+DDS",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scheduleTime\" : \"2022-06-13T13:08:06.730892Z\",\n  \"destinationDatasetId\" : \"9owr\",\n  \"emailPreferences\" : {\n    \"enableFailureEmail\" : false\n  },\n  \"updateTime\" : \"2022-04-11T15:04:06.730999Z\",\n  \"params\" : { },\n  \"userId\" : \"k3z3\",\n  \"schedule\" : \"2mp1u8x40qcg8znus903z28tfeu3szvok5v9ga87d2jlzxs9163nttxig1oc6ig3zx39ny9ljlx2aajdnzuwsz56cgvba750iwywip9u63e\",\n  \"dataSourceId\" : \"jv05\",\n  \"name\" : \"Elden Mills\",\n  \"errorStatus\" : {\n    \"code\" : 529275945,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Ut aut eaque ea. Reiciendis nobis doloremque vero qui. Libero corrupti neque asperiores maiores ut.\"\n  },\n  \"startTime\" : \"2022-07-21T14:17:06.731292Z\",\n  \"endTime\" : \"2022-06-04T16:30:06.731321Z\",\n  \"runTime\" : \"2022-11-06T15:40:06.73135Z\",\n  \"state\" : \"SUCCEEDED\",\n  \"notificationPubsubTopic\" : \"2e2x71j6ay7r3n0i1ve3zvfhkr01q1mjsoxlwa6clwjecoauq2v1ig22hbhygu6mt6h3bxy88kmzg0d58or0hdr2w8isngcqx9nrjttejezzb1wfzd6vvlqjc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "097c1315-3c17-3b48-ad6c-9eec5ec9aa7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.get",
          "schema" : {
            "description" : "Represents a data transfer run.",
            "properties" : {
              "dataSourceId" : {
                "description" : "Output only. Data source id.",
                "readOnly" : true,
                "type" : "string"
              },
              "destinationDatasetId" : {
                "description" : "Output only. The BigQuery target dataset id.",
                "readOnly" : true,
                "type" : "string"
              },
              "emailPreferences" : {
                "$ref" : "#/components/schemas/EmailPreferences"
              },
              "endTime" : {
                "description" : "Output only. Time when transfer run ended. Parameter ignored by server for input requests.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "errorStatus" : {
                "$ref" : "#/components/schemas/Status"
              },
              "name" : {
                "description" : "The resource name of the transfer run. Transfer run names have the form `projects/{project_id}/locations/{location}/transferConfigs/{config_id}/runs/{run_id}`. The name is ignored when creating a transfer run.",
                "type" : "string"
              },
              "notificationPubsubTopic" : {
                "description" : "Output only. Pub/Sub topic where a notification will be sent after this transfer run finishes. The format for specifying a pubsub topic is: `projects/{project}/topics/{topic}`",
                "readOnly" : true,
                "type" : "string"
              },
              "params" : {
                "additionalProperties" : {
                  "description" : "Properties of the object."
                },
                "description" : "Output only. Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq",
                "readOnly" : true,
                "type" : "object"
              },
              "runTime" : {
                "description" : "For batch transfer runs, specifies the date and time of the data should be ingested.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "schedule" : {
                "description" : "Output only. Describes the schedule of this transfer run if it was created as part of a regular schedule. For batch transfer runs that are scheduled manually, this is empty. NOTE: the system might choose to delay the schedule depending on the current load, so `schedule_time` doesn't always match this.",
                "readOnly" : true,
                "type" : "string"
              },
              "scheduleTime" : {
                "description" : "Minimum time after which a transfer run can be started.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Output only. Time when transfer run was started. Parameter ignored by server for input requests.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Data transfer run state. Ignored for input requests.",
                "enum" : [ "TRANSFER_STATE_UNSPECIFIED", "PENDING", "RUNNING", "SUCCEEDED", "FAILED", "CANCELLED" ],
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last time the data transfer run state was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "userId" : {
                "description" : "Deprecated. Unique ID of the user on whose behalf transfer is done.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "18497443-1299-3596-a061-8cf246a10a6a",
    "name" : "Deletes the specified transfer run.",
    "request" : {
      "urlPath" : "/v1/Buck+Hintz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18497443-1299-3596-a061-8cf246a10a6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "bigquerydatatransfer.projects.transferConfigs.runs.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  } ]
}