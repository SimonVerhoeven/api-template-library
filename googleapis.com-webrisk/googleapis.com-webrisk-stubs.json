{
  "mappings" : [ {
    "id" : "69a29cb4-22fb-4b42-8695-45b2d90a1c96",
    "name" : "Submits a URI suspected of containing malicious content to be reviewed. Returns ...",
    "request" : {
      "urlPath" : "/v1/9xv5005nv3b10kdv93hqrsx7vosm56c0htau0gx8vpeh0jahmyua4dj8hs6lhcnf09mkdvv/uris:submit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Elaine Stoltenberg\",\n  \"error\" : {\n    \"code\" : 1447733614,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Dolor molestiae quis quaerat est nesciunt hic provident. Rerum dolores eum molestiae voluptatibus eos ipsum. Esse et amet repellat eum adipisci ea. Quas magni sit libero maxime quibusdam voluptates fu\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69a29cb4-22fb-4b42-8695-45b2d90a1c96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.821691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.uris.submit",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Contains a `SubmitUriMetadata` object.",
                "type" : "object"
              },
              "name" : {
                "description" : "Matches the `/v1/{project-name}/operations/{operation-id}` pattern.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aa980e5a-2fe3-483d-b668-ee3460b7e0b1",
    "name" : "Creates a Submission of a URI suspected of containing phishing content to be rev...",
    "request" : {
      "urlPath" : "/v1/cdddtj1edf9gifowc6si6zojjaab65a9ng7ulni19dm21m73m7f3p7riwmitq4pc8wfos7sa8ctdbjrn82evkgg57g7jvjvbdm9m0i930vcak47xtxsdrbnyt140c8kqhso9y27doed5zu99qaud90gm1gu17ogsdlq4q9h15yohmttb5838/submissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"threatTypes\" : [ \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"SOCIAL_ENGINEERING\", \"UNWANTED_SOFTWARE\", \"SOCIAL_ENGINEERING\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\" ],\n  \"uri\" : \"https://web.example.mocklab.io/517659\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa980e5a-2fe3-483d-b668-ee3460b7e0b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.821468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.submissions.create",
          "schema" : {
            "description" : "Wraps a URI that might be displaying malicious content.",
            "properties" : {
              "threatTypes" : {
                "description" : "ThreatTypes found to be associated with the submitted URI after reviewing it. This might be empty if the URI was not added to any list.",
                "items" : {
                  "enum" : [ "THREAT_TYPE_UNSPECIFIED", "MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE", "SOCIAL_ENGINEERING_EXTENDED_COVERAGE" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "uri" : {
                "description" : "Required. The URI that is being reported for malicious content to be analyzed.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "759c4f21-e6aa-4634-8ab1-744d3cac0ca5",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Mr.+Yong+Lynch:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "759c4f21-e6aa-4634-8ab1-744d3cac0ca5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.821263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b4c65538-2496-4580-8739-19114fb4d1e2",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Chas+Harber/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Melissa Altenwerth\",\n    \"error\" : {\n      \"code\" : 959795026,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Molestiae facilis distinctio. Assumenda quis in. Vero nulla ex.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Alvaro Cassin\",\n    \"error\" : {\n      \"code\" : 1551741637,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Est ullam porro velit est eos eius. Velit consequatur maiores dolores. Error eligendi quis suscipit minus. Unde alias magni minus corporis autem voluptas sed. Error et consectetur sunt.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ricky Stroman\",\n    \"error\" : {\n      \"code\" : 1405533833,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Repellat error veniam ullam eos. Ea officia totam quis. Et voluptatem quo accusantium cupiditate. Quidem quos rerum velit vel voluptates illo.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dee Willms PhD\",\n    \"error\" : {\n      \"code\" : 2146277837,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Deleniti at quam. Reprehenderit quia fugit autem dicta in nesciunt molestias. Quia ut ab ea error deserunt sequi perspiciatis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Elijah Pouros\",\n    \"error\" : {\n      \"code\" : 1219918842,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Aperiam incidunt architecto minima ipsum voluptas excepturi eaque. Voluptatem ullam excepturi beatae assumenda dolorem. Nobis dolorum aut. Provident illum sint et.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Victor Crist\",\n    \"error\" : {\n      \"code\" : 1157048308,\n      \"details\" : [ { } ],\n      \"message\" : \"Sit repellat doloribus labore illo. Dolorem rem veritatis. Dolorem vel repellat ipsa aut. Qui ut rem et molestias sed.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ira Gorczany\",\n    \"error\" : {\n      \"code\" : 1605196642,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Et magni omnis velit nobis dolores iusto. Recusandae non in est repellat. Dolorem reiciendis illum consequatur commodi natus voluptatem. Voluptatem nulla aut aut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Ela Schmitt\",\n    \"error\" : {\n      \"code\" : 1901127794,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolores sint suscipit odio quia dolores nulla aliquam. Et eius velit nihil aut odio. Numquam est aut maiores voluptates veniam voluptatum aut. Consequatur necessitatibus et impedit incidunt fugiat con\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"84jqs31pz0ya9a29z1vdayw43400xkn1jmh9l7hnxne9w8yxfqzqbjw0tz0qnw21hn9lc763pb8yxkokk5rqkeq0utt297b4fka9k2m84cpo5wb53\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4c65538-2496-4580-8739-19114fb4d1e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.821173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "93b8dbfd-6054-48e2-b6fa-50c263ddf9bc",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Melvin+Barrows",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Vaughn Denesik Sr.\",\n  \"error\" : {\n    \"code\" : 1325052902,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Aspernatur non itaque sunt sit. Commodi voluptatibus assumenda facere ea. Qui sed quaerat blanditiis blanditiis qui qui. Explicabo vel nesciunt nulla esse dolorum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93b8dbfd-6054-48e2-b6fa-50c263ddf9bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.820063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Contains a `SubmitUriMetadata` object.",
                "type" : "object"
              },
              "name" : {
                "description" : "Matches the `/v1/{project-name}/operations/{operation-id}` pattern.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "721713cd-550d-4771-85ed-6ccbf5fd04a5",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Nada+Bernier",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "721713cd-550d-4771-85ed-6ccbf5fd04a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.819768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "717f70a8-85f4-41d9-8a57-af64ca76a89b",
    "name" : "This method is used to check whether a URI is on a given threatList. Multiple th...",
    "request" : {
      "urlPath" : "/v1/uris:search",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"threat\" : {\n    \"threatTypes\" : [ \"THREAT_TYPE_UNSPECIFIED\", \"UNWANTED_SOFTWARE\" ],\n    \"expireTime\" : \"2023-01-20T13:42:17.819613Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "717f70a8-85f4-41d9-8a57-af64ca76a89b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.819659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.uris.search",
          "schema" : {
            "properties" : {
              "threat" : {
                "$ref" : "#/components/schemas/GoogleCloudWebriskV1SearchUrisResponseThreatUri"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9cb83e83-ba61-4517-a8c7-49b5b9978e09",
    "name" : "Gets the most recent threat list diffs. These diffs should be applied to a local...",
    "request" : {
      "urlPath" : "/v1/threatLists:computeDiff",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"responseType\" : \"DIFF\",\n  \"newVersionToken\" : \"atq33mh44vg3w4fvgukxfbck678lh8nx1q8o0xikw3ujp3ugvcxpw4je6wfwgtb48dogec4gzm4foysh6qidn29wgbwojoj4crrh4e7qtmq5li3pkh3h9p6r\",\n  \"additions\" : {\n    \"riceHashes\" : {\n      \"riceParameter\" : 1935395806,\n      \"entryCount\" : 1598748498,\n      \"firstValue\" : \"a7oy5vifn5jrwsay1v9d4prmbxzgywumoerjnyc9c6t5xz1fxhsk63d02vedslam7fjc6t35maa69bybzz77u97uh6t8uvyaqvd0x1oe6u1o6yumwqacm10njj15gwgj2d16pbc4vheddn6i79gps5qrkmd712e9xr6rmmt35g2qtihdc91\",\n      \"encodedData\" : \"i161wa1y7boeu29bmymta0pibh2nizl9zoq672r541ld7zz6oxhm74tygjo90g3jm7871v1s4cth7pfj46nkh37h9ojf1a5jybpgpt4nrs\"\n    },\n    \"rawHashes\" : [ {\n      \"rawHashes\" : \"b2oww9cnl973bmqeyn3dt0qnxvatzh7y83knwf97fu5twny7ye2f60\",\n      \"prefixSize\" : 615117066\n    }, {\n      \"rawHashes\" : \"6azxcn9gvf1m17tmcssl3v45h84drx12of9c3nbciiqx2zcj4u30f2xw3wp36oeqxez04lwcb00g1igssw1pd26622q41otytnpjhzk8di4b5xgn8ymnyielat2z4bzovrp1znnwtnirc38uwc1\",\n      \"prefixSize\" : 163570081\n    } ]\n  },\n  \"recommendedNextDiff\" : \"807gsg6t41uchbhh9emgga9igexwqxbgi3n6grjz823sdj0x4o6o4ym9eea5tqzpw249wmgplleimcia1vxzhpp3uajakx6kso5646uvijugvrdpmcii8y08dnzh1oqrcfr\",\n  \"checksum\" : {\n    \"sha256\" : \"4fj7tvom936x1ofh09wwrb1g3ahu5jlltososecxbz4tl3lsqpge3ousb7ngn7g5tbwiqqmzdu66m0n9xdotdsjtgltdzq224dldkns4kouhsbh5pt0g47t3chp3729my5d0u\"\n  },\n  \"removals\" : {\n    \"rawIndices\" : {\n      \"indices\" : [ 715936989, 2144083383, 145863497, 1681903207, 182081850, 520614934, 819515323, 219649361 ]\n    },\n    \"riceIndices\" : {\n      \"riceParameter\" : 2021865626,\n      \"entryCount\" : 1276615349,\n      \"firstValue\" : \"85ct6y2jmqw1mlml4hr\",\n      \"encodedData\" : \"yjun6r8mts4a7d0wp474uhzpjs8xo29aa4d3s08xu49qkhg8d51qbdf1wrk2w4e5yhflloavrmd1d9ki2sgaavp9v99lr368i0jnnwcmtidtb9oglfvzjp4stvhjhqv8xzvsgmtugwhhie041knlmd4bal6qyi\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cb83e83-ba61-4517-a8c7-49b5b9978e09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.819496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.threatLists.computeDiff",
          "schema" : {
            "properties" : {
              "additions" : {
                "$ref" : "#/components/schemas/GoogleCloudWebriskV1ThreatEntryAdditions"
              },
              "checksum" : {
                "$ref" : "#/components/schemas/GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum"
              },
              "newVersionToken" : {
                "description" : "The new opaque client version token. This should be retained by the client and passed into the next call of ComputeThreatListDiff as 'version_token'. A separate version token should be stored and used for each threatList.",
                "format" : "byte",
                "type" : "string"
              },
              "recommendedNextDiff" : {
                "description" : "The soonest the client should wait before issuing any diff request. Querying sooner is unlikely to produce a meaningful diff. Waiting longer is acceptable considering the use case. If this field is not set clients may update as soon as they want.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "removals" : {
                "$ref" : "#/components/schemas/GoogleCloudWebriskV1ThreatEntryRemovals"
              },
              "responseType" : {
                "description" : "The type of response. This may indicate that an action must be taken by the client when the response is received.",
                "enum" : [ "RESPONSE_TYPE_UNSPECIFIED", "DIFF", "RESET" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c9abcfd6-bb5c-4d72-8d1b-08a6347a7ad7",
    "name" : "Gets the full hashes that match the requested hash prefix. This is used after a ...",
    "request" : {
      "urlPath" : "/v1/hashes:search",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"negativeExpireTime\" : \"2022-09-09T17:15:17.814796Z\",\n  \"threats\" : [ {\n    \"threatTypes\" : [ \"SOCIAL_ENGINEERING\", \"THREAT_TYPE_UNSPECIFIED\", \"UNWANTED_SOFTWARE\", \"SOCIAL_ENGINEERING\", \"MALWARE\" ],\n    \"expireTime\" : \"2022-11-29T17:27:17.815022Z\",\n    \"hash\" : \"08a50vdtkrqdm85je8t33my3rc8tdpm2idn0s1cpgv7w67kqnyfivcxph9sk4knob8q4xworg6ntxddkhftkq60vsr6nz546fo1hzaqmzsvfhysw0scss42lxxqeif61eiairilnj47ccexifw5gujr1jcbd22oo3au5r0m4i2nixp1frcmam5cx0jnr5af3qn1gpff\"\n  }, {\n    \"threatTypes\" : [ \"MALWARE\", \"SOCIAL_ENGINEERING\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"UNWANTED_SOFTWARE\", \"MALWARE\", \"UNWANTED_SOFTWARE\" ],\n    \"expireTime\" : \"2022-09-30T14:31:17.81535Z\",\n    \"hash\" : \"840tzoglyfv0hccfbqn6yoio9remeb41h6eh9o2e6uqf8m3ur3o3o239tr4jykl4odhxnpn03tkmbljzv5iq8zyxq32atcpnhoqs5fmrs69abzd92qkjh3wvnnywk8lq441kvy8ybllrhzgl9ahehil356rtx9w3452ny64st\"\n  }, {\n    \"threatTypes\" : [ \"THREAT_TYPE_UNSPECIFIED\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"THREAT_TYPE_UNSPECIFIED\", \"UNWANTED_SOFTWARE\", \"SOCIAL_ENGINEERING\", \"UNWANTED_SOFTWARE\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\" ],\n    \"expireTime\" : \"2022-09-27T14:56:17.815587Z\",\n    \"hash\" : \"3st5kkxpxb13n78obsdb7e7rgaeoqouici7t0oosgn9wmsoek87a4yg33insz0x4302hjhg2gbj094el5wopt208nbrp0gv4386f\"\n  }, {\n    \"threatTypes\" : [ \"UNWANTED_SOFTWARE\", \"MALWARE\", \"MALWARE\", \"THREAT_TYPE_UNSPECIFIED\", \"UNWANTED_SOFTWARE\", \"SOCIAL_ENGINEERING\" ],\n    \"expireTime\" : \"2022-11-15T14:50:17.815788Z\",\n    \"hash\" : \"1uqltkdtum5fvub06won1k56hdcx65oyltpsv1zu5lz8pnqrte5i3gglh3mfu2ihbyq01ld8jkbjow5uef5gildc2r4kdwv0ehziqjnt3lpw49lb7pxxbexnbvz2igj4d\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9abcfd6-bb5c-4d72-8d1b-08a6347a7ad7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:17.816169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.hashes.search",
          "schema" : {
            "properties" : {
              "negativeExpireTime" : {
                "description" : "For requested entities that did not match the threat list, how long to cache the response until.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "threats" : {
                "description" : "The full hashes that matched the requested prefixes. The hash will be populated in the key.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudWebriskV1SearchHashesResponseThreatHash"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}