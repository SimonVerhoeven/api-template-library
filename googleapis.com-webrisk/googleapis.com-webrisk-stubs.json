{
  "mappings" : [ {
    "id" : "e240fb10-c493-468c-8b35-d7818c596593",
    "name" : "Submits a URI suspected of containing malicious content to be reviewed. Returns ...",
    "request" : {
      "urlPath" : "/v1/z9v5ng2o4jto66rkffuin01w99k1lqj8uenagpchehsbykx4tmuoar46rr0hnmmw9zkfm8tgl59kr7951vlh7bmlhtr4wk/uris:submit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Nathanial Harris\",\n  \"error\" : {\n    \"code\" : 1471191821,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Aut et earum porro deleniti. Ipsum hic quidem impedit commodi laboriosam quis. Quidem rerum labore voluptate nihil ipsa sunt. Et et et fuga qui facere. Omnis odit debitis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e240fb10-c493-468c-8b35-d7818c596593",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.723916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.uris.submit",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Contains a `SubmitUriMetadata` object.",
                "type" : "object"
              },
              "name" : {
                "description" : "Matches the `/v1/{project-name}/operations/{operation-id}` pattern.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8584f20d-b403-4d90-a9f7-a1774eb426fd",
    "name" : "Creates a Submission of a URI suspected of containing phishing content to be rev...",
    "request" : {
      "urlPath" : "/v1/eiwn29igc8ee2tw5g4qd9gb1q1yz1av6bvxlqt0i3nuroq52i1ngl6nk9wsxp98tr5v6oyy2y8bso4rvppb797grxricusc528e4rwb1w7bzyh1f482aknerr64xbw6qrsrwf3gznfsanlwjdlpof2fnrtaqhsrikokzto1zphcv/submissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"threatTypes\" : [ \"UNWANTED_SOFTWARE\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"SOCIAL_ENGINEERING\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"MALWARE\" ],\n  \"uri\" : \"https://web.example.mocklab.io/180179\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8584f20d-b403-4d90-a9f7-a1774eb426fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.723623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.submissions.create",
          "schema" : {
            "description" : "Wraps a URI that might be displaying malicious content.",
            "properties" : {
              "threatTypes" : {
                "description" : "ThreatTypes found to be associated with the submitted URI after reviewing it. This might be empty if the URI was not added to any list.",
                "items" : {
                  "enum" : [ "THREAT_TYPE_UNSPECIFIED", "MALWARE", "SOCIAL_ENGINEERING", "UNWANTED_SOFTWARE", "SOCIAL_ENGINEERING_EXTENDED_COVERAGE" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "uri" : {
                "description" : "Required. The URI that is being reported for malicious content to be analyzed.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "501a1516-1666-4b68-95e2-7b8adc6dae1d",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Weldon+O%27Connell:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "501a1516-1666-4b68-95e2-7b8adc6dae1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.723268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2fd0663-c2b0-4128-ae47-88cd21a637bd",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Nathanial+Kub+V/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chance Stracke\",\n    \"error\" : {\n      \"code\" : 237429390,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Molestias mollitia voluptatum et et. Odio dolores et expedita quidem vel rerum quis. Omnis dolores aut eos voluptatum modi.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Raymundo Wisozk\",\n    \"error\" : {\n      \"code\" : 108235448,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Et modi rerum. Suscipit facilis voluptatem velit exercitationem exercitationem voluptatibus. Consectetur similique ad voluptas quod eum.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"vhvyugvxdcygug1cwf3r4424jqsksi1eo60zk2iwy6jed64gjjtc4jlnt8cvb6q6ni1ln4llydwm0mryqw20qhwqkt4q9qsrbijdm66atla1yry7ds9zrh0sslu8qd0h9iohhth6v1eh9xpuopimb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2fd0663-c2b0-4128-ae47-88cd21a637bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.723105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "daa2a7db-19f0-4520-8042-0c2d9a3a3813",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Palmer+Lubowitz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Alvaro MacGyver\",\n  \"error\" : {\n    \"code\" : 745886186,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Adipisci aliquid est repellat. Tempore aperiam sit odit non omnis corporis. Dolor labore est reprehenderit in.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "daa2a7db-19f0-4520-8042-0c2d9a3a3813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.722647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Contains a `SubmitUriMetadata` object.",
                "type" : "object"
              },
              "name" : {
                "description" : "Matches the `/v1/{project-name}/operations/{operation-id}` pattern.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2a465009-5f5d-4a95-bb3f-22b78c23b157",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Earnest+Lebsack+Jr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a465009-5f5d-4a95-bb3f-22b78c23b157",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.722347Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.projects.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "759d817a-81f5-4be6-a835-09e3492dae94",
    "name" : "This method is used to check whether a URI is on a given threatList. Multiple th...",
    "request" : {
      "urlPath" : "/v1/uris:search",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"threat\" : {\n    \"threatTypes\" : [ \"SOCIAL_ENGINEERING\", \"UNWANTED_SOFTWARE\", \"THREAT_TYPE_UNSPECIFIED\", \"UNWANTED_SOFTWARE\" ],\n    \"expireTime\" : \"2022-09-22T11:39:47.722176Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "759d817a-81f5-4be6-a835-09e3492dae94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.722227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.uris.search",
          "schema" : {
            "properties" : {
              "threat" : {
                "$ref" : "#/components/schemas/GoogleCloudWebriskV1SearchUrisResponseThreatUri"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "43cf62eb-1a35-478a-871f-b41c7ee6296d",
    "name" : "Gets the most recent threat list diffs. These diffs should be applied to a local...",
    "request" : {
      "urlPath" : "/v1/threatLists:computeDiff",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"responseType\" : \"RESET\",\n  \"newVersionToken\" : \"ezojel9u3xvy39dj15ay33q5xke5579eq9uzpn9gglx90ngknabmtsmavxsbx7kxydrkbk695abr8\",\n  \"additions\" : {\n    \"riceHashes\" : {\n      \"riceParameter\" : 280398068,\n      \"entryCount\" : 2024128757,\n      \"firstValue\" : \"x23a895mzuyum25xp2cd1arr5f8hvdg46zkt63mayd8hboggpa7ozir5448r54a0nrpx9vfi7l3jam79ss3q0zpp74eaisnagyxy0hb3k6lzyur38a8sb\",\n      \"encodedData\" : \"vm404squhrziaj1wue8qxon9o7m9yh90os0v5ucy8se96l43gjoyp2ype05c3yay2ptyu98vubcwhii5ep3wcjg5fo5povb5ghsfkdqp0nzv9go5\"\n    },\n    \"rawHashes\" : [ {\n      \"rawHashes\" : \"kzj0wcp9ax97iuiqf7v8ks1plmydbdnant5yk5m14dovq7woxhllc2qhhxiqhw3pv370dx4x4ka525vkz3jp1t6r6bo99do3wbkmkx8ai0t4n7m2ovfvcx7za6g4rlddhic8vzaba3wowxzx721q5rrafqbqwjjywor6elh9\",\n      \"prefixSize\" : 803630590\n    }, {\n      \"rawHashes\" : \"byqarwyh8eo975d3x7kl5kog4wnerrs5srq5winutmk1\",\n      \"prefixSize\" : 1611028067\n    }, {\n      \"rawHashes\" : \"h8j5zdhwmbrjbse5cyff7\",\n      \"prefixSize\" : 1801724139\n    }, {\n      \"rawHashes\" : \"me0irtccz59ozd4rkdocvbq4y1f9itewvrt6fpu2blzttvvbqecq8iepvv2zeto6bszbrciofqcerd6glot07lf1rga3v6gjx1vrpcc33kwhp33v4shrvocj\",\n      \"prefixSize\" : 1047146804\n    }, {\n      \"rawHashes\" : \"0gt9kroplgcdhuur\",\n      \"prefixSize\" : 707371645\n    } ]\n  },\n  \"recommendedNextDiff\" : \"7i73fvc3xklm\",\n  \"checksum\" : {\n    \"sha256\" : \"nskpiwpqmsd0mixbi8q8c7n26z608lsp9mrndtrh9t90btoof7x0fc2zsljjjs3ck363pjkhf6pnht37l8yk5z2ozaga6bv4psmsuhb\"\n  },\n  \"removals\" : {\n    \"rawIndices\" : {\n      \"indices\" : [ 649667141, 234674888, 1372588914, 327156550, 252636256, 353188180 ]\n    },\n    \"riceIndices\" : {\n      \"riceParameter\" : 319346754,\n      \"entryCount\" : 1754102166,\n      \"firstValue\" : \"f7vrtkj85x8budam\",\n      \"encodedData\" : \"445sxlky8ba1tfa6evtyeb3jl75x3kkxuhjcgkjfe5nb2b4sztj43hf9z52r323u0aiovlb8p8rq1nhtf69opfe5z6wxlxa9m7v1axm3sd0jw3czghxuuykizveabeuawpou9ctu0er5hya4za5f1lqvxqgu4xro5mvvld2v91x10dq1nt3ie9b\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43cf62eb-1a35-478a-871f-b41c7ee6296d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.722102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.threatLists.computeDiff",
          "schema" : {
            "properties" : {
              "additions" : {
                "$ref" : "#/components/schemas/GoogleCloudWebriskV1ThreatEntryAdditions"
              },
              "checksum" : {
                "$ref" : "#/components/schemas/GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum"
              },
              "newVersionToken" : {
                "description" : "The new opaque client version token. This should be retained by the client and passed into the next call of ComputeThreatListDiff as 'version_token'. A separate version token should be stored and used for each threatList.",
                "format" : "byte",
                "type" : "string"
              },
              "recommendedNextDiff" : {
                "description" : "The soonest the client should wait before issuing any diff request. Querying sooner is unlikely to produce a meaningful diff. Waiting longer is acceptable considering the use case. If this field is not set clients may update as soon as they want.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "removals" : {
                "$ref" : "#/components/schemas/GoogleCloudWebriskV1ThreatEntryRemovals"
              },
              "responseType" : {
                "description" : "The type of response. This may indicate that an action must be taken by the client when the response is received.",
                "enum" : [ "RESPONSE_TYPE_UNSPECIFIED", "DIFF", "RESET" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5fa10168-3d9f-40da-94ae-d24ac09a679b",
    "name" : "Gets the full hashes that match the requested hash prefix. This is used after a ...",
    "request" : {
      "urlPath" : "/v1/hashes:search",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"negativeExpireTime\" : \"2022-07-31T12:30:47.720987Z\",\n  \"threats\" : [ {\n    \"threatTypes\" : [ \"MALWARE\", \"UNWANTED_SOFTWARE\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"UNWANTED_SOFTWARE\", \"SOCIAL_ENGINEERING\", \"MALWARE\" ],\n    \"expireTime\" : \"2022-08-24T11:32:47.721068Z\",\n    \"hash\" : \"5q1grletlx1nzc83k5\"\n  }, {\n    \"threatTypes\" : [ \"UNWANTED_SOFTWARE\", \"UNWANTED_SOFTWARE\", \"MALWARE\", \"UNWANTED_SOFTWARE\", \"MALWARE\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\" ],\n    \"expireTime\" : \"2022-05-14T13:17:47.721145Z\",\n    \"hash\" : \"70repszqot4ugzc9puklghylzodw50l13dtysi3s5b\"\n  }, {\n    \"threatTypes\" : [ \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"THREAT_TYPE_UNSPECIFIED\", \"SOCIAL_ENGINEERING\", \"THREAT_TYPE_UNSPECIFIED\", \"MALWARE\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\", \"UNWANTED_SOFTWARE\" ],\n    \"expireTime\" : \"2022-11-06T13:29:47.721219Z\",\n    \"hash\" : \"c3aznrdaa8gqyax1h72kmtbit573m4\"\n  }, {\n    \"threatTypes\" : [ \"UNWANTED_SOFTWARE\", \"THREAT_TYPE_UNSPECIFIED\", \"MALWARE\", \"MALWARE\", \"UNWANTED_SOFTWARE\" ],\n    \"expireTime\" : \"2022-08-02T12:13:47.721283Z\",\n    \"hash\" : \"ebunma39rwu4tbgth0660j7hnytyxkxzhmljftw62opamwg5nxjnipof7l0318g7nbw44fve9jlbq90kuwp9lg21q1fhyj9hw3bzaksjo5zvg3rafnamkg4cjng8csrhl6uru4c8x3d6q05722kzfx6zj64f7nnh239e9zuiigr0\"\n  }, {\n    \"threatTypes\" : [ \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\" ],\n    \"expireTime\" : \"2023-01-09T11:01:47.721342Z\",\n    \"hash\" : \"cjon8tu0yh1cohrueydpiql65nwsq8y58bpng9h85vl47yf6ctuq225qmr5nuc0vpv4xwm626pwf9gnckujjc5x6no6gpbquu547ypydvj1vg5d07m7m54tt74wm9um5vdmf0trh2k\"\n  }, {\n    \"threatTypes\" : [ \"SOCIAL_ENGINEERING\", \"THREAT_TYPE_UNSPECIFIED\", \"THREAT_TYPE_UNSPECIFIED\", \"UNWANTED_SOFTWARE\", \"THREAT_TYPE_UNSPECIFIED\", \"SOCIAL_ENGINEERING_EXTENDED_COVERAGE\" ],\n    \"expireTime\" : \"2022-11-27T13:20:47.721417Z\",\n    \"hash\" : \"b44mhze9bsgy6rqm2iu8qrbopo3aj7yzx15lajbjvf6chpd5mxtjb6egqmepoth9wsk5r98v492lxjybi1guwhr8e5h5vck3htgq3udkoiwp98fv4oqfg1mnypwhycdybvhtv2qf2ydaq9pyq\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fa10168-3d9f-40da-94ae-d24ac09a679b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:47.721568Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "webrisk.hashes.search",
          "schema" : {
            "properties" : {
              "negativeExpireTime" : {
                "description" : "For requested entities that did not match the threat list, how long to cache the response until.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "threats" : {
                "description" : "The full hashes that matched the requested prefixes. The hash will be populated in the key.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudWebriskV1SearchHashesResponseThreatHash"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}